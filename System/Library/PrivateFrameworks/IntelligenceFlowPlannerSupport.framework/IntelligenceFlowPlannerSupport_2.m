uint64_t sub_25357BCCC(unsigned __int8 a1, char a2)
{
  char v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = 0xEB00000000656761;
  v4 = 0x75676E616C2E6561;
  v5 = a1;
  v6 = 0x75676E616C2E6561;
  v7 = 0xEB00000000656761;
  switch(v5)
  {
    case 1:
      v6 = 0x75676E616C2E6669;
      break;
    case 2:
      v6 = 0x75676E616C2E6772;
      break;
    case 3:
      v6 = 0x75676E616C2E6C6ELL;
      break;
    case 4:
      v6 = 0x73697373612E6C6ELL;
      v7 = 0xEC000000746E6174;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      v4 = 0x75676E616C2E6669;
      break;
    case 2:
      v4 = 0x75676E616C2E6772;
      break;
    case 3:
      v4 = 0x75676E616C2E6C6ELL;
      break;
    case 4:
      v4 = 0x73697373612E6C6ELL;
      v3 = 0xEC000000746E6174;
      break;
    default:
      break;
  }
  if (v6 == v4 && v7 == v3) {
    sub_253592D9C();
  }
  else {
    v2 = sub_253592684();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_25357BE30(char a1, char a2)
{
  unint64_t v4 = 0xE100000000000000;
  uint64_t v5 = 61;
  switch(a1)
  {
    case 1:
      unint64_t v4 = 0xE200000000000000;
      uint64_t v5 = 15649;
      break;
    case 2:
      uint64_t v5 = 62;
      break;
    case 3:
      unint64_t v4 = 0xE200000000000000;
      uint64_t v5 = 15678;
      break;
    case 4:
      uint64_t v5 = 60;
      break;
    case 5:
      unint64_t v4 = 0xE200000000000000;
      uint64_t v5 = 15676;
      break;
    case 6:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v5 = 0x736E6961746E6F63;
      break;
    case 7:
      uint64_t v5 = 0x666572705F736168;
      goto LABEL_10;
    case 8:
      uint64_t v5 = 0x666675735F736168;
LABEL_10:
      unint64_t v4 = 0xEA00000000007869;
      break;
    case 9:
      uint64_t v5 = 0x65777465625F7369;
      unint64_t v4 = 0xEA00000000006E65;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE100000000000000;
  uint64_t v7 = 61;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE200000000000000;
      uint64_t v7 = 15649;
      break;
    case 2:
      uint64_t v7 = 62;
      break;
    case 3:
      unint64_t v6 = 0xE200000000000000;
      uint64_t v7 = 15678;
      break;
    case 4:
      uint64_t v7 = 60;
      break;
    case 5:
      unint64_t v6 = 0xE200000000000000;
      uint64_t v7 = 15676;
      break;
    case 6:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v7 = 0x736E6961746E6F63;
      break;
    case 7:
      uint64_t v7 = 0x666572705F736168;
      goto LABEL_21;
    case 8:
      uint64_t v7 = 0x666675735F736168;
LABEL_21:
      unint64_t v6 = 0xEA00000000007869;
      break;
    case 9:
      uint64_t v7 = 0x65777465625F7369;
      unint64_t v6 = 0xEA00000000006E65;
      break;
    default:
      break;
  }
  if (v5 == v7 && v4 == v6) {
    sub_253592A6C();
  }
  else {
    char v2 = sub_253592308();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_25357C060(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xEC00000064726177;
  uint64_t v4 = 0x726F466563696F76;
  uint64_t v5 = a1;
  uint64_t v6 = 0x726F466563696F76;
  unint64_t v7 = 0xEC00000064726177;
  switch(v5)
  {
    case 1:
      uint64_t v6 = 0x6C6E4F6563696F76;
      unint64_t v7 = 0xE900000000000079;
      break;
    case 2:
      uint64_t v6 = 0x4679616C70736964;
      unint64_t v7 = 0xEE0064726177726FLL;
      break;
    case 3:
      uint64_t v6 = 0x4F79616C70736964;
      unint64_t v7 = 0xEB00000000796C6ELL;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      uint64_t v4 = 0x6C6E4F6563696F76;
      unint64_t v3 = 0xE900000000000079;
      break;
    case 2:
      uint64_t v4 = 0x4679616C70736964;
      unint64_t v3 = 0xEE0064726177726FLL;
      break;
    case 3:
      uint64_t v4 = 0x4F79616C70736964;
      unint64_t v3 = 0xEB00000000796C6ELL;
      break;
    default:
      break;
  }
  if (v6 == v4 && v7 == v3) {
    sub_253592D9C();
  }
  else {
    char v2 = sub_253592684();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_25357C20C(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 1868852853;
  }
  else {
    uint64_t v4 = 0x6D726F66726570;
  }
  if (v3) {
    unint64_t v5 = 0xE700000000000000;
  }
  else {
    unint64_t v5 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v6 = 1868852853;
  }
  else {
    uint64_t v6 = 0x6D726F66726570;
  }
  if (a2) {
    unint64_t v7 = 0xE400000000000000;
  }
  else {
    unint64_t v7 = 0xE700000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_253592A6C();
  }
  else {
    char v2 = sub_253592308();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_25357C298(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xD000000000000014;
  unint64_t v4 = 0x8000000253B0B1C0;
  int v5 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v6 = 0xD00000000000001ELL;
    }
    else {
      unint64_t v6 = 0xD00000000000001CLL;
    }
    if (v5 == 1) {
      unint64_t v7 = 0x8000000253B0B1E0;
    }
    else {
      unint64_t v7 = 0x8000000253B0B200;
    }
  }
  else
  {
    unint64_t v6 = 0xD000000000000014;
    unint64_t v7 = 0x8000000253B0B1C0;
  }
  if (a2)
  {
    if (a2 == 1) {
      unint64_t v3 = 0xD00000000000001ELL;
    }
    else {
      unint64_t v3 = 0xD00000000000001CLL;
    }
    if (a2 == 1) {
      unint64_t v4 = 0x8000000253B0B1E0;
    }
    else {
      unint64_t v4 = 0x8000000253B0B200;
    }
  }
  if (v6 == v3 && v7 == v4) {
    sub_253592D9C();
  }
  else {
    char v2 = sub_253592684();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_25357C37C(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xD00000000000001ELL;
  unint64_t v4 = 0x8000000253B0AF70;
  uint64_t v5 = a1;
  unint64_t v6 = 0xD00000000000001ELL;
  switch(v5)
  {
    case 1:
      unint64_t v6 = 0xD00000000000002CLL;
      unint64_t v7 = "com.apple.if.planner_overrides";
      goto LABEL_9;
    case 2:
      unint64_t v6 = 0xD000000000000027;
      unint64_t v7 = "nner.tool_retrieval.denylist";
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xD000000000000028;
      unint64_t v7 = "nner.nlrouter.overrides";
      goto LABEL_9;
    case 4:
      unint64_t v6 = 0xD000000000000030;
      unint64_t v7 = "nner.tool_retrieval.base";
      goto LABEL_9;
    case 5:
      unint64_t v6 = 0xD000000000000032;
      unint64_t v7 = "neration.catalog";
      goto LABEL_9;
    case 6:
      unint64_t v6 = 0xD000000000000020;
      unint64_t v7 = "neration.overrides";
      goto LABEL_9;
    case 7:
      unint64_t v6 = 0xD00000000000002FLL;
      unint64_t v7 = "l.data_detectors";
LABEL_9:
      unint64_t v4 = (unint64_t)v7 | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v8 = 0x8000000253B0AF70;
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0xD00000000000002CLL;
      v9 = "com.apple.if.planner_overrides";
      goto LABEL_18;
    case 2:
      unint64_t v3 = 0xD000000000000027;
      v9 = "nner.tool_retrieval.denylist";
      goto LABEL_18;
    case 3:
      unint64_t v3 = 0xD000000000000028;
      v9 = "nner.nlrouter.overrides";
      goto LABEL_18;
    case 4:
      unint64_t v3 = 0xD000000000000030;
      v9 = "nner.tool_retrieval.base";
      goto LABEL_18;
    case 5:
      unint64_t v3 = 0xD000000000000032;
      v9 = "neration.catalog";
      goto LABEL_18;
    case 6:
      unint64_t v3 = 0xD000000000000020;
      v9 = "neration.overrides";
      goto LABEL_18;
    case 7:
      unint64_t v3 = 0xD00000000000002FLL;
      v9 = "l.data_detectors";
LABEL_18:
      unint64_t v8 = (unint64_t)v9 | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v8) {
    sub_253592A6C();
  }
  else {
    char v2 = sub_253592308();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_25357C55C(uint64_t *a1)
{
  uint64_t v2 = *(void *)(sub_253462A5C(&qword_269CDE560) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_253971828();
    uint64_t v3 = v4;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  v7[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v7[1] = v5;
  uint64_t result = sub_25359035C(v7);
  *a1 = v3;
  return result;
}

uint64_t sub_25357C608(uint64_t a1)
{
  uint64_t v34 = sub_253462A5C(&qword_269CDE560);
  uint64_t v3 = *(void *)(v34 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v34);
  v32 = (uint64_t *)((char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v4);
  v33 = (char *)&v26 - v6;
  uint64_t v7 = sub_253B09120();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (v11)
  {
    uint64_t v26 = v1;
    uint64_t v38 = MEMORY[0x263F8EE78];
    sub_2539E7D7C();
    v13 = (char *)(a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
    uint64_t v14 = *(void *)(v3 + 72);
    v30 = v10;
    uint64_t v31 = v8;
    v27 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    uint64_t v28 = v8 + 16;
    uint64_t v29 = v14;
    v37 = (void (**)(char *, char *, uint64_t))(v8 + 32);
    v15 = v27;
    do
    {
      uint64_t v36 = v11;
      v16 = v33;
      uint64_t v17 = v34;
      uint64_t v18 = *(int *)(v34 + 48);
      v19 = &v33[v18];
      uint64_t v20 = *(void *)v13;
      *(void *)v33 = *(void *)v13;
      v15(&v16[v18], &v13[v18], v7);
      uint64_t v21 = (uint64_t)v32;
      v22 = (char *)v32 + *(int *)(v17 + 48);
      void *v32 = v20;
      v35 = *v37;
      v35(v22, v19, v7);
      v15(v10, v22, v7);
      sub_253591880(v21, &qword_269CDE560);
      uint64_t v12 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2539E7D7C();
        uint64_t v12 = v38;
      }
      unint64_t v23 = *(void *)(v12 + 16);
      uint64_t v24 = v36;
      if (v23 >= *(void *)(v12 + 24) >> 1)
      {
        sub_2539E7D7C();
        uint64_t v12 = v38;
      }
      v10 = v30;
      v13 += v29;
      *(void *)(v12 + 16) = v23 + 1;
      v35((char *)(v12+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v23), v10, v7);
      uint64_t v38 = v12;
      uint64_t v11 = v24 - 1;
    }
    while (v11);
  }
  return v12;
}

void _s30IntelligenceFlowPlannerSupport012ContextProtoE10DataSourceOACycfC_0(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_25357C92C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, char *))
{
  uint64_t v24 = a2;
  uint64_t v3 = sub_253462A5C(&qword_269CDCB60);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25397174C(a1, v25);
  uint64_t v6 = v25[0];
  int64_t v26 = v25[3];
  unint64_t v7 = v25[4];
  uint64_t v22 = v25[1];
  int64_t v23 = (unint64_t)(v25[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v26 << 6);
      goto LABEL_20;
    }
    int64_t v11 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v11 >= v23) {
      goto LABEL_22;
    }
    unint64_t v12 = *(void *)(v22 + 8 * v11);
    int64_t v13 = v26 + 1;
    if (!v12)
    {
      int64_t v13 = v26 + 2;
      if (v26 + 2 >= v23) {
        goto LABEL_22;
      }
      unint64_t v12 = *(void *)(v22 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v26 + 3;
        if (v26 + 3 >= v23) {
          goto LABEL_22;
        }
        unint64_t v12 = *(void *)(v22 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v26 + 4;
          if (v26 + 4 >= v23) {
            goto LABEL_22;
          }
          unint64_t v12 = *(void *)(v22 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = v26 + 5;
            if (v26 + 5 >= v23) {
              goto LABEL_22;
            }
            unint64_t v12 = *(void *)(v22 + 8 * v13);
            if (!v12)
            {
              int64_t v14 = v26 + 6;
              while (v14 < v23)
              {
                unint64_t v12 = *(void *)(v22 + 8 * v14++);
                if (v12)
                {
                  int64_t v13 = v14 - 1;
                  goto LABEL_19;
                }
              }
LABEL_22:
              swift_release();
              return 0;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v26 = v13;
LABEL_20:
    uint64_t v15 = *(void *)(v6 + 56);
    v16 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v10);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = sub_253B09120();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(&v5[*(int *)(v3 + 48)], v15 + *(void *)(*(void *)(v19 - 8) + 72) * v10, v19);
    *(void *)uint64_t v5 = v17;
    *((void *)v5 + 1) = v18;
    uint64_t v20 = &v5[*(int *)(v3 + 48)];
    swift_bridgeObjectRetain();
    LOBYTE(v17) = v24(v17, v18, v20);
    uint64_t result = sub_253591880((uint64_t)v5, &qword_269CDCB60);
    if (v17)
    {
      swift_release();
      return 1;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25357CBB0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    int v4 = 0;
    uint64_t v5 = (unsigned __int8 *)(a1 + 32);
    do
    {
      int v7 = *v5++;
      int v6 = v7;
      if ((v7 & ~v4) == 0) {
        int v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    LOBYTE(v4) = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t HydrationOptions.rawValue.getter()
{
  return *v0;
}

uint64_t HydrationOptions.init(rawValue:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static HydrationOptions.shouldIgnoreDeferredValueResolutionFailure.getter(unsigned char *a1@<X8>)
{
}

void static HydrationOptions.shouldFilterFailedValuesInCollection.getter(unsigned char *a1@<X8>)
{
}

uint64_t sub_25357CC28@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  return HydrationOptions.init(rawValue:)(*a1, a2);
}

uint64_t sub_25357CC30()
{
  return sub_253B09A20();
}

uint64_t sub_25357CC90()
{
  return sub_253B099F0();
}

uint64_t sub_25357CCE0()
{
  return sub_25397F9B0();
}

uint64_t sub_25357CCE8()
{
  return sub_253980324();
}

uint64_t sub_25357CCF0()
{
  return sub_253980C58();
}

uint64_t sub_25357CCFC@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_25357CD08(*a1, *v2, a2);
}

uint64_t sub_25357CD08@<X0>(uint64_t result@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  *a3 = a2 | result;
  return result;
}

void sub_25357CD14(unsigned char *a1@<X8>)
{
}

void sub_25357CD20(unsigned char *a1@<X8>)
{
}

uint64_t sub_25357CD28@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_25357CD34(*a1, *v2, a2);
}

uint64_t sub_25357CD34@<X0>(uint64_t result@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  *a3 = a2 ^ result;
  return result;
}

BOOL sub_25357CD40(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_253A575B8(a1, *a2);
}

uint64_t sub_25357CD48@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_25357CD50(*a1, a2);
}

uint64_t sub_25357CD50@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  char v3 = *v2;
  if ((*v2 & result) != 0) {
    *uint64_t v2 = v3 & ~(_BYTE)result;
  }
  *a2 = v3 & result;
  a2[1] = (v3 & result) == 0;
  return result;
}

uint64_t sub_25357CD7C@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_25357CD84(*a1, a2);
}

uint64_t sub_25357CD84@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  char v3 = *v2;
  char v4 = *v2 & result;
  *v2 |= result;
  *a2 = v4;
  a2[1] = (v3 & result) == 0;
  return result;
}

uint64_t sub_25357CDA8(unsigned __int8 *a1)
{
  return sub_25357CDB0(*a1);
}

uint64_t sub_25357CDB0(uint64_t result)
{
  *v1 |= result;
  return result;
}

uint64_t sub_25357CDC0(unsigned __int8 *a1)
{
  return sub_25357CDC8(*a1);
}

uint64_t sub_25357CDC8(uint64_t result)
{
  *v1 &= result;
  return result;
}

uint64_t sub_25357CDD8(unsigned __int8 *a1)
{
  return sub_25357CDE0(*a1);
}

uint64_t sub_25357CDE0(uint64_t result)
{
  *v1 ^= result;
  return result;
}

uint64_t sub_25357CDF0@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_25357CDFC(*a1, *v2, a2);
}

uint64_t sub_25357CDFC@<X0>(uint64_t result@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  *a3 = a2 & ~(_BYTE)result;
  return result;
}

BOOL sub_25357CE08(char *a1)
{
  return sub_25357CE14(*a1, *v1);
}

BOOL sub_25357CE14(char a1, unsigned __int8 a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_25357CE24(unsigned __int8 *a1)
{
  return sub_25357CE30(*a1, *v1);
}

BOOL sub_25357CE30(unsigned __int8 a1, unsigned __int8 a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_25357CE40(unsigned __int8 *a1)
{
  return sub_25357CE4C(*a1, *v1);
}

BOOL sub_25357CE4C(unsigned __int8 a1, char a2)
{
  return (a1 & ~a2) == 0;
}

BOOL sub_25357CE5C()
{
  return sub_25357CE64(*v0);
}

BOOL sub_25357CE64(char a1)
{
  return a1 == 0;
}

uint64_t sub_25357CE70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

uint64_t sub_25357CE88(unsigned __int8 *a1)
{
  return sub_25357CE90(*a1);
}

uint64_t sub_25357CE90(uint64_t result)
{
  *v1 &= ~(_BYTE)result;
  return result;
}

uint64_t sub_25357CEA0@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = HydrationOptions.init(rawValue:)(*a1, a2);
  a2[1] = 0;
  return result;
}

uint64_t sub_25357CECC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HydrationOptions.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25357CEF8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_253477080;
  return ConcurrencySafeToolExecutionInterface.hydrate(value:)();
}

uint64_t sub_25357CFB8(uint64_t a1, uint64_t a2)
{
  int v7 = (uint64_t (*)(uint64_t, uint64_t, char))((char *)&dword_269CDF268 + dword_269CDF268);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_253477080;
  return v7(a1, a2, 0);
}

uint64_t ConcurrencySafeToolExecutionInterface.hydrate(value:)()
{
  sub_2535920D8();
  sub_253529E08();
  *(unsigned char *)(v0 + 32) = 0;
  sub_2535927F4(v1, v2);
  uint64_t v17 = (char *)v4 + *v4;
  uint64_t v18 = v3;
  uint64_t v5 = swift_task_alloc();
  int v6 = (void *)sub_25347720C(v5);
  *int v6 = v7;
  v6[1] = sub_25357D17C;
  sub_2535920C0();
  return v14(v8, v9, v10, v11, v12, v13, v14, v15, v17, v18);
}

uint64_t sub_25357D17C()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 24) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_25347719C();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    sub_2534771C0();
    return v10();
  }
}

uint64_t sub_25357D274()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_25357D28C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v9 + 16) = v13;
  void *v13 = v9;
  v13[1] = sub_253591BEC;
  return ConcurrencySafeToolExecutionInterface.hydrate(values:)(a1, a2, a3, v14, v15, v16, v17, v18, a9);
}

uint64_t sub_25357D338(uint64_t a1)
{
  uint64_t v5 = (char *)&dword_269CDF278 + dword_269CDF278;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_253591BEC;
  return ((uint64_t (*)(uint64_t, void))v5)(a1, 0);
}

uint64_t ConcurrencySafeToolExecutionInterface.hydrate(values:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_253592520();
  sub_253529E08();
  *(unsigned char *)(v9 + 32) = 0;
  uint64_t v23 = *(void *)(v10 + 80) + **(int **)(v10 + 80);
  uint64_t v11 = swift_task_alloc();
  uint64_t v12 = (void *)sub_253591EB4(v11);
  *uint64_t v12 = v13;
  v12[1] = sub_25357D4E4;
  sub_2534D9B1C();
  sub_2535924B8();
  return v19(v14, v15, v16, v17, v18, v19, v20, v21, a9, v23);
}

uint64_t sub_25357D4E4()
{
  sub_253477168();
  uint64_t v3 = v2;
  sub_253477088();
  sub_253535478();
  *uint64_t v5 = v4;
  uint64_t v6 = *v1;
  sub_253477158();
  *uint64_t v7 = v6;
  *(void *)(v8 + 24) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_25347719C();
    return MEMORY[0x270FA2498](v9, v10, v11);
  }
  else
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t))(v6 + 8);
    return v12(v3);
  }
}

uint64_t sub_25357D5E8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_253477080;
  return ConcurrencySafeToolExecutionInterface.hydrate(value:options:)();
}

uint64_t sub_25357D6B0(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 40) = a2;
  *(void *)(v4 + 48) = v3;
  *(unsigned char *)(v4 + 428) = a3;
  *(void *)(v4 + 32) = a1;
  sub_253B091F0();
  *(void *)(v4 + 56) = swift_task_alloc();
  uint64_t v5 = sub_253B089F0();
  *(void *)(v4 + 64) = v5;
  *(void *)(v4 + 72) = *(void *)(v5 - 8);
  *(void *)(v4 + 80) = swift_task_alloc();
  *(void *)(v4 + 88) = swift_task_alloc();
  uint64_t v6 = sub_253B08FB0();
  *(void *)(v4 + 96) = v6;
  *(void *)(v4 + 104) = *(void *)(v6 - 8);
  *(void *)(v4 + 112) = swift_task_alloc();
  uint64_t v7 = sub_253B09020();
  *(void *)(v4 + 120) = v7;
  *(void *)(v4 + 128) = *(void *)(v7 - 8);
  *(void *)(v4 + 136) = swift_task_alloc();
  uint64_t v8 = sub_253B09010();
  *(void *)(v4 + 144) = v8;
  *(void *)(v4 + 152) = *(void *)(v8 - 8);
  *(void *)(v4 + 160) = swift_task_alloc();
  uint64_t v9 = sub_253B08F70();
  *(void *)(v4 + 168) = v9;
  *(void *)(v4 + 176) = *(void *)(v9 - 8);
  *(void *)(v4 + 184) = swift_task_alloc();
  *(void *)(v4 + 192) = swift_task_alloc();
  uint64_t v10 = sub_253B09120();
  *(void *)(v4 + 200) = v10;
  *(void *)(v4 + 208) = *(void *)(v10 - 8);
  *(void *)(v4 + 216) = swift_task_alloc();
  *(void *)(v4 + 224) = swift_task_alloc();
  *(void *)(v4 + 232) = swift_task_alloc();
  *(void *)(v4 + 240) = swift_task_alloc();
  *(void *)(v4 + 248) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25357D9C4, 0, 0);
}

uint64_t sub_25357D9C4()
{
  uint64_t v67 = v0;
  uint64_t v1 = *(void **)(v0 + 248);
  uint64_t v2 = *(void (**)(void))(*(void *)(v0 + 208) + 16);
  sub_2535924A8();
  v2();
  uint64_t v3 = sub_253592DB8();
  int v5 = v4(v3);
  *(_DWORD *)(v0 + 424) = v5;
  if (v5 == *MEMORY[0x263F804E8] || v5 == *MEMORY[0x263F804A8]) {
    goto LABEL_6;
  }
  if (v5 == *MEMORY[0x263F804C8])
  {
    sub_253593084();
    uint64_t v11 = sub_25359203C();
    v12(v11);
    *(void *)(v0 + 312) = *v1;
    swift_projectBox();
    uint64_t v13 = sub_25359208C();
    v14(v13);
    *(void *)(v0 + 320) = swift_allocBox();
    uint64_t v15 = swift_task_alloc();
    uint64_t v16 = (void *)sub_253592C04(v15);
    void *v16 = v17;
    v16[1] = sub_25357E478;
    sub_253591F8C();
    return sub_25358ADAC(v18, v19, v20);
  }
  if (v5 == *MEMORY[0x263F804A0])
  {
    sub_253593084();
    uint64_t v23 = *(void *)(v0 + 176);
    uint64_t v24 = sub_25359203C();
    v25(v24);
    *(void *)(v0 + 256) = *v1;
    swift_projectBox();
    *(void *)(v0 + 264) = *(void *)(v23 + 16);
    *(void *)(v0 + 272) = (v23 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    sub_253592288();
    v26();
    *(void *)(v0 + 280) = sub_253B08F60();
    sub_253592D8C((uint64_t)&dword_269CDF278);
    v27 = (void *)swift_task_alloc();
    *(void *)(v0 + 288) = v27;
    void *v27 = v0;
    v27[1] = sub_25357E05C;
    sub_253591F8C();
    __asm { BR              X2 }
  }
  if (v5 == *MEMORY[0x263F804C0]) {
    goto LABEL_6;
  }
  if (v5 == *MEMORY[0x263F804D0])
  {
    sub_253593084();
    uint64_t v30 = sub_25359203C();
    v31(v30);
    *(void *)(v0 + 344) = *v1;
    swift_projectBox();
    uint64_t v32 = sub_25359208C();
    v33(v32);
    swift_task_alloc();
    sub_253529E40();
    *(void *)(v0 + 352) = v34;
    *uint64_t v34 = v35;
    v34[1] = sub_25357E554;
    sub_253591F8C();
    return ConcurrencySafeToolKitExecutionSession.resolve(reference:)();
  }
  if (v5 != *MEMORY[0x263F804B0])
  {
    if (v5 != *MEMORY[0x263F804F0])
    {
      sub_253B08300();
      sub_2535924A8();
      v2();
      log = sub_253B089D0();
      os_log_type_t v45 = sub_253B09D80();
      BOOL v46 = os_log_type_enabled(log, v45);
      uint64_t v48 = *(void *)(v0 + 208);
      v47 = *(void **)(v0 + 216);
      v49 = *(_DWORD **)(v0 + 88);
      uint64_t v50 = *(void *)(v0 + 64);
      uint64_t v51 = *(void *)(v0 + 72);
      if (v46)
      {
        sub_253592A40();
        uint64_t v66 = sub_253592FAC();
        _DWORD *v49 = 136315138;
        uint64_t v52 = sub_253B090D0();
        uint64_t v54 = sub_253464DF8(v52, v53, &v66);
        sub_253592BE0(v54);
        swift_bridgeObjectRelease();
        v55 = *(void (**)(void))(v48 + 8);
        sub_2534D9A08();
        v55();
        sub_253592D1C(&dword_253460000, v56, v57, "ConcurrencySafeToolExecutionInterface: Unexpected TypedValue case during hydration: %s", v58, v59, v60, v61, v65, log);
        swift_arrayDestroy();
        sub_2534659B4();
        sub_2534659B4();

        (*(void (**)())(v51 + 8))();
      }
      else
      {
        v55 = *(void (**)(void))(v48 + 8);
        sub_2534D9A08();
        v55();

        (*(void (**)(_DWORD *, uint64_t))(v51 + 8))(v49, v50);
      }
      uint64_t v62 = *(void *)(v0 + 248);
      uint64_t v63 = *(void *)(v0 + 200);
      sub_253581020();
      sub_2534D969C();
      unsigned char *v64 = 0;
      swift_willThrow();
      ((void (*)(uint64_t, uint64_t))v55)(v62, v63);
      sub_253592650();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_25359202C();
LABEL_7:
      sub_253591F8C();
      __asm { BRAA            X1, X16 }
    }
LABEL_6:
    uint64_t v7 = sub_253592BB8();
    v8(v7);
    swift_release();
    sub_2535924A8();
    v2();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_253529DC4();
    goto LABEL_7;
  }
  sub_253593084();
  uint64_t v37 = sub_25359203C();
  v38(v37);
  *(void *)(v0 + 384) = *v1;
  swift_projectBox();
  uint64_t v39 = sub_25359208C();
  v40(v39);
  swift_task_alloc();
  sub_253529E40();
  *(void *)(v0 + 392) = v41;
  void *v41 = v42;
  v41[1] = sub_25357EA78;
  sub_253591F8C();
  return ConcurrencySafeToolKitExecutionSession.resolve(reference:)();
}

uint64_t sub_25357E05C()
{
  sub_253529DB8();
  sub_25359256C();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253535478();
  *int v5 = v4;
  *(void *)(v7 + 296) = v6;
  *(void *)(v7 + 304) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_25347719C();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

uint64_t sub_25357E164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(uint64_t), uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_253591DA0();
  sub_25359227C();
  char v18 = *(unsigned char *)(v16 + 428);
  (*(void (**)(void, void, void))(v16 + 264))(*(void *)(v16 + 184), *(void *)(v16 + 192), *(void *)(v16 + 168));
  if ((v18 & 2) == 0)
  {
    uint64_t v19 = sub_253592754();
    v20(v19);
    uint64_t v41 = *(void *)(v16 + 296);
LABEL_6:
    a12 = *(void *)(v16 + 256);
    LODWORD(a11) = *(_DWORD *)(v16 + 424);
    uint64_t v23 = *(void *)(v16 + 192);
    uint64_t v24 = *(void *)(v16 + 168);
    swift_allocBox();
    MEMORY[0x25A267F50]();
    sub_253B08F40();
    ((void (*)(uint64_t, uint64_t))a10)(v23, v24);
    v25 = sub_253592958();
    v26(v25);
    swift_release();
    sub_2535923A8();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_253529DC4();
    goto LABEL_7;
  }
  uint64_t v21 = *(void *)(sub_253B08F60() + 16);
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_253592978();
  v17(v22);
  if (!v21 || *(void *)(*(void *)(v16 + 296) + 16))
  {
    uint64_t v41 = *(void *)(v16 + 296);
    a10 = v17;
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  sub_253581020();
  uint64_t v36 = sub_2534D969C();
  sub_253592F8C(v36, v37);
  uint64_t v38 = sub_253592E0C();
  v17(v38);
  swift_release();
  sub_253592650();
  uint64_t v41 = v40;
  a10 = v39;
  a11 = *(void *)(v16 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2535926A0();
LABEL_7:
  sub_253477238();
  return v28(v27, v28, v29, v30, v31, v32, v33, v34, v41, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_25357E39C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_253591DA0();
  sub_25359227C();
  sub_253591C10();
  v16();
  swift_release();
  sub_253591CB0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25359202C();
  sub_253477238();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_25357E478()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *int v5 = v4;
  *(void *)(v6 + 336) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25357E554()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *int v5 = v4;
  *(void *)(v6 + 360) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25357E630()
{
  sub_253529DB8();
  int v1 = *(unsigned __int8 *)(v0 + 428);
  (*(void (**)(void, void, void))(*(void *)(v0 + 208) + 32))(*(void *)(v0 + 240), *(void *)(v0 + 232), *(void *)(v0 + 200));
  sub_253592D8C((uint64_t)&dword_269CDF268);
  uint64_t v7 = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 368) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_25357E6FC;
  uint64_t v4 = *(void *)(v0 + 240);
  uint64_t v5 = *(void *)(v0 + 32);
  return v7(v5, v4, v1 & 0xFFFFFFFD);
}

uint64_t sub_25357E6FC()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 376) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25357E7D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_253591DA0();
  sub_25359227C();
  uint64_t v17 = *(void **)(v16 + 360);
  if (*(unsigned char *)(v16 + 428))
  {
    sub_253B08300();
    id v20 = v17;
    id v21 = v17;
    uint64_t v22 = (void *)sub_253B089D0();
    os_log_type_t v23 = sub_253B09D80();
    BOOL v24 = sub_25359293C(v23);
    v25 = *(void **)(v16 + 360);
    if (v24)
    {
      sub_253592920();
      sub_253592A14();
      sub_25359254C(5.7779e-34);
      *(void *)(v16 + 24) = _swift_stdlib_bridgeErrorToNSError();
      sub_253592A78();
      sub_253592F0C();

      sub_25359259C(&dword_253460000, v26, v27, "ConcurrencySafeToolExecutionInterface: Ignoring error resolving deferred value - %@");
      sub_253462A5C(&qword_269CDBEA8);
      sub_2535929F8();
      sub_253591C78();
      sub_2534659B4();
    }
    else
    {
    }
    sub_253591C10();
    v28();
    uint64_t v29 = swift_allocBox();
    uint64_t v31 = sub_253592900(v29, v30);
    v32(v31);
    uint64_t v33 = sub_2535928E0();
    v34(v33);
    swift_release();
    sub_2535923A8();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_253529DC4();
  }
  else
  {
    swift_willThrow();
    uint64_t v18 = sub_253592C64();
    v19(v18);
    swift_release();
    a9 = *(void *)(v16 + 88);
    a10 = *(void *)(v16 + 80);
    a11 = *(void *)(v16 + 56);
    a12 = *(void *)(v16 + 360);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_2535926A0();
  }
  sub_253477238();
  return v36(v35, v36, v37, v38, v39, v40, v41, v42, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_25357EA78()
{
  sub_253529DB8();
  sub_253477088();
  uint64_t v3 = v2;
  sub_253535478();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_253477158();
  *uint64_t v6 = v5;
  *(void *)(v3 + 400) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_25347719C();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    uint64_t v10 = *(unsigned char *)(v3 + 428) & 0xFD;
    sub_253592D8C((uint64_t)&dword_269CDF268);
    uint64_t v17 = v11;
    swift_task_alloc();
    sub_253529E40();
    *(void *)(v3 + 408) = v12;
    *uint64_t v12 = v13;
    v12[1] = sub_25357EBD8;
    uint64_t v14 = *(void *)(v3 + 224);
    uint64_t v15 = *(void *)(v3 + 32);
    return v17(v15, v14, v10);
  }
}

uint64_t sub_25357EBD8()
{
  sub_253529DB8();
  sub_25359256C();
  sub_253535478();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 416) = v0;
  swift_task_dealloc();
  sub_253591C10();
  v4();
  sub_25347719C();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_25357ED08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_253591DA0();
  sub_25359227C();
  sub_253591C10();
  v16();
  swift_release();
  sub_253591CB0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25359202C();
  sub_253477238();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_25357EDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_253591EE8();
  sub_253592440();
  sub_253591C10();
  v14();
  uint64_t v15 = sub_2535928A8();
  v16(v15);
  swift_release();
  sub_253591FEC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_253529DC4();
  sub_253591C94();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_25357EED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_253591DA0();
  sub_25359227C();
  sub_253591C10();
  v16();
  swift_deallocBox();
  swift_release();
  sub_253591CB0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25359202C();
  sub_253477238();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_25357EFB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_253591EE8();
  sub_253592440();
  sub_253591C10();
  v14();
  uint64_t v15 = sub_253592298();
  v16(v15);
  swift_release();
  sub_253591FEC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_253529DC4();
  sub_253591C94();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_25357F09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_253591DA0();
  sub_25359227C();
  sub_253591C10();
  v16();
  uint64_t v17 = sub_253592298();
  v18(v17);
  swift_release();
  sub_253591CB0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25359202C();
  sub_253477238();
  return v20(v19, v20, v21, v22, v23, v24, v25, v26, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_25357F188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_253591EE8();
  sub_253592440();
  sub_253591C10();
  v14();
  swift_release();
  sub_253591FEC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_253529DC4();
  sub_253591C94();
  return v16(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_25357F260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_253591DA0();
  sub_25359227C();
  sub_253591C10();
  v16();
  swift_release();
  sub_253591CB0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25359202C();
  sub_253477238();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t ConcurrencySafeToolExecutionInterface.hydrate(value:options:)()
{
  sub_253477168();
  uint64_t v3 = v2;
  *(void *)(v1 + 56) = v4;
  *(void *)(v1 + 64) = v0;
  *(void *)(v1 + 40) = v5;
  *(void *)(v1 + 48) = v6;
  *(void *)(v1 + 32) = v7;
  uint64_t v8 = sub_253B089F0();
  *(void *)(v1 + 72) = v8;
  sub_25346CB34(v8);
  *(void *)(v1 + 80) = v9;
  *(void *)(v1 + 88) = sub_2534727DC();
  *(void *)(v1 + 96) = swift_task_alloc();
  uint64_t v10 = sub_253B08FB0();
  *(void *)(v1 + 104) = v10;
  sub_25346CB34(v10);
  *(void *)(v1 + 112) = v11;
  *(void *)(v1 + 120) = sub_253472828();
  uint64_t v12 = sub_253B09020();
  *(void *)(v1 + 128) = v12;
  sub_25346CB34(v12);
  *(void *)(v1 + 136) = v13;
  *(void *)(v1 + 144) = sub_253472828();
  uint64_t v14 = sub_253B09010();
  *(void *)(v1 + 152) = v14;
  sub_25346CB34(v14);
  *(void *)(v1 + 160) = v15;
  *(void *)(v1 + 168) = sub_253472828();
  sub_253B091F0();
  *(void *)(v1 + 176) = sub_253472828();
  uint64_t v16 = sub_253B08F70();
  *(void *)(v1 + 184) = v16;
  sub_25346CB34(v16);
  *(void *)(v1 + 192) = v17;
  *(void *)(v1 + 200) = sub_2534727DC();
  *(void *)(v1 + 208) = swift_task_alloc();
  uint64_t v18 = sub_253B09120();
  *(void *)(v1 + 216) = v18;
  sub_25346CB34(v18);
  *(void *)(v1 + 224) = v19;
  *(void *)(v1 + 232) = sub_2534727DC();
  *(void *)(v1 + 240) = swift_task_alloc();
  *(void *)(v1 + 248) = swift_task_alloc();
  *(void *)(v1 + 256) = swift_task_alloc();
  *(void *)(v1 + 264) = swift_task_alloc();
  *(unsigned char *)(v1 + 447) = *v3;
  sub_25347719C();
  return MEMORY[0x270FA2498](v20, v21, v22);
}

uint64_t sub_25357F538()
{
  uint64_t v75 = v0;
  uint64_t v1 = *(void **)(v0 + 264);
  uint64_t v2 = *(void (**)(void))(*(void *)(v0 + 224) + 16);
  sub_2535924A8();
  v2();
  uint64_t v3 = sub_253592DB8();
  int v5 = v4(v3);
  *(_DWORD *)(v0 + 440) = v5;
  if (v5 == *MEMORY[0x263F804E8] || v5 == *MEMORY[0x263F804A8]) {
    goto LABEL_6;
  }
  if (v5 != *MEMORY[0x263F804C8])
  {
    if (v5 == *MEMORY[0x263F804A0])
    {
      char v26 = *(unsigned char *)(v0 + 447);
      sub_253592E00();
      uint64_t v27 = *(void *)(v0 + 208);
      uint64_t v28 = *(void *)(v0 + 184);
      uint64_t v29 = *(void *)(v0 + 192);
      uint64_t v30 = sub_25359203C();
      v31(v30);
      *(void *)(v0 + 272) = *v1;
      uint64_t v32 = swift_projectBox();
      uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
      *(void *)(v0 + 280) = v33;
      *(void *)(v0 + 288) = (v29 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v33(v27, v32, v28);
      *(void *)(v0 + 296) = sub_253B08F60();
      *(unsigned char *)(v0 + 446) = v26;
      uint64_t v34 = (void *)swift_task_alloc();
      *(void *)(v0 + 304) = v34;
      *uint64_t v34 = v0;
      v34[1] = sub_25357FCF0;
      sub_253591F8C();
      __asm { BRAA            X5, X16 }
    }
    if (v5 != *MEMORY[0x263F804C0])
    {
      if (v5 == *MEMORY[0x263F804D0])
      {
        sub_253592E00();
        uint64_t v37 = sub_25359203C();
        v38(v37);
        *(void *)(v0 + 360) = *v1;
        swift_projectBox();
        uint64_t v39 = sub_25359208C();
        v40(v39);
        uint64_t v41 = (void *)swift_task_alloc();
        *(void *)(v0 + 368) = v41;
        void *v41 = v0;
        v41[1] = sub_2535801E0;
        sub_253593090();
        sub_253591F8C();
        __asm { BRAA            X5, X16 }
      }
      if (v5 == *MEMORY[0x263F804B0])
      {
        sub_253592E00();
        uint64_t v44 = sub_25359203C();
        v45(v44);
        *(void *)(v0 + 400) = *v1;
        swift_projectBox();
        uint64_t v46 = sub_25359208C();
        v47(v46);
        swift_task_alloc();
        sub_253529E40();
        *(void *)(v0 + 408) = v48;
        *uint64_t v48 = v49;
        v48[1] = sub_2535805A0;
        sub_253593090();
        sub_253591F8C();
        __asm { BRAA            X5, X16 }
      }
      if (v5 != *MEMORY[0x263F804F0])
      {
        sub_253B08300();
        sub_2535924A8();
        v2();
        log = sub_253B089D0();
        os_log_type_t v53 = sub_253B09D80();
        BOOL v54 = os_log_type_enabled(log, v53);
        uint64_t v56 = *(void *)(v0 + 224);
        v55 = *(void **)(v0 + 232);
        int v57 = *(_DWORD **)(v0 + 96);
        uint64_t v58 = *(void *)(v0 + 72);
        uint64_t v59 = *(void *)(v0 + 80);
        if (v54)
        {
          sub_253592A40();
          uint64_t v74 = sub_253592FAC();
          *int v57 = 136315138;
          uint64_t v60 = sub_253B090D0();
          uint64_t v62 = sub_253464DF8(v60, v61, &v74);
          sub_253592BE0(v62);
          swift_bridgeObjectRelease();
          uint64_t v63 = *(void (**)(void))(v56 + 8);
          sub_2534D9A08();
          v63();
          sub_253592D1C(&dword_253460000, v64, v65, "ConcurrencySafeToolExecutionInterface: Unexpected TypedValue case during hydration: %s", v66, v67, v68, v69, v73, log);
          swift_arrayDestroy();
          sub_2534659B4();
          sub_2534659B4();

          (*(void (**)())(v59 + 8))();
        }
        else
        {
          uint64_t v63 = *(void (**)(void))(v56 + 8);
          sub_2534D9A08();
          v63();

          (*(void (**)(_DWORD *, uint64_t))(v59 + 8))(v57, v58);
        }
        uint64_t v70 = *(void *)(v0 + 264);
        uint64_t v71 = *(void *)(v0 + 216);
        sub_253581020();
        sub_2534D969C();
        unsigned char *v72 = 0;
        swift_willThrow();
        ((void (*)(uint64_t, uint64_t))v63)(v70, v71);
        sub_25359279C();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        sub_25359202C();
LABEL_7:
        sub_253591F8C();
        __asm { BRAA            X1, X16 }
      }
    }
LABEL_6:
    uint64_t v7 = sub_253592BB8();
    v8(v7);
    swift_release();
    sub_2535924A8();
    v2();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_253529DC4();
    goto LABEL_7;
  }
  sub_253592E00();
  uint64_t v12 = *(void *)(v0 + 160);
  uint64_t v11 = *(void *)(v0 + 168);
  uint64_t v13 = *(void *)(v0 + 152);
  uint64_t v14 = sub_25359203C();
  v15(v14);
  *(void *)(v0 + 328) = *v1;
  uint64_t v16 = swift_projectBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v16, v13);
  *(void *)(v0 + 336) = swift_allocBox();
  swift_task_alloc();
  sub_253529E40();
  *(void *)(v0 + 344) = v17;
  *uint64_t v17 = v18;
  v17[1] = sub_253580018;
  sub_253591F8C();
  return sub_25358B87C(v19, v20, v21, v22, v23);
}

uint64_t sub_25357FCF0()
{
  sub_253477168();
  sub_253477088();
  uint64_t v3 = v2;
  sub_253535478();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 312) = v5;
  *(void *)(v3 + 320) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_25347719C();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_25357FDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(uint64_t), uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_253591DA0();
  sub_25359227C();
  char v18 = *(unsigned char *)(v16 + 447);
  (*(void (**)(void, void, void))(v16 + 280))(*(void *)(v16 + 200), *(void *)(v16 + 208), *(void *)(v16 + 184));
  if ((v18 & 2) == 0)
  {
    uint64_t v19 = sub_253592754();
    v20(v19);
    uint64_t v41 = *(void *)(v16 + 312);
LABEL_6:
    a12 = *(void *)(v16 + 272);
    LODWORD(a11) = *(_DWORD *)(v16 + 440);
    uint64_t v23 = *(void *)(v16 + 208);
    uint64_t v24 = *(void *)(v16 + 184);
    swift_allocBox();
    MEMORY[0x25A267F50]();
    sub_253B08F40();
    ((void (*)(uint64_t, uint64_t))a10)(v23, v24);
    uint64_t v25 = sub_253592958();
    v26(v25);
    swift_release();
    sub_2535923E8();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_253529DC4();
    goto LABEL_7;
  }
  uint64_t v21 = *(void *)(sub_253B08F60() + 16);
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_253592978();
  v17(v22);
  if (!v21 || *(void *)(*(void *)(v16 + 312) + 16))
  {
    uint64_t v41 = *(void *)(v16 + 312);
    a10 = v17;
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  sub_253581020();
  uint64_t v36 = sub_2534D969C();
  sub_253592F8C(v36, v37);
  uint64_t v38 = sub_253592E0C();
  v17(v38);
  swift_release();
  sub_25359279C();
  uint64_t v41 = v40;
  a10 = v39;
  a11 = *(void *)(v16 + 88);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2535926A0();
LABEL_7:
  sub_253477238();
  return v28(v27, v28, v29, v30, v31, v32, v33, v34, v41, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_253580018()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 352) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_2535800F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_253591EE8();
  sub_253592440();
  sub_253591C10();
  v14();
  uint64_t v15 = sub_2535928A8();
  v16(v15);
  swift_release();
  sub_253592050();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_253529DC4();
  sub_253591C94();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_2535801E0()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 376) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_2535802BC()
{
  sub_253529DB8();
  char v1 = *(unsigned char *)(v0 + 447);
  uint64_t v12 = *(void *)(v0 + 56);
  uint64_t v2 = (*(uint64_t (**)(void, void, void))(*(void *)(v0 + 224) + 32))(*(void *)(v0 + 256), *(void *)(v0 + 248), *(void *)(v0 + 216));
  *(unsigned char *)(v0 + 445) = v1 & 0xFD;
  sub_2535927F4(v2, v12);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v3 + *v3);
  swift_task_alloc();
  sub_253529E40();
  *(void *)(v0 + 384) = v4;
  *uint64_t v4 = v5;
  v4[1] = sub_2535803DC;
  uint64_t v6 = *(void *)(v0 + 256);
  uint64_t v7 = *(void *)(v0 + 56);
  uint64_t v8 = *(void *)(v0 + 48);
  uint64_t v9 = *(void *)(v0 + 32);
  return v11(v9, v6, v0 + 445, v8, v7);
}

uint64_t sub_2535803DC()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 392) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_2535804B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_253591EE8();
  sub_253592440();
  sub_253591C10();
  v14();
  uint64_t v15 = sub_253592298();
  v16(v15);
  swift_release();
  sub_253592050();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_253529DC4();
  sub_253591C94();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_2535805A0()
{
  sub_253592324();
  sub_253477088();
  uint64_t v3 = v2;
  sub_253535478();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_253477158();
  *uint64_t v6 = v5;
  *(void *)(v3 + 416) = v0;
  uint64_t v7 = swift_task_dealloc();
  if (v0)
  {
    sub_25347719C();
    return MEMORY[0x270FA2498](v8, v9, v10);
  }
  else
  {
    uint64_t v11 = *(void *)(v3 + 56);
    *(unsigned char *)(v3 + 444) = *(unsigned char *)(v3 + 447) & 0xFD;
    sub_2535927F4(v7, v11);
    uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v12 + *v12);
    swift_task_alloc();
    sub_253529E40();
    *(void *)(v3 + 424) = v13;
    void *v13 = v14;
    v13[1] = sub_25358074C;
    uint64_t v15 = *(void *)(v3 + 240);
    uint64_t v16 = *(void *)(v3 + 56);
    uint64_t v17 = *(void *)(v3 + 48);
    uint64_t v18 = *(void *)(v3 + 32);
    return v20(v18, v15, v3 + 444, v17, v16);
  }
}

uint64_t sub_25358074C()
{
  sub_253477168();
  sub_253477088();
  uint64_t v3 = v2;
  sub_253535478();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_253477158();
  *uint64_t v6 = v5;
  *(void *)(v3 + 432) = v0;
  swift_task_dealloc();
  sub_253591C10();
  v7();
  sub_25347719C();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

uint64_t sub_253580848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_253591EE8();
  sub_253592440();
  sub_253591C10();
  v14();
  swift_release();
  sub_253592050();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_253529DC4();
  sub_253591C94();
  return v16(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_253580920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_253591DA0();
  sub_25359227C();
  sub_253591C10();
  v16();
  swift_release();
  sub_253591DBC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25359202C();
  sub_253477238();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_2535809FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_253591DA0();
  sub_25359227C();
  sub_253591C10();
  v16();
  swift_deallocBox();
  swift_release();
  sub_253591DBC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25359202C();
  sub_253477238();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_253580AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_253591DA0();
  sub_25359227C();
  uint64_t v17 = *(void **)(v16 + 376);
  if (*(unsigned char *)(v16 + 447))
  {
    sub_253B08300();
    id v20 = v17;
    id v21 = v17;
    uint64_t v22 = (void *)sub_253B089D0();
    os_log_type_t v23 = sub_253B09D80();
    BOOL v24 = sub_25359293C(v23);
    uint64_t v25 = *(void **)(v16 + 376);
    if (v24)
    {
      sub_253592920();
      sub_253592A14();
      sub_25359254C(5.7779e-34);
      *(void *)(v16 + 24) = _swift_stdlib_bridgeErrorToNSError();
      sub_253592A78();
      sub_253592F0C();

      sub_25359259C(&dword_253460000, v26, v27, "ConcurrencySafeToolExecutionInterface: Ignoring error resolving deferred value - %@");
      sub_253462A5C(&qword_269CDBEA8);
      sub_2535929F8();
      sub_253591C78();
      sub_2534659B4();
    }
    else
    {
    }
    sub_253591C10();
    v28();
    uint64_t v29 = swift_allocBox();
    uint64_t v31 = sub_253592900(v29, v30);
    v32(v31);
    uint64_t v33 = sub_2535928E0();
    v34(v33);
    swift_release();
    sub_2535923E8();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_253529DC4();
  }
  else
  {
    swift_willThrow();
    uint64_t v18 = sub_253592C64();
    v19(v18);
    swift_release();
    a9 = *(void *)(v16 + 120);
    a10 = *(void *)(v16 + 96);
    a11 = *(void *)(v16 + 88);
    a12 = *(void *)(v16 + 376);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_2535926A0();
  }
  sub_253477238();
  return v36(v35, v36, v37, v38, v39, v40, v41, v42, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_253580D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_253591DA0();
  sub_25359227C();
  sub_253591C10();
  v16();
  uint64_t v17 = sub_253592298();
  v18(v17);
  swift_release();
  sub_253591DBC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25359202C();
  sub_253477238();
  return v20(v19, v20, v21, v22, v23, v24, v25, v26, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_253580E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_253591DA0();
  sub_25359227C();
  sub_253591C10();
  v16();
  swift_release();
  sub_253591DBC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25359202C();
  sub_253477238();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_253580F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_253591DA0();
  sub_25359227C();
  sub_253591C10();
  v16();
  swift_release();
  sub_253591DBC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25359202C();
  sub_253477238();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14, a15, a16);
}

unint64_t sub_253581020()
{
  unint64_t result = qword_269CDF188;
  if (!qword_269CDF188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269CDF188);
  }
  return result;
}

uint64_t sub_25358106C(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_253591BEC;
  return ConcurrencySafeToolExecutionInterface.hydrate(values:options:)(a1, a2, a3, a4);
}

uint64_t sub_253581128(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 64) = a2;
  *(void *)(v3 + 32) = a1;
  *(void *)(v3 + 16) = v2;
  return MEMORY[0x270FA2498](sub_253581150, 0, 0);
}

uint64_t sub_253581150()
{
  sub_253592324();
  char v1 = *(unsigned char *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 32);
  sub_253462A5C(&qword_269CDF1A0);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 40) = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v0 + 16;
  *(unsigned char *)(v3 + 32) = v1;
  sub_253462A5C(&qword_269CDF1B8);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_253592424(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_25358124C;
  uint64_t v7 = sub_253592778();
  return MEMORY[0x270FA22B8](v7);
}

uint64_t sub_25358124C()
{
  sub_253477168();
  sub_253477088();
  uint64_t v3 = v2;
  sub_253535478();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_253477158();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_253581330()
{
  return sub_2535925BC();
}

uint64_t sub_253581338()
{
  sub_253477168();
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t ConcurrencySafeToolExecutionInterface.hydrate(values:options:)(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = v4;
  *(void *)(v5 + 24) = a1;
  *(void *)(v5 + 32) = a3;
  *(unsigned char *)(v5 + 80) = *a2;
  return sub_25353546C((uint64_t)sub_2535813BC);
}

uint64_t sub_2535813BC()
{
  sub_253592324();
  char v1 = *(unsigned char *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 24);
  sub_253462A5C(&qword_269CDF1A0);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 32);
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 40) = v2;
  *(unsigned char *)(v4 + 48) = v1;
  sub_253462A5C(&qword_269CDF1B8);
  swift_task_alloc();
  sub_253529E40();
  *(void *)(v0 + 64) = v5;
  *uint64_t v5 = v6;
  v5[1] = sub_2535814C4;
  uint64_t v7 = sub_253592778();
  return MEMORY[0x270FA22B8](v7);
}

uint64_t sub_2535814C4()
{
  sub_253477168();
  sub_253477088();
  uint64_t v3 = v2;
  sub_253535478();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_253477158();
  *uint64_t v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_2535815A8()
{
  return sub_2535925BC();
}

uint64_t sub_2535815B0()
{
  sub_253477168();
  swift_task_dealloc();
  sub_2534771C0();
  return v0();
}

uint64_t sub_253581610(uint64_t a1)
{
  uint64_t v2 = sub_253B089F0();
  uint64_t v38 = *(void *)(v2 - 8);
  uint64_t v39 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v40 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_253B09010();
  os_log_t v42 = *(os_log_t *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_253B08F70();
  uint64_t v41 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_253B09120();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v37 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v36 - v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v16((char *)&v36 - v14, a1, v10);
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v15, v10);
  if (v17 == *MEMORY[0x263F804E8] || v17 == *MEMORY[0x263F804A8]) {
    goto LABEL_3;
  }
  if (v17 == *MEMORY[0x263F804C8])
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v15, v10);
    uint64_t v20 = swift_projectBox();
    os_log_t v21 = v42;
    ((void (*)(char *, uint64_t, uint64_t))v42[2].isa)(v6, v20, v4);
    char v18 = sub_25358E608();
    ((void (*)(char *, uint64_t))v21[1].isa)(v6, v4);
LABEL_10:
    swift_release();
    return v18 & 1;
  }
  if (v17 == *MEMORY[0x263F804A0])
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v15, v10);
    uint64_t v22 = swift_projectBox();
    uint64_t v23 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v9, v22, v7);
    uint64_t v24 = sub_253B08F60();
    char v18 = sub_25358215C(v24);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v7);
    goto LABEL_10;
  }
  if (v17 != *MEMORY[0x263F804C0])
  {
    if (v17 == *MEMORY[0x263F804D0] || v17 == *MEMORY[0x263F804B0])
    {
      (*(void (**)(char *, uint64_t))(v11 + 96))(v15, v10);
      swift_release();
      char v18 = 1;
      return v18 & 1;
    }
    if (v17 != *MEMORY[0x263F804F0])
    {
      uint64_t v25 = v40;
      sub_253B08300();
      uint64_t v26 = v37;
      v16(v37, a1, v10);
      uint64_t v27 = v25;
      uint64_t v28 = sub_253B089D0();
      os_log_type_t v29 = sub_253B09D80();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        uint64_t v45 = v43;
        os_log_t v42 = v28;
        *(_DWORD *)uint64_t v30 = 136315138;
        uint64_t v31 = sub_253B090D0();
        uint64_t v44 = sub_253464DF8(v31, v32, &v45);
        sub_253B09E80();
        swift_bridgeObjectRelease();
        uint64_t v33 = *(void (**)(char *, uint64_t))(v11 + 8);
        v33(v26, v10);
        os_log_t v34 = v42;
        _os_log_impl(&dword_253460000, v42, v29, "ConcurrencySafeToolExecutionInterface: Unexpected TypedValue case during hydration: %s", v30, 0xCu);
        uint64_t v35 = v43;
        swift_arrayDestroy();
        MEMORY[0x25A269E60](v35, -1, -1);
        MEMORY[0x25A269E60](v30, -1, -1);

        (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v39);
      }
      else
      {
        uint64_t v33 = *(void (**)(char *, uint64_t))(v11 + 8);
        v33(v26, v10);

        (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v39);
      }
      v33(v15, v10);
      goto LABEL_4;
    }
  }
LABEL_3:
  (*(void (**)(char *, uint64_t))(v11 + 96))(v15, v10);
  swift_release();
LABEL_4:
  char v18 = 0;
  return v18 & 1;
}

uint64_t ConcurrencySafeToolExecutionInterface.needsHydrating(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v54 = a3;
  uint64_t v53 = a2;
  sub_253B089F0();
  sub_2534727C4();
  v50[2] = v4;
  v50[3] = v3;
  MEMORY[0x270FA5388](v3);
  sub_25346CC44();
  v50[4] = v6 - v5;
  uint64_t v7 = sub_253B09010();
  sub_2534727C4();
  uint64_t v52 = v8;
  MEMORY[0x270FA5388](v9);
  sub_25346CC44();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_253B08F70();
  sub_2534727C4();
  uint64_t v51 = v14;
  MEMORY[0x270FA5388](v15);
  sub_25346CC44();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = sub_253B09120();
  sub_2534727C4();
  uint64_t v21 = v20;
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  v50[1] = (char *)v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)v50 - v25;
  uint64_t v27 = *(void (**)(void))(v21 + 16);
  sub_253593070();
  v27();
  int v28 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v26, v19);
  if (v28 == *MEMORY[0x263F804E8] || v28 == *MEMORY[0x263F804A8]) {
    goto LABEL_3;
  }
  if (v28 == *MEMORY[0x263F804C8])
  {
    uint64_t v33 = sub_2535922CC();
    v34(v33);
    uint64_t v35 = swift_projectBox();
    uint64_t v36 = v52;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v12, v35, v7);
    char v31 = ConcurrencySafeToolExecutionInterface.needsHydrating(entity:)();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v12, v7);
LABEL_10:
    swift_release();
    return v31 & 1;
  }
  if (v28 == *MEMORY[0x263F804A0])
  {
    uint64_t v37 = sub_2535922CC();
    v38(v37);
    uint64_t v39 = swift_projectBox();
    uint64_t v40 = v51;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v18, v39, v13);
    sub_253B08F60();
    char v31 = (*(uint64_t (**)(void))(v54 + 96))();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v18, v13);
    goto LABEL_10;
  }
  if (v28 != *MEMORY[0x263F804C0])
  {
    if (v28 == *MEMORY[0x263F804D0] || v28 == *MEMORY[0x263F804B0])
    {
      uint64_t v41 = sub_2535922CC();
      v42(v41);
      swift_release();
      char v31 = 1;
      return v31 & 1;
    }
    if (v28 != *MEMORY[0x263F804F0])
    {
      sub_253B08300();
      sub_253593070();
      v27();
      uint64_t v43 = sub_253B089D0();
      os_log_type_t v44 = sub_253B09D80();
      if (os_log_type_enabled(v43, v44))
      {
        uint64_t v45 = (uint8_t *)swift_slowAlloc();
        uint64_t v54 = swift_slowAlloc();
        uint64_t v56 = v54;
        *(_DWORD *)uint64_t v45 = 136315138;
        uint64_t v46 = sub_253B090D0();
        uint64_t v55 = sub_253464DF8(v46, v47, &v56);
        sub_253B09E80();
        swift_bridgeObjectRelease();
        uint64_t v48 = *(void (**)(void))(v21 + 8);
        sub_253592354();
        v48();
        _os_log_impl(&dword_253460000, v43, v44, "ConcurrencySafeToolExecutionInterface: Unexpected TypedValue case during hydration: %s", v45, 0xCu);
        swift_arrayDestroy();
        sub_2534659B4();
        sub_2534659B4();
      }
      else
      {
        uint64_t v48 = *(void (**)(void))(v21 + 8);
        sub_253592354();
        v48();
      }

      sub_2534659CC();
      v49();
      ((void (*)(char *, uint64_t))v48)(v26, v19);
      goto LABEL_4;
    }
  }
LABEL_3:
  uint64_t v29 = sub_2535922CC();
  v30(v29);
  swift_release();
LABEL_4:
  char v31 = 0;
  return v31 & 1;
}

uint64_t sub_25358215C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v3 = *(void *)(sub_253B09120() - 8);
    uint64_t v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    uint64_t v6 = v1 - 1;
    do
    {
      uint64_t v7 = v6;
      LOBYTE(v1) = sub_253581610(v4);
      if (v1) {
        break;
      }
      uint64_t v6 = v7 - 1;
      v4 += v5;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  return v1 & 1;
}

Swift::Bool __swiftcall ConcurrencySafeToolExecutionInterface.needsHydrating(values:)(Swift::OpaquePointer values)
{
  uint64_t v3 = *((void *)values._rawValue + 2);
  if (v3)
  {
    uint64_t v4 = v2;
    uint64_t v5 = v1;
    uint64_t v7 = sub_253B09120();
    sub_25346CB34(v7);
    uint64_t v9 = (char *)values._rawValue
       + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 88);
    uint64_t v12 = *(void *)(v11 + 72);
    swift_bridgeObjectRetain();
    uint64_t v13 = v3 - 1;
    do
    {
      uint64_t v14 = v13;
      LOBYTE(v3) = v10(v9, v5, v4);
      if (v3) {
        break;
      }
      uint64_t v13 = v14 - 1;
      v9 += v12;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  return v3 & 1;
}

uint64_t ToolKitExecutionSession.__allocating_init(sessionTask:)(uint64_t a1)
{
  uint64_t v2 = sub_253592F74();
  type metadata accessor for ConcurrencySafeToolKitExecutionSession();
  uint64_t v3 = sub_253592F74();
  *(void *)(v3 + 16) = a1;
  *(void *)(v2 + 16) = v3;
  return v2;
}

uint64_t ToolKitExecutionSession.init(sessionTask:)(uint64_t a1)
{
  type metadata accessor for ConcurrencySafeToolKitExecutionSession();
  uint64_t v3 = sub_253592F74();
  *(void *)(v3 + 16) = a1;
  *(void *)(v1 + 16) = v3;
  return v1;
}

uint64_t ConcurrencySafeToolKitExecutionSession.__allocating_init(sessionTask:)(uint64_t a1)
{
  uint64_t result = sub_253592F74();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t ToolKitExecutionSession.executorEventStream.getter(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return sub_25353546C((uint64_t)sub_2535823AC);
}

uint64_t sub_2535823AC()
{
  sub_253529DB8();
  v0[6] = *(void *)(*(void *)(v0[5] + 16) + 16);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  sub_253462A5C(&qword_26B24A5A0);
  sub_253462A5C(&qword_26B24A590);
  sub_253591FDC();
  *uint64_t v1 = v2;
  v1[1] = sub_253582484;
  uint64_t v3 = sub_253591EA0();
  return MEMORY[0x270FA1FA8](v3);
}

uint64_t sub_253582484()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 64) = v0;
  swift_task_dealloc();
  swift_release();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25358257C()
{
  sub_253529DB8();
  swift_getObjectType();
  sub_253B08BF0();
  swift_unknownObjectRelease();
  sub_253529DC4();
  return v0();
}

uint64_t sub_2535825FC()
{
  sub_2534771C0();
  return v0();
}

uint64_t ToolKitExecutionSession.execute(toolInvocation:dialogHandler:)()
{
  sub_253477168();
  v1[6] = v2;
  v1[7] = v0;
  v1[4] = v3;
  v1[5] = v4;
  uint64_t v5 = sub_253B08940();
  v1[8] = v5;
  sub_25346CB34(v5);
  v1[9] = v6;
  uint64_t v7 = sub_2534727DC();
  v1[11] = sub_253592F38(v7);
  uint64_t v8 = sub_253B08970();
  v1[12] = v8;
  sub_25346CB34(v8);
  v1[13] = v9;
  v1[14] = sub_253472828();
  sub_25347719C();
  return MEMORY[0x270FA2498](v10, v11, v12);
}

uint64_t sub_2535826DC()
{
  sub_253529DB8();
  v0[15] = *(void *)(*(void *)(v0[7] + 16) + 16);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[16] = v1;
  sub_253462A5C(&qword_26B24A5A0);
  sub_253462A5C(&qword_26B24A590);
  sub_253591FDC();
  *uint64_t v1 = v2;
  v1[1] = sub_2535827B4;
  uint64_t v3 = sub_253591EA0();
  return MEMORY[0x270FA1FA8](v3);
}

uint64_t sub_2535827B4()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 136) = v0;
  swift_task_dealloc();
  swift_release();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_2535828AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  uint64_t v34 = v12[3];
  v12[18] = v12[2];
  sub_253B077C0();
  sub_253B08930();
  uint64_t v14 = sub_253B08960();
  os_signpost_type_t v15 = sub_253B09DB0();
  if (sub_253B09DE0())
  {
    uint64_t v16 = (_WORD *)sub_2534AF384();
    os_signpost_id_t v17 = sub_253592468(v16);
    _os_signpost_emit_with_name_impl(&dword_253460000, v14, v15, v17, "IF.ToolKitExecutionSession.execute", "", v13, 2u);
    sub_2534659B4();
  }

  uint64_t v18 = sub_253591C58();
  v19(v18);
  sub_253B089B0();
  sub_253578768();
  v12[19] = sub_253578748();
  uint64_t v20 = sub_253591ED4();
  v21(v20);
  sub_2534D9A08();
  v22();
  swift_getObjectType();
  swift_task_alloc();
  sub_253529E40();
  v12[20] = v23;
  *uint64_t v23 = v24;
  v23[1] = sub_253582A20;
  sub_25359244C();
  sub_253591C20();
  return MEMORY[0x270F7FBE8](v25, v26, v27, v28, v29, v30, v31, v32, v34, a10, a11, a12);
}

uint64_t sub_253582A20()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 168) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_253582AFC()
{
  sub_253592324();
  sub_253582CAC(*(void *)(v0 + 152), *(void *)(v0 + 40));
  swift_release();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_253529DC4();
  return v1();
}

uint64_t sub_253582B9C()
{
  sub_253529DB8();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  return v0();
}

uint64_t sub_253582C14()
{
  sub_253529DB8();
  sub_253582CAC(*(void *)(v0 + 152), *(void *)(v0 + 40));
  swift_release();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  return v1();
}

uint64_t sub_253582CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_253B08B30();
  uint64_t v55 = *(void *)(v3 - 8);
  uint64_t v56 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v54 = &v47[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v53 = sub_253B08980();
  uint64_t v58 = *(uint64_t (***)(const char *, uint64_t))(v53 - 8);
  MEMORY[0x270FA5388](v53);
  int v57 = &v47[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_253B08940();
  uint64_t v61 = *(void *)(v6 - 8);
  uint64_t v62 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v60 = &v47[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t (**)(const char *, uint64_t))&v47[-v9];
  uint64_t v11 = sub_253B08B50();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = &v47[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_253B08970();
  uint64_t v59 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  os_signpost_id_t v17 = &v47[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_253B077C0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  uint64_t v18 = sub_253B08960();
  sub_253B08990();
  int v19 = sub_253B09DA0();
  if (sub_253B09DE0())
  {
    int v48 = v19;
    uint64_t v49 = v11;
    os_log_t v50 = v18;
    uint64_t v51 = v17;
    uint64_t v52 = v15;
    swift_retain();
    uint64_t v20 = v57;
    sub_253B089C0();
    swift_release();
    uint64_t v21 = v53;
    int v22 = v58[11](v20, v53);
    uint64_t v23 = v61;
    uint64_t v24 = v62;
    uint64_t v26 = v59;
    uint64_t v25 = v60;
    uint64_t v27 = v54;
    uint64_t v28 = v12;
    if (v22 == *MEMORY[0x263F90238])
    {
      char v29 = 0;
      uint64_t v30 = "[Error] Interval already ended";
    }
    else
    {
      v58[1](v57, v21);
      uint64_t v30 = "tool=%{signpost.telemetry:string1,public}s %s";
      char v29 = 2;
    }
    int v57 = v30;
    (*(void (**)(unsigned char *, uint64_t (**)(const char *, uint64_t), uint64_t))(v23 + 16))(v25, v10, v24);
    uint64_t v32 = swift_slowAlloc();
    uint64_t v58 = v10;
    uint64_t v33 = v32;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v64 = v34;
    *(unsigned char *)uint64_t v33 = v29;
    *(unsigned char *)(v33 + 1) = v29;
    *(_WORD *)(v33 + 2) = 2082;
    uint64_t v35 = v27;
    uint64_t v36 = v23;
    sub_253B08B40();
    uint64_t v37 = sub_253B08AF0();
    unint64_t v39 = v38;
    (*(void (**)(unsigned char *, uint64_t))(v55 + 8))(v35, v56);
    uint64_t v63 = sub_253464DF8(v37, v39, &v64);
    sub_253B09E80();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v28 + 8))(v14, v49);
    *(_WORD *)(v33 + 12) = 2080;
    sub_253B077A0();
    uint64_t v40 = sub_253B0A030();
    uint64_t v63 = sub_253464DF8(v40, v41, &v64);
    sub_253B09E80();
    swift_bridgeObjectRelease();
    os_log_t v42 = v60;
    os_signpost_id_t v43 = sub_253B08920();
    os_log_t v44 = v50;
    _os_signpost_emit_with_name_impl(&dword_253460000, v50, (os_signpost_type_t)v48, v43, "IF.ToolKitExecutionSession.execute", v57, (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A269E60](v34, -1, -1);
    MEMORY[0x25A269E60](v33, -1, -1);

    uint64_t v45 = *(void (**)(uint64_t (**)(const char *, uint64_t), uint64_t))(v36 + 8);
    uint64_t v46 = v62;
    v45(v58, v62);
    (*(void (**)(unsigned char *, uint64_t))(v26 + 8))(v51, v52);
    return ((uint64_t (*)(unsigned char *, uint64_t))v45)(v42, v46);
  }
  else
  {

    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
    (*(void (**)(uint64_t (**)(const char *, uint64_t), uint64_t))(v61 + 8))(v10, v62);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v59 + 8))(v17, v15);
  }
}

uint64_t ToolKitExecutionSession.undo(_:)()
{
  sub_253477168();
  v1[4] = v2;
  v1[5] = v0;
  uint64_t v3 = sub_253B08980();
  v1[6] = v3;
  sub_25346CB34(v3);
  v1[7] = v4;
  v1[8] = sub_2534727DC();
  v1[9] = swift_task_alloc();
  uint64_t v5 = sub_253B08940();
  v1[10] = v5;
  sub_25346CB34(v5);
  v1[11] = v6;
  v1[12] = sub_2534727DC();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = sub_253592890(v7);
  v1[15] = sub_253592610(v8);
  uint64_t v9 = sub_253B08970();
  v1[16] = v9;
  sub_25346CB34(v9);
  v1[17] = v10;
  v1[18] = sub_2534727DC();
  uint64_t v11 = swift_task_alloc();
  v1[20] = sub_253592800(v11);
  sub_25347719C();
  return MEMORY[0x270FA2498](v12, v13, v14);
}

uint64_t sub_2535833C4()
{
  sub_253529DB8();
  sub_253592D50();
  uint64_t v0 = (void *)*(unsigned int *)(MEMORY[0x263F8F5C8] + 4);
  swift_retain();
  uint64_t v1 = swift_task_alloc();
  sub_253592BAC(v1);
  sub_253462A5C(&qword_26B24A5A0);
  sub_253462A5C(&qword_26B24A590);
  sub_253591FDC();
  void *v0 = v2;
  v0[1] = sub_253583488;
  uint64_t v3 = sub_253591EA0();
  return MEMORY[0x270FA1FA8](v3);
}

uint64_t sub_253583488()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 184) = v0;
  swift_task_dealloc();
  swift_release();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_253583580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  sub_253592210();
  sub_253B08930();
  sub_253B08960();
  sub_253B09DB0();
  if (sub_253592534())
  {
    uint64_t v13 = (_WORD *)sub_2534AF384();
    sub_253592468(v13);
    sub_253578984();
    sub_2535920F0(&dword_253460000, v14, v15, v16, "IF.ToolKitExecutionSession.undo", "");
    sub_2534659B4();
  }
  sub_253592EB8();
  uint64_t v17 = sub_253591C58();
  v18(v17);
  sub_253B089B0();
  sub_253578768();
  uint64_t v19 = sub_253578748();
  uint64_t v20 = sub_253591D78(v19);
  v21(v20);
  uint64_t v22 = sub_253591E44();
  v23(v22);
  swift_getObjectType();
  uint64_t v24 = (void *)swift_task_alloc();
  *(void *)(v12 + 240) = v24;
  *uint64_t v24 = v12;
  v24[1] = sub_2535836A8;
  sub_253592B4C();
  sub_253591C20();
  return MEMORY[0x270F7FBD8](v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12);
}

uint64_t sub_2535836A8()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 248) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_253583784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_253591F04();
  sub_253592434();
  sub_2535921C8();
  uint64_t v21 = sub_253B08960();
  sub_2535920A8();
  sub_253B09DA0();
  if (sub_25357914C())
  {
    sub_253592E58();
    sub_253B089C0();
    swift_release();
    uint64_t v22 = sub_25357842C();
    if (v23(v22) != *MEMORY[0x263F90238])
    {
      sub_253591C10();
      v24();
    }
    uint64_t v25 = (_WORD *)sub_2534AF384();
    sub_253578990(v25);
    sub_253578978();
    sub_253591DF8(&dword_253460000, v21, v26, v27, "IF.ToolKitExecutionSession.undo");
    sub_253591C78();
  }
  sub_253592230();
  uint64_t v28 = sub_253592678();
  v20(v28);
  uint64_t v29 = sub_2535925F4();
  ((void (*)(uint64_t))v21)(v29);
  swift_release();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_253529DC4();
  sub_253591E84();
  return v31(v30, v31, v32, v33, v34, v35, v36, v37, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_2535838E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  sub_253592E90();
  uint64_t v14 = sub_253B08960();
  sub_2535920A8();
  sub_253B09DA0();
  if (sub_253592584())
  {
    sub_253592E38();
    sub_253B089C0();
    swift_release();
    uint64_t v15 = sub_253591E2C();
    if (v16(v15) != *MEMORY[0x263F90238])
    {
      sub_253591C10();
      v17();
    }
    uint64_t v18 = (_WORD *)sub_2534AF384();
    sub_253578990(v18);
    sub_253578978();
    sub_253591DF8(&dword_253460000, v14, v19, v20, "IF.ToolKitExecutionSession.undo");
    sub_253591C78();
  }
  sub_2535926D4();
  uint64_t v21 = sub_253578D2C();
  v12(v21);
  uint64_t v22 = sub_2534D9B1C();
  v13(v22);
  swift_release();
  swift_unknownObjectRelease();
  sub_2535926B0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  sub_253591C20();
  return v24(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10, a11, a12);
}

uint64_t ToolKitExecutionSession.redo(_:)()
{
  sub_253477168();
  v1[4] = v2;
  v1[5] = v0;
  uint64_t v3 = sub_253B08980();
  v1[6] = v3;
  sub_25346CB34(v3);
  v1[7] = v4;
  v1[8] = sub_2534727DC();
  v1[9] = swift_task_alloc();
  uint64_t v5 = sub_253B08940();
  v1[10] = v5;
  sub_25346CB34(v5);
  v1[11] = v6;
  v1[12] = sub_2534727DC();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = sub_253592890(v7);
  v1[15] = sub_253592610(v8);
  uint64_t v9 = sub_253B08970();
  v1[16] = v9;
  sub_25346CB34(v9);
  v1[17] = v10;
  v1[18] = sub_2534727DC();
  uint64_t v11 = swift_task_alloc();
  v1[20] = sub_253592800(v11);
  sub_25347719C();
  return MEMORY[0x270FA2498](v12, v13, v14);
}

uint64_t sub_253583B60()
{
  sub_253529DB8();
  sub_253592D50();
  uint64_t v0 = (void *)*(unsigned int *)(MEMORY[0x263F8F5C8] + 4);
  swift_retain();
  uint64_t v1 = swift_task_alloc();
  sub_253592BAC(v1);
  sub_253462A5C(&qword_26B24A5A0);
  sub_253462A5C(&qword_26B24A590);
  sub_253591FDC();
  void *v0 = v2;
  v0[1] = sub_253583C24;
  uint64_t v3 = sub_253591EA0();
  return MEMORY[0x270FA1FA8](v3);
}

uint64_t sub_253583C24()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 184) = v0;
  swift_task_dealloc();
  swift_release();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_253583D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  sub_253592210();
  sub_253B08930();
  sub_253B08960();
  sub_253B09DB0();
  if (sub_253592534())
  {
    uint64_t v13 = (_WORD *)sub_2534AF384();
    sub_253592468(v13);
    sub_253578984();
    sub_2535920F0(&dword_253460000, v14, v15, v16, "IF.ToolKitExecutionSession.redo", "");
    sub_2534659B4();
  }
  sub_253592EB8();
  uint64_t v17 = sub_253591C58();
  v18(v17);
  sub_253B089B0();
  sub_253578768();
  uint64_t v19 = sub_253578748();
  uint64_t v20 = sub_253591D78(v19);
  v21(v20);
  uint64_t v22 = sub_253591E44();
  v23(v22);
  swift_getObjectType();
  uint64_t v24 = (void *)swift_task_alloc();
  *(void *)(v12 + 240) = v24;
  *uint64_t v24 = v12;
  v24[1] = sub_253583E44;
  sub_253592B4C();
  sub_253591C20();
  return MEMORY[0x270F7FBD0](v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12);
}

uint64_t sub_253583E44()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 248) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_253583F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_253591F04();
  sub_253592434();
  sub_2535921C8();
  uint64_t v21 = sub_253B08960();
  sub_2535920A8();
  sub_253B09DA0();
  if (sub_25357914C())
  {
    sub_253592E58();
    sub_253B089C0();
    swift_release();
    uint64_t v22 = sub_25357842C();
    if (v23(v22) != *MEMORY[0x263F90238])
    {
      sub_253591C10();
      v24();
    }
    uint64_t v25 = (_WORD *)sub_2534AF384();
    sub_253578990(v25);
    sub_253578978();
    sub_253591DF8(&dword_253460000, v21, v26, v27, "IF.ToolKitExecutionSession.redo");
    sub_253591C78();
  }
  sub_253592230();
  uint64_t v28 = sub_253592678();
  v20(v28);
  uint64_t v29 = sub_2535925F4();
  ((void (*)(uint64_t))v21)(v29);
  swift_release();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_253529DC4();
  sub_253591E84();
  return v31(v30, v31, v32, v33, v34, v35, v36, v37, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_253584080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  sub_2535926B0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  sub_253591C20();
  return v13(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10, a11, a12);
}

uint64_t sub_253584120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  sub_253592E90();
  uint64_t v14 = sub_253B08960();
  sub_2535920A8();
  sub_253B09DA0();
  if (sub_253592584())
  {
    sub_253592E38();
    sub_253B089C0();
    swift_release();
    uint64_t v15 = sub_253591E2C();
    if (v16(v15) != *MEMORY[0x263F90238])
    {
      sub_253591C10();
      v17();
    }
    uint64_t v18 = (_WORD *)sub_2534AF384();
    sub_253578990(v18);
    sub_253578978();
    sub_253591DF8(&dword_253460000, v14, v19, v20, "IF.ToolKitExecutionSession.redo");
    sub_253591C78();
  }
  sub_2535926D4();
  uint64_t v21 = sub_253578D2C();
  v12(v21);
  uint64_t v22 = sub_2534D9B1C();
  v13(v22);
  swift_release();
  swift_unknownObjectRelease();
  sub_2535926B0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  sub_253591C20();
  return v24(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10, a11, a12);
}

uint64_t ToolKitExecutionSession.resolve(reference:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return sub_25353546C((uint64_t)sub_25358429C);
}

{
  uint64_t v2;
  void *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return sub_25353546C((uint64_t)sub_2535852A4);
}

{
  uint64_t v2;
  void *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return sub_25353546C((uint64_t)sub_253588FFC);
}

uint64_t sub_25358429C()
{
  sub_253477168();
  sub_253592C24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_253592600(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_253591C04;
  sub_253592BD4();
  return ConcurrencySafeToolKitExecutionSession.resolve(reference:)();
}

uint64_t ConcurrencySafeToolKitExecutionSession.resolve(reference:)()
{
  sub_253477168();
  uint64_t v3 = sub_253592AF4(v1, v2);
  v0[7] = v3;
  sub_25346CB34(v3);
  v0[8] = v4;
  uint64_t v5 = sub_2534727DC();
  uint64_t v6 = sub_253592E78(v5);
  uint64_t v7 = sub_253592F50(v6);
  v0[11] = v7;
  sub_25346CB34(v7);
  v0[12] = v8;
  uint64_t v9 = sub_2534727DC();
  uint64_t v10 = sub_253592890(v9);
  uint64_t v11 = sub_253592610(v10);
  uint64_t v12 = sub_253592878(v11);
  uint64_t v13 = sub_253592E20(v12);
  v0[17] = v13;
  sub_25346CB34(v13);
  v0[18] = v14;
  uint64_t v15 = sub_2534727DC();
  uint64_t v16 = sub_253592800(v15);
  v0[21] = sub_2535928C8(v16);
  sub_25347719C();
  return MEMORY[0x270FA2498](v17, v18, v19);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  sub_253477168();
  uint64_t v3 = sub_253592AF4(v1, v2);
  v0[7] = v3;
  sub_25346CB34(v3);
  v0[8] = v4;
  uint64_t v5 = sub_2534727DC();
  uint64_t v6 = sub_253592E78(v5);
  uint64_t v7 = sub_253592F50(v6);
  v0[11] = v7;
  sub_25346CB34(v7);
  v0[12] = v8;
  uint64_t v9 = sub_2534727DC();
  uint64_t v10 = sub_253592890(v9);
  uint64_t v11 = sub_253592610(v10);
  uint64_t v12 = sub_253592878(v11);
  uint64_t v13 = sub_253592E20(v12);
  v0[17] = v13;
  sub_25346CB34(v13);
  v0[18] = v14;
  uint64_t v15 = sub_2534727DC();
  uint64_t v16 = sub_253592800(v15);
  v0[21] = sub_2535928C8(v16);
  sub_25347719C();
  return MEMORY[0x270FA2498](v17, v18, v19);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_253477168();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = sub_253B09120();
  v1[5] = v4;
  sub_25346CB34(v4);
  v1[6] = v5;
  v1[7] = sub_253472828();
  uint64_t v6 = sub_253B090E0();
  v1[8] = v6;
  sub_25346CB34(v6);
  v1[9] = v7;
  v1[10] = sub_253472828();
  sub_25347719C();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

uint64_t sub_253584410()
{
  sub_253529DB8();
  sub_253592A30();
  uint64_t v1 = swift_task_alloc();
  sub_253592BAC(v1);
  sub_253462A5C(&qword_26B24A5A0);
  sub_253462A5C(&qword_26B24A590);
  sub_253591FDC();
  void *v0 = v2;
  v0[1] = sub_2535844C8;
  uint64_t v3 = sub_253591EA0();
  return MEMORY[0x270FA1FA8](v3);
}

uint64_t sub_2535844C8()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 184) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_2535845A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  sub_2535921E8();
  sub_253B08930();
  sub_253B08960();
  sub_253B09DB0();
  if (sub_253592534())
  {
    uint64_t v12 = (_WORD *)sub_2534AF384();
    sub_253592468(v12);
    sub_253578984();
    sub_2535920F0(&dword_253460000, v13, v14, v15, "IF.ToolKitExecutionSession.resolve", "");
    sub_2534659B4();
  }
  sub_2535925D4();
  uint64_t v16 = sub_253591C58();
  v17(v16);
  sub_253B089B0();
  sub_253578768();
  uint64_t v18 = sub_253578748();
  uint64_t v19 = sub_253591D78(v18);
  v20(v19);
  uint64_t v21 = sub_253591E44();
  v22(v21);
  swift_getObjectType();
  uint64_t v23 = swift_task_alloc();
  uint64_t v24 = (void *)sub_2535927E4(v23);
  *uint64_t v24 = v25;
  v24[1] = sub_2535846C0;
  sub_253592364();
  sub_253591C20();
  return MEMORY[0x270F7FC08](v26, v27, v28, v29, v30, v31, v32, v33, a9, a10, a11, a12);
}

uint64_t sub_2535846C0()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 248) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25358479C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_253591F04();
  sub_253592434();
  uint64_t v21 = *(void (**)(uint64_t))(v20 + 200);
  sub_2535922B0();
  uint64_t v22 = sub_253B08960();
  sub_2535920A8();
  sub_253B09DA0();
  if (sub_25357914C())
  {
    sub_253592500();
    sub_253B089C0();
    swift_release();
    uint64_t v23 = sub_25357842C();
    if (v24(v23) != *MEMORY[0x263F90238])
    {
      sub_253591C10();
      v25();
    }
    uint64_t v26 = (_WORD *)sub_2534AF384();
    sub_253578990(v26);
    sub_253578978();
    sub_253591DF8(&dword_253460000, v22, v27, v28, "IF.ToolKitExecutionSession.resolve");
    sub_253591C78();
  }
  sub_253591CF0();
  uint64_t v29 = sub_253592678();
  v21(v29);
  uint64_t v30 = sub_2535925F4();
  ((void (*)(uint64_t))v22)(v30);
  swift_release();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_253529DC4();
  sub_253591E84();
  return v32(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_253584900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  sub_2535921C8();
  os_signpost_type_t v14 = sub_253B08960();
  sub_2535920A8();
  sub_253B09DA0();
  if (sub_253592584())
  {
    sub_2535924E0();
    sub_253B089C0();
    swift_release();
    uint64_t v15 = sub_253591E2C();
    if (v16(v15) != *MEMORY[0x263F90238])
    {
      sub_253591C10();
      v17();
    }
    uint64_t v18 = (_WORD *)sub_2534AF384();
    sub_253578990(v18);
    sub_253578978();
    sub_253591DF8(&dword_253460000, v14, v19, v20, "IF.ToolKitExecutionSession.resolve");
    sub_253591C78();
  }
  sub_253591FA8();
  uint64_t v21 = sub_253578D2C();
  v12(v21);
  uint64_t v22 = sub_2534D9B1C();
  v13(v22);
  swift_release();
  swift_unknownObjectRelease();
  sub_2535921A4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  sub_253591C20();
  return v24(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10, a11, a12);
}

uint64_t ToolKitExecutionSession.resolve(reference:coercedTo:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return sub_25353546C((uint64_t)sub_253584A7C);
}

{
  uint64_t v3;
  void *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return sub_25353546C((uint64_t)sub_253585A84);
}

uint64_t sub_253584A7C()
{
  sub_253477168();
  sub_253592F68();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_253592424(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_253591BF0;
  sub_253592DA8();
  return ConcurrencySafeToolKitExecutionSession.resolve(reference:coercedTo:)();
}

uint64_t ConcurrencySafeToolKitExecutionSession.resolve(reference:coercedTo:)()
{
  sub_253477168();
  uint64_t v4 = sub_253592C7C(v1, v2, v3);
  v0[8] = v4;
  sub_25346CB34(v4);
  v0[9] = v5;
  uint64_t v6 = sub_2534727DC();
  v0[11] = sub_253592F38(v6);
  uint64_t v7 = sub_253B08940();
  v0[12] = v7;
  sub_25346CB34(v7);
  v0[13] = v8;
  uint64_t v9 = sub_2534727DC();
  uint64_t v10 = sub_253592610(v9);
  v0[16] = sub_253592878(v10);
  v0[17] = swift_task_alloc();
  uint64_t v11 = sub_253B08970();
  v0[18] = v11;
  sub_25346CB34(v11);
  v0[19] = v12;
  uint64_t v13 = sub_2534727DC();
  v0[21] = sub_2535928C8(v13);
  v0[22] = swift_task_alloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v14, v15, v16);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  sub_253477168();
  uint64_t v4 = sub_253592C7C(v1, v2, v3);
  v0[8] = v4;
  sub_25346CB34(v4);
  v0[9] = v5;
  uint64_t v6 = sub_2534727DC();
  v0[11] = sub_253592F38(v6);
  uint64_t v7 = sub_253B08940();
  v0[12] = v7;
  sub_25346CB34(v7);
  v0[13] = v8;
  uint64_t v9 = sub_2534727DC();
  uint64_t v10 = sub_253592610(v9);
  v0[16] = sub_253592878(v10);
  v0[17] = swift_task_alloc();
  uint64_t v11 = sub_253B08970();
  v0[18] = v11;
  sub_25346CB34(v11);
  v0[19] = v12;
  uint64_t v13 = sub_2534727DC();
  v0[21] = sub_2535928C8(v13);
  v0[22] = swift_task_alloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v14, v15, v16);
}

uint64_t sub_253584C10()
{
  sub_253529DB8();
  sub_253592D40();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v1;
  sub_253462A5C(&qword_26B24A5A0);
  sub_253462A5C(&qword_26B24A590);
  sub_253591FDC();
  *uint64_t v1 = v2;
  v1[1] = sub_253584CCC;
  uint64_t v3 = sub_253591EA0();
  return MEMORY[0x270FA1FA8](v3);
}

uint64_t sub_253584CCC()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 192) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_253584DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  sub_253592480();
  sub_253B08930();
  sub_253B08960();
  sub_253B09DB0();
  if (sub_253592534())
  {
    uint64_t v15 = (_WORD *)sub_2534AF384();
    sub_253592468(v15);
    sub_253578984();
    sub_2535920F0(&dword_253460000, v16, v17, v18, "IF.ToolKitExecutionSession.resolveCoercedTo", "");
    sub_2534659B4();
  }
  sub_253592AD4();
  uint64_t v19 = sub_253591C58();
  v20(v19);
  sub_253B089B0();
  sub_253578768();
  v13[26] = sub_253578748();
  v13[27] = *(void *)(v12 + 8);
  v13[28] = (v12 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v21 = sub_253591ED4();
  v22(v21);
  v13[29] = *(void *)(v14 + 8);
  v13[30] = (v14 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v23 = sub_253591F78();
  v24(v23);
  swift_getObjectType();
  uint64_t v25 = swift_task_alloc();
  uint64_t v26 = (void *)sub_253592C14(v25);
  *uint64_t v26 = v27;
  v26[1] = sub_253584EE8;
  sub_25359244C();
  sub_253591C20();
  return MEMORY[0x270F7FBF8](v28, v29, v30, v31, v32, v33, v34, v35, a9, a10, a11, a12);
}

uint64_t sub_253584EE8()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 256) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_253584FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_253591F04();
  sub_253592434();
  sub_253592B10();
  uint64_t v21 = sub_253B08960();
  sub_2535920A8();
  sub_253B09DA0();
  if (sub_25357914C())
  {
    sub_253592A94();
    sub_253B089C0();
    swift_release();
    uint64_t v22 = sub_25357842C();
    if (v23(v22) != *MEMORY[0x263F90238])
    {
      sub_253591C10();
      v24();
    }
    uint64_t v25 = (_WORD *)sub_2534AF384();
    sub_253578990(v25);
    sub_253578978();
    sub_253591DF8(&dword_253460000, v21, v26, v27, "IF.ToolKitExecutionSession.resolveCoercedTo");
    sub_253591C78();
  }
  sub_253591F20();
  uint64_t v28 = sub_253592678();
  v20(v28);
  uint64_t v29 = sub_2535925F4();
  ((void (*)(uint64_t))v21)(v29);
  swift_release();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_253529DC4();
  sub_253591E84();
  return v31(v30, v31, v32, v33, v34, v35, v36, v37, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_253585124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  uint64_t v14 = *(void (**)(uint64_t))(v12 + 208);
  sub_2535922B0();
  uint64_t v15 = sub_253B08960();
  sub_2535920A8();
  sub_253B09DA0();
  if (sub_253592584())
  {
    sub_253592AB4();
    sub_253B089C0();
    swift_release();
    uint64_t v16 = sub_253591E2C();
    if (v17(v16) != *MEMORY[0x263F90238])
    {
      sub_253591C10();
      v18();
    }
    uint64_t v19 = (_WORD *)sub_2534AF384();
    sub_253578990(v19);
    sub_253578978();
    sub_253591DF8(&dword_253460000, v15, v20, v21, "IF.ToolKitExecutionSession.resolveCoercedTo");
    sub_253591C78();
  }
  sub_253592170();
  uint64_t v22 = sub_253578D2C();
  v14(v22);
  uint64_t v23 = sub_2534D9B1C();
  v13(v23);
  swift_release();
  swift_unknownObjectRelease();
  sub_253592330();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  sub_253591C20();
  return v25(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10, a11, a12);
}

uint64_t sub_2535852A4()
{
  sub_253477168();
  sub_253592C24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_253592600(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_253591C04;
  sub_253592BD4();
  return ConcurrencySafeToolKitExecutionSession.resolve(reference:)();
}

uint64_t sub_253585418()
{
  sub_253529DB8();
  sub_253592A30();
  uint64_t v1 = swift_task_alloc();
  sub_253592BAC(v1);
  sub_253462A5C(&qword_26B24A5A0);
  sub_253462A5C(&qword_26B24A590);
  sub_253591FDC();
  void *v0 = v2;
  v0[1] = sub_2535854D0;
  uint64_t v3 = sub_253591EA0();
  return MEMORY[0x270FA1FA8](v3);
}

uint64_t sub_2535854D0()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 184) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_2535855AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  sub_2535921E8();
  sub_253B08930();
  sub_253B08960();
  sub_253B09DB0();
  if (sub_253592534())
  {
    uint64_t v12 = (_WORD *)sub_2534AF384();
    sub_253592468(v12);
    sub_253578984();
    sub_2535920F0(&dword_253460000, v13, v14, v15, "IF.ToolKitExecutionSession.resolveDeferredValue", "");
    sub_2534659B4();
  }
  sub_2535925D4();
  uint64_t v16 = sub_253591C58();
  v17(v16);
  sub_253B089B0();
  sub_253578768();
  uint64_t v18 = sub_253578748();
  uint64_t v19 = sub_253591D78(v18);
  v20(v19);
  uint64_t v21 = sub_253591E44();
  v22(v21);
  swift_getObjectType();
  uint64_t v23 = swift_task_alloc();
  uint64_t v24 = (void *)sub_2535927E4(v23);
  *uint64_t v24 = v25;
  v24[1] = sub_2535856C8;
  sub_253592364();
  sub_253591C20();
  return MEMORY[0x270F7FC00](v26, v27, v28, v29, v30, v31, v32, v33, a9, a10, a11, a12);
}

uint64_t sub_2535856C8()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 248) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_2535857A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_253591F04();
  sub_253592434();
  uint64_t v21 = *(void (**)(uint64_t))(v20 + 200);
  sub_2535922B0();
  uint64_t v22 = sub_253B08960();
  sub_2535920A8();
  sub_253B09DA0();
  if (sub_25357914C())
  {
    sub_253592500();
    sub_253B089C0();
    swift_release();
    uint64_t v23 = sub_25357842C();
    if (v24(v23) != *MEMORY[0x263F90238])
    {
      sub_253591C10();
      v25();
    }
    uint64_t v26 = (_WORD *)sub_2534AF384();
    sub_253578990(v26);
    sub_253578978();
    sub_253591DF8(&dword_253460000, v22, v27, v28, "IF.ToolKitExecutionSession.resolveDeferredValue");
    sub_253591C78();
  }
  sub_253591CF0();
  uint64_t v29 = sub_253592678();
  v21(v29);
  uint64_t v30 = sub_2535925F4();
  ((void (*)(uint64_t))v22)(v30);
  swift_release();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_253529DC4();
  sub_253591E84();
  return v32(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_253585908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  sub_2535921C8();
  os_signpost_type_t v14 = sub_253B08960();
  sub_2535920A8();
  sub_253B09DA0();
  if (sub_253592584())
  {
    sub_2535924E0();
    sub_253B089C0();
    swift_release();
    uint64_t v15 = sub_253591E2C();
    if (v16(v15) != *MEMORY[0x263F90238])
    {
      sub_253591C10();
      v17();
    }
    uint64_t v18 = (_WORD *)sub_2534AF384();
    sub_253578990(v18);
    sub_253578978();
    sub_253591DF8(&dword_253460000, v14, v19, v20, "IF.ToolKitExecutionSession.resolveDeferredValue");
    sub_253591C78();
  }
  sub_253591FA8();
  uint64_t v21 = sub_253578D2C();
  v12(v21);
  uint64_t v22 = sub_2534D9B1C();
  v13(v22);
  swift_release();
  swift_unknownObjectRelease();
  sub_2535921A4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  sub_253591C20();
  return v24(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10, a11, a12);
}

uint64_t sub_253585A84()
{
  sub_253477168();
  sub_253592F68();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_253592424(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_253591BF0;
  sub_253592DA8();
  return ConcurrencySafeToolKitExecutionSession.resolve(reference:coercedTo:)();
}

uint64_t sub_253585C18()
{
  sub_253529DB8();
  sub_253592D40();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v1;
  sub_253462A5C(&qword_26B24A5A0);
  sub_253462A5C(&qword_26B24A590);
  sub_253591FDC();
  *uint64_t v1 = v2;
  v1[1] = sub_253585CD4;
  uint64_t v3 = sub_253591EA0();
  return MEMORY[0x270FA1FA8](v3);
}

uint64_t sub_253585CD4()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 192) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_253585DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  sub_253592480();
  sub_253B08930();
  sub_253B08960();
  sub_253B09DB0();
  if (sub_253592534())
  {
    uint64_t v15 = (_WORD *)sub_2534AF384();
    sub_253592468(v15);
    sub_253578984();
    sub_2535920F0(&dword_253460000, v16, v17, v18, "IF.ToolKitExecutionSession.resolveDeferredValueCoercedTo", "");
    sub_2534659B4();
  }
  sub_253592AD4();
  uint64_t v19 = sub_253591C58();
  v20(v19);
  sub_253B089B0();
  sub_253578768();
  v13[26] = sub_253578748();
  v13[27] = *(void *)(v12 + 8);
  v13[28] = (v12 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v21 = sub_253591ED4();
  v22(v21);
  v13[29] = *(void *)(v14 + 8);
  v13[30] = (v14 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v23 = sub_253591F78();
  v24(v23);
  swift_getObjectType();
  uint64_t v25 = swift_task_alloc();
  uint64_t v26 = (void *)sub_253592C14(v25);
  *uint64_t v26 = v27;
  v26[1] = sub_253585EF0;
  sub_25359244C();
  sub_253591C20();
  return MEMORY[0x270F7FBF0](v28, v29, v30, v31, v32, v33, v34, v35, a9, a10, a11, a12);
}

uint64_t sub_253585EF0()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 256) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_253585FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_253591F04();
  sub_253592434();
  sub_253592B10();
  uint64_t v21 = sub_253B08960();
  sub_2535920A8();
  sub_253B09DA0();
  if (sub_25357914C())
  {
    sub_253592A94();
    sub_253B089C0();
    swift_release();
    uint64_t v22 = sub_25357842C();
    if (v23(v22) != *MEMORY[0x263F90238])
    {
      sub_253591C10();
      v24();
    }
    uint64_t v25 = (_WORD *)sub_2534AF384();
    sub_253578990(v25);
    sub_253578978();
    sub_253591DF8(&dword_253460000, v21, v26, v27, "IF.ToolKitExecutionSession.resolveDeferredValueCoercedTo");
    sub_253591C78();
  }
  sub_253591F20();
  uint64_t v28 = sub_253592678();
  v20(v28);
  uint64_t v29 = sub_2535925F4();
  ((void (*)(uint64_t))v21)(v29);
  swift_release();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_253529DC4();
  sub_253591E84();
  return v31(v30, v31, v32, v33, v34, v35, v36, v37, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_25358612C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  uint64_t v14 = *(void (**)(uint64_t))(v12 + 208);
  sub_2535922B0();
  uint64_t v15 = sub_253B08960();
  sub_2535920A8();
  sub_253B09DA0();
  if (sub_253592584())
  {
    sub_253592AB4();
    sub_253B089C0();
    swift_release();
    uint64_t v16 = sub_253591E2C();
    if (v17(v16) != *MEMORY[0x263F90238])
    {
      sub_253591C10();
      v18();
    }
    uint64_t v19 = (_WORD *)sub_2534AF384();
    sub_253578990(v19);
    sub_253578978();
    sub_253591DF8(&dword_253460000, v15, v20, v21, "IF.ToolKitExecutionSession.resolveDeferredValueCoercedTo");
    sub_253591C78();
  }
  sub_253592170();
  uint64_t v22 = sub_253578D2C();
  v14(v22);
  uint64_t v23 = sub_2534D9B1C();
  v13(v23);
  swift_release();
  swift_unknownObjectRelease();
  sub_253592330();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  sub_253591C20();
  return v25(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10, a11, a12);
}

uint64_t ToolKitExecutionSession.inject(value:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return sub_25353546C((uint64_t)sub_2535862AC);
}

uint64_t sub_2535862AC()
{
  sub_253477168();
  sub_253592C24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_253592600(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_253591C04;
  sub_253592BD4();
  return ConcurrencySafeToolKitExecutionSession.inject(value:)();
}

uint64_t ConcurrencySafeToolKitExecutionSession.inject(value:)()
{
  sub_253477168();
  uint64_t v3 = sub_253592AF4(v1, v2);
  v0[7] = v3;
  sub_25346CB34(v3);
  v0[8] = v4;
  uint64_t v5 = sub_2534727DC();
  uint64_t v6 = sub_253592E78(v5);
  uint64_t v7 = sub_253592F50(v6);
  v0[11] = v7;
  sub_25346CB34(v7);
  v0[12] = v8;
  uint64_t v9 = sub_2534727DC();
  uint64_t v10 = sub_253592890(v9);
  uint64_t v11 = sub_253592610(v10);
  uint64_t v12 = sub_253592878(v11);
  uint64_t v13 = sub_253592E20(v12);
  v0[17] = v13;
  sub_25346CB34(v13);
  v0[18] = v14;
  uint64_t v15 = sub_2534727DC();
  uint64_t v16 = sub_253592800(v15);
  v0[21] = sub_2535928C8(v16);
  sub_25347719C();
  return MEMORY[0x270FA2498](v17, v18, v19);
}

uint64_t sub_253586420()
{
  sub_253529DB8();
  sub_253592A30();
  uint64_t v1 = swift_task_alloc();
  sub_253592BAC(v1);
  sub_253462A5C(&qword_26B24A5A0);
  sub_253462A5C(&qword_26B24A590);
  sub_253591FDC();
  void *v0 = v2;
  v0[1] = sub_2535864D8;
  uint64_t v3 = sub_253591EA0();
  return MEMORY[0x270FA1FA8](v3);
}

uint64_t sub_2535864D8()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 184) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_2535865B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  sub_2535921E8();
  sub_253B08930();
  sub_253B08960();
  sub_253B09DB0();
  if (sub_253592534())
  {
    uint64_t v12 = (_WORD *)sub_2534AF384();
    sub_253592468(v12);
    sub_253578984();
    sub_2535920F0(&dword_253460000, v13, v14, v15, "IF.ToolKitExecutionSession.inject", "");
    sub_2534659B4();
  }
  sub_2535925D4();
  uint64_t v16 = sub_253591C58();
  v17(v16);
  sub_253B089B0();
  sub_253578768();
  uint64_t v18 = sub_253578748();
  uint64_t v19 = sub_253591D78(v18);
  v20(v19);
  uint64_t v21 = sub_253591E44();
  v22(v21);
  swift_getObjectType();
  uint64_t v23 = swift_task_alloc();
  uint64_t v24 = (void *)sub_2535927E4(v23);
  *uint64_t v24 = v25;
  v24[1] = sub_2535866D0;
  sub_253592364();
  sub_253591C20();
  return MEMORY[0x270F7FBE0](v26, v27, v28, v29, v30, v31, v32, v33, a9, a10, a11, a12);
}

uint64_t sub_2535866D0()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 248) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_2535867AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_253591F04();
  sub_253592434();
  uint64_t v21 = *(void (**)(uint64_t))(v20 + 200);
  sub_2535922B0();
  uint64_t v22 = sub_253B08960();
  sub_2535920A8();
  sub_253B09DA0();
  if (sub_25357914C())
  {
    sub_253592500();
    sub_253B089C0();
    swift_release();
    uint64_t v23 = sub_25357842C();
    if (v24(v23) != *MEMORY[0x263F90238])
    {
      sub_253591C10();
      v25();
    }
    uint64_t v26 = (_WORD *)sub_2534AF384();
    sub_253578990(v26);
    sub_253578978();
    sub_253591DF8(&dword_253460000, v22, v27, v28, "IF.ToolKitExecutionSession.inject");
    sub_253591C78();
  }
  sub_253591CF0();
  uint64_t v29 = sub_253592678();
  v21(v29);
  uint64_t v30 = sub_2535925F4();
  ((void (*)(uint64_t))v22)(v30);
  swift_release();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_253529DC4();
  sub_253591E84();
  return v32(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_253586910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  sub_2535921C8();
  os_signpost_type_t v14 = sub_253B08960();
  sub_2535920A8();
  sub_253B09DA0();
  if (sub_253592584())
  {
    sub_2535924E0();
    sub_253B089C0();
    swift_release();
    uint64_t v15 = sub_253591E2C();
    if (v16(v15) != *MEMORY[0x263F90238])
    {
      sub_253591C10();
      v17();
    }
    uint64_t v18 = (_WORD *)sub_2534AF384();
    sub_253578990(v18);
    sub_253578978();
    sub_253591DF8(&dword_253460000, v14, v19, v20, "IF.ToolKitExecutionSession.inject");
    sub_253591C78();
  }
  sub_253591FA8();
  uint64_t v21 = sub_253578D2C();
  v12(v21);
  uint64_t v22 = sub_2534D9B1C();
  v13(v22);
  swift_release();
  swift_unknownObjectRelease();
  sub_2535921A4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  sub_253591C20();
  return v24(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10, a11, a12);
}

uint64_t ToolKitExecutionSession.enumerate(valueSet:in:query:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return sub_25353546C((uint64_t)sub_253586A8C);
}

uint64_t sub_253586A8C()
{
  sub_253477168();
  sub_253592F68();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_253586B24;
  return ConcurrencySafeToolKitExecutionSession.enumerate(valueSet:in:query:)();
}

uint64_t sub_253586B24()
{
  sub_253477168();
  uint64_t v3 = v2;
  sub_253477088();
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  sub_253592DD0();
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t ConcurrencySafeToolKitExecutionSession.enumerate(valueSet:in:query:)()
{
  sub_253477168();
  v1[9] = v2;
  v1[10] = v0;
  v1[7] = v3;
  v1[8] = v4;
  uint64_t v5 = sub_253B08980();
  v1[11] = v5;
  sub_25346CB34(v5);
  v1[12] = v6;
  uint64_t v7 = sub_2534727DC();
  v1[14] = sub_253592890(v7);
  uint64_t v8 = sub_253B08940();
  v1[15] = v8;
  sub_25346CB34(v8);
  v1[16] = v9;
  v1[17] = sub_2534727DC();
  v1[18] = swift_task_alloc();
  uint64_t v10 = swift_task_alloc();
  v1[20] = sub_253592800(v10);
  uint64_t v11 = sub_253B08970();
  v1[21] = v11;
  sub_25346CB34(v11);
  v1[22] = v12;
  v1[23] = sub_2534727DC();
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v13, v14, v15);
}

uint64_t sub_253586D18()
{
  sub_253529DB8();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 208) = v1;
  sub_253462A5C(&qword_26B24A5A0);
  sub_253462A5C(&qword_26B24A590);
  sub_253591FDC();
  *uint64_t v1 = v2;
  v1[1] = sub_253586DDC;
  uint64_t v3 = sub_253591EA0();
  return MEMORY[0x270FA1FA8](v3);
}

uint64_t sub_253586DDC()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 216) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_253586EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  uint64_t v36 = v12[6];
  v12[28] = v12[5];
  sub_253B077C0();
  sub_253B08930();
  uint64_t v13 = (void *)sub_253B08960();
  sub_253B09DB0();
  if (sub_253592534())
  {
    uint64_t v14 = (_WORD *)sub_2534AF384();
    sub_253592468(v14);
    sub_253578984();
    sub_2535920F0(&dword_253460000, v15, v16, v17, "IF.ToolKitExecutionSession.enumerate", "");
    sub_2534659B4();
  }
  uint64_t v18 = v12[22];
  uint64_t v19 = v12[16];

  uint64_t v20 = sub_253591C58();
  v21(v20);
  sub_253B089B0();
  sub_253578768();
  v12[29] = sub_253578748();
  v12[30] = *(void *)(v19 + 8);
  v12[31] = (v19 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v22 = sub_253591ED4();
  v23(v22);
  v12[32] = *(void *)(v18 + 8);
  v12[33] = (v18 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v24 = sub_253591F78();
  v25(v24);
  swift_getObjectType();
  uint64_t v26 = (void *)swift_task_alloc();
  v12[34] = v26;
  *uint64_t v26 = v12;
  v26[1] = sub_25358703C;
  sub_253591C20();
  return MEMORY[0x270F7FC10](v27, v28, v29, v30, v31, v32, v33, v34, v36, a10, a11, a12);
}

uint64_t sub_25358703C()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  v2[2] = v1;
  v2[3] = v4;
  v2[4] = v0;
  uint64_t v5 = *v1;
  sub_253477158();
  *uint64_t v6 = v5;
  *(void *)(v7 + 280) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

uint64_t sub_253587120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_253591F04();
  sub_253592434();
  sub_253B077C0();
  uint64_t v21 = sub_253B08960();
  sub_2535920A8();
  sub_253B09DA0();
  if (sub_25357914C())
  {
    swift_retain();
    sub_253B089C0();
    swift_release();
    uint64_t v22 = sub_25357842C();
    if (v23(v22) != *MEMORY[0x263F90238])
    {
      sub_253591C10();
      v24();
    }
    uint64_t v25 = (_WORD *)sub_2534AF384();
    sub_253578990(v25);
    sub_253578978();
    sub_253591DF8(&dword_253460000, v21, v26, v27, "IF.ToolKitExecutionSession.enumerate");
    sub_253591C78();
  }
  uint64_t v52 = v20[3];
  uint64_t v28 = (void (*)(uint64_t, uint64_t))v20[32];
  uint64_t v29 = (void (*)(uint64_t, uint64_t))v20[30];
  uint64_t v44 = v20[28];
  uint64_t v45 = v20[25];
  uint64_t v30 = v21;
  uint64_t v31 = v20[24];
  uint64_t v32 = v20[21];
  uint64_t v46 = v20[23];
  uint64_t v47 = v20[20];
  uint64_t v33 = v20[18];
  uint64_t v48 = v20[19];
  uint64_t v49 = v20[17];
  uint64_t v34 = v20[15];
  uint64_t v50 = v20[14];
  uint64_t v51 = v20[13];

  v29(v33, v34);
  v28(v31, v32);
  swift_release();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_253592DD0();
  sub_253591E84();
  return v37(v35, v36, v37, v38, v39, v40, v41, v42, v44, v45, v46, v47, v48, v49, v50, v51, v52, a18, a19, a20);
}

uint64_t sub_2535872F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  sub_253592D68();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  sub_253591C20();
  return v13(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10, a11, a12);
}

uint64_t sub_253587394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  sub_253B077C0();
  uint64_t v13 = sub_253B08960();
  sub_2535920A8();
  sub_253B09DA0();
  if (sub_253592584())
  {
    swift_retain();
    sub_253B089C0();
    swift_release();
    uint64_t v14 = sub_253591E2C();
    if (v15(v14) != *MEMORY[0x263F90238])
    {
      sub_253591C10();
      v16();
    }
    uint64_t v17 = (_WORD *)sub_2534AF384();
    sub_253578990(v17);
    sub_253578978();
    sub_253591DF8(&dword_253460000, v13, v18, v19, "IF.ToolKitExecutionSession.enumerate");
    sub_253591C78();
  }
  uint64_t v20 = (void (*)(uint64_t))v12[32];
  uint64_t v21 = (void (*)(uint64_t))v12[30];
  uint64_t v33 = v12[28];

  uint64_t v22 = sub_253578D2C();
  v21(v22);
  uint64_t v23 = sub_2534D9B1C();
  v20(v23);
  swift_release();
  swift_unknownObjectRelease();
  sub_253592D68();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  sub_253591C20();
  return v25(v24, v25, v26, v27, v28, v29, v30, v31, v33, a10, a11, a12);
}

uint64_t ToolKitExecutionSession.fetchToolInvocationSummary(for:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return sub_25353546C((uint64_t)sub_253587554);
}

uint64_t sub_253587554()
{
  sub_253477168();
  sub_253592C24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_253592600(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_2535875DC;
  sub_253592BD4();
  return ConcurrencySafeToolKitExecutionSession.fetchToolInvocationSummary(for:)();
}

uint64_t sub_2535875DC()
{
  sub_253477168();
  sub_253477088();
  uint64_t v1 = *v0;
  sub_253477158();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_2534771C0();
  return v3();
}

uint64_t ConcurrencySafeToolKitExecutionSession.fetchToolInvocationSummary(for:)()
{
  sub_253477168();
  uint64_t v3 = sub_253592AF4(v1, v2);
  v0[7] = v3;
  sub_25346CB34(v3);
  v0[8] = v4;
  uint64_t v5 = sub_2534727DC();
  uint64_t v6 = sub_253592E78(v5);
  uint64_t v7 = sub_253592F50(v6);
  v0[11] = v7;
  sub_25346CB34(v7);
  v0[12] = v8;
  uint64_t v9 = sub_2534727DC();
  uint64_t v10 = sub_253592890(v9);
  uint64_t v11 = sub_253592610(v10);
  uint64_t v12 = sub_253592878(v11);
  uint64_t v13 = sub_253592E20(v12);
  v0[17] = v13;
  sub_25346CB34(v13);
  v0[18] = v14;
  uint64_t v15 = sub_2534727DC();
  uint64_t v16 = sub_253592800(v15);
  v0[21] = sub_2535928C8(v16);
  sub_25347719C();
  return MEMORY[0x270FA2498](v17, v18, v19);
}

uint64_t sub_253587788()
{
  sub_253529DB8();
  sub_253592A30();
  uint64_t v1 = swift_task_alloc();
  sub_253592BAC(v1);
  sub_253462A5C(&qword_26B24A5A0);
  sub_253462A5C(&qword_26B24A590);
  sub_253591FDC();
  void *v0 = v2;
  v0[1] = sub_253587840;
  uint64_t v3 = sub_253591EA0();
  return MEMORY[0x270FA1FA8](v3);
}

uint64_t sub_253587840()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 184) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25358791C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  sub_2535921E8();
  sub_253B08930();
  sub_253B08960();
  sub_253B09DB0();
  if (sub_253592534())
  {
    uint64_t v12 = (_WORD *)sub_2534AF384();
    sub_253592468(v12);
    sub_253578984();
    sub_2535920F0(&dword_253460000, v13, v14, v15, "IF.ToolKitExecutionSession.fetchToolInvocationSummary", "");
    sub_2534659B4();
  }
  sub_2535925D4();
  uint64_t v16 = sub_253591C58();
  v17(v16);
  sub_253B089B0();
  sub_253578768();
  uint64_t v18 = sub_253578748();
  uint64_t v19 = sub_253591D78(v18);
  v20(v19);
  uint64_t v21 = sub_253591E44();
  v22(v21);
  swift_getObjectType();
  uint64_t v23 = swift_task_alloc();
  uint64_t v24 = (void *)sub_2535927E4(v23);
  *uint64_t v24 = v25;
  v24[1] = sub_253587A38;
  sub_253592364();
  sub_253591C20();
  return MEMORY[0x270F7FBC0](v26, v27, v28, v29, v30, v31, v32, v33, a9, a10, a11, a12);
}

uint64_t sub_253587A38()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 248) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_253587B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_253591F04();
  sub_253592434();
  uint64_t v21 = *(void (**)(uint64_t))(v20 + 200);
  sub_2535922B0();
  uint64_t v22 = sub_253B08960();
  sub_2535920A8();
  sub_253B09DA0();
  if (sub_25357914C())
  {
    sub_253592500();
    sub_253B089C0();
    swift_release();
    uint64_t v23 = sub_25357842C();
    if (v24(v23) != *MEMORY[0x263F90238])
    {
      sub_253591C10();
      v25();
    }
    uint64_t v26 = (_WORD *)sub_2534AF384();
    sub_253578990(v26);
    sub_253578978();
    sub_253591DF8(&dword_253460000, v22, v27, v28, "IF.ToolKitExecutionSession.fetchToolInvocationSummary");
    sub_253591C78();
  }
  sub_253591CF0();
  uint64_t v29 = sub_253592678();
  v21(v29);
  uint64_t v30 = sub_2535925F4();
  ((void (*)(uint64_t))v22)(v30);
  swift_release();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_253529DC4();
  sub_253591E84();
  return v32(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_253587C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  sub_2535921A4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  sub_253591C20();
  return v13(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10, a11, a12);
}

uint64_t sub_253587D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  sub_2535921C8();
  uint64_t v14 = sub_253B08960();
  sub_2535920A8();
  sub_253B09DA0();
  if (sub_253592584())
  {
    sub_2535924E0();
    sub_253B089C0();
    swift_release();
    uint64_t v15 = sub_253591E2C();
    if (v16(v15) != *MEMORY[0x263F90238])
    {
      sub_253591C10();
      v17();
    }
    uint64_t v18 = (_WORD *)sub_2534AF384();
    sub_253578990(v18);
    sub_253578978();
    sub_253591DF8(&dword_253460000, v14, v19, v20, "IF.ToolKitExecutionSession.fetchToolInvocationSummary");
    sub_253591C78();
  }
  sub_253591FA8();
  uint64_t v21 = sub_253578D2C();
  v12(v21);
  uint64_t v22 = sub_2534D9B1C();
  v13(v22);
  swift_release();
  swift_unknownObjectRelease();
  sub_2535921A4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  sub_253591C20();
  return v24(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10, a11, a12);
}

uint64_t ToolKitExecutionSession.coerce(value:to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return sub_25353546C((uint64_t)sub_253587E94);
}

uint64_t sub_253587E94()
{
  sub_253477168();
  sub_253592F68();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_253592424(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_253587F1C;
  sub_253592DA8();
  return ConcurrencySafeToolKitExecutionSession.coerce(value:to:)();
}

uint64_t sub_253587F1C()
{
  sub_253477168();
  sub_253477088();
  uint64_t v1 = *v0;
  sub_253477158();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_2534771C0();
  return v3();
}

uint64_t ConcurrencySafeToolKitExecutionSession.coerce(value:to:)()
{
  sub_253477168();
  uint64_t v4 = sub_253592C7C(v1, v2, v3);
  v0[8] = v4;
  sub_25346CB34(v4);
  v0[9] = v5;
  uint64_t v6 = sub_2534727DC();
  v0[11] = sub_253592F38(v6);
  uint64_t v7 = sub_253B08940();
  v0[12] = v7;
  sub_25346CB34(v7);
  v0[13] = v8;
  uint64_t v9 = sub_2534727DC();
  uint64_t v10 = sub_253592610(v9);
  v0[16] = sub_253592878(v10);
  v0[17] = swift_task_alloc();
  uint64_t v11 = sub_253B08970();
  v0[18] = v11;
  sub_25346CB34(v11);
  v0[19] = v12;
  uint64_t v13 = sub_2534727DC();
  v0[21] = sub_2535928C8(v13);
  v0[22] = swift_task_alloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v14, v15, v16);
}

uint64_t sub_2535880E8()
{
  sub_253529DB8();
  sub_253592D40();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v1;
  sub_253462A5C(&qword_26B24A5A0);
  sub_253462A5C(&qword_26B24A590);
  sub_253591FDC();
  *uint64_t v1 = v2;
  v1[1] = sub_2535881A4;
  uint64_t v3 = sub_253591EA0();
  return MEMORY[0x270FA1FA8](v3);
}

uint64_t sub_2535881A4()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 192) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_253588280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  sub_253592480();
  sub_253B08930();
  sub_253B08960();
  sub_253B09DB0();
  if (sub_253592534())
  {
    uint64_t v15 = (_WORD *)sub_2534AF384();
    sub_253592468(v15);
    sub_253578984();
    sub_2535920F0(&dword_253460000, v16, v17, v18, "IF.ToolKitExecutionSession.coerce", "");
    sub_2534659B4();
  }
  sub_253592AD4();
  uint64_t v19 = sub_253591C58();
  v20(v19);
  sub_253B089B0();
  sub_253578768();
  v13[26] = sub_253578748();
  v13[27] = *(void *)(v12 + 8);
  v13[28] = (v12 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v21 = sub_253591ED4();
  v22(v21);
  v13[29] = *(void *)(v14 + 8);
  v13[30] = (v14 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v23 = sub_253591F78();
  v24(v23);
  swift_getObjectType();
  uint64_t v25 = swift_task_alloc();
  uint64_t v26 = (void *)sub_253592C14(v25);
  *uint64_t v26 = v27;
  v26[1] = sub_2535883D4;
  sub_253591C20();
  return MEMORY[0x270F7FC18](v28, v29, v30, v31, v32, v33, v34, v35, a9, a10, a11, a12);
}

uint64_t sub_2535883D4()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 256) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_2535884B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_253591F04();
  sub_253592434();
  sub_253592B10();
  uint64_t v21 = sub_253B08960();
  sub_2535920A8();
  sub_253B09DA0();
  if (sub_25357914C())
  {
    sub_253592A94();
    sub_253B089C0();
    swift_release();
    uint64_t v22 = sub_25357842C();
    if (v23(v22) != *MEMORY[0x263F90238])
    {
      sub_253591C10();
      v24();
    }
    uint64_t v25 = (_WORD *)sub_2534AF384();
    sub_253578990(v25);
    sub_253578978();
    sub_253591DF8(&dword_253460000, v21, v26, v27, "IF.ToolKitExecutionSession.coerce");
    sub_253591C78();
  }
  sub_253591F20();
  uint64_t v28 = sub_253592678();
  v20(v28);
  uint64_t v29 = sub_2535925F4();
  ((void (*)(uint64_t))v21)(v29);
  swift_release();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_253529DC4();
  sub_253591E84();
  return v31(v30, v31, v32, v33, v34, v35, v36, v37, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_253588610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  sub_253592330();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  sub_253591C20();
  return v13(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10, a11, a12);
}

uint64_t sub_2535886B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  uint64_t v14 = *(void (**)(uint64_t))(v12 + 208);
  sub_2535922B0();
  uint64_t v15 = sub_253B08960();
  sub_2535920A8();
  sub_253B09DA0();
  if (sub_253592584())
  {
    sub_253592AB4();
    sub_253B089C0();
    swift_release();
    uint64_t v16 = sub_253591E2C();
    if (v17(v16) != *MEMORY[0x263F90238])
    {
      sub_253591C10();
      v18();
    }
    uint64_t v19 = (_WORD *)sub_2534AF384();
    sub_253578990(v19);
    sub_253578978();
    sub_253591DF8(&dword_253460000, v15, v20, v21, "IF.ToolKitExecutionSession.coerce");
    sub_253591C78();
  }
  sub_253592170();
  uint64_t v22 = sub_253578D2C();
  v14(v22);
  uint64_t v23 = sub_2534D9B1C();
  v13(v23);
  swift_release();
  swift_unknownObjectRelease();
  sub_253592330();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  sub_253591C20();
  return v25(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10, a11, a12);
}

uint64_t ToolKitExecutionSession.hydrate(value:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return sub_25353546C((uint64_t)sub_253588830);
}

uint64_t sub_253588830()
{
  sub_253529DB8();
  *(void *)(v0 + 40) = *(void *)(*(void *)(v0 + 32) + 16);
  sub_2535922E4();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_253592424(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_2535888D4;
  uint64_t v4 = sub_253592BD4();
  return v6(v4);
}

uint64_t sub_2535888D4()
{
  sub_253477168();
  sub_253477088();
  uint64_t v3 = v2;
  sub_253535478();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_253477158();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_25347719C();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    swift_release();
    sub_2534771C0();
    return v10();
  }
}

uint64_t sub_2535889D4()
{
  sub_253477168();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t ToolKitExecutionSession.hydrate(values:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_25353546C((uint64_t)sub_253588A4C);
}

uint64_t sub_253588A4C()
{
  sub_253529DB8();
  v0[4] = *(void *)(v0[3] + 16);
  sub_2535922E4();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_253588AFC;
  uint64_t v2 = v0[2];
  return v4(v2, 0);
}

uint64_t sub_253588AFC()
{
  sub_253529DB8();
  uint64_t v3 = v2;
  sub_253477088();
  uint64_t v5 = v4;
  sub_253535478();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_253477158();
  *uint64_t v8 = v7;
  *(void *)(v5 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_25347719C();
    return MEMORY[0x270FA2498](v9, v10, v11);
  }
  else
  {
    swift_release();
    uint64_t v12 = *(uint64_t (**)(uint64_t))(v7 + 8);
    return v12(v3);
  }
}

uint64_t sub_253588C1C()
{
  sub_253477168();
  swift_release();
  sub_2534771C0();
  return v0();
}

uint64_t ToolKitExecutionSession.hydrate(value:options:)(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 16) = a1;
  *(unsigned char *)(v4 + 56) = *a3;
  return sub_25353546C((uint64_t)sub_253588C9C);
}

uint64_t sub_253588C9C()
{
  sub_253529DB8();
  *(void *)(v0 + 40) = *(void *)(*(void *)(v0 + 32) + 16);
  sub_2535922E4();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_253592424(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_253588D44;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v6 = *(unsigned __int8 *)(v0 + 56);
  return v8(v4, v5, v6);
}

uint64_t sub_253588D44()
{
  sub_253477168();
  sub_253477088();
  uint64_t v1 = *v0;
  sub_253477158();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_release();
  sub_2534771C0();
  return v3();
}

uint64_t ToolKitExecutionSession.hydrate(values:options:)(uint64_t a1, unsigned char *a2)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  *(unsigned char *)(v3 + 48) = *a2;
  return sub_25353546C((uint64_t)sub_253588E40);
}

uint64_t sub_253588E40()
{
  sub_253529DB8();
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 24) + 16);
  sub_2535922E4();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_253588EF0;
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 48);
  return v5(v2, v3);
}

uint64_t sub_253588EF0()
{
  sub_253529DB8();
  uint64_t v3 = v2;
  sub_253477088();
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_release();
  sub_253592DD0();
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t sub_253588FFC()
{
  sub_253477168();
  sub_253592C24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_253592600(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_253591C04;
  sub_253592BD4();
  return ConcurrencySafeToolKitExecutionSession.resolve(reference:)();
}

uint64_t sub_253589144()
{
  sub_253592324();
  uint64_t v2 = v0[6];
  uint64_t v1 = (uint64_t *)v0[7];
  uint64_t v3 = v0[5];
  sub_253B08FB0();
  uint64_t v4 = swift_allocBox();
  sub_25347B88C();
  sub_2534B3428();
  v5();
  *uint64_t v1 = v4;
  (*(void (**)(uint64_t *, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x263F804B0], v3);
  swift_task_alloc();
  sub_253529E40();
  v0[11] = v6;
  *uint64_t v6 = v7;
  v6[1] = sub_25358925C;
  return ConcurrencySafeToolKitExecutionSession.inject(value:)();
}

uint64_t sub_25358925C()
{
  sub_253477168();
  sub_253477088();
  uint64_t v3 = v2;
  sub_253535478();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_253477158();
  *uint64_t v6 = v5;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_253591C10();
    v7();
    sub_25347719C();
    return MEMORY[0x270FA2498](v8, v9, v10);
  }
  else
  {
    sub_253591C10();
    v11();
    swift_task_alloc();
    sub_253529E40();
    *(void *)(v3 + 104) = v12;
    *uint64_t v12 = v13;
    v12[1] = sub_2535893B8;
    return ConcurrencySafeToolKitExecutionSession.resolve(reference:)();
  }
}

uint64_t sub_2535893B8()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 112) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_253589494()
{
  sub_253477168();
  sub_253477128();
  v0();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_253529DC4();
  return v1();
}

uint64_t sub_25358950C()
{
  sub_253477168();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  return v0();
}

uint64_t sub_253589574()
{
  sub_253477168();
  sub_253591C10();
  v0();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  return v1();
}

uint64_t ToolKitExecutionSession.deinit()
{
  swift_release();
  return v0;
}

uint64_t ToolKitExecutionSession.__deallocating_deinit()
{
  swift_release();
  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t sub_253589644(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_253477080;
  return ToolKitExecutionSession.executorEventStream.getter(a1);
}

uint64_t sub_2535896E0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_253477080;
  return ToolKitExecutionSession.resolve(reference:)(a1, a2);
}

uint64_t sub_25358978C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_253477080;
  return ToolKitExecutionSession.resolve(reference:coercedTo:)(a1, a2, a3);
}

uint64_t sub_253589840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_253477080;
  return ToolKitExecutionSession.coerce(value:to:)(a1, a2, a3);
}

uint64_t sub_2535898F4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_253477080;
  return ToolKitExecutionSession.resolve(reference:)(a1, a2);
}

uint64_t sub_2535899A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_253477080;
  return ToolKitExecutionSession.resolve(reference:coercedTo:)(a1, a2, a3);
}

uint64_t sub_253589A54(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_253477080;
  return ToolKitExecutionSession.resolve(reference:)(a1, a2);
}

uint64_t sub_253589B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_253591BEC;
  return ToolKitExecutionSession.enumerate(valueSet:in:query:)(a1, a2, a3);
}

uint64_t sub_253589BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_253476FC0;
  return ToolKitExecutionSession.fetchToolInvocationSummary(for:)(a1, a2);
}

uint64_t sub_253589C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_253477080;
  return ToolKitExecutionSession.hydrate(value:)(a1, a2);
}

uint64_t sub_253589D08(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_253591BEC;
  return ToolKitExecutionSession.hydrate(values:)(a1);
}

uint64_t sub_253589DA0(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_253477080;
  return ToolKitExecutionSession.hydrate(value:options:)(a1, a2, a3);
}

uint64_t sub_253589E54(uint64_t a1, unsigned char *a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_253589EFC;
  return ToolKitExecutionSession.hydrate(values:options:)(a1, a2);
}

uint64_t sub_253589EFC()
{
  sub_253477168();
  uint64_t v3 = v2;
  sub_253477088();
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  sub_253592DD0();
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t sub_253589FC8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_253477080;
  return ToolKitExecutionSession.execute(toolInvocation:dialogHandler:)();
}

uint64_t sub_25358A07C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_253477080;
  return ToolKitExecutionSession.undo(_:)();
}

uint64_t sub_25358A114()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_253477080;
  return ToolKitExecutionSession.redo(_:)();
}

uint64_t ConcurrencySafeToolKitExecutionSession.init(sessionTask:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t ConcurrencySafeToolKitExecutionSession.deinit()
{
  uint64_t v1 = sub_253462A5C(&qword_26B24A398);
  MEMORY[0x270FA5388](v1 - 8);
  sub_25346CC44();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = sub_253B09BF0();
  sub_25346CC08(v4, v7, v8, v6);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v5;
  swift_retain();
  sub_25358A4CC(v4, (uint64_t)&unk_269CDF2A8, (uint64_t)v9);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_25358A290()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  sub_253462A5C(&qword_26B24A5A0);
  sub_253462A5C(&qword_26B24A590);
  *uint64_t v1 = v0;
  v1[1] = sub_25358A368;
  return MEMORY[0x270FA1FA8](v0 + 16);
}

uint64_t sub_25358A368()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 40) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25358A444()
{
  sub_253477168();
  swift_getObjectType();
  sub_253B08BD0();
  swift_unknownObjectRelease();
  sub_253529DC4();
  return v0();
}

uint64_t sub_25358A4B0()
{
  sub_2534771C0();
  return v0();
}

uint64_t sub_25358A4CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_253B09BF0();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v5) == 1)
  {
    sub_253591880(a1, &qword_26B24A398);
  }
  else
  {
    sub_253B09BE0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_253B09BA0();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t ConcurrencySafeToolKitExecutionSession.__deallocating_deinit()
{
  ConcurrencySafeToolKitExecutionSession.deinit();
  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t sub_25358A648()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_253477080;
  return ConcurrencySafeToolKitExecutionSession.coerce(value:to:)();
}

uint64_t sub_25358A6FC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_253477080;
  return ConcurrencySafeToolKitExecutionSession.resolve(reference:)();
}

uint64_t sub_25358A7A8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_253477080;
  return ConcurrencySafeToolKitExecutionSession.resolve(reference:coercedTo:)();
}

uint64_t sub_25358A85C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_253477080;
  return ConcurrencySafeToolKitExecutionSession.resolve(reference:)();
}

uint64_t sub_25358A908()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_253591BEC;
  return ConcurrencySafeToolKitExecutionSession.enumerate(valueSet:in:query:)();
}

uint64_t sub_25358A9B8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_253477080;
  return ConcurrencySafeToolKitExecutionSession.fetchToolInvocationSummary(for:)();
}

uint64_t sub_25358AA64(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269CDF4A8 + dword_269CDF4A8);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_253477080;
  return v7(a1, a2);
}

uint64_t sub_25358AB24(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_269CDF4A0 + dword_269CDF4A0);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_253591BEC;
  return v5(a1);
}

uint64_t sub_25358ABD4(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269CDF268 + dword_269CDF268);
  uint64_t v6 = *a3;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_253477080;
  return v9(a1, a2, v6);
}

uint64_t sub_25358ACA0(uint64_t a1, char *a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, char))((char *)&dword_269CDF278 + dword_269CDF278);
  char v4 = *a2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_253591BEC;
  return v7(a1, v4);
}

uint64_t sub_25358AD5C(uint64_t a1)
{
  return sub_253581610(a1) & 1;
}

uint64_t sub_25358AD84(uint64_t a1)
{
  return sub_25358215C(a1) & 1;
}

uint64_t sub_25358ADAC(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 32) = a2;
  *(void *)(v4 + 40) = v3;
  *(unsigned char *)(v4 + 200) = a3;
  *(void *)(v4 + 24) = a1;
  sub_253462A5C(&qword_269CDB3F0);
  *(void *)(v4 + 48) = swift_task_alloc();
  sub_253B091F0();
  *(void *)(v4 + 56) = swift_task_alloc();
  uint64_t v5 = sub_253B09120();
  *(void *)(v4 + 64) = v5;
  *(void *)(v4 + 72) = *(void *)(v5 - 8);
  *(void *)(v4 + 80) = swift_task_alloc();
  *(void *)(v4 + 88) = swift_task_alloc();
  *(void *)(v4 + 96) = swift_task_alloc();
  sub_253462A5C(&qword_269CDCB58);
  *(void *)(v4 + 104) = swift_task_alloc();
  *(void *)(v4 + 112) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25358AF2C, 0, 0);
}

uint64_t sub_25358AF2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_253591EE8();
  sub_253592440();
  uint64_t v17 = sub_253B08FD0();
  *(void *)(v14 + 120) = v17;
  *(unsigned char *)(v14 + 201) = *(unsigned char *)(v17 + 32);
  sub_2535929B8();
  *(void *)(v14 + 128) = MEMORY[0x263F8EE80];
  if ((v20 & v21) != 0)
  {
    sub_253592CC8();
LABEL_3:
    sub_253592998(v22, v23);
    uint64_t v24 = sub_253462A5C(&qword_269CDCB60);
    uint64_t v25 = sub_253592708(v24);
    v26(v25);
    sub_253592FE0();
    goto LABEL_10;
  }
  unint64_t v27 = 63 - v19;
  if ((unint64_t)(63 - v19) <= 0x7F)
  {
    uint64_t v15 = 0;
  }
  else
  {
    if (v18[9])
    {
      uint64_t v15 = 1;
LABEL_7:
      sub_253592CB0();
      goto LABEL_3;
    }
    if (v27 < 0xC0)
    {
      uint64_t v15 = 1;
    }
    else
    {
      if (v18[10])
      {
        uint64_t v15 = 2;
        goto LABEL_7;
      }
      if (v27 < 0x100)
      {
        uint64_t v15 = 2;
      }
      else
      {
        if (v18[11])
        {
          uint64_t v15 = 3;
          goto LABEL_7;
        }
        if (v27 < 0x140)
        {
          uint64_t v15 = 3;
        }
        else
        {
          if (v18[12])
          {
            uint64_t v15 = 4;
            goto LABEL_7;
          }
          unint64_t v57 = v27 >> 6;
          uint64_t v58 = 13;
          while (v58 - 8 < v57)
          {
            if (v18[v58++])
            {
              uint64_t v15 = v58 - 9;
              goto LABEL_7;
            }
          }
          uint64_t v15 = v57 - 1;
        }
      }
    }
  }
  uint64_t v28 = sub_253462A5C(&qword_269CDCB60);
  sub_25359272C(v28);
LABEL_10:
  *(void *)(v14 + 136) = v15;
  *(void *)(v14 + 144) = v16;
  uint64_t v29 = *(void *)(v14 + 112);
  sub_253591930(*(void *)(v14 + 104), v29, &qword_269CDCB58);
  uint64_t v30 = sub_253462A5C(&qword_269CDCB60);
  int v31 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v29, 1, v30);
  uint64_t v32 = *(void **)(v14 + 112);
  if (v31 == 1)
  {
    uint64_t v60 = *(void *)(v14 + 88);
    uint64_t v61 = *(void *)(v14 + 80);
    uint64_t v33 = swift_release();
    MEMORY[0x25A268000](v33);
    sub_253B08FC0();
    sub_253B08FE0();
    sub_253592B68();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_253529DC4();
    sub_253591C94();
    return v35(v34, v35, v36, v37, v38, v39, v40, v41, a9, v60, v61, a12, a13, a14);
  }
  else
  {
    uint64_t v43 = *(void *)(v14 + 96);
    uint64_t v44 = *(void *)(v14 + 64);
    uint64_t v45 = *(void *)(v14 + 72);
    *(void *)(v14 + 152) = *v32;
    *(void *)(v14 + 160) = v32[1];
    uint64_t v46 = (char *)v32 + *(int *)(v30 + 48);
    uint64_t v47 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 32);
    *(void *)(v14 + 168) = v47;
    *(void *)(v14 + 176) = (v45 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v47(v43, v46, v44);
    uint64_t v48 = (void *)sub_253593050();
    *(void *)(v14 + 184) = v48;
    *uint64_t v48 = v14;
    v48[1] = sub_25358B218;
    sub_253592C98();
    sub_253591C94();
    return v52(v49, v50, v51, v52, v53, v54, v55, v56, a9, a10, a11, a12, a13, a14);
  }
}

uint64_t sub_25358B218()
{
  sub_253477168();
  sub_253477088();
  uint64_t v3 = v2;
  sub_253535478();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_253477158();
  *uint64_t v6 = v5;
  *(void *)(v3 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25358B308()
{
  sub_253529E08();
  sub_253477128();
  v0();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  return v1();
}

void sub_25358B3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_253591EE8();
  sub_253592440();
  uint64_t v15 = *(void *)(v14 + 128);
  (*(void (**)(void, void, void))(v14 + 168))(*(void *)(v14 + 80), *(void *)(v14 + 88), *(void *)(v14 + 64));
  swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v14 + 16) = v15;
  sub_25396E0AC();
  sub_253592F24();
  if (v18)
  {
    __break(1u);
    goto LABEL_43;
  }
  unint64_t v19 = v16;
  char v20 = v17;
  sub_253462A5C(&qword_269CDB410);
  if (sub_253B0A190())
  {
    unint64_t v21 = sub_25396E0AC();
    if ((v20 & 1) != (v22 & 1))
    {
      sub_253591C94();
      sub_253B0A550();
      return;
    }
    unint64_t v19 = v21;
  }
  uint64_t v24 = *(void **)(v14 + 16);
  if (v20)
  {
    (*(void (**)(unint64_t, void, void))(*(void *)(v14 + 72) + 40))(v24[7] + *(void *)(*(void *)(v14 + 72) + 72) * v19, *(void *)(v14 + 80), *(void *)(v14 + 64));
    goto LABEL_12;
  }
  uint64_t v25 = *(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 168);
  uint64_t v27 = *(void *)(v14 + 152);
  uint64_t v26 = *(void *)(v14 + 160);
  uint64_t v29 = *(void *)(v14 + 72);
  uint64_t v28 = *(void *)(v14 + 80);
  uint64_t v30 = *(void *)(v14 + 64);
  v24[(v19 >> 6) + 8] |= 1 << v19;
  int v31 = (void *)(v24[6] + 16 * v19);
  *int v31 = v27;
  v31[1] = v26;
  v25(v24[7] + *(void *)(v29 + 72) * v19, v28, v30);
  uint64_t v32 = v24[2];
  BOOL v18 = __OFADD__(v32, 1);
  uint64_t v33 = v32 + 1;
  if (v18)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v24[2] = v33;
  swift_bridgeObjectRetain();
LABEL_12:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_253592354();
  v34();
  uint64_t v36 = *(void *)(v14 + 136);
  uint64_t v35 = *(void *)(v14 + 144);
  *(void *)(v14 + 128) = v24;
  if (v35)
  {
    uint64_t v37 = (v35 - 1) & v35;
    uint64_t v38 = *(void *)(v14 + 120);
LABEL_14:
    uint64_t v39 = *(void *)(v14 + 104);
    uint64_t v40 = *(void *)(v14 + 64);
    uint64_t v41 = *(void *)(v14 + 72);
    sub_253592C30(v38);
    uint64_t v44 = v42 + *(void *)(v41 + 72) * v43;
    uint64_t v45 = sub_253462A5C(&qword_269CDCB60);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v39 + *(int *)(v45 + 48), v44, v40);
    sub_253593018();
    goto LABEL_34;
  }
  if (__OFADD__(v36, 1)) {
    goto LABEL_44;
  }
  sub_253592ED8();
  if (v48 == v18) {
    goto LABEL_33;
  }
  uint64_t v38 = *(void *)(v14 + 120);
  uint64_t v49 = v38 + 64;
  uint64_t v50 = *(void *)(v38 + 64 + 8 * v46);
  if (v50)
  {
LABEL_19:
    uint64_t v37 = (v50 - 1) & v50;
    uint64_t v36 = v46;
    goto LABEL_14;
  }
  int64_t v51 = v47 >> 6;
  uint64_t v52 = v46 + 1;
  uint64_t v36 = v46;
  if (v46 + 1 < v51)
  {
    uint64_t v50 = *(void *)(v49 + 8 * v52);
    if (v50)
    {
LABEL_22:
      uint64_t v46 = v52;
      goto LABEL_19;
    }
    uint64_t v36 = v46 + 1;
    if (v46 + 2 < v51)
    {
      uint64_t v50 = *(void *)(v49 + 8 * (v46 + 2));
      if (v50)
      {
        v46 += 2;
        goto LABEL_19;
      }
      uint64_t v52 = v46 + 3;
      uint64_t v36 = v46 + 2;
      if (v46 + 3 < v51)
      {
        uint64_t v50 = *(void *)(v49 + 8 * v52);
        if (v50) {
          goto LABEL_22;
        }
        while (1)
        {
          uint64_t v46 = v52 + 1;
          if (__OFADD__(v52, 1)) {
            break;
          }
          if (v46 >= v51)
          {
            uint64_t v36 = v51 - 1;
            goto LABEL_33;
          }
          uint64_t v50 = *(void *)(v49 + 8 * v46);
          ++v52;
          if (v50) {
            goto LABEL_19;
          }
        }
LABEL_45:
        __break(1u);
        return;
      }
    }
  }
LABEL_33:
  uint64_t v53 = *(void *)(v14 + 104);
  uint64_t v54 = sub_253462A5C(&qword_269CDCB60);
  sub_25346CC08(v53, v55, v56, v54);
  uint64_t v37 = 0;
LABEL_34:
  *(void *)(v14 + 136) = v36;
  *(void *)(v14 + 144) = v37;
  uint64_t v57 = *(void *)(v14 + 112);
  sub_253591930(*(void *)(v14 + 104), v57, &qword_269CDCB58);
  sub_253462A5C(&qword_269CDCB60);
  sub_2534F88B8(v57);
  if (v58)
  {
    uint64_t v80 = *(void *)(v14 + 96);
    uint64_t v81 = *(void *)(v14 + 88);
    uint64_t v82 = *(void *)(v14 + 80);
    uint64_t v59 = swift_release();
    MEMORY[0x25A268000](v59);
    sub_253B08FC0();
    sub_253B08FE0();
    sub_253B08FF0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_253529DC4();
    sub_253591C94();
    v61(v60, v61, v62, v63, v64, v65, v66, v67, v80, v81, v82, a12, a13, a14);
  }
  else
  {
    int v68 = *(void **)(v14 + 112);
    uint64_t v69 = *(void *)(v14 + 72);
    *(void *)(v14 + 152) = *v68;
    *(void *)(v14 + 160) = v68[1];
    *(void *)(v14 + 168) = *(void *)(v69 + 32);
    *(void *)(v14 + 176) = (v69 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    sub_2534D8E14();
    v70();
    uint64_t v71 = (void *)sub_253593050();
    *(void *)(v14 + 184) = v71;
    *uint64_t v71 = v14;
    v71[1] = sub_25358B218;
    sub_253592C98();
    sub_253591C94();
    v75(v72, v73, v74, v75, v76, v77, v78, v79, a9, a10, a11, a12, a13, a14);
  }
}

uint64_t sub_25358B87C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 48) = a5;
  *(void *)(v6 + 56) = v5;
  *(void *)(v6 + 32) = a2;
  *(void *)(v6 + 40) = a4;
  *(unsigned char *)(v6 + 217) = a3;
  *(void *)(v6 + 24) = a1;
  sub_253462A5C(&qword_269CDB3F0);
  *(void *)(v6 + 64) = swift_task_alloc();
  sub_253B091F0();
  *(void *)(v6 + 72) = swift_task_alloc();
  uint64_t v7 = sub_253B09120();
  *(void *)(v6 + 80) = v7;
  *(void *)(v6 + 88) = *(void *)(v7 - 8);
  *(void *)(v6 + 96) = swift_task_alloc();
  *(void *)(v6 + 104) = swift_task_alloc();
  *(void *)(v6 + 112) = swift_task_alloc();
  sub_253462A5C(&qword_269CDCB58);
  *(void *)(v6 + 120) = swift_task_alloc();
  *(void *)(v6 + 128) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25358BA00, 0, 0);
}

uint64_t sub_25358BA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_253591EE8();
  sub_253592440();
  uint64_t v18 = sub_253B08FD0();
  *(void *)(v15 + 136) = v18;
  *(unsigned char *)(v15 + 218) = *(unsigned char *)(v18 + 32);
  sub_2535929B8();
  *(void *)(v15 + 144) = MEMORY[0x263F8EE80];
  if ((v21 & v22) != 0)
  {
    sub_253592CC8();
LABEL_3:
    sub_253592998(v23, v24);
    uint64_t v25 = sub_253462A5C(&qword_269CDCB60);
    uint64_t v26 = sub_253592708(v25);
    v27(v26);
    sub_253592FE0();
    goto LABEL_10;
  }
  unint64_t v28 = 63 - v20;
  if ((unint64_t)(63 - v20) <= 0x7F)
  {
    uint64_t v16 = 0;
  }
  else
  {
    if (v19[9])
    {
      uint64_t v16 = 1;
LABEL_7:
      sub_253592CB0();
      goto LABEL_3;
    }
    if (v28 < 0xC0)
    {
      uint64_t v16 = 1;
    }
    else
    {
      if (v19[10])
      {
        uint64_t v16 = 2;
        goto LABEL_7;
      }
      if (v28 < 0x100)
      {
        uint64_t v16 = 2;
      }
      else
      {
        if (v19[11])
        {
          uint64_t v16 = 3;
          goto LABEL_7;
        }
        if (v28 < 0x140)
        {
          uint64_t v16 = 3;
        }
        else
        {
          if (v19[12])
          {
            uint64_t v16 = 4;
            goto LABEL_7;
          }
          unint64_t v56 = v28 >> 6;
          uint64_t v57 = 13;
          while (v57 - 8 < v56)
          {
            if (v19[v57++])
            {
              uint64_t v16 = v57 - 9;
              goto LABEL_7;
            }
          }
          uint64_t v16 = v56 - 1;
        }
      }
    }
  }
  uint64_t v29 = sub_253462A5C(&qword_269CDCB60);
  sub_25359272C(v29);
LABEL_10:
  *(void *)(v15 + 152) = v16;
  *(void *)(v15 + 160) = v17;
  uint64_t v30 = *(void *)(v15 + 128);
  sub_253591930(*(void *)(v15 + 120), v30, &qword_269CDCB58);
  sub_253462A5C(&qword_269CDCB60);
  sub_2534F88B8(v30);
  if (v31)
  {
    uint64_t v59 = *(void *)(v15 + 104);
    uint64_t v61 = *(void *)(v15 + 96);
    uint64_t v32 = swift_release();
    MEMORY[0x25A268000](v32);
    sub_253B08FC0();
    sub_253B08FE0();
    sub_253592B68();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_253529DC4();
    sub_253591C94();
    return v34(v33, v34, v35, v36, v37, v38, v39, v40, a9, v59, v61, a12, a13, a14);
  }
  else
  {
    uint64_t v42 = sub_25359210C();
    uint64_t v44 = v43(v42);
    *(unsigned char *)(v15 + 216) = v14;
    sub_2535927F4(v44, a11);
    uint64_t v60 = (char *)v46 + *v46;
    uint64_t v62 = v45;
    unint64_t v47 = (void *)swift_task_alloc();
    *(void *)(v15 + 200) = v47;
    void *v47 = v15;
    v47[1] = sub_25358BCF4;
    sub_253592B30();
    sub_253591C94();
    return v54(v48, v49, v50, v51, v52, v53, v54, v55, a9, v60, v62, a12, a13, a14);
  }
}

uint64_t sub_25358BCF4()
{
  sub_253477168();
  sub_253477088();
  uint64_t v3 = v2;
  sub_253535478();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_253477158();
  *uint64_t v6 = v5;
  *(void *)(v3 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

void sub_25358BDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_253591EE8();
  sub_253592440();
  uint64_t v16 = *(void *)(v14 + 144);
  (*(void (**)(void, void, void))(v14 + 184))(*(void *)(v14 + 96), *(void *)(v14 + 104), *(void *)(v14 + 80));
  swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v14 + 16) = v16;
  sub_25396E0AC();
  sub_253592F24();
  if (v19)
  {
    __break(1u);
    goto LABEL_43;
  }
  unint64_t v20 = v17;
  char v21 = v18;
  sub_253462A5C(&qword_269CDB410);
  if (sub_253B0A190())
  {
    unint64_t v22 = sub_25396E0AC();
    if ((v21 & 1) != (v23 & 1))
    {
      sub_253591C94();
      sub_253B0A550();
      return;
    }
    unint64_t v20 = v22;
  }
  uint64_t v25 = *(void **)(v14 + 16);
  if (v21)
  {
    (*(void (**)(unint64_t, void, void))(*(void *)(v14 + 88) + 40))(v25[7] + *(void *)(*(void *)(v14 + 88) + 72) * v20, *(void *)(v14 + 96), *(void *)(v14 + 80));
    goto LABEL_12;
  }
  uint64_t v26 = *(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 184);
  uint64_t v28 = *(void *)(v14 + 168);
  uint64_t v27 = *(void *)(v14 + 176);
  uint64_t v30 = *(void *)(v14 + 88);
  uint64_t v29 = *(void *)(v14 + 96);
  uint64_t v31 = *(void *)(v14 + 80);
  v25[(v20 >> 6) + 8] |= 1 << v20;
  uint64_t v32 = (void *)(v25[6] + 16 * v20);
  void *v32 = v28;
  v32[1] = v27;
  v26(v25[7] + *(void *)(v30 + 72) * v20, v29, v31);
  uint64_t v33 = v25[2];
  BOOL v19 = __OFADD__(v33, 1);
  uint64_t v34 = v33 + 1;
  if (v19)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v25[2] = v34;
  swift_bridgeObjectRetain();
LABEL_12:
  uint64_t v35 = *(void *)(v14 + 112);
  uint64_t v37 = *(void *)(v14 + 80);
  uint64_t v36 = *(void *)(v14 + 88);
  uint64_t v38 = *(void *)(v14 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
  uint64_t v40 = *(void *)(v14 + 152);
  uint64_t v39 = *(void *)(v14 + 160);
  *(void *)(v14 + 144) = v38;
  if (v39)
  {
    uint64_t v15 = (v39 - 1) & v39;
    uint64_t v41 = *(void *)(v14 + 136);
LABEL_14:
    uint64_t v42 = *(void *)(v14 + 120);
    uint64_t v43 = *(void *)(v14 + 80);
    uint64_t v44 = *(void *)(v14 + 88);
    sub_253592C30(v41);
    uint64_t v47 = v45 + *(void *)(v44 + 72) * v46;
    uint64_t v48 = sub_253462A5C(&qword_269CDCB60);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v42 + *(int *)(v48 + 48), v47, v43);
    sub_253593018();
    goto LABEL_34;
  }
  if (__OFADD__(v40, 1)) {
    goto LABEL_44;
  }
  sub_253592ED8();
  if (v51 == v19) {
    goto LABEL_33;
  }
  uint64_t v41 = *(void *)(v14 + 136);
  uint64_t v52 = v41 + 64;
  uint64_t v53 = *(void *)(v41 + 64 + 8 * v49);
  if (v53)
  {
LABEL_19:
    uint64_t v15 = (v53 - 1) & v53;
    uint64_t v40 = v49;
    goto LABEL_14;
  }
  int64_t v54 = v50 >> 6;
  uint64_t v55 = v49 + 1;
  uint64_t v40 = v49;
  if (v49 + 1 < v54)
  {
    uint64_t v53 = *(void *)(v52 + 8 * v55);
    if (v53)
    {
LABEL_22:
      uint64_t v49 = v55;
      goto LABEL_19;
    }
    uint64_t v40 = v49 + 1;
    if (v49 + 2 < v54)
    {
      uint64_t v53 = *(void *)(v52 + 8 * (v49 + 2));
      if (v53)
      {
        v49 += 2;
        goto LABEL_19;
      }
      uint64_t v55 = v49 + 3;
      uint64_t v40 = v49 + 2;
      if (v49 + 3 < v54)
      {
        uint64_t v53 = *(void *)(v52 + 8 * v55);
        if (v53) {
          goto LABEL_22;
        }
        while (1)
        {
          uint64_t v49 = v55 + 1;
          if (__OFADD__(v55, 1)) {
            break;
          }
          if (v49 >= v54)
          {
            uint64_t v40 = v54 - 1;
            goto LABEL_33;
          }
          uint64_t v53 = *(void *)(v52 + 8 * v49);
          ++v55;
          if (v53) {
            goto LABEL_19;
          }
        }
LABEL_45:
        __break(1u);
        return;
      }
    }
  }
LABEL_33:
  uint64_t v56 = sub_253462A5C(&qword_269CDCB60);
  sub_25359272C(v56);
LABEL_34:
  *(void *)(v14 + 152) = v40;
  *(void *)(v14 + 160) = v15;
  uint64_t v57 = *(void *)(v14 + 128);
  sub_253591930(*(void *)(v14 + 120), v57, &qword_269CDCB58);
  sub_253462A5C(&qword_269CDCB60);
  sub_2534F88B8(v57);
  if (v58)
  {
    uint64_t v82 = *(void *)(v14 + 112);
    uint64_t v83 = *(void *)(v14 + 104);
    uint64_t v85 = *(void *)(v14 + 96);
    uint64_t v59 = swift_release();
    MEMORY[0x25A268000](v59);
    sub_253B08FC0();
    sub_253B08FE0();
    sub_253B08FF0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_253529DC4();
    sub_253591C94();
    v61(v60, v61, v62, v63, v64, v65, v66, v67, v82, v83, v85, a12, a13, a14);
  }
  else
  {
    uint64_t v68 = sub_25359210C();
    uint64_t v70 = v69(v68);
    *(unsigned char *)(v14 + 216) = v57;
    sub_2535927F4(v70, a11);
    v84 = (char *)v72 + *v72;
    uint64_t v86 = v71;
    uint64_t v73 = (void *)swift_task_alloc();
    *(void *)(v14 + 200) = v73;
    *uint64_t v73 = v14;
    v73[1] = sub_25358BCF4;
    sub_253592B30();
    sub_253591C94();
    v80(v74, v75, v76, v77, v78, v79, v80, v81, a9, v84, v86, a12, a13, a14);
  }
}

uint64_t sub_25358C2A8()
{
  sub_253529E08();
  sub_253477128();
  v0();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  return v1();
}

uint64_t sub_25358C378(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 296) = a4;
  *(void *)(v4 + 96) = a2;
  *(void *)(v4 + 104) = a3;
  *(void *)(v4 + 88) = a1;
  uint64_t v5 = sub_253462A5C(&qword_269CDE560);
  *(void *)(v4 + 112) = v5;
  *(void *)(v4 + 120) = *(void *)(v5 - 8);
  *(void *)(v4 + 128) = swift_task_alloc();
  sub_253462A5C(&qword_269CDB3F8);
  *(void *)(v4 + 136) = swift_task_alloc();
  sub_253462A5C(&qword_269CDF4C8);
  *(void *)(v4 + 144) = swift_task_alloc();
  uint64_t v6 = sub_253462A5C(&qword_269CDF4D0);
  *(void *)(v4 + 152) = v6;
  *(void *)(v4 + 160) = *(void *)(v6 - 8);
  *(void *)(v4 + 168) = swift_task_alloc();
  uint64_t v7 = sub_253B09120();
  *(void *)(v4 + 176) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)(v4 + 184) = v8;
  *(void *)(v4 + 192) = *(void *)(v8 + 64);
  *(void *)(v4 + 200) = swift_task_alloc();
  *(void *)(v4 + 208) = swift_task_alloc();
  sub_253462A5C(&qword_26B24A398);
  *(void *)(v4 + 216) = swift_task_alloc();
  *(void *)(v4 + 224) = swift_task_alloc();
  *(void *)(v4 + 232) = sub_253462A5C(&qword_269CDF4D8);
  *(void *)(v4 + 240) = swift_task_alloc();
  sub_253462A5C(&qword_269CDF4E0);
  *(void *)(v4 + 248) = swift_task_alloc();
  *(void *)(v4 + 256) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25358C62C, 0, 0);
}

uint64_t sub_25358C62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v62 = *(void *)(v20 + 232);
  unint64_t v21 = *(void *)(*(void *)(v20 + 96) + 16);
  uint64_t v61 = *(void *)(v20 + 184);
  uint64_t v22 = swift_bridgeObjectRetain();
  unint64_t v30 = 0;
  unint64_t v60 = v21;
  while (1)
  {
    if (v30 == v21)
    {
      sub_25346CC08(*(void *)(v20 + 248), v23, v24, *(void *)(v20 + 232));
      unint64_t v31 = v21;
    }
    else
    {
      if (v30 >= v21)
      {
        __break(1u);
        return MEMORY[0x270FA2058](v22, v23, v24, v25, v26, v27, v28, v29, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
                 a20);
      }
      uint64_t v32 = *(unint64_t **)(v20 + 248);
      uint64_t v33 = *(void *)(v20 + 232);
      unint64_t v31 = v30 + 1;
      sub_2534B3428();
      v34();
      unint64_t *v32 = v30;
      sub_2534D8E14();
      v35();
      sub_2534AD3FC();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v36, v37, v38, v33);
    }
    uint64_t v39 = *(void *)(v20 + 256);
    uint64_t v40 = *(void *)(v20 + 232);
    sub_253591930(*(void *)(v20 + 248), v39, &qword_269CDF4E0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v39, 1, v40) == 1) {
      break;
    }
    unint64_t v68 = v31;
    uint64_t v41 = *(uint64_t **)(v20 + 256);
    uint64_t v42 = *(void *)(v20 + 224);
    uint64_t v63 = v42;
    uint64_t v67 = *(void *)(v20 + 216);
    uint64_t v43 = *(char **)(v20 + 208);
    uint64_t v44 = *(void *)(v20 + 192);
    uint64_t v45 = *(void *)(v20 + 176);
    char v66 = *(unsigned char *)(v20 + 296);
    uint64_t v64 = *(void *)(v20 + 104);
    uint64_t v65 = *v41;
    uint64_t v46 = (char *)v41 + *(int *)(v62 + 48);
    uint64_t v47 = sub_253B09BF0();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v42, 1, 1, v47);
    uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
    v48(v43, v46, v45);
    unint64_t v49 = (*(unsigned __int8 *)(v61 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
    unint64_t v50 = (char *)swift_allocObject();
    *((void *)v50 + 2) = 0;
    *((void *)v50 + 3) = 0;
    *((void *)v50 + 4) = v64;
    v48(&v50[v49], v43, v45);
    v50[v49 + v44] = v66;
    *(void *)&v50[((v49 + v44) & 0xFFFFFFFFFFFFFFF8) + 8] = v65;
    sub_2535918D4(v63, v67, &qword_26B24A398);
    LODWORD(v45) = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v67, 1, v47);
    swift_retain();
    if (v45 == 1)
    {
      sub_253591880(*(void *)(v20 + 216), &qword_26B24A398);
    }
    else
    {
      sub_253B09BE0();
      sub_25347B88C();
      sub_2534659CC();
      v51();
    }
    unint64_t v21 = v60;
    if (*((void *)v50 + 2))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v52 = sub_253B09BA0();
      uint64_t v54 = v53;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v52 = 0;
      uint64_t v54 = 0;
    }
    uint64_t v55 = **(void **)(v20 + 88);
    sub_253462A5C(&qword_269CDF1A0);
    uint64_t v56 = v54 | v52;
    if (v54 | v52)
    {
      uint64_t v56 = v20 + 16;
      *(void *)(v20 + 16) = 0;
      *(void *)(v20 + 24) = 0;
      *(void *)(v20 + 32) = v52;
      *(void *)(v20 + 40) = v54;
    }
    uint64_t v57 = *(void *)(v20 + 224);
    *(void *)(v20 + 48) = 1;
    *(void *)(v20 + 56) = v56;
    *(void *)(v20 + 64) = v55;
    swift_task_create();
    swift_release();
    uint64_t v22 = sub_253591880(v57, &qword_26B24A398);
    unint64_t v30 = v68;
  }
  swift_bridgeObjectRelease();
  *(void *)(v20 + 264) = sub_253462A5C(&qword_269CDF1A0);
  sub_253462A5C(&qword_26B24A590);
  sub_253B09C10();
  *(void *)(v20 + 272) = MEMORY[0x263F8EE78];
  char v58 = (void *)swift_task_alloc();
  *(void *)(v20 + 280) = v58;
  *char v58 = v20;
  v58[1] = sub_25358CAA4;
  sub_2535924CC();
  return MEMORY[0x270FA2058](v22, v23, v24, v25, v26, v27, v28, v29, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20);
}

uint64_t sub_25358CAA4()
{
  sub_253477168();
  sub_253477088();
  uint64_t v3 = v2;
  sub_253535478();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_253477158();
  *uint64_t v6 = v5;
  *(void *)(v3 + 288) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25358CB88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28)
{
  sub_253591F04();
  a27 = v29;
  a28 = v30;
  sub_253592434();
  a26 = v28;
  uint64_t v31 = v28[33];
  uint64_t v32 = (uint64_t *)v28[18];
  sub_2534F88B8((uint64_t)v32);
  if (v40)
  {
    uint64_t v33 = v28[36];
    uint64_t v34 = v28[34];
    sub_253591C10();
    v35();
    a16 = v34;
    swift_bridgeObjectRetain_n();
    sub_25357C55C(&a16);
    if (v33)
    {
      sub_253591E84();
      return swift_release();
    }
    else
    {
      uint64_t v69 = v28[26];
      uint64_t v70 = v28[25];
      uint64_t v71 = v28[21];
      uint64_t v72 = v28[18];
      uint64_t v73 = v28[17];
      uint64_t v74 = v28[16];
      swift_bridgeObjectRelease();
      sub_25357C608(a16);
      swift_release();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_253592DD0();
      sub_253591E84();
      return v63(v61, v62, v63, v64, v65, v66, v67, v68, a9, v69, v70, v71, v72, v73, v74, a16, a17, a18, a19, a20);
    }
  }
  else
  {
    uint64_t v38 = v28[17];
    uint64_t v39 = *v32;
    sub_253591930((uint64_t)v32 + *(int *)(v31 + 48), v38, &qword_269CDB3F8);
    sub_253592EEC(v38);
    if (v40)
    {
      sub_253591880(v28[17], &qword_269CDB3F8);
    }
    else
    {
      uint64_t v41 = (void *)v28[16];
      uint64_t v42 = sub_253592B90();
      v43(v42);
      void *v41 = v39;
      sub_253592288();
      v44();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v46 = v28[34];
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v46 = sub_253592DDC();
      }
      unint64_t v47 = *(void *)(v46 + 24);
      if (*(void *)(v46 + 16) >= v47 >> 1) {
        uint64_t v46 = sub_253592CE0(v47);
      }
      sub_2535929D8();
      sub_253591930(v48, v49, &qword_269CDE560);
      uint64_t v50 = sub_253592D04();
      v51(v50);
      v28[34] = v46;
    }
    uint64_t v52 = (void *)swift_task_alloc();
    v28[35] = v52;
    *uint64_t v52 = v28;
    v52[1] = sub_25358CAA4;
    sub_2535924CC();
    sub_253591E84();
    return MEMORY[0x270FA2058](v53, v54, v55, v56, v57, v58, v59, v60, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20);
  }
}

uint64_t sub_25358CE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_253591EE8();
  sub_253592440();
  uint64_t v25 = v14[17];
  uint64_t v27 = v14[16];
  sub_253477128();
  v15();
  uint64_t v26 = v14[9];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  sub_253591C94();
  return v17(v16, v17, v18, v19, v20, v21, v22, v23, v25, v26, v27, a12, a13, a14);
}

uint64_t sub_25358CF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 120) = a6;
  *(void *)(v7 + 128) = a7;
  *(unsigned char *)(v7 + 344) = a5;
  *(void *)(v7 + 104) = a3;
  *(void *)(v7 + 112) = a4;
  *(void *)(v7 + 88) = a1;
  *(void *)(v7 + 96) = a2;
  uint64_t v9 = sub_253462A5C(&qword_269CDE560);
  *(void *)(v7 + 136) = v9;
  *(void *)(v7 + 144) = *(void *)(v9 - 8);
  *(void *)(v7 + 152) = swift_task_alloc();
  sub_253462A5C(&qword_269CDB3F8);
  *(void *)(v7 + 160) = swift_task_alloc();
  uint64_t v10 = sub_253B09120();
  *(void *)(v7 + 168) = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)(v7 + 176) = v11;
  *(void *)(v7 + 184) = *(void *)(v11 + 64);
  *(void *)(v7 + 192) = swift_task_alloc();
  *(void *)(v7 + 200) = swift_task_alloc();
  uint64_t v12 = *(void *)(a6 - 8);
  *(void *)(v7 + 208) = v12;
  *(void *)(v7 + 216) = *(void *)(v12 + 64);
  *(void *)(v7 + 224) = swift_task_alloc();
  sub_253462A5C(&qword_26B24A398);
  *(void *)(v7 + 232) = swift_task_alloc();
  *(void *)(v7 + 240) = swift_task_alloc();
  sub_253462A5C(&qword_269CDF4C8);
  *(void *)(v7 + 248) = swift_task_alloc();
  uint64_t v13 = sub_253462A5C(&qword_269CDF4D0);
  *(void *)(v7 + 256) = v13;
  *(void *)(v7 + 264) = *(void *)(v13 - 8);
  *(void *)(v7 + 272) = swift_task_alloc();
  *(void *)(v7 + 280) = sub_253462A5C(&qword_269CDF4D8);
  *(void *)(v7 + 288) = swift_task_alloc();
  sub_253462A5C(&qword_269CDF4E0);
  *(void *)(v7 + 296) = swift_task_alloc();
  *(void *)(v7 + 304) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25358D274, 0, 0);
}

uint64_t sub_25358D274()
{
  uint64_t v40 = *(void *)(v0 + 280);
  unint64_t v1 = *(void *)(*(void *)(v0 + 104) + 16);
  uint64_t v39 = *(void *)(v0 + 176);
  uint64_t v38 = *(void *)(v0 + 208);
  swift_bridgeObjectRetain();
  unint64_t v4 = 0;
  unint64_t v37 = v1;
  while (1)
  {
    if (v4 == v1)
    {
      sub_25346CC08(*(void *)(v0 + 296), v2, v3, *(void *)(v0 + 280));
      unint64_t v5 = v1;
    }
    else
    {
      if (v4 >= v1)
      {
        __break(1u);
        return MEMORY[0x270FA2058]();
      }
      uint64_t v6 = *(unint64_t **)(v0 + 296);
      uint64_t v7 = *(void *)(v0 + 280);
      unint64_t v5 = v4 + 1;
      sub_2534B3428();
      v8();
      *uint64_t v6 = v4;
      sub_2534D8E14();
      v9();
      sub_2534AD3FC();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v10, v11, v12, v7);
    }
    uint64_t v13 = *(void *)(v0 + 304);
    sub_253591930(*(void *)(v0 + 296), v13, &qword_269CDF4E0);
    sub_253592EEC(v13);
    if (v14) {
      break;
    }
    unint64_t v49 = v5;
    uint64_t v15 = *(uint64_t **)(v0 + 304);
    uint64_t v16 = *(void *)(v0 + 240);
    uint64_t v48 = *(void *)(v0 + 232);
    unint64_t v17 = *(char **)(v0 + 200);
    uint64_t v42 = v17;
    uint64_t v43 = *(void *)(v0 + 216);
    uint64_t v44 = *(void *)(v0 + 184);
    uint64_t v18 = *(void *)(v0 + 168);
    char v47 = *(unsigned char *)(v0 + 344);
    uint64_t v19 = (char *)v15 + *(int *)(v40 + 48);
    uint64_t v46 = *v15;
    uint64_t v45 = sub_253B09BF0();
    long long v50 = *(_OWORD *)(v0 + 120);
    sub_25346CC08(v16, v20, v21, v45);
    sub_2534B3428();
    v22();
    uint64_t v41 = *(void (**)(uint64_t, char *, uint64_t))(v39 + 32);
    v41((uint64_t)v17, v19, v18);
    unint64_t v23 = (v43
         + *(unsigned __int8 *)(v39 + 80)
         + ((*(unsigned __int8 *)(v38 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = 0;
    *(void *)(v24 + 24) = 0;
    *(_OWORD *)(v24 + 32) = v50;
    sub_2534D8E14();
    v25();
    v41(v24 + v23, v42, v18);
    *(unsigned char *)(v24 + v23 + v44) = v47;
    *(void *)(((v23 + v44) & 0xFFFFFFFFFFFFFFF8) + v24 + 8) = v46;
    sub_2535918D4(v16, v48, &qword_26B24A398);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v48, 1, v45) == 1)
    {
      sub_253591880(*(void *)(v0 + 232), &qword_26B24A398);
    }
    else
    {
      sub_253B09BE0();
      sub_25347B88C();
      sub_2534659CC();
      v26();
    }
    unint64_t v1 = v37;
    if (*(void *)(v24 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v27 = sub_253B09BA0();
      uint64_t v29 = v28;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v27 = 0;
      uint64_t v29 = 0;
    }
    uint64_t v30 = **(void **)(v0 + 96);
    sub_253462A5C(&qword_269CDF1A0);
    uint64_t v31 = v29 | v27;
    if (v29 | v27)
    {
      uint64_t v31 = v0 + 16;
      *(void *)(v0 + 16) = 0;
      *(void *)(v0 + 24) = 0;
      *(void *)(v0 + 32) = v27;
      *(void *)(v0 + 40) = v29;
    }
    uint64_t v32 = *(void *)(v0 + 240);
    *(void *)(v0 + 48) = 1;
    *(void *)(v0 + 56) = v31;
    *(void *)(v0 + 64) = v30;
    swift_task_create();
    swift_release();
    sub_253591880(v32, &qword_26B24A398);
    unint64_t v4 = v49;
  }
  swift_bridgeObjectRelease();
  *(void *)(v0 + 312) = sub_253462A5C(&qword_269CDF1A0);
  sub_253462A5C(&qword_26B24A590);
  sub_253B09C10();
  *(void *)(v0 + 320) = MEMORY[0x263F8EE78];
  uint64_t v33 = swift_task_alloc();
  uint64_t v34 = (void *)sub_253592C04(v33);
  *uint64_t v34 = v35;
  v34[1] = sub_25358D750;
  sub_2535924CC();
  return MEMORY[0x270FA2058]();
}

uint64_t sub_25358D750()
{
  sub_253477168();
  sub_253477088();
  uint64_t v3 = v2;
  sub_253535478();
  *unint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_253477158();
  *uint64_t v6 = v5;
  *(void *)(v3 + 336) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25358D834()
{
  uint64_t v31 = v0;
  uint64_t v1 = v0[39];
  uint64_t v2 = (uint64_t *)v0[31];
  sub_2534F88B8((uint64_t)v2);
  if (v10)
  {
    uint64_t v3 = v0[42];
    uint64_t v4 = v0[40];
    sub_253591C10();
    v5();
    uint64_t v30 = v4;
    swift_bridgeObjectRetain_n();
    sub_25357C55C(&v30);
    if (!v3)
    {
      uint64_t v26 = (uint64_t *)v0[11];
      swift_bridgeObjectRelease();
      uint64_t v27 = sub_25357C608(v30);
      swift_release();
      swift_bridgeObjectRelease();
      *uint64_t v26 = v27;
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_253529DC4();
      sub_253592C48();
      __asm { BRAA            X1, X16 }
    }
    sub_253592C48();
    return swift_release();
  }
  else
  {
    uint64_t v8 = v0[20];
    uint64_t v9 = *v2;
    sub_253591930((uint64_t)v2 + *(int *)(v1 + 48), v8, &qword_269CDB3F8);
    sub_253592EEC(v8);
    if (v10)
    {
      sub_253591880(v0[20], &qword_269CDB3F8);
    }
    else
    {
      uint64_t v11 = (void *)v0[19];
      uint64_t v12 = sub_253592B90();
      v13(v12);
      *uint64_t v11 = v9;
      sub_253592288();
      v14();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v16 = v0[40];
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v16 = sub_253592DDC();
      }
      unint64_t v17 = *(void *)(v16 + 24);
      if (*(void *)(v16 + 16) >= v17 >> 1) {
        uint64_t v16 = sub_253592CE0(v17);
      }
      sub_2535929D8();
      sub_253591930(v18, v19, &qword_269CDE560);
      uint64_t v20 = sub_253592D04();
      v21(v20);
      v0[40] = v16;
    }
    uint64_t v22 = swift_task_alloc();
    unint64_t v23 = (void *)sub_253592C04(v22);
    *unint64_t v23 = v24;
    v23[1] = sub_25358D750;
    sub_2535924CC();
    sub_253592C48();
    return MEMORY[0x270FA2058]();
  }
}

uint64_t sub_25358DB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_253591DA0();
  sub_25359227C();
  uint64_t v27 = v16[24];
  uint64_t v28 = v16[20];
  uint64_t v30 = v16[19];
  sub_253477128();
  v17();
  uint64_t v29 = v16[9];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2535926A0();
  sub_253477238();
  return v19(v18, v19, v20, v21, v22, v23, v24, v25, a9, v27, v28, v29, v30, a14, a15, a16);
}

uint64_t sub_25358DC2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  *(unsigned char *)(v7 + 104) = a6;
  *(void *)(v7 + 24) = a1;
  *(void *)(v7 + 32) = a7;
  uint64_t v10 = sub_253B089F0();
  *(void *)(v7 + 40) = v10;
  *(void *)(v7 + 48) = *(void *)(v10 - 8);
  *(void *)(v7 + 56) = swift_task_alloc();
  uint64_t v11 = sub_253B09120();
  *(void *)(v7 + 64) = v11;
  *(void *)(v7 + 72) = *(void *)(v11 - 8);
  uint64_t v12 = swift_task_alloc();
  *(void *)(v7 + 80) = v12;
  uint64_t v15 = (char *)&dword_269CDF268 + dword_269CDF268;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v7 + 88) = v13;
  void *v13 = v7;
  v13[1] = sub_25358DDBC;
  return ((uint64_t (*)(uint64_t, uint64_t, void))v15)(v12, a5, a6 & 0xFFFFFFFD);
}

uint64_t sub_25358DDBC()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 96) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25358DE98()
{
  sub_253592324();
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = sub_253462A5C(&qword_269CDF1A0);
  uint64_t v3 = sub_253592628(v2);
  v4(v3);
  sub_2534AD3FC();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v5, v6, v7, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_253529DC4();
  return v8();
}

uint64_t sub_25358DF3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  uint64_t v13 = *(void **)(v12 + 96);
  if ((*(unsigned char *)(v12 + 104) & 2) != 0)
  {
    sub_253B08380();
    id v14 = v13;
    id v15 = v13;
    uint64_t v16 = (void *)sub_253B089D0();
    os_log_type_t v17 = sub_253B09D80();
    BOOL v18 = sub_25359293C(v17);
    uint64_t v19 = *(void **)(v12 + 96);
    if (v18)
    {
      sub_253592920();
      sub_253592A14();
      sub_25359254C(5.7779e-34);
      *(void *)(v12 + 16) = _swift_stdlib_bridgeErrorToNSError();
      sub_253592A78();
      sub_253592F0C();

      sub_25359259C(&dword_253460000, v20, v21, "ConcurrencySafeToolExecutionInterface: Unable to hydrate value. Filtering from list: %@");
      sub_253462A5C(&qword_269CDBEA8);
      sub_2535929F8();
      sub_253591C78();
      sub_2534659B4();
    }
    else
    {
    }
    uint64_t v22 = *(void *)(v12 + 64);
    uint64_t v24 = *(void **)(v12 + 24);
    uint64_t v23 = *(void *)(v12 + 32);
    sub_253591C10();
    v25();
    uint64_t v26 = (uint64_t)v24 + *(int *)(sub_253462A5C(&qword_269CDF1A0) + 48);
    *uint64_t v24 = v23;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v26, 1, 1, v22);
    swift_task_dealloc();
    swift_task_dealloc();
    sub_253529DC4();
  }
  else
  {
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  sub_253591C20();
  return v28(v27, v28, v29, v30, v31, v32, v33, v34, a9, a10, a11, a12);
}

uint64_t sub_25358E0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(v8 + 105) = a6;
  *(void *)(v8 + 24) = a1;
  *(void *)(v8 + 32) = a7;
  uint64_t v12 = sub_253B089F0();
  *(void *)(v8 + 40) = v12;
  *(void *)(v8 + 48) = *(void *)(v12 - 8);
  *(void *)(v8 + 56) = swift_task_alloc();
  uint64_t v13 = sub_253B09120();
  *(void *)(v8 + 64) = v13;
  *(void *)(v8 + 72) = *(void *)(v13 - 8);
  uint64_t v14 = swift_task_alloc();
  *(void *)(v8 + 80) = v14;
  *(unsigned char *)(v8 + 104) = a6 & 0xFD;
  os_log_type_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 72) + **(int **)(v19 + 72));
  id v15 = (void *)swift_task_alloc();
  *(void *)(v8 + 88) = v15;
  *id v15 = v8;
  v15[1] = sub_25358E2E0;
  return v17(v14, a5, v8 + 104, a8);
}

uint64_t sub_25358E2E0()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *uint64_t v5 = v4;
  *(void *)(v6 + 96) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25358E3BC()
{
  sub_253592324();
  uint64_t v0 = sub_253462A5C(&qword_269CDF1A0);
  uint64_t v1 = sub_253592628(v0);
  v2(v1);
  sub_2534AD3FC();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v3, v4, v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_253529DC4();
  return v7();
}

uint64_t sub_25358E460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_253591C3C();
  sub_253591F6C();
  uint64_t v13 = *(void **)(v12 + 96);
  if ((*(unsigned char *)(v12 + 105) & 2) != 0)
  {
    sub_253B08380();
    id v14 = v13;
    id v15 = v13;
    uint64_t v16 = (void *)sub_253B089D0();
    os_log_type_t v17 = sub_253B09D80();
    BOOL v18 = sub_25359293C(v17);
    uint64_t v19 = *(void **)(v12 + 96);
    if (v18)
    {
      sub_253592920();
      sub_253592A14();
      sub_25359254C(5.7779e-34);
      *(void *)(v12 + 16) = _swift_stdlib_bridgeErrorToNSError();
      sub_253592A78();
      sub_253592F0C();

      sub_25359259C(&dword_253460000, v20, v21, "ConcurrencySafeToolExecutionInterface: Unable to hydrate value. Filtering from list: %@");
      sub_253462A5C(&qword_269CDBEA8);
      sub_2535929F8();
      sub_253591C78();
      sub_2534659B4();
    }
    else
    {
    }
    uint64_t v22 = *(void *)(v12 + 32);
    uint64_t v23 = *(void **)(v12 + 24);
    sub_253591C10();
    v24();
    uint64_t v25 = (uint64_t)v23 + *(int *)(sub_253462A5C(&qword_269CDF1A0) + 48);
    *uint64_t v23 = v22;
    sub_25346CC08(v25, v26, v27, *(void *)(v12 + 64));
    swift_task_dealloc();
    swift_task_dealloc();
    sub_253529DC4();
  }
  else
  {
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  sub_253591C20();
  return v29(v28, v29, v30, v31, v32, v33, v34, v35, a9, a10, a11, a12);
}

uint64_t sub_25358E608()
{
  uint64_t v0 = sub_253B08FD0();
  char v1 = sub_25357C92C(v0, (uint64_t (*)(uint64_t, uint64_t, char *))sub_2535915F0);
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t ConcurrencySafeToolExecutionInterface.needsHydrating(entity:)()
{
  uint64_t v0 = sub_253B08FD0();
  char v1 = sub_25357C92C(v0, (uint64_t (*)(uint64_t, uint64_t, char *))sub_25358E984);
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_25358E6F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253581610(a3) & 1;
}

uint64_t sub_25358E724(uint64_t a1)
{
  unint64_t v2 = sub_253590310();
  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_25358E760(uint64_t a1)
{
  unint64_t v2 = sub_253590310();
  return MEMORY[0x270EF2668](a1, v2);
}

unint64_t sub_25358E79C()
{
  return 0xD000000000000015;
}

uint64_t sub_25358E7B8()
{
  sub_253529E08();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = *(void *)(v0 + 40);
  char v9 = *(unsigned char *)(v0 + 48);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)sub_25347720C(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_253477080;
  return sub_25358CF60(v4, v2, v7, v8, v9, v5, v6);
}

uint64_t type metadata accessor for ConcurrencySafeToolKitExecutionSession()
{
  return self;
}

uint64_t sub_25358E8A8()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25358E8E8()
{
  sub_253529DB8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_25347720C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_253477080;
  sub_253592FCC();
  return sub_25358A290();
}

uint64_t sub_25358E984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v3 + 24) + 88))(a3, *(void *)(v3 + 16)) & 1;
}

unint64_t sub_25358E9C8()
{
  unint64_t result = qword_269CDF2B0;
  if (!qword_269CDF2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDF2B0);
  }
  return result;
}

unint64_t sub_25358EA18()
{
  unint64_t result = qword_269CDF2B8;
  if (!qword_269CDF2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDF2B8);
  }
  return result;
}

unint64_t sub_25358EA68()
{
  unint64_t result = qword_269CDF2C0;
  if (!qword_269CDF2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDF2C0);
  }
  return result;
}

unint64_t sub_25358EAB8()
{
  unint64_t result = qword_269CDF2C8;
  if (!qword_269CDF2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDF2C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for HydrationOptions()
{
  return &type metadata for HydrationOptions;
}

uint64_t dispatch thunk of ConcurrencySafeToolExecutionInterface.coerce(value:to:)()
{
  sub_2535920D8();
  sub_253529E08();
  sub_253591E68();
  uint64_t v13 = *(void *)(v0 + 8) + **(int **)(v0 + 8);
  uint64_t v14 = v0 + 8;
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_25347720C(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_253477080;
  sub_253591D3C();
  sub_2535920C0();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t dispatch thunk of ConcurrencySafeToolExecutionInterface.resolve(reference:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_253592520();
  sub_253529E08();
  sub_253592838(v9, v10, v11, v12);
  uint64_t v26 = (char *)v13 + *v13;
  uint64_t v14 = swift_task_alloc();
  id v15 = (void *)sub_25347720C(v14);
  *id v15 = v16;
  v15[1] = sub_253477080;
  sub_253591D5C();
  sub_2535924B8();
  return v22(v17, v18, v19, v20, v21, v22, v23, v24, a9, v26);
}

{
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  sub_253592520();
  sub_253529E08();
  sub_253592158();
  uint64_t v22 = *(void *)(v9 + 32) + **(int **)(v9 + 32);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)sub_25347720C(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_253477080;
  sub_253591D5C();
  sub_2535924B8();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

uint64_t dispatch thunk of ConcurrencySafeToolExecutionInterface.resolve(reference:coercedTo:)()
{
  sub_2535920D8();
  sub_253529E08();
  sub_2535927C0(v0, v1, v2, v3, v4);
  uint64_t v19 = (char *)v6 + *v6;
  uint64_t v20 = v5;
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)sub_25347720C(v7);
  *uint64_t v8 = v9;
  v8[1] = sub_253477080;
  sub_253591D3C();
  sub_2535920C0();
  return v16(v10, v11, v12, v13, v14, v15, v16, v17, v19, v20);
}

uint64_t dispatch thunk of ConcurrencySafeToolExecutionInterface.enumerate(valueSet:in:query:)()
{
  sub_2535920D8();
  sub_253529E08();
  sub_253591E68();
  uint64_t v13 = *(void *)(v0 + 40) + **(int **)(v0 + 40);
  uint64_t v14 = v0 + 40;
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_253591EB4(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_253591C0C;
  sub_253591E14();
  sub_2535920C0();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t dispatch thunk of ConcurrencySafeToolExecutionInterface.fetchToolInvocationSummary(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_253592520();
  sub_253529E08();
  sub_253592158();
  uint64_t v22 = *(void *)(v9 + 48) + **(int **)(v9 + 48);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)sub_25347720C(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_253477080;
  sub_253591D5C();
  sub_2535924B8();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

uint64_t dispatch thunk of ConcurrencySafeToolExecutionInterface.hydrate(value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_253592520();
  sub_253529E08();
  sub_253592818(v9, v10, v11, v12);
  uint64_t v26 = (char *)v13 + *v13;
  uint64_t v14 = swift_task_alloc();
  uint64_t v15 = (void *)sub_25347720C(v14);
  *uint64_t v15 = v16;
  v15[1] = sub_253477080;
  sub_253591D5C();
  sub_2535924B8();
  return v22(v17, v18, v19, v20, v21, v22, v23, v24, a9, v26);
}

uint64_t dispatch thunk of ConcurrencySafeToolExecutionInterface.hydrate(values:)()
{
  sub_253592324();
  sub_253592394();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_253591EB4(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_253591C0C;
  uint64_t v3 = sub_25359237C();
  return v4(v3);
}

uint64_t dispatch thunk of ConcurrencySafeToolExecutionInterface.hydrate(value:options:)()
{
  sub_2535920D8();
  sub_253529E08();
  sub_253591E68();
  sub_2535927F4(v0, v1);
  uint64_t v16 = (char *)v3 + *v3;
  uint64_t v17 = v2;
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_25347720C(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_253477080;
  sub_253591D3C();
  sub_2535920C0();
  return v13(v7, v8, v9, v10, v11, v12, v13, v14, v16, v17);
}

uint64_t dispatch thunk of ConcurrencySafeToolExecutionInterface.hydrate(values:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_253592520();
  sub_253529E08();
  sub_253592858(v9, v10, v11, v12);
  uint64_t v26 = (char *)v13 + *v13;
  uint64_t v14 = swift_task_alloc();
  uint64_t v15 = (void *)sub_253591EB4(v14);
  *uint64_t v15 = v16;
  v15[1] = sub_253591C0C;
  sub_253591EC0();
  sub_2535924B8();
  return v22(v17, v18, v19, v20, v21, v22, v23, v24, a9, v26);
}

uint64_t dispatch thunk of ConcurrencySafeToolExecutionInterface.needsHydrating(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of ConcurrencySafeToolExecutionInterface.needsHydrating(values:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of ToolExecutionInterface.executorEventStream.getter()
{
  sub_253592324();
  sub_253592394();
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_25347720C(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_253477080;
  return v8(v2, v1, v0);
}

uint64_t dispatch thunk of ToolExecutionInterface.resolve(reference:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_253592520();
  sub_253529E08();
  sub_253592838(v9, v10, v11, v12);
  uint64_t v26 = (char *)v13 + *v13;
  uint64_t v14 = swift_task_alloc();
  uint64_t v15 = (void *)sub_25347720C(v14);
  *uint64_t v15 = v16;
  v15[1] = sub_253477080;
  sub_253591D5C();
  sub_2535924B8();
  return v22(v17, v18, v19, v20, v21, v22, v23, v24, a9, v26);
}

{
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  sub_253592520();
  sub_253529E08();
  sub_253592158();
  uint64_t v22 = *(void *)(v9 + 40) + **(int **)(v9 + 40);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)sub_25347720C(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_253477080;
  sub_253591D5C();
  sub_2535924B8();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, char *);
  uint64_t v23;
  uint64_t v24;
  char *v26;

  sub_253592520();
  sub_253529E08();
  sub_253592818(v9, v10, v11, v12);
  uint64_t v26 = (char *)v13 + *v13;
  uint64_t v14 = swift_task_alloc();
  uint64_t v15 = (void *)sub_25347720C(v14);
  *uint64_t v15 = v16;
  v15[1] = sub_253477080;
  sub_253591D5C();
  sub_2535924B8();
  return v22(v17, v18, v19, v20, v21, v22, v23, v24, a9, v26);
}

uint64_t dispatch thunk of ToolExecutionInterface.resolve(reference:coercedTo:)()
{
  sub_2535920D8();
  sub_253529E08();
  sub_2535927C0(v0, v1, v2, v3, v4);
  uint64_t v19 = (char *)v6 + *v6;
  uint64_t v20 = v5;
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)sub_25347720C(v7);
  *uint64_t v8 = v9;
  v8[1] = sub_253477080;
  sub_253591D3C();
  sub_2535920C0();
  return v16(v10, v11, v12, v13, v14, v15, v16, v17, v19, v20);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  sub_2535920D8();
  sub_253529E08();
  sub_253591E68();
  uint64_t v13 = *(void *)(v0 + 48) + **(int **)(v0 + 48);
  uint64_t v14 = v0 + 48;
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_25347720C(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_253477080;
  sub_253591D3C();
  sub_2535920C0();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t dispatch thunk of ToolExecutionInterface.coerce(value:to:)()
{
  sub_2535920D8();
  sub_253529E08();
  sub_253591E68();
  uint64_t v13 = *(void *)(v0 + 32) + **(int **)(v0 + 32);
  uint64_t v14 = v0 + 32;
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_25347720C(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_253477080;
  sub_253591D3C();
  sub_2535920C0();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t dispatch thunk of ToolExecutionInterface.enumerate(valueSet:in:query:)()
{
  sub_2535920D8();
  sub_253529E08();
  sub_253591E68();
  uint64_t v13 = *(void *)(v0 + 64) + **(int **)(v0 + 64);
  uint64_t v14 = v0 + 64;
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_253591EB4(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_253591C0C;
  sub_253591E14();
  sub_2535920C0();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t dispatch thunk of ToolExecutionInterface.fetchToolInvocationSummary(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_253592520();
  sub_253529E08();
  sub_253592158();
  sub_2535927F4(v9, v10);
  uint64_t v24 = (char *)v11 + *v11;
  uint64_t v12 = swift_task_alloc();
  uint64_t v13 = (void *)sub_25347720C(v12);
  void *v13 = v14;
  v13[1] = sub_253476FC0;
  sub_253591D5C();
  sub_2535924B8();
  return v20(v15, v16, v17, v18, v19, v20, v21, v22, a9, v24);
}

uint64_t dispatch thunk of ToolExecutionInterface.hydrate(value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_253592520();
  sub_253529E08();
  sub_253592858(v9, v10, v11, v12);
  uint64_t v26 = (char *)v13 + *v13;
  uint64_t v14 = swift_task_alloc();
  uint64_t v15 = (void *)sub_25347720C(v14);
  *uint64_t v15 = v16;
  v15[1] = sub_253477080;
  sub_253591D5C();
  sub_2535924B8();
  return v22(v17, v18, v19, v20, v21, v22, v23, v24, a9, v26);
}

uint64_t dispatch thunk of ToolExecutionInterface.hydrate(values:)()
{
  sub_253592324();
  sub_253592394();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_253591EB4(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_253591C0C;
  uint64_t v3 = sub_25359237C();
  return v4(v3);
}

uint64_t dispatch thunk of ToolExecutionInterface.hydrate(value:options:)()
{
  sub_2535920D8();
  sub_253529E08();
  sub_253591E68();
  uint64_t v13 = *(void *)(v0 + 96) + **(int **)(v0 + 96);
  uint64_t v14 = v0 + 96;
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_25347720C(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_253477080;
  sub_253591D3C();
  sub_2535920C0();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t dispatch thunk of ToolExecutionInterface.hydrate(values:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_253592520();
  sub_253529E08();
  sub_253592158();
  uint64_t v22 = *(void *)(v9 + 104) + **(int **)(v9 + 104);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)sub_253591EB4(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_253476AB4;
  sub_253591EC0();
  sub_2535924B8();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

uint64_t dispatch thunk of ToolExecutionInterface.execute(toolInvocation:dialogHandler:)()
{
  sub_2535920D8();
  sub_253529E08();
  sub_253591E68();
  uint64_t v13 = *(void *)(v0 + 112) + **(int **)(v0 + 112);
  uint64_t v14 = v0 + 112;
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_25347720C(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_253477080;
  sub_253591D3C();
  sub_2535920C0();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t dispatch thunk of ToolExecutionInterface.undo(_:)()
{
  sub_253592324();
  sub_253592394();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_253591EB4(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_253477080;
  uint64_t v3 = sub_25359237C();
  return v4(v3);
}

uint64_t dispatch thunk of ToolExecutionInterface.redo(_:)()
{
  sub_253592324();
  sub_253592394();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_253591EB4(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_253477080;
  uint64_t v3 = sub_25359237C();
  return v4(v3);
}

uint64_t type metadata accessor for ToolKitExecutionSession()
{
  return self;
}

uint64_t method lookup function for ToolKitExecutionSession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ToolKitExecutionSession);
}

uint64_t dispatch thunk of ToolKitExecutionSession.__allocating_init(sessionTask:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for ConcurrencySafeToolKitExecutionSession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ConcurrencySafeToolKitExecutionSession);
}

uint64_t dispatch thunk of ConcurrencySafeToolKitExecutionSession.__allocating_init(sessionTask:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

unsigned char *storeEnumTagSinglePayload for ExecutionSessionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253590284);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExecutionSessionError()
{
  return &type metadata for ExecutionSessionError;
}

unint64_t sub_2535902C4()
{
  unint64_t result = qword_269CDF490;
  if (!qword_269CDF490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDF490);
  }
  return result;
}

unint64_t sub_253590310()
{
  unint64_t result = qword_269CDF498;
  if (!qword_269CDF498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDF498);
  }
  return result;
}

uint64_t sub_25359035C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_253462A5C(&qword_269CDE560);
  uint64_t v123 = *(void *)(v4 - 8);
  uint64_t v124 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v120 = (uint64_t)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v130 = (uint64_t)&v114 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  v127 = (uint64_t *)((char *)&v114 - v10);
  MEMORY[0x270FA5388](v9);
  v126 = (uint64_t *)((char *)&v114 - v11);
  uint64_t v12 = a1[1];
  uint64_t result = sub_253B0A460();
  if (result >= v12)
  {
    if ((v12 & 0x8000000000000000) == 0)
    {
      if (v12) {
        return sub_253590D08(0, v12, 1, a1);
      }
      return result;
    }
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
    goto LABEL_144;
  }
  uint64_t v14 = result;
  uint64_t result = sub_2539DF81C(v12 / 2);
  uint64_t v115 = result;
  uint64_t v116 = v12;
  unint64_t v122 = v15;
  if (v12 <= 0)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    unint64_t v55 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_102:
    if (v55 < 2) {
      goto LABEL_116;
    }
    uint64_t v106 = *a1;
    while (1)
    {
      unint64_t v107 = v55 - 2;
      if (v55 < 2) {
        break;
      }
      if (!v106) {
        goto LABEL_148;
      }
      uint64_t v108 = v17;
      uint64_t v109 = v17 + 32;
      uint64_t v110 = *(void *)(v17 + 32 + 16 * v107);
      uint64_t v111 = *(void *)(v17 + 32 + 16 * (v55 - 1) + 8);
      uint64_t result = sub_253590F88(v106 + *(void *)(v123 + 72) * v110, v106 + *(void *)(v123 + 72) * *(void *)(v109 + 16 * (v55 - 1)), v106 + *(void *)(v123 + 72) * v111, v122);
      if (v2) {
        goto LABEL_114;
      }
      if (v111 < v110) {
        goto LABEL_135;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_253970884();
        uint64_t v108 = result;
      }
      if (v107 >= *(void *)(v108 + 16)) {
        goto LABEL_136;
      }
      v112 = (void *)(v108 + 32 + 16 * v107);
      void *v112 = v110;
      v112[1] = v111;
      unint64_t v113 = *(void *)(v108 + 16);
      if (v55 > v113) {
        goto LABEL_137;
      }
      uint64_t v17 = v108;
      uint64_t result = (uint64_t)memmove((void *)(v108 + 32 + 16 * (v55 - 1)), (const void *)(v108 + 32 + 16 * v55), 16 * (v113 - v55));
      *(void *)(v108 + 16) = v113 - 1;
      unint64_t v55 = v113 - 1;
      if (v113 <= 2) {
        goto LABEL_116;
      }
    }
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
    goto LABEL_140;
  }
  uint64_t v114 = v14;
  uint64_t v16 = 0;
  uint64_t v17 = MEMORY[0x263F8EE78];
  v129 = a1;
  while (1)
  {
    uint64_t v18 = v16;
    uint64_t v19 = v16 + 1;
    uint64_t v121 = v16;
    if (v16 + 1 < v12)
    {
      uint64_t v20 = *a1;
      uint64_t v21 = *(void *)(v123 + 72);
      uint64_t v22 = v126;
      sub_2535918D4(v20 + v21 * v19, (uint64_t)v126, &qword_269CDE560);
      uint64_t v23 = v127;
      sub_2535918D4(v20 + v21 * v18, (uint64_t)v127, &qword_269CDE560);
      uint64_t v131 = *v22;
      uint64_t v128 = *v23;
      sub_253591880((uint64_t)v23, &qword_269CDE560);
      uint64_t result = sub_253591880((uint64_t)v22, &qword_269CDE560);
      uint64_t v117 = v20;
      uint64_t v132 = v21;
      if (v18 + 2 >= v12)
      {
        uint64_t v19 = v18 + 2;
        uint64_t v29 = v21;
      }
      else
      {
        uint64_t v125 = v21 * v19;
        uint64_t v24 = v20;
        uint64_t v19 = v18 + 2;
        uint64_t v118 = v17;
        uint64_t v119 = v21 * (v18 + 2);
        while (1)
        {
          int v25 = v131 < v128;
          uint64_t v26 = v126;
          sub_2535918D4(v24 + v119, (uint64_t)v126, &qword_269CDE560);
          uint64_t v27 = v127;
          sub_2535918D4(v24 + v125, (uint64_t)v127, &qword_269CDE560);
          int v28 = *v26 >= *v27;
          sub_253591880((uint64_t)v27, &qword_269CDE560);
          uint64_t result = sub_253591880((uint64_t)v26, &qword_269CDE560);
          if (v25 == v28) {
            break;
          }
          uint64_t v29 = v132;
          v24 += v132;
          if (++v19 >= v12)
          {
            uint64_t v19 = v12;
            uint64_t v20 = v117;
            uint64_t v17 = v118;
            uint64_t v18 = v121;
            goto LABEL_12;
          }
        }
        uint64_t v20 = v117;
        uint64_t v17 = v118;
        uint64_t v18 = v121;
        uint64_t v29 = v132;
      }
LABEL_12:
      if (v131 >= v128) {
        goto LABEL_29;
      }
      if (v19 < v18) {
        goto LABEL_141;
      }
      if (v18 >= v19)
      {
LABEL_29:
        a1 = v129;
      }
      else
      {
        uint64_t v128 = v12;
        uint64_t v30 = 0;
        uint64_t v31 = v29 * (v19 - 1);
        uint64_t v32 = v18;
        uint64_t v33 = v19 * v29;
        uint64_t v34 = v32;
        uint64_t v35 = v32 * v29;
        uint64_t v118 = v17;
        do
        {
          if (v34 != v19 + v30 - 1)
          {
            if (!v20) {
              goto LABEL_147;
            }
            uint64_t v131 = v20 + v31;
            sub_253591930(v20 + v35, v120, &qword_269CDE560);
            if (v35 < v31 || v20 + v35 >= (unint64_t)(v20 + v33))
            {
              uint64_t v37 = v131;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v37 = v131;
              if (v35 != v31) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            uint64_t result = sub_253591930(v120, v37, &qword_269CDE560);
            uint64_t v20 = v117;
            uint64_t v17 = v118;
            uint64_t v29 = v132;
          }
          ++v34;
          --v30;
          v31 -= v29;
          v33 -= v29;
          v35 += v29;
        }
        while (v34 < v19 + v30);
        uint64_t v12 = v128;
        a1 = v129;
        uint64_t v18 = v121;
      }
    }
    if (v19 < v12)
    {
      if (__OFSUB__(v19, v18)) {
        goto LABEL_139;
      }
      if (v19 - v18 < v114)
      {
        if (__OFADD__(v18, v114)) {
          goto LABEL_142;
        }
        if (v18 + v114 >= v12) {
          uint64_t v38 = v12;
        }
        else {
          uint64_t v38 = v18 + v114;
        }
        if (v38 < v18) {
          goto LABEL_143;
        }
        if (v19 != v38)
        {
          uint64_t v117 = v2;
          uint64_t v118 = v17;
          uint64_t v39 = *(void *)(v123 + 72);
          uint64_t v132 = v39 * (v19 - 1);
          uint64_t v125 = v39;
          uint64_t v40 = v19 * v39;
          uint64_t v119 = v38;
          do
          {
            uint64_t v41 = 0;
            uint64_t v42 = v121;
            uint64_t v128 = v19;
            while (1)
            {
              uint64_t v43 = v129;
              uint64_t v44 = *v129;
              uint64_t v45 = v40;
              uint64_t v46 = v40 + v41 + *v129;
              char v47 = v126;
              sub_2535918D4(v46, (uint64_t)v126, &qword_269CDE560);
              uint64_t v48 = v127;
              sub_2535918D4(v132 + v41 + v44, (uint64_t)v127, &qword_269CDE560);
              uint64_t v131 = *v47;
              uint64_t v49 = *v48;
              sub_253591880((uint64_t)v48, &qword_269CDE560);
              uint64_t result = sub_253591880((uint64_t)v47, &qword_269CDE560);
              if (v131 >= v49) {
                break;
              }
              uint64_t v50 = *v43;
              if (!*v43) {
                goto LABEL_145;
              }
              uint64_t v40 = v45;
              uint64_t v51 = v50 + v132 + v41;
              sub_253591930(v50 + v45 + v41, v130, &qword_269CDE560);
              swift_arrayInitWithTakeFrontToBack();
              uint64_t result = sub_253591930(v130, v51, &qword_269CDE560);
              v41 -= v125;
              ++v42;
              uint64_t v52 = v128;
              if (v128 == v42) {
                goto LABEL_46;
              }
            }
            uint64_t v52 = v128;
            uint64_t v40 = v45;
LABEL_46:
            uint64_t v19 = v52 + 1;
            v132 += v125;
            v40 += v125;
          }
          while (v19 != v119);
          uint64_t v19 = v119;
          uint64_t v2 = v117;
          uint64_t v17 = v118;
          a1 = v129;
          uint64_t v18 = v121;
        }
      }
    }
    if (v19 < v18) {
      goto LABEL_138;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v128 = v19;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_25397078C(0, *(void *)(v17 + 16) + 1, 1, (char *)v17);
      uint64_t v17 = result;
    }
    unint64_t v54 = *(void *)(v17 + 16);
    unint64_t v53 = *(void *)(v17 + 24);
    unint64_t v55 = v54 + 1;
    if (v54 >= v53 >> 1)
    {
      uint64_t result = (uint64_t)sub_25397078C((char *)(v53 > 1), v54 + 1, 1, (char *)v17);
      uint64_t v17 = result;
    }
    *(void *)(v17 + 16) = v55;
    uint64_t v56 = v17 + 32;
    uint64_t v57 = (uint64_t *)(v17 + 32 + 16 * v54);
    uint64_t v58 = v128;
    *uint64_t v57 = v121;
    v57[1] = v58;
    if (v54) {
      break;
    }
    unint64_t v55 = 1;
LABEL_96:
    uint64_t v12 = a1[1];
    uint64_t v16 = v128;
    if (v128 >= v12) {
      goto LABEL_102;
    }
  }
  while (1)
  {
    unint64_t v59 = v55 - 1;
    if (v55 >= 4)
    {
      unint64_t v64 = v56 + 16 * v55;
      uint64_t v65 = *(void *)(v64 - 64);
      uint64_t v66 = *(void *)(v64 - 56);
      BOOL v70 = __OFSUB__(v66, v65);
      uint64_t v67 = v66 - v65;
      if (v70) {
        goto LABEL_123;
      }
      uint64_t v69 = *(void *)(v64 - 48);
      uint64_t v68 = *(void *)(v64 - 40);
      BOOL v70 = __OFSUB__(v68, v69);
      uint64_t v62 = v68 - v69;
      char v63 = v70;
      if (v70) {
        goto LABEL_124;
      }
      unint64_t v71 = v55 - 2;
      uint64_t v72 = (uint64_t *)(v56 + 16 * (v55 - 2));
      uint64_t v74 = *v72;
      uint64_t v73 = v72[1];
      BOOL v70 = __OFSUB__(v73, v74);
      uint64_t v75 = v73 - v74;
      if (v70) {
        goto LABEL_125;
      }
      BOOL v70 = __OFADD__(v62, v75);
      uint64_t v76 = v62 + v75;
      if (v70) {
        goto LABEL_127;
      }
      if (v76 >= v67)
      {
        v94 = (uint64_t *)(v56 + 16 * v59);
        uint64_t v96 = *v94;
        uint64_t v95 = v94[1];
        BOOL v70 = __OFSUB__(v95, v96);
        uint64_t v97 = v95 - v96;
        if (v70) {
          goto LABEL_133;
        }
        BOOL v87 = v62 < v97;
        goto LABEL_85;
      }
    }
    else
    {
      if (v55 != 3)
      {
        uint64_t v88 = *(void *)(v17 + 32);
        uint64_t v89 = *(void *)(v17 + 40);
        BOOL v70 = __OFSUB__(v89, v88);
        uint64_t v81 = v89 - v88;
        char v82 = v70;
        goto LABEL_79;
      }
      uint64_t v61 = *(void *)(v17 + 32);
      uint64_t v60 = *(void *)(v17 + 40);
      BOOL v70 = __OFSUB__(v60, v61);
      uint64_t v62 = v60 - v61;
      char v63 = v70;
    }
    if (v63) {
      goto LABEL_126;
    }
    unint64_t v71 = v55 - 2;
    uint64_t v77 = (uint64_t *)(v56 + 16 * (v55 - 2));
    uint64_t v79 = *v77;
    uint64_t v78 = v77[1];
    BOOL v80 = __OFSUB__(v78, v79);
    uint64_t v81 = v78 - v79;
    char v82 = v80;
    if (v80) {
      goto LABEL_128;
    }
    uint64_t v83 = (uint64_t *)(v56 + 16 * v59);
    uint64_t v85 = *v83;
    uint64_t v84 = v83[1];
    BOOL v70 = __OFSUB__(v84, v85);
    uint64_t v86 = v84 - v85;
    if (v70) {
      goto LABEL_130;
    }
    if (__OFADD__(v81, v86)) {
      goto LABEL_132;
    }
    if (v81 + v86 >= v62)
    {
      BOOL v87 = v62 < v86;
LABEL_85:
      if (v87) {
        unint64_t v59 = v71;
      }
      goto LABEL_87;
    }
LABEL_79:
    if (v82) {
      goto LABEL_129;
    }
    v90 = (uint64_t *)(v56 + 16 * v59);
    uint64_t v92 = *v90;
    uint64_t v91 = v90[1];
    BOOL v70 = __OFSUB__(v91, v92);
    uint64_t v93 = v91 - v92;
    if (v70) {
      goto LABEL_131;
    }
    if (v93 < v81) {
      goto LABEL_96;
    }
LABEL_87:
    unint64_t v98 = v59 - 1;
    if (v59 - 1 >= v55)
    {
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }
    uint64_t v99 = *a1;
    if (!*a1) {
      goto LABEL_146;
    }
    uint64_t v100 = v17;
    v101 = (uint64_t *)(v56 + 16 * v98);
    uint64_t v102 = *v101;
    v103 = (void *)(v56 + 16 * v59);
    uint64_t v104 = v103[1];
    uint64_t result = sub_253590F88(v99 + *(void *)(v123 + 72) * *v101, v99 + *(void *)(v123 + 72) * *v103, v99 + *(void *)(v123 + 72) * v104, v122);
    if (v2) {
      break;
    }
    if (v104 < v102) {
      goto LABEL_120;
    }
    if (v59 > *(void *)(v100 + 16)) {
      goto LABEL_121;
    }
    uint64_t *v101 = v102;
    *(void *)(v56 + 16 * v98 + 8) = v104;
    unint64_t v105 = *(void *)(v100 + 16);
    if (v59 >= v105) {
      goto LABEL_122;
    }
    uint64_t v17 = v100;
    unint64_t v55 = v105 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v56 + 16 * v59), v103 + 2, 16 * (v105 - 1 - v59));
    *(void *)(v100 + 16) = v105 - 1;
    a1 = v129;
    if (v105 <= 2) {
      goto LABEL_96;
    }
  }
LABEL_114:
  swift_bridgeObjectRelease();
  if (v116 >= -1) {
    goto LABEL_117;
  }
  __break(1u);
LABEL_116:
  uint64_t result = swift_bridgeObjectRelease();
  if (v116 >= -1)
  {
LABEL_117:
    *(void *)(v115 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
  return result;
}

uint64_t sub_253590D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v36 = a1;
  uint64_t v37 = sub_253462A5C(&qword_269CDE560);
  uint64_t v7 = MEMORY[0x270FA5388](v37);
  uint64_t v43 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v39 = (uint64_t *)((char *)&v34 - v10);
  uint64_t result = MEMORY[0x270FA5388](v9);
  uint64_t v38 = (uint64_t *)((char *)&v34 - v13);
  uint64_t v42 = a3;
  uint64_t v35 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = *(void *)(v12 + 72);
    uint64_t v15 = v14 * (v42 - 1);
    uint64_t v40 = v14;
    uint64_t v16 = v14 * v42;
    uint64_t v17 = &qword_269CDE560;
    uint64_t v45 = a4;
    while (2)
    {
      uint64_t v18 = 0;
      uint64_t v19 = v36;
      uint64_t v41 = v16;
      do
      {
        uint64_t v20 = *v45;
        uint64_t v21 = v16 + v18 + *v45;
        uint64_t v22 = v38;
        sub_2535918D4(v21, (uint64_t)v38, v17);
        uint64_t v23 = v15 + v18 + v20;
        uint64_t v24 = v15;
        int v25 = v39;
        sub_2535918D4(v23, (uint64_t)v39, v17);
        uint64_t v44 = *v22;
        uint64_t v26 = v17;
        uint64_t v27 = *v25;
        uint64_t v28 = (uint64_t)v25;
        uint64_t v15 = v24;
        sub_253591880(v28, v26);
        uint64_t v29 = (uint64_t)v22;
        uint64_t v16 = v41;
        uint64_t result = sub_253591880(v29, v26);
        BOOL v30 = v44 < v27;
        uint64_t v17 = v26;
        if (!v30) {
          break;
        }
        uint64_t v31 = *v45;
        if (!*v45)
        {
          __break(1u);
          return result;
        }
        uint64_t v32 = v31 + v24 + v18;
        sub_253591930(v31 + v16 + v18, v43, v26);
        swift_arrayInitWithTakeFrontToBack();
        uint64_t v33 = v32;
        uint64_t v17 = v26;
        uint64_t result = sub_253591930(v43, v33, v26);
        v18 -= v40;
        ++v19;
      }
      while (v42 != v19);
      uint64_t v15 = v24 + v40;
      v16 += v40;
      if (++v42 != v35) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_253590F88(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v53 = sub_253462A5C(&qword_269CDE560);
  uint64_t v9 = MEMORY[0x270FA5388](v53);
  unint64_t v55 = (uint64_t *)((char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x270FA5388](v9);
  unint64_t v54 = (uint64_t *)((char *)&v45 - v12);
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  int64_t v15 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_77;
  }
  int64_t v17 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_78;
  }
  uint64_t v19 = v15 / v14;
  uint64_t v20 = v17 / v14;
  if (v15 / v14 >= v17 / v14)
  {
    uint64_t result = sub_253525924(a2, v17 / v14);
    unint64_t v22 = a4 + v20 * v14;
    if (v20 * v14 < 1 || a1 >= a2) {
      goto LABEL_71;
    }
    uint64_t v46 = v4;
    uint64_t v47 = v14;
    unint64_t v49 = a4;
    uint64_t v50 = -v14;
    unint64_t v48 = a1;
    while (1)
    {
      unint64_t v25 = a3;
      uint64_t v26 = v50;
      a3 += v50;
      unint64_t v52 = v22 + v50;
      uint64_t v27 = v54;
      sub_2535918D4(v22 + v50, (uint64_t)v54, &qword_269CDE560);
      unint64_t v51 = a2 + v26;
      uint64_t v28 = v55;
      sub_2535918D4(a2 + v26, (uint64_t)v55, &qword_269CDE560);
      uint64_t v29 = *v27;
      uint64_t v30 = *v28;
      sub_253591880((uint64_t)v28, &qword_269CDE560);
      uint64_t result = sub_253591880((uint64_t)v27, &qword_269CDE560);
      if (v29 >= v30)
      {
        if (v25 >= v22 && a3 < v22)
        {
          unint64_t v33 = v48;
          a4 = v49;
          if (v25 == v22)
          {
            unint64_t v22 = v52;
            goto LABEL_43;
          }
          unint64_t v22 = v52;
LABEL_40:
          uint64_t result = swift_arrayInitWithTakeBackToFront();
          goto LABEL_43;
        }
        unint64_t v22 = v52;
      }
      else
      {
        if (v25 >= a2 && a3 < a2)
        {
          unint64_t v33 = v48;
          a4 = v49;
          if (v25 == a2)
          {
            a2 = v51;
            goto LABEL_43;
          }
          a2 = v51;
          goto LABEL_40;
        }
        a2 = v51;
      }
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
      unint64_t v33 = v48;
      a4 = v49;
LABEL_43:
      uint64_t v14 = v47;
      if (v22 <= a4 || a2 <= v33) {
        goto LABEL_71;
      }
    }
  }
  uint64_t result = sub_253525924(a1, v15 / v14);
  uint64_t v21 = v19 * v14;
  unint64_t v22 = a4 + v19 * v14;
  unint64_t v52 = a3;
  if (v21 >= 1 && a2 < a3)
  {
    uint64_t v46 = v4;
    unint64_t v51 = v22;
    uint64_t v35 = v54;
    uint64_t v36 = v55;
    do
    {
      sub_2535918D4(a2, (uint64_t)v35, &qword_269CDE560);
      sub_2535918D4(a4, (uint64_t)v36, &qword_269CDE560);
      uint64_t v37 = *v35;
      uint64_t v38 = *v36;
      sub_253591880((uint64_t)v36, &qword_269CDE560);
      uint64_t result = sub_253591880((uint64_t)v35, &qword_269CDE560);
      if (v37 >= v38)
      {
        if (a1 < a4 || a1 >= a4 + v14)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a4)
        {
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v39 = a2;
        a4 += v14;
      }
      else
      {
        unint64_t v39 = a2 + v14;
        if (a1 < a2 || a1 >= v39)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v22 = v51;
      a1 += v14;
      BOOL v42 = a4 >= v51 || v39 >= v52;
      a2 = v39;
    }
    while (!v42);
  }
LABEL_71:
  int64_t v43 = v22 - a4;
  if (v14 != -1 || v43 != 0x8000000000000000)
  {
    sub_253525924(a4, v43 / v14);
    return 1;
  }
LABEL_79:
  __break(1u);
  return result;
}

uint64_t sub_253591374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, char a5)
{
  *(void *)(v5 + 16) = a1;
  uint64_t v9 = *a4;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v10;
  void *v10 = v5;
  v10[1] = sub_25359142C;
  return sub_25358C378(a2, a3, v9, a5);
}

uint64_t sub_25359142C()
{
  sub_253529DB8();
  uint64_t v3 = v2;
  sub_253477088();
  uint64_t v5 = v4;
  sub_253535478();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_253477158();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (!v0) {
    **(void **)(v5 + 16) = v3;
  }
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

uint64_t sub_253591508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v14 = *a4;
  int64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *int64_t v15 = v7;
  v15[1] = sub_253477080;
  return sub_25358DC2C(a1, a2, a3, v14, a5, a6, a7);
}

uint64_t sub_2535915E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25358E6F8(a1, a2, a3);
}

uint64_t sub_2535915F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2535915E8(a1, a2, a3);
}

uint64_t sub_2535915F8()
{
  sub_253592324();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(uint64_t **)(v0 + 24);
  char v7 = *(unsigned char *)(v0 + 32);
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)sub_25347720C(v8);
  void *v9 = v10;
  v9[1] = sub_253477080;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *, char))((char *)&dword_269CDF4B0 + dword_269CDF4B0);
  return v11(v4, v2, v5, v6, v7);
}

uint64_t sub_2535916BC()
{
  uint64_t v1 = sub_253B09120();
  sub_2534727C4();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 40) & ~v6;
  uint64_t v8 = v6 | 7;
  unint64_t v9 = ((v7 + *(void *)(v5 + 64)) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  return MEMORY[0x270FA0238](v0, v9, v8);
}

uint64_t sub_253591774()
{
  sub_253529E08();
  uint64_t v0 = sub_253B09120();
  sub_25346CB34(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_25347720C(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_253477080;
  uint64_t v4 = sub_253592FCC();
  return v5(v4);
}

uint64_t sub_253591880(uint64_t a1, uint64_t *a2)
{
  sub_253462A5C(a2);
  sub_25347B88C();
  sub_2534659CC();
  v3();
  return a1;
}

uint64_t sub_2535918D4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_253462A5C(a3);
  sub_25347B88C();
  sub_2534B3428();
  v4();
  return a2;
}

uint64_t sub_253591930(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_253462A5C(a3);
  sub_25347B88C();
  sub_2534D8E14();
  v4();
  return a2;
}

uint64_t sub_25359198C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_2534727C4();
  uint64_t v3 = v2;
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 48) & ~v4;
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_253B09120();
  sub_2534727C4();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = (v5 + v7 + v13) & ~v13;
  uint64_t v15 = v4 | v13 | 7;
  unint64_t v16 = ((v14 + *(void *)(v12 + 64)) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v1);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v14, v8);
  return MEMORY[0x270FA0238](v0, v16, v15);
}

uint64_t sub_253591A9C()
{
  sub_253591F6C();
  sub_2534727C4();
  uint64_t v1 = sub_253B09120();
  sub_25346CB34(v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_253477080;
  sub_253591C20();
  return sub_25358E0EC(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_253591C58()
{
  return v0;
}

void sub_253591C78()
{
  JUMPOUT(0x25A269E60);
}

uint64_t sub_253591CB0()
{
  return swift_task_dealloc();
}

void sub_253591CF0()
{
}

uint64_t sub_253591D3C()
{
  return v0;
}

uint64_t sub_253591D5C()
{
  return v0;
}

uint64_t sub_253591D78(uint64_t a1)
{
  v2[25] = a1;
  v2[26] = *(void *)(v1 + 8);
  v2[27] = (v1 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  return v3;
}

uint64_t sub_253591DBC()
{
  return swift_task_dealloc();
}

void sub_253591DF8(void *a1, NSObject *a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5)
{
  _os_signpost_emit_with_name_impl(a1, a2, a3, a4, a5, v5, v6, 2u);
}

uint64_t sub_253591E2C()
{
  return v0;
}

uint64_t sub_253591E44()
{
  *(void *)(v0 + 224) = *(void *)(v2 + 8);
  *(void *)(v0 + 232) = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  return v1;
}

uint64_t sub_253591EA0()
{
  return v0;
}

uint64_t sub_253591EB4(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t sub_253591ED4()
{
  return v0;
}

void sub_253591F20()
{
}

uint64_t sub_253591F78()
{
  return v0;
}

void sub_253591FA8()
{
}

uint64_t sub_253591FEC()
{
  return swift_task_dealloc();
}

uint64_t sub_25359202C()
{
  return v0 + 8;
}

uint64_t sub_25359203C()
{
  return v0;
}

uint64_t sub_253592050()
{
  return swift_task_dealloc();
}

uint64_t sub_25359208C()
{
  return v0;
}

uint64_t sub_2535920A8()
{
  return sub_253B08990();
}

void sub_2535920F0(void *a1, uint64_t a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6)
{
  _os_signpost_emit_with_name_impl(a1, v6, a3, a4, a5, a6, v7, 2u);
}

uint64_t sub_25359210C()
{
  uint64_t v1 = (void *)v0[16];
  uint64_t result = v0[14];
  uint64_t v3 = v0[11];
  v0[21] = *v1;
  v0[22] = v1[1];
  v0[23] = *(void *)(v3 + 32);
  v0[24] = (v3 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  return result;
}

void sub_253592170()
{
}

uint64_t sub_2535921A4()
{
  return swift_task_dealloc();
}

uint64_t sub_2535921C8()
{
  return sub_253B077C0();
}

uint64_t sub_2535921E8()
{
  *(void *)(v0 + 192) = *(void *)(v0 + 16);
  return sub_253B077C0();
}

uint64_t sub_253592210()
{
  *(void *)(v0 + 192) = *(void *)(v0 + 16);
  return sub_253B077C0();
}

void sub_253592230()
{
}

uint64_t sub_253592298()
{
  return v0;
}

uint64_t sub_2535922B0()
{
  return sub_253B077C0();
}

uint64_t sub_2535922CC()
{
  return v0;
}

uint64_t sub_2535922E4()
{
  return swift_retain();
}

uint64_t sub_253592308()
{
  return sub_253B0A4C0();
}

uint64_t sub_253592330()
{
  return swift_task_dealloc();
}

uint64_t sub_253592364()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_25359237C()
{
  return v0;
}

uint64_t sub_2535923A8()
{
  return swift_task_dealloc();
}

uint64_t sub_2535923E8()
{
  return swift_task_dealloc();
}

uint64_t sub_253592424(uint64_t result)
{
  *(void *)(v1 + 48) = result;
  return result;
}

uint64_t sub_25359244C()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_253592468(_WORD *a1)
{
  *a1 = 0;
  return sub_253B08920();
}

uint64_t sub_253592480()
{
  *(void *)(v0 + 200) = *(void *)(v0 + 16);
  return sub_253B077C0();
}

uint64_t sub_2535924E0()
{
  return swift_retain();
}

uint64_t sub_253592500()
{
  return swift_retain();
}

uint64_t sub_253592534()
{
  return sub_253B09DE0();
}

id sub_25359254C(float a1)
{
  *uint64_t v2 = a1;
  return v1;
}

uint64_t sub_253592584()
{
  return sub_253B09DE0();
}

void sub_25359259C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_2535925BC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2535925D4()
{
}

uint64_t sub_2535925F4()
{
  return v0;
}

uint64_t sub_253592600(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  return result;
}

uint64_t sub_253592610(uint64_t a1)
{
  *(void *)(v1 + 112) = a1;
  return swift_task_alloc();
}

char *sub_253592628(uint64_t a1)
{
  uint64_t v3 = (char *)v2 + *(int *)(a1 + 48);
  *uint64_t v2 = v1;
  return v3;
}

uint64_t sub_253592650()
{
  return *(void *)(v0 + 248);
}

uint64_t sub_253592678()
{
  return v0;
}

uint64_t sub_253592684()
{
  return sub_253B0A4C0();
}

uint64_t sub_2535926A0()
{
  return v0 + 8;
}

uint64_t sub_2535926B0()
{
  return swift_task_dealloc();
}

void sub_2535926D4()
{
}

uint64_t sub_253592708(uint64_t a1)
{
  return v1 + *(int *)(a1 + 48);
}

uint64_t sub_25359272C(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
}

uint64_t sub_253592754()
{
  return v0;
}

uint64_t sub_253592778()
{
  return v0;
}

uint64_t sub_25359279C()
{
  return *(void *)(v0 + 264);
}

uint64_t sub_2535927C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return a5 + 24;
}

uint64_t sub_2535927E4(uint64_t result)
{
  *(void *)(v1 + 240) = result;
  return result;
}

uint64_t sub_2535927F4(uint64_t a1, uint64_t a2)
{
  return a2 + 72;
}

uint64_t sub_253592800(uint64_t a1)
{
  *(void *)(v1 + 152) = a1;
  return swift_task_alloc();
}

uint64_t sub_253592818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a4 + 56;
}

uint64_t sub_253592838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a4 + 16;
}

uint64_t sub_253592858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a4 + 80;
}

uint64_t sub_253592878(uint64_t a1)
{
  *(void *)(v1 + 120) = a1;
  return swift_task_alloc();
}

uint64_t sub_253592890(uint64_t a1)
{
  *(void *)(v1 + 104) = a1;
  return swift_task_alloc();
}

void *sub_2535928A8()
{
  void *v0 = v1;
  return v0;
}

uint64_t sub_2535928C8(uint64_t a1)
{
  *(void *)(v1 + 160) = a1;
  return swift_task_alloc();
}

void *sub_2535928E0()
{
  void *v0 = v1;
  return v0;
}

uint64_t sub_253592900(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_253592920()
{
  return swift_slowAlloc();
}

BOOL sub_25359293C(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void *sub_253592958()
{
  void *v0 = v1;
  return v0;
}

uint64_t sub_253592978()
{
  return v0;
}

uint64_t sub_253592998@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = (void *)(*(void *)(result + 48) + 16 * a2);
  uint64_t v4 = v3[1];
  *uint64_t v2 = *v3;
  v2[1] = v4;
  return result;
}

void sub_2535929D8()
{
  *(void *)(v1 + 16) = v0;
}

uint64_t sub_2535929F8()
{
  return swift_arrayDestroy();
}

uint64_t sub_253592A14()
{
  return swift_slowAlloc();
}

uint64_t sub_253592A40()
{
  return swift_slowAlloc();
}

uint64_t sub_253592A78()
{
  return sub_253B09E80();
}

uint64_t sub_253592A94()
{
  return swift_retain();
}

uint64_t sub_253592AB4()
{
  return swift_retain();
}

void sub_253592AD4()
{
}

uint64_t sub_253592AF4(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return sub_253B08980();
}

uint64_t sub_253592B10()
{
  return sub_253B077C0();
}

uint64_t sub_253592B30()
{
  return *(void *)(v0 + 104);
}

uint64_t sub_253592B4C()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_253592B68()
{
  return sub_253B08FF0();
}

uint64_t sub_253592B90()
{
  return v0;
}

uint64_t sub_253592BAC(uint64_t result)
{
  *(void *)(v1 + 176) = result;
  return result;
}

uint64_t sub_253592BB8()
{
  return v0;
}

uint64_t sub_253592BD4()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_253592BE0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return sub_253B09E80();
}

uint64_t sub_253592C04(uint64_t result)
{
  *(void *)(v1 + 328) = result;
  return result;
}

uint64_t sub_253592C14(uint64_t result)
{
  *(void *)(v1 + 248) = result;
  return result;
}

void sub_253592C30(uint64_t a1@<X8>)
{
  uint64_t v3 = (void *)(*(void *)(a1 + 48) + 16 * v1);
  uint64_t v4 = v3[1];
  *uint64_t v2 = *v3;
  v2[1] = v4;
}

uint64_t sub_253592C64()
{
  return v0;
}

uint64_t sub_253592C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  return sub_253B08980();
}

uint64_t sub_253592C98()
{
  return *(void *)(v0 + 88);
}

uint64_t sub_253592CE0@<X0>(unint64_t a1@<X8>)
{
  return sub_2535238E0(a1 > 1, v1, 1, v2);
}

uint64_t sub_253592D04()
{
  return v0;
}

void sub_253592D1C(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, os_log_t log)
{
  _os_log_impl(a1, log, v11, a4, v10, 0xCu);
}

void sub_253592D50()
{
  *(void *)(v0 + 168) = *(void *)(*(void *)(*(void *)(v0 + 40) + 16) + 16);
}

uint64_t sub_253592D68()
{
  return swift_task_dealloc();
}

uint64_t sub_253592D8C@<X0>(uint64_t a1@<X8>)
{
  return *(unsigned int *)(a1 + 4);
}

uint64_t sub_253592DA8()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_253592DB8()
{
  return v0;
}

uint64_t sub_253592DDC()
{
  uint64_t v2 = *(void *)(v0 + 16) + 1;
  return sub_2535238E0(0, v2, 1, v0);
}

uint64_t sub_253592E0C()
{
  return v0;
}

uint64_t sub_253592E20(uint64_t a1)
{
  *(void *)(v1 + 128) = a1;
  return sub_253B08970();
}

uint64_t sub_253592E38()
{
  return swift_retain();
}

uint64_t sub_253592E58()
{
  return swift_retain();
}

uint64_t sub_253592E78(uint64_t a1)
{
  *(void *)(v1 + 72) = a1;
  return swift_task_alloc();
}

uint64_t sub_253592E90()
{
  return sub_253B077C0();
}

void sub_253592EB0(unsigned char *a1@<X8>)
{
  *a1 = v1;
}

void sub_253592EB8()
{
}

uint64_t sub_253592EEC(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v1);
}

void sub_253592F0C()
{
  *uint64_t v1 = v2;
}

uint64_t sub_253592F38(uint64_t a1)
{
  *(void *)(v1 + 80) = a1;
  return swift_task_alloc();
}

uint64_t sub_253592F50(uint64_t a1)
{
  *(void *)(v1 + 80) = a1;
  return sub_253B08940();
}

uint64_t sub_253592F74()
{
  return swift_allocObject();
}

uint64_t sub_253592F8C(uint64_t a1, unsigned char *a2)
{
  *a2 = 1;
  return swift_willThrow();
}

uint64_t sub_253592FAC()
{
  return swift_slowAlloc();
}

uint64_t sub_253592FCC()
{
  return v0;
}

uint64_t sub_253592FE0()
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v0, 0, 1, v1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_253593018()
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v0, 0, 1, v1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_253593050()
{
  return swift_task_alloc();
}

uint64_t sub_2535930A4()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF518);
  sub_253462BD4(v0, (uint64_t)qword_269CDF518);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B36A50;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "onScreen";
  *(void *)(v6 + 8) = 8;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "conversational";
  *(void *)(v10 + 8) = 14;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  os_log_type_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *os_log_type_t v11 = 2;
  *(void *)uint64_t v12 = "announcement";
  *((void *)v12 + 1) = 12;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 3;
  *(void *)uint64_t v14 = "notification";
  *((void *)v14 + 1) = 12;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  unint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 4;
  *(void *)unint64_t v16 = "visual";
  *((void *)v16 + 1) = 6;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 5;
  *(void *)uint64_t v18 = "unknownSource";
  *((void *)v18 + 1) = 13;
  v18[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoContextDataSource._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA800, (uint64_t)qword_269CDF518, a1);
}

uint64_t sub_253593384()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF530);
  sub_253462BD4(v0, (uint64_t)qword_269CDF530);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_253B36A60;
  unint64_t v4 = v64 + v3 + v1[14];
  *(void *)(v64 + v3) = 0;
  *(void *)unint64_t v4 = "APP_IN_FOCUS_BUNDLE_ID";
  *(void *)(v4 + 8) = 22;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = *MEMORY[0x263F50718];
  uint64_t v6 = sub_253B07510();
  uint64_t v7 = *(void (**)(void))(*(void *)(v6 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v7)(v4, v5, v6);
  unint64_t v8 = v64 + v3 + v2 + v1[14];
  *(void *)(v64 + v3 + v2) = 1;
  *(void *)unint64_t v8 = "BLUETOOTH_DEVICE_TYPE";
  *(void *)(v8 + 8) = 21;
  *(unsigned char *)(v8 + 16) = 2;
  v7();
  uint64_t v9 = (void *)(v64 + v3 + 2 * v2);
  unint64_t v10 = (char *)v9 + v1[14];
  void *v9 = 2;
  *(void *)unint64_t v10 = "CALENDAR_EVENTS";
  *((void *)v10 + 1) = 15;
  v10[16] = 2;
  v7();
  os_log_type_t v11 = (void *)(v64 + v3 + 3 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *os_log_type_t v11 = 3;
  *(void *)uint64_t v12 = "MOTION_STATE";
  *((void *)v12 + 1) = 12;
  v12[16] = 2;
  v7();
  uint64_t v13 = (void *)(v64 + v3 + 4 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 4;
  *(void *)uint64_t v14 = "NOW_PLAYING_PLAYBACK_STATE";
  *((void *)v14 + 1) = 26;
  v14[16] = 2;
  v7();
  uint64_t v15 = (void *)(v64 + v3 + 5 * v2);
  unint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)unint64_t v16 = "POINT_OF_INTEREST";
  *((void *)v16 + 1) = 17;
  v16[16] = 2;
  v7();
  uint64_t v17 = (void *)(v64 + v3 + 6 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)uint64_t v18 = "RECENT_TRANSCRIPT";
  *((void *)v18 + 1) = 17;
  v18[16] = 2;
  v7();
  uint64_t v19 = (void *)(v64 + v3 + 7 * v2);
  uint64_t v20 = (char *)v19 + v1[14];
  void *v19 = 7;
  *(void *)uint64_t v20 = "SEMANTIC_LOCATION";
  *((void *)v20 + 1) = 17;
  v20[16] = 2;
  v7();
  uint64_t v21 = (void *)(v64 + v3 + 8 * v2);
  unint64_t v22 = (char *)v21 + v1[14];
  *uint64_t v21 = 8;
  *(void *)unint64_t v22 = "ON_SCREEN_CONTENT_EMAIL_ADDRESS";
  *((void *)v22 + 1) = 31;
  v22[16] = 2;
  v7();
  uint64_t v23 = (void *)(v64 + v3 + 9 * v2);
  uint64_t v24 = (char *)v23 + v1[14];
  *uint64_t v23 = 9;
  *(void *)uint64_t v24 = "ON_SCREEN_CONTENT_PHONE_NUMBER";
  *((void *)v24 + 1) = 30;
  v24[16] = 2;
  v7();
  unint64_t v25 = (void *)(v64 + v3 + 10 * v2);
  uint64_t v26 = (char *)v25 + v1[14];
  void *v25 = 10;
  *(void *)uint64_t v26 = "ON_SCREEN_CONTENT_POSTAL_ADDRESS";
  *((void *)v26 + 1) = 32;
  v26[16] = 2;
  v7();
  uint64_t v27 = (void *)(v64 + v3 + 11 * v2);
  uint64_t v28 = (char *)v27 + v1[14];
  void *v27 = 11;
  *(void *)uint64_t v28 = "ON_SCREEN_CONTENT_URI_LINK";
  *((void *)v28 + 1) = 26;
  v28[16] = 2;
  v7();
  uint64_t v29 = (void *)(v64 + v3 + 12 * v2);
  uint64_t v30 = (char *)v29 + v1[14];
  *uint64_t v29 = 12;
  *(void *)uint64_t v30 = "ON_SCREEN_PERSON";
  *((void *)v30 + 1) = 16;
  v30[16] = 2;
  v7();
  uint64_t v31 = (void *)(v64 + v3 + 13 * v2);
  uint64_t v32 = (char *)v31 + v1[14];
  *uint64_t v31 = 13;
  *(void *)uint64_t v32 = "ON_SCREEN_HOME";
  *((void *)v32 + 1) = 14;
  v32[16] = 2;
  v7();
  unint64_t v33 = (void *)(v64 + v3 + 14 * v2);
  uint64_t v34 = (char *)v33 + v1[14];
  void *v33 = 14;
  *(void *)uint64_t v34 = "ON_SCREEN_NOTIFICATION";
  *((void *)v34 + 1) = 22;
  v34[16] = 2;
  v7();
  uint64_t v35 = (void *)(v64 + v3 + 15 * v2);
  uint64_t v36 = (char *)v35 + v1[14];
  *uint64_t v35 = 15;
  *(void *)uint64_t v36 = "ON_SCREEN_DATE_TIME";
  *((void *)v36 + 1) = 19;
  v36[16] = 2;
  v7();
  uint64_t v37 = (void *)(v64 + v3 + 16 * v2);
  uint64_t v38 = (char *)v37 + v1[14];
  *uint64_t v37 = 16;
  *(void *)uint64_t v38 = "CONVERSATIONAL_REMINDER";
  *((void *)v38 + 1) = 23;
  v38[16] = 2;
  v7();
  unint64_t v39 = (void *)(v64 + v3 + 17 * v2);
  uint64_t v40 = (char *)v39 + v1[14];
  *unint64_t v39 = 17;
  *(void *)uint64_t v40 = "CONVERSATIONAL_CALENDAR_EVENT";
  *((void *)v40 + 1) = 29;
  v40[16] = 2;
  v7();
  uint64_t v41 = (void *)(v64 + v3 + 18 * v2);
  BOOL v42 = (char *)v41 + v1[14];
  void *v41 = 18;
  *(void *)BOOL v42 = "CONVERSATIONAL_PEOPLE";
  *((void *)v42 + 1) = 21;
  v42[16] = 2;
  v7();
  int64_t v43 = (void *)(v64 + v3 + 19 * v2);
  uint64_t v44 = (char *)v43 + v1[14];
  *int64_t v43 = 19;
  *(void *)uint64_t v44 = "CONVERSATIONAL_PLACES";
  *((void *)v44 + 1) = 21;
  v44[16] = 2;
  v7();
  uint64_t v45 = (void *)(v64 + v3 + 20 * v2);
  uint64_t v46 = (char *)v45 + v1[14];
  *uint64_t v45 = 20;
  *(void *)uint64_t v46 = "CONVERSATIONAL_ALARM";
  *((void *)v46 + 1) = 20;
  v46[16] = 2;
  v7();
  uint64_t v47 = (void *)(v64 + v3 + 21 * v2);
  unint64_t v48 = (char *)v47 + v1[14];
  void *v47 = 21;
  *(void *)unint64_t v48 = "CONVERSATIONAL_TIMER";
  *((void *)v48 + 1) = 20;
  v48[16] = 2;
  v7();
  unint64_t v49 = (void *)(v64 + v3 + 22 * v2);
  uint64_t v50 = (char *)v49 + v1[14];
  void *v49 = 22;
  *(void *)uint64_t v50 = "NOW_PLAYING_MEDIA_ITEM";
  *((void *)v50 + 1) = 22;
  v50[16] = 2;
  v7();
  unint64_t v51 = (void *)(v64 + v3 + 23 * v2);
  unint64_t v52 = (char *)v51 + v1[14];
  *unint64_t v51 = 23;
  *(void *)unint64_t v52 = "ON_SCREEN_CONTENT_APP_ENTITY";
  *((void *)v52 + 1) = 28;
  v52[16] = 2;
  v7();
  uint64_t v53 = (void *)(v64 + v3 + 24 * v2);
  unint64_t v54 = (char *)v53 + v1[14];
  *uint64_t v53 = 24;
  *(void *)unint64_t v54 = "SIRI_REQUEST_CONTEXT";
  *((void *)v54 + 1) = 20;
  v54[16] = 2;
  v7();
  unint64_t v55 = (void *)(v64 + v3 + 25 * v2);
  uint64_t v56 = (char *)v55 + v1[14];
  void *v55 = 25;
  *(void *)uint64_t v56 = "CURRENT_LOCATION";
  *((void *)v56 + 1) = 16;
  v56[16] = 2;
  v7();
  uint64_t v57 = (void *)(v64 + v3 + 26 * v2);
  uint64_t v58 = (char *)v57 + v1[14];
  *uint64_t v57 = 26;
  *(void *)uint64_t v58 = "INTELLIGENCE_COMMAND";
  *((void *)v58 + 1) = 20;
  v58[16] = 2;
  v7();
  unint64_t v59 = (void *)(v64 + v3 + 27 * v2);
  uint64_t v60 = (char *)v59 + v1[14];
  *unint64_t v59 = 27;
  *(void *)uint64_t v60 = "HAS_FOCUSED_ON_SCREEN_DOCUMENT";
  *((void *)v60 + 1) = 30;
  v60[16] = 2;
  v7();
  uint64_t v61 = (void *)(v64 + v3 + 28 * v2);
  uint64_t v62 = (char *)v61 + v1[14];
  *uint64_t v61 = 28;
  *(void *)uint64_t v62 = "HAS_FOCUSED_ON_SCREEN_IMAGE";
  *((void *)v62 + 1) = 27;
  v62[16] = 2;
  v7();
  return sub_253B07520();
}

uint64_t static ContextProtoContextType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA808, (uint64_t)qword_269CDF530, a1);
}

uint64_t sub_253593BB8()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF548);
  sub_253462BD4(v0, (uint64_t)qword_269CDF548);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B36A70;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "Unknown";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "Unsure1";
  *(void *)(v10 + 8) = 7;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  os_log_type_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *os_log_type_t v11 = 2;
  *(void *)uint64_t v12 = "UnsureN";
  *((void *)v12 + 1) = 7;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 3;
  *(void *)uint64_t v14 = "Known";
  *((void *)v14 + 1) = 5;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  unint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 4;
  *(void *)unint64_t v16 = "Confident";
  *((void *)v16 + 1) = 9;
  v16[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoStructuredContextSiriRequestContextUserClassification._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA810, (uint64_t)qword_269CDF548, a1);
}

uint64_t sub_253593E58()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF560);
  sub_253462BD4(v0, (uint64_t)qword_269CDF560);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_253B36A80;
  unint64_t v4 = v30 + v3 + v1[14];
  *(void *)(v30 + v3) = 0;
  *(void *)unint64_t v4 = "DeviceIdiomUnknown";
  *(void *)(v4 + 8) = 18;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = *MEMORY[0x263F50718];
  uint64_t v6 = sub_253B07510();
  uint64_t v7 = *(void (**)(void))(*(void *)(v6 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v7)(v4, v5, v6);
  unint64_t v8 = v30 + v3 + v2 + v1[14];
  *(void *)(v30 + v3 + v2) = 1;
  *(void *)unint64_t v8 = "CarPlay";
  *(void *)(v8 + 8) = 7;
  *(unsigned char *)(v8 + 16) = 2;
  v7();
  uint64_t v9 = (void *)(v30 + v3 + 2 * v2);
  unint64_t v10 = (char *)v9 + v1[14];
  void *v9 = 2;
  *(void *)unint64_t v10 = "EyesFree";
  *((void *)v10 + 1) = 8;
  v10[16] = 2;
  v7();
  os_log_type_t v11 = (void *)(v30 + v3 + 3 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *os_log_type_t v11 = 3;
  *(void *)uint64_t v12 = "HomePod";
  *((void *)v12 + 1) = 7;
  v12[16] = 2;
  v7();
  uint64_t v13 = (void *)(v30 + v3 + 4 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 4;
  *(void *)uint64_t v14 = "Mac";
  *((void *)v14 + 1) = 3;
  v14[16] = 2;
  v7();
  uint64_t v15 = (void *)(v30 + v3 + 5 * v2);
  unint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)unint64_t v16 = "AirPods";
  *((void *)v16 + 1) = 7;
  v16[16] = 2;
  v7();
  uint64_t v17 = (void *)(v30 + v3 + 6 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)uint64_t v18 = "IPhone";
  *((void *)v18 + 1) = 6;
  v18[16] = 2;
  v7();
  uint64_t v19 = (void *)(v30 + v3 + 7 * v2);
  uint64_t v20 = (char *)v19 + v1[14];
  void *v19 = 7;
  *(void *)uint64_t v20 = "IPad";
  *((void *)v20 + 1) = 4;
  v20[16] = 2;
  v7();
  uint64_t v21 = (void *)(v30 + v3 + 8 * v2);
  unint64_t v22 = (char *)v21 + v1[14];
  *uint64_t v21 = 8;
  *(void *)unint64_t v22 = "Watch";
  *((void *)v22 + 1) = 5;
  v22[16] = 2;
  v7();
  uint64_t v23 = (void *)(v30 + v3 + 9 * v2);
  uint64_t v24 = (char *)v23 + v1[14];
  *uint64_t v23 = 9;
  *(void *)uint64_t v24 = "TV";
  *((void *)v24 + 1) = 2;
  v24[16] = 2;
  v7();
  unint64_t v25 = (void *)(v30 + v3 + 10 * v2);
  uint64_t v26 = (char *)v25 + v1[14];
  void *v25 = 10;
  *(void *)uint64_t v26 = "Vision";
  *((void *)v26 + 1) = 6;
  v26[16] = 2;
  v7();
  uint64_t v27 = (void *)(v30 + v3 + 11 * v2);
  uint64_t v28 = (char *)v27 + v1[14];
  void *v27 = 11;
  *(void *)uint64_t v28 = "ELEVEN";
  *((void *)v28 + 1) = 6;
  v28[16] = 2;
  v7();
  return sub_253B07520();
}

uint64_t static ContextProtoStructuredContextSiriRequestContextDeviceIdiom._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA818, (uint64_t)qword_269CDF560, a1);
}

uint64_t sub_25359428C()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF578);
  sub_253462BD4(v0, (uint64_t)qword_269CDF578);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B34E30;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 0;
  *(void *)unint64_t v6 = "LOW";
  *(void *)(v6 + 8) = 3;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)unint64_t v10 = "MEDIUM";
  *((void *)v10 + 1) = 6;
  v10[16] = 2;
  v9();
  os_log_type_t v11 = (void *)((char *)v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *os_log_type_t v11 = 2;
  *(void *)uint64_t v12 = "HIGH";
  *((void *)v12 + 1) = 4;
  v12[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoConfidenceBucket._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA820, (uint64_t)qword_269CDF578, a1);
}

uint64_t sub_2535944B4()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF590);
  sub_253462BD4(v0, (uint64_t)qword_269CDF590);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B36A50;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "spanMatching";
  *(void *)(v6 + 8) = 12;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "contextRetrieval";
  *(void *)(v10 + 8) = 16;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  os_log_type_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *os_log_type_t v11 = 2;
  *(void *)uint64_t v12 = "toolRetrieval";
  *((void *)v12 + 1) = 13;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 3;
  *(void *)uint64_t v14 = "toolContextRetrieval";
  *((void *)v14 + 1) = 20;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  unint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 4;
  *(void *)unint64_t v16 = "jointResolver";
  *((void *)v16 + 1) = 13;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 5;
  *(void *)uint64_t v18 = "screenContentRetrieval";
  *((void *)v18 + 1) = 22;
  v18[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoQueryDecorationCoreService._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA828, (uint64_t)qword_269CDF590, a1);
}

uint64_t sub_253594794()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF5A8);
  sub_253462BD4(v0, (uint64_t)qword_269CDF5A8);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B34E30;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 0;
  *(void *)unint64_t v6 = "unset";
  *(void *)(v6 + 8) = 5;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)unint64_t v10 = "prePlanner";
  *((void *)v10 + 1) = 10;
  v10[16] = 2;
  v9();
  os_log_type_t v11 = (void *)((char *)v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *os_log_type_t v11 = 2;
  *(void *)uint64_t v12 = "fullPlanner";
  *((void *)v12 + 1) = 11;
  v12[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoQueryDecorationCaller._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA830, (uint64_t)qword_269CDF5A8, a1);
}

uint64_t sub_2535949BC()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF5C0);
  sub_253462BD4(v0, (uint64_t)qword_269CDF5C0);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B34E30;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 0;
  *(void *)unint64_t v6 = "unknown";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)unint64_t v10 = "siriEntityMatcher";
  *((void *)v10 + 1) = 17;
  v10[16] = 2;
  v9();
  os_log_type_t v11 = (void *)((char *)v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *os_log_type_t v11 = 2;
  *(void *)uint64_t v12 = "globalEntityMatcher";
  *((void *)v12 + 1) = 19;
  v12[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoEntityMatcherType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA838, (uint64_t)qword_269CDF5C0, a1);
}

uint64_t sub_253594BE4()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF5D8);
  sub_253462BD4(v0, (uint64_t)qword_269CDF5D8);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B36A90;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "homeEntity";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "synonym";
  *(void *)(v10 + 8) = 7;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  os_log_type_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *os_log_type_t v11 = 2;
  *(void *)uint64_t v12 = "transliteration";
  *((void *)v12 + 1) = 15;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 3;
  *(void *)uint64_t v14 = "expandedEmoji";
  *((void *)v14 + 1) = 13;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  unint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 4;
  *(void *)unint64_t v16 = "contactRelationship";
  *((void *)v16 + 1) = 19;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 5;
  *(void *)uint64_t v18 = "contactHypocorism";
  *((void *)v18 + 1) = 17;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v2);
  uint64_t v20 = (char *)v19 + v1[14];
  void *v19 = 6;
  *(void *)uint64_t v20 = "contactHandle";
  *((void *)v20 + 1) = 13;
  v20[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoAliasTypesOptions._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA840, (uint64_t)qword_269CDF5D8, a1);
}

unint64_t static ContextProtoRetrievedContext.protoMessageName.getter()
{
  return sub_2535B3A28(24);
}

uint64_t sub_253594F18()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF5F0);
  sub_253462BD4(v0, (uint64_t)qword_269CDF5F0);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B36A90;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "value";
  *(void *)(v6 + 8) = 5;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "relevance";
  *(void *)(v10 + 8) = 9;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  os_log_type_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *os_log_type_t v11 = 3;
  *(void *)uint64_t v12 = "type";
  *((void *)v12 + 1) = 4;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 4;
  *(void *)uint64_t v14 = "metadata";
  *((void *)v14 + 1) = 8;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  unint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)unint64_t v16 = "typedValue";
  *((void *)v16 + 1) = 10;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)uint64_t v18 = "structuredContext";
  *((void *)v18 + 1) = 17;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v2);
  uint64_t v20 = (char *)v19 + v1[14];
  void *v19 = 7;
  *(void *)uint64_t v20 = "identifier";
  *((void *)v20 + 1) = 10;
  v20[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoRetrievedContext._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA848, (uint64_t)qword_269CDF5F0, a1);
}

uint64_t ContextProtoRetrievedContext.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_2535B39E4(a1, a2);
  while (1)
  {
    uint64_t result = sub_253B07230();
    if (v2 || (v4 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        sub_2535B46B0(result, v4, v5, v6, (void (*)(void))type metadata accessor for ContextProtoRetrievedContext);
        break;
      case 2:
        sub_2535B387C();
        sub_253595338();
        break;
      case 3:
        sub_2535B387C();
        sub_2535953E8();
        break;
      case 4:
        sub_2535B387C();
        sub_253595450();
        break;
      case 5:
        sub_2535B387C();
        sub_253595500();
        break;
      case 6:
        sub_2535B387C();
        sub_2535955B0();
        break;
      case 7:
        sub_2535B46D0();
        break;
      default:
        break;
    }
    sub_2534D9B10();
  }
}

uint64_t sub_253595338()
{
  return sub_253B07380();
}

uint64_t sub_2535953E8()
{
  return sub_253B07290();
}

uint64_t sub_253595450()
{
  return sub_253B07380();
}

uint64_t sub_253595500()
{
  return sub_253B07380();
}

uint64_t sub_2535955B0()
{
  return sub_253B07380();
}

void ContextProtoRetrievedContext.traverse<A>(visitor:)()
{
  sub_2535AE07C();
  if (!v1)
  {
    sub_2535B3950();
    sub_2535957C0(v2);
    if (*v0)
    {
      sub_2535B0D50();
      sub_2535B4038();
    }
    sub_2535B3950();
    sub_253595980(v3);
    sub_2535B3950();
    sub_253595B40(v4, v5, v6, v7);
    sub_2535B3950();
    sub_253595D34(v8);
    sub_253598098();
    type metadata accessor for ContextProtoRetrievedContext(0);
    sub_2535B3B48();
  }
}

uint64_t sub_2535957C0(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDF900);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ContextProtoConfidence(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ContextProtoRetrievedContext(0);
  sub_2535B37D8(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_269CDF900);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) == 1) {
    return sub_2534B2064((uint64_t)v4, &qword_269CDF900);
  }
  sub_2535B3724((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoConfidence);
  sub_2535B3644(&qword_269CDFC40, (void (*)(uint64_t))type metadata accessor for ContextProtoConfidence);
  sub_253B07500();
  return sub_2535B3780((uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoConfidence);
}

uint64_t sub_253595980(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDF8F0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ContextProtoContextMetadata(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ContextProtoRetrievedContext(0);
  sub_2535B37D8(a1 + *(int *)(v8 + 28), (uint64_t)v4, &qword_269CDF8F0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) == 1) {
    return sub_2534B2064((uint64_t)v4, &qword_269CDF8F0);
  }
  sub_2535B3724((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoContextMetadata);
  sub_2535B3644(&qword_269CDFBE8, (void (*)(uint64_t))type metadata accessor for ContextProtoContextMetadata);
  sub_253B07500();
  return sub_2535B3780((uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoContextMetadata);
}

uint64_t sub_253595B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = sub_253462A5C(&qword_269CDCBC8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253B08E50();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ContextProtoRetrievedContext(0);
  sub_2535B37D8(a1 + *(int *)(v12 + 32), (uint64_t)v7, &qword_269CDCBC8);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v8) == 1) {
    return sub_2534B2064((uint64_t)v7, &qword_269CDCBC8);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  sub_2535B3644(&qword_269CDFF38, MEMORY[0x263F802B0]);
  sub_253B07500();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_253595D34(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDF8E0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ContextProtoStructuredContext(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ContextProtoRetrievedContext(0);
  sub_2535B37D8(a1 + *(int *)(v8 + 36), (uint64_t)v4, &qword_269CDF8E0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) == 1) {
    return sub_2534B2064((uint64_t)v4, &qword_269CDF8E0);
  }
  sub_2535B3724((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoStructuredContext);
  sub_2535B3644(&qword_269CDFC58, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContext);
  sub_253B07500();
  return sub_2535B3780((uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoStructuredContext);
}

void static ContextProtoRetrievedContext.== infix(_:_:)()
{
  sub_2534B3258();
  v177 = v2;
  uint64_t v4 = v3;
  v144[1] = sub_253B07160();
  sub_253465998();
  uint64_t v145 = v5;
  MEMORY[0x270FA5388](v6);
  sub_2534659D8();
  uint64_t v146 = v7;
  sub_2534B324C();
  MEMORY[0x270FA5388](v8);
  sub_2534B35DC();
  uint64_t v148 = v9;
  uint64_t v10 = sub_253483660();
  uint64_t v152 = type metadata accessor for ContextProtoStructuredContext(v10);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v11);
  sub_25346CB04();
  uint64_t v147 = v12;
  uint64_t v150 = sub_253462A5C(&qword_269CDF8D8);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v13);
  sub_25346CB04();
  uint64_t v153 = v14;
  uint64_t v15 = sub_253462A5C(&qword_269CDF8E0);
  uint64_t v16 = sub_25346CB4C(v15);
  MEMORY[0x270FA5388](v16);
  sub_2534659D8();
  uint64_t v149 = v17;
  sub_2534B324C();
  MEMORY[0x270FA5388](v18);
  sub_2534B3318();
  uint64_t v151 = v19;
  sub_2534B324C();
  MEMORY[0x270FA5388](v20);
  v164 = (char *)v144 - v21;
  uint64_t v22 = sub_253483660();
  uint64_t v162 = type metadata accessor for ContextProtoContextMetadata(v22);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v23);
  sub_25346CB04();
  uint64_t v155 = v24;
  uint64_t v161 = sub_253462A5C(&qword_269CDF8E8);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v25);
  sub_25346CB04();
  uint64_t v163 = v26;
  uint64_t v27 = sub_253462A5C(&qword_269CDF8F0);
  uint64_t v28 = sub_25346CB4C(v27);
  MEMORY[0x270FA5388](v28);
  uint64_t v160 = (uint64_t)v144 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v30);
  sub_2534B3318();
  uint64_t v166 = v31;
  sub_2534B324C();
  MEMORY[0x270FA5388](v32);
  v169 = (char *)v144 - v33;
  uint64_t v173 = type metadata accessor for ContextProtoConfidence(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v34);
  sub_2534D9248(v35, v144[0]);
  uint64_t v170 = sub_253462A5C(&qword_269CDF8F8);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v36);
  sub_2534D8F84(v37, v144[0]);
  uint64_t v38 = sub_253462A5C(&qword_269CDF900);
  uint64_t v39 = sub_25346CB4C(v38);
  MEMORY[0x270FA5388](v39);
  uint64_t v167 = (uint64_t)v144 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v41);
  sub_2534B3318();
  uint64_t v171 = v42;
  sub_2534B324C();
  MEMORY[0x270FA5388](v43);
  uint64_t v172 = (uint64_t)v144 - v44;
  uint64_t v45 = sub_253B08E50();
  sub_253465998();
  uint64_t v47 = v46;
  MEMORY[0x270FA5388](v48);
  sub_2534D9280(v49, v144[0]);
  uint64_t v50 = sub_253462A5C((uint64_t *)&off_269CDCBD0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v51);
  sub_2534659D8();
  uint64_t v159 = v52;
  sub_2534B324C();
  MEMORY[0x270FA5388](v53);
  unint64_t v55 = (char *)v144 - v54;
  uint64_t v56 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v57 = sub_25346CB4C(v56);
  MEMORY[0x270FA5388](v57);
  sub_2534659D8();
  uint64_t v154 = v58;
  sub_2534B324C();
  MEMORY[0x270FA5388](v59);
  sub_2534B3318();
  uint64_t v158 = v60;
  sub_2534B324C();
  MEMORY[0x270FA5388](v61);
  sub_2534B3318();
  uint64_t v157 = v62;
  sub_2534B324C();
  MEMORY[0x270FA5388](v63);
  sub_253578D54();
  MEMORY[0x270FA5388](v64);
  sub_2535B45C8();
  MEMORY[0x270FA5388](v65);
  uint64_t v67 = (char *)v144 - v66;
  uint64_t v68 = type metadata accessor for ContextProtoRetrievedContext(0);
  uint64_t v69 = *(int *)(v68 + 20);
  v176 = v4;
  sub_2535B37D8((uint64_t)&v4[v69], (uint64_t)v67, &qword_269CDCBC8);
  v175 = (int *)v68;
  uint64_t v70 = *(int *)(v68 + 20);
  uint64_t v71 = v45;
  uint64_t v72 = sub_2535B3F98(v70);
  sub_2535B37D8(v72, v1, &qword_269CDCBC8);
  uint64_t v156 = v50;
  uint64_t v73 = (uint64_t)&v55[*(int *)(v50 + 48)];
  sub_2535B37D8((uint64_t)v67, (uint64_t)v55, &qword_269CDCBC8);
  sub_2535B37D8(v1, v73, &qword_269CDCBC8);
  sub_2534D8B48((uint64_t)v55, 1, v45);
  if (v74)
  {
    sub_2535B44C0();
    sub_2535B3F80();
    sub_2534D8B48(v73, 1, v45);
    if (v74)
    {
      v144[0] = v47;
      sub_2534B2064((uint64_t)v55, &qword_269CDCBC8);
      goto LABEL_11;
    }
LABEL_9:
    uint64_t v75 = (uint64_t *)&off_269CDCBD0;
    uint64_t v76 = (uint64_t)v55;
LABEL_52:
    sub_2534B2064(v76, v75);
    goto LABEL_53;
  }
  sub_2535B37D8((uint64_t)v55, v0, &qword_269CDCBC8);
  sub_2534D8B48(v73, 1, v45);
  if (v74)
  {
    sub_2535B44D8();
    sub_2534B2064((uint64_t)v67, &qword_269CDCBC8);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v0, v45);
    goto LABEL_9;
  }
  sub_2535B3CF0();
  v77();
  sub_2535B3644(&qword_269CDCBD8, MEMORY[0x263F802B0]);
  char v78 = sub_253B096B0();
  v144[0] = v47;
  uint64_t v79 = *(void (**)(void))(v47 + 8);
  sub_2535B3F70();
  v79();
  sub_2534B2064(v1, &qword_269CDCBC8);
  sub_2534B2064((uint64_t)v67, &qword_269CDCBC8);
  sub_2535B3F70();
  v79();
  sub_2534B2064((uint64_t)v55, &qword_269CDCBC8);
  if ((v78 & 1) == 0) {
    goto LABEL_53;
  }
LABEL_11:
  uint64_t v81 = v175;
  BOOL v80 = v176;
  uint64_t v82 = v172;
  sub_2535B37D8((uint64_t)&v176[v175[6]], v172, &qword_269CDF900);
  uint64_t v83 = sub_2535B3F98(v81[6]);
  uint64_t v84 = v171;
  sub_2535B37D8(v83, v171, &qword_269CDF900);
  uint64_t v85 = v174;
  uint64_t v86 = v174 + *(int *)(v170 + 48);
  sub_2535B37D8(v82, v174, &qword_269CDF900);
  sub_2535B37D8(v84, v86, &qword_269CDF900);
  uint64_t v87 = v173;
  sub_2534D8B48(v85, 1, v173);
  if (v74)
  {
    sub_2535B4424();
    uint64_t v88 = sub_25353CE60();
    sub_2534B2064(v88, v89);
    sub_2534D8B48(v86, 1, v87);
    uint64_t v90 = (uint64_t)v169;
    if (v74)
    {
      sub_2534B2064(v85, &qword_269CDF900);
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  uint64_t v91 = v167;
  sub_2535B37D8(v85, v167, &qword_269CDF900);
  sub_2534D8B48(v86, 1, v87);
  uint64_t v90 = (uint64_t)v169;
  if (v92)
  {
    sub_2535B4130();
    sub_2535B4520();
    sub_2535B3780(v91, (void (*)(void))type metadata accessor for ContextProtoConfidence);
LABEL_19:
    uint64_t v75 = &qword_269CDF8F8;
    uint64_t v76 = v85;
    goto LABEL_52;
  }
  sub_2535B3724(v86, v165, (void (*)(void))type metadata accessor for ContextProtoConfidence);
  sub_2534D9724();
  static ContextProtoConfidence.== infix(_:_:)();
  char v94 = v93;
  uint64_t v95 = sub_25353CE60();
  sub_2535B3780(v95, v96);
  sub_2534B2064(v84, &qword_269CDF900);
  sub_2534B2064(v82, &qword_269CDF900);
  uint64_t v81 = v175;
  BOOL v80 = v176;
  sub_2535B3780(v91, (void (*)(void))type metadata accessor for ContextProtoConfidence);
  sub_2534B2064(v85, &qword_269CDF900);
  if ((v94 & 1) == 0) {
    goto LABEL_53;
  }
LABEL_21:
  if (*v80 != *v177) {
    goto LABEL_53;
  }
  sub_2535B37D8((uint64_t)&v80[v81[7]], v90, &qword_269CDF8F0);
  uint64_t v97 = sub_2535B3F98(v81[7]);
  uint64_t v98 = v166;
  sub_2535B37D8(v97, v166, &qword_269CDF8F0);
  uint64_t v99 = v163;
  uint64_t v100 = v163 + *(int *)(v161 + 48);
  uint64_t v101 = sub_2534D9B10();
  sub_2535B37D8(v101, v102, &qword_269CDF8F0);
  sub_2535B436C(v98);
  uint64_t v103 = v162;
  sub_2534D8B48(v99, 1, v162);
  if (v74)
  {
    sub_2535B44D8();
    sub_2534B2064(v90, &qword_269CDF8F0);
    sub_2534D8B48(v100, 1, v103);
    uint64_t v104 = v164;
    if (v74)
    {
      sub_2534B2064(v99, &qword_269CDF8F0);
      goto LABEL_32;
    }
LABEL_30:
    uint64_t v75 = &qword_269CDF8E8;
LABEL_51:
    uint64_t v76 = v99;
    goto LABEL_52;
  }
  uint64_t v105 = v160;
  sub_2535B37D8(v99, v160, &qword_269CDF8F0);
  sub_2534D8B48(v100, 1, v103);
  uint64_t v104 = v164;
  if (v106)
  {
    sub_2534B2064(v166, &qword_269CDF8F0);
    sub_2534B2064(v90, &qword_269CDF8F0);
    sub_2535B3780(v105, (void (*)(void))type metadata accessor for ContextProtoContextMetadata);
    goto LABEL_30;
  }
  uint64_t v107 = v100;
  uint64_t v108 = v90;
  uint64_t v109 = v155;
  sub_2535B3724(v107, v155, (void (*)(void))type metadata accessor for ContextProtoContextMetadata);
  static ContextProtoContextMetadata.== infix(_:_:)();
  char v111 = v110;
  sub_2535B3780(v109, (void (*)(void))type metadata accessor for ContextProtoContextMetadata);
  sub_2534B2064(v166, &qword_269CDF8F0);
  sub_2534B2064(v108, &qword_269CDF8F0);
  sub_2535B3780(v105, (void (*)(void))type metadata accessor for ContextProtoContextMetadata);
  sub_2535B4424();
  if ((v111 & 1) == 0) {
    goto LABEL_53;
  }
LABEL_32:
  uint64_t v112 = v157;
  sub_2535B37D8((uint64_t)&v80[v81[8]], v157, &qword_269CDCBC8);
  uint64_t v113 = sub_2535B3F98(v81[8]);
  uint64_t v114 = v158;
  sub_2535B37D8(v113, v158, &qword_269CDCBC8);
  uint64_t v99 = v159;
  uint64_t v115 = v159 + *(int *)(v156 + 48);
  uint64_t v116 = sub_25353CE60();
  sub_2535B37D8(v116, v117, &qword_269CDCBC8);
  sub_2535B436C(v114);
  sub_2534D8B48(v99, 1, v71);
  if (v74)
  {
    sub_2535B43F4();
    sub_2534B2064(v112, &qword_269CDCBC8);
    sub_2534D8B48(v115, 1, v71);
    if (v74)
    {
      sub_2534B2064(v99, &qword_269CDCBC8);
      goto LABEL_42;
    }
    goto LABEL_40;
  }
  sub_2535B37D8(v99, v154, &qword_269CDCBC8);
  sub_2534D8B48(v115, 1, v71);
  if (v118)
  {
    sub_2535B4130();
    sub_2535B4520();
    sub_2535B3F64();
    v119();
LABEL_40:
    uint64_t v75 = (uint64_t *)&off_269CDCBD0;
    goto LABEL_51;
  }
  uint64_t v120 = v144[0];
  uint64_t v121 = v168;
  sub_2535B3CF0();
  v122();
  sub_2535B3644(&qword_269CDCBD8, MEMORY[0x263F802B0]);
  char v123 = sub_253B096B0();
  uint64_t v124 = *(void (**)(uint64_t, uint64_t))(v120 + 8);
  v124(v121, v71);
  sub_2534B2064(v158, &qword_269CDCBC8);
  sub_2534B2064(v112, &qword_269CDCBC8);
  uint64_t v125 = sub_2534D9B10();
  ((void (*)(uint64_t))v124)(v125);
  sub_2534B2064(v159, &qword_269CDCBC8);
  if ((v123 & 1) == 0) {
    goto LABEL_53;
  }
LABEL_42:
  v126 = (void (*)(void))&qword_269CDF8E0;
  sub_2535B4508((uint64_t)&v80[v81[9]]);
  uint64_t v127 = sub_2535B3F98(v81[9]);
  uint64_t v128 = (uint64_t)v104;
  uint64_t v129 = v151;
  sub_2535B4508(v127);
  uint64_t v99 = v153;
  uint64_t v130 = v153 + *(int *)(v150 + 48);
  uint64_t v131 = sub_25353CE60();
  sub_2535B37D8(v131, v132, &qword_269CDF8E0);
  sub_2535B3F2C(v129);
  uint64_t v133 = v152;
  sub_2534D8B48(v99, 1, v152);
  if (!v74)
  {
    uint64_t v134 = v149;
    sub_2535B37D8(v99, v149, &qword_269CDF8E0);
    sub_2534D8B48(v130, 1, v133);
    if (!v135)
    {
      uint64_t v136 = v134;
      v126 = (void (*)(void))type metadata accessor for ContextProtoStructuredContext;
      sub_2535B3724(v130, v147, (void (*)(void))type metadata accessor for ContextProtoStructuredContext);
      static ContextProtoStructuredContext.== infix(_:_:)();
      sub_2535B3D1C();
      sub_2535B44D8();
      sub_2535B43F4();
      sub_2535B3780(v136, (void (*)(void))type metadata accessor for ContextProtoStructuredContext);
      sub_2534B2064(v99, &qword_269CDF8E0);
      if ((v130 & 1) == 0) {
        goto LABEL_53;
      }
      goto LABEL_55;
    }
    sub_2535B44C0();
    sub_2535B4520();
    sub_2535B3780(v134, (void (*)(void))type metadata accessor for ContextProtoStructuredContext);
    goto LABEL_50;
  }
  sub_2535B44F0();
  sub_2534B2064(v128, &qword_269CDF8E0);
  sub_2534D8B48(v130, 1, v133);
  if (!v74)
  {
LABEL_50:
    uint64_t v75 = &qword_269CDF8D8;
    goto LABEL_51;
  }
  sub_2534B2064(v99, &qword_269CDF8E0);
LABEL_55:
  uint64_t v137 = v81[10];
  uint64_t v138 = *(void *)&v177[v137 + 8];
  if (*(void *)&v80[v137 + 8])
  {
    if (v138)
    {
      sub_2535B3D0C((uint64_t)&v80[v137]);
      BOOL v141 = v74 && v139 == v140;
      if (v141 || (sub_253B0A4C0() & 1) != 0) {
        goto LABEL_64;
      }
    }
  }
  else if (!v138)
  {
LABEL_64:
    uint64_t v142 = v145;
    sub_2535B42AC();
    sub_253535668();
    v126();
    sub_253535668();
    v126();
    sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
    sub_2534D973C();
    sub_253B096B0();
    v143 = *(void (**)(void))(v142 + 8);
    sub_25351C3E8();
    v143();
    sub_25351C3E8();
    v143();
  }
LABEL_53:
  sub_2535B4124();
  sub_253465A14();
}

uint64_t ContextProtoRetrievedContext.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoRetrievedContext);
}

unint64_t sub_253596E24()
{
  return 0xD000000000000018;
}

uint64_t (*sub_253596E50())()
{
  return nullsub_1;
}

uint64_t sub_253596E74(uint64_t a1, uint64_t a2)
{
  return ContextProtoRetrievedContext.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_253596E8C()
{
}

uint64_t sub_253596EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFF30, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedContext);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_253596F2C()
{
  sub_2535B3644(&qword_269CDF9E0, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedContext);
  return sub_253B073E0();
}

uint64_t sub_253596F9C()
{
  sub_2535B3644(&qword_269CDF9E0, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedContext);
  return sub_253B073F0();
}

unint64_t static ContextProtoContextMetadata.protoMessageName.getter()
{
  return sub_2535B3A28(23);
}

uint64_t sub_253597038()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF608);
  sub_253462BD4(v0, (uint64_t)qword_269CDF608);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_253B36A80;
  unint64_t v4 = v30 + v3 + v1[14];
  *(void *)(v30 + v3) = 1;
  *(void *)unint64_t v4 = "entity_id";
  *(void *)(v4 + 8) = 9;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = *MEMORY[0x263F50728];
  uint64_t v6 = sub_253B07510();
  uint64_t v7 = *(void (**)(void))(*(void *)(v6 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v7)(v4, v5, v6);
  unint64_t v8 = v30 + v3 + v2 + v1[14];
  *(void *)(v30 + v3 + v2) = 2;
  *(void *)unint64_t v8 = "app_bundle_id";
  *(void *)(v8 + 8) = 13;
  *(unsigned char *)(v8 + 16) = 2;
  v7();
  uint64_t v9 = (void *)(v30 + v3 + 2 * v2);
  uint64_t v10 = (char *)v9 + v1[14];
  void *v9 = 3;
  *(void *)uint64_t v10 = "saliency";
  *((void *)v10 + 1) = 8;
  v10[16] = 2;
  v7();
  uint64_t v11 = (void *)(v30 + v3 + 3 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 4;
  *(void *)uint64_t v12 = "on_screen_surrounding_text";
  *((void *)v12 + 1) = 26;
  v12[16] = 2;
  v7();
  uint64_t v13 = (void *)(v30 + v3 + 4 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 5;
  *(void *)uint64_t v14 = "on_screen_bounding_box";
  *((void *)v14 + 1) = 22;
  v14[16] = 2;
  v7();
  uint64_t v15 = (void *)(v30 + v3 + 5 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 6;
  *(void *)uint64_t v16 = "seq";
  *((void *)v16 + 1) = 3;
  v16[16] = 2;
  v7();
  uint64_t v17 = (void *)(v30 + v3 + 6 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 7;
  *(void *)uint64_t v18 = "group_id";
  *((void *)v18 + 1) = 8;
  v18[16] = 2;
  v7();
  uint64_t v19 = (void *)(v30 + v3 + 7 * v2);
  uint64_t v20 = (char *)v19 + v1[14];
  void *v19 = 8;
  *(void *)uint64_t v20 = "isSelected";
  *((void *)v20 + 1) = 10;
  v20[16] = 2;
  v7();
  uint64_t v21 = (void *)(v30 + v3 + 8 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *uint64_t v21 = 9;
  *(void *)uint64_t v22 = "isPrimary";
  *((void *)v22 + 1) = 9;
  v22[16] = 2;
  v7();
  uint64_t v23 = (void *)(v30 + v3 + 9 * v2);
  uint64_t v24 = (char *)v23 + v1[14];
  *uint64_t v23 = 10;
  *(void *)uint64_t v24 = "screenDimensions";
  *((void *)v24 + 1) = 16;
  v24[16] = 2;
  v7();
  uint64_t v25 = (void *)(v30 + v3 + 10 * v2);
  uint64_t v26 = (char *)v25 + v1[14];
  void *v25 = 11;
  *(void *)uint64_t v26 = "dataSource";
  *((void *)v26 + 1) = 10;
  v26[16] = 2;
  v7();
  uint64_t v27 = (void *)(v30 + v3 + 11 * v2);
  uint64_t v28 = (char *)v27 + v1[14];
  void *v27 = 12;
  *(void *)uint64_t v28 = "displayRepresentation";
  *((void *)v28 + 1) = 21;
  v28[16] = 2;
  v7();
  return sub_253B07520();
}

uint64_t static ContextProtoContextMetadata._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA850, (uint64_t)qword_269CDF608, a1);
}

void ContextProtoContextMetadata.decodeMessage<A>(decoder:)()
{
  sub_2535B4280();
  uint64_t v1 = sub_2535B3890();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
        case 2:
          sub_2535B3B84();
          break;
        case 3:
          sub_2535B387C();
          sub_253597630();
          break;
        case 4:
          sub_2535B387C();
          sub_2535A0E50();
          break;
        case 5:
          sub_2535B387C();
          sub_2535976E0();
          break;
        case 6:
          sub_2535B387C();
          sub_253597790();
          break;
        case 7:
          sub_2535B46D0();
          break;
        case 8:
          sub_2535B387C();
          sub_25359783C();
          break;
        case 9:
          sub_2535B387C();
          sub_2535978A0();
          break;
        case 10:
          sub_2535B387C();
          sub_253597904();
          break;
        case 11:
          sub_2535B387C();
          sub_2535979B4();
          break;
        case 12:
          sub_2535B387C();
          sub_253597A2C();
          break;
        default:
          break;
      }
      uint64_t v1 = sub_2535B3A9C();
    }
  }
  sub_2535B42DC();
}

uint64_t sub_253597630()
{
  return sub_253B07380();
}

uint64_t sub_2535976E0()
{
  return sub_253B07380();
}

uint64_t sub_253597790()
{
  return sub_253B07320();
}

uint64_t sub_2535977F4()
{
  uint64_t v0 = sub_2535B3FB8();
  v1(v0);
  return sub_2535B3B84();
}

uint64_t sub_25359783C()
{
  return sub_253B07260();
}

uint64_t sub_2535978A0()
{
  return sub_253B07260();
}

uint64_t sub_253597904()
{
  return sub_253B07380();
}

uint64_t sub_2535979B4()
{
  return sub_253B07280();
}

uint64_t sub_253597A2C()
{
  return sub_253B07380();
}

void ContextProtoContextMetadata.traverse<A>(visitor:)()
{
  sub_2535B45A0();
  sub_2535B3D98();
  if (!v0)
  {
    sub_2535B4330();
    sub_2535B3950();
    sub_253597CA0(v1);
    sub_2535B4594();
    if (v2)
    {
      type metadata accessor for ContextProtoSurroundingText(0);
      sub_2535B3644(&qword_269CDF910, (void (*)(uint64_t))type metadata accessor for ContextProtoSurroundingText);
      sub_2535B3AB4();
    }
    sub_2535B3950();
    sub_253597E60(v3);
    sub_2535B3950();
    sub_253598020(v4);
    sub_253598098();
    sub_2535B3950();
    sub_2535980FC(v5);
    sub_2535B3950();
    sub_253598174(v6);
    sub_2535B3950();
    sub_2535981EC(v7);
    sub_2535B3950();
    sub_2535983AC(v8);
    sub_2535B3950();
    sub_253598438(v9);
    type metadata accessor for ContextProtoContextMetadata(0);
    sub_2535B3B48();
  }
  sub_2535B4660();
}

uint64_t sub_253597CA0(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDF900);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ContextProtoConfidence(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ContextProtoContextMetadata(0);
  sub_2535B37D8(a1 + *(int *)(v8 + 28), (uint64_t)v4, &qword_269CDF900);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) == 1) {
    return sub_2534B2064((uint64_t)v4, &qword_269CDF900);
  }
  sub_2535B3724((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoConfidence);
  sub_2535B3644(&qword_269CDFC40, (void (*)(uint64_t))type metadata accessor for ContextProtoConfidence);
  sub_253B07500();
  return sub_2535B3780((uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoConfidence);
}

uint64_t sub_253597E60(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDCCC0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ContextProtoBoundingBox(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ContextProtoContextMetadata(0);
  sub_2535B37D8(a1 + *(int *)(v8 + 32), (uint64_t)v4, &qword_269CDCCC0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) == 1) {
    return sub_2534B2064((uint64_t)v4, &qword_269CDCCC0);
  }
  sub_2535B3724((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoBoundingBox);
  sub_2535B3644(&qword_269CDFC18, (void (*)(uint64_t))type metadata accessor for ContextProtoBoundingBox);
  sub_253B07500();
  return sub_2535B3780((uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoBoundingBox);
}

uint64_t sub_253598020(uint64_t a1)
{
  uint64_t result = type metadata accessor for ContextProtoContextMetadata(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 36) + 8) & 1) == 0) {
    return sub_253B074B0();
  }
  return result;
}

uint64_t sub_253598098()
{
  uint64_t v1 = sub_2535B3FB8();
  uint64_t result = v2(v1);
  if (*(void *)(v0 + *(int *)(result + 40) + 8)) {
    return sub_253B074C0();
  }
  return result;
}

uint64_t sub_2535980FC(uint64_t a1)
{
  uint64_t result = type metadata accessor for ContextProtoContextMetadata(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 44)) != 2) {
    return sub_253B07440();
  }
  return result;
}

uint64_t sub_253598174(uint64_t a1)
{
  uint64_t result = type metadata accessor for ContextProtoContextMetadata(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 48)) != 2) {
    return sub_253B07440();
  }
  return result;
}

uint64_t sub_2535981EC(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDCCC0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ContextProtoBoundingBox(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ContextProtoContextMetadata(0);
  sub_2535B37D8(a1 + *(int *)(v8 + 52), (uint64_t)v4, &qword_269CDCCC0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) == 1) {
    return sub_2534B2064((uint64_t)v4, &qword_269CDCCC0);
  }
  sub_2535B3724((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoBoundingBox);
  sub_2535B3644(&qword_269CDFC18, (void (*)(uint64_t))type metadata accessor for ContextProtoBoundingBox);
  sub_253B07500();
  return sub_2535B3780((uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoBoundingBox);
}

uint64_t sub_2535983AC(uint64_t a1)
{
  uint64_t result = type metadata accessor for ContextProtoContextMetadata(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 56)) != 6)
  {
    sub_2535B3830();
    return sub_253B07450();
  }
  return result;
}

uint64_t sub_253598438(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDF920);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ContextProtoContextMetadata(0);
  sub_2535B37D8(a1 + *(int *)(v8 + 60), (uint64_t)v4, &qword_269CDF920);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) == 1) {
    return sub_2534B2064((uint64_t)v4, &qword_269CDF920);
  }
  sub_2535B3724((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoContextualEntityDisplayRepresentation);
  sub_2535B3644(&qword_269CDFC00, (void (*)(uint64_t))type metadata accessor for ContextProtoContextualEntityDisplayRepresentation);
  sub_253B07500();
  return sub_2535B3780((uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoContextualEntityDisplayRepresentation);
}

void static ContextProtoContextMetadata.== infix(_:_:)()
{
  sub_2534B3258();
  uint64_t v3 = v2;
  uint64_t v4 = sub_253B07160();
  sub_253465998();
  uint64_t v154 = v5;
  MEMORY[0x270FA5388](v6);
  uint64_t v153 = (char *)&v146 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v8);
  sub_2534B35DC();
  uint64_t v152 = v9;
  uint64_t v10 = sub_253483660();
  uint64_t v157 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(v10);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v11);
  sub_25346CB04();
  uint64_t v151 = v12;
  uint64_t v156 = sub_253462A5C(&qword_269CDF918);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v13);
  sub_25346CB04();
  uint64_t v160 = v14;
  uint64_t v15 = sub_253462A5C(&qword_269CDF920);
  uint64_t v16 = sub_25346CB4C(v15);
  MEMORY[0x270FA5388](v16);
  sub_2534659D8();
  uint64_t v155 = v17;
  sub_2534B324C();
  MEMORY[0x270FA5388](v18);
  sub_2534B3318();
  uint64_t v158 = v19;
  sub_2534B324C();
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v29 = sub_2535B4220(v21, v22, v23, v24, v25, v26, v27, v28, (uint64_t)v146);
  uint64_t v170 = type metadata accessor for ContextProtoBoundingBox(v29);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v30);
  sub_25346CB04();
  uint64_t v164 = v31;
  uint64_t v169 = sub_253462A5C(&qword_269CDCCC8);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v32);
  sub_2534659D8();
  uint64_t v161 = v33;
  sub_2534B324C();
  MEMORY[0x270FA5388](v34);
  uint64_t v168 = (char *)&v146 - v35;
  uint64_t v36 = sub_253462A5C(&qword_269CDCCC0);
  uint64_t v37 = sub_25346CB4C(v36);
  uint64_t v38 = MEMORY[0x270FA5388](v37);
  uint64_t v40 = (char *)&v146 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  sub_2534B3318();
  uint64_t v162 = v41;
  sub_2534B324C();
  MEMORY[0x270FA5388](v42);
  sub_2534B3318();
  uint64_t v163 = v43;
  sub_2534B324C();
  MEMORY[0x270FA5388](v44);
  uint64_t v165 = (uint64_t)&v146 - v45;
  sub_2534B324C();
  MEMORY[0x270FA5388](v46);
  sub_2534B3318();
  uint64_t v166 = v47;
  sub_2534B324C();
  MEMORY[0x270FA5388](v48);
  sub_2534B35DC();
  uint64_t v167 = v49;
  uint64_t v50 = type metadata accessor for ContextProtoConfidence(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v51);
  sub_25347FAAC();
  uint64_t v52 = sub_253462A5C(&qword_269CDF8F8);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v53);
  sub_2534847E0();
  uint64_t v54 = sub_253462A5C(&qword_269CDF900);
  uint64_t v55 = sub_25346CB4C(v54);
  uint64_t v56 = MEMORY[0x270FA5388](v55);
  uint64_t v58 = (char *)&v146 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = MEMORY[0x270FA5388](v56);
  uint64_t v61 = (char *)&v146 - v60;
  MEMORY[0x270FA5388](v59);
  uint64_t v64 = (char *)&v146 - v63;
  uint64_t v65 = v62[2];
  uint64_t v66 = v3[2];
  if (!v65)
  {
    uint64_t v150 = v4;
    if (v66) {
      goto LABEL_93;
    }
LABEL_10:
    uint64_t v70 = v62[4];
    uint64_t v71 = v3[4];
    if (v70)
    {
      if (!v71) {
        goto LABEL_93;
      }
      if (v62[3] != v3[3] || v70 != v71)
      {
        uint64_t v73 = v62;
        char v74 = sub_253B0A4C0();
        uint64_t v62 = v73;
        if ((v74 & 1) == 0) {
          goto LABEL_93;
        }
      }
    }
    else if (v71)
    {
      goto LABEL_93;
    }
    uint64_t v146 = v40;
    uint64_t v75 = v62;
    uint64_t v76 = type metadata accessor for ContextProtoContextMetadata(0);
    uint64_t v77 = *(int *)(v76 + 28);
    uint64_t v148 = v75;
    sub_2535B37D8((uint64_t)v75 + v77, (uint64_t)v64, &qword_269CDF900);
    uint64_t v147 = (int *)v76;
    uint64_t v78 = *(int *)(v76 + 28);
    uint64_t v149 = v3;
    sub_2535B37D8((uint64_t)v3 + v78, (uint64_t)v61, &qword_269CDF900);
    uint64_t v79 = v0 + *(int *)(v52 + 48);
    sub_2535B37D8((uint64_t)v64, v0, &qword_269CDF900);
    sub_2535B436C((uint64_t)v61);
    sub_2534D8B48(v0, 1, v50);
    if (v67)
    {
      sub_2534B2064((uint64_t)v61, &qword_269CDF900);
      sub_2534B2064((uint64_t)v64, &qword_269CDF900);
      sub_2534D8B48(v79, 1, v50);
      if (v67)
      {
        sub_2534B2064(v0, &qword_269CDF900);
        goto LABEL_30;
      }
    }
    else
    {
      uint64_t v80 = sub_25353CE60();
      sub_2535B37D8(v80, v81, v82);
      sub_2534D8B48(v79, 1, v50);
      if (!v83)
      {
        sub_2535B3724(v79, v1, (void (*)(void))type metadata accessor for ContextProtoConfidence);
        static ContextProtoConfidence.== infix(_:_:)();
        char v87 = v86;
        sub_2535B3780(v1, (void (*)(void))type metadata accessor for ContextProtoConfidence);
        sub_2534B2064((uint64_t)v61, &qword_269CDF900);
        sub_2534B2064((uint64_t)v64, &qword_269CDF900);
        uint64_t v88 = sub_2534D973C();
        sub_2535B3780(v88, v89);
        sub_2534B2064(v0, &qword_269CDF900);
        if ((v87 & 1) == 0) {
          goto LABEL_93;
        }
LABEL_30:
        uint64_t v90 = v148;
        uint64_t v91 = v149;
        sub_2534BAD44();
        if ((v92 & 1) == 0) {
          goto LABEL_93;
        }
        char v93 = v147;
        sub_2535B37D8((uint64_t)v90 + v147[8], v167, &qword_269CDCCC0);
        uint64_t v94 = v166;
        sub_2535B4508((uint64_t)v91 + v93[8]);
        uint64_t v95 = (uint64_t)v168;
        uint64_t v96 = (uint64_t)&v168[*(int *)(v169 + 48)];
        uint64_t v97 = sub_2535B4148();
        sub_2535B37D8(v97, v98, &qword_269CDCCC0);
        sub_2535B3F2C(v94);
        uint64_t v99 = v170;
        sub_2534D8B48(v95, 1, v170);
        if (v67)
        {
          sub_2535B44F0();
          sub_2535B440C();
          sub_2534D8B48(v96, 1, v99);
          uint64_t v100 = (uint64_t)v146;
          if (v67)
          {
            sub_2534B2064(v95, &qword_269CDCCC0);
            goto LABEL_41;
          }
        }
        else
        {
          uint64_t v101 = v165;
          sub_2535B37D8(v95, v165, &qword_269CDCCC0);
          sub_2534D8B48(v96, 1, v99);
          uint64_t v100 = (uint64_t)v146;
          if (!v102)
          {
            sub_2535B3724(v96, v164, (void (*)(void))type metadata accessor for ContextProtoBoundingBox);
            static ContextProtoBoundingBox.== infix(_:_:)();
            sub_2535B3D1C();
            sub_2535B44D8();
            sub_2535B43F4();
            sub_2535B3780(v101, (void (*)(void))type metadata accessor for ContextProtoBoundingBox);
            sub_2534B2064(v95, &qword_269CDCCC0);
            if ((v96 & 1) == 0) {
              goto LABEL_93;
            }
LABEL_41:
            uint64_t v103 = v93[9];
            uint64_t v104 = v148;
            char v105 = *((unsigned char *)v148 + v103 + 8);
            char v106 = v149;
            int v107 = *((unsigned __int8 *)v149 + v103 + 8);
            if (v105)
            {
              if (!v107) {
                goto LABEL_93;
              }
            }
            else
            {
              sub_2535B4704();
              if (v108) {
                goto LABEL_93;
              }
            }
            uint64_t v109 = v93[10];
            uint64_t v110 = *(void *)((char *)v106 + v109 + 8);
            if (*(void *)((char *)v104 + v109 + 8))
            {
              if (!v110) {
                goto LABEL_93;
              }
              sub_2535B3D0C((uint64_t)v104 + v109);
              if (!v67 || v111 != v112)
              {
                char v114 = sub_253B0A4C0();
                uint64_t v104 = v148;
                char v106 = v149;
                if ((v114 & 1) == 0) {
                  goto LABEL_93;
                }
              }
            }
            else if (v110)
            {
              goto LABEL_93;
            }
            uint64_t v115 = v93[11];
            int v116 = *((unsigned __int8 *)v104 + v115);
            int v117 = *((unsigned __int8 *)v106 + v115);
            if (v116 == 2)
            {
              uint64_t v118 = v170;
              uint64_t v120 = v162;
              uint64_t v119 = v163;
              if (v117 != 2) {
                goto LABEL_93;
              }
            }
            else
            {
              uint64_t v118 = v170;
              uint64_t v120 = v162;
              uint64_t v119 = v163;
              if (v117 == 2) {
                goto LABEL_93;
              }
              sub_2535B3AD0();
              if ((v121 & 1) == 0) {
                goto LABEL_93;
              }
            }
            uint64_t v122 = v93[12];
            int v123 = *((unsigned __int8 *)v104 + v122);
            int v124 = *((unsigned __int8 *)v106 + v122);
            if (v123 == 2)
            {
              if (v124 != 2) {
                goto LABEL_93;
              }
            }
            else
            {
              if (v124 == 2) {
                goto LABEL_93;
              }
              sub_2535B3AD0();
              if ((v125 & 1) == 0) {
                goto LABEL_93;
              }
            }
            v126 = v106;
            sub_2535B37D8((uint64_t)v104 + v93[13], v119, &qword_269CDCCC0);
            sub_2535B37D8((uint64_t)v126 + v93[13], v120, &qword_269CDCCC0);
            uint64_t v127 = v161;
            uint64_t v128 = v161 + *(int *)(v169 + 48);
            sub_2535B4054(v119);
            sub_2535B3F2C(v120);
            sub_2534D8B48(v127, 1, v118);
            if (v67)
            {
              sub_2535B440C();
              sub_2534B2064(v119, &qword_269CDCCC0);
              sub_2534D8B48(v128, 1, v118);
              if (v67)
              {
                sub_2534B2064(v161, &qword_269CDCCC0);
LABEL_74:
                uint64_t v130 = v93[14];
                int v131 = *((unsigned __int8 *)v148 + v130);
                int v132 = *((unsigned __int8 *)v149 + v130);
                if (v131 == 6)
                {
                  if (v132 != 6) {
                    goto LABEL_93;
                  }
                }
                else if (v132 == 6 || v131 != v132)
                {
                  goto LABEL_93;
                }
                uint64_t v134 = (void (*)(void))&qword_269CDF920;
                uint64_t v135 = v159;
                sub_2535B37D8((uint64_t)v148 + v93[15], v159, &qword_269CDF920);
                uint64_t v136 = (uint64_t)v149 + v93[15];
                uint64_t v137 = v158;
                sub_2535B37D8(v136, v158, &qword_269CDF920);
                uint64_t v138 = v160;
                uint64_t v139 = v160 + *(int *)(v156 + 48);
                sub_2535B4054(v135);
                sub_2535B3F2C(v137);
                uint64_t v140 = v138;
                uint64_t v141 = v157;
                sub_2534D8B48(v140, 1, v157);
                if (v67)
                {
                  sub_2534B2064(v158, &qword_269CDF920);
                  sub_2534B2064(v159, &qword_269CDF920);
                  sub_2534D8B48(v139, 1, v141);
                  if (v67)
                  {
                    sub_2534B2064(v160, &qword_269CDF920);
                    goto LABEL_92;
                  }
                }
                else
                {
                  sub_2535B37D8(v160, v155, &qword_269CDF920);
                  sub_2534D8B48(v139, 1, v141);
                  if (!v142)
                  {
                    uint64_t v134 = (void (*)(void))type metadata accessor for ContextProtoContextualEntityDisplayRepresentation;
                    sub_2535B3724(v139, v151, (void (*)(void))type metadata accessor for ContextProtoContextualEntityDisplayRepresentation);
                    uint64_t v143 = v155;
                    sub_2534D973C();
                    static ContextProtoContextualEntityDisplayRepresentation.== infix(_:_:)();
                    sub_2535B3D1C();
                    sub_2534B2064(v158, &qword_269CDF920);
                    sub_2534B2064(v159, &qword_269CDF920);
                    sub_2535B3780(v143, (void (*)(void))type metadata accessor for ContextProtoContextualEntityDisplayRepresentation);
                    sub_2534B2064(v160, &qword_269CDF920);
                    if ((v139 & 1) == 0) {
                      goto LABEL_93;
                    }
LABEL_92:
                    uint64_t v144 = v154;
                    sub_2535B42AC();
                    sub_253535668();
                    v134();
                    sub_253535668();
                    v134();
                    sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
                    sub_253B096B0();
                    uint64_t v145 = *(void (**)(void))(v144 + 8);
                    sub_25353CE60();
                    sub_25351C3E8();
                    v145();
                    sub_2535B4148();
                    sub_25351C3E8();
                    v145();
                    goto LABEL_93;
                  }
                  sub_2534B2064(v158, &qword_269CDF920);
                  sub_2534B2064(v159, &qword_269CDF920);
                  sub_2535B3780(v155, (void (*)(void))type metadata accessor for ContextProtoContextualEntityDisplayRepresentation);
                }
                uint64_t v84 = &qword_269CDF918;
                uint64_t v85 = v160;
LABEL_28:
                sub_2534B2064(v85, v84);
                goto LABEL_93;
              }
            }
            else
            {
              sub_2535B37D8(v127, v100, &qword_269CDCCC0);
              sub_2534D8B48(v128, 1, v118);
              if (!v129)
              {
                sub_2535B3724(v128, v164, (void (*)(void))type metadata accessor for ContextProtoBoundingBox);
                static ContextProtoBoundingBox.== infix(_:_:)();
                sub_2535B3D1C();
                sub_2535B43F4();
                sub_2534B2064(v119, &qword_269CDCCC0);
                sub_2535B3780(v100, (void (*)(void))type metadata accessor for ContextProtoBoundingBox);
                sub_2534B2064(v161, &qword_269CDCCC0);
                if ((v128 & 1) == 0) {
                  goto LABEL_93;
                }
                goto LABEL_74;
              }
              sub_2535B4130();
              sub_2535B4294();
              sub_2535B3780(v100, (void (*)(void))type metadata accessor for ContextProtoBoundingBox);
            }
            uint64_t v84 = &qword_269CDCCC8;
            uint64_t v85 = v161;
            goto LABEL_28;
          }
          sub_2535B44C0();
          sub_2535B4130();
          sub_2535B3780(v101, (void (*)(void))type metadata accessor for ContextProtoBoundingBox);
        }
        uint64_t v84 = &qword_269CDCCC8;
        uint64_t v85 = v95;
        goto LABEL_28;
      }
      sub_2534B2064((uint64_t)v61, &qword_269CDF900);
      sub_2534B2064((uint64_t)v64, &qword_269CDF900);
      sub_2535B3780((uint64_t)v58, (void (*)(void))type metadata accessor for ContextProtoConfidence);
    }
    uint64_t v84 = &qword_269CDF8F8;
    uint64_t v85 = v0;
    goto LABEL_28;
  }
  if (v66)
  {
    uint64_t v150 = v4;
    BOOL v67 = v62[1] == v3[1] && v65 == v66;
    if (v67) {
      goto LABEL_10;
    }
    uint64_t v68 = v62;
    char v69 = sub_253B0A4C0();
    uint64_t v62 = v68;
    if (v69) {
      goto LABEL_10;
    }
  }
LABEL_93:
  sub_253465A14();
}

uint64_t ContextProtoContextMetadata.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoContextMetadata);
}

uint64_t sub_253599338(void (*a1)(void))
{
  sub_253B0A5F0();
  a1(0);
  uint64_t v2 = (unint64_t *)sub_2534D973C();
  sub_2535B3644(v2, v3);
  sub_253B095D0();
  return sub_253B0A630();
}

unint64_t sub_2535993C0()
{
  return 0xD000000000000017;
}

uint64_t (*sub_2535993E8())()
{
  return nullsub_1;
}

void sub_25359940C()
{
}

void sub_253599424()
{
}

uint64_t sub_25359943C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFF28, (void (*)(uint64_t))type metadata accessor for ContextProtoContextMetadata);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535994BC()
{
  sub_2535B3644(&qword_269CDFBE8, (void (*)(uint64_t))type metadata accessor for ContextProtoContextMetadata);
  return sub_253B073E0();
}

uint64_t sub_25359952C()
{
  sub_2535B3644(&qword_269CDFBE8, (void (*)(uint64_t))type metadata accessor for ContextProtoContextMetadata);
  return sub_253B073F0();
}

unint64_t static ContextProtoContextualEntityDisplayRepresentation.protoMessageName.getter()
{
  return sub_2535B3A28(45);
}

uint64_t sub_2535995C4(uint64_t a1)
{
  return sub_2535AC464(a1, qword_269CDF620, (uint64_t)"title", (uint64_t)"subtitle", 8);
}

uint64_t static ContextProtoContextualEntityDisplayRepresentation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA858, (uint64_t)qword_269CDF620, a1);
}

uint64_t ContextProtoContextualEntityDisplayRepresentation.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_2535B3890();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2 || result == 1) {
        sub_2535B3B84();
      }
      uint64_t result = sub_2535B3A9C();
    }
  }
  return result;
}

uint64_t ContextProtoContextualEntityDisplayRepresentation.traverse<A>(visitor:)()
{
  uint64_t result = sub_2535B3E84();
  if (!v0)
  {
    uint64_t v2 = sub_2535B3DCC();
    sub_2535AA480(v2);
    type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
    return sub_2535B3C40();
  }
  return result;
}

void static ContextProtoContextualEntityDisplayRepresentation.== infix(_:_:)()
{
  sub_2535B3C98();
  uint64_t v4 = sub_2535B3980();
  sub_253465998();
  MEMORY[0x270FA5388](v5);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v6);
  sub_2535B3D54();
  if (!v8)
  {
    if (v7) {
      goto LABEL_21;
    }
LABEL_10:
    uint64_t v12 = *(void *)(v1 + 24);
    if (*(void *)(v2 + 24))
    {
      if (!v12) {
        goto LABEL_21;
      }
      sub_2535B4270();
      BOOL v15 = v11 && v13 == v14;
      if (!v15 && (sub_253B0A4C0() & 1) == 0) {
        goto LABEL_21;
      }
    }
    else if (v12)
    {
      goto LABEL_21;
    }
    type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
    uint64_t v16 = sub_2535B38B8();
    ((void (*)(uint64_t))v3)(v16);
    sub_2535B3914();
    v3();
    sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
    sub_2535B3960();
    uint64_t v17 = sub_2535B3924();
    ((void (*)(uint64_t))v1)(v17);
    ((void (*)(uint64_t, uint64_t))v1)(v0, v4);
    goto LABEL_21;
  }
  if (v7)
  {
    sub_2535B3FE8();
    BOOL v11 = v11 && v9 == v10;
    if (v11 || (sub_253B0A4C0() & 1) != 0) {
      goto LABEL_10;
    }
  }
LABEL_21:
  sub_2535B3D00();
  sub_25346CD04();
}

uint64_t ContextProtoContextualEntityDisplayRepresentation.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoContextualEntityDisplayRepresentation);
}

unint64_t sub_25359988C()
{
  return 0xD00000000000002DLL;
}

uint64_t (*sub_2535998B4())()
{
  return nullsub_1;
}

uint64_t sub_2535998D8()
{
  return ContextProtoContextualEntityDisplayRepresentation.decodeMessage<A>(decoder:)();
}

uint64_t sub_2535998F0()
{
  return ContextProtoContextualEntityDisplayRepresentation.traverse<A>(visitor:)();
}

uint64_t sub_253599908(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFF20, (void (*)(uint64_t))type metadata accessor for ContextProtoContextualEntityDisplayRepresentation);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_253599988()
{
  sub_2535B3644(&qword_269CDFC00, (void (*)(uint64_t))type metadata accessor for ContextProtoContextualEntityDisplayRepresentation);
  return sub_253B073E0();
}

uint64_t sub_2535999F8()
{
  sub_2535B3644(&qword_269CDFC00, (void (*)(uint64_t))type metadata accessor for ContextProtoContextualEntityDisplayRepresentation);
  return sub_253B073F0();
}

unint64_t static ContextProtoBoundingBox.protoMessageName.getter()
{
  return sub_2535B3A28(19);
}

uint64_t sub_253599A90()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF638);
  sub_253462BD4(v0, (uint64_t)qword_269CDF638);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B34E60;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "x_coordinate";
  *(void *)(v6 + 8) = 12;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "y_coordinate";
  *(void *)(v10 + 8) = 12;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  BOOL v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *BOOL v11 = 3;
  *(void *)uint64_t v12 = "width";
  *((void *)v12 + 1) = 5;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 4;
  *(void *)uint64_t v14 = "height";
  *((void *)v14 + 1) = 6;
  v14[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoBoundingBox._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA860, (uint64_t)qword_269CDF638, a1);
}

void ContextProtoBoundingBox.decodeMessage<A>(decoder:)()
{
  sub_2535B4280();
  uint64_t v1 = sub_2535B3890();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
        case 2:
        case 3:
        case 4:
          sub_2535B443C();
          sub_253B072B0();
          break;
        default:
          break;
      }
      uint64_t v1 = sub_2535B3A9C();
    }
  }
  sub_2535B42DC();
}

uint64_t ContextProtoBoundingBox.traverse<A>(visitor:)()
{
  uint64_t v1 = sub_2535B3ED8();
  uint64_t result = sub_253599E2C(v1);
  if (!v0)
  {
    uint64_t v3 = sub_2535B39B0();
    sub_253599E68(v3);
    uint64_t v4 = sub_2535B39B0();
    sub_253599EA4(v4);
    uint64_t v5 = sub_2535B39B0();
    sub_253599EE0(v5);
    type metadata accessor for ContextProtoBoundingBox(0);
    return sub_2535B3BCC();
  }
  return result;
}

uint64_t sub_253599E2C(uint64_t result)
{
  if ((*(unsigned char *)(result + 4) & 1) == 0) {
    return sub_253B07470();
  }
  return result;
}

uint64_t sub_253599E68(uint64_t result)
{
  if ((*(unsigned char *)(result + 12) & 1) == 0) {
    return sub_253B07470();
  }
  return result;
}

uint64_t sub_253599EA4(uint64_t result)
{
  if ((*(unsigned char *)(result + 20) & 1) == 0) {
    return sub_253B07470();
  }
  return result;
}

uint64_t sub_253599EE0(uint64_t result)
{
  if ((*(unsigned char *)(result + 28) & 1) == 0) {
    return sub_253B07470();
  }
  return result;
}

void static ContextProtoBoundingBox.== infix(_:_:)()
{
  sub_2535B3C98();
  sub_2535B3980();
  sub_253465998();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v6);
  sub_2535B4208();
  if (v8)
  {
    if (!v7) {
      goto LABEL_15;
    }
  }
  else
  {
    sub_2535B4588();
    if (v9) {
      goto LABEL_15;
    }
  }
  if (v1[12])
  {
    if (!v0[12]) {
      goto LABEL_15;
    }
  }
  else
  {
    sub_2535B4588();
    if (v10) {
      goto LABEL_15;
    }
  }
  if (v1[20])
  {
    if (!v0[20]) {
      goto LABEL_15;
    }
LABEL_13:
    if (v1[28])
    {
      if (!v0[28]) {
        goto LABEL_15;
      }
    }
    else
    {
      sub_2535B4588();
      if (v12) {
        goto LABEL_15;
      }
    }
    type metadata accessor for ContextProtoBoundingBox(0);
    uint64_t v13 = sub_2535B38B8();
    ((void (*)(uint64_t))v2)(v13);
    sub_2535B3914();
    v2();
    sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
    sub_2535B3960();
    uint64_t v14 = *(void (**)(void))(v4 + 8);
    sub_2535B3940();
    v14();
    sub_2535B3940();
    v14();
    goto LABEL_15;
  }
  sub_2535B4588();
  if ((v11 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_15:
  sub_25346CD04();
}

uint64_t ContextProtoBoundingBox.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoBoundingBox);
}

unint64_t sub_25359A0FC()
{
  return 0xD000000000000013;
}

uint64_t (*sub_25359A124())()
{
  return nullsub_1;
}

void sub_25359A148()
{
}

uint64_t sub_25359A160()
{
  return ContextProtoBoundingBox.traverse<A>(visitor:)();
}

uint64_t sub_25359A178(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFF18, (void (*)(uint64_t))type metadata accessor for ContextProtoBoundingBox);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_25359A1F8()
{
  sub_2535B3644(&qword_269CDFC18, (void (*)(uint64_t))type metadata accessor for ContextProtoBoundingBox);
  return sub_253B073E0();
}

uint64_t sub_25359A268()
{
  sub_2535B3644(&qword_269CDFC18, (void (*)(uint64_t))type metadata accessor for ContextProtoBoundingBox);
  return sub_253B073F0();
}

unint64_t static ContextProtoSurroundingText.protoMessageName.getter()
{
  return sub_2535B3A28(23);
}

uint64_t sub_25359A300()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF650);
  sub_253462BD4(v0, (uint64_t)qword_269CDF650);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B22690;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "text";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  char v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  char v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)char v10 = "on_screen_bounding_box";
  *((void *)v10 + 1) = 22;
  v10[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoSurroundingText._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA868, (uint64_t)qword_269CDF650, a1);
}

uint64_t ContextProtoSurroundingText.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_2535B39E4(a1, a2);
  while (1)
  {
    uint64_t result = sub_253B07230();
    if (v2 || (v4 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      sub_2535B387C();
      sub_25359A54C();
    }
    else if (result == 1)
    {
      sub_2535B3B84();
    }
    sub_2534D9B10();
  }
  return result;
}

uint64_t sub_25359A54C()
{
  return sub_253B07380();
}

uint64_t ContextProtoSurroundingText.traverse<A>(visitor:)()
{
  uint64_t result = sub_2535B3E84();
  if (!v0)
  {
    uint64_t v2 = sub_2535B3DCC();
    sub_25359A65C(v2);
    type metadata accessor for ContextProtoSurroundingText(0);
    return sub_2535B3C40();
  }
  return result;
}

uint64_t sub_25359A65C(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDCCC0);
  MEMORY[0x270FA5388](v2 - 8);
  char v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ContextProtoBoundingBox(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ContextProtoSurroundingText(0);
  sub_2535B37D8(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_269CDCCC0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) == 1) {
    return sub_2534B2064((uint64_t)v4, &qword_269CDCCC0);
  }
  sub_2535B3724((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoBoundingBox);
  sub_2535B3644(&qword_269CDFC18, (void (*)(uint64_t))type metadata accessor for ContextProtoBoundingBox);
  sub_253B07500();
  return sub_2535B3780((uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoBoundingBox);
}

void static ContextProtoSurroundingText.== infix(_:_:)()
{
  sub_2534B3258();
  uint64_t v7 = sub_2535B3980();
  sub_253465998();
  uint64_t v41 = v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v40 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v11);
  uint64_t v39 = (char *)v37 - v12;
  uint64_t v13 = type metadata accessor for ContextProtoBoundingBox(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v14);
  sub_2534966B0();
  uint64_t v15 = sub_253462A5C(&qword_269CDCCC8);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v16);
  sub_2534847E0();
  uint64_t v17 = sub_253462A5C(&qword_269CDCCC0);
  uint64_t v18 = sub_25346CB4C(v17);
  MEMORY[0x270FA5388](v18);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v19);
  sub_25351C9B0();
  MEMORY[0x270FA5388](v20);
  sub_2535B3D6C();
  uint64_t v21 = *(void *)(v1 + 8);
  if (!*(void *)(v2 + 8))
  {
    uint64_t v38 = v7;
    if (v21) {
      goto LABEL_21;
    }
LABEL_10:
    uint64_t v25 = type metadata accessor for ContextProtoSurroundingText(0);
    uint64_t v26 = v2;
    uint64_t v27 = v1;
    uint64_t v28 = v25;
    uint64_t v29 = *(int *)(v25 + 20);
    v37[0] = v26;
    sub_2535B37D8(v26 + v29, v6, &qword_269CDCCC0);
    v37[1] = v28;
    sub_2535B37D8(v27 + *(int *)(v28 + 20), v0, &qword_269CDCCC0);
    uint64_t v30 = v3 + *(int *)(v15 + 48);
    sub_2535B37D8(v6, v3, &qword_269CDCCC0);
    sub_2535B37D8(v0, v30, &qword_269CDCCC0);
    uint64_t v31 = sub_2534D8B48(v3, 1, v13);
    if (v24)
    {
      sub_2535B43DC();
      sub_2535B3B9C();
      sub_2534D8B48(v30, 1, v13);
      if (v24)
      {
        sub_2534B2064(v3, &qword_269CDCCC0);
        goto LABEL_20;
      }
    }
    else
    {
      sub_2535B410C(v31, v32, &qword_269CDCCC0);
      sub_2534D8B48(v30, 1, v13);
      if (!v33)
      {
        sub_2535B3724(v30, v4, (void (*)(void))type metadata accessor for ContextProtoBoundingBox);
        sub_253578AC4();
        static ContextProtoBoundingBox.== infix(_:_:)();
        uint64_t v30 = v34;
        sub_2535B3780(v4, (void (*)(void))type metadata accessor for ContextProtoBoundingBox);
        sub_2534B2064(v0, &qword_269CDCCC0);
        sub_2535B4460();
        sub_2535B44A8();
        sub_2535B4538();
        if ((v30 & 1) == 0) {
          goto LABEL_21;
        }
LABEL_20:
        uint64_t v35 = v41;
        sub_2535B42AC();
        sub_2535B3A00();
        ((void (*)(void))v30)();
        sub_2535B3A00();
        ((void (*)(void))v30)();
        sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
        sub_2535B42B8();
        uint64_t v36 = *(void (**)(void))(v35 + 8);
        sub_253592354();
        v36();
        sub_253592354();
        v36();
        goto LABEL_21;
      }
      sub_2535B43DC();
      sub_2535B3B9C();
      sub_2535B3780(v5, (void (*)(void))type metadata accessor for ContextProtoBoundingBox);
    }
    sub_2534B2064(v3, &qword_269CDCCC8);
    goto LABEL_21;
  }
  if (v21)
  {
    uint64_t v38 = v7;
    sub_2535B3FE8();
    BOOL v24 = v24 && v22 == v23;
    if (v24 || (sub_253B0A4C0() & 1) != 0) {
      goto LABEL_10;
    }
  }
LABEL_21:
  sub_2535B4124();
  sub_253465A14();
}

uint64_t ContextProtoSurroundingText.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoSurroundingText);
}

unint64_t sub_25359AC20()
{
  return 0xD000000000000017;
}

uint64_t sub_25359AC48(uint64_t a1, uint64_t a2)
{
  return ContextProtoSurroundingText.decodeMessage<A>(decoder:)(a1, a2);
}

uint64_t sub_25359AC60()
{
  return ContextProtoSurroundingText.traverse<A>(visitor:)();
}

uint64_t sub_25359AC78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFF10, (void (*)(uint64_t))type metadata accessor for ContextProtoSurroundingText);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_25359ACF8()
{
  sub_2535B3644(&qword_269CDF910, (void (*)(uint64_t))type metadata accessor for ContextProtoSurroundingText);
  return sub_253B073E0();
}

uint64_t sub_25359AD68()
{
  sub_2535B3644(&qword_269CDF910, (void (*)(uint64_t))type metadata accessor for ContextProtoSurroundingText);
  return sub_253B073F0();
}

unint64_t static ContextProtoConfidence.protoMessageName.getter()
{
  return sub_2535B3A28(18);
}

uint64_t sub_25359AE00(uint64_t a1)
{
  return sub_2535AC464(a1, qword_269CDF668, (uint64_t)"score", (uint64_t)"bucket", 6);
}

uint64_t static ContextProtoConfidence._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA870, (uint64_t)qword_269CDF668, a1);
}

uint64_t ContextProtoConfidence.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_2535B39E4(a1, a2);
  while (1)
  {
    uint64_t result = sub_253B07230();
    if (v2 || (v4 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      sub_2535B387C();
      sub_25359AEAC();
    }
    else if (result == 1)
    {
      sub_2535B4170();
    }
    sub_2534D9B10();
  }
  return result;
}

uint64_t sub_25359AEAC()
{
  return sub_253B07290();
}

uint64_t ContextProtoConfidence.traverse<A>(visitor:)()
{
  uint64_t v2 = v1;
  if (*(float *)v0 == 0.0 || (result = sub_2535B462C(), (uint64_t v2 = v1) == 0))
  {
    if (!*(unsigned char *)(v0 + 4) || (sub_2535B0D9C(), uint64_t result = sub_253B07450(), !v2))
    {
      type metadata accessor for ContextProtoConfidence(0);
      return sub_2535B3AE0();
    }
  }
  return result;
}

void static ContextProtoConfidence.== infix(_:_:)()
{
  sub_2535B3C98();
  sub_2535B3980();
  sub_253465998();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v6);
  sub_2534D9ED0();
  if (*(float *)v1 == *(float *)v0 && *(unsigned __int8 *)(v1 + 4) == *(unsigned __int8 *)(v0 + 4))
  {
    type metadata accessor for ContextProtoConfidence(0);
    uint64_t v7 = sub_2535B38B8();
    ((void (*)(uint64_t))v2)(v7);
    sub_2535B3914();
    v2();
    sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
    sub_2535B3960();
    uint64_t v8 = *(void (**)(void))(v4 + 8);
    sub_2535B3940();
    v8();
    sub_2535B3940();
    v8();
  }
  sub_25346CD04();
}

uint64_t ContextProtoConfidence.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoConfidence);
}

unint64_t sub_25359B148()
{
  return 0xD000000000000012;
}

uint64_t sub_25359B170(uint64_t a1, uint64_t a2)
{
  return ContextProtoConfidence.decodeMessage<A>(decoder:)(a1, a2);
}

uint64_t sub_25359B188()
{
  return ContextProtoConfidence.traverse<A>(visitor:)();
}

uint64_t sub_25359B1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFF08, (void (*)(uint64_t))type metadata accessor for ContextProtoConfidence);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_25359B220()
{
  sub_2535B3644(&qword_269CDFC40, (void (*)(uint64_t))type metadata accessor for ContextProtoConfidence);
  return sub_253B073E0();
}

uint64_t sub_25359B290()
{
  sub_2535B3644(&qword_269CDFC40, (void (*)(uint64_t))type metadata accessor for ContextProtoConfidence);
  return sub_253B073F0();
}

unint64_t static ContextProtoStructuredContext.protoMessageName.getter()
{
  return sub_2535B3A28(25);
}

uint64_t sub_25359B328()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF680);
  sub_253462BD4(v0, (uint64_t)qword_269CDF680);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B34E30;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "siriRequestContext";
  *(void *)(v6 + 8) = 18;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "intelligenceCommand";
  *((void *)v10 + 1) = 19;
  v10[16] = 2;
  v9();
  uint64_t v11 = (void *)((char *)v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "appInFocusContext";
  *((void *)v12 + 1) = 17;
  v12[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoStructuredContext._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA878, (uint64_t)qword_269CDF680, a1);
}

uint64_t ContextProtoStructuredContext.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_2535B39E4(a1, a2);
  while (1)
  {
    uint64_t result = sub_253B07230();
    if (v2 || (v4 & 1) != 0) {
      break;
    }
    switch(result)
    {
      case 3:
        sub_2535B3908();
        sub_25359BF20(v9, v10, v11, v12);
        break;
      case 2:
        sub_2535B3908();
        sub_25359BA7C(v13, v14, v15, v16);
        break;
      case 1:
        sub_2535B3908();
        sub_25359B5DC(v5, v6, v7, v8);
        break;
    }
    sub_2534D9B10();
  }
  return result;
}

uint64_t sub_25359B5DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_269CDF958);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ContextProtoStructuredContextKind(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CDFF88);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  BOOL v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_269CDF958);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_269CDF958);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2535B3724((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for ContextProtoStructuredContextKind);
    sub_2535B3724((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for ContextProtoStructuredContextKind);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_2535B3780((uint64_t)v16, (void (*)(void))type metadata accessor for ContextProtoStructuredContextKind);
    }
    else
    {
      sub_2534B2064((uint64_t)v24, &qword_269CDFF88);
      sub_2535B3724((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
      sub_2535B3724((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
  }
  uint64_t v26 = v34;
  sub_2535B3644(&qword_269CDFC70, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CDFF88);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CDFF88);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CDFF88);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CDFF88);
  }
  uint64_t v29 = v33;
  sub_2535B3724((uint64_t)v22, v33, (void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CDFF88);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_269CDF958);
  sub_2535B3724(v29, v30, (void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_25359BA7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_269CDF958);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ContextProtoStructuredContextKind(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CDFF90);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  BOOL v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_269CDF958);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_269CDF958);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2535B3724((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for ContextProtoStructuredContextKind);
    sub_2535B3724((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for ContextProtoStructuredContextKind);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CDFF90);
      sub_2535B3724((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext);
      sub_2535B3724((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2535B3780((uint64_t)v16, (void (*)(void))type metadata accessor for ContextProtoStructuredContextKind);
    }
  }
  uint64_t v26 = v34;
  sub_2535B3644(&qword_269CDFCE0, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CDFF90);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CDFF90);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CDFF90);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CDFF90);
  }
  uint64_t v29 = v33;
  sub_2535B3724((uint64_t)v22, v33, (void (*)(void))type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CDFF90);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_269CDF958);
  sub_2535B3724(v29, v30, (void (*)(void))type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_25359BF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for ContextProtoStructedContextAppInFocusContext(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_269CDF958);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ContextProtoStructuredContextKind(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CDFF98);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  BOOL v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_269CDF958);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_269CDF958);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2535B3724((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for ContextProtoStructuredContextKind);
    sub_2535B3724((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for ContextProtoStructuredContextKind);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CDFF98);
      sub_2535B3724((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoStructedContextAppInFocusContext);
      sub_2535B3724((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for ContextProtoStructedContextAppInFocusContext);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2535B3780((uint64_t)v16, (void (*)(void))type metadata accessor for ContextProtoStructuredContextKind);
    }
  }
  uint64_t v26 = v34;
  sub_2535B3644(&qword_269CDFCF8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructedContextAppInFocusContext);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CDFF98);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CDFF98);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CDFF98);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CDFF98);
  }
  uint64_t v29 = v33;
  sub_2535B3724((uint64_t)v22, v33, (void (*)(void))type metadata accessor for ContextProtoStructedContextAppInFocusContext);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CDFF98);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_269CDF958);
  sub_2535B3724(v29, v30, (void (*)(void))type metadata accessor for ContextProtoStructedContextAppInFocusContext);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

#error "25359C414: call analysis failed (funcsize=62)"

uint64_t sub_25359C4C4(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDF958);
  MEMORY[0x270FA5388](v2 - 8);
  char v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_269CDF958);
  uint64_t v8 = type metadata accessor for ContextProtoStructuredContextKind(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_269CDF958);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_2535B3724((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
      sub_2535B3644(&qword_269CDFC70, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
      sub_253B07500();
      return sub_2535B3780((uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
    }
    uint64_t result = sub_2535B3780((uint64_t)v4, (void (*)(void))type metadata accessor for ContextProtoStructuredContextKind);
  }
  __break(1u);
  return result;
}

uint64_t sub_25359C6B4(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDF958);
  MEMORY[0x270FA5388](v2 - 8);
  char v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_269CDF958);
  uint64_t v8 = type metadata accessor for ContextProtoStructuredContextKind(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_269CDF958);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2535B3724((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext);
      sub_2535B3644(&qword_269CDFCE0, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext);
      sub_253B07500();
      return sub_2535B3780((uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext);
    }
    uint64_t result = sub_2535B3780((uint64_t)v4, (void (*)(void))type metadata accessor for ContextProtoStructuredContextKind);
  }
  __break(1u);
  return result;
}

uint64_t sub_25359C8A8(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDF958);
  MEMORY[0x270FA5388](v2 - 8);
  char v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ContextProtoStructedContextAppInFocusContext(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_269CDF958);
  uint64_t v8 = type metadata accessor for ContextProtoStructuredContextKind(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_269CDF958);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2535B3724((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoStructedContextAppInFocusContext);
      sub_2535B3644(&qword_269CDFCF8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructedContextAppInFocusContext);
      sub_253B07500();
      return sub_2535B3780((uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoStructedContextAppInFocusContext);
    }
    uint64_t result = sub_2535B3780((uint64_t)v4, (void (*)(void))type metadata accessor for ContextProtoStructuredContextKind);
  }
  __break(1u);
  return result;
}

void static ContextProtoStructuredContext.== infix(_:_:)()
{
  sub_2534B3258();
  v41[0] = sub_2535B4154();
  sub_253465998();
  v41[5] = v5;
  MEMORY[0x270FA5388](v6);
  v41[4] = (uint64_t)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v17 = sub_2535B3B04(v9, v10, v11, v12, v13, v14, v15, v16, v41[0]);
  uint64_t v18 = type metadata accessor for ContextProtoStructuredContextKind(v17);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v19);
  sub_2534966B0();
  sub_253462A5C(&qword_269CDF960);
  sub_2535B3D7C();
  MEMORY[0x270FA5388](v20);
  sub_2534847E0();
  uint64_t v21 = sub_253462A5C(&qword_269CDF958);
  uint64_t v22 = sub_25346CB4C(v21);
  MEMORY[0x270FA5388](v22);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v23);
  sub_2534836BC();
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  sub_2535B3BF0(v25, v26, v27, v28, v29, v30, v31, v32, v41[0]);
  sub_2535B3F44();
  sub_2535B3DE4();
  sub_2535B41D0();
  uint64_t v33 = sub_2534D8B48(v2, 1, v18);
  if (v35)
  {
    sub_2535B3F80();
    sub_2535B3B9C();
    sub_2534D8B48(v1, 1, v18);
    if (v35)
    {
      sub_2534B2064(v2, &qword_269CDF958);
LABEL_11:
      type metadata accessor for ContextProtoStructuredContext(0);
      uint64_t v38 = sub_2535B3A4C();
      ((void (*)(uint64_t))v1)(v38);
      uint64_t v39 = sub_2535B3B64();
      ((void (*)(uint64_t))v1)(v39);
      sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
      sub_2535B4018();
      uint64_t v40 = *(void (**)(void))(v2 + 8);
      sub_2534D91A0();
      v40();
      sub_2534D91A0();
      v40();
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_2535B410C(v33, v34, &qword_269CDF958);
  sub_2534D8B48(v1, 1, v18);
  if (v35)
  {
    sub_2535B3F80();
    sub_2535B3B9C();
    sub_2535B3780(v4, (void (*)(void))type metadata accessor for ContextProtoStructuredContextKind);
LABEL_9:
    sub_2534B2064(v2, &qword_269CDF960);
    goto LABEL_12;
  }
  sub_2535B3724(v1, v3, (void (*)(void))type metadata accessor for ContextProtoStructuredContextKind);
  uint64_t v36 = sub_253578AC4();
  static ContextProtoStructuredContextKind.== infix(_:_:)(v36, v37);
  sub_2535B43C0();
  sub_2534B2064(v0, &qword_269CDF958);
  sub_2535B4460();
  sub_2535B44A8();
  sub_2535B4538();
  if (v1) {
    goto LABEL_11;
  }
LABEL_12:
  sub_2535B41FC();
  sub_253465A14();
}

uint64_t ContextProtoStructuredContext.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoStructuredContext);
}

unint64_t sub_25359CDC0()
{
  return 0xD000000000000019;
}

uint64_t (*sub_25359CDE8())()
{
  return nullsub_1;
}

uint64_t sub_25359CE0C(uint64_t a1, uint64_t a2)
{
  return ContextProtoStructuredContext.decodeMessage<A>(decoder:)(a1, a2);
}

uint64_t sub_25359CE24()
{
  return ContextProtoStructuredContext.traverse<A>(visitor:)();
}

uint64_t sub_25359CE3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFF00, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContext);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_25359CEBC()
{
  sub_2535B3644(&qword_269CDFC58, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContext);
  return sub_253B073E0();
}

uint64_t sub_25359CF2C()
{
  sub_2535B3644(&qword_269CDFC58, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContext);
  return sub_253B073F0();
}

unint64_t static ContextProtoStructuredContextSiriRequestContext.protoMessageName.getter()
{
  return sub_2535B3A28(43);
}

uint64_t sub_25359CFC4()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF698);
  sub_253462BD4(v0, (uint64_t)qword_269CDF698);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_253B36AA0;
  unint64_t v4 = v52 + v3 + v1[14];
  *(void *)(v52 + v3) = 1;
  *(void *)unint64_t v4 = "sessionID";
  *(void *)(v4 + 8) = 9;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = *MEMORY[0x263F50718];
  uint64_t v6 = sub_253B07510();
  uint64_t v7 = *(void (**)(void))(*(void *)(v6 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v7)(v4, v5, v6);
  unint64_t v8 = v52 + v3 + v2 + v1[14];
  *(void *)(v52 + v3 + v2) = 2;
  *(void *)unint64_t v8 = "requestID";
  *(void *)(v8 + 8) = 9;
  *(unsigned char *)(v8 + 16) = 2;
  v7();
  uint64_t v9 = (void *)(v52 + v3 + 2 * v2);
  uint64_t v10 = (char *)v9 + v1[14];
  void *v9 = 3;
  *(void *)uint64_t v10 = "inputOrigin";
  *((void *)v10 + 1) = 11;
  v10[16] = 2;
  v7();
  uint64_t v11 = (void *)(v52 + v3 + 3 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 4;
  *(void *)uint64_t v12 = "responseMode";
  *((void *)v12 + 1) = 12;
  v12[16] = 2;
  v7();
  uint64_t v13 = (void *)(v52 + v3 + 4 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 5;
  *(void *)uint64_t v14 = "isEyesFree";
  *((void *)v14 + 1) = 10;
  v14[16] = 2;
  v7();
  uint64_t v15 = (void *)(v52 + v3 + 5 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 6;
  *(void *)uint64_t v16 = "isMultiUser";
  *((void *)v16 + 1) = 11;
  v16[16] = 2;
  v7();
  uint64_t v17 = (void *)(v52 + v3 + 6 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 7;
  *(void *)uint64_t v18 = "isVoiceTriggerEnabled";
  *((void *)v18 + 1) = 21;
  v18[16] = 2;
  v7();
  uint64_t v19 = (void *)(v52 + v3 + 7 * v2);
  uint64_t v20 = (char *)v19 + v1[14];
  void *v19 = 8;
  *(void *)uint64_t v20 = "isTextToSpeechEnabled";
  *((void *)v20 + 1) = 21;
  v20[16] = 2;
  v7();
  uint64_t v21 = (void *)(v52 + v3 + 8 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *uint64_t v21 = 9;
  *(void *)uint64_t v22 = "isTriggerlessFollowup";
  *((void *)v22 + 1) = 21;
  v22[16] = 2;
  v7();
  uint64_t v23 = (void *)(v52 + v3 + 9 * v2);
  uint64_t v24 = (char *)v23 + v1[14];
  *uint64_t v23 = 10;
  *(void *)uint64_t v24 = "deviceRestrictions";
  *((void *)v24 + 1) = 18;
  v24[16] = 2;
  v7();
  uint64_t v25 = (void *)(v52 + v3 + 10 * v2);
  uint64_t v26 = (char *)v25 + v1[14];
  void *v25 = 11;
  *(void *)uint64_t v26 = "bargeInModes";
  *((void *)v26 + 1) = 12;
  v26[16] = 2;
  v7();
  uint64_t v27 = (void *)(v52 + v3 + 11 * v2);
  uint64_t v28 = (char *)v27 + v1[14];
  void *v27 = 12;
  *(void *)uint64_t v28 = "identifiedUser";
  *((void *)v28 + 1) = 14;
  v28[16] = 2;
  v7();
  uint64_t v29 = (void *)(v52 + v3 + 12 * v2);
  uint64_t v30 = (char *)v29 + v1[14];
  *uint64_t v29 = 13;
  *(void *)uint64_t v30 = "encodedLocation";
  *((void *)v30 + 1) = 15;
  v30[16] = 2;
  v7();
  uint64_t v31 = (void *)(v52 + v3 + 13 * v2);
  uint64_t v32 = (char *)v31 + v1[14];
  *uint64_t v31 = 14;
  *(void *)uint64_t v32 = "countryCode";
  *((void *)v32 + 1) = 11;
  v32[16] = 2;
  v7();
  uint64_t v33 = (void *)(v52 + v3 + 14 * v2);
  uint64_t v34 = (char *)v33 + v1[14];
  void *v33 = 15;
  *(void *)uint64_t v34 = "siriLocale";
  *((void *)v34 + 1) = 10;
  v34[16] = 2;
  v7();
  char v35 = (void *)(v52 + v3 + 15 * v2);
  uint64_t v36 = (char *)v35 + v1[14];
  *char v35 = 16;
  *(void *)uint64_t v36 = "contentRestrictions";
  *((void *)v36 + 1) = 19;
  v36[16] = 2;
  v7();
  uint64_t v37 = (void *)(v52 + v3 + 16 * v2);
  uint64_t v38 = (char *)v37 + v1[14];
  *uint64_t v37 = 17;
  *(void *)uint64_t v38 = "uiScale";
  *((void *)v38 + 1) = 7;
  v38[16] = 2;
  v7();
  uint64_t v39 = (void *)(v52 + v3 + 17 * v2);
  uint64_t v40 = (char *)v39 + v1[14];
  *uint64_t v39 = 18;
  *(void *)uint64_t v40 = "temperatureUnit";
  *((void *)v40 + 1) = 15;
  v40[16] = 2;
  v7();
  uint64_t v41 = (void *)(v52 + v3 + 18 * v2);
  uint64_t v42 = (char *)v41 + v1[14];
  void *v41 = 19;
  *(void *)uint64_t v42 = "allowUserGeneratedContent";
  *((void *)v42 + 1) = 25;
  v42[16] = 2;
  v7();
  uint64_t v43 = (void *)(v52 + v3 + 19 * v2);
  uint64_t v44 = (char *)v43 + v1[14];
  *uint64_t v43 = 20;
  *(void *)uint64_t v44 = "censorSpeech";
  *((void *)v44 + 1) = 12;
  v44[16] = 2;
  v7();
  uint64_t v45 = (void *)(v52 + v3 + 20 * v2);
  uint64_t v46 = (char *)v45 + v1[14];
  *uint64_t v45 = 21;
  *(void *)uint64_t v46 = "meCard";
  *((void *)v46 + 1) = 6;
  v46[16] = 2;
  v7();
  uint64_t v47 = (void *)(v52 + v3 + 21 * v2);
  uint64_t v48 = (char *)v47 + v1[14];
  void *v47 = 22;
  *(void *)uint64_t v48 = "deviceIdiom";
  *((void *)v48 + 1) = 11;
  v48[16] = 2;
  v7();
  uint64_t v49 = (void *)(v52 + v3 + 22 * v2);
  uint64_t v50 = (char *)v49 + v1[14];
  void *v49 = 23;
  *(void *)uint64_t v50 = "didPSCFire";
  *((void *)v50 + 1) = 10;
  v50[16] = 2;
  v7();
  return sub_253B07520();
}

uint64_t static ContextProtoStructuredContextSiriRequestContext._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA880, (uint64_t)qword_269CDF698, a1);
}

void ContextProtoStructuredContextSiriRequestContext.decodeMessage<A>(decoder:)()
{
  sub_2535B3890();
  if (!v0)
  {
    sub_2535B4354();
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
        case 2:
        case 3:
        case 4:
          sub_2535B3B84();
          break;
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
          sub_253B07260();
          break;
        case 10:
        case 11:
          sub_2535B4448();
          break;
        case 12:
          sub_2535B387C();
          sub_25359D8E0();
          break;
        case 13:
          sub_2535B387C();
          sub_25359D990();
          break;
        case 14:
          sub_2535B387C();
          sub_25359D9F4();
          break;
        case 15:
          sub_2535B387C();
          sub_25359DA58();
          break;
        case 16:
          sub_2535B387C();
          sub_25359DABC();
          break;
        case 17:
          sub_2535B387C();
          sub_25359DB6C();
          break;
        case 18:
          sub_2535B387C();
          sub_25359DBD0();
          break;
        case 19:
          sub_2535B387C();
          sub_25359DC34();
          break;
        case 20:
          sub_2535B387C();
          sub_25359DC98();
          break;
        case 21:
          sub_2535B387C();
          sub_25359DCFC();
          break;
        case 22:
          sub_2535B387C();
          sub_25359DDAC();
          break;
        case 23:
          sub_2535B387C();
          sub_25359DE24();
          break;
        default:
          break;
      }
      uint64_t v1 = sub_2535B3A9C();
    }
  }
}

uint64_t sub_25359D8E0()
{
  return sub_253B07380();
}

uint64_t sub_25359D990()
{
  return sub_253B072A0();
}

uint64_t sub_25359D9F4()
{
  return sub_253B07330();
}

uint64_t sub_25359DA58()
{
  return sub_253B07330();
}

uint64_t sub_25359DABC()
{
  return sub_253B07380();
}

uint64_t sub_25359DB6C()
{
  return sub_253B07320();
}

uint64_t sub_25359DBD0()
{
  return sub_253B07330();
}

uint64_t sub_25359DC34()
{
  return sub_253B07260();
}

uint64_t sub_25359DC98()
{
  return sub_253B07260();
}

uint64_t sub_25359DCFC()
{
  return sub_253B07380();
}

uint64_t sub_25359DDAC()
{
  return sub_253B07280();
}

uint64_t sub_25359DE24()
{
  return sub_253B07260();
}

uint64_t ContextProtoStructuredContextSiriRequestContext.traverse<A>(visitor:)()
{
  sub_2535B4688();
  uint64_t v2 = sub_2535B38F4();
  uint64_t result = sub_2535AA480(v2);
  if (!v0)
  {
    uint64_t v4 = sub_2535B38F4();
    sub_2535AA4B4(v4);
    uint64_t v5 = sub_2535B38F4();
    sub_2535A4D34(v5);
    uint64_t v6 = sub_2535B38F4();
    sub_2535A4D68(v6);
    uint64_t v7 = sub_2535B38F4();
    sub_25359E028(v7);
    uint64_t v8 = sub_2535B38F4();
    sub_25359E060(v8);
    uint64_t v9 = sub_2535B38F4();
    sub_25359E098(v9);
    uint64_t v10 = sub_2535B38F4();
    sub_25359E0D0(v10);
    uint64_t v11 = sub_2535B38F4();
    sub_25359E108(v11);
    if (*(void *)(*v1 + 16)) {
      sub_253B074A0();
    }
    if (*(void *)(v1[1] + 16)) {
      sub_253B074A0();
    }
    uint64_t v12 = sub_2535B38F4();
    sub_25359E140(v12);
    uint64_t v13 = sub_2535B38F4();
    sub_25359E300(v13);
    uint64_t v14 = sub_2535B38F4();
    sub_25359E3A0(v14);
    uint64_t v15 = sub_2535B38F4();
    sub_25359E418(v15);
    uint64_t v16 = sub_2535B38F4();
    sub_25359E490(v16);
    uint64_t v17 = sub_2535B38F4();
    sub_25359E650(v17);
    uint64_t v18 = sub_2535B38F4();
    sub_25359E6C8(v18);
    uint64_t v19 = sub_2535B38F4();
    sub_25359E740(v19);
    uint64_t v20 = sub_2535B38F4();
    sub_25359E7B8(v20);
    uint64_t v21 = sub_2535B38F4();
    sub_25359E830(v21);
    uint64_t v22 = sub_2535B38F4();
    sub_25359E9F0(v22);
    uint64_t v23 = sub_2535B38F4();
    sub_25359EA7C(v23);
    type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    return sub_2535B3B48();
  }
  return result;
}

uint64_t sub_25359E028(uint64_t result)
{
  if (*(unsigned char *)(result + 80) != 2) {
    return sub_253B07440();
  }
  return result;
}

uint64_t sub_25359E060(uint64_t result)
{
  if (*(unsigned char *)(result + 81) != 2) {
    return sub_253B07440();
  }
  return result;
}

uint64_t sub_25359E098(uint64_t result)
{
  if (*(unsigned char *)(result + 82) != 2) {
    return sub_253B07440();
  }
  return result;
}

uint64_t sub_25359E0D0(uint64_t result)
{
  if (*(unsigned char *)(result + 83) != 2) {
    return sub_253B07440();
  }
  return result;
}

uint64_t sub_25359E108(uint64_t result)
{
  if (*(unsigned char *)(result + 84) != 2) {
    return sub_253B07440();
  }
  return result;
}

uint64_t sub_25359E140(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDF998);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  sub_2535B37D8(a1 + *(int *)(v8 + 60), (uint64_t)v4, &qword_269CDF998);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) == 1) {
    return sub_2534B2064((uint64_t)v4, &qword_269CDF998);
  }
  sub_2535B3724((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
  sub_2535B3644(&qword_269CDFCA0, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
  sub_253B07500();
  return sub_2535B3780((uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
}

uint64_t sub_25359E300(uint64_t a1)
{
  uint64_t result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  uint64_t v3 = a1 + *(int *)(result + 64);
  unint64_t v4 = *(void *)(v3 + 8);
  if (v4 >> 60 != 15)
  {
    uint64_t v5 = *(void *)v3;
    sub_25348A9C8(*(void *)v3, *(void *)(v3 + 8));
    sub_253B07460();
    return sub_25352C314(v5, v4);
  }
  return result;
}

uint64_t sub_25359E3A0(uint64_t a1)
{
  uint64_t result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  if (*(void *)(a1 + *(int *)(result + 68) + 8)) {
    return sub_253B074C0();
  }
  return result;
}

uint64_t sub_25359E418(uint64_t a1)
{
  uint64_t result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  if (*(void *)(a1 + *(int *)(result + 72) + 8)) {
    return sub_253B074C0();
  }
  return result;
}

uint64_t sub_25359E490(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDF988);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  sub_2535B37D8(a1 + *(int *)(v8 + 76), (uint64_t)v4, &qword_269CDF988);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) == 1) {
    return sub_2534B2064((uint64_t)v4, &qword_269CDF988);
  }
  sub_2535B3724((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
  sub_2535B3644(&qword_269CDFC88, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
  sub_253B07500();
  return sub_2535B3780((uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
}

uint64_t sub_25359E650(uint64_t a1)
{
  uint64_t result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 80) + 8) & 1) == 0) {
    return sub_253B074B0();
  }
  return result;
}

uint64_t sub_25359E6C8(uint64_t a1)
{
  uint64_t result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  if (*(void *)(a1 + *(int *)(result + 84) + 8)) {
    return sub_253B074C0();
  }
  return result;
}

uint64_t sub_25359E740(uint64_t a1)
{
  uint64_t result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 88)) != 2) {
    return sub_253B07440();
  }
  return result;
}

uint64_t sub_25359E7B8(uint64_t a1)
{
  uint64_t result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 92)) != 2) {
    return sub_253B07440();
  }
  return result;
}

uint64_t sub_25359E830(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDF978);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  sub_2535B37D8(a1 + *(int *)(v8 + 96), (uint64_t)v4, &qword_269CDF978);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) == 1) {
    return sub_2534B2064((uint64_t)v4, &qword_269CDF978);
  }
  sub_2535B3724((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
  sub_2535B3644(&qword_269CDFCB8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
  sub_253B07500();
  return sub_2535B3780((uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
}

uint64_t sub_25359E9F0(uint64_t a1)
{
  uint64_t result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 100)) != 12)
  {
    sub_2535B36D8();
    return sub_253B07450();
  }
  return result;
}

uint64_t sub_25359EA7C(uint64_t a1)
{
  uint64_t result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 104)) != 2) {
    return sub_253B07440();
  }
  return result;
}

void static ContextProtoStructuredContextSiriRequestContext.== infix(_:_:)()
{
  sub_2534B3258();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = sub_253B07160();
  sub_253465998();
  uint64_t v161 = v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v160 = (char *)&v149 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v12);
  uint64_t v159 = (char *)&v149 - v13;
  uint64_t v14 = sub_253483660();
  uint64_t v157 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(v14);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v15);
  sub_25346CB04();
  uint64_t v156 = v16;
  uint64_t v152 = sub_253462A5C(&qword_269CDF970);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v17);
  sub_2534D9280(v18, v149);
  uint64_t v19 = sub_253462A5C(&qword_269CDF978);
  uint64_t v20 = sub_25346CB4C(v19);
  MEMORY[0x270FA5388](v20);
  sub_2534659D8();
  uint64_t v155 = v21;
  sub_2534B324C();
  MEMORY[0x270FA5388](v22);
  sub_2534B3318();
  uint64_t v153 = v23;
  sub_2534B324C();
  MEMORY[0x270FA5388](v24);
  uint64_t v154 = (uint64_t)&v149 - v25;
  uint64_t v26 = sub_253483660();
  uint64_t v164 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(v26);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v27);
  sub_25346CB04();
  uint64_t v162 = v28;
  uint64_t v29 = sub_253462A5C(&qword_269CDF980);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v30);
  sub_25346CB04();
  uint64_t v167 = v31;
  uint64_t v32 = sub_253462A5C(&qword_269CDF988);
  uint64_t v33 = sub_25346CB4C(v32);
  MEMORY[0x270FA5388](v33);
  sub_2534659D8();
  uint64_t v163 = v34;
  sub_2534B324C();
  MEMORY[0x270FA5388](v35);
  sub_2534B3318();
  uint64_t v165 = v36;
  sub_2534B324C();
  MEMORY[0x270FA5388](v37);
  uint64_t v166 = (uint64_t)&v149 - v38;
  uint64_t v39 = sub_253483660();
  uint64_t v40 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(v39);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v41);
  sub_2534847E0();
  uint64_t v42 = sub_253462A5C(&qword_269CDF990);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v43);
  sub_2534835B0();
  uint64_t v44 = sub_253462A5C(&qword_269CDF998);
  uint64_t v45 = sub_25346CB4C(v44);
  MEMORY[0x270FA5388](v45);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v46);
  sub_2535B45C8();
  MEMORY[0x270FA5388](v47);
  uint64_t v48 = v5;
  uint64_t v50 = (char *)&v149 - v49;
  uint64_t v51 = *(void *)(v7 + 24);
  uint64_t v52 = *(void *)(v48 + 24);
  if (!v51)
  {
    uint64_t v151 = v8;
    if (v52) {
      goto LABEL_80;
    }
LABEL_10:
    uint64_t v55 = *(void *)(v7 + 40);
    uint64_t v56 = *(void *)(v48 + 40);
    if (v55)
    {
      if (!v56) {
        goto LABEL_80;
      }
      if (*(void *)(v7 + 32) != *(void *)(v48 + 32) || v55 != v56)
      {
        sub_2535B4614();
        sub_2535B45FC();
        if ((v58 & 1) == 0) {
          goto LABEL_80;
        }
      }
    }
    else if (v56)
    {
      goto LABEL_80;
    }
    uint64_t v59 = *(void *)(v7 + 56);
    uint64_t v60 = *(void *)(v48 + 56);
    if (v59)
    {
      if (!v60) {
        goto LABEL_80;
      }
      if (*(void *)(v7 + 48) != *(void *)(v48 + 48) || v59 != v60)
      {
        sub_2535B4614();
        sub_2535B45FC();
        if ((v62 & 1) == 0) {
          goto LABEL_80;
        }
      }
    }
    else if (v60)
    {
      goto LABEL_80;
    }
    uint64_t v63 = *(void *)(v7 + 72);
    uint64_t v64 = *(void *)(v48 + 72);
    if (v63)
    {
      if (!v64) {
        goto LABEL_80;
      }
      if (*(void *)(v7 + 64) != *(void *)(v48 + 64) || v63 != v64)
      {
        sub_2535B4614();
        sub_2535B45FC();
        if ((v66 & 1) == 0) {
          goto LABEL_80;
        }
      }
    }
    else if (v64)
    {
      goto LABEL_80;
    }
    int v67 = *(unsigned __int8 *)(v48 + 80);
    if (*(unsigned char *)(v7 + 80) == 2)
    {
      if (v67 != 2) {
        goto LABEL_80;
      }
    }
    else
    {
      if (v67 == 2) {
        goto LABEL_80;
      }
      sub_2535B3AD0();
      if ((v68 & 1) == 0) {
        goto LABEL_80;
      }
    }
    int v69 = *(unsigned __int8 *)(v48 + 81);
    if (*(unsigned char *)(v7 + 81) == 2)
    {
      if (v69 != 2) {
        goto LABEL_80;
      }
    }
    else
    {
      if (v69 == 2) {
        goto LABEL_80;
      }
      sub_2535B3AD0();
      if ((v70 & 1) == 0) {
        goto LABEL_80;
      }
    }
    int v71 = *(unsigned __int8 *)(v48 + 82);
    if (*(unsigned char *)(v7 + 82) == 2)
    {
      if (v71 != 2) {
        goto LABEL_80;
      }
    }
    else
    {
      if (v71 == 2) {
        goto LABEL_80;
      }
      sub_2535B3AD0();
      if ((v72 & 1) == 0) {
        goto LABEL_80;
      }
    }
    int v73 = *(unsigned __int8 *)(v48 + 83);
    if (*(unsigned char *)(v7 + 83) == 2)
    {
      if (v73 != 2) {
        goto LABEL_80;
      }
    }
    else
    {
      if (v73 == 2) {
        goto LABEL_80;
      }
      sub_2535B3AD0();
      if ((v74 & 1) == 0) {
        goto LABEL_80;
      }
    }
    int v75 = *(unsigned __int8 *)(v48 + 84);
    if (*(unsigned char *)(v7 + 84) == 2)
    {
      if (v75 != 2) {
        goto LABEL_80;
      }
    }
    else
    {
      if (v75 == 2) {
        goto LABEL_80;
      }
      sub_2535B3AD0();
      if ((v76 & 1) == 0) {
        goto LABEL_80;
      }
    }
    uint64_t v77 = v48;
    if ((sub_2534B5C40(*(void **)v7, *(void **)v48) & 1) == 0
      || (sub_2534B5C40(*(void **)(v7 + 8), *(void **)(v77 + 8)) & 1) == 0)
    {
      goto LABEL_80;
    }
    uint64_t v150 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    sub_2535B37D8(v7 + v150[15], (uint64_t)v50, &qword_269CDF998);
    uint64_t v78 = v150[15];
    uint64_t v149 = v77;
    sub_2535B37D8(v77 + v78, v3, &qword_269CDF998);
    uint64_t v79 = v0 + *(int *)(v42 + 48);
    sub_2535B37D8((uint64_t)v50, v0, &qword_269CDF998);
    sub_2535B37D8(v3, v79, &qword_269CDF998);
    sub_2534D8B48(v0, 1, v40);
    if (v53)
    {
      sub_2534B2064(v3, &qword_269CDF998);
      sub_2535B4424();
      sub_2534D8B48(v79, 1, v40);
      if (v53)
      {
        sub_2534B2064(v0, &qword_269CDF998);
        goto LABEL_75;
      }
    }
    else
    {
      sub_2535B37D8(v0, v2, &qword_269CDF998);
      sub_2534D8B48(v79, 1, v40);
      if (!v80)
      {
        sub_2535B3724(v79, v1, (void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
        sub_2534D9724();
        static ContextProtoStructuredContextSiriRequestContextUser.== infix(_:_:)();
        char v84 = v83;
        sub_2535B3780(v1, (void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
        sub_2534B2064(v3, &qword_269CDF998);
        sub_2534B2064((uint64_t)v50, &qword_269CDF998);
        sub_2535B3780(v2, (void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
        sub_2534B2064(v0, &qword_269CDF998);
        if ((v84 & 1) == 0) {
          goto LABEL_80;
        }
LABEL_75:
        uint64_t v85 = v150[16];
        uint64_t v86 = *(void *)(v7 + v85);
        unint64_t v87 = *(void *)(v7 + v85 + 8);
        uint64_t v88 = (uint64_t *)(v149 + v85);
        uint64_t v89 = *v88;
        unint64_t v90 = v88[1];
        if (v87 >> 60 == 15)
        {
          if (v90 >> 60 == 15) {
            goto LABEL_82;
          }
        }
        else if (v90 >> 60 != 15)
        {
          uint64_t v93 = sub_2535B4188();
          char v94 = MEMORY[0x25A264440](v93);
          sub_25352C314(v89, v90);
          sub_25352C314(v86, v87);
          if ((v94 & 1) == 0) {
            goto LABEL_80;
          }
LABEL_82:
          sub_2535B3FA4();
          if (v97)
          {
            if (!v95) {
              goto LABEL_80;
            }
            sub_2535B3D0C(v96);
            BOOL v100 = v53 && v98 == v99;
            if (!v100 && (sub_253B0A4C0() & 1) == 0) {
              goto LABEL_80;
            }
          }
          else if (v95)
          {
            goto LABEL_80;
          }
          sub_2535B3FA4();
          if (v103)
          {
            if (!v101) {
              goto LABEL_80;
            }
            sub_2535B3D0C(v102);
            BOOL v106 = v53 && v104 == v105;
            uint64_t v107 = v149;
            if (!v106)
            {
              char v108 = sub_253B0A4C0();
              uint64_t v107 = v149;
              if ((v108 & 1) == 0) {
                goto LABEL_80;
              }
            }
          }
          else
          {
            uint64_t v107 = v149;
            if (v101) {
              goto LABEL_80;
            }
          }
          uint64_t v109 = v150;
          uint64_t v110 = v166;
          uint64_t v111 = v107;
          sub_2535B37D8(v7 + v150[19], v166, &qword_269CDF988);
          uint64_t v112 = v111 + v109[19];
          uint64_t v113 = v165;
          sub_2535B37D8(v112, v165, &qword_269CDF988);
          uint64_t v114 = *(int *)(v29 + 48);
          uint64_t v115 = v167;
          uint64_t v116 = v167 + v114;
          sub_2535B37D8(v110, v167, &qword_269CDF988);
          sub_2535B436C(v113);
          sub_2534D8B48(v115, 1, v164);
          if (v53)
          {
            sub_2534B2064(v165, &qword_269CDF988);
            sub_2534B2064(v166, &qword_269CDF988);
            sub_2534D8B48(v116, 1, v164);
            if (v53)
            {
              sub_2534B2064(v167, &qword_269CDF988);
LABEL_110:
              uint64_t v119 = v150[20];
              char v120 = *(unsigned char *)(v7 + v119 + 8);
              int v121 = *(unsigned __int8 *)(v149 + v119 + 8);
              if (v120)
              {
                if (!v121) {
                  goto LABEL_80;
                }
              }
              else
              {
                sub_2535B4704();
                if (v122) {
                  goto LABEL_80;
                }
              }
              sub_2535B3FA4();
              if (v125)
              {
                if (!v123) {
                  goto LABEL_80;
                }
                sub_2535B3D0C(v124);
                BOOL v128 = v53 && v126 == v127;
                if (!v128 && (sub_253B0A4C0() & 1) == 0) {
                  goto LABEL_80;
                }
              }
              else if (v123)
              {
                goto LABEL_80;
              }
              sub_2535B41EC();
              if (v53)
              {
                if (v129 != 2) {
                  goto LABEL_80;
                }
              }
              else
              {
                if (v129 == 2) {
                  goto LABEL_80;
                }
                sub_2535B3AD0();
                if ((v130 & 1) == 0) {
                  goto LABEL_80;
                }
              }
              sub_2535B41EC();
              if (v53)
              {
                if (v131 != 2) {
                  goto LABEL_80;
                }
              }
              else
              {
                if (v131 == 2) {
                  goto LABEL_80;
                }
                sub_2535B3AD0();
                if ((v132 & 1) == 0) {
                  goto LABEL_80;
                }
              }
              uint64_t v133 = v150;
              uint64_t v134 = (void (*)(void))&qword_269CDF978;
              uint64_t v135 = v154;
              sub_2535B37D8(v7 + v150[24], v154, &qword_269CDF978);
              uint64_t v136 = v153;
              sub_2535B37D8(v149 + v133[24], v153, &qword_269CDF978);
              uint64_t v137 = v158;
              uint64_t v138 = v158 + *(int *)(v152 + 48);
              sub_2535B4054(v135);
              sub_2535B3F2C(v136);
              sub_2534D8B48(v137, 1, v157);
              if (v53)
              {
                sub_2534B2064(v153, &qword_269CDF978);
                sub_2534B2064(v154, &qword_269CDF978);
                sub_2534D8B48(v138, 1, v157);
                if (v53)
                {
                  sub_2534B2064(v158, &qword_269CDF978);
                  goto LABEL_145;
                }
              }
              else
              {
                sub_2535B37D8(v158, v155, &qword_269CDF978);
                sub_2534D8B48(v138, 1, v157);
                if (!v139)
                {
                  uint64_t v134 = (void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard;
                  sub_2535B3724(v138, v156, (void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
                  uint64_t v140 = v155;
                  sub_2534D973C();
                  static ContextProtoStructuredContextSiriRequestContextMeCard.== infix(_:_:)();
                  sub_2535B3D1C();
                  sub_2534B2064(v153, &qword_269CDF978);
                  sub_2534B2064(v154, &qword_269CDF978);
                  sub_2535B3780(v140, (void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
                  sub_2534B2064(v158, &qword_269CDF978);
                  if ((v138 & 1) == 0) {
                    goto LABEL_80;
                  }
LABEL_145:
                  uint64_t v141 = v150[25];
                  int v142 = *(unsigned __int8 *)(v7 + v141);
                  int v143 = *(unsigned __int8 *)(v149 + v141);
                  if (v142 == 12)
                  {
                    if (v143 != 12) {
                      goto LABEL_80;
                    }
                  }
                  else if (v143 == 12 || v142 != v143)
                  {
                    goto LABEL_80;
                  }
                  sub_2535B41EC();
                  if (v53)
                  {
                    if (v145 != 2) {
                      goto LABEL_80;
                    }
                  }
                  else
                  {
                    if (v145 == 2) {
                      goto LABEL_80;
                    }
                    sub_2535B3AD0();
                    if ((v146 & 1) == 0) {
                      goto LABEL_80;
                    }
                  }
                  uint64_t v147 = v161;
                  sub_2535B42AC();
                  sub_2535B3A00();
                  v134();
                  sub_2535B3A00();
                  v134();
                  sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
                  sub_2535B3D8C();
                  sub_253B096B0();
                  uint64_t v148 = *(void (**)(void))(v147 + 8);
                  sub_253592354();
                  v148();
                  sub_253592354();
                  v148();
                  goto LABEL_80;
                }
                sub_2534B2064(v153, &qword_269CDF978);
                sub_2534B2064(v154, &qword_269CDF978);
                sub_2535B3780(v155, (void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
              }
              uint64_t v81 = &qword_269CDF970;
              uint64_t v82 = v158;
LABEL_73:
              sub_2534B2064(v82, v81);
              goto LABEL_80;
            }
          }
          else
          {
            sub_2535B37D8(v167, v163, &qword_269CDF988);
            sub_2534D8B48(v116, 1, v164);
            if (!v117)
            {
              sub_2535B3724(v116, v162, (void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
              uint64_t v118 = v163;
              sub_2534D973C();
              static ContextProtoStructuredContextSiriRequestContextContentRestriction.== infix(_:_:)();
              sub_2535B3D1C();
              sub_2534B2064(v165, &qword_269CDF988);
              sub_2534B2064(v166, &qword_269CDF988);
              sub_2535B3780(v118, (void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
              sub_2534B2064(v167, &qword_269CDF988);
              if ((v116 & 1) == 0) {
                goto LABEL_80;
              }
              goto LABEL_110;
            }
            sub_2534B2064(v165, &qword_269CDF988);
            sub_2534B2064(v166, &qword_269CDF988);
            sub_2535B3780(v163, (void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
          }
          uint64_t v81 = &qword_269CDF980;
          uint64_t v82 = v167;
          goto LABEL_73;
        }
        uint64_t v91 = sub_2535B4188();
        sub_25352C314(v91, v92);
        sub_25352C314(v89, v90);
        goto LABEL_80;
      }
      sub_2535B44F0();
      sub_2535B440C();
      sub_2535B3780(v2, (void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
    }
    uint64_t v81 = &qword_269CDF990;
    uint64_t v82 = v0;
    goto LABEL_73;
  }
  if (v52)
  {
    uint64_t v151 = v8;
    BOOL v53 = *(void *)(v7 + 16) == *(void *)(v48 + 16) && v51 == v52;
    if (v53) {
      goto LABEL_10;
    }
    sub_2535B4614();
    sub_2535B45FC();
    if (v54) {
      goto LABEL_10;
    }
  }
LABEL_80:
  sub_2535B41FC();
  sub_253465A14();
}

uint64_t ContextProtoStructuredContextSiriRequestContext.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
}

unint64_t sub_25359F840()
{
  return 0xD00000000000002BLL;
}

uint64_t (*sub_25359F868())()
{
  return nullsub_1;
}

void sub_25359F88C()
{
}

uint64_t sub_25359F8A4()
{
  return ContextProtoStructuredContextSiriRequestContext.traverse<A>(visitor:)();
}

uint64_t sub_25359F8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFEF8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_25359F93C()
{
  sub_2535B3644(&qword_269CDFC70, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
  return sub_253B073E0();
}

uint64_t sub_25359F9AC()
{
  sub_2535B3644(&qword_269CDFC70, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
  return sub_253B073F0();
}

unint64_t static ContextProtoStructuredContextSiriRequestContextContentRestriction.protoMessageName.getter()
{
  return sub_2535B3A28(61);
}

uint64_t sub_25359FA44()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF6B0);
  sub_253462BD4(v0, (uint64_t)qword_269CDF6B0);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B34E60;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "appRestriction";
  *(void *)(v6 + 8) = 14;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "countryCode";
  *(void *)(v10 + 8) = 11;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "movieRestriction";
  *((void *)v12 + 1) = 16;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 4;
  *(void *)uint64_t v14 = "tvRestriction";
  *((void *)v14 + 1) = 13;
  v14[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoStructuredContextSiriRequestContextContentRestriction._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA888, (uint64_t)qword_269CDF6B0, a1);
}

void ContextProtoStructuredContextSiriRequestContextContentRestriction.decodeMessage<A>(decoder:)()
{
  sub_2535B4280();
  uint64_t v1 = sub_2535B3890();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
        case 3:
        case 4:
          sub_2535B443C();
          sub_253B072D0();
          break;
        case 2:
          sub_2535B3B84();
          break;
        default:
          break;
      }
      uint64_t v1 = sub_2535B3A9C();
    }
  }
  sub_2535B42DC();
}

uint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.traverse<A>(visitor:)()
{
  uint64_t v2 = sub_2535B3ED8();
  uint64_t result = sub_25359FDF0(v2);
  if (!v0)
  {
    sub_2535A0FA4(v1);
    uint64_t v4 = sub_2535B39B0();
    sub_25359FE24(v4);
    uint64_t v5 = sub_2535B39B0();
    sub_25359FE58(v5);
    type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    return sub_2535B3BCC();
  }
  return result;
}

uint64_t sub_25359FDF0(uint64_t result)
{
  if ((*(unsigned char *)(result + 4) & 1) == 0) {
    return sub_253B07480();
  }
  return result;
}

uint64_t sub_25359FE24(uint64_t result)
{
  if ((*(unsigned char *)(result + 28) & 1) == 0) {
    return sub_253B07480();
  }
  return result;
}

uint64_t sub_25359FE58(uint64_t result)
{
  if ((*(unsigned char *)(result + 36) & 1) == 0) {
    return sub_253B07480();
  }
  return result;
}

void static ContextProtoStructuredContextSiriRequestContextContentRestriction.== infix(_:_:)()
{
  sub_2535B3C98();
  sub_2535B3980();
  sub_253465998();
  MEMORY[0x270FA5388](v3);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v4);
  sub_2535B4208();
  if (v6)
  {
    if (!v5) {
      goto LABEL_24;
    }
  }
  else
  {
    if (*(_DWORD *)v1 != *(_DWORD *)v0) {
      LOBYTE(v5) = 1;
    }
    if (v5) {
      goto LABEL_24;
    }
  }
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v0 + 16);
  if (v7)
  {
    if (!v8) {
      goto LABEL_24;
    }
    BOOL v9 = *(void *)(v1 + 8) == *(void *)(v0 + 8) && v7 == v8;
    if (!v9 && (sub_253B0A4C0() & 1) == 0) {
      goto LABEL_24;
    }
  }
  else if (v8)
  {
    goto LABEL_24;
  }
  char v10 = *(unsigned char *)(v0 + 28);
  if (*(unsigned char *)(v1 + 28))
  {
    if (!*(unsigned char *)(v0 + 28)) {
      goto LABEL_24;
    }
  }
  else
  {
    if (*(_DWORD *)(v1 + 24) != *(_DWORD *)(v0 + 24)) {
      char v10 = 1;
    }
    if (v10) {
      goto LABEL_24;
    }
  }
  char v11 = *(unsigned char *)(v0 + 36);
  if (*(unsigned char *)(v1 + 36))
  {
    if (!*(unsigned char *)(v0 + 36)) {
      goto LABEL_24;
    }
LABEL_28:
    type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    uint64_t v12 = sub_2535B38B8();
    ((void (*)(uint64_t))v2)(v12);
    sub_2535B3914();
    v2();
    sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
    sub_2535B3960();
    uint64_t v13 = sub_2535B3924();
    ((void (*)(uint64_t))v0)(v13);
    sub_2535B3940();
    ((void (*)(void))v0)();
    goto LABEL_24;
  }
  if (*(_DWORD *)(v1 + 32) != *(_DWORD *)(v0 + 32)) {
    char v11 = 1;
  }
  if ((v11 & 1) == 0) {
    goto LABEL_28;
  }
LABEL_24:
  sub_2535B3D00();
  sub_25346CD04();
}

uint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
}

unint64_t sub_2535A0080()
{
  return 0xD00000000000003DLL;
}

void sub_2535A00A8()
{
}

uint64_t sub_2535A00C0()
{
  return ContextProtoStructuredContextSiriRequestContextContentRestriction.traverse<A>(visitor:)();
}

uint64_t sub_2535A00D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFEF0, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535A0158()
{
  sub_2535B3644(&qword_269CDFC88, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
  return sub_253B073E0();
}

uint64_t sub_2535A01C8()
{
  sub_2535B3644(&qword_269CDFC88, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
  return sub_253B073F0();
}

unint64_t static ContextProtoStructuredContextSiriRequestContextUser.protoMessageName.getter()
{
  return sub_2535B3A28(47);
}

uint64_t sub_2535A0260()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF6C8);
  sub_253462BD4(v0, (uint64_t)qword_269CDF6C8);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B34E30;
  int v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *int v5 = 1;
  *(void *)unint64_t v6 = "userID";
  *(void *)(v6 + 8) = 6;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  BOOL v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  char v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)char v10 = "isOnlyUserInHome";
  *((void *)v10 + 1) = 16;
  v10[16] = 2;
  v9();
  char v11 = (void *)((char *)v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *char v11 = 3;
  *(void *)uint64_t v12 = "classification";
  *((void *)v12 + 1) = 14;
  v12[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoStructuredContextSiriRequestContextUser._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA890, (uint64_t)qword_269CDF6C8, a1);
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_2535B3890();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_2535B387C();
          sub_2535A0510();
          break;
        case 2:
          sub_253B07260();
          break;
        case 1:
          sub_2535B3B84();
          break;
      }
      uint64_t result = sub_2535B3A9C();
    }
  }
  return result;
}

uint64_t sub_2535A0510()
{
  return sub_253B07280();
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.traverse<A>(visitor:)()
{
  uint64_t v1 = sub_2535B3EB4();
  uint64_t result = sub_2535AA444(v1);
  if (!v0)
  {
    uint64_t v3 = sub_2535B3C80();
    sub_2535A05E4(v3);
    uint64_t v4 = sub_2535B3C80();
    sub_2535A061C(v4);
    type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    return sub_2535B406C();
  }
  return result;
}

uint64_t sub_2535A05E4(uint64_t result)
{
  if (*(unsigned char *)(result + 16) != 2) {
    return sub_253B07440();
  }
  return result;
}

uint64_t sub_2535A061C(uint64_t result)
{
  if (*(unsigned char *)(result + 17) != 5)
  {
    sub_2535B368C();
    return sub_253B07450();
  }
  return result;
}

void static ContextProtoStructuredContextSiriRequestContextUser.== infix(_:_:)()
{
  sub_2535B3C98();
  sub_2535B3980();
  sub_253465998();
  MEMORY[0x270FA5388](v3);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v4);
  sub_2535B3D54();
  if (!v6)
  {
    if (v5) {
      goto LABEL_22;
    }
LABEL_10:
    int v10 = *(unsigned __int8 *)(v0 + 16);
    if (*(unsigned char *)(v1 + 16) == 2)
    {
      if (v10 != 2) {
        goto LABEL_22;
      }
    }
    else
    {
      if (v10 == 2) {
        goto LABEL_22;
      }
      sub_2535B3AD0();
      if ((v11 & 1) == 0) {
        goto LABEL_22;
      }
    }
    int v12 = *(unsigned __int8 *)(v1 + 17);
    int v13 = *(unsigned __int8 *)(v0 + 17);
    if (v12 == 5)
    {
      if (v13 != 5) {
        goto LABEL_22;
      }
    }
    else if (v13 == 5 || v12 != v13)
    {
      goto LABEL_22;
    }
    type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    uint64_t v14 = sub_2535B38B8();
    ((void (*)(uint64_t))v2)(v14);
    sub_2535B3914();
    v2();
    sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
    sub_2535B3960();
    uint64_t v15 = sub_2535B3924();
    ((void (*)(uint64_t))v0)(v15);
    sub_2535B3940();
    ((void (*)(void))v0)();
    goto LABEL_22;
  }
  if (v5)
  {
    sub_2535B3FE8();
    BOOL v9 = v9 && v7 == v8;
    if (v9 || (sub_253B0A4C0() & 1) != 0) {
      goto LABEL_10;
    }
  }
LABEL_22:
  sub_2535B3D00();
  sub_25346CD04();
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
}

unint64_t sub_2535A0860()
{
  return 0xD00000000000002FLL;
}

uint64_t (*sub_2535A0888())()
{
  return nullsub_1;
}

uint64_t sub_2535A08AC()
{
  return ContextProtoStructuredContextSiriRequestContextUser.decodeMessage<A>(decoder:)();
}

uint64_t sub_2535A08C4()
{
  return ContextProtoStructuredContextSiriRequestContextUser.traverse<A>(visitor:)();
}

uint64_t sub_2535A08DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFEE8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535A095C()
{
  sub_2535B3644(&qword_269CDFCA0, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
  return sub_253B073E0();
}

uint64_t sub_2535A09CC()
{
  sub_2535B3644(&qword_269CDFCA0, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
  return sub_253B073F0();
}

unint64_t static ContextProtoStructuredContextSiriRequestContextMeCard.protoMessageName.getter()
{
  return sub_2535B3A28(49);
}

uint64_t sub_2535A0A64()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF6E0);
  sub_253462BD4(v0, (uint64_t)qword_269CDF6E0);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B36A50;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "givenName";
  *(void *)(v6 + 8) = 9;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  BOOL v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "middleName";
  *(void *)(v10 + 8) = 10;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  char v11 = (void *)(v5 + 2 * v2);
  int v12 = (char *)v11 + v1[14];
  *char v11 = 3;
  *(void *)int v12 = "familyName";
  *((void *)v12 + 1) = 10;
  v12[16] = 2;
  v9();
  int v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 4;
  *(void *)uint64_t v14 = "nickName";
  *((void *)v14 + 1) = 8;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "fullName";
  *((void *)v16 + 1) = 8;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)uint64_t v18 = "addresses";
  *((void *)v18 + 1) = 9;
  v18[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoStructuredContextSiriRequestContextMeCard._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA898, (uint64_t)qword_269CDF6E0, a1);
}

void ContextProtoStructuredContextSiriRequestContextMeCard.decodeMessage<A>(decoder:)()
{
  sub_2534847F8();
  uint64_t v1 = sub_2535B3890();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          sub_2535B3B84();
          break;
        case 6:
          sub_2535B387C();
          sub_2535A0E50();
          break;
        default:
          break;
      }
      uint64_t v1 = sub_2535B3A9C();
    }
  }
  sub_2534847C8();
}

void sub_2535A0E50()
{
  sub_2534847F8();
  uint64_t v0 = sub_2535B3E08();
  v1(v0);
  sub_2535B4568();
  sub_2535B3FF8();
  sub_253B07370();
  sub_2534847C8();
}

void ContextProtoStructuredContextSiriRequestContextMeCard.traverse<A>(visitor:)()
{
  sub_2535B45A0();
  sub_2535B3D98();
  if (!v0)
  {
    sub_2535B4330();
    sub_2535B3950();
    sub_2535A1014(v1);
    sub_2535B3950();
    sub_2535A1050(v2);
    sub_2535B3950();
    sub_2535A108C(v3);
    sub_2535B4594();
    if (v4)
    {
      type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(0);
      sub_2535B3644(&qword_269CDF9B8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress);
      sub_2535B3D8C();
      sub_2535B3AB4();
    }
    type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
    sub_2535B3B48();
  }
  sub_2535B4660();
}

uint64_t sub_2535A0FA4(uint64_t result)
{
  if (*(void *)(result + 16))
  {
    sub_2535B4324();
    return sub_2535B430C();
  }
  return result;
}

uint64_t sub_2535A0FD8(uint64_t result)
{
  if (*(void *)(result + 32)) {
    return sub_253B074C0();
  }
  return result;
}

uint64_t sub_2535A1014(uint64_t result)
{
  if (*(void *)(result + 48)) {
    return sub_253B074C0();
  }
  return result;
}

uint64_t sub_2535A1050(uint64_t result)
{
  if (*(void *)(result + 64)) {
    return sub_253B074C0();
  }
  return result;
}

uint64_t sub_2535A108C(uint64_t result)
{
  if (*(void *)(result + 80)) {
    return sub_253B074C0();
  }
  return result;
}

void static ContextProtoStructuredContextSiriRequestContextMeCard.== infix(_:_:)()
{
  sub_2535B3C98();
  sub_2535B3980();
  sub_253465998();
  MEMORY[0x270FA5388](v3);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v4);
  sub_2534D9ED0();
  uint64_t v5 = v1[2];
  uint64_t v6 = *(void *)(v0 + 16);
  if (!v5)
  {
    if (v6) {
      goto LABEL_48;
    }
LABEL_10:
    uint64_t v8 = v1[4];
    uint64_t v9 = *(void *)(v0 + 32);
    if (v8)
    {
      if (!v9) {
        goto LABEL_48;
      }
      BOOL v10 = v1[3] == *(void *)(v0 + 24) && v8 == v9;
      if (!v10 && (sub_253B0A4C0() & 1) == 0) {
        goto LABEL_48;
      }
    }
    else if (v9)
    {
      goto LABEL_48;
    }
    uint64_t v11 = v1[6];
    uint64_t v12 = *(void *)(v0 + 48);
    if (v11)
    {
      if (!v12) {
        goto LABEL_48;
      }
      BOOL v13 = v1[5] == *(void *)(v0 + 40) && v11 == v12;
      if (!v13 && (sub_253B0A4C0() & 1) == 0) {
        goto LABEL_48;
      }
    }
    else if (v12)
    {
      goto LABEL_48;
    }
    uint64_t v14 = v1[8];
    uint64_t v15 = *(void *)(v0 + 64);
    if (v14)
    {
      if (!v15) {
        goto LABEL_48;
      }
      BOOL v16 = v1[7] == *(void *)(v0 + 56) && v14 == v15;
      if (!v16 && (sub_253B0A4C0() & 1) == 0) {
        goto LABEL_48;
      }
    }
    else if (v15)
    {
      goto LABEL_48;
    }
    uint64_t v17 = v1[10];
    uint64_t v18 = *(void *)(v0 + 80);
    if (v17)
    {
      if (!v18) {
        goto LABEL_48;
      }
      BOOL v19 = v1[9] == *(void *)(v0 + 72) && v17 == v18;
      if (!v19 && (sub_253B0A4C0() & 1) == 0) {
        goto LABEL_48;
      }
    }
    else if (v18)
    {
      goto LABEL_48;
    }
    sub_2534BAAF4();
    if (v20)
    {
      type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
      uint64_t v21 = sub_2535B38B8();
      ((void (*)(uint64_t))v2)(v21);
      sub_2535B3914();
      v2();
      sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
      sub_2535B3960();
      uint64_t v22 = sub_2535B3924();
      ((void (*)(uint64_t))v0)(v22);
      sub_2535B3940();
      ((void (*)(void))v0)();
    }
    goto LABEL_48;
  }
  if (v6)
  {
    BOOL v7 = v1[1] == *(void *)(v0 + 8) && v5 == v6;
    if (v7 || (sub_253B0A4C0() & 1) != 0) {
      goto LABEL_10;
    }
  }
LABEL_48:
  sub_2535B3D00();
  sub_25346CD04();
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
}

unint64_t sub_2535A1350()
{
  return 0xD000000000000031;
}

uint64_t (*sub_2535A1378())()
{
  return nullsub_1;
}

void sub_2535A139C()
{
}

void sub_2535A13B4()
{
}

uint64_t sub_2535A13CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFEE0, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535A144C()
{
  sub_2535B3644(&qword_269CDFCB8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
  return sub_253B073E0();
}

uint64_t sub_2535A14BC()
{
  sub_2535B3644(&qword_269CDFCB8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
  return sub_253B073F0();
}

unint64_t static ContextProtoStructuredContextSiriRequestContextAddress.protoMessageName.getter()
{
  return sub_2535B3A28(50);
}

uint64_t sub_2535A1554()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF6F8);
  sub_253462BD4(v0, (uint64_t)qword_269CDF6F8);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B36A50;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "label";
  *(void *)(v6 + 8) = 5;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "street";
  *(void *)(v10 + 8) = 6;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "city";
  *((void *)v12 + 1) = 4;
  v12[16] = 2;
  v9();
  BOOL v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 4;
  *(void *)uint64_t v14 = "state";
  *((void *)v14 + 1) = 5;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  BOOL v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)BOOL v16 = "postalCode";
  *((void *)v16 + 1) = 10;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)uint64_t v18 = "countryCode";
  *((void *)v18 + 1) = 11;
  v18[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoStructuredContextSiriRequestContextAddress._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA8A0, (uint64_t)qword_269CDF6F8, a1);
}

void ContextProtoStructuredContextSiriRequestContextAddress.decodeMessage<A>(decoder:)()
{
  sub_2534847F8();
  sub_2535B3890();
  if (!v0)
  {
    sub_2535B4354();
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          sub_2535B3B84();
          break;
        default:
          break;
      }
      uint64_t v1 = sub_2535B3A9C();
    }
  }
  sub_2534847C8();
}

uint64_t ContextProtoStructuredContextSiriRequestContextAddress.traverse<A>(visitor:)()
{
  uint64_t result = sub_2535B3EFC();
  if (!v0)
  {
    sub_2535B4094();
    sub_2535B40BC();
    uint64_t v2 = sub_2535B39B0();
    sub_2535A4D34(v2);
    uint64_t v3 = sub_2535B39B0();
    sub_2535A4D68(v3);
    uint64_t v4 = sub_2535B39B0();
    sub_2535A1984(v4);
    type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(0);
    return sub_2535B3BCC();
  }
  return result;
}

uint64_t sub_2535A1984(uint64_t result)
{
  if (*(void *)(result + 88)) {
    return sub_253B074C0();
  }
  return result;
}

void static ContextProtoStructuredContextSiriRequestContextAddress.== infix(_:_:)()
{
  sub_2535B3C98();
  sub_2535B3980();
  sub_253465998();
  MEMORY[0x270FA5388](v3);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v4);
  sub_2535B3D54();
  if (!v6)
  {
    if (v5) {
      goto LABEL_55;
    }
LABEL_10:
    uint64_t v10 = *(void *)(v0 + 24);
    if (v1[3])
    {
      if (!v10) {
        goto LABEL_55;
      }
      sub_2535B4270();
      BOOL v13 = v9 && v11 == v12;
      if (!v13 && (sub_253B0A4C0() & 1) == 0) {
        goto LABEL_55;
      }
    }
    else if (v10)
    {
      goto LABEL_55;
    }
    sub_2535B45F0();
    if (v15)
    {
      if (!v14) {
        goto LABEL_55;
      }
      sub_2535B3FD8();
      BOOL v18 = v9 && v16 == v17;
      if (!v18 && (sub_253B0A4C0() & 1) == 0) {
        goto LABEL_55;
      }
    }
    else if (v14)
    {
      goto LABEL_55;
    }
    uint64_t v19 = *(void *)(v0 + 56);
    if (v1[7])
    {
      if (!v19) {
        goto LABEL_55;
      }
      sub_2535B4248();
      BOOL v22 = v9 && v20 == v21;
      if (!v22 && (sub_253B0A4C0() & 1) == 0) {
        goto LABEL_55;
      }
    }
    else if (v19)
    {
      goto LABEL_55;
    }
    uint64_t v23 = *(void *)(v0 + 72);
    if (v1[9])
    {
      if (!v23) {
        goto LABEL_55;
      }
      sub_2535B4238();
      BOOL v26 = v9 && v24 == v25;
      if (!v26 && (sub_253B0A4C0() & 1) == 0) {
        goto LABEL_55;
      }
    }
    else if (v23)
    {
      goto LABEL_55;
    }
    uint64_t v27 = v1[11];
    uint64_t v28 = *(void *)(v0 + 88);
    if (v27)
    {
      if (!v28) {
        goto LABEL_55;
      }
      BOOL v29 = v1[10] == *(void *)(v0 + 80) && v27 == v28;
      if (!v29 && (sub_253B0A4C0() & 1) == 0) {
        goto LABEL_55;
      }
    }
    else if (v28)
    {
      goto LABEL_55;
    }
    type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(0);
    uint64_t v30 = sub_2535B38B8();
    ((void (*)(uint64_t))v2)(v30);
    sub_2535B3914();
    v2();
    sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
    sub_2535B3960();
    uint64_t v31 = sub_2535B3924();
    ((void (*)(uint64_t))v0)(v31);
    sub_2535B3940();
    ((void (*)(void))v0)();
    goto LABEL_55;
  }
  if (v5)
  {
    sub_2535B3FE8();
    BOOL v9 = v9 && v7 == v8;
    if (v9 || (sub_253B0A4C0() & 1) != 0) {
      goto LABEL_10;
    }
  }
LABEL_55:
  sub_2535B3D00();
  sub_25346CD04();
}

uint64_t ContextProtoStructuredContextSiriRequestContextAddress.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress);
}

unint64_t sub_2535A1C40()
{
  return 0xD000000000000032;
}

void sub_2535A1C68()
{
}

uint64_t sub_2535A1C80()
{
  return ContextProtoStructuredContextSiriRequestContextAddress.traverse<A>(visitor:)();
}

uint64_t sub_2535A1C98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFED8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535A1D18()
{
  sub_2535B3644(&qword_269CDF9B8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress);
  return sub_253B073E0();
}

uint64_t sub_2535A1D88()
{
  sub_2535B3644(&qword_269CDF9B8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress);
  return sub_253B073F0();
}

unint64_t static ContextProtoStructuredContextIntelligenceCommandContext.protoMessageName.getter()
{
  return sub_2535B3A28(51);
}

uint64_t sub_2535A1E20()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF710);
  sub_253462BD4(v0, (uint64_t)qword_269CDF710);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B36A50;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "identifier";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  BOOL v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "title";
  *(void *)(v10 + 8) = 5;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "standaloneTitle";
  *((void *)v12 + 1) = 15;
  v12[16] = 2;
  v9();
  BOOL v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 4;
  *(void *)uint64_t v14 = "embeddingDescription";
  *((void *)v14 + 1) = 20;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "isDisabled";
  *((void *)v16 + 1) = 10;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  BOOL v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)BOOL v18 = "menuHierarchyComponents";
  *((void *)v18 + 1) = 23;
  v18[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoStructuredContextIntelligenceCommandContext._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA8A8, (uint64_t)qword_269CDF710, a1);
}

void ContextProtoStructuredContextIntelligenceCommandContext.decodeMessage<A>(decoder:)()
{
  sub_2534847F8();
  uint64_t v1 = sub_2535B3890();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          sub_2535B3CD4();
          break;
        case 2:
        case 3:
        case 4:
          sub_2535B3B84();
          break;
        case 5:
          sub_253B07270();
          break;
        case 6:
          sub_2535B4448();
          break;
        default:
          break;
      }
      uint64_t v1 = sub_2535B3A9C();
    }
  }
  sub_2534847C8();
}

uint64_t ContextProtoStructuredContextIntelligenceCommandContext.traverse<A>(visitor:)()
{
  sub_2535B4674();
  sub_2535B399C();
  if (!v2 || (uint64_t result = sub_2535B3B2C(), !v0))
  {
    sub_2535B3950();
    uint64_t result = sub_2535AA4B4(v4);
    if (!v0)
    {
      sub_2535B3950();
      sub_2535A4D34(v5);
      sub_2535B3950();
      sub_2535A4D68(v6);
      if (*(unsigned char *)(v1 + 16) == 1) {
        sub_2535B3A80();
      }
      if (*(void *)(*(void *)(v1 + 24) + 16)) {
        sub_2535B3C64();
      }
      type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0);
      return sub_2535B3B48();
    }
  }
  return result;
}

void static ContextProtoStructuredContextIntelligenceCommandContext.== infix(_:_:)()
{
  sub_2535B3C98();
  sub_2535B3980();
  sub_253465998();
  MEMORY[0x270FA5388](v3);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v4);
  sub_2535B3A30();
  BOOL v7 = v7 && v5 == v6;
  if (!v7 && (sub_253B0A4C0() & 1) == 0) {
    goto LABEL_36;
  }
  sub_2535B45F0();
  if (!v9)
  {
    if (v8) {
      goto LABEL_36;
    }
LABEL_15:
    uint64_t v13 = *(void *)(v0 + 56);
    if (*(void *)(v1 + 56))
    {
      if (!v13) {
        goto LABEL_36;
      }
      sub_2535B4248();
      BOOL v16 = v7 && v14 == v15;
      if (!v16 && (sub_253B0A4C0() & 1) == 0) {
        goto LABEL_36;
      }
    }
    else if (v13)
    {
      goto LABEL_36;
    }
    uint64_t v17 = *(void *)(v0 + 72);
    if (*(void *)(v1 + 72))
    {
      if (!v17) {
        goto LABEL_36;
      }
      sub_2535B4238();
      BOOL v20 = v7 && v18 == v19;
      if (!v20 && (sub_253B0A4C0() & 1) == 0) {
        goto LABEL_36;
      }
    }
    else if (v17)
    {
      goto LABEL_36;
    }
    if (*(unsigned __int8 *)(v1 + 16) == *(unsigned __int8 *)(v0 + 16)
      && (sub_2534B5C40(*(void **)(v1 + 24), *(void **)(v0 + 24)) & 1) != 0)
    {
      type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0);
      uint64_t v21 = sub_2535B38B8();
      ((void (*)(uint64_t))v2)(v21);
      sub_2535B3914();
      v2();
      sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
      sub_2535B3960();
      uint64_t v22 = sub_2535B3924();
      ((void (*)(uint64_t))v0)(v22);
      sub_2535B3940();
      ((void (*)(void))v0)();
    }
    goto LABEL_36;
  }
  if (v8)
  {
    sub_2535B3FD8();
    BOOL v12 = v7 && v10 == v11;
    if (v12 || (sub_253B0A4C0() & 1) != 0) {
      goto LABEL_15;
    }
  }
LABEL_36:
  sub_2535B3D00();
  sub_25346CD04();
}

uint64_t ContextProtoStructuredContextIntelligenceCommandContext.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext);
}

unint64_t sub_2535A2508()
{
  return 0xD000000000000033;
}

void sub_2535A2530()
{
}

uint64_t sub_2535A2548()
{
  return ContextProtoStructuredContextIntelligenceCommandContext.traverse<A>(visitor:)();
}

uint64_t sub_2535A2560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFED0, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535A25E0()
{
  sub_2535B3644(&qword_269CDFCE0, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext);
  return sub_253B073E0();
}

uint64_t sub_2535A2650()
{
  sub_2535B3644(&qword_269CDFCE0, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext);
  return sub_253B073F0();
}

unint64_t static ContextProtoStructedContextAppInFocusContext.protoMessageName.getter()
{
  return sub_2535B3A28(40);
}

uint64_t sub_2535A26E8()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF728);
  sub_253462BD4(v0, (uint64_t)qword_269CDF728);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B34E30;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "bundleID";
  *(void *)(v6 + 8) = 8;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "appName";
  *((void *)v10 + 1) = 7;
  v10[16] = 2;
  v9();
  uint64_t v11 = (void *)((char *)v5 + 2 * v2);
  BOOL v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)BOOL v12 = "category";
  *((void *)v12 + 1) = 8;
  v12[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoStructedContextAppInFocusContext._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA8B0, (uint64_t)qword_269CDF728, a1);
}

uint64_t ContextProtoStructedContextAppInFocusContext.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_2535B3890();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3 || result == 2)
      {
        sub_2535B3B84();
      }
      else if (result == 1)
      {
        sub_2535B3CD4();
      }
      uint64_t result = sub_2535B3A9C();
    }
  }
  return result;
}

uint64_t ContextProtoStructedContextAppInFocusContext.traverse<A>(visitor:)()
{
  sub_2535B399C();
  if (!v1 || (uint64_t result = sub_2535B3C1C(), !v0))
  {
    uint64_t v3 = sub_2535B3BB4();
    uint64_t result = sub_2535AA480(v3);
    if (!v0)
    {
      uint64_t v4 = sub_2535B3BB4();
      sub_2535AA4B4(v4);
      type metadata accessor for ContextProtoStructedContextAppInFocusContext(0);
      return sub_2535B3AE0();
    }
  }
  return result;
}

void static ContextProtoStructedContextAppInFocusContext.== infix(_:_:)()
{
  sub_2535B3C98();
  uint64_t v4 = sub_2535B3980();
  sub_253465998();
  MEMORY[0x270FA5388](v5);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v6);
  sub_2535B3A30();
  BOOL v9 = v9 && v7 == v8;
  if (!v9 && (sub_253B0A4C0() & 1) == 0) {
    goto LABEL_26;
  }
  uint64_t v10 = *(void *)(v1 + 24);
  if (!*(void *)(v2 + 24))
  {
    if (v10) {
      goto LABEL_26;
    }
LABEL_15:
    sub_2535B45F0();
    if (v15)
    {
      if (!v14) {
        goto LABEL_26;
      }
      sub_2535B3FD8();
      BOOL v18 = v9 && v16 == v17;
      if (!v18 && (sub_253B0A4C0() & 1) == 0) {
        goto LABEL_26;
      }
    }
    else if (v14)
    {
      goto LABEL_26;
    }
    type metadata accessor for ContextProtoStructedContextAppInFocusContext(0);
    uint64_t v19 = sub_2535B38B8();
    ((void (*)(uint64_t))v3)(v19);
    sub_2535B3914();
    v3();
    sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
    sub_2535B3960();
    uint64_t v20 = sub_2535B3924();
    ((void (*)(uint64_t))v1)(v20);
    ((void (*)(uint64_t, uint64_t))v1)(v0, v4);
    goto LABEL_26;
  }
  if (v10)
  {
    sub_2535B4270();
    BOOL v13 = v9 && v11 == v12;
    if (v13 || (sub_253B0A4C0() & 1) != 0) {
      goto LABEL_15;
    }
  }
LABEL_26:
  sub_2535B3D00();
  sub_25346CD04();
}

uint64_t ContextProtoStructedContextAppInFocusContext.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoStructedContextAppInFocusContext);
}

unint64_t sub_2535A2BF0()
{
  return 0xD000000000000028;
}

uint64_t sub_2535A2C18()
{
  return ContextProtoStructedContextAppInFocusContext.decodeMessage<A>(decoder:)();
}

uint64_t sub_2535A2C30()
{
  return ContextProtoStructedContextAppInFocusContext.traverse<A>(visitor:)();
}

uint64_t sub_2535A2C48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFEC8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructedContextAppInFocusContext);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535A2CC8()
{
  sub_2535B3644(&qword_269CDFCF8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructedContextAppInFocusContext);
  return sub_253B073E0();
}

uint64_t sub_2535A2D38()
{
  sub_2535B3644(&qword_269CDFCF8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructedContextAppInFocusContext);
  return sub_253B073F0();
}

unint64_t static ContextProtoQueryDecorationOutput.protoMessageName.getter()
{
  return sub_2535B3A28(29);
}

uint64_t sub_2535A2DD0()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF740);
  sub_253462BD4(v0, (uint64_t)qword_269CDF740);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_253B36AA0;
  unint64_t v4 = v52 + v3 + v1[14];
  *(void *)(v52 + v3) = 12;
  *(void *)unint64_t v4 = "spans";
  *(void *)(v4 + 8) = 5;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = *MEMORY[0x263F50718];
  uint64_t v6 = sub_253B07510();
  uint64_t v7 = *(void (**)(void))(*(void *)(v6 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v7)(v4, v5, v6);
  unint64_t v8 = v52 + v3 + v2 + v1[14];
  *(void *)(v52 + v3 + v2) = 13;
  *(void *)unint64_t v8 = "spansIsPresent";
  *(void *)(v8 + 8) = 14;
  *(unsigned char *)(v8 + 16) = 2;
  v7();
  BOOL v9 = (void *)(v52 + v3 + 2 * v2);
  uint64_t v10 = (char *)v9 + v1[14];
  void *v9 = 3;
  *(void *)uint64_t v10 = "requiredContext";
  *((void *)v10 + 1) = 15;
  v10[16] = 2;
  v7();
  uint64_t v11 = (void *)(v52 + v3 + 3 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 14;
  *(void *)uint64_t v12 = "requiredContextIsPresent";
  *((void *)v12 + 1) = 24;
  v12[16] = 2;
  v7();
  BOOL v13 = (void *)(v52 + v3 + 4 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 4;
  *(void *)uint64_t v14 = "utteranceContext";
  *((void *)v14 + 1) = 16;
  v14[16] = 2;
  v7();
  uint64_t v15 = (void *)(v52 + v3 + 5 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 15;
  *(void *)uint64_t v16 = "utteranceContextIsPresent";
  *((void *)v16 + 1) = 25;
  v16[16] = 2;
  v7();
  uint64_t v17 = (void *)(v52 + v3 + 6 * v2);
  BOOL v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 5;
  *(void *)BOOL v18 = "originalRankedTools";
  *((void *)v18 + 1) = 19;
  v18[16] = 2;
  v7();
  uint64_t v19 = (void *)(v52 + v3 + 7 * v2);
  uint64_t v20 = (char *)v19 + v1[14];
  void *v19 = 16;
  *(void *)uint64_t v20 = "originalRankedToolsIsPresent";
  *((void *)v20 + 1) = 28;
  v20[16] = 2;
  v7();
  uint64_t v21 = (void *)(v52 + v3 + 8 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *uint64_t v21 = 6;
  *(void *)uint64_t v22 = "adjustedRankedTools";
  *((void *)v22 + 1) = 19;
  v22[16] = 2;
  v7();
  uint64_t v23 = (void *)(v52 + v3 + 9 * v2);
  uint64_t v24 = (char *)v23 + v1[14];
  *uint64_t v23 = 17;
  *(void *)uint64_t v24 = "adjustedRankedToolsIsPresent";
  *((void *)v24 + 1) = 28;
  v24[16] = 2;
  v7();
  uint64_t v25 = (void *)(v52 + v3 + 10 * v2);
  BOOL v26 = (char *)v25 + v1[14];
  void *v25 = 7;
  *(void *)BOOL v26 = "originalRankedSpans";
  *((void *)v26 + 1) = 19;
  v26[16] = 2;
  v7();
  uint64_t v27 = (void *)(v52 + v3 + 11 * v2);
  uint64_t v28 = (char *)v27 + v1[14];
  void *v27 = 18;
  *(void *)uint64_t v28 = "originalRankedSpansIsPresent";
  *((void *)v28 + 1) = 28;
  v28[16] = 2;
  v7();
  BOOL v29 = (void *)(v52 + v3 + 12 * v2);
  uint64_t v30 = (char *)v29 + v1[14];
  *BOOL v29 = 8;
  *(void *)uint64_t v30 = "adjustedRankedSpans";
  *((void *)v30 + 1) = 19;
  v30[16] = 2;
  v7();
  uint64_t v31 = (void *)(v52 + v3 + 13 * v2);
  uint64_t v32 = (char *)v31 + v1[14];
  *uint64_t v31 = 19;
  *(void *)uint64_t v32 = "adjustedRankedSpansIsPresent";
  *((void *)v32 + 1) = 28;
  v32[16] = 2;
  v7();
  uint64_t v33 = (void *)(v52 + v3 + 14 * v2);
  uint64_t v34 = (char *)v33 + v1[14];
  void *v33 = 9;
  *(void *)uint64_t v34 = "originalRankedUtteranceContext";
  *((void *)v34 + 1) = 30;
  v34[16] = 2;
  v7();
  uint64_t v35 = (void *)(v52 + v3 + 15 * v2);
  uint64_t v36 = (char *)v35 + v1[14];
  *uint64_t v35 = 20;
  *(void *)uint64_t v36 = "originalRankedUtteranceContextIsPresent";
  *((void *)v36 + 1) = 39;
  v36[16] = 2;
  v7();
  uint64_t v37 = (void *)(v52 + v3 + 16 * v2);
  uint64_t v38 = (char *)v37 + v1[14];
  *uint64_t v37 = 10;
  *(void *)uint64_t v38 = "adjustedRankedUtteranceContext";
  *((void *)v38 + 1) = 30;
  v38[16] = 2;
  v7();
  uint64_t v39 = (void *)(v52 + v3 + 17 * v2);
  uint64_t v40 = (char *)v39 + v1[14];
  *uint64_t v39 = 21;
  *(void *)uint64_t v40 = "adjustedRankedUtteranceContextIsPresent";
  *((void *)v40 + 1) = 39;
  v40[16] = 2;
  v7();
  uint64_t v41 = (void *)(v52 + v3 + 18 * v2);
  uint64_t v42 = (char *)v41 + v1[14];
  void *v41 = 11;
  *(void *)uint64_t v42 = "toolRetrievalResponse";
  *((void *)v42 + 1) = 21;
  v42[16] = 2;
  v7();
  uint64_t v43 = (void *)(v52 + v3 + 19 * v2);
  uint64_t v44 = (char *)v43 + v1[14];
  *uint64_t v43 = 22;
  *(void *)uint64_t v44 = "dynamicEnumerationEntities";
  *((void *)v44 + 1) = 26;
  v44[16] = 2;
  v7();
  uint64_t v45 = (void *)(v52 + v3 + 20 * v2);
  uint64_t v46 = (char *)v45 + v1[14];
  *uint64_t v45 = 23;
  *(void *)uint64_t v46 = "dynamicEnumerationEntitiesIsPresent";
  *((void *)v46 + 1) = 35;
  v46[16] = 2;
  v7();
  uint64_t v47 = (void *)(v52 + v3 + 21 * v2);
  uint64_t v48 = (char *)v47 + v1[14];
  void *v47 = 24;
  *(void *)uint64_t v48 = "context";
  *((void *)v48 + 1) = 7;
  v48[16] = 2;
  v7();
  uint64_t v49 = (void *)(v52 + v3 + 22 * v2);
  uint64_t v50 = (char *)v49 + v1[14];
  void *v49 = 25;
  *(void *)uint64_t v50 = "contextIsPresent";
  *((void *)v50 + 1) = 16;
  v50[16] = 2;
  v7();
  return sub_253B07520();
}

uint64_t static ContextProtoQueryDecorationOutput._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA8B8, (uint64_t)qword_269CDF740, a1);
}

void ContextProtoQueryDecorationOutput.decodeMessage<A>(decoder:)()
{
  uint64_t v1 = sub_2535B3890();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_2535B387C();
          sub_2535A3740();
          break;
        case 4:
          sub_2535B387C();
          sub_2535A37DC();
          break;
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
          sub_2535B4448();
          break;
        case 11:
          sub_2535B387C();
          sub_2535A3878();
          break;
        case 12:
          sub_2535B387C();
          sub_2535A0E50();
          break;
        case 13:
        case 14:
        case 15:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 21:
        case 23:
        case 25:
          sub_253B07270();
          break;
        case 22:
          sub_2535B387C();
          sub_2535A3928();
          break;
        case 24:
          sub_2535B387C();
          sub_2535A39C4();
          break;
        default:
          break;
      }
      uint64_t v1 = sub_2535B3A9C();
    }
  }
}

uint64_t sub_2535A3740()
{
  return sub_253B07370();
}

uint64_t sub_2535A37DC()
{
  return sub_253B07370();
}

uint64_t sub_2535A3878()
{
  return sub_253B07380();
}

uint64_t sub_2535A3928()
{
  return sub_253B07370();
}

uint64_t sub_2535A39C4()
{
  return sub_253B07370();
}

void ContextProtoQueryDecorationOutput.traverse<A>(visitor:)()
{
  sub_2535B4280();
  sub_2535B4688();
  if (!*(void *)(*(void *)(v1 + 16) + 16)
    || (type metadata accessor for ContextProtoRetrievedContext(0),
        sub_2535B3644(&qword_269CDF9E0, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedContext), sub_2535B464C(), sub_2535B3AB4(), !v0))
  {
    if (!*(void *)(*(void *)(v1 + 32) + 16)
      || (type metadata accessor for ContextProtoRetrievedContext(0),
          sub_2535B3644(&qword_269CDF9E0, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedContext), sub_2535B3AB4(), !v0))
    {
      if (!*(void *)(*(void *)(v1 + 48) + 16) || (sub_2535B3C64(), !v0))
      {
        if (!*(void *)(*(void *)(v1 + 64) + 16) || (sub_2535B3C64(), !v0))
        {
          if (!*(void *)(*(void *)(v1 + 80) + 16) || (sub_2535B3C64(), !v0))
          {
            if (!*(void *)(*(void *)(v1 + 96) + 16) || (sub_2535B3C64(), !v0))
            {
              if (!*(void *)(*(void *)(v1 + 112) + 16) || (sub_2535B3C64(), !v0))
              {
                if (!*(void *)(*(void *)(v1 + 128) + 16) || (sub_2535B3C64(), !v0))
                {
                  sub_2535B3950();
                  sub_2535A3EBC(v2);
                  if (!v0)
                  {
                    sub_2535B4594();
                    if (v3)
                    {
                      type metadata accessor for ContextProtoSpanMatchedEntity(0);
                      sub_2535B3644(&qword_269CDF9E8, (void (*)(uint64_t))type metadata accessor for ContextProtoSpanMatchedEntity);
                      sub_2535B3D8C();
                      sub_2535B3AB4();
                    }
                    if (*(unsigned char *)(v1 + 8) == 1) {
                      sub_2535B3A80();
                    }
                    if (*(unsigned char *)(v1 + 24) == 1) {
                      sub_2535B3A80();
                    }
                    if (*(unsigned char *)(v1 + 40) == 1) {
                      sub_2535B3A80();
                    }
                    if (*(unsigned char *)(v1 + 56) == 1) {
                      sub_2535B3A80();
                    }
                    if (*(unsigned char *)(v1 + 72) == 1) {
                      sub_2535B3A80();
                    }
                    if (*(unsigned char *)(v1 + 88) == 1) {
                      sub_2535B3A80();
                    }
                    if (*(unsigned char *)(v1 + 104) == 1) {
                      sub_2535B3A80();
                    }
                    if (*(unsigned char *)(v1 + 120) == 1) {
                      sub_2535B3A80();
                    }
                    if (*(unsigned char *)(v1 + 136) == 1) {
                      sub_2535B3A80();
                    }
                    if (*(void *)(*(void *)(v1 + 144) + 16))
                    {
                      type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
                      sub_2535B3644(&qword_269CDF9F0, (void (*)(uint64_t))type metadata accessor for ContextProtoDynamicEnumerationEntity);
                      sub_2535B3D8C();
                      sub_2535B3AB4();
                    }
                    if (*(unsigned char *)(v1 + 152) == 1) {
                      sub_2535B3A80();
                    }
                    if (*(void *)(*(void *)(v1 + 160) + 16))
                    {
                      type metadata accessor for ContextProtoRetrievedContext(0);
                      sub_2535B3644(&qword_269CDF9E0, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedContext);
                      sub_2535B3D8C();
                      sub_2535B3AB4();
                    }
                    if (*(unsigned char *)(v1 + 168) == 1) {
                      sub_2535B3A80();
                    }
                    type metadata accessor for ContextProtoQueryDecorationOutput(0);
                    sub_2535B3CAC();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  sub_2535B42DC();
}

uint64_t sub_2535A3EBC(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDFA00);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  MEMORY[0x270FA5388](DecorationToolRetrievalResponse);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DecorationOutput = type metadata accessor for ContextProtoQueryDecorationOutput(0);
  sub_2535B37D8(a1 + *(int *)(DecorationOutput + 104), (uint64_t)v4, &qword_269CDFA00);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, DecorationToolRetrievalResponse) == 1)return sub_2534B2064((uint64_t)v4, &qword_269CDFA00); {
  sub_2535B3724((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
  }
  sub_2535B3644(&qword_269CDFDF0, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
  sub_253B07500();
  return sub_2535B3780((uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
}

void static ContextProtoQueryDecorationOutput.== infix(_:_:)()
{
  sub_2534B3258();
  sub_2535B3980();
  sub_253465998();
  uint64_t v36 = v8;
  uint64_t v37 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v35 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_2534DA444();
  uint64_t DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(v11);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v13);
  sub_2534966B0();
  uint64_t v14 = sub_253462A5C(&qword_269CDF9F8);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v15);
  sub_2534847E0();
  uint64_t v16 = sub_253462A5C(&qword_269CDFA00);
  uint64_t v17 = sub_25346CB4C(v16);
  MEMORY[0x270FA5388](v17);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v18);
  sub_2535B45DC();
  MEMORY[0x270FA5388](v19);
  sub_2535B3D6C();
  sub_2534B6BA0();
  if ((v20 & 1) == 0) {
    goto LABEL_34;
  }
  if (*(unsigned __int8 *)(v2 + 8) != *(unsigned __int8 *)(v1 + 8)) {
    goto LABEL_34;
  }
  sub_2534B7C3C();
  if ((v21 & 1) == 0) {
    goto LABEL_34;
  }
  if (*(unsigned __int8 *)(v2 + 24) != *(unsigned __int8 *)(v1 + 24)) {
    goto LABEL_34;
  }
  sub_2534B7C3C();
  if ((v22 & 1) == 0
    || *(unsigned __int8 *)(v2 + 40) != *(unsigned __int8 *)(v1 + 40)
    || (sub_2534B5C40(*(void **)(v2 + 48), *(void **)(v1 + 48)) & 1) == 0
    || *(unsigned __int8 *)(v2 + 56) != *(unsigned __int8 *)(v1 + 56)
    || (sub_2534B5C40(*(void **)(v2 + 64), *(void **)(v1 + 64)) & 1) == 0
    || *(unsigned __int8 *)(v2 + 72) != *(unsigned __int8 *)(v1 + 72)
    || (sub_2534B5C40(*(void **)(v2 + 80), *(void **)(v1 + 80)) & 1) == 0
    || *(unsigned __int8 *)(v2 + 88) != *(unsigned __int8 *)(v1 + 88)
    || (sub_2534B5C40(*(void **)(v2 + 96), *(void **)(v1 + 96)) & 1) == 0
    || *(unsigned __int8 *)(v2 + 104) != *(unsigned __int8 *)(v1 + 104)
    || (sub_2534B5C40(*(void **)(v2 + 112), *(void **)(v1 + 112)) & 1) == 0
    || *(unsigned __int8 *)(v2 + 120) != *(unsigned __int8 *)(v1 + 120)
    || (sub_2534B5C40(*(void **)(v2 + 128), *(void **)(v1 + 128)) & 1) == 0
    || *(unsigned __int8 *)(v2 + 136) != *(unsigned __int8 *)(v1 + 136))
  {
    goto LABEL_34;
  }
  uint64_t DecorationOutput = type metadata accessor for ContextProtoQueryDecorationOutput(0);
  sub_2535B37D8(v2 + *(int *)(DecorationOutput + 104), v6, &qword_269CDFA00);
  sub_2535B37D8(v1 + *(int *)(DecorationOutput + 104), (uint64_t)v0, &qword_269CDFA00);
  uint64_t v23 = v3 + *(int *)(v14 + 48);
  sub_2535B37D8(v6, v3, &qword_269CDFA00);
  uint64_t v34 = v23;
  sub_2535B37D8((uint64_t)v0, v23, &qword_269CDFA00);
  uint64_t v24 = sub_2534D8B48(v3, 1, DecorationToolRetrievalResponse);
  if (!v26)
  {
    sub_2535B410C(v24, v25, &qword_269CDFA00);
    sub_2534D8B48(v34, 1, DecorationToolRetrievalResponse);
    if (!v26)
    {
      sub_2535B3724(v34, v4, (void (*)(void))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
      sub_253578AC4();
      static ContextProtoQueryDecorationToolRetrievalResponse.== infix(_:_:)();
      char v28 = v27;
      sub_2535B3780(v4, (void (*)(void))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
      sub_2534B2064((uint64_t)v0, &qword_269CDFA00);
      sub_2535B4490();
      sub_2535B3780(v5, (void (*)(void))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
      sub_2535B4550();
      if ((v28 & 1) == 0) {
        goto LABEL_34;
      }
      goto LABEL_29;
    }
    sub_2534B2064((uint64_t)v0, &qword_269CDFA00);
    sub_2535B3B9C();
    sub_2535B3780(v5, (void (*)(void))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
LABEL_27:
    sub_2534B2064(v3, &qword_269CDF9F8);
    goto LABEL_34;
  }
  sub_2534B2064((uint64_t)v0, &qword_269CDFA00);
  sub_2535B4490();
  sub_2534D8B48(v34, 1, DecorationToolRetrievalResponse);
  if (!v26) {
    goto LABEL_27;
  }
  sub_2534B2064(v3, &qword_269CDFA00);
LABEL_29:
  sub_2534B7C90();
  if ((v29 & 1) != 0 && *(unsigned __int8 *)(v2 + 152) == *(unsigned __int8 *)(v1 + 152))
  {
    sub_2534B7C3C();
    if ((v30 & 1) != 0 && *(unsigned __int8 *)(v2 + 168) == *(unsigned __int8 *)(v1 + 168))
    {
      sub_2535B45B4();
      sub_253535668();
      v0();
      sub_253535668();
      v0();
      sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
      sub_253B096B0();
      uint64_t v31 = *(void (**)(void))(v3 + 8);
      sub_2534D91A0();
      v31();
      sub_2534D91A0();
      v31();
    }
  }
LABEL_34:
  sub_2535B4124();
  sub_253465A14();
}

uint64_t ContextProtoQueryDecorationOutput.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoQueryDecorationOutput);
}

unint64_t sub_2535A45CC()
{
  return 0xD00000000000001DLL;
}

void sub_2535A45F4()
{
}

void sub_2535A460C()
{
}

uint64_t sub_2535A4624(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFEC0, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationOutput);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535A46A4()
{
  sub_2535B3644(&qword_269CDFD10, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationOutput);
  return sub_253B073E0();
}

uint64_t sub_2535A4714()
{
  sub_2535B3644(&qword_269CDFD10, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationOutput);
  return sub_253B073F0();
}

unint64_t static ContextProtoQueryDecorationInput.protoMessageName.getter()
{
  return sub_2535B3A28(28);
}

uint64_t sub_2535A47AC()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF758);
  sub_253462BD4(v0, (uint64_t)qword_269CDF758);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B36A50;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "query";
  *(void *)(v6 + 8) = 5;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 8;
  *(void *)unint64_t v10 = "requestId";
  *(void *)(v10 + 8) = 9;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 9;
  *(void *)uint64_t v12 = "caller";
  *((void *)v12 + 1) = 6;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 10;
  *(void *)uint64_t v14 = "contextId";
  *((void *)v14 + 1) = 9;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 11;
  *(void *)uint64_t v16 = "loggingSalt";
  *((void *)v16 + 1) = 11;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 12;
  *(void *)uint64_t v18 = "servicesExecuted";
  *((void *)v18 + 1) = 16;
  v18[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoQueryDecorationInput._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA8C0, (uint64_t)qword_269CDF758, a1);
}

void ContextProtoQueryDecorationInput.decodeMessage<A>(decoder:)()
{
  sub_2535B45A0();
  uint64_t v1 = sub_2535B3890();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          sub_2535B3CD4();
          break;
        case 8:
        case 10:
        case 11:
          sub_2535B3B84();
          break;
        case 9:
          uint64_t v3 = sub_2535B387C();
          sub_2535A67A8(v3, v4, v5, v6, v7);
          break;
        case 12:
          sub_2535B387C();
          sub_2535A4B90();
          break;
        default:
          break;
      }
      uint64_t v1 = sub_2535B3A9C();
    }
  }
  sub_2535B4660();
}

uint64_t sub_2535A4B90()
{
  return sub_253B07250();
}

void ContextProtoQueryDecorationInput.traverse<A>(visitor:)()
{
  sub_2535B4280();
  sub_2535B4674();
  sub_2535B399C();
  if (!v2 || (sub_2535B3B2C(), !v0))
  {
    sub_2535B3950();
    sub_2535AA4B4(v3);
    if (!v0)
    {
      if (*(unsigned char *)(v1 + 16))
      {
        sub_2535B0DE8();
        sub_2535B4038();
      }
      sub_2535B3950();
      sub_2535A4D34(v4);
      sub_2535B3950();
      sub_2535A4D68(v5);
      if (*(void *)(*(void *)(v1 + 24) + 16))
      {
        sub_2535B0E34();
        sub_253B07430();
      }
      type metadata accessor for ContextProtoQueryDecorationInput(0);
      sub_2535B3B48();
    }
  }
  sub_2535B42DC();
}

uint64_t sub_2535A4D34(uint64_t result)
{
  if (*(void *)(result + 56))
  {
    sub_2535B4324();
    return sub_2535B430C();
  }
  return result;
}

uint64_t sub_2535A4D68(uint64_t result)
{
  if (*(void *)(result + 72))
  {
    sub_2535B4324();
    return sub_2535B430C();
  }
  return result;
}

void static ContextProtoQueryDecorationInput.== infix(_:_:)()
{
  sub_2535B3C98();
  sub_2535B3980();
  sub_253465998();
  MEMORY[0x270FA5388](v3);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v4);
  sub_2535B3A30();
  BOOL v7 = v7 && v5 == v6;
  if (!v7 && (sub_253B0A4C0() & 1) == 0) {
    goto LABEL_36;
  }
  sub_2535B45F0();
  if (!v9)
  {
    if (v8) {
      goto LABEL_36;
    }
LABEL_15:
    if (*(unsigned __int8 *)(v1 + 16) != *(unsigned __int8 *)(v0 + 16)) {
      goto LABEL_36;
    }
    uint64_t v13 = *(void *)(v0 + 56);
    if (*(void *)(v1 + 56))
    {
      if (!v13) {
        goto LABEL_36;
      }
      sub_2535B4248();
      BOOL v16 = v7 && v14 == v15;
      if (!v16 && (sub_253B0A4C0() & 1) == 0) {
        goto LABEL_36;
      }
    }
    else if (v13)
    {
      goto LABEL_36;
    }
    uint64_t v17 = *(void *)(v0 + 72);
    if (*(void *)(v1 + 72))
    {
      if (!v17) {
        goto LABEL_36;
      }
      sub_2535B4238();
      BOOL v20 = v7 && v18 == v19;
      if (!v20 && (sub_253B0A4C0() & 1) == 0) {
        goto LABEL_36;
      }
    }
    else if (v17)
    {
      goto LABEL_36;
    }
    if (sub_2534B7CE4(*(void *)(v1 + 24), *(void *)(v0 + 24)))
    {
      type metadata accessor for ContextProtoQueryDecorationInput(0);
      uint64_t v21 = sub_2535B38B8();
      ((void (*)(uint64_t))v2)(v21);
      sub_2535B3914();
      v2();
      sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
      sub_2535B3960();
      uint64_t v22 = sub_2535B3924();
      ((void (*)(uint64_t))v0)(v22);
      sub_2535B3940();
      ((void (*)(void))v0)();
    }
    goto LABEL_36;
  }
  if (v8)
  {
    sub_2535B3FD8();
    BOOL v12 = v7 && v10 == v11;
    if (v12 || (sub_253B0A4C0() & 1) != 0) {
      goto LABEL_15;
    }
  }
LABEL_36:
  sub_2535B3D00();
  sub_25346CD04();
}

uint64_t ContextProtoQueryDecorationInput.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoQueryDecorationInput);
}

unint64_t sub_2535A4FB8()
{
  return 0xD00000000000001CLL;
}

void sub_2535A4FE0()
{
}

void sub_2535A4FF8()
{
}

uint64_t sub_2535A5010(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFEB8, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationInput);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535A5090()
{
  sub_2535B3644(&qword_269CDFD28, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationInput);
  return sub_253B073E0();
}

uint64_t sub_2535A5100()
{
  sub_2535B3644(&qword_269CDFD28, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationInput);
  return sub_253B073F0();
}

unint64_t static ContextProtoDynamicEnumerationEntity.protoMessageName.getter()
{
  return sub_2535B3A28(32);
}

uint64_t sub_2535A5198()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF770);
  sub_253462BD4(v0, (uint64_t)qword_269CDF770);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B34E30;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "identifier";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "parameterTypeInstance";
  *((void *)v10 + 1) = 21;
  v10[16] = 2;
  v9();
  uint64_t v11 = (void *)((char *)v5 + 2 * v2);
  BOOL v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)BOOL v12 = "typedValue";
  *((void *)v12 + 1) = 10;
  v12[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoDynamicEnumerationEntity._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA8C8, (uint64_t)qword_269CDF770, a1);
}

uint64_t ContextProtoDynamicEnumerationEntity.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_2535B39E4(a1, a2);
  while (1)
  {
    uint64_t result = sub_253B07230();
    if (v2 || (v4 & 1) != 0) {
      break;
    }
    switch(result)
    {
      case 3:
        sub_2535B387C();
        sub_2535A54E0();
        break;
      case 2:
        sub_2535B387C();
        sub_2535A5430();
        break;
      case 1:
        sub_2535B3CD4();
        break;
    }
    sub_2534D9B10();
  }
  return result;
}

uint64_t sub_2535A5430()
{
  return sub_253B07380();
}

uint64_t sub_2535A54E0()
{
  return sub_253B07380();
}

uint64_t ContextProtoDynamicEnumerationEntity.traverse<A>(visitor:)()
{
  sub_2535B399C();
  if (!v1 || (uint64_t result = sub_2535B3C1C(), !v0))
  {
    uint64_t v3 = sub_2535B3BB4();
    uint64_t result = sub_2535A5620(v3, v4, v5, v6);
    if (!v0)
    {
      uint64_t v7 = sub_2535B3BB4();
      sub_2535A5814(v7, v8, v9, v10);
      type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
      return sub_2535B3AE0();
    }
  }
  return result;
}

uint64_t sub_2535A5620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = sub_253462A5C(&qword_269CDFA30);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253B08E60();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  sub_2535B37D8(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_269CDFA30);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v8) == 1) {
    return sub_2534B2064((uint64_t)v7, &qword_269CDFA30);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  sub_2535B3644(&qword_269CDFF70, MEMORY[0x263F802D0]);
  sub_253B07500();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_2535A5814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = sub_253462A5C(&qword_269CDCBC8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253B08E50();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  sub_2535B37D8(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_269CDCBC8);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v8) == 1) {
    return sub_2534B2064((uint64_t)v7, &qword_269CDCBC8);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  sub_2535B3644(&qword_269CDFF38, MEMORY[0x263F802B0]);
  sub_253B07500();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void static ContextProtoDynamicEnumerationEntity.== infix(_:_:)()
{
  sub_2534B3258();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = sub_253B07160();
  sub_253465998();
  uint64_t v70 = v8;
  MEMORY[0x270FA5388](v9);
  v69[4] = (uint64_t)v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  sub_2535B4220(v12, v13, v14, v15, v16, v17, v18, v19, v69[0]);
  uint64_t v77 = sub_253B08E50();
  sub_253465998();
  uint64_t v71 = v20;
  MEMORY[0x270FA5388](v21);
  sub_2534D9248(v22, v69[0]);
  uint64_t v73 = sub_253462A5C((uint64_t *)&off_269CDCBD0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v23);
  sub_2534D8F84(v24, v69[0]);
  uint64_t v25 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v26 = sub_25346CB4C(v25);
  MEMORY[0x270FA5388](v26);
  uint64_t v72 = (uint64_t)v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v28);
  char v74 = (char *)v69 - v29;
  sub_2534B324C();
  MEMORY[0x270FA5388](v30);
  uint64_t v75 = (uint64_t)v69 - v31;
  sub_253483660();
  uint64_t v32 = sub_253B08E60();
  sub_253465998();
  uint64_t v78 = v33;
  MEMORY[0x270FA5388](v34);
  sub_25346CC6C();
  uint64_t v35 = sub_253462A5C(&qword_269CDFA28);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v36);
  sub_25347FAAC();
  uint64_t v37 = sub_253462A5C(&qword_269CDFA30);
  uint64_t v38 = sub_25346CB4C(v37);
  MEMORY[0x270FA5388](v38);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v39);
  sub_25351C9B0();
  MEMORY[0x270FA5388](v40);
  uint64_t v42 = (char *)v69 - v41;
  uint64_t v43 = *v6;
  uint64_t v44 = v6[1];
  uint64_t v79 = v6;
  char v80 = v4;
  BOOL v45 = v43 == *v4 && v44 == v4[1];
  if (!v45 && (sub_253B0A4C0() & 1) == 0) {
    goto LABEL_26;
  }
  v69[1] = v7;
  uint64_t v46 = type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  uint64_t v47 = sub_2535B3F98(*(int *)(v46 + 20));
  sub_2535B37D8(v47, (uint64_t)v42, &qword_269CDFA30);
  sub_2535B37D8((uint64_t)v80 + *(int *)(v46 + 20), v1, &qword_269CDFA30);
  uint64_t v48 = v2 + *(int *)(v35 + 48);
  sub_2535B37D8((uint64_t)v42, v2, &qword_269CDFA30);
  sub_2535B37D8(v1, v48, &qword_269CDFA30);
  sub_2534D8B48(v2, 1, v32);
  if (v45)
  {
    sub_2535B43DC();
    sub_2535B4130();
    sub_2534D8B48(v48, 1, v32);
    if (v45)
    {
      sub_2534B2064(v2, &qword_269CDFA30);
      goto LABEL_16;
    }
LABEL_14:
    uint64_t v51 = &qword_269CDFA28;
    uint64_t v52 = v2;
LABEL_25:
    sub_2534B2064(v52, v51);
    goto LABEL_26;
  }
  sub_2535B37D8(v2, v0, &qword_269CDFA30);
  sub_2534D8B48(v48, 1, v32);
  if (v49)
  {
    sub_2534B2064(v1, &qword_269CDFA30);
    sub_2535B4424();
    sub_2535B3F64();
    v50();
    goto LABEL_14;
  }
  uint64_t v53 = v78;
  sub_2535B3CF0();
  v54();
  sub_2535B3644(&qword_269CDFA38, MEMORY[0x263F802D0]);
  HIDWORD(v69[0]) = sub_253B096B0();
  uint64_t v55 = *(void (**)(void))(v53 + 8);
  sub_2534D91A0();
  v55();
  sub_2534B2064(v1, &qword_269CDFA30);
  sub_2534B2064((uint64_t)v42, &qword_269CDFA30);
  sub_2534D91A0();
  v55();
  sub_2534B2064(v2, &qword_269CDFA30);
  if ((v69[0] & 0x100000000) == 0) {
    goto LABEL_26;
  }
LABEL_16:
  uint64_t v56 = sub_2535B3F98(*(int *)(v46 + 24));
  uint64_t v57 = v75;
  sub_2535B37D8(v56, v75, &qword_269CDCBC8);
  uint64_t v58 = (uint64_t)v74;
  sub_2535B4054((uint64_t)v80 + *(int *)(v46 + 24));
  uint64_t v59 = v76;
  uint64_t v60 = v76 + *(int *)(v73 + 48);
  sub_2535B37D8(v57, v76, &qword_269CDCBC8);
  sub_2535B3F2C(v58);
  uint64_t v61 = v77;
  sub_2534D8B48(v59, 1, v77);
  if (v45)
  {
    sub_2534B2064(v58, &qword_269CDCBC8);
    sub_2535B4478();
    sub_2534D8B48(v60, 1, v61);
    if (v45)
    {
      sub_2534B2064(v59, &qword_269CDCBC8);
LABEL_28:
      uint64_t v67 = v70;
      sub_2535B4608();
      sub_2535B3A00();
      ((void (*)(void))qword_269CDCBC8)();
      sub_2535B3A00();
      ((void (*)(void))qword_269CDCBC8)();
      sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
      sub_2535B3D38();
      char v68 = *(void (**)(void))(v67 + 8);
      sub_2535B3B1C();
      v68();
      sub_2535B3B1C();
      v68();
      goto LABEL_26;
    }
    goto LABEL_24;
  }
  sub_2535B37D8(v59, v72, &qword_269CDCBC8);
  sub_2534D8B48(v60, 1, v61);
  if (v62)
  {
    sub_2535B43DC();
    sub_2535B3B9C();
    uint64_t v63 = sub_2535B4148();
    v64(v63);
LABEL_24:
    uint64_t v51 = (uint64_t *)&off_269CDCBD0;
    uint64_t v52 = v59;
    goto LABEL_25;
  }
  uint64_t v65 = v71;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32))(v69[2], v60, v61);
  sub_2535B3644(&qword_269CDCBD8, MEMORY[0x263F802B0]);
  LODWORD(v78) = sub_253B096B0();
  char v66 = *(void (**)(void))(v65 + 8);
  sub_2534D91A0();
  v66();
  sub_2535B41B8();
  sub_2535B4478();
  sub_2535B4148();
  sub_2534D91A0();
  v66();
  sub_2534B2064(v59, &qword_269CDCBC8);
  if (v78) {
    goto LABEL_28;
  }
LABEL_26:
  sub_253465A14();
}

uint64_t ContextProtoDynamicEnumerationEntity.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoDynamicEnumerationEntity);
}

unint64_t sub_2535A614C()
{
  return 0xD000000000000020;
}

uint64_t sub_2535A6174(uint64_t a1, uint64_t a2)
{
  return ContextProtoDynamicEnumerationEntity.decodeMessage<A>(decoder:)(a1, a2);
}

uint64_t sub_2535A618C()
{
  return ContextProtoDynamicEnumerationEntity.traverse<A>(visitor:)();
}

uint64_t sub_2535A61A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFEB0, (void (*)(uint64_t))type metadata accessor for ContextProtoDynamicEnumerationEntity);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535A6224()
{
  sub_2535B3644(&qword_269CDF9F0, (void (*)(uint64_t))type metadata accessor for ContextProtoDynamicEnumerationEntity);
  return sub_253B073E0();
}

uint64_t sub_2535A6294()
{
  sub_2535B3644(&qword_269CDF9F0, (void (*)(uint64_t))type metadata accessor for ContextProtoDynamicEnumerationEntity);
  return sub_253B073F0();
}

unint64_t static ContextProtoRetrievedTool.protoMessageName.getter()
{
  return sub_2535B3A28(21);
}

uint64_t sub_2535A632C()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF788);
  sub_253462BD4(v0, (uint64_t)qword_269CDF788);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B34E60;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "definition";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "similarityScore";
  *(void *)(v10 + 8) = 15;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "sampleInvocations";
  *((void *)v12 + 1) = 17;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 4;
  *(void *)uint64_t v14 = "stage";
  *((void *)v14 + 1) = 5;
  v14[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoRetrievedTool._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA8D0, (uint64_t)qword_269CDF788, a1);
}

uint64_t ContextProtoRetrievedTool.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_2535B3890();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_2535B387C();
          sub_2535A665C();
          break;
        case 2:
          sub_2535B4170();
          break;
        case 3:
          sub_2535B387C();
          sub_2535A670C();
          break;
        case 4:
          uint64_t v3 = sub_2535B4384();
          sub_2535A67A8(v3, v4, v5, v6, v7);
          break;
        default:
          break;
      }
      uint64_t result = sub_2535B3A9C();
    }
  }
  return result;
}

uint64_t sub_2535A665C()
{
  return sub_253B07380();
}

uint64_t sub_2535A670C()
{
  return sub_253B07370();
}

uint64_t sub_2535A67A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return sub_253B07290();
}

uint64_t ContextProtoRetrievedTool.traverse<A>(visitor:)()
{
  uint64_t v2 = sub_2535B46F0();
  uint64_t result = sub_2535A6948(v2);
  if (!v1)
  {
    if (*(float *)v0 != 0.0) {
      sub_2535B42F0();
    }
    if (*(void *)(*(void *)(v0 + 8) + 16))
    {
      type metadata accessor for ContextProtoSampleInvocation(0);
      sub_2535B3644(&qword_269CDFA48, (void (*)(uint64_t))type metadata accessor for ContextProtoSampleInvocation);
      sub_2535B464C();
      sub_2535B3AB4();
    }
    if (*(unsigned char *)(v0 + 16))
    {
      sub_2535B0E80();
      sub_2535B4038();
    }
    type metadata accessor for ContextProtoRetrievedTool(0);
    return sub_2535B3B48();
  }
  return result;
}

uint64_t sub_2535A6948(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDCB80);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ContextProtoRetrievedTool(0);
  sub_2535B37D8(a1 + *(int *)(v8 + 28), (uint64_t)v4, &qword_269CDCB80);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) == 1) {
    return sub_2534B2064((uint64_t)v4, &qword_269CDCB80);
  }
  sub_2535B3724((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.Definition);
  sub_2535B3644(&qword_269CDFD70, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool.Definition);
  sub_253B07500();
  return sub_2535B3780((uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.Definition);
}

void static ContextProtoRetrievedTool.== infix(_:_:)()
{
  sub_2534B3258();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_253B07160();
  sub_253465998();
  uint64_t v37 = v9;
  uint64_t v38 = v8;
  MEMORY[0x270FA5388](v8);
  sub_2534659D8();
  v36[1] = v10;
  sub_2534B324C();
  MEMORY[0x270FA5388](v11);
  v36[0] = (char *)v36 - v12;
  uint64_t v13 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v14);
  sub_2534B34A4();
  uint64_t v15 = sub_253462A5C(&qword_269CDCB88);
  uint64_t v16 = v15 - 8;
  MEMORY[0x270FA5388](v15);
  sub_2534847E0();
  uint64_t v17 = sub_253462A5C(&qword_269CDCB80);
  uint64_t v18 = sub_25346CB4C(v17);
  MEMORY[0x270FA5388](v18);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v19);
  sub_25351C9B0();
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)v36 - v21;
  uint64_t v23 = type metadata accessor for ContextProtoRetrievedTool(0);
  uint64_t v24 = *(int *)(v23 + 28);
  uint64_t v39 = v7;
  uint64_t v25 = (uint64_t)v7 + v24;
  uint64_t v26 = v23;
  sub_2535B37D8(v25, (uint64_t)v22, &qword_269CDCB80);
  uint64_t v27 = *(int *)(v26 + 28);
  uint64_t v40 = v5;
  sub_2535B37D8((uint64_t)v5 + v27, v0, &qword_269CDCB80);
  uint64_t v28 = v1 + *(int *)(v16 + 56);
  sub_2535B37D8((uint64_t)v22, v1, &qword_269CDCB80);
  sub_2535B37D8(v0, v28, &qword_269CDCB80);
  sub_2534D8B48(v1, 1, v13);
  if (!v29)
  {
    sub_2535B37D8(v1, v3, &qword_269CDCB80);
    sub_2534D8B48(v28, 1, v13);
    if (!v29)
    {
      sub_2535B3724(v28, v2, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.Definition);
      static ContextProtoRetrievedTool.Definition.== infix(_:_:)();
      uint64_t v28 = v30;
      sub_2535B3780(v2, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.Definition);
      sub_2534B2064(v0, &qword_269CDCB80);
      sub_2534B2064((uint64_t)v22, &qword_269CDCB80);
      sub_2535B3780(v3, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.Definition);
      sub_2535B4550();
      if ((v28 & 1) == 0) {
        goto LABEL_15;
      }
      goto LABEL_11;
    }
    sub_2534B2064(v0, &qword_269CDCB80);
    sub_2535B41B8();
    sub_2535B3780(v3, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.Definition);
LABEL_9:
    sub_2534B2064(v1, &qword_269CDCB88);
    goto LABEL_15;
  }
  sub_2534B2064(v0, &qword_269CDCB80);
  sub_2534B2064((uint64_t)v22, &qword_269CDCB80);
  sub_2534D8B48(v28, 1, v13);
  if (!v29) {
    goto LABEL_9;
  }
  sub_2534B2064(v1, &qword_269CDCB80);
LABEL_11:
  uint64_t v31 = v39;
  uint64_t v32 = v40;
  if (*v39 == *v40)
  {
    sub_2534B9338();
    if ((v33 & 1) != 0 && *((unsigned __int8 *)v31 + 16) == *((unsigned __int8 *)v32 + 16))
    {
      uint64_t v34 = v37;
      sub_2535B4608();
      sub_2535B3A00();
      ((void (*)(void))v28)();
      sub_2535B3A00();
      ((void (*)(void))v28)();
      sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
      sub_2535B3D38();
      uint64_t v35 = *(void (**)(void))(v34 + 8);
      sub_2535B3B1C();
      v35();
      sub_2535B3B1C();
      v35();
    }
  }
LABEL_15:
  sub_2535B4124();
  sub_253465A14();
}

uint64_t ContextProtoRetrievedTool.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoRetrievedTool);
}

unint64_t sub_2535A6F40()
{
  return 0xD000000000000015;
}

uint64_t sub_2535A6F68()
{
  return ContextProtoRetrievedTool.decodeMessage<A>(decoder:)();
}

uint64_t sub_2535A6F80()
{
  return ContextProtoRetrievedTool.traverse<A>(visitor:)();
}

uint64_t sub_2535A6F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFEA8, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535A7018()
{
  sub_2535B3644(&qword_269CDFAD0, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool);
  return sub_253B073E0();
}

uint64_t sub_2535A7088()
{
  sub_2535B3644(&qword_269CDFAD0, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool);
  return sub_253B073F0();
}

uint64_t sub_2535A7108()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF7A0);
  sub_253462BD4(v0, (uint64_t)qword_269CDF7A0);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B34E60;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "one";
  *(void *)(v6 + 8) = 3;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "two";
  *(void *)(v10 + 8) = 3;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 2;
  *(void *)uint64_t v12 = "three";
  *((void *)v12 + 1) = 5;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 3;
  *(void *)uint64_t v14 = "four";
  *((void *)v14 + 1) = 4;
  v14[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoRetrievedTool.Stage._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA8D8, (uint64_t)qword_269CDF7A0, a1);
}

uint64_t sub_2535A7368()
{
  uint64_t result = sub_253B09860();
  qword_269CDF7B8 = 0xD000000000000015;
  unk_269CDF7C0 = 0x8000000253B0DA70;
  return result;
}

uint64_t static ContextProtoRetrievedTool.Definition.protoMessageName.getter()
{
  if (qword_269CDA8E0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_269CDF7B8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2535A7444()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF7C8);
  sub_253462BD4(v0, (uint64_t)qword_269CDF7C8);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B36A70;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "implementation";
  *(void *)(v6 + 8) = 14;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "assistantSchema";
  *(void *)(v10 + 8) = 15;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "entitySetter";
  *((void *)v12 + 1) = 12;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 4;
  *(void *)uint64_t v14 = "clientAction";
  *((void *)v14 + 1) = 12;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "uiControl";
  *((void *)v16 + 1) = 9;
  v16[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoRetrievedTool.Definition._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA8E8, (uint64_t)qword_269CDF7C8, a1);
}

uint64_t ContextProtoRetrievedTool.Definition.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_2535B39E4(a1, a2);
  while (1)
  {
    uint64_t result = sub_253B07230();
    if (v2 || (v4 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        sub_2535B3908();
        sub_2535A77C8(v5, v6, v7, v8);
        break;
      case 2:
        sub_2535B3908();
        sub_2535A7C80(v9, v10, v11, v12);
        break;
      case 3:
        sub_2535B3908();
        sub_2535A813C(v13, v14, v15, v16);
        break;
      case 4:
        sub_2535B3908();
        sub_2535A85F8(v17, v18, v19, v20);
        break;
      case 5:
        sub_2535B3908();
        sub_2535A8AB4(v21, v22, v23, v24);
        break;
      default:
        break;
    }
    sub_2534D9B10();
  }
}

uint64_t sub_2535A77C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v41 = a2;
  uint64_t v5 = sub_253B08F30();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v36 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v33 - v8;
  uint64_t v10 = sub_253462A5C(&qword_269CDCB70);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v33 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CDFA70);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v33 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v33 - v23, 1, 1, v5);
  uint64_t v34 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_269CDCB70);
  int v25 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  uint64_t v33 = v13;
  int v35 = v25;
  if (v25 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_269CDCB70);
  }
  else
  {
    sub_2535B3724((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    sub_2535B3724((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_2535B3780((uint64_t)v16, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    }
    else
    {
      sub_2534B2064((uint64_t)v24, &qword_269CDFA70);
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
      v26(v9, v16, v5);
      v26(v24, v9, v5);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
  }
  uint64_t v27 = v38;
  sub_2535B3644(&qword_269CDFF50, MEMORY[0x263F80360]);
  sub_253B07380();
  if (v27)
  {
    uint64_t v28 = (uint64_t)v24;
    return sub_2534B2064(v28, &qword_269CDFA70);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CDFA70);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CDFA70);
    uint64_t v28 = (uint64_t)v22;
    return sub_2534B2064(v28, &qword_269CDFA70);
  }
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  v30(v36, v22, v5);
  if (v35 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CDFA70);
  uint64_t v31 = v34;
  sub_2534B2064(v34, &qword_269CDCB70);
  v30((char *)v31, v36, v5);
  uint64_t v32 = v33;
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v31, 0, 1, v32);
}

uint64_t sub_2535A7C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v41 = a2;
  uint64_t v5 = sub_253B08EF0();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v36 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v33 - v8;
  uint64_t v10 = sub_253462A5C(&qword_269CDCB70);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v33 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CDFF60);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v33 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v33 - v23, 1, 1, v5);
  uint64_t v34 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_269CDCB70);
  int v25 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  uint64_t v33 = v13;
  int v35 = v25;
  if (v25 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_269CDCB70);
  }
  else
  {
    sub_2535B3724((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    sub_2535B3724((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CDFF60);
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
      v26(v9, v16, v5);
      v26(v24, v9, v5);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2535B3780((uint64_t)v16, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    }
  }
  uint64_t v27 = v38;
  sub_2535B3644(&qword_269CDFF58, MEMORY[0x263F80338]);
  sub_253B07380();
  if (v27)
  {
    uint64_t v28 = (uint64_t)v24;
    return sub_2534B2064(v28, &qword_269CDFF60);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CDFF60);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CDFF60);
    uint64_t v28 = (uint64_t)v22;
    return sub_2534B2064(v28, &qword_269CDFF60);
  }
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  v30(v36, v22, v5);
  if (v35 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CDFF60);
  uint64_t v31 = v34;
  sub_2534B2064(v34, &qword_269CDCB70);
  v30((char *)v31, v36, v5);
  uint64_t v32 = v33;
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v31, 0, 1, v32);
}

uint64_t sub_2535A813C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v41 = a2;
  uint64_t v5 = sub_253B08F30();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v36 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v33 - v8;
  uint64_t v10 = sub_253462A5C(&qword_269CDCB70);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v33 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CDFA70);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v33 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v33 - v23, 1, 1, v5);
  uint64_t v34 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_269CDCB70);
  int v25 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  uint64_t v33 = v13;
  int v35 = v25;
  if (v25 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_269CDCB70);
  }
  else
  {
    sub_2535B3724((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    sub_2535B3724((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CDFA70);
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
      v26(v9, v16, v5);
      v26(v24, v9, v5);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2535B3780((uint64_t)v16, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    }
  }
  uint64_t v27 = v38;
  sub_2535B3644(&qword_269CDFF50, MEMORY[0x263F80360]);
  sub_253B07380();
  if (v27)
  {
    uint64_t v28 = (uint64_t)v24;
    return sub_2534B2064(v28, &qword_269CDFA70);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CDFA70);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CDFA70);
    uint64_t v28 = (uint64_t)v22;
    return sub_2534B2064(v28, &qword_269CDFA70);
  }
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  v30(v36, v22, v5);
  if (v35 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CDFA70);
  uint64_t v31 = v34;
  sub_2534B2064(v34, &qword_269CDCB70);
  v30((char *)v31, v36, v5);
  uint64_t v32 = v33;
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v31, 0, 1, v32);
}

uint64_t sub_2535A85F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v41 = a2;
  uint64_t v5 = sub_253B08F30();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v36 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v33 - v8;
  uint64_t v10 = sub_253462A5C(&qword_269CDCB70);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v33 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CDFA70);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v33 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v33 - v23, 1, 1, v5);
  uint64_t v34 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_269CDCB70);
  int v25 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  uint64_t v33 = v13;
  int v35 = v25;
  if (v25 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_269CDCB70);
  }
  else
  {
    sub_2535B3724((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    sub_2535B3724((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CDFA70);
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
      v26(v9, v16, v5);
      v26(v24, v9, v5);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2535B3780((uint64_t)v16, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    }
  }
  uint64_t v27 = v38;
  sub_2535B3644(&qword_269CDFF50, MEMORY[0x263F80360]);
  sub_253B07380();
  if (v27)
  {
    uint64_t v28 = (uint64_t)v24;
    return sub_2534B2064(v28, &qword_269CDFA70);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CDFA70);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CDFA70);
    uint64_t v28 = (uint64_t)v22;
    return sub_2534B2064(v28, &qword_269CDFA70);
  }
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  v30(v36, v22, v5);
  if (v35 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CDFA70);
  uint64_t v31 = v34;
  sub_2534B2064(v34, &qword_269CDCB70);
  v30((char *)v31, v36, v5);
  uint64_t v32 = v33;
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v31, 0, 1, v32);
}

uint64_t sub_2535A8AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for ContextProtoUIControlTool(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_269CDCB70);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CDFF68);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_269CDCB70);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_269CDCB70);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2535B3724((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    sub_2535B3724((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CDFF68);
      sub_2535B3724((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoUIControlTool);
      sub_2535B3724((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for ContextProtoUIControlTool);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2535B3780((uint64_t)v16, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2535B3644(&qword_269CDFD88, (void (*)(uint64_t))type metadata accessor for ContextProtoUIControlTool);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CDFF68);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CDFF68);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CDFF68);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CDFF68);
  }
  uint64_t v29 = v33;
  sub_2535B3724((uint64_t)v22, v33, (void (*)(void))type metadata accessor for ContextProtoUIControlTool);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CDFF68);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_269CDCB70);
  sub_2535B3724(v29, v30, (void (*)(void))type metadata accessor for ContextProtoUIControlTool);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

#error "2535A8FA8: call analysis failed (funcsize=73)"

uint64_t sub_2535A909C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = sub_253462A5C(&qword_269CDCB70);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253B08F30();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v7, &qword_269CDCB70);
  uint64_t v12 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v12) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v7, &qword_269CDCB70);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      sub_2535B3644(&qword_269CDFF50, MEMORY[0x263F80360]);
      sub_253B07500();
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    uint64_t result = sub_2535B3780((uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_2535A92C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = sub_253462A5C(&qword_269CDCB70);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253B08EF0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v7, &qword_269CDCB70);
  uint64_t v12 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v12) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v7, &qword_269CDCB70);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      sub_2535B3644(&qword_269CDFF58, MEMORY[0x263F80338]);
      sub_253B07500();
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    uint64_t result = sub_2535B3780((uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_2535A94E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = sub_253462A5C(&qword_269CDCB70);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253B08F30();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v7, &qword_269CDCB70);
  uint64_t v12 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v12) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v7, &qword_269CDCB70);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      sub_2535B3644(&qword_269CDFF50, MEMORY[0x263F80360]);
      sub_253B07500();
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    uint64_t result = sub_2535B3780((uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_2535A9710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = sub_253462A5C(&qword_269CDCB70);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253B08F30();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v7, &qword_269CDCB70);
  uint64_t v12 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v12) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v7, &qword_269CDCB70);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      sub_2535B3644(&qword_269CDFF50, MEMORY[0x263F80360]);
      sub_253B07500();
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    uint64_t result = sub_2535B3780((uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_2535A9938(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDCB70);
  MEMORY[0x270FA5388](v2 - 8);
  char v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ContextProtoUIControlTool(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_269CDCB70);
  uint64_t v8 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_269CDCB70);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_2535B3724((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoUIControlTool);
      sub_2535B3644(&qword_269CDFD88, (void (*)(uint64_t))type metadata accessor for ContextProtoUIControlTool);
      sub_253B07500();
      return sub_2535B3780((uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoUIControlTool);
    }
    uint64_t result = sub_2535B3780((uint64_t)v4, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  }
  __break(1u);
  return result;
}

void static ContextProtoRetrievedTool.Definition.== infix(_:_:)()
{
  sub_2534B3258();
  v41[0] = sub_2535B4154();
  sub_253465998();
  v41[5] = v5;
  MEMORY[0x270FA5388](v6);
  v41[4] = (uint64_t)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v17 = sub_2535B3B04(v9, v10, v11, v12, v13, v14, v15, v16, v41[0]);
  uint64_t v18 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(v17);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v19);
  sub_2534966B0();
  sub_253462A5C(&qword_269CDCB78);
  sub_2535B3D7C();
  MEMORY[0x270FA5388](v20);
  sub_2534847E0();
  uint64_t v21 = sub_253462A5C(&qword_269CDCB70);
  uint64_t v22 = sub_25346CB4C(v21);
  MEMORY[0x270FA5388](v22);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v23);
  sub_2534836BC();
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  sub_2535B3BF0(v25, v26, v27, v28, v29, v30, v31, v32, v41[0]);
  sub_2535B3F44();
  sub_2535B3DE4();
  sub_2535B41D0();
  uint64_t v33 = sub_2534D8B48(v2, 1, v18);
  if (v35)
  {
    sub_2535B3F80();
    sub_2535B3B9C();
    sub_2534D8B48(v1, 1, v18);
    if (v35)
    {
      sub_2534B2064(v2, &qword_269CDCB70);
LABEL_11:
      type metadata accessor for ContextProtoRetrievedTool.Definition(0);
      uint64_t v38 = sub_2535B3A4C();
      ((void (*)(uint64_t))v1)(v38);
      uint64_t v39 = sub_2535B3B64();
      ((void (*)(uint64_t))v1)(v39);
      sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
      sub_2535B4018();
      uint64_t v40 = *(void (**)(void))(v2 + 8);
      sub_2534D91A0();
      v40();
      sub_2534D91A0();
      v40();
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_2535B410C(v33, v34, &qword_269CDCB70);
  sub_2534D8B48(v1, 1, v18);
  if (v35)
  {
    sub_2535B3F80();
    sub_2535B3B9C();
    sub_2535B3780(v4, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
LABEL_9:
    sub_2534B2064(v2, &qword_269CDCB78);
    goto LABEL_12;
  }
  sub_2535B3724(v1, v3, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  uint64_t v36 = sub_253578AC4();
  static ContextProtoRetrievedTool.ContextProtoDefinitionEnum.== infix(_:_:)(v36, v37);
  sub_2535B43C0();
  sub_2534B2064(v0, &qword_269CDCB70);
  sub_2535B4460();
  sub_2535B44A8();
  sub_2535B4538();
  if (v1) {
    goto LABEL_11;
  }
LABEL_12:
  sub_2535B41FC();
  sub_253465A14();
}

uint64_t ContextProtoRetrievedTool.Definition.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoRetrievedTool.Definition);
}

uint64_t sub_2535A9E5C(uint64_t a1, uint64_t a2)
{
  return ContextProtoRetrievedTool.Definition.decodeMessage<A>(decoder:)(a1, a2);
}

uint64_t sub_2535A9E74()
{
  return ContextProtoRetrievedTool.Definition.traverse<A>(visitor:)();
}

uint64_t sub_2535A9E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFEA0, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool.Definition);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535A9F0C()
{
  sub_2535B3644(&qword_269CDFD70, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool.Definition);
  return sub_253B073E0();
}

uint64_t sub_2535A9F7C()
{
  sub_2535B3644(&qword_269CDFD70, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool.Definition);
  return sub_253B073F0();
}

unint64_t static ContextProtoUIControlTool.protoMessageName.getter()
{
  return sub_2535B3A28(21);
}

uint64_t sub_2535AA014()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF7E0);
  sub_253462BD4(v0, (uint64_t)qword_269CDF7E0);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B34E60;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "appBundleId";
  *(void *)(v6 + 8) = 11;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "command";
  *(void *)(v10 + 8) = 7;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "commandId";
  *((void *)v12 + 1) = 9;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 4;
  *(void *)uint64_t v14 = "toolDef";
  *((void *)v14 + 1) = 7;
  v14[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoUIControlTool._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA8F0, (uint64_t)qword_269CDF7E0, a1);
}

uint64_t ContextProtoUIControlTool.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_2535B3890();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
          sub_2535B3B84();
          break;
        case 4:
          sub_2535B387C();
          sub_2535AA31C();
          break;
        default:
          break;
      }
      uint64_t result = sub_2535B3A9C();
    }
  }
  return result;
}

uint64_t sub_2535AA31C()
{
  return sub_253B07380();
}

uint64_t ContextProtoUIControlTool.traverse<A>(visitor:)()
{
  uint64_t result = sub_2535B3EFC();
  if (!v0)
  {
    sub_2535B4094();
    sub_2535B40BC();
    uint64_t v2 = sub_2535B39B0();
    sub_2535AA4E8(v2, v3, v4, v5);
    type metadata accessor for ContextProtoUIControlTool(0);
    return sub_2535B3BCC();
  }
  return result;
}

uint64_t sub_2535AA444(uint64_t result)
{
  if (*(void *)(result + 8)) {
    return sub_253B074C0();
  }
  return result;
}

uint64_t sub_2535AA480(uint64_t result)
{
  if (*(void *)(result + 24))
  {
    sub_2535B4324();
    return sub_2535B430C();
  }
  return result;
}

uint64_t sub_2535AA4B4(uint64_t result)
{
  if (*(void *)(result + 40))
  {
    sub_2535B4324();
    return sub_2535B430C();
  }
  return result;
}

uint64_t sub_2535AA4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = sub_253462A5C(&qword_269CDFA70);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253B08F30();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ContextProtoUIControlTool(0);
  sub_2535B37D8(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_269CDFA70);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v8) == 1) {
    return sub_2534B2064((uint64_t)v7, &qword_269CDFA70);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  sub_2535B3644(&qword_269CDFF50, MEMORY[0x263F80360]);
  sub_253B07500();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void static ContextProtoUIControlTool.== infix(_:_:)()
{
  sub_2534B3258();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = sub_253B07160();
  sub_253465998();
  uint64_t v55 = v10;
  MEMORY[0x270FA5388](v11);
  char v54 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  sub_2535B3B04(v14, v15, v16, v17, v18, v19, v20, v21, v50);
  uint64_t v22 = sub_253B08F30();
  sub_253465998();
  uint64_t v56 = v23;
  MEMORY[0x270FA5388](v24);
  sub_2534966B0();
  uint64_t v25 = sub_253462A5C(&qword_269CDFA68);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v26);
  sub_25346CC6C();
  uint64_t v27 = sub_253462A5C(&qword_269CDFA70);
  uint64_t v28 = sub_25346CB4C(v27);
  MEMORY[0x270FA5388](v28);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v29);
  sub_253578D54();
  MEMORY[0x270FA5388](v30);
  sub_2535B3D6C();
  uint64_t v31 = v8[1];
  uint64_t v32 = v6[1];
  if (!v31)
  {
    uint64_t v53 = v9;
    if (v32) {
      goto LABEL_39;
    }
LABEL_10:
    uint64_t v34 = v8[3];
    uint64_t v35 = v6[3];
    if (v34)
    {
      if (!v35) {
        goto LABEL_39;
      }
      BOOL v36 = v8[2] == v6[2] && v34 == v35;
      if (!v36 && (sub_253B0A4C0() & 1) == 0) {
        goto LABEL_39;
      }
    }
    else if (v35)
    {
      goto LABEL_39;
    }
    uint64_t v37 = v8[5];
    uint64_t v38 = v6[5];
    if (v37)
    {
      if (!v38) {
        goto LABEL_39;
      }
      BOOL v39 = v8[4] == v6[4] && v37 == v38;
      if (!v39 && (sub_253B0A4C0() & 1) == 0) {
        goto LABEL_39;
      }
    }
    else if (v38)
    {
      goto LABEL_39;
    }
    uint64_t v40 = type metadata accessor for ContextProtoUIControlTool(0);
    sub_2535B37D8((uint64_t)v8 + *(int *)(v40 + 28), v4, &qword_269CDFA70);
    uint64_t v52 = v40;
    sub_2535B37D8((uint64_t)v6 + *(int *)(v40 + 28), v0, &qword_269CDFA70);
    uint64_t v41 = v1 + *(int *)(v25 + 48);
    sub_2535B37D8(v4, v1, &qword_269CDFA70);
    sub_2535B37D8(v0, v41, &qword_269CDFA70);
    sub_2534D8B48(v1, 1, v22);
    if (v33)
    {
      sub_2534B2064(v0, &qword_269CDFA70);
      sub_2534B2064(v4, &qword_269CDFA70);
      sub_2534D8B48(v41, 1, v22);
      if (v33)
      {
        sub_2534B2064(v1, &qword_269CDFA70);
        goto LABEL_38;
      }
    }
    else
    {
      sub_2535B37D8(v1, v3, &qword_269CDFA70);
      sub_2534D8B48(v41, 1, v22);
      if (!v42)
      {
        uint64_t v44 = v56;
        sub_2535B3CF0();
        v45();
        sub_2535B3644(&qword_269CDCC90, MEMORY[0x263F80360]);
        sub_253578AC4();
        int v51 = sub_253B096B0();
        uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
        v46(v2, v22);
        sub_2534B2064(v0, &qword_269CDFA70);
        sub_2535B4490();
        v46(v3, v22);
        sub_2534B2064(v1, &qword_269CDFA70);
        if ((v51 & 1) == 0) {
          goto LABEL_39;
        }
LABEL_38:
        uint64_t v47 = v55;
        uint64_t v48 = *(void (**)(void))(v55 + 16);
        sub_2535B3A00();
        v48();
        sub_2535B3A00();
        v48();
        sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
        sub_2535B3D38();
        char v49 = *(void (**)(void))(v47 + 8);
        sub_2534D91A0();
        v49();
        sub_2534D91A0();
        v49();
        goto LABEL_39;
      }
      sub_2534B2064(v0, &qword_269CDFA70);
      sub_2534B2064(v4, &qword_269CDFA70);
      sub_2535B3F64();
      v43();
    }
    sub_2534B2064(v1, &qword_269CDFA68);
    goto LABEL_39;
  }
  if (v32)
  {
    uint64_t v53 = v9;
    BOOL v33 = *v8 == *v6 && v31 == v32;
    if (v33 || (sub_253B0A4C0() & 1) != 0) {
      goto LABEL_10;
    }
  }
LABEL_39:
  sub_2535B41FC();
  sub_253465A14();
}

uint64_t ContextProtoUIControlTool.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoUIControlTool);
}

unint64_t sub_2535AABFC()
{
  return 0xD000000000000015;
}

uint64_t sub_2535AAC24()
{
  return ContextProtoUIControlTool.decodeMessage<A>(decoder:)();
}

uint64_t sub_2535AAC3C()
{
  return ContextProtoUIControlTool.traverse<A>(visitor:)();
}

uint64_t sub_2535AAC54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFE98, (void (*)(uint64_t))type metadata accessor for ContextProtoUIControlTool);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535AACD4()
{
  sub_2535B3644(&qword_269CDFD88, (void (*)(uint64_t))type metadata accessor for ContextProtoUIControlTool);
  return sub_253B073E0();
}

uint64_t sub_2535AAD44()
{
  sub_2535B3644(&qword_269CDFD88, (void (*)(uint64_t))type metadata accessor for ContextProtoUIControlTool);
  return sub_253B073F0();
}

unint64_t static ContextProtoSampleInvocation.protoMessageName.getter()
{
  return sub_2535B3A28(24);
}

uint64_t sub_2535AADDC()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF7F8);
  sub_253462BD4(v0, (uint64_t)qword_269CDF7F8);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B22690;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "invocationString";
  *(void *)(v6 + 8) = 16;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "score";
  *((void *)v10 + 1) = 5;
  v10[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoSampleInvocation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA8F8, (uint64_t)qword_269CDF7F8, a1);
}

uint64_t ContextProtoSampleInvocation.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_2535B3890();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_2535B4170();
      }
      else if (result == 1)
      {
        sub_2535B3CD4();
      }
      uint64_t result = sub_2535B3A9C();
    }
  }
  return result;
}

uint64_t ContextProtoSampleInvocation.traverse<A>(visitor:)()
{
  sub_2535B399C();
  if (!v2 || (uint64_t result = sub_2535B3C1C(), !v1))
  {
    if (*(float *)(v0 + 16) == 0.0 || (uint64_t result = sub_2535B462C(), !v1))
    {
      type metadata accessor for ContextProtoSampleInvocation(0);
      return sub_2535B3AE0();
    }
  }
  return result;
}

void static ContextProtoSampleInvocation.== infix(_:_:)()
{
  sub_2535B3C98();
  sub_2535B3980();
  sub_253465998();
  MEMORY[0x270FA5388](v3);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v4);
  sub_2535B3A30();
  BOOL v7 = v7 && v5 == v6;
  if (v7 || (sub_253B0A4C0()) && *(float *)(v1 + 16) == *(float *)(v0 + 16))
  {
    type metadata accessor for ContextProtoSampleInvocation(0);
    uint64_t v8 = sub_2535B38B8();
    ((void (*)(uint64_t))v2)(v8);
    sub_2535B3914();
    v2();
    sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
    sub_2535B3960();
    uint64_t v9 = sub_2535B3924();
    ((void (*)(uint64_t))v0)(v9);
    sub_2535B3940();
    ((void (*)(void))v0)();
  }
  sub_2535B3D00();
  sub_25346CD04();
}

uint64_t ContextProtoSampleInvocation.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoSampleInvocation);
}

unint64_t sub_2535AB228()
{
  return 0xD000000000000018;
}

uint64_t sub_2535AB250()
{
  return ContextProtoSampleInvocation.decodeMessage<A>(decoder:)();
}

uint64_t sub_2535AB268()
{
  return ContextProtoSampleInvocation.traverse<A>(visitor:)();
}

uint64_t sub_2535AB280(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFE90, (void (*)(uint64_t))type metadata accessor for ContextProtoSampleInvocation);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535AB300()
{
  sub_2535B3644(&qword_269CDFA48, (void (*)(uint64_t))type metadata accessor for ContextProtoSampleInvocation);
  return sub_253B073E0();
}

uint64_t sub_2535AB370()
{
  sub_2535B3644(&qword_269CDFA48, (void (*)(uint64_t))type metadata accessor for ContextProtoSampleInvocation);
  return sub_253B073F0();
}

unint64_t static ContextProtoToolRetrievalType.protoMessageName.getter()
{
  return sub_2535B3A28(25);
}

uint64_t sub_2535AB408()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF810);
  sub_253462BD4(v0, (uint64_t)qword_269CDF810);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B22690;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "identifier";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "definition";
  *((void *)v10 + 1) = 10;
  v10[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoToolRetrievalType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA900, (uint64_t)qword_269CDF810, a1);
}

void ContextProtoToolRetrievalType.decodeMessage<A>(decoder:)()
{
  uint64_t v1 = sub_2535B3890();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_2535B387C();
        sub_2535AB694();
      }
      else if (v1 == 1)
      {
        sub_2535B439C();
      }
      uint64_t v1 = sub_2535B3A9C();
    }
  }
}

uint64_t sub_2535AB694()
{
  return sub_253B07380();
}

uint64_t ContextProtoToolRetrievalType.traverse<A>(visitor:)()
{
  uint64_t v1 = sub_2535B3E60();
  uint64_t result = sub_2535AB7A8(v1, v2, v3, v4);
  if (!v0)
  {
    uint64_t v6 = sub_2535B3DCC();
    sub_2535AB990(v6, v7, v8, v9);
    type metadata accessor for ContextProtoToolRetrievalType(0);
    return sub_2535B3C40();
  }
  return result;
}

uint64_t sub_2535AB7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v13[1] = a4;
  uint64_t v5 = sub_253462A5C(&qword_269CDFAA0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253B08E80();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v7, &qword_269CDFAA0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v8) == 1) {
    return sub_2534B2064((uint64_t)v7, &qword_269CDFAA0);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  sub_2535B3644(&qword_269CDFF48, MEMORY[0x263F80300]);
  sub_253B07500();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_2535AB990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = sub_253462A5C(&qword_269CDFA90);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253B08E70();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ContextProtoToolRetrievalType(0);
  sub_2535B37D8(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_269CDFA90);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v8) == 1) {
    return sub_2534B2064((uint64_t)v7, &qword_269CDFA90);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  sub_2535B3644(&qword_269CDFF40, MEMORY[0x263F802E8]);
  sub_253B07500();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void static ContextProtoToolRetrievalType.== infix(_:_:)()
{
  sub_2534B3258();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  sub_253B07160();
  sub_253465998();
  uint64_t v62 = v8;
  uint64_t v63 = v7;
  MEMORY[0x270FA5388](v7);
  sub_2534659D8();
  uint64_t v61 = v9;
  sub_2534B324C();
  MEMORY[0x270FA5388](v10);
  sub_2534B35DC();
  uint64_t v60 = v11;
  sub_253483660();
  uint64_t v69 = sub_253B08E70();
  sub_253465998();
  uint64_t v64 = v12;
  MEMORY[0x270FA5388](v13);
  sub_25346CB04();
  uint64_t v59 = v14;
  uint64_t v66 = sub_253462A5C(&qword_269CDFA88);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v15);
  sub_25346CB04();
  uint64_t v68 = v16;
  uint64_t v17 = sub_253462A5C(&qword_269CDFA90);
  uint64_t v18 = sub_25346CB4C(v17);
  MEMORY[0x270FA5388](v18);
  uint64_t v65 = (uint64_t)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v20);
  sub_2534B3318();
  uint64_t v72 = v21;
  sub_2534B324C();
  MEMORY[0x270FA5388](v22);
  uint64_t v67 = (char *)&v58 - v23;
  sub_253483660();
  uint64_t v24 = sub_253B08E80();
  sub_253465998();
  uint64_t v73 = v25;
  MEMORY[0x270FA5388](v26);
  sub_2534835B0();
  sub_253462A5C(&qword_269CDFA98);
  sub_2535B3D7C();
  MEMORY[0x270FA5388](v27);
  sub_2534847E0();
  uint64_t v28 = sub_253462A5C(&qword_269CDFAA0);
  uint64_t v29 = sub_25346CB4C(v28);
  MEMORY[0x270FA5388](v29);
  sub_2535B39C8();
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  BOOL v33 = (char *)&v58 - v32;
  MEMORY[0x270FA5388](v31);
  sub_2535B3D6C();
  uint64_t v70 = v6;
  sub_2535B37D8(v6, v2, &qword_269CDFAA0);
  uint64_t v71 = v4;
  sub_2535B37D8(v4, (uint64_t)v33, &qword_269CDFAA0);
  uint64_t v34 = v1 + *(int *)(v0 + 56);
  sub_2535B37D8(v2, v1, &qword_269CDFAA0);
  sub_2535B37D8((uint64_t)v33, v34, &qword_269CDFAA0);
  uint64_t v35 = sub_2534D8B48(v1, 1, v24);
  if (v37)
  {
    sub_2535B4294();
    sub_2535B3B9C();
    sub_2534D8B48(v34, 1, v24);
    if (v37)
    {
      sub_2534B2064(v1, &qword_269CDFAA0);
      goto LABEL_11;
    }
LABEL_9:
    BOOL v39 = &qword_269CDFA98;
    uint64_t v40 = v1;
LABEL_20:
    sub_2534B2064(v40, v39);
    goto LABEL_21;
  }
  sub_2535B410C(v35, v36, &qword_269CDFAA0);
  sub_2534D8B48(v34, 1, v24);
  if (v37)
  {
    sub_2535B4294();
    sub_2535B3B9C();
    sub_2535B3F64();
    v38();
    goto LABEL_9;
  }
  uint64_t v41 = v73;
  sub_2535B3CF0();
  v42();
  sub_2535B3644(&qword_269CDFAB0, MEMORY[0x263F80300]);
  char v43 = sub_253B096B0();
  uint64_t v44 = *(void (**)(void))(v41 + 8);
  sub_2535B3F70();
  v44();
  sub_2535B4294();
  sub_2535B3B9C();
  sub_2535B3F70();
  v44();
  sub_2535B4520();
  if ((v43 & 1) == 0) {
    goto LABEL_21;
  }
LABEL_11:
  uint64_t v45 = type metadata accessor for ContextProtoToolRetrievalType(0);
  uint64_t v46 = (uint64_t)v67;
  sub_2535B4054(v70 + *(int *)(v45 + 20));
  uint64_t v47 = v72;
  sub_2535B4508(v71 + *(int *)(v45 + 20));
  uint64_t v48 = v68;
  uint64_t v49 = v68 + *(int *)(v66 + 48);
  sub_2535B37D8(v46, v68, &qword_269CDFA90);
  sub_2535B3F2C(v47);
  uint64_t v50 = v69;
  sub_2534D8B48(v48, 1, v69);
  if (v37)
  {
    sub_2535B44F0();
    sub_2534B2064(v46, &qword_269CDFA90);
    sub_2534D8B48(v49, 1, v50);
    if (v37)
    {
      sub_2534B2064(v48, &qword_269CDFA90);
LABEL_23:
      uint64_t v56 = v62;
      sub_2535B4608();
      sub_2535B3A00();
      ((void (*)(void))qword_269CDFA90)();
      sub_2535B3A00();
      ((void (*)(void))qword_269CDFA90)();
      sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
      sub_2535B3D38();
      uint64_t v57 = *(void (**)(void))(v56 + 8);
      sub_2535B3B1C();
      v57();
      sub_2535B3B1C();
      v57();
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  uint64_t v51 = v65;
  sub_2535B37D8(v48, v65, &qword_269CDFA90);
  sub_2534D8B48(v49, 1, v50);
  if (v52)
  {
    sub_2535B44C0();
    sub_2535B43DC();
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v51, v50);
LABEL_19:
    BOOL v39 = &qword_269CDFA88;
    uint64_t v40 = v48;
    goto LABEL_20;
  }
  uint64_t v53 = v64;
  uint64_t v54 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 32))(v59, v49, v50);
  sub_2535B3644(&qword_269CDFAA8, MEMORY[0x263F802E8]);
  LODWORD(v73) = sub_253B096B0();
  uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
  v55(v54, v50);
  sub_2534B2064(v72, &qword_269CDFA90);
  sub_2535B41B8();
  v55(v65, v50);
  sub_2535B440C();
  if (v73) {
    goto LABEL_23;
  }
LABEL_21:
  sub_2535B4124();
  sub_253465A14();
}

uint64_t ContextProtoToolRetrievalType.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoToolRetrievalType);
}

unint64_t sub_2535AC264()
{
  return 0xD000000000000019;
}

void sub_2535AC28C()
{
}

uint64_t sub_2535AC2A4()
{
  return ContextProtoToolRetrievalType.traverse<A>(visitor:)();
}

uint64_t sub_2535AC2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFE88, (void (*)(uint64_t))type metadata accessor for ContextProtoToolRetrievalType);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535AC33C()
{
  sub_2535B3644(&qword_269CDFAD8, (void (*)(uint64_t))type metadata accessor for ContextProtoToolRetrievalType);
  return sub_253B073E0();
}

uint64_t sub_2535AC3AC()
{
  sub_2535B3644(&qword_269CDFAD8, (void (*)(uint64_t))type metadata accessor for ContextProtoToolRetrievalType);
  return sub_253B073F0();
}

unint64_t static ContextProtoToolQuery.protoMessageName.getter()
{
  return sub_2535B3A28(17);
}

uint64_t sub_2535AC444(uint64_t a1)
{
  return sub_2535AC464(a1, qword_269CDF828, (uint64_t)"query", (uint64_t)"appBundleIds", 12);
}

uint64_t sub_2535AC464(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_253B07540();
  sub_2534AF1BC(v7, a2);
  sub_253462BD4(v7, (uint64_t)a2);
  sub_253462A5C(&qword_26B24A588);
  sub_253462A5C(&qword_26B24A3A0);
  sub_25357849C();
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_253B22690;
  uint64_t v13 = (void *)(v12 + v11);
  unint64_t v14 = v12 + v11 + *(int *)(v7 + 56);
  void *v13 = 1;
  *(void *)unint64_t v14 = a3;
  *(void *)(v14 + 8) = 5;
  *(unsigned char *)(v14 + 16) = 2;
  sub_253B07510();
  sub_25346CAF4();
  uint64_t v16 = *(void (**)(void))(v15 + 104);
  sub_2535B469C();
  v16();
  uint64_t v17 = (char *)v13 + v9 + *(int *)(v7 + 56);
  *(void *)((char *)v13 + v9) = 2;
  *(void *)uint64_t v17 = a4;
  *((void *)v17 + 1) = a5;
  v17[16] = 2;
  sub_2535B469C();
  v16();
  return sub_253B07520();
}

uint64_t static ContextProtoToolQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA908, (uint64_t)qword_269CDF828, a1);
}

uint64_t ContextProtoToolQuery.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_2535B3890();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_2535B4448();
      }
      else if (result == 1)
      {
        sub_2535B3CD4();
      }
      uint64_t result = sub_2535B3A9C();
    }
  }
  return result;
}

uint64_t ContextProtoToolQuery.traverse<A>(visitor:)()
{
  uint64_t v2 = v1;
  sub_2535B399C();
  if (!v3 || (result = sub_2535B3C1C(), (uint64_t v2 = v1) == 0))
  {
    if (!*(void *)(*(void *)(v0 + 16) + 16) || (sub_2535B3908(), uint64_t result = sub_253B074A0(), !v2))
    {
      type metadata accessor for ContextProtoToolQuery(0);
      return sub_2535B3AE0();
    }
  }
  return result;
}

void static ContextProtoToolQuery.== infix(_:_:)()
{
  sub_2535B3C98();
  sub_2535B3980();
  sub_253465998();
  MEMORY[0x270FA5388](v3);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v4);
  sub_2535B3A30();
  BOOL v7 = v7 && v5 == v6;
  if (v7 || (sub_253B0A4C0()) && (sub_2534B5C40(*(void **)(v1 + 16), *(void **)(v0 + 16)))
  {
    type metadata accessor for ContextProtoToolQuery(0);
    uint64_t v8 = sub_2535B38B8();
    ((void (*)(uint64_t))v2)(v8);
    sub_2535B3914();
    v2();
    sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
    sub_2535B3960();
    uint64_t v9 = sub_2535B3924();
    ((void (*)(uint64_t))v0)(v9);
    sub_2535B3940();
    ((void (*)(void))v0)();
  }
  sub_2535B3D00();
  sub_25346CD04();
}

uint64_t ContextProtoToolQuery.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoToolQuery);
}

unint64_t sub_2535AC86C()
{
  return 0xD000000000000011;
}

uint64_t sub_2535AC894()
{
  return ContextProtoToolQuery.decodeMessage<A>(decoder:)();
}

uint64_t sub_2535AC8AC()
{
  return ContextProtoToolQuery.traverse<A>(visitor:)();
}

uint64_t sub_2535AC8C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFE80, (void (*)(uint64_t))type metadata accessor for ContextProtoToolQuery);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535AC944()
{
  sub_2535B3644(&qword_269CDFDC0, (void (*)(uint64_t))type metadata accessor for ContextProtoToolQuery);
  return sub_253B073E0();
}

uint64_t sub_2535AC9B4()
{
  sub_2535B3644(&qword_269CDFDC0, (void (*)(uint64_t))type metadata accessor for ContextProtoToolQuery);
  return sub_253B073F0();
}

unint64_t static ContextProtoToolQueryOutput.protoMessageName.getter()
{
  return sub_2535B3A28(23);
}

uint64_t sub_2535ACA4C(uint64_t a1)
{
  return sub_2535B067C(a1, qword_269CDF840, (uint64_t)"definition", 10);
}

uint64_t static ContextProtoToolQueryOutput._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA910, (uint64_t)qword_269CDF840, a1);
}

void ContextProtoToolQueryOutput.decodeMessage<A>(decoder:)()
{
  uint64_t v1 = sub_2535B3890();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 1) {
        sub_2535B439C();
      }
      uint64_t v1 = sub_2535B3A9C();
    }
  }
}

void sub_2535ACB1C()
{
  sub_2534847F8();
  uint64_t v0 = sub_2535B3E08();
  v1(v0);
  sub_2535B4568();
  sub_2535B3FF8();
  sub_253B07380();
  sub_2534847C8();
}

uint64_t ContextProtoToolQueryOutput.traverse<A>(visitor:)()
{
  uint64_t v1 = sub_2535B3E60();
  uint64_t result = sub_2535ACBB4(v1);
  if (!v0)
  {
    type metadata accessor for ContextProtoToolQueryOutput(0);
    return sub_2535B3C40();
  }
  return result;
}

uint64_t sub_2535ACBB4(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDCB80);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  MEMORY[0x270FA5388](v5);
  BOOL v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_269CDCB80);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) == 1) {
    return sub_2534B2064((uint64_t)v4, &qword_269CDCB80);
  }
  sub_2535B3724((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.Definition);
  sub_2535B3644(&qword_269CDFD70, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool.Definition);
  sub_253B07500();
  return sub_2535B3780((uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.Definition);
}

void static ContextProtoToolQueryOutput.== infix(_:_:)()
{
  sub_2534B3258();
  v39[0] = sub_2535B4154();
  sub_253465998();
  v39[5] = v5;
  MEMORY[0x270FA5388](v6);
  v39[4] = (uint64_t)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v17 = sub_2535B3B04(v9, v10, v11, v12, v13, v14, v15, v16, v39[0]);
  uint64_t v18 = type metadata accessor for ContextProtoRetrievedTool.Definition(v17);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v19);
  sub_2534966B0();
  sub_253462A5C(&qword_269CDCB88);
  sub_2535B3D7C();
  MEMORY[0x270FA5388](v20);
  sub_2534847E0();
  uint64_t v21 = sub_253462A5C(&qword_269CDCB80);
  uint64_t v22 = sub_25346CB4C(v21);
  MEMORY[0x270FA5388](v22);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v23);
  sub_2534836BC();
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  sub_2535B3BF0(v25, v26, v27, v28, v29, v30, v31, v32, v39[0]);
  sub_2535B3F44();
  sub_2535B3DE4();
  sub_2535B41D0();
  uint64_t v33 = sub_2534D8B48(v2, 1, v18);
  if (v35)
  {
    sub_2535B3F80();
    sub_2535B3B9C();
    sub_2534D8B48(v1, 1, v18);
    if (v35)
    {
      sub_2534B2064(v2, &qword_269CDCB80);
LABEL_11:
      type metadata accessor for ContextProtoToolQueryOutput(0);
      uint64_t v36 = sub_2535B3A4C();
      ((void (*)(uint64_t))v1)(v36);
      uint64_t v37 = sub_2535B3B64();
      ((void (*)(uint64_t))v1)(v37);
      sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
      sub_2535B4018();
      uint64_t v38 = *(void (**)(void))(v2 + 8);
      sub_2534D91A0();
      v38();
      sub_2534D91A0();
      v38();
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_2535B410C(v33, v34, &qword_269CDCB80);
  sub_2534D8B48(v1, 1, v18);
  if (v35)
  {
    sub_2535B3F80();
    sub_2535B3B9C();
    sub_2535B3780(v4, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.Definition);
LABEL_9:
    sub_2534B2064(v2, &qword_269CDCB88);
    goto LABEL_12;
  }
  sub_2535B3724(v1, v3, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.Definition);
  sub_253578AC4();
  static ContextProtoRetrievedTool.Definition.== infix(_:_:)();
  sub_2535B43C0();
  sub_2534B2064(v0, &qword_269CDCB80);
  sub_2535B4460();
  sub_2535B44A8();
  sub_2535B4538();
  if (v1) {
    goto LABEL_11;
  }
LABEL_12:
  sub_2535B41FC();
  sub_253465A14();
}

uint64_t ContextProtoToolQueryOutput.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoToolQueryOutput);
}

unint64_t sub_2535AD08C()
{
  return 0xD000000000000017;
}

void sub_2535AD0B4()
{
}

uint64_t sub_2535AD0CC()
{
  return ContextProtoToolQueryOutput.traverse<A>(visitor:)();
}

uint64_t sub_2535AD0E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFE78, (void (*)(uint64_t))type metadata accessor for ContextProtoToolQueryOutput);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535AD164()
{
  sub_2535B3644(&qword_269CDFDD8, (void (*)(uint64_t))type metadata accessor for ContextProtoToolQueryOutput);
  return sub_253B073E0();
}

uint64_t sub_2535AD1D4()
{
  sub_2535B3644(&qword_269CDFDD8, (void (*)(uint64_t))type metadata accessor for ContextProtoToolQueryOutput);
  return sub_253B073F0();
}

unint64_t static ContextProtoQueryDecorationToolRetrievalResponse.protoMessageName.getter()
{
  return sub_2535B3A28(44);
}

uint64_t sub_2535AD26C()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF858);
  sub_253462BD4(v0, (uint64_t)qword_269CDF858);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B36A70;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "originalSubQuery";
  *(void *)(v6 + 8) = 16;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "rewrittenQuery";
  *(void *)(v10 + 8) = 14;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "confidence";
  *((void *)v12 + 1) = 10;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 4;
  *(void *)uint64_t v14 = "retrievedTools";
  *((void *)v14 + 1) = 14;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "types";
  *((void *)v16 + 1) = 5;
  v16[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoQueryDecorationToolRetrievalResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA918, (uint64_t)qword_269CDF858, a1);
}

uint64_t ContextProtoQueryDecorationToolRetrievalResponse.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_2535B3890();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
          sub_253B07340();
          break;
        case 3:
          sub_2535B4170();
          break;
        case 4:
          sub_2535B387C();
          sub_2535AD5D4();
          break;
        case 5:
          sub_2535B387C();
          sub_2535AD670();
          break;
        default:
          break;
      }
      uint64_t result = sub_2535B3A9C();
    }
  }
  return result;
}

uint64_t sub_2535AD5D4()
{
  return sub_253B07370();
}

uint64_t sub_2535AD670()
{
  return sub_253B07370();
}

void ContextProtoQueryDecorationToolRetrievalResponse.traverse<A>(visitor:)()
{
  sub_2535B4280();
  sub_2535B399C();
  if (!v2 || (sub_2535B3B2C(), !v1))
  {
    sub_2535B399C();
    if (!v3 || (sub_2535B3B2C(), !v1))
    {
      if (*(float *)(v0 + 32) == 0.0 || (sub_2535B42F0(), !v1))
      {
        if (!*(void *)(*(void *)(v0 + 40) + 16)
          || (type metadata accessor for ContextProtoRetrievedTool(0),
              sub_2535B3644(&qword_269CDFAD0, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool), sub_2535B3AB4(), !v1))
        {
          if (!*(void *)(*(void *)(v0 + 48) + 16)
            || (type metadata accessor for ContextProtoToolRetrievalType(0),
                sub_2535B3644(&qword_269CDFAD8, (void (*)(uint64_t))type metadata accessor for ContextProtoToolRetrievalType), sub_2535B3D8C(), sub_2535B3AB4(), !v1))
          {
            type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
            sub_2535B3CAC();
          }
        }
      }
    }
  }
  sub_2535B42DC();
}

void static ContextProtoQueryDecorationToolRetrievalResponse.== infix(_:_:)()
{
  sub_2535B3C98();
  sub_2535B3980();
  sub_253465998();
  MEMORY[0x270FA5388](v3);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v4);
  sub_2535B3A30();
  BOOL v7 = v7 && v5 == v6;
  if (v7 || (sub_253B0A4C0() & 1) != 0)
  {
    BOOL v8 = *(void *)(v1 + 16) == *(void *)(v0 + 16) && *(void *)(v1 + 24) == *(void *)(v0 + 24);
    if (v8 || (sub_253B0A4C0()) && *(float *)(v1 + 32) == *(float *)(v0 + 32))
    {
      sub_2534B692C();
      if (v9)
      {
        sub_2534B6980();
        if (v10)
        {
          type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
          uint64_t v11 = sub_2535B38B8();
          ((void (*)(uint64_t))v2)(v11);
          sub_2535B3914();
          v2();
          sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
          sub_2535B3960();
          uint64_t v12 = sub_2535B3924();
          ((void (*)(uint64_t))v0)(v12);
          sub_2535B3940();
          ((void (*)(void))v0)();
        }
      }
    }
  }
  sub_2535B3D00();
  sub_25346CD04();
}

uint64_t ContextProtoQueryDecorationToolRetrievalResponse.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
}

unint64_t sub_2535ADA40()
{
  return 0xD00000000000002CLL;
}

uint64_t (*sub_2535ADA68())()
{
  return nullsub_1;
}

uint64_t sub_2535ADA8C()
{
  return ContextProtoQueryDecorationToolRetrievalResponse.decodeMessage<A>(decoder:)();
}

void sub_2535ADAA4()
{
}

uint64_t sub_2535ADABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFE70, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535ADB3C()
{
  sub_2535B3644(&qword_269CDFDF0, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
  return sub_253B073E0();
}

uint64_t sub_2535ADBAC()
{
  sub_2535B3644(&qword_269CDFDF0, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
  return sub_253B073F0();
}

unint64_t static ContextProtoSpanMatchedEntity.protoMessageName.getter()
{
  return sub_2535B3A28(25);
}

uint64_t sub_2535ADC44()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF870);
  sub_253462BD4(v0, (uint64_t)qword_269CDF870);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B22690;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "typedValue";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  char v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  char v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)char v10 = "matchMetadata";
  *((void *)v10 + 1) = 13;
  v10[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoSpanMatchedEntity._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA920, (uint64_t)qword_269CDF870, a1);
}

void ContextProtoSpanMatchedEntity.decodeMessage<A>(decoder:)()
{
  uint64_t v1 = sub_2535B3890();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_2535B4384();
        sub_2535A0E50();
      }
      else if (v1 == 1)
      {
        sub_2535B46B0(1, v2, v3, v4, (void (*)(void))type metadata accessor for ContextProtoSpanMatchedEntity);
      }
      uint64_t v1 = sub_2535B3A9C();
    }
  }
}

uint64_t sub_2535ADEE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return sub_253B07380();
}

void ContextProtoSpanMatchedEntity.traverse<A>(visitor:)()
{
  sub_2535B45A0();
  sub_2535B46F0();
  sub_2535AE07C();
  if (!v0)
  {
    sub_2535B4594();
    if (v1)
    {
      type metadata accessor for ContextProtoEntityMatch(0);
      sub_2535B3644(&qword_269CDFAE8, (void (*)(uint64_t))type metadata accessor for ContextProtoEntityMatch);
      sub_2535B3D8C();
      sub_2535B3AB4();
    }
    type metadata accessor for ContextProtoSpanMatchedEntity(0);
    sub_2535B3B48();
  }
  sub_2535B4660();
}

void sub_2535AE07C()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_2534966B0();
  uint64_t v8 = sub_253B08E50();
  sub_253465998();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  sub_25346CC6C();
  uint64_t v12 = v3(0);
  sub_2535B37D8(v5 + *(int *)(v12 + 20), v1, &qword_269CDCBC8);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v1, 1, v8) == 1)
  {
    sub_2534B2064(v1, &qword_269CDCBC8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v0, v1, v8);
    sub_2535B3644(&qword_269CDFF38, MEMORY[0x263F802B0]);
    sub_2535B3D8C();
    sub_253B07500();
    uint64_t v13 = sub_2534D9724();
    v14(v13);
  }
  sub_2534847C8();
}

void static ContextProtoSpanMatchedEntity.== infix(_:_:)()
{
  sub_2534B3258();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  sub_253B07160();
  sub_253465998();
  uint64_t v33 = v9;
  MEMORY[0x270FA5388](v10);
  sub_2534659D8();
  sub_2534B324C();
  MEMORY[0x270FA5388](v11);
  sub_2534B35DC();
  uint64_t v12 = (void (*)(void))sub_253B08E50();
  sub_253465998();
  uint64_t v35 = v13;
  MEMORY[0x270FA5388](v14);
  sub_25346CB04();
  uint64_t v34 = v15;
  sub_253462A5C((uint64_t *)&off_269CDCBD0);
  sub_2535B3D7C();
  MEMORY[0x270FA5388](v16);
  sub_25346CC6C();
  uint64_t v17 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v18 = sub_25346CB4C(v17);
  MEMORY[0x270FA5388](v18);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v19);
  sub_2534836BC();
  MEMORY[0x270FA5388](v20);
  uint64_t v21 = sub_2534DA444();
  uint64_t v22 = type metadata accessor for ContextProtoSpanMatchedEntity(v21);
  sub_2535B37D8(v8 + *(int *)(v22 + 20), v0, &qword_269CDCBC8);
  sub_2535B37D8(v6 + *(int *)(v22 + 20), v1, &qword_269CDCBC8);
  uint64_t v23 = v3 + *(int *)(v2 + 56);
  sub_2535B37D8(v0, v3, &qword_269CDCBC8);
  sub_2535B37D8(v1, v23, &qword_269CDCBC8);
  sub_2534D8B48(v3, 1, (uint64_t)v12);
  if (!v24)
  {
    sub_2535B37D8(v3, v4, &qword_269CDCBC8);
    sub_2534D8B48(v23, 1, (uint64_t)v12);
    if (!v24)
    {
      sub_2535B3CF0();
      v26();
      sub_2535B3644(&qword_269CDCBD8, MEMORY[0x263F802B0]);
      char v27 = sub_253B096B0();
      uint64_t v28 = *(void (**)(uint64_t, void (*)(void)))(v35 + 8);
      v28(v34, v12);
      sub_2534B2064(v1, &qword_269CDCBC8);
      sub_2534B2064(v0, &qword_269CDCBC8);
      v28(v4, v12);
      uint64_t v29 = sub_2534D9724();
      sub_2534B2064(v29, v30);
      if ((v27 & 1) == 0) {
        goto LABEL_13;
      }
      goto LABEL_11;
    }
    sub_2534B2064(v1, &qword_269CDCBC8);
    sub_2534B2064(v0, &qword_269CDCBC8);
    sub_2535B3F64();
    v25();
LABEL_9:
    sub_2534B2064(v3, (uint64_t *)&off_269CDCBD0);
    goto LABEL_13;
  }
  sub_2534B2064(v1, &qword_269CDCBC8);
  sub_2534B2064(v0, &qword_269CDCBC8);
  sub_2534D8B48(v23, 1, (uint64_t)v12);
  if (!v24) {
    goto LABEL_9;
  }
  sub_2534B2064(v3, &qword_269CDCBC8);
LABEL_11:
  sub_2534B8EB8();
  if (v31)
  {
    sub_2535B4608();
    sub_2535B3A00();
    v12();
    sub_2535B3A00();
    v12();
    sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
    sub_2535B3D38();
    uint64_t v32 = *(void (**)(void))(v33 + 8);
    sub_2535B3B1C();
    v32();
    sub_2535B3B1C();
    v32();
  }
LABEL_13:
  sub_253465A14();
}

uint64_t ContextProtoSpanMatchedEntity.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoSpanMatchedEntity);
}

unint64_t sub_2535AE680()
{
  return 0xD000000000000019;
}

void sub_2535AE6A8()
{
}

void sub_2535AE6C0()
{
}

uint64_t sub_2535AE6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFE68, (void (*)(uint64_t))type metadata accessor for ContextProtoSpanMatchedEntity);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535AE758()
{
  sub_2535B3644(&qword_269CDF9E8, (void (*)(uint64_t))type metadata accessor for ContextProtoSpanMatchedEntity);
  return sub_253B073E0();
}

uint64_t sub_2535AE7C8()
{
  sub_2535B3644(&qword_269CDF9E8, (void (*)(uint64_t))type metadata accessor for ContextProtoSpanMatchedEntity);
  return sub_253B073F0();
}

unint64_t static ContextProtoEntityMatch.protoMessageName.getter()
{
  return sub_2535B3A28(19);
}

uint64_t sub_2535AE860()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF888);
  sub_253462BD4(v0, (uint64_t)qword_269CDF888);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B36AB0;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "sourceItemIdentifier";
  *(void *)(v6 + 8) = 20;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 3;
  *(void *)unint64_t v10 = "entityName";
  *(void *)(v10 + 8) = 10;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 4;
  *(void *)uint64_t v12 = "startIndex";
  *((void *)v12 + 1) = 10;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 5;
  *(void *)uint64_t v14 = "endIndex";
  *((void *)v14 + 1) = 8;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 7;
  *(void *)uint64_t v16 = "matchScore";
  *((void *)v16 + 1) = 10;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 8;
  *(void *)uint64_t v18 = "matchProperties";
  *((void *)v18 + 1) = 15;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v2);
  uint64_t v20 = (char *)v19 + v1[14];
  void *v19 = 9;
  *(void *)uint64_t v20 = "matcherType";
  *((void *)v20 + 1) = 11;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v5 + 7 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *uint64_t v21 = 10;
  *(void *)uint64_t v22 = "originAppBundleId";
  *((void *)v22 + 1) = 17;
  v22[16] = 2;
  v9();
  uint64_t v23 = (void *)(v5 + 8 * v2);
  char v24 = (char *)v23 + v1[14];
  *uint64_t v23 = 11;
  *(void *)char v24 = "userUtterance";
  *((void *)v24 + 1) = 13;
  v24[16] = 2;
  v9();
  uint64_t v25 = (void *)(v5 + 9 * v2);
  uint64_t v26 = (char *)v25 + v1[14];
  void *v25 = 12;
  *(void *)uint64_t v26 = "identifier";
  *((void *)v26 + 1) = 10;
  v26[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoEntityMatch._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA928, (uint64_t)qword_269CDF888, a1);
}

void ContextProtoEntityMatch.decodeMessage<A>(decoder:)()
{
  sub_2534847F8();
  uint64_t v1 = sub_2535B3890();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
        case 3:
        case 10:
        case 11:
          sub_253B07340();
          break;
        case 4:
        case 5:
          sub_2535B443C();
          sub_253B07300();
          break;
        case 7:
          sub_2535B4170();
          break;
        case 8:
          sub_2535B387C();
          sub_2535AED74();
          break;
        case 9:
          sub_2535B387C();
          sub_2535AEE24();
          break;
        case 12:
          sub_2535B387C();
          sub_2535AEE88();
          break;
        default:
          break;
      }
      uint64_t v1 = sub_2535B3A9C();
    }
  }
  sub_2534847C8();
}

uint64_t sub_2535AED74()
{
  return sub_253B07380();
}

uint64_t sub_2535AEE24()
{
  return sub_253B07290();
}

uint64_t sub_2535AEE88()
{
  return sub_253B07330();
}

uint64_t ContextProtoEntityMatch.traverse<A>(visitor:)()
{
  uint64_t v2 = v1;
  sub_2535B399C();
  if (!v3 || (result = sub_2535B3B2C(), (uint64_t v2 = v1) == 0))
  {
    sub_2535B399C();
    if (!v5 || (result = sub_2535B3B2C(), (uint64_t v2 = v1) == 0))
    {
      if (!*(void *)(v0 + 32) || (v1 = v2, uint64_t result = sub_253B07490(), !v2))
      {
        if (!*(void *)(v0 + 40) || (v1 = v2, uint64_t result = sub_253B07490(), !v2))
        {
          if (*(float *)(v0 + 48) == 0.0 || (uint64_t result = sub_2535B42F0(), !v1))
          {
            sub_2535B3950();
            uint64_t result = sub_2535AF07C(v6);
            if (!v1)
            {
              if (*(unsigned char *)(v0 + 52))
              {
                sub_2535B0ECC();
                sub_2535B4038();
              }
              sub_2535B399C();
              if (v7) {
                sub_2535B3B2C();
              }
              sub_2535B399C();
              if (v8) {
                sub_2535B3B2C();
              }
              sub_2535B3950();
              sub_2535AF23C(v9);
              type metadata accessor for ContextProtoEntityMatch(0);
              return sub_2535B3CAC();
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_2535AF07C(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDFB08);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t matched = type metadata accessor for ContextProtoMatchProperties(0);
  MEMORY[0x270FA5388](matched);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ContextProtoEntityMatch(0);
  sub_2535B37D8(a1 + *(int *)(v8 + 48), (uint64_t)v4, &qword_269CDFB08);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, matched) == 1) {
    return sub_2534B2064((uint64_t)v4, &qword_269CDFB08);
  }
  sub_2535B3724((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoMatchProperties);
  sub_2535B3644(&qword_269CDFE28, (void (*)(uint64_t))type metadata accessor for ContextProtoMatchProperties);
  sub_253B07500();
  return sub_2535B3780((uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoMatchProperties);
}

uint64_t sub_2535AF23C(uint64_t a1)
{
  uint64_t result = type metadata accessor for ContextProtoEntityMatch(0);
  if (*(void *)(a1 + *(int *)(result + 52) + 8)) {
    return sub_253B074C0();
  }
  return result;
}

void static ContextProtoEntityMatch.== infix(_:_:)()
{
  sub_2534B3258();
  sub_2535B3980();
  sub_253465998();
  uint64_t v49 = v7;
  uint64_t v50 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v48 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v18 = sub_2535B3B04(v10, v11, v12, v13, v14, v15, v16, v17, v46);
  uint64_t matched = type metadata accessor for ContextProtoMatchProperties(v18);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v20);
  sub_2534B34A4();
  uint64_t v21 = sub_253462A5C(&qword_269CDFB00);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v22);
  sub_2534847E0();
  uint64_t v23 = sub_253462A5C(&qword_269CDFB08);
  uint64_t v24 = sub_25346CB4C(v23);
  MEMORY[0x270FA5388](v24);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v25);
  sub_2535B45DC();
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v46 - v27;
  BOOL v29 = *(void *)v2 == *(void *)v1 && *(void *)(v2 + 8) == *(void *)(v1 + 8);
  if (!v29 && (sub_253B0A4C0() & 1) == 0) {
    goto LABEL_44;
  }
  BOOL v30 = *(void *)(v2 + 16) == *(void *)(v1 + 16) && *(void *)(v2 + 24) == *(void *)(v1 + 24);
  if (!v30 && (sub_253B0A4C0() & 1) == 0
    || *(void *)(v2 + 32) != *(void *)(v1 + 32)
    || *(void *)(v2 + 40) != *(void *)(v1 + 40)
    || *(float *)(v2 + 48) != *(float *)(v1 + 48))
  {
    goto LABEL_44;
  }
  uint64_t v31 = type metadata accessor for ContextProtoEntityMatch(0);
  sub_2535B37D8(v2 + *(int *)(v31 + 48), (uint64_t)v28, &qword_269CDFB08);
  uint64_t v47 = v31;
  sub_2535B37D8(v1 + *(int *)(v31 + 48), (uint64_t)v0, &qword_269CDFB08);
  uint64_t v32 = v3 + *(int *)(v21 + 48);
  uint64_t v33 = sub_2534D9724();
  sub_2535B37D8(v33, v34, &qword_269CDFB08);
  sub_2535B436C((uint64_t)v0);
  sub_2534D8B48(v3, 1, matched);
  if (!v29)
  {
    sub_2535B37D8(v3, v5, &qword_269CDFB08);
    sub_2534D8B48(v32, 1, matched);
    if (!v35)
    {
      sub_2535B3724(v32, v4, (void (*)(void))type metadata accessor for ContextProtoMatchProperties);
      static ContextProtoMatchProperties.== infix(_:_:)();
      char v37 = v36;
      sub_2535B3780(v4, (void (*)(void))type metadata accessor for ContextProtoMatchProperties);
      sub_2534B2064((uint64_t)v0, &qword_269CDFB08);
      sub_2534B2064((uint64_t)v28, &qword_269CDFB08);
      sub_2535B3780(v5, (void (*)(void))type metadata accessor for ContextProtoMatchProperties);
      sub_2535B4550();
      if ((v37 & 1) == 0) {
        goto LABEL_44;
      }
      goto LABEL_24;
    }
    sub_2534B2064((uint64_t)v0, &qword_269CDFB08);
    sub_2535B4294();
    sub_2535B3780(v5, (void (*)(void))type metadata accessor for ContextProtoMatchProperties);
LABEL_22:
    sub_2534B2064(v3, &qword_269CDFB00);
    goto LABEL_44;
  }
  sub_2534B2064((uint64_t)v0, &qword_269CDFB08);
  sub_2534B2064((uint64_t)v28, &qword_269CDFB08);
  sub_2534D8B48(v32, 1, matched);
  if (!v29) {
    goto LABEL_22;
  }
  sub_2534B2064(v3, &qword_269CDFB08);
LABEL_24:
  if (*(unsigned __int8 *)(v2 + 52) == *(unsigned __int8 *)(v1 + 52))
  {
    BOOL v38 = *(void *)(v2 + 56) == *(void *)(v1 + 56) && *(void *)(v2 + 64) == *(void *)(v1 + 64);
    if (v38 || (sub_253B0A4C0() & 1) != 0)
    {
      BOOL v39 = *(void *)(v2 + 72) == *(void *)(v1 + 72) && *(void *)(v2 + 80) == *(void *)(v1 + 80);
      if (v39 || (sub_253B0A4C0() & 1) != 0)
      {
        uint64_t v40 = *(int *)(v47 + 52);
        uint64_t v41 = *(void *)(v1 + v40 + 8);
        if (*(void *)(v2 + v40 + 8))
        {
          if (v41)
          {
            sub_2535B3D0C(v2 + v40);
            BOOL v44 = v29 && v42 == v43;
            if (v44 || (sub_253B0A4C0() & 1) != 0) {
              goto LABEL_45;
            }
          }
        }
        else if (!v41)
        {
LABEL_45:
          sub_2535B45B4();
          sub_253535668();
          v0();
          sub_253535668();
          v0();
          sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
          sub_2535B3D8C();
          sub_253B096B0();
          uint64_t v45 = *(void (**)(void))(v3 + 8);
          sub_2534D91A0();
          v45();
          sub_2534D91A0();
          v45();
        }
      }
    }
  }
LABEL_44:
  sub_253465A14();
}

uint64_t ContextProtoEntityMatch.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoEntityMatch);
}

unint64_t sub_2535AF7C0()
{
  return 0xD000000000000013;
}

uint64_t (*sub_2535AF7E8())()
{
  return nullsub_1;
}

void sub_2535AF80C()
{
}

uint64_t sub_2535AF824()
{
  return ContextProtoEntityMatch.traverse<A>(visitor:)();
}

uint64_t sub_2535AF83C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFE60, (void (*)(uint64_t))type metadata accessor for ContextProtoEntityMatch);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535AF8BC()
{
  sub_2535B3644(&qword_269CDFAE8, (void (*)(uint64_t))type metadata accessor for ContextProtoEntityMatch);
  return sub_253B073E0();
}

uint64_t sub_2535AF92C()
{
  sub_2535B3644(&qword_269CDFAE8, (void (*)(uint64_t))type metadata accessor for ContextProtoEntityMatch);
  return sub_253B073F0();
}

unint64_t static ContextProtoMatchProperties.protoMessageName.getter()
{
  return sub_2535B3A28(23);
}

uint64_t sub_2535AF9C4()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CDF8A0);
  sub_253462BD4(v0, (uint64_t)qword_269CDF8A0);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B34E30;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "maxTokenCount";
  *(void *)(v6 + 8) = 13;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "matchedTokenCount";
  *((void *)v10 + 1) = 17;
  v10[16] = 2;
  v9();
  uint64_t v11 = (void *)((char *)v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "matchedAliasTypes";
  *((void *)v12 + 1) = 17;
  v12[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ContextProtoMatchProperties._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA930, (uint64_t)qword_269CDF8A0, a1);
}

uint64_t ContextProtoMatchProperties.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_2535B3890();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3)
      {
        sub_2535B387C();
        sub_2535AFC64();
      }
      else if (result == 2 || result == 1)
      {
        sub_2535B443C();
        sub_253B072F0();
      }
      uint64_t result = sub_2535B3A9C();
    }
  }
  return result;
}

uint64_t sub_2535AFC64()
{
  return sub_253B07380();
}

uint64_t ContextProtoMatchProperties.traverse<A>(visitor:)()
{
  uint64_t v1 = sub_2535B3EB4();
  uint64_t result = sub_2535AFD84(v1);
  if (!v0)
  {
    uint64_t v3 = sub_2535B3C80();
    sub_2535AFDB8(v3);
    uint64_t v4 = sub_2535B3C80();
    sub_2535AFDEC(v4);
    type metadata accessor for ContextProtoMatchProperties(0);
    return sub_2535B406C();
  }
  return result;
}

uint64_t sub_2535AFD84(uint64_t result)
{
  if ((*(unsigned char *)(result + 8) & 1) == 0) {
    return sub_253B07490();
  }
  return result;
}

uint64_t sub_2535AFDB8(uint64_t result)
{
  if ((*(unsigned char *)(result + 24) & 1) == 0) {
    return sub_253B07490();
  }
  return result;
}

uint64_t sub_2535AFDEC(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDFB20);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ContextProtoAliasTypes(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t matched = type metadata accessor for ContextProtoMatchProperties(0);
  sub_2535B37D8(a1 + *(int *)(matched + 24), (uint64_t)v4, &qword_269CDFB20);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) == 1) {
    return sub_2534B2064((uint64_t)v4, &qword_269CDFB20);
  }
  sub_2535B3724((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoAliasTypes);
  sub_2535B3644(&qword_269CDFE40, (void (*)(uint64_t))type metadata accessor for ContextProtoAliasTypes);
  sub_253B07500();
  return sub_2535B3780((uint64_t)v7, (void (*)(void))type metadata accessor for ContextProtoAliasTypes);
}

void static ContextProtoMatchProperties.== infix(_:_:)()
{
  sub_2534B3258();
  uint64_t v7 = sub_2535B3980();
  sub_253465998();
  uint64_t v35 = v8;
  MEMORY[0x270FA5388](v9);
  v34[4] = (uint64_t)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v11);
  v34[3] = (uint64_t)v34 - v12;
  uint64_t v13 = sub_253483660();
  uint64_t v14 = type metadata accessor for ContextProtoAliasTypes(v13);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v15);
  sub_2534966B0();
  uint64_t v16 = sub_253462A5C(&qword_269CDFB18);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v17);
  sub_2534847E0();
  uint64_t v18 = sub_253462A5C(&qword_269CDFB20);
  uint64_t v19 = sub_25346CB4C(v18);
  MEMORY[0x270FA5388](v19);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v20);
  sub_253578D54();
  MEMORY[0x270FA5388](v21);
  sub_2535B3D6C();
  char v22 = *(unsigned char *)(v1 + 8);
  if (*(unsigned char *)(v2 + 8))
  {
    if (!*(unsigned char *)(v1 + 8)) {
      goto LABEL_27;
    }
  }
  else
  {
    if (*(void *)v2 != *(void *)v1) {
      char v22 = 1;
    }
    if (v22) {
      goto LABEL_27;
    }
  }
  char v23 = *(unsigned char *)(v1 + 24);
  if (*(unsigned char *)(v2 + 24))
  {
    if (!*(unsigned char *)(v1 + 24)) {
      goto LABEL_27;
    }
  }
  else
  {
    if (*(void *)(v2 + 16) != *(void *)(v1 + 16)) {
      char v23 = 1;
    }
    if (v23) {
      goto LABEL_27;
    }
  }
  v34[0] = v5;
  v34[2] = v7;
  uint64_t matched = type metadata accessor for ContextProtoMatchProperties(0);
  uint64_t v25 = (uint64_t)&qword_269CDFB20;
  sub_2535B37D8(v2 + *(int *)(matched + 24), v6, &qword_269CDFB20);
  v34[1] = matched;
  sub_2535B3F2C(v1 + *(int *)(matched + 24));
  uint64_t v26 = v3 + *(int *)(v16 + 48);
  sub_2535B37D8(v6, v3, &qword_269CDFB20);
  sub_2535B4054(v0);
  sub_2534D8B48(v3, 1, v14);
  if (v27)
  {
    sub_2535B41B8();
    sub_2535B4478();
    sub_2534D8B48(v26, 1, v14);
    if (v27)
    {
      sub_2534B2064(v3, &qword_269CDFB20);
LABEL_24:
      uint64_t v32 = v35;
      sub_2535B42AC();
      sub_2535B3A00();
      ((void (*)(void))v25)();
      sub_2535B3A00();
      ((void (*)(void))v25)();
      sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
      sub_2535B42B8();
      uint64_t v33 = *(void (**)(void))(v32 + 8);
      sub_253592354();
      v33();
      sub_253592354();
      v33();
      goto LABEL_27;
    }
    goto LABEL_21;
  }
  sub_2535B37D8(v3, (uint64_t)v4, &qword_269CDFB20);
  sub_2534D8B48(v26, 1, v14);
  if (v27)
  {
    sub_2535B41B8();
    sub_2535B4478();
    sub_2535B3780((uint64_t)v4, (void (*)(void))type metadata accessor for ContextProtoAliasTypes);
LABEL_21:
    uint64_t v28 = &qword_269CDFB18;
    uint64_t v29 = v3;
LABEL_26:
    sub_2534B2064(v29, v28);
    goto LABEL_27;
  }
  BOOL v30 = (uint64_t *)v34[0];
  sub_2535B3724(v26, v34[0], (void (*)(void))type metadata accessor for ContextProtoAliasTypes);
  char v31 = sub_2534B7CE4(*v4, *v30);
  if ((v31 & 1) == 0)
  {
    sub_2535B3780((uint64_t)v30, (void (*)(void))type metadata accessor for ContextProtoAliasTypes);
    sub_2534B2064(v0, &qword_269CDFB20);
    sub_2534B2064(v6, &qword_269CDFB20);
    sub_2535B3780((uint64_t)v4, (void (*)(void))type metadata accessor for ContextProtoAliasTypes);
    uint64_t v29 = v3;
    uint64_t v28 = &qword_269CDFB20;
    goto LABEL_26;
  }
  sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
  uint64_t v25 = sub_253B096B0();
  sub_2535B3780((uint64_t)v30, (void (*)(void))type metadata accessor for ContextProtoAliasTypes);
  sub_2534B2064(v0, &qword_269CDFB20);
  sub_2535B4490();
  sub_2535B3780((uint64_t)v4, (void (*)(void))type metadata accessor for ContextProtoAliasTypes);
  sub_2535B4550();
  if (v25) {
    goto LABEL_24;
  }
LABEL_27:
  sub_2535B4124();
  sub_253465A14();
}

uint64_t ContextProtoMatchProperties.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoMatchProperties);
}

unint64_t sub_2535B0484()
{
  return 0xD000000000000017;
}

uint64_t sub_2535B04AC()
{
  return ContextProtoMatchProperties.decodeMessage<A>(decoder:)();
}

uint64_t sub_2535B04C4()
{
  return ContextProtoMatchProperties.traverse<A>(visitor:)();
}

uint64_t sub_2535B04DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFE58, (void (*)(uint64_t))type metadata accessor for ContextProtoMatchProperties);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535B055C()
{
  sub_2535B3644(&qword_269CDFE28, (void (*)(uint64_t))type metadata accessor for ContextProtoMatchProperties);
  return sub_253B073E0();
}

uint64_t sub_2535B05CC()
{
  sub_2535B3644(&qword_269CDFE28, (void (*)(uint64_t))type metadata accessor for ContextProtoMatchProperties);
  return sub_253B073F0();
}

unint64_t static ContextProtoAliasTypes.protoMessageName.getter()
{
  return sub_2535B3A28(18);
}

uint64_t sub_2535B0664(uint64_t a1)
{
  return sub_2535B067C(a1, qword_269CDF8B8, (uint64_t)"options", 7);
}

uint64_t sub_2535B067C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_253B07540();
  sub_2534AF1BC(v8, a2);
  sub_253462BD4(v8, (uint64_t)a2);
  sub_253462A5C(&qword_26B24A588);
  sub_253462A5C(&qword_26B24A3A0);
  sub_25357849C();
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_253B22680;
  unint64_t v12 = v11 + v10 + *(int *)(v4 + 56);
  *(void *)(v11 + v10) = 1;
  *(void *)unint64_t v12 = a3;
  *(void *)(v12 + 8) = a4;
  *(unsigned char *)(v12 + 16) = 2;
  uint64_t v13 = *MEMORY[0x263F50718];
  sub_253B07510();
  sub_25346CAF4();
  (*(void (**)(unint64_t, uint64_t))(v14 + 104))(v12, v13);
  return sub_253B07520();
}

uint64_t static ContextProtoAliasTypes._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA938, (uint64_t)qword_269CDF8B8, a1);
}

uint64_t sub_2535B07CC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_253B07540();
  uint64_t v6 = sub_253462BD4(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t ContextProtoAliasTypes.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_2535B39E4(a1, a2);
  while (1)
  {
    uint64_t result = sub_253B07230();
    if (v2 || (v4 & 1) != 0) {
      break;
    }
    if (result == 1)
    {
      sub_2535B387C();
      sub_2535B08B4();
    }
    sub_2534D9B10();
  }
  return result;
}

uint64_t sub_2535B08B4()
{
  return sub_253B07250();
}

void ContextProtoAliasTypes.traverse<A>(visitor:)()
{
  sub_2535B4280();
  if (!*(void *)(*(void *)v0 + 16) || (sub_2535B0F18(), sub_253B07430(), !v1))
  {
    type metadata accessor for ContextProtoAliasTypes(0);
    sub_253B07140();
  }
  sub_2535B42DC();
}

void static ContextProtoAliasTypes.== infix(_:_:)()
{
  sub_2535B3C98();
  sub_2535B3980();
  sub_253465998();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v6);
  sub_2534D9ED0();
  if (sub_2534B7CE4(*v1, *v0))
  {
    type metadata accessor for ContextProtoAliasTypes(0);
    uint64_t v7 = sub_2535B38B8();
    ((void (*)(uint64_t))v2)(v7);
    sub_2535B3914();
    v2();
    sub_2535B3644((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
    sub_2535B3960();
    uint64_t v8 = *(void (**)(void))(v4 + 8);
    sub_2535B3940();
    v8();
    sub_2535B3940();
    v8();
  }
  sub_25346CD04();
}

uint64_t ContextProtoAliasTypes.hashValue.getter()
{
  return sub_253599338((void (*)(void))type metadata accessor for ContextProtoAliasTypes);
}

unint64_t sub_2535B0B34()
{
  return 0xD000000000000012;
}

uint64_t sub_2535B0B5C(uint64_t a1, uint64_t a2)
{
  return ContextProtoAliasTypes.decodeMessage<A>(decoder:)(a1, a2);
}

void sub_2535B0B74()
{
}

uint64_t sub_2535B0B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535B3644(&qword_269CDFE50, (void (*)(uint64_t))type metadata accessor for ContextProtoAliasTypes);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535B0C0C()
{
  sub_2535B3644(&qword_269CDFE40, (void (*)(uint64_t))type metadata accessor for ContextProtoAliasTypes);
  return sub_253B073E0();
}

uint64_t sub_2535B0C7C()
{
  sub_2535B3644(&qword_269CDFE40, (void (*)(uint64_t))type metadata accessor for ContextProtoAliasTypes);
  return sub_253B073F0();
}

uint64_t sub_2535B0CF8()
{
  return sub_253B0A630();
}

unint64_t sub_2535B0D50()
{
  unint64_t result = qword_269CDF8D0;
  if (!qword_269CDF8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDF8D0);
  }
  return result;
}

unint64_t sub_2535B0D9C()
{
  unint64_t result = qword_269CDF948;
  if (!qword_269CDF948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDF948);
  }
  return result;
}

unint64_t sub_2535B0DE8()
{
  unint64_t result = qword_269CDFA10;
  if (!qword_269CDFA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFA10);
  }
  return result;
}

unint64_t sub_2535B0E34()
{
  unint64_t result = qword_269CDFA18;
  if (!qword_269CDFA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFA18);
  }
  return result;
}

unint64_t sub_2535B0E80()
{
  unint64_t result = qword_269CDFA50;
  if (!qword_269CDFA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFA50);
  }
  return result;
}

unint64_t sub_2535B0ECC()
{
  unint64_t result = qword_269CDFAF8;
  if (!qword_269CDFAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFAF8);
  }
  return result;
}

unint64_t sub_2535B0F18()
{
  unint64_t result = qword_269CDFB30;
  if (!qword_269CDFB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFB30);
  }
  return result;
}

unint64_t sub_2535B0F68()
{
  unint64_t result = qword_269CDFB40;
  if (!qword_269CDFB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFB40);
  }
  return result;
}

unint64_t sub_2535B0FB8()
{
  unint64_t result = qword_269CDFB48;
  if (!qword_269CDFB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFB48);
  }
  return result;
}

unint64_t sub_2535B1008()
{
  unint64_t result = qword_269CDFB50;
  if (!qword_269CDFB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFB50);
  }
  return result;
}

unint64_t sub_2535B1058()
{
  unint64_t result = qword_269CDFB58;
  if (!qword_269CDFB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFB58);
  }
  return result;
}

unint64_t sub_2535B10A8()
{
  unint64_t result = qword_269CDFB60;
  if (!qword_269CDFB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFB60);
  }
  return result;
}

unint64_t sub_2535B10F8()
{
  unint64_t result = qword_269CDFB68;
  if (!qword_269CDFB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFB68);
  }
  return result;
}

unint64_t sub_2535B1148()
{
  unint64_t result = qword_269CDFB70;
  if (!qword_269CDFB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFB70);
  }
  return result;
}

unint64_t sub_2535B1198()
{
  unint64_t result = qword_269CDFB78;
  if (!qword_269CDFB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFB78);
  }
  return result;
}

unint64_t sub_2535B11E8()
{
  unint64_t result = qword_269CDFB80;
  if (!qword_269CDFB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFB80);
  }
  return result;
}

unint64_t sub_2535B1238()
{
  unint64_t result = qword_269CDFB88;
  if (!qword_269CDFB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFB88);
  }
  return result;
}

unint64_t sub_2535B1288()
{
  unint64_t result = qword_269CDFB90;
  if (!qword_269CDFB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFB90);
  }
  return result;
}

unint64_t sub_2535B12D8()
{
  unint64_t result = qword_269CDFB98;
  if (!qword_269CDFB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFB98);
  }
  return result;
}

unint64_t sub_2535B1328()
{
  unint64_t result = qword_269CDFBA0;
  if (!qword_269CDFBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFBA0);
  }
  return result;
}

unint64_t sub_2535B1378()
{
  unint64_t result = qword_269CDFBA8;
  if (!qword_269CDFBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFBA8);
  }
  return result;
}

unint64_t sub_2535B13C8()
{
  unint64_t result = qword_269CDFBB0;
  if (!qword_269CDFBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFBB0);
  }
  return result;
}

unint64_t sub_2535B1418()
{
  unint64_t result = qword_269CDFBB8;
  if (!qword_269CDFBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFBB8);
  }
  return result;
}

unint64_t sub_2535B1468()
{
  unint64_t result = qword_269CDFBC0;
  if (!qword_269CDFBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFBC0);
  }
  return result;
}

unint64_t sub_2535B14B8()
{
  unint64_t result = qword_269CDFBC8;
  if (!qword_269CDFBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFBC8);
  }
  return result;
}

uint64_t sub_2535B1504()
{
  return sub_2535B3644(&qword_269CDFBD0, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedContext);
}

uint64_t sub_2535B154C()
{
  return sub_2535B3644(&qword_269CDF9E0, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedContext);
}

uint64_t sub_2535B1594()
{
  return sub_2535B3644(&qword_269CDF908, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedContext);
}

uint64_t sub_2535B15DC()
{
  return sub_2535B3644(&qword_269CDFBD8, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedContext);
}

uint64_t sub_2535B1624()
{
  return sub_2535B3644(&qword_269CDFBE0, (void (*)(uint64_t))type metadata accessor for ContextProtoContextMetadata);
}

uint64_t sub_2535B166C()
{
  return sub_2535B3644(&qword_269CDFBE8, (void (*)(uint64_t))type metadata accessor for ContextProtoContextMetadata);
}

uint64_t sub_2535B16B4()
{
  return sub_2535B3644(&qword_269CDF928, (void (*)(uint64_t))type metadata accessor for ContextProtoContextMetadata);
}

uint64_t sub_2535B16FC()
{
  return sub_2535B3644(&qword_269CDFBF0, (void (*)(uint64_t))type metadata accessor for ContextProtoContextMetadata);
}

uint64_t sub_2535B1744()
{
  return sub_2535B3644(&qword_269CDFBF8, (void (*)(uint64_t))type metadata accessor for ContextProtoContextualEntityDisplayRepresentation);
}

uint64_t sub_2535B178C()
{
  return sub_2535B3644(&qword_269CDFC00, (void (*)(uint64_t))type metadata accessor for ContextProtoContextualEntityDisplayRepresentation);
}

uint64_t sub_2535B17D4()
{
  return sub_2535B3644(&qword_269CDF930, (void (*)(uint64_t))type metadata accessor for ContextProtoContextualEntityDisplayRepresentation);
}

uint64_t sub_2535B181C()
{
  return sub_2535B3644(&qword_269CDFC08, (void (*)(uint64_t))type metadata accessor for ContextProtoContextualEntityDisplayRepresentation);
}

uint64_t sub_2535B1864()
{
  return sub_2535B3644(&qword_269CDFC10, (void (*)(uint64_t))type metadata accessor for ContextProtoBoundingBox);
}

uint64_t sub_2535B18AC()
{
  return sub_2535B3644(&qword_269CDFC18, (void (*)(uint64_t))type metadata accessor for ContextProtoBoundingBox);
}

uint64_t sub_2535B18F4()
{
  return sub_2535B3644(&qword_269CDF938, (void (*)(uint64_t))type metadata accessor for ContextProtoBoundingBox);
}

uint64_t sub_2535B193C()
{
  return sub_2535B3644(&qword_269CDFC20, (void (*)(uint64_t))type metadata accessor for ContextProtoBoundingBox);
}

uint64_t sub_2535B1984()
{
  return sub_2535B3644(&qword_269CDFC28, (void (*)(uint64_t))type metadata accessor for ContextProtoSurroundingText);
}

uint64_t sub_2535B19CC()
{
  return sub_2535B3644(&qword_269CDF910, (void (*)(uint64_t))type metadata accessor for ContextProtoSurroundingText);
}

uint64_t sub_2535B1A14()
{
  return sub_2535B3644(&qword_269CDF940, (void (*)(uint64_t))type metadata accessor for ContextProtoSurroundingText);
}

uint64_t sub_2535B1A5C()
{
  return sub_2535B3644(&qword_269CDFC30, (void (*)(uint64_t))type metadata accessor for ContextProtoSurroundingText);
}

uint64_t sub_2535B1AA4()
{
  return sub_2535B3644(&qword_269CDFC38, (void (*)(uint64_t))type metadata accessor for ContextProtoConfidence);
}

uint64_t sub_2535B1AEC()
{
  return sub_2535B3644(&qword_269CDFC40, (void (*)(uint64_t))type metadata accessor for ContextProtoConfidence);
}

uint64_t sub_2535B1B34()
{
  return sub_2535B3644(&qword_269CDF950, (void (*)(uint64_t))type metadata accessor for ContextProtoConfidence);
}

uint64_t sub_2535B1B7C()
{
  return sub_2535B3644(&qword_269CDFC48, (void (*)(uint64_t))type metadata accessor for ContextProtoConfidence);
}

uint64_t sub_2535B1BC4()
{
  return sub_2535B3644(&qword_269CDFC50, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContext);
}

uint64_t sub_2535B1C0C()
{
  return sub_2535B3644(&qword_269CDFC58, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContext);
}

uint64_t sub_2535B1C54()
{
  return sub_2535B3644(&qword_269CDF968, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContext);
}

uint64_t sub_2535B1C9C()
{
  return sub_2535B3644(&qword_269CDFC60, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContext);
}

uint64_t sub_2535B1CE4()
{
  return sub_2535B3644(&qword_269CDFC68, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
}

uint64_t sub_2535B1D2C()
{
  return sub_2535B3644(&qword_269CDFC70, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
}

uint64_t sub_2535B1D74()
{
  return sub_2535B3644(&qword_269CDF9A0, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
}

uint64_t sub_2535B1DBC()
{
  return sub_2535B3644(&qword_269CDFC78, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
}

uint64_t sub_2535B1E04()
{
  return sub_2535B3644(&qword_269CDFC80, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
}

uint64_t sub_2535B1E4C()
{
  return sub_2535B3644(&qword_269CDFC88, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
}

uint64_t sub_2535B1E94()
{
  return sub_2535B3644(&qword_269CDF9A8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
}

uint64_t sub_2535B1EDC()
{
  return sub_2535B3644(&qword_269CDFC90, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
}

uint64_t sub_2535B1F24()
{
  return sub_2535B3644(&qword_269CDFC98, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
}

uint64_t sub_2535B1F6C()
{
  return sub_2535B3644(&qword_269CDFCA0, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
}

uint64_t sub_2535B1FB4()
{
  return sub_2535B3644(&qword_269CDF9B0, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
}

uint64_t sub_2535B1FFC()
{
  return sub_2535B3644(&qword_269CDFCA8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
}

uint64_t sub_2535B2044()
{
  return sub_2535B3644(&qword_269CDFCB0, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
}

uint64_t sub_2535B208C()
{
  return sub_2535B3644(&qword_269CDFCB8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
}

uint64_t sub_2535B20D4()
{
  return sub_2535B3644(&qword_269CDF9C0, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
}

uint64_t sub_2535B211C()
{
  return sub_2535B3644(&qword_269CDFCC0, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
}

uint64_t sub_2535B2164()
{
  return sub_2535B3644(&qword_269CDFCC8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress);
}

uint64_t sub_2535B21AC()
{
  return sub_2535B3644(&qword_269CDF9B8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress);
}

uint64_t sub_2535B21F4()
{
  return sub_2535B3644(&qword_269CDF9C8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress);
}

uint64_t sub_2535B223C()
{
  return sub_2535B3644(&qword_269CDFCD0, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress);
}

uint64_t sub_2535B2284()
{
  return sub_2535B3644(&qword_269CDFCD8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext);
}

uint64_t sub_2535B22CC()
{
  return sub_2535B3644(&qword_269CDFCE0, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext);
}

uint64_t sub_2535B2314()
{
  return sub_2535B3644(&qword_269CDF9D0, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext);
}

uint64_t sub_2535B235C()
{
  return sub_2535B3644(&qword_269CDFCE8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext);
}

uint64_t sub_2535B23A4()
{
  return sub_2535B3644(&qword_269CDFCF0, (void (*)(uint64_t))type metadata accessor for ContextProtoStructedContextAppInFocusContext);
}

uint64_t sub_2535B23EC()
{
  return sub_2535B3644(&qword_269CDFCF8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructedContextAppInFocusContext);
}

uint64_t sub_2535B2434()
{
  return sub_2535B3644(&qword_269CDF9D8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructedContextAppInFocusContext);
}

uint64_t sub_2535B247C()
{
  return sub_2535B3644(&qword_269CDFD00, (void (*)(uint64_t))type metadata accessor for ContextProtoStructedContextAppInFocusContext);
}

uint64_t sub_2535B24C4()
{
  return sub_2535B3644(&qword_269CDFD08, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationOutput);
}

uint64_t sub_2535B250C()
{
  return sub_2535B3644(&qword_269CDFD10, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationOutput);
}

uint64_t sub_2535B2554()
{
  return sub_2535B3644(&qword_269CDFA08, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationOutput);
}

uint64_t sub_2535B259C()
{
  return sub_2535B3644(&qword_269CDFD18, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationOutput);
}

uint64_t sub_2535B25E4()
{
  return sub_2535B3644(&qword_269CDFD20, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationInput);
}

uint64_t sub_2535B262C()
{
  return sub_2535B3644(&qword_269CDFD28, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationInput);
}

uint64_t sub_2535B2674()
{
  return sub_2535B3644(&qword_269CDFA20, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationInput);
}

uint64_t sub_2535B26BC()
{
  return sub_2535B3644(&qword_269CDFD30, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationInput);
}

uint64_t sub_2535B2704()
{
  return sub_2535B3644(&qword_269CDFD38, (void (*)(uint64_t))type metadata accessor for ContextProtoDynamicEnumerationEntity);
}

uint64_t sub_2535B274C()
{
  return sub_2535B3644(&qword_269CDF9F0, (void (*)(uint64_t))type metadata accessor for ContextProtoDynamicEnumerationEntity);
}

uint64_t sub_2535B2794()
{
  return sub_2535B3644(&qword_269CDFA40, (void (*)(uint64_t))type metadata accessor for ContextProtoDynamicEnumerationEntity);
}

uint64_t sub_2535B27DC()
{
  return sub_2535B3644(&qword_269CDFD40, (void (*)(uint64_t))type metadata accessor for ContextProtoDynamicEnumerationEntity);
}

uint64_t sub_2535B2824()
{
  return sub_2535B3644(&qword_269CDFD48, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool);
}

uint64_t sub_2535B286C()
{
  return sub_2535B3644(&qword_269CDFAD0, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool);
}

uint64_t sub_2535B28B4()
{
  return sub_2535B3644(&qword_269CDFA58, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool);
}

uint64_t sub_2535B28FC()
{
  return sub_2535B3644(&qword_269CDFD50, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool);
}

unint64_t sub_2535B2948()
{
  unint64_t result = qword_269CDFD58;
  if (!qword_269CDFD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFD58);
  }
  return result;
}

unint64_t sub_2535B2998()
{
  unint64_t result = qword_269CDFD60;
  if (!qword_269CDFD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFD60);
  }
  return result;
}

uint64_t sub_2535B29E4()
{
  return sub_2535B3644(&qword_269CDFD68, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool.Definition);
}

uint64_t sub_2535B2A2C()
{
  return sub_2535B3644(&qword_269CDFD70, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool.Definition);
}

uint64_t sub_2535B2A74()
{
  return sub_2535B3644(&qword_269CDFA60, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool.Definition);
}

uint64_t sub_2535B2ABC()
{
  return sub_2535B3644(&qword_269CDFD78, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool.Definition);
}

uint64_t sub_2535B2B04()
{
  return sub_2535B3644(&qword_269CDFD80, (void (*)(uint64_t))type metadata accessor for ContextProtoUIControlTool);
}

uint64_t sub_2535B2B4C()
{
  return sub_2535B3644(&qword_269CDFD88, (void (*)(uint64_t))type metadata accessor for ContextProtoUIControlTool);
}

uint64_t sub_2535B2B94()
{
  return sub_2535B3644(&qword_269CDFA78, (void (*)(uint64_t))type metadata accessor for ContextProtoUIControlTool);
}

uint64_t sub_2535B2BDC()
{
  return sub_2535B3644(&qword_269CDFD90, (void (*)(uint64_t))type metadata accessor for ContextProtoUIControlTool);
}

uint64_t sub_2535B2C24()
{
  return sub_2535B3644(&qword_269CDFD98, (void (*)(uint64_t))type metadata accessor for ContextProtoSampleInvocation);
}

uint64_t sub_2535B2C6C()
{
  return sub_2535B3644(&qword_269CDFA48, (void (*)(uint64_t))type metadata accessor for ContextProtoSampleInvocation);
}

uint64_t sub_2535B2CB4()
{
  return sub_2535B3644(&qword_269CDFA80, (void (*)(uint64_t))type metadata accessor for ContextProtoSampleInvocation);
}

uint64_t sub_2535B2CFC()
{
  return sub_2535B3644(&qword_269CDFDA0, (void (*)(uint64_t))type metadata accessor for ContextProtoSampleInvocation);
}

uint64_t sub_2535B2D44()
{
  return sub_2535B3644(&qword_269CDFDA8, (void (*)(uint64_t))type metadata accessor for ContextProtoToolRetrievalType);
}

uint64_t sub_2535B2D8C()
{
  return sub_2535B3644(&qword_269CDFAD8, (void (*)(uint64_t))type metadata accessor for ContextProtoToolRetrievalType);
}

uint64_t sub_2535B2DD4()
{
  return sub_2535B3644(&qword_269CDFAB8, (void (*)(uint64_t))type metadata accessor for ContextProtoToolRetrievalType);
}

uint64_t sub_2535B2E1C()
{
  return sub_2535B3644(&qword_269CDFDB0, (void (*)(uint64_t))type metadata accessor for ContextProtoToolRetrievalType);
}

uint64_t sub_2535B2E64()
{
  return sub_2535B3644(&qword_269CDFDB8, (void (*)(uint64_t))type metadata accessor for ContextProtoToolQuery);
}

uint64_t sub_2535B2EAC()
{
  return sub_2535B3644(&qword_269CDFDC0, (void (*)(uint64_t))type metadata accessor for ContextProtoToolQuery);
}

uint64_t sub_2535B2EF4()
{
  return sub_2535B3644(&qword_269CDFAC0, (void (*)(uint64_t))type metadata accessor for ContextProtoToolQuery);
}

uint64_t sub_2535B2F3C()
{
  return sub_2535B3644(&qword_269CDFDC8, (void (*)(uint64_t))type metadata accessor for ContextProtoToolQuery);
}

uint64_t sub_2535B2F84()
{
  return sub_2535B3644(&qword_269CDFDD0, (void (*)(uint64_t))type metadata accessor for ContextProtoToolQueryOutput);
}

uint64_t sub_2535B2FCC()
{
  return sub_2535B3644(&qword_269CDFDD8, (void (*)(uint64_t))type metadata accessor for ContextProtoToolQueryOutput);
}

uint64_t sub_2535B3014()
{
  return sub_2535B3644(&qword_269CDFAC8, (void (*)(uint64_t))type metadata accessor for ContextProtoToolQueryOutput);
}

uint64_t sub_2535B305C()
{
  return sub_2535B3644(&qword_269CDFDE0, (void (*)(uint64_t))type metadata accessor for ContextProtoToolQueryOutput);
}

uint64_t sub_2535B30A4()
{
  return sub_2535B3644(&qword_269CDFDE8, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
}

uint64_t sub_2535B30EC()
{
  return sub_2535B3644(&qword_269CDFDF0, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
}

uint64_t sub_2535B3134()
{
  return sub_2535B3644(&qword_269CDFAE0, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
}

uint64_t sub_2535B317C()
{
  return sub_2535B3644(&qword_269CDFDF8, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
}

uint64_t sub_2535B31C4()
{
  return sub_2535B3644(&qword_269CDFE00, (void (*)(uint64_t))type metadata accessor for ContextProtoSpanMatchedEntity);
}

uint64_t sub_2535B320C()
{
  return sub_2535B3644(&qword_269CDF9E8, (void (*)(uint64_t))type metadata accessor for ContextProtoSpanMatchedEntity);
}

uint64_t sub_2535B3254()
{
  return sub_2535B3644(&qword_269CDFAF0, (void (*)(uint64_t))type metadata accessor for ContextProtoSpanMatchedEntity);
}

uint64_t sub_2535B329C()
{
  return sub_2535B3644(&qword_269CDFE08, (void (*)(uint64_t))type metadata accessor for ContextProtoSpanMatchedEntity);
}

uint64_t sub_2535B32E4()
{
  return sub_2535B3644(&qword_269CDFE10, (void (*)(uint64_t))type metadata accessor for ContextProtoEntityMatch);
}

uint64_t sub_2535B332C()
{
  return sub_2535B3644(&qword_269CDFAE8, (void (*)(uint64_t))type metadata accessor for ContextProtoEntityMatch);
}

uint64_t sub_2535B3374()
{
  return sub_2535B3644(&qword_269CDFB10, (void (*)(uint64_t))type metadata accessor for ContextProtoEntityMatch);
}

uint64_t sub_2535B33BC()
{
  return sub_2535B3644(&qword_269CDFE18, (void (*)(uint64_t))type metadata accessor for ContextProtoEntityMatch);
}

uint64_t sub_2535B3404()
{
  return sub_2535B3644(&qword_269CDFE20, (void (*)(uint64_t))type metadata accessor for ContextProtoMatchProperties);
}

uint64_t sub_2535B344C()
{
  return sub_2535B3644(&qword_269CDFE28, (void (*)(uint64_t))type metadata accessor for ContextProtoMatchProperties);
}

uint64_t sub_2535B3494()
{
  return sub_2535B3644(&qword_269CDFB28, (void (*)(uint64_t))type metadata accessor for ContextProtoMatchProperties);
}

uint64_t sub_2535B34DC()
{
  return sub_2535B3644(&qword_269CDFE30, (void (*)(uint64_t))type metadata accessor for ContextProtoMatchProperties);
}

uint64_t sub_2535B3524()
{
  return sub_2535B3644(&qword_269CDFE38, (void (*)(uint64_t))type metadata accessor for ContextProtoAliasTypes);
}

uint64_t sub_2535B356C()
{
  return sub_2535B3644(&qword_269CDFE40, (void (*)(uint64_t))type metadata accessor for ContextProtoAliasTypes);
}

uint64_t sub_2535B35B4()
{
  return sub_2535B3644(&qword_269CDFB38, (void (*)(uint64_t))type metadata accessor for ContextProtoAliasTypes);
}

uint64_t sub_2535B35FC()
{
  return sub_2535B3644(&qword_269CDFE48, (void (*)(uint64_t))type metadata accessor for ContextProtoAliasTypes);
}

uint64_t sub_2535B3644(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2535B368C()
{
  unint64_t result = qword_269CDFF78;
  if (!qword_269CDFF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFF78);
  }
  return result;
}

unint64_t sub_2535B36D8()
{
  unint64_t result = qword_269CDFF80;
  if (!qword_269CDFF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFF80);
  }
  return result;
}

uint64_t sub_2535B3724(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25346CAF4();
  sub_2535B3F64();
  v4();
  return a2;
}

uint64_t sub_2535B3780(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_25346CAF4();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_2535B37D8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_253462A5C(a3);
  sub_25346CAF4();
  sub_2535B3F64();
  v4();
  return a2;
}

unint64_t sub_2535B3830()
{
  unint64_t result = qword_269CDFFA0;
  if (!qword_269CDFFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFFA0);
  }
  return result;
}

uint64_t sub_2535B387C()
{
  return v0;
}

uint64_t sub_2535B3890()
{
  return sub_253B07230();
}

uint64_t sub_2535B38B8()
{
  return v0;
}

uint64_t sub_2535B38F4()
{
  return v0;
}

uint64_t sub_2535B3924()
{
  return v0;
}

uint64_t sub_2535B3960()
{
  return sub_253B096B0();
}

uint64_t sub_2535B3980()
{
  return sub_253B07160();
}

uint64_t sub_2535B39B0()
{
  return v0;
}

uint64_t sub_2535B39E4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2535B3A10()
{
  return v0;
}

unint64_t sub_2535B3A28(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

uint64_t sub_2535B3A30()
{
  return *(void *)v0;
}

uint64_t sub_2535B3A4C()
{
  return *(void *)(v0 - 112);
}

uint64_t sub_2535B3A80()
{
  return sub_253B07440();
}

uint64_t sub_2535B3A9C()
{
  return sub_253B07230();
}

uint64_t sub_2535B3AB4()
{
  return sub_253B074F0();
}

uint64_t sub_2535B3AE0()
{
  return sub_253B07140();
}

uint64_t sub_2535B3B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 112) = (char *)&a9 - v9;
  return 0;
}

uint64_t sub_2535B3B2C()
{
  return sub_253B074C0();
}

uint64_t sub_2535B3B48()
{
  return sub_253B07140();
}

uint64_t sub_2535B3B64()
{
  return *(void *)(v0 - 96);
}

uint64_t sub_2535B3B84()
{
  return sub_253B07330();
}

uint64_t sub_2535B3B9C()
{
  return sub_2534B2064(v1, v0);
}

uint64_t sub_2535B3BB4()
{
  return v0;
}

uint64_t sub_2535B3BCC()
{
  return sub_253B07140();
}

uint64_t sub_2535B3BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v12 - 120) = v11;
  return sub_2535B37D8(v11, (uint64_t)&a9 - v9, v10);
}

uint64_t sub_2535B3C1C()
{
  return sub_253B074C0();
}

uint64_t sub_2535B3C40()
{
  return sub_253B07140();
}

uint64_t sub_2535B3C64()
{
  return sub_253B074A0();
}

uint64_t sub_2535B3C80()
{
  return v0;
}

uint64_t sub_2535B3CAC()
{
  return sub_253B07140();
}

uint64_t sub_2535B3CD4()
{
  return sub_253B07340();
}

uint64_t sub_2535B3D00()
{
  return v0 & 1;
}

uint64_t sub_2535B3D0C@<X0>(uint64_t a1@<X8>)
{
  return *(void *)a1;
}

uint64_t sub_2535B3D1C()
{
  return sub_2535B3780(v1, v0);
}

uint64_t sub_2535B3D38()
{
  return sub_253B096B0();
}

uint64_t sub_2535B3D8C()
{
  return v0;
}

uint64_t sub_2535B3D98()
{
  return sub_2535A0FA4(v0);
}

uint64_t sub_2535B3DCC()
{
  return v0;
}

uint64_t sub_2535B3DE4()
{
  return sub_2535B37D8(v2, v1, v0);
}

uint64_t sub_2535B3E08()
{
  return 0;
}

uint64_t sub_2535B3E30@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return sub_2535B37D8(v2, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
}

uint64_t sub_2535B3E60()
{
  return v0;
}

uint64_t sub_2535B3E84()
{
  return sub_2535AA444(v0);
}

uint64_t sub_2535B3EB4()
{
  return v0;
}

uint64_t sub_2535B3ED8()
{
  return v0;
}

uint64_t sub_2535B3EFC()
{
  return sub_2535AA444(v0);
}

uint64_t sub_2535B3F2C(uint64_t a1)
{
  return sub_2535B37D8(a1, v1, v2);
}

uint64_t sub_2535B3F44()
{
  *(void *)(v3 - 104) = v1;
  return sub_2535B37D8(v1, v2, v0);
}

uint64_t sub_2535B3F80()
{
  return sub_2534B2064(v1, v0);
}

uint64_t sub_2535B3F98@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 - 96) + a1;
}

uint64_t sub_2535B3FB8()
{
  return 0;
}

uint64_t sub_2535B3FD8()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_2535B3FE8()
{
  return *(void *)v0;
}

uint64_t sub_2535B3FF8()
{
  return v0;
}

uint64_t sub_2535B4018()
{
  return sub_253B096B0();
}

uint64_t sub_2535B4038()
{
  return sub_253B07450();
}

uint64_t sub_2535B4054(uint64_t a1)
{
  return sub_2535B37D8(a1, v2, v1);
}

uint64_t sub_2535B406C()
{
  return sub_253B07140();
}

uint64_t sub_2535B4094()
{
  return sub_2535AA480(v0);
}

uint64_t sub_2535B40BC()
{
  return sub_2535AA4B4(v0);
}

uint64_t sub_2535B40E4()
{
  return sub_253B07140();
}

uint64_t sub_2535B410C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_2535B37D8(v3, v4, a3);
}

uint64_t sub_2535B4124()
{
  return v0 & 1;
}

uint64_t sub_2535B4130()
{
  return sub_2534B2064(v1, v0);
}

uint64_t sub_2535B4148()
{
  return v0;
}

uint64_t sub_2535B4154()
{
  return sub_253B07160();
}

uint64_t sub_2535B4170()
{
  return sub_253B072C0();
}

uint64_t sub_2535B4188()
{
  sub_2535342E8(v0, v1);
  sub_2535342E8(v2, v3);
  return v0;
}

uint64_t sub_2535B41B8()
{
  return sub_2534B2064(v0, v1);
}

uint64_t sub_2535B41D0()
{
  return sub_2535B37D8(v1, v2, v0);
}

uint64_t sub_2535B41FC()
{
  return v0 & 1;
}

uint64_t sub_2535B4220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 184) = (char *)&a9 - v9;
  return 0;
}

uint64_t sub_2535B4238()
{
  return *(void *)(v0 + 64);
}

uint64_t sub_2535B4248()
{
  return *(void *)(v0 + 48);
}

uint64_t sub_2535B4270()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_2535B4294()
{
  return sub_2534B2064(v1, v0);
}

uint64_t sub_2535B42B8()
{
  return sub_253B096B0();
}

uint64_t sub_2535B42F0()
{
  return sub_253B07470();
}

uint64_t sub_2535B430C()
{
  return sub_253B074C0();
}

uint64_t sub_2535B4330()
{
  return sub_2535A0FD8(v0);
}

uint64_t sub_2535B436C(uint64_t a1)
{
  return sub_2535B37D8(a1, v1, v2);
}

uint64_t sub_2535B4384()
{
  return v0;
}

void sub_2535B439C()
{
  sub_2535ACB1C();
}

uint64_t sub_2535B43C0()
{
  return sub_2535B3780(v1, v0);
}

uint64_t sub_2535B43DC()
{
  return sub_2534B2064(v1, v0);
}

uint64_t sub_2535B43F4()
{
  return sub_2534B2064(v1, v0);
}

uint64_t sub_2535B440C()
{
  return sub_2534B2064(v1, v0);
}

uint64_t sub_2535B4424()
{
  return sub_2534B2064(v1, v0);
}

uint64_t sub_2535B4448()
{
  return sub_253B07310();
}

uint64_t sub_2535B4460()
{
  return sub_2534B2064(v1, v0);
}

uint64_t sub_2535B4478()
{
  return sub_2534B2064(v1, v0);
}

uint64_t sub_2535B4490()
{
  return sub_2534B2064(v1, v0);
}

uint64_t sub_2535B44A8()
{
  return sub_2535B3780(v1, v0);
}

uint64_t sub_2535B44C0()
{
  return sub_2534B2064(v1, v0);
}

uint64_t sub_2535B44D8()
{
  return sub_2534B2064(v1, v0);
}

uint64_t sub_2535B44F0()
{
  return sub_2534B2064(v1, v0);
}

uint64_t sub_2535B4508(uint64_t a1)
{
  return sub_2535B37D8(a1, v2, v1);
}

uint64_t sub_2535B4520()
{
  return sub_2534B2064(v1, v0);
}

uint64_t sub_2535B4538()
{
  return sub_2534B2064(v0, v1);
}

uint64_t sub_2535B4550()
{
  return sub_2534B2064(v0, v1);
}

uint64_t sub_2535B4568()
{
  return sub_2535B3644(v1, v0);
}

uint64_t sub_2535B4614()
{
  return sub_253B0A4C0();
}

uint64_t sub_2535B462C()
{
  return sub_253B07470();
}

uint64_t sub_2535B464C()
{
  return v0;
}

uint64_t sub_2535B46B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return sub_2535ADEE4(v6, v5, v8, v7, a5);
}

uint64_t sub_2535B46D0()
{
  return sub_2535977F4();
}

uint64_t sub_2535B46F0()
{
  return v0;
}

double sub_2535B4704()
{
  return *(double *)v0;
}

IntelligenceFlowPlannerSupport::ContextProtoContextDataSource_optional __swiftcall ContextProtoContextDataSource.init(rawValue:)(Swift::Int rawValue)
{
  sub_253592EB0(v1);
  return result;
}

uint64_t ContextProtoContextDataSource.rawValue.getter()
{
  return *v0;
}

IntelligenceFlowPlannerSupport::ContextProtoContextType_optional __swiftcall ContextProtoContextType.init(rawValue:)(Swift::Int rawValue)
{
  sub_253592EB0(v1);
  return result;
}

IntelligenceFlowPlannerSupport::ContextProtoStructuredContextSiriRequestContextUserClassification_optional __swiftcall ContextProtoStructuredContextSiriRequestContextUserClassification.init(rawValue:)(Swift::Int rawValue)
{
  sub_253592EB0(v1);
  return result;
}

IntelligenceFlowPlannerSupport::ContextProtoStructuredContextSiriRequestContextDeviceIdiom_optional __swiftcall ContextProtoStructuredContextSiriRequestContextDeviceIdiom.init(rawValue:)(Swift::Int rawValue)
{
  sub_253592EB0(v1);
  return result;
}

IntelligenceFlowPlannerSupport::ContextProtoConfidenceBucket_optional __swiftcall ContextProtoConfidenceBucket.init(rawValue:)(Swift::Int rawValue)
{
  sub_253592EB0(v1);
  return result;
}

IntelligenceFlowPlannerSupport::ContextProtoAliasTypesOptions_optional __swiftcall ContextProtoAliasTypesOptions.init(rawValue:)(Swift::Int rawValue)
{
  sub_253592EB0(v1);
  return result;
}

uint64_t ContextProtoRetrievedContext.init()@<X0>(unsigned char *a1@<X8>)
{
  type metadata accessor for ContextProtoRetrievedContext(0);
  uint64_t v3 = sub_2535E2850();
  sub_2535E2750(v3);
  uint64_t v4 = (uint64_t)&a1[*(int *)(v1 + 24)];
  sub_2535E2870();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, 1, 1, v5);
  uint64_t v6 = sub_2535E233C();
  uint64_t v7 = type metadata accessor for ContextProtoContextMetadata(v6);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, 1, 1, v7);
  sub_2535E2810(*(int *)(v1 + 32));
  uint64_t v8 = sub_2535E233C();
  uint64_t v9 = type metadata accessor for ContextProtoStructuredContext(v8);
  sub_2535E22A8(v9);
  sub_2535E27FC();
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *a1 = 0;
  return result;
}

uint64_t type metadata accessor for ContextProtoRetrievedContext(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE00A8);
}

uint64_t type metadata accessor for ContextProtoConfidence(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE0120);
}

uint64_t type metadata accessor for ContextProtoContextMetadata(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE00D0);
}

uint64_t type metadata accessor for ContextProtoStructuredContext(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE0130);
}

uint64_t ContextProtoRetrievedContext.unknownFields.getter()
{
  type metadata accessor for ContextProtoRetrievedContext(0);
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v0 = sub_2534ACF74();
  return v1(v0);
}

uint64_t ContextProtoRetrievedContext.unknownFields.setter()
{
  type metadata accessor for ContextProtoRetrievedContext(0);
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v0 = sub_25349C5EC();
  return v1(v0);
}

uint64_t (*ContextProtoRetrievedContext.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoContextMetadata.init()()
{
  uint64_t v1 = (int *)sub_2535E288C();
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  uint64_t v2 = v0 + v1[7];
  sub_2535E2870();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, 1, 1, v3);
  uint64_t v4 = type metadata accessor for ContextProtoBoundingBox(0);
  sub_2535E2750(v4);
  uint64_t v5 = v0 + v1[9];
  *(void *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 8) = 1;
  sub_2535E27FC();
  *(unsigned char *)(v0 + v6) = 2;
  *(unsigned char *)(v0 + v1[12]) = 2;
  sub_2535E2810(v1[13]);
  *(unsigned char *)(v0 + v1[14]) = 6;
  uint64_t v7 = sub_2535E233C();
  uint64_t v8 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(v7);
  sub_2535E22A8(v8);
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)uint64_t v0 = MEMORY[0x263F8EE78];
  return result;
}

uint64_t type metadata accessor for ContextProtoBoundingBox(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE0100);
}

uint64_t type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE00F0);
}

uint64_t ContextProtoContextMetadata.unknownFields.getter()
{
  sub_2535E288C();
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v0 = sub_2534ACF74();
  return v1(v0);
}

uint64_t ContextProtoContextMetadata.unknownFields.setter()
{
  type metadata accessor for ContextProtoContextMetadata(0);
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v0 = sub_25349C5EC();
  return v1(v0);
}

uint64_t (*ContextProtoContextMetadata.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoContextualEntityDisplayRepresentation.init()()
{
  uint64_t v1 = sub_2534F8A1C();
  type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(v1);
  _OWORD *v0 = 0u;
  v0[1] = 0u;
  return sub_2535E25C4();
}

uint64_t ContextProtoContextualEntityDisplayRepresentation.unknownFields.getter()
{
  return sub_2535B4F3C();
}

uint64_t ContextProtoContextualEntityDisplayRepresentation.unknownFields.setter()
{
  return sub_2535B4FBC();
}

uint64_t (*ContextProtoContextualEntityDisplayRepresentation.unknownFields.modify())()
{
  uint64_t v0 = sub_2534D9690();
  type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(v0);
  sub_2535E23AC();
  return nullsub_1;
}

uint64_t ContextProtoBoundingBox.init()@<X0>(uint64_t a1@<X8>)
{
  sub_2535E28A4(a1);
  *(_DWORD *)(v1 + 8) = 0;
  *(unsigned char *)(v1 + 12) = v2;
  *(_DWORD *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 20) = v2;
  *(_DWORD *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 28) = v2;
  type metadata accessor for ContextProtoBoundingBox(0);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t ContextProtoBoundingBox.unknownFields.getter()
{
  return sub_2535B5414();
}

uint64_t ContextProtoBoundingBox.unknownFields.setter()
{
  return sub_2535B5494();
}

uint64_t (*ContextProtoBoundingBox.unknownFields.modify())()
{
  uint64_t v0 = sub_2534D9690();
  type metadata accessor for ContextProtoBoundingBox(v0);
  sub_2535E24C8();
  return nullsub_1;
}

uint64_t ContextProtoSurroundingText.init()()
{
  uint64_t v1 = sub_2534F8A1C();
  type metadata accessor for ContextProtoSurroundingText(v1);
  void *v0 = 0;
  v0[1] = 0;
  uint64_t v2 = type metadata accessor for ContextProtoBoundingBox(0);
  return sub_2535E23D0(v2);
}

uint64_t type metadata accessor for ContextProtoSurroundingText(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE0110);
}

uint64_t ContextProtoSurroundingText.unknownFields.getter()
{
  return sub_2535B4F3C();
}

uint64_t sub_2535B4F3C()
{
  uint64_t v0 = sub_2534F8A1C();
  v1(v0);
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v2 = sub_2534ACF74();
  return v3(v2);
}

uint64_t ContextProtoSurroundingText.unknownFields.setter()
{
  return sub_2535B4FBC();
}

uint64_t sub_2535B4FBC()
{
  uint64_t v0 = sub_2534D9690();
  v1(v0);
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v2 = sub_25349C5EC();
  return v3(v2);
}

uint64_t (*ContextProtoSurroundingText.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoConfidence.init()()
{
  uint64_t v1 = sub_2534F8A1C();
  type metadata accessor for ContextProtoConfidence(v1);
  uint64_t result = sub_2535E25C4();
  *(_DWORD *)uint64_t v0 = 0;
  *(unsigned char *)(v0 + 4) = 0;
  return result;
}

uint64_t ContextProtoConfidence.unknownFields.getter()
{
  return sub_2535B4F3C();
}

uint64_t ContextProtoConfidence.unknownFields.setter()
{
  return sub_2535B4FBC();
}

uint64_t (*ContextProtoConfidence.unknownFields.modify())()
{
  uint64_t v0 = sub_2534D9690();
  type metadata accessor for ContextProtoConfidence(v0);
  sub_2535E23AC();
  return nullsub_1;
}

uint64_t ContextProtoStructuredContext.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B5ED0(type metadata accessor for ContextProtoStructuredContextKind, (void (*)(void))type metadata accessor for ContextProtoStructuredContext, a1);
}

uint64_t type metadata accessor for ContextProtoStructuredContextKind(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE0148);
}

uint64_t ContextProtoStructuredContext.unknownFields.getter()
{
  return sub_2535B5F48();
}

uint64_t ContextProtoStructuredContext.unknownFields.setter()
{
  return sub_2535B5FC8();
}

uint64_t (*ContextProtoStructuredContext.unknownFields.modify())()
{
  uint64_t v0 = sub_2534D9690();
  type metadata accessor for ContextProtoStructuredContext(v0);
  sub_2534F87A4();
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.init()@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  uint64_t v3 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  *(_DWORD *)(a1 + 80) = 33686018;
  *(unsigned char *)(a1 + 84) = 2;
  uint64_t v4 = sub_2535E233C();
  uint64_t v5 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(v4);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, v5);
  *(_OWORD *)(a1 + v3[16]) = xmmword_253B34E70;
  sub_2535E27F0(v3[17]);
  sub_2535E27F0(v3[18]);
  uint64_t v6 = sub_2535E233C();
  uint64_t v7 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(v6);
  sub_2535E22A8(v7);
  uint64_t v8 = a1 + v3[20];
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = 1;
  sub_2535E27F0(v3[21]);
  *(unsigned char *)(a1 + v3[22]) = 2;
  *(unsigned char *)(a1 + v3[23]) = 2;
  uint64_t v9 = sub_2535E233C();
  uint64_t v10 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(v9);
  sub_2535E22A8(v10);
  *(unsigned char *)(a1 + v3[25]) = 12;
  *(unsigned char *)(a1 + v3[26]) = 2;
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v12 = MEMORY[0x263F8EE78];
  *(void *)a1 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 8) = v12;
  return result;
}

uint64_t type metadata accessor for ContextProtoStructuredContextSiriRequestContext(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE0158);
}

uint64_t type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE0190);
}

uint64_t type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE0180);
}

uint64_t type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE01A0);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.unknownFields.getter()
{
  return sub_2535B5AE4();
}

uint64_t ContextProtoStructuredContextSiriRequestContext.unknownFields.setter()
{
  return sub_2535B5B64();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.init()@<X0>(uint64_t a1@<X8>)
{
  sub_2535E28A4(a1);
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 28) = v2;
  *(_DWORD *)(v1 + 32) = 0;
  *(unsigned char *)(v1 + 36) = v2;
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.unknownFields.getter()
{
  return sub_2535B5414();
}

uint64_t sub_2535B5414()
{
  uint64_t v0 = sub_2534F8A1C();
  v1(v0);
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v2 = sub_2534ACF74();
  return v3(v2);
}

uint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.unknownFields.setter()
{
  return sub_2535B5494();
}

uint64_t sub_2535B5494()
{
  uint64_t v0 = sub_2534D9690();
  v1(v0);
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v2 = sub_25349C5EC();
  return v3(v2);
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextContentRestriction.unknownFields.modify())()
{
  uint64_t v0 = sub_2534D9690();
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(v0);
  sub_2535E24C8();
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 1282;
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.unknownFields.getter()
{
  return sub_2535B58FC();
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.unknownFields.setter()
{
  return sub_2535B597C();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextUser.unknownFields.modify())()
{
  uint64_t v0 = sub_2534D9690();
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(v0);
  sub_2535E2454();
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.init()()
{
  uint64_t v1 = sub_2534F8A1C();
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(v1);
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)uint64_t v0 = MEMORY[0x263F8EE78];
  return result;
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.unknownFields.getter()
{
  return sub_2535B5700();
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.unknownFields.setter()
{
  return sub_2535B5780();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextMeCard.unknownFields.modify())()
{
  uint64_t v0 = sub_2534D9690();
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(v0);
  sub_2535E252C();
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextAddress.init()()
{
  uint64_t v1 = sub_2534F8A1C();
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(v1);
  _OWORD *v0 = 0u;
  v0[1] = 0u;
  v0[2] = 0u;
  v0[3] = 0u;
  v0[4] = 0u;
  v0[5] = 0u;
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t ContextProtoStructuredContextSiriRequestContextAddress.unknownFields.getter()
{
  return sub_2535B5700();
}

uint64_t sub_2535B5700()
{
  uint64_t v0 = sub_2534F8A1C();
  v1(v0);
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v2 = sub_2534ACF74();
  return v3(v2);
}

uint64_t ContextProtoStructuredContextSiriRequestContextAddress.unknownFields.setter()
{
  return sub_2535B5780();
}

uint64_t sub_2535B5780()
{
  uint64_t v0 = sub_2534D9690();
  v1(v0);
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v2 = sub_25349C5EC();
  return v3(v2);
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextAddress.unknownFields.modify())()
{
  uint64_t v0 = sub_2534D9690();
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(v0);
  sub_2535E252C();
  return nullsub_1;
}

void ContextProtoStructuredContextIntelligenceCommandContext.init()()
{
}

uint64_t ContextProtoStructuredContextIntelligenceCommandContext.unknownFields.getter()
{
  return sub_2535B5700();
}

uint64_t ContextProtoStructuredContextIntelligenceCommandContext.unknownFields.setter()
{
  return sub_2535B5780();
}

uint64_t (*ContextProtoStructuredContextIntelligenceCommandContext.unknownFields.modify())()
{
  uint64_t v0 = sub_2534D9690();
  type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(v0);
  sub_2535E252C();
  return nullsub_1;
}

void ContextProtoStructedContextAppInFocusContext.init()()
{
  uint64_t v1 = sub_2534F8A1C();
  type metadata accessor for ContextProtoStructedContextAppInFocusContext(v1);
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_2535E2584();
}

uint64_t ContextProtoStructedContextAppInFocusContext.unknownFields.getter()
{
  return sub_2535B58FC();
}

uint64_t sub_2535B58FC()
{
  uint64_t v0 = sub_2534F8A1C();
  v1(v0);
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v2 = sub_2534ACF74();
  return v3(v2);
}

uint64_t ContextProtoStructedContextAppInFocusContext.unknownFields.setter()
{
  return sub_2535B597C();
}

uint64_t sub_2535B597C()
{
  uint64_t v0 = sub_2534D9690();
  v1(v0);
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v2 = sub_25349C5EC();
  return v3(v2);
}

uint64_t (*ContextProtoStructedContextAppInFocusContext.unknownFields.modify())()
{
  uint64_t v0 = sub_2534D9690();
  type metadata accessor for ContextProtoStructedContextAppInFocusContext(v0);
  sub_2535E2454();
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.init()@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for ContextProtoQueryDecorationOutput(0);
  uint64_t v2 = sub_2535E233C();
  uint64_t DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(v2);
  sub_2535E22A8(DecorationToolRetrievalResponse);
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v5 = MEMORY[0x263F8EE78];
  *(void *)a1 = MEMORY[0x263F8EE78];
  *(unsigned char *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = v5;
  *(unsigned char *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = v5;
  *(unsigned char *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = v5;
  *(unsigned char *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = v5;
  *(unsigned char *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = v5;
  *(unsigned char *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = v5;
  *(unsigned char *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = v5;
  *(unsigned char *)(a1 + 168) = 0;
  return result;
}

uint64_t ContextProtoQueryDecorationOutput.unknownFields.getter()
{
  return sub_2535B5AE4();
}

uint64_t sub_2535B5AE4()
{
  uint64_t v0 = sub_2534F8A1C();
  v1(v0);
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v2 = sub_2534ACF74();
  return v3(v2);
}

uint64_t ContextProtoQueryDecorationOutput.unknownFields.setter()
{
  return sub_2535B5B64();
}

uint64_t sub_2535B5B64()
{
  uint64_t v0 = sub_2534D9690();
  v1(v0);
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v2 = sub_25349C5EC();
  return v3(v2);
}

uint64_t (*ContextProtoQueryDecorationOutput.unknownFields.modify())()
{
  return nullsub_1;
}

void ContextProtoQueryDecorationInput.init()()
{
}

void sub_2535B5C24()
{
  uint64_t v1 = sub_2534F8A1C();
  v2(v1);
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_2535E2584();
  *(unsigned char *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = MEMORY[0x263F8EE78];
}

uint64_t ContextProtoQueryDecorationInput.unknownFields.getter()
{
  return sub_2535B5700();
}

uint64_t ContextProtoQueryDecorationInput.unknownFields.setter()
{
  return sub_2535B5780();
}

uint64_t (*ContextProtoQueryDecorationInput.unknownFields.modify())()
{
  uint64_t v0 = sub_2534D9690();
  type metadata accessor for ContextProtoQueryDecorationInput(v0);
  sub_2535E252C();
  return nullsub_1;
}

void ContextProtoDynamicEnumerationEntity.init()()
{
  uint64_t v1 = sub_2534F8A1C();
  type metadata accessor for ContextProtoDynamicEnumerationEntity(v1);
  sub_2535E233C();
  uint64_t v2 = sub_253B08E60();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v0, 1, 1, v2);
  uint64_t v3 = sub_253B08E50();
  sub_2535E269C(v3);
  sub_2535E2584();
}

uint64_t ContextProtoDynamicEnumerationEntity.unknownFields.getter()
{
  return sub_2535B58FC();
}

uint64_t ContextProtoDynamicEnumerationEntity.unknownFields.setter()
{
  return sub_2535B597C();
}

uint64_t (*ContextProtoDynamicEnumerationEntity.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoRetrievedTool.init()()
{
  uint64_t v1 = sub_2534F8A1C();
  type metadata accessor for ContextProtoRetrievedTool(v1);
  uint64_t v2 = sub_2535E233C();
  uint64_t v3 = type metadata accessor for ContextProtoRetrievedTool.Definition(v2);
  uint64_t result = sub_2535E2660(v3);
  *(_DWORD *)uint64_t v0 = 0;
  *(void *)(v0 + 8) = MEMORY[0x263F8EE78];
  *(unsigned char *)(v0 + 16) = 0;
  return result;
}

uint64_t ContextProtoRetrievedTool.unknownFields.getter()
{
  return sub_2535B5414();
}

uint64_t ContextProtoRetrievedTool.unknownFields.setter()
{
  return sub_2535B5494();
}

uint64_t (*ContextProtoRetrievedTool.unknownFields.modify())()
{
  return nullsub_1;
}

IntelligenceFlowPlannerSupport::ContextProtoRetrievedTool::Stage_optional __swiftcall ContextProtoRetrievedTool.Stage.init(rawValue:)(Swift::Int rawValue)
{
  sub_253592EB0(v1);
  return result;
}

uint64_t ContextProtoRetrievedTool.Definition.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B5ED0(type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.Definition, a1);
}

uint64_t sub_2535B5ED0@<X0>(uint64_t (*a1)(void)@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1(0);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a3, 1, 1, v5);
  a2(0);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t ContextProtoRetrievedTool.Definition.unknownFields.getter()
{
  return sub_2535B5F48();
}

uint64_t sub_2535B5F48()
{
  uint64_t v0 = sub_2534F8A1C();
  v1(v0);
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v2 = sub_2534ACF74();
  return v3(v2);
}

uint64_t ContextProtoRetrievedTool.Definition.unknownFields.setter()
{
  return sub_2535B5FC8();
}

uint64_t sub_2535B5FC8()
{
  uint64_t v0 = sub_2534D9690();
  v1(v0);
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v2 = sub_25349C5EC();
  return v3(v2);
}

uint64_t (*ContextProtoRetrievedTool.Definition.unknownFields.modify())()
{
  uint64_t v0 = sub_2534D9690();
  type metadata accessor for ContextProtoRetrievedTool.Definition(v0);
  sub_2534F87A4();
  return nullsub_1;
}

uint64_t ContextProtoUIControlTool.init()()
{
  uint64_t v1 = sub_2534F8A1C();
  type metadata accessor for ContextProtoUIControlTool(v1);
  _OWORD *v0 = 0u;
  v0[1] = 0u;
  v0[2] = 0u;
  sub_2535E233C();
  uint64_t v2 = sub_253B08F30();
  return sub_2535E2660(v2);
}

uint64_t ContextProtoUIControlTool.unknownFields.getter()
{
  return sub_2535B5414();
}

uint64_t ContextProtoUIControlTool.unknownFields.setter()
{
  return sub_2535B5494();
}

uint64_t (*ContextProtoUIControlTool.unknownFields.modify())()
{
  return nullsub_1;
}

void ContextProtoSampleInvocation.init()()
{
  uint64_t v1 = sub_2534F8A1C();
  type metadata accessor for ContextProtoSampleInvocation(v1);
  sub_2535E25C4();
  sub_2535E2584();
  *(_DWORD *)(v0 + 16) = 0;
}

uint64_t ContextProtoSampleInvocation.unknownFields.getter()
{
  return sub_2535B4F3C();
}

uint64_t ContextProtoSampleInvocation.unknownFields.setter()
{
  return sub_2535B4FBC();
}

uint64_t (*ContextProtoSampleInvocation.unknownFields.modify())()
{
  uint64_t v0 = sub_2534D9690();
  type metadata accessor for ContextProtoSampleInvocation(v0);
  sub_2535E23AC();
  return nullsub_1;
}

uint64_t ContextProtoToolRetrievalType.init()()
{
  sub_2534F8A1C();
  uint64_t v1 = sub_253B08E80();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v0, 1, 1, v1);
  type metadata accessor for ContextProtoToolRetrievalType(0);
  sub_2535E233C();
  uint64_t v2 = sub_253B08E70();
  return sub_2535E23D0(v2);
}

uint64_t ContextProtoToolRetrievalType.unknownFields.getter()
{
  return sub_2535B4F3C();
}

uint64_t ContextProtoToolRetrievalType.unknownFields.setter()
{
  return sub_2535B4FBC();
}

uint64_t (*ContextProtoToolRetrievalType.unknownFields.modify())()
{
  return nullsub_1;
}

void ContextProtoToolQuery.init()()
{
  uint64_t v1 = sub_2534F8A1C();
  type metadata accessor for ContextProtoToolQuery(v1);
  sub_2535E25C4();
  sub_2535E2584();
  *(void *)(v0 + 16) = MEMORY[0x263F8EE78];
}

uint64_t ContextProtoToolQuery.unknownFields.getter()
{
  return sub_2535B4F3C();
}

uint64_t ContextProtoToolQuery.unknownFields.setter()
{
  return sub_2535B4FBC();
}

uint64_t (*ContextProtoToolQuery.unknownFields.modify())()
{
  uint64_t v0 = sub_2534D9690();
  type metadata accessor for ContextProtoToolQuery(v0);
  sub_2535E23AC();
  return nullsub_1;
}

uint64_t ContextProtoToolQueryOutput.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B5ED0(type metadata accessor for ContextProtoRetrievedTool.Definition, (void (*)(void))type metadata accessor for ContextProtoToolQueryOutput, a1);
}

uint64_t ContextProtoToolQueryOutput.unknownFields.getter()
{
  return sub_2535B5F48();
}

uint64_t ContextProtoToolQueryOutput.unknownFields.setter()
{
  return sub_2535B5FC8();
}

uint64_t (*ContextProtoToolQueryOutput.unknownFields.modify())()
{
  uint64_t v0 = sub_2534D9690();
  type metadata accessor for ContextProtoToolQueryOutput(v0);
  sub_2534F87A4();
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationToolRetrievalResponse.init()@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(_DWORD *)(a1 + 32) = 0;
  uint64_t v3 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 40) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = v3;
  return result;
}

uint64_t ContextProtoQueryDecorationToolRetrievalResponse.unknownFields.getter()
{
  type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v0 = sub_2534ACF74();
  return v1(v0);
}

uint64_t ContextProtoQueryDecorationToolRetrievalResponse.unknownFields.setter()
{
  type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v0 = sub_25349C5EC();
  return v1(v0);
}

uint64_t (*ContextProtoQueryDecorationToolRetrievalResponse.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoSpanMatchedEntity.init()()
{
  uint64_t v1 = sub_2534F8A1C();
  type metadata accessor for ContextProtoSpanMatchedEntity(v1);
  uint64_t v2 = sub_2535E2850();
  uint64_t result = sub_2535E23D0(v2);
  void *v0 = MEMORY[0x263F8EE78];
  return result;
}

uint64_t ContextProtoSpanMatchedEntity.unknownFields.getter()
{
  return sub_2535B4F3C();
}

uint64_t ContextProtoSpanMatchedEntity.unknownFields.setter()
{
  return sub_2535B4FBC();
}

uint64_t (*ContextProtoSpanMatchedEntity.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoEntityMatch.init()@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ContextProtoEntityMatch(0);
  uint64_t v3 = sub_2535E233C();
  uint64_t matched = type metadata accessor for ContextProtoMatchProperties(v3);
  sub_2535E22A8(matched);
  sub_2535E27F0(*(int *)(v2 + 52));
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0;
  *(void *)((char *)a1 + 45) = 0;
  a1[7] = 0;
  a1[8] = 0xE000000000000000;
  a1[9] = 0;
  a1[10] = 0xE000000000000000;
  return result;
}

uint64_t ContextProtoEntityMatch.unknownFields.getter()
{
  type metadata accessor for ContextProtoEntityMatch(0);
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v0 = sub_2534ACF74();
  return v1(v0);
}

uint64_t ContextProtoEntityMatch.unknownFields.setter()
{
  type metadata accessor for ContextProtoEntityMatch(0);
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v0 = sub_25349C5EC();
  return v1(v0);
}

uint64_t (*ContextProtoEntityMatch.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoMatchProperties.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 1;
  type metadata accessor for ContextProtoMatchProperties(0);
  uint64_t v1 = sub_2535E233C();
  uint64_t v2 = type metadata accessor for ContextProtoAliasTypes(v1);
  return sub_2535E269C(v2);
}

uint64_t ContextProtoMatchProperties.unknownFields.getter()
{
  return sub_2535B58FC();
}

uint64_t ContextProtoMatchProperties.unknownFields.setter()
{
  return sub_2535B597C();
}

uint64_t (*ContextProtoMatchProperties.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoAliasTypes.init()()
{
  uint64_t v1 = sub_2534F8A1C();
  type metadata accessor for ContextProtoAliasTypes(v1);
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  void *v0 = MEMORY[0x263F8EE78];
  return result;
}

uint64_t ContextProtoAliasTypes.unknownFields.getter()
{
  return sub_2535B5F48();
}

uint64_t ContextProtoAliasTypes.unknownFields.setter()
{
  return sub_2535B5FC8();
}

uint64_t (*ContextProtoAliasTypes.unknownFields.modify())()
{
  uint64_t v0 = sub_2534D9690();
  type metadata accessor for ContextProtoAliasTypes(v0);
  sub_2534F87A4();
  return nullsub_1;
}

void *static ContextProtoContextDataSource.allCases.getter()
{
  return &unk_270340ED0;
}

IntelligenceFlowPlannerSupport::ContextProtoContextDataSource_optional sub_2535B68EC(Swift::Int *a1)
{
  return ContextProtoContextDataSource.init(rawValue:)(*a1);
}

uint64_t sub_2535B68F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ContextProtoContextDataSource.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2535B691C()
{
  return sub_25397F9F0();
}

uint64_t sub_2535B6924(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2535B3830();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

uint64_t sub_2535B6970()
{
  return sub_253980940();
}

void sub_2535B6978(void *a1@<X8>)
{
  *a1 = &unk_270340ED0;
}

void *static ContextProtoContextType.allCases.getter()
{
  return &unk_270340EF8;
}

IntelligenceFlowPlannerSupport::ContextProtoContextType_optional sub_2535B6994(Swift::Int *a1)
{
  return ContextProtoContextType.init(rawValue:)(*a1);
}

uint64_t sub_2535B699C()
{
  return sub_25397FA10();
}

uint64_t sub_2535B69A4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2535B0D50();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

uint64_t sub_2535B69F0()
{
  return sub_253980960();
}

void sub_2535B69F8(void *a1@<X8>)
{
  *a1 = &unk_270340EF8;
}

void *static ContextProtoStructuredContextSiriRequestContextUserClassification.allCases.getter()
{
  return &unk_270340F38;
}

IntelligenceFlowPlannerSupport::ContextProtoStructuredContextSiriRequestContextUserClassification_optional sub_2535B6A14(Swift::Int *a1)
{
  return ContextProtoStructuredContextSiriRequestContextUserClassification.init(rawValue:)(*a1);
}

uint64_t sub_2535B6A1C()
{
  return sub_25397FA30();
}

uint64_t sub_2535B6A24(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2535B368C();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

uint64_t sub_2535B6A70()
{
  return sub_2539809A0();
}

void sub_2535B6A78(void *a1@<X8>)
{
  *a1 = &unk_270340F38;
}

void *static ContextProtoStructuredContextSiriRequestContextDeviceIdiom.allCases.getter()
{
  return &unk_270340F60;
}

IntelligenceFlowPlannerSupport::ContextProtoStructuredContextSiriRequestContextDeviceIdiom_optional sub_2535B6A94(Swift::Int *a1)
{
  return ContextProtoStructuredContextSiriRequestContextDeviceIdiom.init(rawValue:)(*a1);
}

uint64_t sub_2535B6A9C()
{
  return sub_25397FA50();
}

uint64_t sub_2535B6AA4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2535B36D8();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

uint64_t sub_2535B6AF0()
{
  return sub_253980980();
}

void sub_2535B6AF8(void *a1@<X8>)
{
  *a1 = &unk_270340F60;
}

void *static ContextProtoConfidenceBucket.allCases.getter()
{
  return &unk_270340F90;
}

IntelligenceFlowPlannerSupport::ContextProtoConfidenceBucket_optional sub_2535B6B14(Swift::Int *a1)
{
  return ContextProtoConfidenceBucket.init(rawValue:)(*a1);
}

uint64_t sub_2535B6B1C()
{
  return sub_25397FA70();
}

uint64_t sub_2535B6B24(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2535B0D9C();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

uint64_t sub_2535B6B70()
{
  return sub_253980F3C();
}

void sub_2535B6B78(void *a1@<X8>)
{
  *a1 = &unk_270340F90;
}

void *static ContextProtoQueryDecorationCoreService.allCases.getter()
{
  return &unk_270340FB8;
}

uint64_t sub_2535B6B94()
{
  return sub_25397FA90();
}

uint64_t sub_2535B6B9C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2535B0E34();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

uint64_t sub_2535B6BE8()
{
  return sub_25398107C();
}

void sub_2535B6BF0(void *a1@<X8>)
{
  *a1 = &unk_270340FB8;
}

void *static ContextProtoQueryDecorationCaller.allCases.getter()
{
  return &unk_270340FE0;
}

uint64_t sub_2535B6C0C()
{
  return sub_25397FAB0();
}

uint64_t sub_2535B6C14(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2535B0DE8();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

uint64_t sub_2535B6C60()
{
  return sub_25398103C();
}

void sub_2535B6C68(void *a1@<X8>)
{
  *a1 = &unk_270340FE0;
}

void *static ContextProtoEntityMatcherType.allCases.getter()
{
  return &unk_270341008;
}

uint64_t sub_2535B6C84()
{
  return sub_25397FAD0();
}

uint64_t sub_2535B6C8C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2535B0ECC();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

uint64_t sub_2535B6CD8()
{
  return sub_253980FDC();
}

void sub_2535B6CE0(void *a1@<X8>)
{
  *a1 = &unk_270341008;
}

void *static ContextProtoAliasTypesOptions.allCases.getter()
{
  return &unk_270341030;
}

IntelligenceFlowPlannerSupport::ContextProtoAliasTypesOptions_optional sub_2535B6CFC(Swift::Int *a1)
{
  return ContextProtoAliasTypesOptions.init(rawValue:)(*a1);
}

uint64_t sub_2535B6D04()
{
  return sub_25397FAF0();
}

uint64_t sub_2535B6D0C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2535B0F18();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

uint64_t sub_2535B6D58()
{
  return sub_253980FBC();
}

void sub_2535B6D60(void *a1@<X8>)
{
  *a1 = &unk_270341030;
}

void ContextProtoRetrievedContext.type.getter(unsigned char *a1@<X8>)
{
}

unsigned char *ContextProtoRetrievedContext.type.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*ContextProtoRetrievedContext.type.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoRetrievedContext.value.getter()
{
  return sub_2535B7DEC();
}

uint64_t ContextProtoRetrievedContext.value.setter()
{
  return sub_2535B7E44();
}

uint64_t (*ContextProtoRetrievedContext.value.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoRetrievedContext.relevance.getter()
{
  return sub_2535BA63C();
}

uint64_t ContextProtoRetrievedContext.relevance.setter()
{
  return sub_2535BA694();
}

uint64_t (*ContextProtoRetrievedContext.relevance.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoRetrievedContext.metadata.getter()
{
  return sub_2535B7364();
}

uint64_t ContextProtoRetrievedContext.metadata.setter()
{
  return sub_2535B73BC();
}

uint64_t (*ContextProtoRetrievedContext.metadata.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoRetrievedContext.typedValue.getter()
{
  return sub_2535B7450();
}

uint64_t ContextProtoRetrievedContext.typedValue.setter()
{
  return sub_2535B74A8();
}

uint64_t (*ContextProtoRetrievedContext.typedValue.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoRetrievedContext.structuredContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ContextProtoRetrievedContext(0);
  return sub_2534B45B0(v1 + *(int *)(v3 + 36), a1, &qword_269CDF8E0);
}

uint64_t ContextProtoRetrievedContext.structuredContext.setter(uint64_t a1)
{
  type metadata accessor for ContextProtoRetrievedContext(0);
  sub_2535E28B8();
  return sub_2535BC290(a1, v2, &qword_269CDF8E0);
}

uint64_t (*ContextProtoRetrievedContext.structuredContext.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoRetrievedContext.identifier.getter()
{
  return sub_2535B75D8((void (*)(void))type metadata accessor for ContextProtoRetrievedContext);
}

uint64_t ContextProtoRetrievedContext.identifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_2535B7628(a1, a2, (void (*)(void))type metadata accessor for ContextProtoRetrievedContext);
}

uint64_t (*ContextProtoRetrievedContext.identifier.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoRetrievedContext.init(value:relevance:type:metadata:typedValue:structuredContext:identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned char *a9@<X8>)
{
  char v28 = *a3;
  uint64_t v12 = (int *)type metadata accessor for ContextProtoRetrievedContext(0);
  uint64_t v13 = (uint64_t)&a9[v12[5]];
  uint64_t v14 = sub_253B08E50();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v13, 1, 1, v14);
  uint64_t v15 = (uint64_t)&a9[v12[6]];
  sub_2535E2870();
  sub_25346CC08(v15, v16, v17, v18);
  uint64_t v19 = (uint64_t)&a9[v12[7]];
  uint64_t v20 = type metadata accessor for ContextProtoContextMetadata(0);
  sub_25346CC08(v19, v21, v22, v20);
  uint64_t v23 = (uint64_t)&a9[v12[8]];
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v23, 1, 1, v14);
  uint64_t v24 = (uint64_t)&a9[v12[9]];
  uint64_t v25 = type metadata accessor for ContextProtoStructuredContext(0);
  sub_2535E22A8(v25);
  uint64_t v26 = &a9[v12[10]];
  *uint64_t v26 = 0;
  v26[1] = 0;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_2535BC290(a1, v13, &qword_269CDCBC8);
  sub_2535BC290(a2, v15, &qword_269CDF900);
  *a9 = v28;
  sub_2535BC290(a4, v19, &qword_269CDF8F0);
  sub_2535BC290(a5, v23, &qword_269CDCBC8);
  sub_2535BC290(a6, v24, &qword_269CDF8E0);
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v26 = a7;
  v26[1] = a8;
  return result;
}

uint64_t ContextProtoContextMetadata.onScreenSurroundingText.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoContextMetadata.onScreenSurroundingText.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*ContextProtoContextMetadata.onScreenSurroundingText.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoContextMetadata.entityID.getter()
{
  return sub_2534ACF74();
}

uint64_t (*ContextProtoContextMetadata.entityID.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoContextMetadata.appBundleID.getter()
{
  return sub_2534ACF74();
}

uint64_t (*ContextProtoContextMetadata.appBundleID.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoContextMetadata.saliency.getter()
{
  return sub_2535B7364();
}

uint64_t sub_2535B7364()
{
  uint64_t v0 = sub_2535E2348();
  uint64_t v2 = v1(v0);
  return sub_2535E246C(*(int *)(v2 + 28));
}

uint64_t ContextProtoContextMetadata.saliency.setter()
{
  return sub_2535B73BC();
}

uint64_t sub_2535B73BC()
{
  uint64_t v0 = sub_2535E2444();
  v1(v0);
  sub_2535E2454();
  return sub_2535E2738(v2, v3);
}

uint64_t (*ContextProtoContextMetadata.saliency.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoContextMetadata.onScreenBoundingBox.getter()
{
  return sub_2535B7450();
}

uint64_t sub_2535B7450()
{
  uint64_t v0 = sub_2535E2348();
  uint64_t v2 = v1(v0);
  return sub_2535E246C(*(int *)(v2 + 32));
}

uint64_t ContextProtoContextMetadata.onScreenBoundingBox.setter()
{
  return sub_2535B74A8();
}

uint64_t sub_2535B74A8()
{
  uint64_t v0 = sub_2535E2444();
  v1(v0);
  sub_2535E24C8();
  return sub_2535E2738(v2, v3);
}

uint64_t (*ContextProtoContextMetadata.onScreenBoundingBox.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoContextMetadata.seq.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ContextProtoContextMetadata(0) + 36));
}

void ContextProtoContextMetadata.seq.setter()
{
  uint64_t v0 = type metadata accessor for ContextProtoContextMetadata(0);
  sub_2535E28C4(*(int *)(v0 + 36));
}

uint64_t (*ContextProtoContextMetadata.seq.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoContextMetadata.groupID.getter()
{
  return sub_2535B75D8((void (*)(void))type metadata accessor for ContextProtoContextMetadata);
}

uint64_t sub_2535B75D8(void (*a1)(void))
{
  return sub_2534ACF74();
}

uint64_t ContextProtoContextMetadata.groupID.setter(uint64_t a1, uint64_t a2)
{
  return sub_2535B7628(a1, a2, (void (*)(void))type metadata accessor for ContextProtoContextMetadata);
}

uint64_t sub_2535B7628(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  uint64_t result = sub_2535E2648();
  *uint64_t v3 = a1;
  v3[1] = a2;
  return result;
}

uint64_t (*ContextProtoContextMetadata.groupID.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoContextMetadata.isSelected.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ContextProtoContextMetadata(0) + 44));
}

uint64_t ContextProtoContextMetadata.isSelected.setter(char a1)
{
  uint64_t result = type metadata accessor for ContextProtoContextMetadata(0);
  *(unsigned char *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*ContextProtoContextMetadata.isSelected.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoContextMetadata.isPrimary.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ContextProtoContextMetadata(0) + 48));
}

uint64_t ContextProtoContextMetadata.isPrimary.setter(char a1)
{
  uint64_t result = type metadata accessor for ContextProtoContextMetadata(0);
  *(unsigned char *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*ContextProtoContextMetadata.isPrimary.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoContextMetadata.screenDimensions.getter()
{
  uint64_t v2 = sub_2535E288C();
  return sub_2534B45B0(v1 + *(int *)(v2 + 52), v0, &qword_269CDCCC0);
}

uint64_t ContextProtoContextMetadata.screenDimensions.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ContextProtoContextMetadata(0);
  return sub_2535BC290(a1, v1 + *(int *)(v3 + 52), &qword_269CDCCC0);
}

uint64_t (*ContextProtoContextMetadata.screenDimensions.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoContextMetadata.dataSource.getter()
{
  uint64_t result = sub_2535E288C();
  unsigned char *v0 = *(unsigned char *)(v1 + *(int *)(result + 56));
  return result;
}

uint64_t ContextProtoContextMetadata.dataSource.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for ContextProtoContextMetadata(0);
  *(unsigned char *)(v1 + *(int *)(result + 56)) = v2;
  return result;
}

uint64_t (*ContextProtoContextMetadata.dataSource.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoContextMetadata.displayRepresentation.getter()
{
  return sub_2535B86F0();
}

uint64_t ContextProtoContextMetadata.displayRepresentation.setter()
{
  return sub_2535B8748();
}

uint64_t (*ContextProtoContextMetadata.displayRepresentation.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoContextMetadata.init(entityID:appBundleID:saliency:onScreenSurroundingText:onScreenBoundingBox:seq:groupID:isSelected:isPrimary:screenDimensions:dataSource:displayRepresentation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, char a10, uint64_t a11, uint64_t a12, char a13, char a14, uint64_t a15, char *a16, uint64_t a17)
{
  char v45 = *a16;
  uint64_t v18 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
  uint64_t v19 = (uint64_t)a9 + v18[7];
  sub_2535E2870();
  sub_25346CC08(v19, v20, v21, v22);
  uint64_t v23 = (uint64_t)a9 + v18[8];
  uint64_t v36 = v23;
  uint64_t v24 = type metadata accessor for ContextProtoBoundingBox(0);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v23, 1, 1, v24);
  uint64_t v25 = (char *)a9 + v18[9];
  *(void *)uint64_t v25 = 0;
  v25[8] = 1;
  uint64_t v26 = (void *)((char *)a9 + v18[10]);
  *uint64_t v26 = 0;
  v26[1] = 0;
  uint64_t v27 = v18[11];
  *((unsigned char *)a9 + v27) = 2;
  uint64_t v28 = v18[12];
  *((unsigned char *)a9 + v28) = 2;
  uint64_t v29 = (uint64_t)a9 + v18[13];
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v29, 1, 1, v24);
  uint64_t v30 = v18[14];
  *((unsigned char *)a9 + v30) = 6;
  uint64_t v31 = (uint64_t)a9 + v18[15];
  uint64_t v32 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
  sub_25346CC08(v31, v33, v34, v32);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  a9[1] = a1;
  a9[2] = a2;
  a9[3] = a3;
  a9[4] = a4;
  sub_2535BC290(a5, v19, &qword_269CDF900);
  *a9 = a6;
  sub_2535BC290(a7, v36, &qword_269CDCCC0);
  *(void *)uint64_t v25 = a8;
  v25[8] = a10 & 1;
  swift_bridgeObjectRelease();
  *uint64_t v26 = a11;
  v26[1] = a12;
  *((unsigned char *)a9 + v27) = a13;
  *((unsigned char *)a9 + v28) = a14;
  sub_2535BC290(a15, v29, &qword_269CDCCC0);
  *((unsigned char *)a9 + v30) = v45;
  return sub_2535BC290(a17, v31, &qword_269CDF920);
}

uint64_t (*ContextProtoContextualEntityDisplayRepresentation.title.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoContextualEntityDisplayRepresentation.subtitle.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoContextualEntityDisplayRepresentation.init(title:subtitle:)()
{
  uint64_t v5 = sub_2535E241C();
  type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(v5);
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *unint64_t v4 = v3;
  v4[1] = v2;
  v4[2] = v1;
  v4[3] = v0;
  return result;
}

unint64_t ContextProtoBoundingBox.xCoordinate.getter()
{
  return sub_2535E2278(*v0);
}

uint64_t (*ContextProtoBoundingBox.xCoordinate.modify())()
{
  return nullsub_1;
}

unint64_t ContextProtoBoundingBox.yCoordinate.getter()
{
  return sub_2535E2278(*(unsigned int *)(v0 + 8));
}

uint64_t ContextProtoBoundingBox.yCoordinate.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 8) = result;
  *(unsigned char *)(v1 + 12) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ContextProtoBoundingBox.yCoordinate.modify())()
{
  return nullsub_1;
}

unint64_t ContextProtoBoundingBox.width.getter()
{
  return sub_2535E2278(*(unsigned int *)(v0 + 16));
}

uint64_t ContextProtoBoundingBox.width.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 16) = result;
  *(unsigned char *)(v1 + 20) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ContextProtoBoundingBox.width.modify())()
{
  return nullsub_1;
}

unint64_t ContextProtoBoundingBox.height.getter()
{
  return sub_2535E2278(*(unsigned int *)(v0 + 24));
}

uint64_t (*ContextProtoBoundingBox.height.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoBoundingBox.init(xCoordinate:yCoordinate:width:height:)()
{
  uint64_t v5 = sub_2535E241C();
  type metadata accessor for ContextProtoBoundingBox(v5);
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v4 = v3;
  *(unsigned char *)(v4 + 4) = BYTE4(v3) & 1;
  *(_DWORD *)(v4 + 8) = v2;
  *(unsigned char *)(v4 + 12) = BYTE4(v2) & 1;
  *(_DWORD *)(v4 + 16) = v1;
  *(unsigned char *)(v4 + 20) = BYTE4(v1) & 1;
  *(_DWORD *)(v4 + 24) = v0;
  *(unsigned char *)(v4 + 28) = BYTE4(v0) & 1;
  return result;
}

uint64_t (*ContextProtoSurroundingText.text.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoSurroundingText.onScreenBoundingBox.getter()
{
  return sub_2535B7DEC();
}

uint64_t sub_2535B7DEC()
{
  uint64_t v0 = sub_2535E2348();
  uint64_t v2 = v1(v0);
  return sub_2535E246C(*(int *)(v2 + 20));
}

uint64_t ContextProtoSurroundingText.onScreenBoundingBox.setter()
{
  return sub_2535B7E44();
}

uint64_t sub_2535B7E44()
{
  uint64_t v0 = sub_2535E2444();
  v1(v0);
  sub_2534F87A4();
  return sub_2535E2738(v2, v3);
}

uint64_t (*ContextProtoSurroundingText.onScreenBoundingBox.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoSurroundingText.init(text:onScreenBoundingBox:)()
{
  uint64_t v4 = sub_2535E259C();
  uint64_t v5 = (uint64_t)v3 + *(int *)(type metadata accessor for ContextProtoSurroundingText(v4) + 20);
  uint64_t v6 = type metadata accessor for ContextProtoBoundingBox(0);
  sub_25346CC08(v5, v7, v8, v6);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v3 = v2;
  v3[1] = v1;
  return sub_2535BC290(v0, v5, &qword_269CDCCC0);
}

float ContextProtoConfidence.score.getter()
{
  return *(float *)v0;
}

void ContextProtoConfidence.score.setter(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*ContextProtoConfidence.score.modify())()
{
  return nullsub_1;
}

void ContextProtoConfidence.bucket.getter(unsigned char *a1@<X8>)
{
}

unsigned char *ContextProtoConfidence.bucket.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 4) = *result;
  return result;
}

uint64_t (*ContextProtoConfidence.bucket.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoConfidence.init(score:bucket:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>, float a3@<S0>)
{
  char v5 = *a1;
  type metadata accessor for ContextProtoConfidence(0);
  uint64_t result = sub_2535E25C4();
  *(float *)a2 = a3;
  *(unsigned char *)(a2 + 4) = v5;
  return result;
}

uint64_t ContextProtoStructuredContext.structuredContextKind.getter()
{
  uint64_t v0 = sub_2535E27CC();
  return sub_2534B45B0(v0, v1, &qword_269CDF958);
}

uint64_t ContextProtoStructuredContext.structuredContextKind.setter(uint64_t a1)
{
  return sub_2535BC290(a1, v1, &qword_269CDF958);
}

uint64_t (*ContextProtoStructuredContext.structuredContextKind.modify())()
{
  return nullsub_1;
}

uint64_t static ContextProtoStructuredContextKind.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = a2;
  uint64_t v4 = type metadata accessor for ContextProtoStructedContextAppInFocusContext(0);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_25346CB04();
  uint64_t v36 = v6;
  uint64_t v7 = type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ContextProtoStructuredContextKind(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v15);
  sub_2534727F8();
  uint64_t v18 = v16 - v17;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v36 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = sub_253462A5C(&qword_269CDFFA8);
  uint64_t v24 = sub_25346CB4C(v23);
  MEMORY[0x270FA5388](v24);
  sub_2535E2544();
  uint64_t v26 = v2 + v25;
  sub_2535BC23C(a1, v2, (void (*)(void))type metadata accessor for ContextProtoStructuredContextKind);
  sub_2535BC23C(v37, v26, (void (*)(void))type metadata accessor for ContextProtoStructuredContextKind);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_2535BC23C(v2, (uint64_t)v22, (void (*)(void))type metadata accessor for ContextProtoStructuredContextKind);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_2535BC1DC(v26, (uint64_t)v10, (void (*)(void))type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext);
        static ContextProtoStructuredContextIntelligenceCommandContext.== infix(_:_:)();
        char v29 = v28;
        sub_2535BC188();
LABEL_12:
        sub_2535BC188();
        sub_2535BC188();
        return v29 & 1;
      }
    }
    else
    {
      sub_2535BC23C(v2, v18, (void (*)(void))type metadata accessor for ContextProtoStructuredContextKind);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        sub_2535BC1DC(v26, v36, (void (*)(void))type metadata accessor for ContextProtoStructedContextAppInFocusContext);
        static ContextProtoStructedContextAppInFocusContext.== infix(_:_:)();
        char v29 = v33;
        sub_2535BC188();
        goto LABEL_12;
      }
    }
  }
  else
  {
    uint64_t v30 = sub_2534ACF74();
    sub_2535BC23C(v30, v31, v32);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_2535BC1DC(v26, (uint64_t)v14, (void (*)(void))type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
      static ContextProtoStructuredContextSiriRequestContext.== infix(_:_:)();
      char v29 = v34;
      sub_2535BC188();
      goto LABEL_12;
    }
  }
  sub_2535BC188();
  sub_2534B2064(v2, &qword_269CDFFA8);
  char v29 = 0;
  return v29 & 1;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.deviceRestrictions.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.bargeInModes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoStructuredContextSiriRequestContext.bargeInModes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.bargeInModes.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.sessionID.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.requestID.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.inputOrigin.getter()
{
  return sub_2534ACF74();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.inputOrigin.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.responseMode.getter()
{
  return sub_2534ACF74();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.responseMode.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isEyesFree.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isEyesFree.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 80) = result;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.isEyesFree.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isMultiUser.getter()
{
  return *(unsigned __int8 *)(v0 + 81);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isMultiUser.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 81) = result;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.isMultiUser.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isVoiceTriggerEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 82);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isVoiceTriggerEnabled.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 82) = result;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.isVoiceTriggerEnabled.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isTextToSpeechEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 83);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isTextToSpeechEnabled.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 83) = result;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.isTextToSpeechEnabled.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isTriggerlessFollowup.getter()
{
  return *(unsigned __int8 *)(v0 + 84);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isTriggerlessFollowup.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 84) = result;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.isTriggerlessFollowup.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.identifiedUser.getter()
{
  return sub_2535B86F0();
}

uint64_t sub_2535B86F0()
{
  uint64_t v0 = sub_2535E2348();
  uint64_t v2 = v1(v0);
  return sub_2535E246C(*(int *)(v2 + 60));
}

uint64_t ContextProtoStructuredContextSiriRequestContext.identifiedUser.setter()
{
  return sub_2535B8748();
}

uint64_t sub_2535B8748()
{
  uint64_t v1 = sub_2535E2444();
  uint64_t v3 = v2(v1);
  return sub_2535E2738(v3, v0 + *(int *)(v3 + 60));
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.identifiedUser.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.encodedLocation.getter()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  uint64_t v0 = sub_2534ACF74();
  sub_2535342E8(v0, v1);
  return sub_2534ACF74();
}

uint64_t ContextProtoStructuredContextSiriRequestContext.encodedLocation.setter()
{
  uint64_t v3 = v1 + *(int *)(sub_2535E24F4() + 64);
  uint64_t result = sub_25352C314(*(void *)v3, *(void *)(v3 + 8));
  *(void *)uint64_t v3 = v2;
  *(void *)(v3 + 8) = v0;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.encodedLocation.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.countryCode.getter()
{
  return sub_2534ACF74();
}

uint64_t ContextProtoStructuredContextSiriRequestContext.countryCode.setter()
{
  sub_2535E24F4();
  uint64_t result = sub_2535E2648();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.countryCode.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.siriLocale.getter()
{
  return sub_2534ACF74();
}

uint64_t ContextProtoStructuredContextSiriRequestContext.siriLocale.setter()
{
  sub_2535E24F4();
  uint64_t result = sub_2535E2648();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.siriLocale.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.contentRestrictions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return sub_2534B45B0(v1 + *(int *)(v3 + 76), a1, &qword_269CDF988);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.contentRestrictions.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return sub_2535BC290(a1, v1 + *(int *)(v3 + 76), &qword_269CDF988);
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.contentRestrictions.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.uiScale.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0) + 80));
}

void ContextProtoStructuredContextSiriRequestContext.uiScale.setter()
{
  uint64_t v0 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  sub_2535E28C4(*(int *)(v0 + 80));
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.uiScale.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.temperatureUnit.getter()
{
  return sub_2534ACF74();
}

uint64_t ContextProtoStructuredContextSiriRequestContext.temperatureUnit.setter()
{
  sub_2535E24F4();
  uint64_t result = sub_2535E2648();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.temperatureUnit.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.allowUserGeneratedContent.getter()
{
  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0)
                                     + 88));
}

uint64_t ContextProtoStructuredContextSiriRequestContext.allowUserGeneratedContent.setter(char a1)
{
  uint64_t result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  *(unsigned char *)(v1 + *(int *)(result + 88)) = a1;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.allowUserGeneratedContent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.censorSpeech.getter()
{
  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0)
                                     + 92));
}

uint64_t ContextProtoStructuredContextSiriRequestContext.censorSpeech.setter(char a1)
{
  uint64_t result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  *(unsigned char *)(v1 + *(int *)(result + 92)) = a1;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.censorSpeech.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.meCard.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return sub_2534B45B0(v1 + *(int *)(v3 + 96), a1, &qword_269CDF978);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.meCard.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return sub_2535BC290(a1, v1 + *(int *)(v3 + 96), &qword_269CDF978);
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.meCard.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.deviceIdiom.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 100));
  return result;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.deviceIdiom.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  *(unsigned char *)(v1 + *(int *)(result + 100)) = v2;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.deviceIdiom.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.didPscfire.getter()
{
  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0)
                                     + 104));
}

uint64_t ContextProtoStructuredContextSiriRequestContext.didPscfire.setter(char a1)
{
  uint64_t result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  *(unsigned char *)(v1 + *(int *)(result + 104)) = a1;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.didPscfire.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.init(sessionID:requestID:inputOrigin:responseMode:isEyesFree:isMultiUser:isVoiceTriggerEnabled:isTextToSpeechEnabled:isTriggerlessFollowup:deviceRestrictions:bargeInModes:identifiedUser:encodedLocation:countryCode:siriLocale:contentRestrictions:uiScale:temperatureUnit:allowUserGeneratedContent:censorSpeech:meCard:deviceIdiom:didPscfire:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,char a25,char a26,uint64_t a27,char *a28,char a29)
{
  char v64 = *a28;
  uint64_t v30 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  uint64_t v31 = a9 + v30[15];
  uint64_t v53 = v31;
  uint64_t v32 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  sub_25346CC08(v31, v33, v34, v32);
  uint64_t v35 = a9 + v30[16];
  *(_OWORD *)uint64_t v35 = xmmword_253B34E70;
  uint64_t v36 = (void *)(a9 + v30[17]);
  *uint64_t v36 = 0;
  v36[1] = 0;
  uint64_t v37 = (void *)(a9 + v30[18]);
  *uint64_t v37 = 0;
  v37[1] = 0;
  uint64_t v38 = a9 + v30[19];
  uint64_t v55 = v38;
  uint64_t v39 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  sub_25346CC08(v38, v40, v41, v39);
  uint64_t v42 = a9 + v30[20];
  *(void *)uint64_t v42 = 0;
  *(unsigned char *)(v42 + 8) = 1;
  uint64_t v43 = (void *)(a9 + v30[21]);
  *uint64_t v43 = 0;
  v43[1] = 0;
  uint64_t v54 = v30[22];
  *(unsigned char *)(a9 + v54) = 2;
  uint64_t v52 = v30[23];
  *(unsigned char *)(a9 + v52) = 2;
  uint64_t v44 = a9 + v30[24];
  uint64_t v51 = v44;
  uint64_t v45 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  sub_25346CC08(v44, v46, v47, v45);
  uint64_t v48 = v30[25];
  *(unsigned char *)(a9 + v48) = 12;
  uint64_t v49 = v30[26];
  *(unsigned char *)(a9 + v49) = 2;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)(a9 + 16) = a1;
  *(void *)(a9 + 24) = a2;
  *(void *)(a9 + 32) = a3;
  *(void *)(a9 + 40) = a4;
  *(void *)(a9 + 48) = a5;
  *(void *)(a9 + 56) = a6;
  *(void *)(a9 + 64) = a7;
  *(void *)(a9 + 72) = a8;
  *(unsigned char *)(a9 + 80) = a10;
  *(_DWORD *)(a9 + 81) = *(_DWORD *)((char *)&a10 + 1);
  *(void *)a9 = a11;
  *(void *)(a9 + 8) = a12;
  sub_2535BC290(a13, v53, &qword_269CDF998);
  sub_25352C314(*(void *)v35, *(void *)(v35 + 8));
  *(void *)uint64_t v35 = a14;
  *(void *)(v35 + 8) = a15;
  swift_bridgeObjectRelease();
  *uint64_t v36 = a16;
  v36[1] = a17;
  swift_bridgeObjectRelease();
  *uint64_t v37 = a18;
  v37[1] = a19;
  sub_2535BC290(a20, v55, &qword_269CDF988);
  *(void *)uint64_t v42 = a21;
  *(unsigned char *)(v42 + 8) = a22 & 1;
  swift_bridgeObjectRelease();
  *uint64_t v43 = a23;
  v43[1] = a24;
  *(unsigned char *)(a9 + v54) = a25;
  *(unsigned char *)(a9 + v52) = a26;
  uint64_t result = sub_2535BC290(a27, v51, &qword_269CDF978);
  *(unsigned char *)(a9 + v48) = v64;
  *(unsigned char *)(a9 + v49) = a29;
  return result;
}

unint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.appRestriction.getter()
{
  return sub_2535E2278(*v0);
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextContentRestriction.appRestriction.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextContentRestriction.countryCode.modify())()
{
  return nullsub_1;
}

unint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.movieRestriction.getter()
{
  return sub_2535E2278(*(unsigned int *)(v0 + 24));
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextContentRestriction.movieRestriction.modify())()
{
  return nullsub_1;
}

unint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.tvRestriction.getter()
{
  return sub_2535E2278(*(unsigned int *)(v0 + 32));
}

uint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.tvRestriction.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 32) = result;
  *(unsigned char *)(v1 + 36) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextContentRestriction.tvRestriction.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.init(appRestriction:countryCode:movieRestriction:tvRestriction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)a6 = a1;
  *(unsigned char *)(a6 + 4) = BYTE4(a1) & 1;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(_DWORD *)(a6 + 24) = a4;
  *(unsigned char *)(a6 + 28) = BYTE4(a4) & 1;
  *(_DWORD *)(a6 + 32) = a5;
  *(unsigned char *)(a6 + 36) = BYTE4(a5) & 1;
  return result;
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.userID.getter()
{
  return sub_2534ACF74();
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.userID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *char v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextUser.userID.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.isOnlyUserInHome.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.isOnlyUserInHome.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextUser.isOnlyUserInHome.modify())()
{
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContextUser.classification.getter(unsigned char *a1@<X8>)
{
}

unsigned char *ContextProtoStructuredContextSiriRequestContextUser.classification.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 17) = *result;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextUser.classification.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.init(userID:isOnlyUserInHome:classification:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v9 = *a4;
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(unsigned char *)(a5 + 16) = a3;
  *(unsigned char *)(a5 + 17) = v9;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextMeCard.addresses.modify())()
{
  return nullsub_1;
}

uint64_t _s30IntelligenceFlowPlannerSupport012ContextProtoE8MetadataV8entityIDSSSgvs_0()
{
  sub_2535E24E8();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v0;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextMeCard.givenName.modify())()
{
  return nullsub_1;
}

uint64_t _s30IntelligenceFlowPlannerSupport012ContextProtoE8MetadataV11appBundleIDSSSgvs_0()
{
  sub_2535E24E8();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextMeCard.middleName.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.familyName.getter()
{
  return sub_2534ACF74();
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.familyName.setter()
{
  sub_2535E24E8();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = v0;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextMeCard.familyName.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.nickName.getter()
{
  return sub_2534ACF74();
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.nickName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextMeCard.nickName.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.fullName.getter()
{
  return sub_2534ACF74();
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.fullName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextMeCard.fullName.modify())()
{
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContextMeCard.init(givenName:middleName:familyName:nickName:fullName:addresses:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  sub_2535E2390();
  uint64_t v34 = v32;
  uint64_t v35 = v33;
  sub_2535E231C();
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  v31[2] = v29;
  v31[3] = v28;
  v31[4] = v27;
  v31[5] = v26;
  v31[6] = v25;
  v31[7] = v34;
  v31[8] = v35;
  v31[9] = a23;
  v31[10] = a24;
  *uint64_t v31 = a25;
  v31[1] = v30;
  sub_2535E2374();
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextAddress.label.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextAddress.street.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextAddress.city.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextAddress.state.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextAddress.postalCode.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextAddress.countryCode.getter()
{
  return sub_2534ACF74();
}

uint64_t ContextProtoStructuredContextSiriRequestContextAddress.countryCode.setter()
{
  sub_2535E24E8();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 80) = v2;
  *(void *)(v1 + 88) = v0;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextAddress.countryCode.modify())()
{
  return nullsub_1;
}

__n128 ContextProtoStructuredContextSiriRequestContextAddress.init(label:street:city:state:postalCode:countryCode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, unint64_t a8, __n128 a9, unint64_t a10, unint64_t a11)
{
  sub_2535E231C();
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  v17->n128_u64[0] = v16;
  v17->n128_u64[1] = v15;
  v17[1].n128_u64[0] = v14;
  v17[1].n128_u64[1] = v13;
  v17[2].n128_u64[0] = v12;
  v17[2].n128_u64[1] = v11;
  v17[3].n128_u64[0] = a7;
  v17[3].n128_u64[1] = a8;
  __n128 result = a9;
  v17[4] = a9;
  v17[5].n128_u64[0] = a10;
  v17[5].n128_u64[1] = a11;
  return result;
}

uint64_t (*ContextProtoStructuredContextIntelligenceCommandContext.identifier.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextIntelligenceCommandContext.isDisabled.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ContextProtoStructuredContextIntelligenceCommandContext.isDisabled.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*ContextProtoStructuredContextIntelligenceCommandContext.isDisabled.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextIntelligenceCommandContext.menuHierarchyComponents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoStructuredContextIntelligenceCommandContext.menuHierarchyComponents.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*ContextProtoStructuredContextIntelligenceCommandContext.menuHierarchyComponents.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoStructuredContextIntelligenceCommandContext.title.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoStructuredContextIntelligenceCommandContext.standaloneTitle.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoStructuredContextIntelligenceCommandContext.embeddingDescription.modify())()
{
  return nullsub_1;
}

void ContextProtoStructuredContextIntelligenceCommandContext.init(identifier:title:standaloneTitle:embeddingDescription:isDisabled:menuHierarchyComponents:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24)
{
  sub_2535E2390();
  uint64_t v34 = v31;
  uint64_t v33 = v32;
  sub_2535E231C();
  type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)uint64_t v30 = v29;
  *(void *)(v30 + 8) = v28;
  *(void *)(v30 + 40) = v26;
  *(void *)(v30 + 48) = v25;
  *(void *)(v30 + 56) = v24;
  *(void *)(v30 + 64) = v33;
  *(void *)(v30 + 72) = v34;
  *(unsigned char *)(v30 + 16) = a23;
  *(void *)(v30 + 24) = a24;
  *(void *)(v30 + 32) = v27;
  sub_2535E2374();
}

uint64_t ContextProtoStructedContextAppInFocusContext.bundleID.getter()
{
  return sub_2534ACF74();
}

uint64_t ContextProtoStructedContextAppInFocusContext.bundleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ContextProtoStructedContextAppInFocusContext.bundleID.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructedContextAppInFocusContext.appName.getter()
{
  return sub_2534ACF74();
}

uint64_t (*ContextProtoStructedContextAppInFocusContext.appName.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructedContextAppInFocusContext.category.getter()
{
  return sub_2534ACF74();
}

uint64_t (*ContextProtoStructedContextAppInFocusContext.category.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructedContextAppInFocusContext.init(bundleID:appName:category:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = sub_2535E2510();
  type metadata accessor for ContextProtoStructedContextAppInFocusContext(v13);
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  void *v10 = v9;
  v10[1] = v8;
  void v10[2] = v7;
  v10[3] = v6;
  v10[4] = a5;
  v10[5] = a6;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.spans.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.spansIsPresent.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t ContextProtoQueryDecorationOutput.spansIsPresent.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.spansIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoQueryDecorationOutput.requiredContext.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.requiredContextIsPresent.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t ContextProtoQueryDecorationOutput.requiredContextIsPresent.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.requiredContextIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.utteranceContext.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoQueryDecorationOutput.utteranceContext.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.utteranceContext.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.utteranceContextIsPresent.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t ContextProtoQueryDecorationOutput.utteranceContextIsPresent.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 40) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.utteranceContextIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedTools.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedTools.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.originalRankedTools.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedToolsIsPresent.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedToolsIsPresent.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 56) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.originalRankedToolsIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedTools.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedTools.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.adjustedRankedTools.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedToolsIsPresent.getter()
{
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedToolsIsPresent.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 72) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.adjustedRankedToolsIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedSpans.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedSpans.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 80) = a1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.originalRankedSpans.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedSpansIsPresent.getter()
{
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedSpansIsPresent.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 88) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.originalRankedSpansIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedSpans.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedSpans.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 96) = a1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.adjustedRankedSpans.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedSpansIsPresent.getter()
{
  return *(unsigned __int8 *)(v0 + 104);
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedSpansIsPresent.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 104) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.adjustedRankedSpansIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedUtteranceContext.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedUtteranceContext.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 112) = a1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.originalRankedUtteranceContext.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedUtteranceContextIsPresent.getter()
{
  return *(unsigned __int8 *)(v0 + 120);
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedUtteranceContextIsPresent.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 120) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.originalRankedUtteranceContextIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedUtteranceContext.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedUtteranceContext.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 128) = a1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.adjustedRankedUtteranceContext.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedUtteranceContextIsPresent.getter()
{
  return *(unsigned __int8 *)(v0 + 136);
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedUtteranceContextIsPresent.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 136) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.adjustedRankedUtteranceContextIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.dynamicEnumerationEntities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoQueryDecorationOutput.dynamicEnumerationEntities.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 144) = a1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.dynamicEnumerationEntities.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.dynamicEnumerationEntitiesIsPresent.getter()
{
  return *(unsigned __int8 *)(v0 + 152);
}

uint64_t ContextProtoQueryDecorationOutput.dynamicEnumerationEntitiesIsPresent.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 152) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.dynamicEnumerationEntitiesIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.context.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoQueryDecorationOutput.context.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 160) = a1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.context.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.contextIsPresent.getter()
{
  return *(unsigned __int8 *)(v0 + 168);
}

uint64_t ContextProtoQueryDecorationOutput.contextIsPresent.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 168) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.contextIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.toolRetrievalResponse.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t DecorationOutput = type metadata accessor for ContextProtoQueryDecorationOutput(0);
  return sub_2534B45B0(v1 + *(int *)(DecorationOutput + 104), a1, &qword_269CDFA00);
}

uint64_t ContextProtoQueryDecorationOutput.toolRetrievalResponse.setter(uint64_t a1)
{
  uint64_t DecorationOutput = type metadata accessor for ContextProtoQueryDecorationOutput(0);
  return sub_2535BC290(a1, v1 + *(int *)(DecorationOutput + 104), &qword_269CDFA00);
}

uint64_t (*ContextProtoQueryDecorationOutput.toolRetrievalResponse.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.init(spans:spansIsPresent:requiredContext:requiredContextIsPresent:utteranceContext:utteranceContextIsPresent:originalRankedTools:originalRankedToolsIsPresent:adjustedRankedTools:adjustedRankedToolsIsPresent:originalRankedSpans:originalRankedSpansIsPresent:adjustedRankedSpans:adjustedRankedSpansIsPresent:originalRankedUtteranceContext:originalRankedUtteranceContextIsPresent:adjustedRankedUtteranceContext:adjustedRankedUtteranceContextIsPresent:toolRetrievalResponse:dynamicEnumerationEntities:dynamicEnumerationEntitiesIsPresent:context:contextIsPresent:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, char a15, uint64_t a16, char a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,char a24)
{
  uint64_t v27 = a9 + *(int *)(type metadata accessor for ContextProtoQueryDecorationOutput(0) + 104);
  uint64_t DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v27, 1, 1, DecorationToolRetrievalResponse);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)a9 = a1;
  *(unsigned char *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a10;
  *(unsigned char *)(a9 + 72) = a11;
  *(void *)(a9 + 80) = a12;
  *(unsigned char *)(a9 + 88) = a13;
  *(void *)(a9 + 96) = a14;
  *(unsigned char *)(a9 + 104) = a15;
  *(void *)(a9 + 112) = a16;
  *(unsigned char *)(a9 + 120) = a17;
  *(void *)(a9 + 128) = a18;
  *(unsigned char *)(a9 + 136) = a19;
  uint64_t result = sub_2535BC290(a20, v27, &qword_269CDFA00);
  *(void *)(a9 + 144) = a21;
  *(unsigned char *)(a9 + 152) = a22;
  *(void *)(a9 + 160) = a23;
  *(unsigned char *)(a9 + 168) = a24;
  return result;
}

uint64_t (*ContextProtoQueryDecorationInput.query.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoQueryDecorationInput.caller.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoQueryDecorationInput.servicesExecuted.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoQueryDecorationInput.requestID.modify())()
{
  return nullsub_1;
}

uint64_t _s30IntelligenceFlowPlannerSupport022ContextProtoStructurede11SiriRequestE0V11inputOriginSSSgvs_0()
{
  sub_2535E24E8();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 56) = v0;
  return result;
}

uint64_t (*ContextProtoQueryDecorationInput.contextID.modify())()
{
  return nullsub_1;
}

uint64_t _s30IntelligenceFlowPlannerSupport022ContextProtoStructurede11SiriRequestE0V12responseModeSSSgvs_0()
{
  sub_2535E24E8();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = v2;
  *(void *)(v1 + 72) = v0;
  return result;
}

uint64_t (*ContextProtoQueryDecorationInput.loggingSalt.modify())()
{
  return nullsub_1;
}

void ContextProtoQueryDecorationInput.init(query:requestID:caller:contextID:loggingSalt:servicesExecuted:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_2535E2390();
  uint64_t v36 = v29;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  sub_2535E25DC();
  char v35 = *v34;
  type metadata accessor for ContextProtoQueryDecorationInput(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)uint64_t v28 = v27;
  *(void *)(v28 + 8) = v26;
  *(unsigned char *)(v28 + 16) = v35;
  *(void *)(v28 + 40) = v24;
  *(void *)(v28 + 48) = v33;
  *(void *)(v28 + 56) = v31;
  *(void *)(v28 + 64) = v36;
  *(void *)(v28 + 72) = a23;
  *(void *)(v28 + 24) = a24;
  *(void *)(v28 + 32) = v25;
  sub_2535E2374();
}

uint64_t (*ContextProtoDynamicEnumerationEntity.identifier.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoDynamicEnumerationEntity.parameterTypeInstance.getter()
{
  return sub_2535B7DEC();
}

uint64_t ContextProtoDynamicEnumerationEntity.parameterTypeInstance.setter()
{
  return sub_2535B7E44();
}

uint64_t (*ContextProtoDynamicEnumerationEntity.parameterTypeInstance.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoDynamicEnumerationEntity.typedValue.getter()
{
  return sub_2535BA63C();
}

uint64_t sub_2535BA63C()
{
  uint64_t v0 = sub_2535E2348();
  uint64_t v2 = v1(v0);
  return sub_2535E246C(*(int *)(v2 + 24));
}

uint64_t ContextProtoDynamicEnumerationEntity.typedValue.setter()
{
  return sub_2535BA694();
}

uint64_t sub_2535BA694()
{
  uint64_t v0 = sub_2535E2444();
  v1(v0);
  sub_2535E23AC();
  return sub_2535E2738(v2, v3);
}

uint64_t (*ContextProtoDynamicEnumerationEntity.typedValue.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoDynamicEnumerationEntity.init(identifier:parameterTypeInstance:typedValue:)()
{
  uint64_t v5 = sub_2535E241C();
  uint64_t v6 = type metadata accessor for ContextProtoDynamicEnumerationEntity(v5);
  uint64_t v7 = (uint64_t)v4 + *(int *)(v6 + 20);
  uint64_t v8 = sub_253B08E60();
  sub_25346CC08(v7, v9, v10, v8);
  uint64_t v11 = (uint64_t)v4 + *(int *)(v6 + 24);
  uint64_t v12 = sub_253B08E50();
  sub_25346CC08(v11, v13, v14, v12);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v4 = v3;
  v4[1] = v2;
  sub_2535BC290(v1, v7, &qword_269CDFA30);
  return sub_2535BC290(v0, v11, &qword_269CDCBC8);
}

float ContextProtoRetrievedTool.similarityScore.getter()
{
  return *(float *)v0;
}

void ContextProtoRetrievedTool.similarityScore.setter(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*ContextProtoRetrievedTool.similarityScore.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoRetrievedTool.sampleInvocations.modify())()
{
  return nullsub_1;
}

void ContextProtoRetrievedTool.stage.getter(unsigned char *a1@<X8>)
{
}

unsigned char *ContextProtoRetrievedTool.stage.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t (*ContextProtoRetrievedTool.stage.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoRetrievedTool.definition.getter()
{
  return sub_2535B7364();
}

uint64_t ContextProtoRetrievedTool.definition.setter()
{
  return sub_2535B73BC();
}

uint64_t (*ContextProtoRetrievedTool.definition.modify())()
{
  return nullsub_1;
}

void *static ContextProtoRetrievedTool.Stage.allCases.getter()
{
  return &unk_270341058;
}

IntelligenceFlowPlannerSupport::ContextProtoRetrievedTool::Stage_optional sub_2535BA8D4(Swift::Int *a1)
{
  return ContextProtoRetrievedTool.Stage.init(rawValue:)(*a1);
}

uint64_t sub_2535BA8DC()
{
  return sub_25397FB10();
}

uint64_t sub_2535BA8E4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2535B0E80();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

uint64_t sub_2535BA930()
{
  return sub_253980E9C();
}

void sub_2535BA938(void *a1@<X8>)
{
  *a1 = &unk_270341058;
}

uint64_t ContextProtoRetrievedTool.Definition.definitionValues.getter()
{
  uint64_t v0 = sub_2535E27CC();
  return sub_2534B45B0(v0, v1, &qword_269CDCB70);
}

uint64_t ContextProtoRetrievedTool.Definition.definitionValues.setter(uint64_t a1)
{
  return sub_2535BC290(a1, v1, &qword_269CDCB70);
}

uint64_t (*ContextProtoRetrievedTool.Definition.definitionValues.modify())()
{
  return nullsub_1;
}

uint64_t static ContextProtoRetrievedTool.ContextProtoDefinitionEnum.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v58 = a1;
  uint64_t v59 = a2;
  uint64_t v3 = type metadata accessor for ContextProtoUIControlTool(0);
  uint64_t v4 = sub_25346CB4C(v3);
  MEMORY[0x270FA5388](v4);
  sub_25346CB04();
  uint64_t v53 = v5;
  sub_253B08EF0();
  sub_253465998();
  uint64_t v54 = v7;
  uint64_t v55 = v6;
  MEMORY[0x270FA5388](v6);
  sub_25346CB04();
  uint64_t v52 = v8;
  sub_253B08F30();
  sub_253465998();
  uint64_t v56 = v9;
  uint64_t v57 = v10;
  MEMORY[0x270FA5388](v9);
  sub_2534727F8();
  v51[1] = v11 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  v51[0] = (char *)v51 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v51 - v16;
  type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v18);
  sub_2534727F8();
  uint64_t v21 = v19 - v20;
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)v51 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)v51 - v27;
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  uint64_t v31 = (char *)v51 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)v51 - v32;
  uint64_t v34 = sub_253462A5C(&qword_269CDFFB0);
  uint64_t v35 = sub_25346CB4C(v34);
  MEMORY[0x270FA5388](v35);
  sub_2535E2544();
  uint64_t v37 = v2 + v36;
  sub_2535BC23C(v58, v2, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  sub_2535BC23C(v59, v37, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_2535BC23C(v2, (uint64_t)v31, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
      if (sub_2535E260C() == 1)
      {
        uint64_t v39 = v54;
        uint64_t v38 = v55;
        uint64_t v40 = v52;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 32))(v52, v37, v55);
        char v41 = sub_253B08EE0();
        uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
        v42(v40, v38);
        v42((uint64_t)v31, v38);
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v54 + 8))(v31, v55);
      goto LABEL_15;
    case 2u:
      sub_2535BC23C(v2, (uint64_t)v28, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
      if (sub_2535E260C() == 2) {
        goto LABEL_9;
      }
      (*(void (**)(char *, uint64_t))(v57 + 8))(v28, v56);
      goto LABEL_15;
    case 3u:
      sub_2535BC23C(v2, (uint64_t)v25, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
      if (sub_2535E260C() == 3)
      {
LABEL_9:
        uint64_t v43 = v57;
        sub_2535E27B8();
        v44();
        char v41 = sub_253B08F10();
        uint64_t v45 = *(void (**)(void))(v43 + 8);
        sub_2535E25B4();
        v45();
        sub_2535E25B4();
        v45();
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v57 + 8))(v25, v56);
      goto LABEL_15;
    case 4u:
      sub_2535BC23C(v2, v21, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
      if (sub_2535E260C() == 4)
      {
        sub_2535BC1DC(v37, v53, (void (*)(void))type metadata accessor for ContextProtoUIControlTool);
        static ContextProtoUIControlTool.== infix(_:_:)();
        char v41 = v46;
        sub_2535BC188();
        sub_2535BC188();
        goto LABEL_18;
      }
      sub_2535BC188();
      goto LABEL_15;
    default:
      sub_2535BC23C(v2, (uint64_t)v33, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
      if (sub_2535E260C())
      {
        (*(void (**)(char *, uint64_t))(v57 + 8))(v33, v56);
LABEL_15:
        sub_2534B2064(v2, &qword_269CDFFB0);
        char v41 = 0;
      }
      else
      {
        uint64_t v48 = v56;
        uint64_t v47 = v57;
        (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v17, v37, v56);
        char v41 = sub_253B08F10();
        uint64_t v49 = *(void (**)(char *, uint64_t))(v47 + 8);
        v49(v17, v48);
        v49(v33, v48);
LABEL_18:
        sub_2535BC188();
      }
      return v41 & 1;
  }
}

uint64_t ContextProtoRetrievedTool.init(definition:similarityScore:sampleInvocations:stage:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>, float a5@<S0>)
{
  char v9 = *a3;
  uint64_t v10 = a4 + *(int *)(type metadata accessor for ContextProtoRetrievedTool(0) + 28);
  uint64_t v11 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  sub_25346CC08(v10, v12, v13, v11);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t result = sub_2535BC290(a1, v10, &qword_269CDCB80);
  *(float *)a4 = a5;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = v9;
  return result;
}

uint64_t (*ContextProtoUIControlTool.appBundleID.modify())()
{
  return nullsub_1;
}

uint64_t _s30IntelligenceFlowPlannerSupport49ContextProtoContextualEntityDisplayRepresentationV8subtitleSSSgvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ContextProtoUIControlTool.command.modify())()
{
  return nullsub_1;
}

uint64_t _s30IntelligenceFlowPlannerSupport022ContextProtoStructurede11SiriRequestE0V9requestIDSSSgvs_0()
{
  sub_2535E24E8();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v0;
  return result;
}

uint64_t (*ContextProtoUIControlTool.commandID.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoUIControlTool.toolDef.getter()
{
  return sub_2535B7364();
}

uint64_t ContextProtoUIControlTool.toolDef.setter()
{
  return sub_2535B73BC();
}

uint64_t (*ContextProtoUIControlTool.toolDef.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoUIControlTool.init(appBundleID:command:commandID:toolDef:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_2535E25DC();
  uint64_t v15 = (uint64_t)v11 + *(int *)(type metadata accessor for ContextProtoUIControlTool(0) + 28);
  uint64_t v16 = sub_253B08F30();
  sub_25346CC08(v15, v17, v18, v16);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v11 = v10;
  v11[1] = v9;
  v11[2] = v8;
  v11[3] = v7;
  v11[4] = a5;
  v11[5] = a6;
  return sub_2535BC290(a7, v15, &qword_269CDFA70);
}

uint64_t (*ContextProtoSampleInvocation.invocationString.modify())()
{
  return nullsub_1;
}

float ContextProtoSampleInvocation.score.getter()
{
  return *(float *)(v0 + 16);
}

void ContextProtoSampleInvocation.score.setter(float a1)
{
  *(float *)(v1 + 16) = a1;
}

uint64_t (*ContextProtoSampleInvocation.score.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoSampleInvocation.init(invocationString:score:)(float a1)
{
  uint64_t v5 = sub_2535E24D4();
  type metadata accessor for ContextProtoSampleInvocation(v5);
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)uint64_t v3 = v2;
  *(void *)(v3 + 8) = v1;
  *(float *)(v3 + 16) = a1;
  return result;
}

uint64_t ContextProtoToolRetrievalType.identifier.getter()
{
  uint64_t v0 = sub_2535E27CC();
  return sub_2534B45B0(v0, v1, &qword_269CDFAA0);
}

uint64_t ContextProtoToolRetrievalType.identifier.setter(uint64_t a1)
{
  return sub_2535BC290(a1, v1, &qword_269CDFAA0);
}

uint64_t (*ContextProtoToolRetrievalType.identifier.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoToolRetrievalType.definition.getter()
{
  return sub_2535B7DEC();
}

uint64_t ContextProtoToolRetrievalType.definition.setter()
{
  return sub_2535B7E44();
}

uint64_t (*ContextProtoToolRetrievalType.definition.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoToolRetrievalType.init(identifier:definition:)()
{
  sub_2535E24D4();
  uint64_t v4 = sub_253B08E80();
  sub_2535E22A8(v4);
  type metadata accessor for ContextProtoToolRetrievalType(0);
  sub_2535E283C();
  uint64_t v5 = sub_253B08E70();
  sub_2535E26F0(v5);
  sub_2535BC290(v1, v2, &qword_269CDFAA0);
  return sub_2535BC290(v0, v3, &qword_269CDFA90);
}

uint64_t (*ContextProtoToolQuery.query.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoToolQuery.appBundleIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoToolQuery.appBundleIds.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*ContextProtoToolQuery.appBundleIds.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoToolQuery.init(query:appBundleIds:)()
{
  uint64_t v4 = sub_2535E259C();
  type metadata accessor for ContextProtoToolQuery(v4);
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v3 = v2;
  v3[1] = v1;
  v3[2] = v0;
  return result;
}

uint64_t ContextProtoToolQueryOutput.definition.getter()
{
  uint64_t v0 = sub_2535E27CC();
  return sub_2534B45B0(v0, v1, &qword_269CDCB80);
}

uint64_t ContextProtoToolQueryOutput.definition.setter(uint64_t a1)
{
  return sub_2535BC290(a1, v1, &qword_269CDCB80);
}

uint64_t (*ContextProtoToolQueryOutput.definition.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoToolQueryOutput.init(definition:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 1, 1, v2);
  type metadata accessor for ContextProtoToolQueryOutput(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v3 = sub_2534ACF74();
  return sub_2535BC290(v3, v4, v5);
}

uint64_t (*ContextProtoQueryDecorationToolRetrievalResponse.originalSubQuery.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoQueryDecorationToolRetrievalResponse.rewrittenQuery.modify())()
{
  return nullsub_1;
}

float ContextProtoQueryDecorationToolRetrievalResponse.confidence.getter()
{
  return *(float *)(v0 + 32);
}

void ContextProtoQueryDecorationToolRetrievalResponse.confidence.setter(float a1)
{
  *(float *)(v1 + 32) = a1;
}

uint64_t (*ContextProtoQueryDecorationToolRetrievalResponse.confidence.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationToolRetrievalResponse.retrievedTools.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoQueryDecorationToolRetrievalResponse.retrievedTools.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationToolRetrievalResponse.retrievedTools.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoQueryDecorationToolRetrievalResponse.types.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationToolRetrievalResponse.init(originalSubQuery:rewrittenQuery:confidence:retrievedTools:types:)(float a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = sub_2535E2510();
  type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(v15);
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)uint64_t v11 = v10;
  *(void *)(v11 + 8) = v9;
  *(void *)(v11 + 16) = v8;
  *(void *)(v11 + 24) = v7;
  *(float *)(v11 + 32) = a1;
  *(void *)(v11 + 40) = a6;
  *(void *)(v11 + 48) = a7;
  return result;
}

uint64_t (*ContextProtoSpanMatchedEntity.matchMetadata.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoSpanMatchedEntity.typedValue.getter()
{
  return sub_2535B7DEC();
}

uint64_t ContextProtoSpanMatchedEntity.typedValue.setter()
{
  return sub_2535B7E44();
}

uint64_t (*ContextProtoSpanMatchedEntity.typedValue.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoSpanMatchedEntity.init(typedValue:matchMetadata:)()
{
  uint64_t v4 = sub_2535E24D4();
  type metadata accessor for ContextProtoSpanMatchedEntity(v4);
  sub_2535E283C();
  uint64_t v5 = sub_253B08E50();
  sub_2535E26F0(v5);
  uint64_t result = sub_2535BC290(v1, v3, &qword_269CDCBC8);
  *uint64_t v2 = v0;
  return result;
}

uint64_t (*ContextProtoEntityMatch.sourceItemIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoEntityMatch.entityName.getter()
{
  return sub_2534ACF74();
}

uint64_t ContextProtoEntityMatch.entityName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ContextProtoEntityMatch.entityName.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoEntityMatch.startIndex.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t ContextProtoEntityMatch.startIndex.setter(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t (*ContextProtoEntityMatch.startIndex.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoEntityMatch.endIndex.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t ContextProtoEntityMatch.endIndex.setter(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  return result;
}

uint64_t (*ContextProtoEntityMatch.endIndex.modify())()
{
  return nullsub_1;
}

float ContextProtoEntityMatch.matchScore.getter()
{
  return *(float *)(v0 + 48);
}

void ContextProtoEntityMatch.matchScore.setter(float a1)
{
  *(float *)(v1 + 48) = a1;
}

uint64_t (*ContextProtoEntityMatch.matchScore.modify())()
{
  return nullsub_1;
}

void ContextProtoEntityMatch.matcherType.getter(unsigned char *a1@<X8>)
{
}

unsigned char *ContextProtoEntityMatch.matcherType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 52) = *result;
  return result;
}

uint64_t (*ContextProtoEntityMatch.matcherType.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoEntityMatch.originAppBundleID.getter()
{
  return sub_2534ACF74();
}

uint64_t ContextProtoEntityMatch.originAppBundleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t (*ContextProtoEntityMatch.originAppBundleID.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoEntityMatch.userUtterance.getter()
{
  return sub_2534ACF74();
}

uint64_t ContextProtoEntityMatch.userUtterance.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return result;
}

uint64_t (*ContextProtoEntityMatch.userUtterance.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoEntityMatch.matchProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ContextProtoEntityMatch(0);
  return sub_2534B45B0(v1 + *(int *)(v3 + 48), a1, &qword_269CDFB08);
}

uint64_t ContextProtoEntityMatch.matchProperties.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ContextProtoEntityMatch(0);
  return sub_2535BC290(a1, v1 + *(int *)(v3 + 48), &qword_269CDFB08);
}

uint64_t (*ContextProtoEntityMatch.matchProperties.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoEntityMatch.identifier.getter()
{
  return sub_2534ACF74();
}

uint64_t ContextProtoEntityMatch.identifier.setter(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ContextProtoEntityMatch(0);
  uint64_t result = sub_2535E2648();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ContextProtoEntityMatch.identifier.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoEntityMatch.init(sourceItemIdentifier:entityName:startIndex:endIndex:matchScore:matchProperties:matcherType:originAppBundleID:userUtterance:identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, float a10@<S0>, long long a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  char v22 = *a8;
  uint64_t v23 = type metadata accessor for ContextProtoEntityMatch(0);
  uint64_t v24 = a9 + *(int *)(v23 + 48);
  uint64_t matched = type metadata accessor for ContextProtoMatchProperties(0);
  sub_25346CC08(v24, v26, v27, matched);
  uint64_t v28 = (void *)(a9 + *(int *)(v23 + 52));
  *uint64_t v28 = 0;
  v28[1] = 0;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(float *)(a9 + 48) = a10;
  sub_2535BC290(a7, v24, &qword_269CDFB08);
  *(unsigned char *)(a9 + 52) = v22;
  *(_OWORD *)(a9 + 56) = a11;
  *(void *)(a9 + 72) = a12;
  *(void *)(a9 + 80) = a13;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v28 = a14;
  v28[1] = a15;
  return result;
}

uint64_t ContextProtoMatchProperties.maxTokenCount.getter()
{
  return *(void *)v0;
}

uint64_t ContextProtoMatchProperties.maxTokenCount.setter(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*ContextProtoMatchProperties.maxTokenCount.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoMatchProperties.matchedTokenCount.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t ContextProtoMatchProperties.matchedTokenCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 16) = result;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*ContextProtoMatchProperties.matchedTokenCount.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoMatchProperties.matchedAliasTypes.getter()
{
  return sub_2535BA63C();
}

uint64_t ContextProtoMatchProperties.matchedAliasTypes.setter()
{
  return sub_2535BA694();
}

uint64_t (*ContextProtoMatchProperties.matchedAliasTypes.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoMatchProperties.init(maxTokenCount:matchedTokenCount:matchedAliasTypes:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = a6 + *(int *)(type metadata accessor for ContextProtoMatchProperties(0) + 24);
  uint64_t v13 = type metadata accessor for ContextProtoAliasTypes(0);
  sub_25346CC08(v12, v14, v15, v13);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)a6 = a1;
  *(unsigned char *)(a6 + 8) = a2 & 1;
  *(void *)(a6 + 16) = a3;
  *(unsigned char *)(a6 + 24) = a4 & 1;
  return sub_2535BC290(a5, v12, &qword_269CDFB20);
}

uint64_t (*ContextProtoAliasTypes.options.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoAliasTypes.init(options:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  type metadata accessor for ContextProtoAliasTypes(0);
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *a2 = a1;
  return result;
}

uint64_t type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE01B0);
}

uint64_t type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE01C0);
}

uint64_t type metadata accessor for ContextProtoStructedContextAppInFocusContext(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE01D0);
}

uint64_t type metadata accessor for ContextProtoQueryDecorationOutput(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE01E0);
}

uint64_t type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_26B249DC0);
}

uint64_t type metadata accessor for ContextProtoQueryDecorationInput(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE01F0);
}

uint64_t type metadata accessor for ContextProtoDynamicEnumerationEntity(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE0200);
}

uint64_t type metadata accessor for ContextProtoRetrievedTool(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE0210);
}

uint64_t type metadata accessor for ContextProtoRetrievedTool.Definition(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE0228);
}

uint64_t type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE0240);
}

uint64_t type metadata accessor for ContextProtoUIControlTool(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE0250);
}

uint64_t type metadata accessor for ContextProtoSampleInvocation(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE0260);
}

uint64_t type metadata accessor for ContextProtoToolRetrievalType(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE0270);
}

uint64_t type metadata accessor for ContextProtoToolQuery(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE0290);
}

uint64_t type metadata accessor for ContextProtoToolQueryOutput(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE02A0);
}

uint64_t type metadata accessor for ContextProtoSpanMatchedEntity(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE02B0);
}

uint64_t type metadata accessor for ContextProtoEntityMatch(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE02C0);
}

uint64_t type metadata accessor for ContextProtoMatchProperties(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE02D8);
}

uint64_t type metadata accessor for ContextProtoAliasTypes(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE02F0);
}

uint64_t sub_2535BC188()
{
  uint64_t v1 = sub_2534D9690();
  v2(v1);
  sub_25346CAF4();
  (*(void (**)(uint64_t))(v3 + 8))(v0);
  return v0;
}

uint64_t sub_2535BC1DC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25346CAF4();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_2535BC23C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25346CAF4();
  uint64_t v4 = sub_2534B4668();
  v5(v4);
  return a2;
}

uint64_t sub_2535BC290(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_253462A5C(a3);
  sub_25346CAF4();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(a2, a1);
  return a2;
}

unint64_t sub_2535BC2F0()
{
  unint64_t result = qword_269CDFFB8;
  if (!qword_269CDFFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFFB8);
  }
  return result;
}

uint64_t sub_2535BC33C()
{
  return sub_2534790C4(&qword_269CDFFC0, &qword_269CDFFC8);
}

unint64_t sub_2535BC368()
{
  unint64_t result = qword_269CDFFD0;
  if (!qword_269CDFFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFFD0);
  }
  return result;
}

uint64_t sub_2535BC3B4()
{
  return sub_2534790C4(&qword_269CDFFD8, &qword_269CDFFE0);
}

unint64_t sub_2535BC3E0()
{
  unint64_t result = qword_269CDFFE8;
  if (!qword_269CDFFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDFFE8);
  }
  return result;
}

uint64_t sub_2535BC42C()
{
  return sub_2534790C4(&qword_269CDFFF0, &qword_269CDFFF8);
}

unint64_t sub_2535BC458()
{
  unint64_t result = qword_269CE0000;
  if (!qword_269CE0000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE0000);
  }
  return result;
}

uint64_t sub_2535BC4A4()
{
  return sub_2534790C4(&qword_269CE0008, &qword_269CE0010);
}

unint64_t sub_2535BC4D0()
{
  unint64_t result = qword_269CE0018;
  if (!qword_269CE0018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE0018);
  }
  return result;
}

uint64_t sub_2535BC51C()
{
  return sub_2534790C4(&qword_269CE0020, &qword_269CE0028);
}

unint64_t sub_2535BC548()
{
  unint64_t result = qword_269CE0030;
  if (!qword_269CE0030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE0030);
  }
  return result;
}

uint64_t sub_2535BC594()
{
  return sub_2534790C4(&qword_269CE0038, &qword_269CE0040);
}

unint64_t sub_2535BC5C0()
{
  unint64_t result = qword_269CE0048;
  if (!qword_269CE0048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE0048);
  }
  return result;
}

uint64_t sub_2535BC60C()
{
  return sub_2534790C4(&qword_269CE0050, &qword_269CE0058);
}

unint64_t sub_2535BC638()
{
  unint64_t result = qword_269CE0060;
  if (!qword_269CE0060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE0060);
  }
  return result;
}

uint64_t sub_2535BC684()
{
  return sub_2534790C4(&qword_269CE0068, &qword_269CE0070);
}

unint64_t sub_2535BC6B0()
{
  unint64_t result = qword_269CE0078;
  if (!qword_269CE0078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE0078);
  }
  return result;
}

uint64_t sub_2535BC6FC()
{
  return sub_2534790C4(&qword_269CE0080, &qword_269CE0088);
}

unint64_t sub_2535BC728()
{
  unint64_t result = qword_269CE0090;
  if (!qword_269CE0090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE0090);
  }
  return result;
}

uint64_t sub_2535BC774()
{
  return sub_2534790C4(&qword_269CE0098, &qword_269CE00A0);
}

void type metadata accessor for ContextProtoContextDataSource()
{
}

uint64_t getEnumTagSinglePayload for ContextProtoContextType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE4)
  {
    if (a2 + 28 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 28) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 29;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1D;
  int v5 = v6 - 29;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ContextProtoContextType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 28 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 28) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE3)
  {
    unsigned int v6 = ((a2 - 228) >> 8) + 1;
    *unint64_t result = a2 + 28;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2535BC904);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 28;
        break;
    }
  }
  return result;
}

void type metadata accessor for ContextProtoContextType()
{
}

unsigned char *storeEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextUserClassification(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2535BCA04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for ContextProtoStructuredContextSiriRequestContextUserClassification()
{
}

unsigned char *storeEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextDeviceIdiom(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2535BCB04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

void type metadata accessor for ContextProtoStructuredContextSiriRequestContextDeviceIdiom()
{
}

void type metadata accessor for ContextProtoConfidenceBucket()
{
}

unsigned char *_s30IntelligenceFlowPlannerSupport29ContextProtoContextDataSourceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2535BCC14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

void type metadata accessor for ContextProtoQueryDecorationCoreService()
{
}

void type metadata accessor for ContextProtoQueryDecorationCaller()
{
}

unsigned char *_s30IntelligenceFlowPlannerSupport28ContextProtoConfidenceBucketOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2535BCD20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for ContextProtoEntityMatcherType()
{
}

unsigned char *storeEnumTagSinglePayload for ContextProtoAliasTypesOptions(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2535BCE20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

void type metadata accessor for ContextProtoAliasTypesOptions()
{
}

void *initializeBufferWithCopyOfBuffer for ContextProtoRetrievedContext(unsigned char *a1, void *a2, int *a3)
{
  int v3 = a2;
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    unsigned int v6 = a3;
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_253B08E50();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
    }
    uint64_t v13 = v6[6];
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)v3 + v13;
    uint64_t v16 = type metadata accessor for ContextProtoConfidence(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16))
    {
      uint64_t v17 = sub_253462A5C(&qword_269CDF900);
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
      v14[4] = v15[4];
      uint64_t v18 = *(int *)(v16 + 24);
      uint64_t v19 = &v14[v18];
      uint64_t v20 = &v15[v18];
      uint64_t v21 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v14, 0, 1, v16);
    }
    uint64_t v22 = v6[7];
    uint64_t v23 = (void *)((char *)v4 + v22);
    uint64_t v24 = (void *)((char *)v3 + v22);
    uint64_t v25 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, (uint64_t)v25))
    {
      uint64_t v26 = sub_253462A5C(&qword_269CDF8F0);
      memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      v195 = v6;
      v197 = v3;
      uint64_t v27 = v24[1];
      *uint64_t v23 = *v24;
      v23[1] = v27;
      uint64_t v28 = v24[3];
      v23[2] = v24[2];
      v23[3] = v28;
      v23[4] = v24[4];
      uint64_t v29 = v25[7];
      uint64_t v30 = (char *)v23 + v29;
      uint64_t v31 = (char *)v24 + v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v31, 1, v16))
      {
        uint64_t v32 = sub_253462A5C(&qword_269CDF900);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
        v30[4] = v31[4];
        uint64_t v33 = *(int *)(v16 + 24);
        uint64_t v34 = &v30[v33];
        uint64_t v35 = &v31[v33];
        uint64_t v36 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v30, 0, 1, v16);
      }
      uint64_t v37 = v25[8];
      uint64_t v38 = (_DWORD *)((char *)v23 + v37);
      uint64_t v39 = (_DWORD *)((char *)v24 + v37);
      uint64_t v40 = type metadata accessor for ContextProtoBoundingBox(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v39, 1, v40))
      {
        uint64_t v41 = sub_253462A5C(&qword_269CDCCC0);
        memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        *uint64_t v38 = *v39;
        *((unsigned char *)v38 + 4) = *((unsigned char *)v39 + 4);
        v38[2] = v39[2];
        *((unsigned char *)v38 + 12) = *((unsigned char *)v39 + 12);
        v38[4] = v39[4];
        *((unsigned char *)v38 + 20) = *((unsigned char *)v39 + 20);
        *((unsigned char *)v38 + 28) = *((unsigned char *)v39 + 28);
        v38[6] = v39[6];
        uint64_t v42 = *(int *)(v40 + 32);
        uint64_t v43 = (char *)v38 + v42;
        uint64_t v44 = (char *)v39 + v42;
        uint64_t v45 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v38, 0, 1, v40);
      }
      uint64_t v46 = v25[9];
      uint64_t v47 = (char *)v23 + v46;
      uint64_t v48 = (char *)v24 + v46;
      *(void *)uint64_t v47 = *(void *)v48;
      v47[8] = v48[8];
      uint64_t v49 = v25[10];
      uint64_t v50 = (void *)((char *)v23 + v49);
      uint64_t v51 = (void *)((char *)v24 + v49);
      uint64_t v52 = v51[1];
      *uint64_t v50 = *v51;
      v50[1] = v52;
      *((unsigned char *)v23 + v25[11]) = *((unsigned char *)v24 + v25[11]);
      *((unsigned char *)v23 + v25[12]) = *((unsigned char *)v24 + v25[12]);
      uint64_t v53 = v25[13];
      uint64_t v54 = (_DWORD *)((char *)v23 + v53);
      uint64_t v55 = (_DWORD *)((char *)v24 + v53);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v55, 1, v40))
      {
        uint64_t v56 = sub_253462A5C(&qword_269CDCCC0);
        memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        *uint64_t v54 = *v55;
        *((unsigned char *)v54 + 4) = *((unsigned char *)v55 + 4);
        v54[2] = v55[2];
        *((unsigned char *)v54 + 12) = *((unsigned char *)v55 + 12);
        v54[4] = v55[4];
        *((unsigned char *)v54 + 20) = *((unsigned char *)v55 + 20);
        *((unsigned char *)v54 + 28) = *((unsigned char *)v55 + 28);
        v54[6] = v55[6];
        uint64_t v57 = *(int *)(v40 + 32);
        uint64_t v58 = (char *)v54 + v57;
        uint64_t v59 = (char *)v55 + v57;
        uint64_t v60 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v54, 0, 1, v40);
      }
      *((unsigned char *)v23 + v25[14]) = *((unsigned char *)v24 + v25[14]);
      uint64_t v61 = v25[15];
      uint64_t v62 = (void *)((char *)v23 + v61);
      uint64_t v63 = (void *)((char *)v24 + v61);
      uint64_t v64 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v63, 1, v64))
      {
        uint64_t v65 = sub_253462A5C(&qword_269CDF920);
        memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        uint64_t v66 = v63[1];
        *uint64_t v62 = *v63;
        v62[1] = v66;
        uint64_t v67 = v63[3];
        v62[2] = v63[2];
        v62[3] = v67;
        uint64_t v68 = *(int *)(v64 + 24);
        v192 = (char *)v63 + v68;
        v193 = (char *)v62 + v68;
        uint64_t v69 = sub_253B07160();
        v188 = *(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v188(v193, v192, v69);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v62, 0, 1, v64);
      }
      unsigned int v6 = v195;
      uint64_t v70 = v25[16];
      uint64_t v71 = (char *)v23 + v70;
      uint64_t v72 = (char *)v24 + v70;
      uint64_t v73 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, (uint64_t)v25);
      int v3 = v197;
    }
    uint64_t v74 = v6[8];
    uint64_t v75 = (char *)v4 + v74;
    uint64_t v76 = (char *)v3 + v74;
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v3 + v74, 1, v10))
    {
      uint64_t v77 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v75, v76, v10);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v75, 0, 1, v10);
    }
    uint64_t v78 = v6[9];
    uint64_t v79 = (void *)((char *)v4 + v78);
    char v80 = (void *)((char *)v3 + v78);
    uint64_t v81 = type metadata accessor for ContextProtoStructuredContext(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v80, 1, v81))
    {
      uint64_t v82 = sub_253462A5C(&qword_269CDF8E0);
      memcpy(v79, v80, *(void *)(*(void *)(v82 - 8) + 64));
    }
    else
    {
      uint64_t v83 = type metadata accessor for ContextProtoStructuredContextKind(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v80, 1, v83))
      {
        uint64_t v84 = sub_253462A5C(&qword_269CDF958);
        memcpy(v79, v80, *(void *)(*(void *)(v84 - 8) + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v198 = v3;
        uint64_t v194 = v83;
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v94 = v80[1];
          *uint64_t v79 = *v80;
          v79[1] = v94;
          uint64_t v95 = v80[3];
          v79[2] = v80[2];
          v79[3] = v95;
          uint64_t v96 = v80[5];
          v79[4] = v80[4];
          v79[5] = v96;
          uint64_t v97 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
          __dstc = (char *)v80 + v97;
          v190 = (char *)v79 + v97;
          uint64_t v98 = sub_253B07160();
          v181 = *(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16);
          uint64_t v92 = v194;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v99 = v98;
          int v3 = v198;
          v181(v190, __dstc, v99);
        }
        else
        {
          v196 = v6;
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v86 = v80[1];
            *uint64_t v79 = *v80;
            v79[1] = v86;
            *((unsigned char *)v79 + 16) = *((unsigned char *)v80 + 16);
            uint64_t v87 = v80[4];
            v79[3] = v80[3];
            v79[4] = v87;
            uint64_t v88 = v80[6];
            v79[5] = v80[5];
            v79[6] = v88;
            uint64_t v89 = v80[8];
            v79[7] = v80[7];
            v79[8] = v89;
            v79[9] = v80[9];
            uint64_t v90 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
            __dstb = (char *)v80 + v90;
            v189 = (char *)v79 + v90;
            uint64_t v91 = sub_253B07160();
            v180 = *(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16);
            uint64_t v92 = v194;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v93 = v91;
            int v3 = v198;
            v180(v189, __dstb, v93);
          }
          else
          {
            uint64_t v100 = v80[1];
            *uint64_t v79 = *v80;
            v79[1] = v100;
            uint64_t v101 = v80[3];
            v79[2] = v80[2];
            v79[3] = v101;
            uint64_t v102 = v80[5];
            v79[4] = v80[4];
            v79[5] = v102;
            uint64_t v103 = v80[7];
            v79[6] = v80[6];
            v79[7] = v103;
            uint64_t v104 = v80[9];
            v79[8] = v80[8];
            v79[9] = v104;
            *((_DWORD *)v79 + 20) = *((_DWORD *)v80 + 20);
            *((unsigned char *)v79 + 84) = *((unsigned char *)v80 + 84);
            uint64_t v105 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
            uint64_t v106 = *(int *)(v105 + 60);
            __dst = (void *)((char *)v79 + v106);
            v191 = (int *)v105;
            uint64_t v107 = (void *)((char *)v80 + v106);
            uint64_t v108 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v107, 1, v108))
            {
              uint64_t v109 = sub_253462A5C(&qword_269CDF998);
              memcpy(__dst, v107, *(void *)(*(void *)(v109 - 8) + 64));
            }
            else
            {
              uint64_t v110 = v107[1];
              void *__dst = *v107;
              __dst[1] = v110;
              *((_WORD *)__dst + 8) = *((_WORD *)v107 + 8);
              uint64_t v111 = *(int *)(v108 + 28);
              v177 = (char *)v107 + v111;
              v182 = (char *)__dst + v111;
              uint64_t v112 = sub_253B07160();
              uint64_t v113 = *(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16);
              swift_bridgeObjectRetain();
              v113(v182, v177, v112);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v108);
            }
            uint64_t v114 = v191;
            uint64_t v115 = v191[16];
            uint64_t v116 = (char *)v79 + v115;
            char v117 = (char *)v80 + v115;
            unint64_t v118 = *((void *)v117 + 1);
            unsigned int v6 = v196;
            if (v118 >> 60 == 15)
            {
              *(_OWORD *)uint64_t v116 = *(_OWORD *)v117;
            }
            else
            {
              uint64_t v119 = *(void *)v117;
              sub_25348A9C8(*(void *)v117, *((void *)v117 + 1));
              *(void *)uint64_t v116 = v119;
              *((void *)v116 + 1) = v118;
            }
            uint64_t v120 = v191[17];
            int v121 = (void *)((char *)v79 + v120);
            char v122 = (void *)((char *)v80 + v120);
            uint64_t v123 = v122[1];
            *int v121 = *v122;
            v121[1] = v123;
            uint64_t v124 = v191[18];
            uint64_t v125 = (void *)((char *)v79 + v124);
            uint64_t v126 = (void *)((char *)v80 + v124);
            uint64_t v127 = v126[1];
            *uint64_t v125 = *v126;
            v125[1] = v127;
            uint64_t v128 = v191[19];
            __dsta = (_DWORD *)((char *)v79 + v128);
            int v129 = (_DWORD *)((char *)v80 + v128);
            uint64_t v130 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v129, 1, v130))
            {
              uint64_t v131 = sub_253462A5C(&qword_269CDF988);
              memcpy(__dsta, v129, *(void *)(*(void *)(v131 - 8) + 64));
            }
            else
            {
              _DWORD *__dsta = *v129;
              *((unsigned char *)__dsta + 4) = *((unsigned char *)v129 + 4);
              uint64_t v132 = *((void *)v129 + 2);
              *((void *)__dsta + 1) = *((void *)v129 + 1);
              *((void *)__dsta + 2) = v132;
              __dsta[6] = v129[6];
              *((unsigned char *)__dsta + 28) = *((unsigned char *)v129 + 28);
              __dsta[8] = v129[8];
              *((unsigned char *)__dsta + 36) = *((unsigned char *)v129 + 36);
              uint64_t v133 = *(int *)(v130 + 32);
              v178 = (char *)__dsta + v133;
              uint64_t v134 = (char *)v129 + v133;
              uint64_t v135 = sub_253B07160();
              uint64_t v136 = *(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 16);
              swift_bridgeObjectRetain();
              uint64_t v137 = v134;
              uint64_t v114 = v191;
              uint64_t v138 = v135;
              unsigned int v6 = v196;
              v136(v178, v137, v138);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v130);
            }
            uint64_t v139 = v114[20];
            uint64_t v140 = (char *)v79 + v139;
            uint64_t v141 = (char *)v80 + v139;
            *(void *)uint64_t v140 = *(void *)v141;
            v140[8] = v141[8];
            uint64_t v142 = v114[21];
            int v143 = (void *)((char *)v79 + v142);
            uint64_t v144 = (void *)((char *)v80 + v142);
            uint64_t v145 = v144[1];
            *int v143 = *v144;
            v143[1] = v145;
            *((unsigned char *)v79 + v114[22]) = *((unsigned char *)v80 + v114[22]);
            *((unsigned char *)v79 + v114[23]) = *((unsigned char *)v80 + v114[23]);
            uint64_t v146 = v114[24];
            uint64_t v147 = (void *)((char *)v79 + v146);
            uint64_t v148 = (void *)((char *)v80 + v146);
            uint64_t v149 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v148, 1, v149))
            {
              uint64_t v150 = sub_253462A5C(&qword_269CDF978);
              memcpy(v147, v148, *(void *)(*(void *)(v150 - 8) + 64));
            }
            else
            {
              uint64_t v151 = v148[1];
              *uint64_t v147 = *v148;
              v147[1] = v151;
              uint64_t v152 = v148[3];
              v147[2] = v148[2];
              v147[3] = v152;
              uint64_t v153 = v148[5];
              v147[4] = v148[4];
              v147[5] = v153;
              uint64_t v154 = v148[7];
              v147[6] = v148[6];
              v147[7] = v154;
              uint64_t v155 = v148[9];
              v147[8] = v148[8];
              v147[9] = v155;
              v147[10] = v148[10];
              uint64_t v156 = *(int *)(v149 + 40);
              v179 = (char *)v148 + v156;
              v183 = (char *)v147 + v156;
              uint64_t v157 = sub_253B07160();
              v176 = *(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v114 = v191;
              swift_bridgeObjectRetain();
              unsigned int v6 = v196;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v176(v183, v179, v157);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v147, 0, 1, v149);
            }
            *((unsigned char *)v79 + v114[25]) = *((unsigned char *)v80 + v114[25]);
            *((unsigned char *)v79 + v114[26]) = *((unsigned char *)v80 + v114[26]);
            uint64_t v158 = v114[27];
            uint64_t v159 = (char *)v79 + v158;
            uint64_t v160 = (char *)v80 + v158;
            uint64_t v161 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 16))(v159, v160, v161);
            int v3 = v198;
            uint64_t v92 = v194;
          }
        }
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v79, 0, 1, v92);
      }
      uint64_t v162 = *(int *)(v81 + 20);
      uint64_t v163 = (char *)v79 + v162;
      uint64_t v164 = (char *)v80 + v162;
      uint64_t v165 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 16))(v163, v164, v165);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v79, 0, 1, v81);
    }
    uint64_t v166 = v6[10];
    uint64_t v167 = v6[11];
    uint64_t v168 = (void *)((char *)v4 + v166);
    uint64_t v169 = (void *)((char *)v3 + v166);
    uint64_t v170 = v169[1];
    *uint64_t v168 = *v169;
    v168[1] = v170;
    uint64_t v171 = (char *)v4 + v167;
    uint64_t v172 = (char *)v3 + v167;
    uint64_t v173 = sub_253B07160();
    uint64_t v174 = *(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 16);
    swift_bridgeObjectRetain();
    v174(v171, v172, v173);
  }
  return v4;
}

uint64_t destroy for ContextProtoRetrievedContext(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_253B08E50();
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = type metadata accessor for ContextProtoConfidence(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, 1, v7))
  {
    uint64_t v8 = v6 + *(int *)(v7 + 24);
    uint64_t v9 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = a1 + a2[7];
  uint64_t v11 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, 1, (uint64_t)v11))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = v10 + v11[7];
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v12, 1, v7))
    {
      uint64_t v13 = v12 + *(int *)(v7 + 24);
      uint64_t v14 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    }
    uint64_t v15 = v10 + v11[8];
    uint64_t v16 = type metadata accessor for ContextProtoBoundingBox(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v15, 1, v16))
    {
      uint64_t v17 = v15 + *(int *)(v16 + 32);
      uint64_t v18 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    }
    swift_bridgeObjectRelease();
    uint64_t v19 = v10 + v11[13];
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v16))
    {
      uint64_t v20 = v19 + *(int *)(v16 + 32);
      uint64_t v21 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
    }
    uint64_t v22 = v10 + v11[15];
    uint64_t v23 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v22, 1, v23))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v24 = v22 + *(int *)(v23 + 24);
      uint64_t v25 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
    }
    uint64_t v26 = v10 + v11[16];
    uint64_t v27 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
  }
  uint64_t v28 = a1 + a2[8];
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v28, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v28, v5);
  }
  uint64_t v29 = a1 + a2[9];
  uint64_t v30 = type metadata accessor for ContextProtoStructuredContext(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v29, 1, v30))
  {
    uint64_t v31 = type metadata accessor for ContextProtoStructuredContextKind(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v29, 1, v31)) {
      goto LABEL_34;
    }
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v48 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v48 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
        break;
      case 0:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v33 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
        uint64_t v34 = v29 + v33[15];
        uint64_t v35 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v34, 1, v35))
        {
          swift_bridgeObjectRelease();
          uint64_t v36 = v34 + *(int *)(v35 + 28);
          uint64_t v37 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
        }
        uint64_t v38 = (uint64_t *)(v29 + v33[16]);
        unint64_t v39 = v38[1];
        if (v39 >> 60 != 15) {
          sub_253487D84(*v38, v39);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v40 = v29 + v33[19];
        uint64_t v41 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v40, 1, v41))
        {
          swift_bridgeObjectRelease();
          uint64_t v42 = v40 + *(int *)(v41 + 32);
          uint64_t v43 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v42, v43);
        }
        swift_bridgeObjectRelease();
        uint64_t v44 = v29 + v33[24];
        uint64_t v45 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v44, 1, v45))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v46 = v44 + *(int *)(v45 + 40);
          uint64_t v47 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v46, v47);
        }
        uint64_t v48 = v33[27];
        break;
      default:
LABEL_34:
        uint64_t v51 = v29 + *(int *)(v30 + 20);
        uint64_t v52 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v51, v52);
        goto LABEL_35;
    }
    uint64_t v49 = v29 + v48;
    uint64_t v50 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v49, v50);
    goto LABEL_34;
  }
LABEL_35:
  swift_bridgeObjectRelease();
  uint64_t v53 = a1 + a2[11];
  uint64_t v54 = sub_253B07160();
  uint64_t v55 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8);
  return v55(v53, v54);
}

unsigned char *initializeWithCopy for ContextProtoRetrievedContext(unsigned char *a1, unsigned char *a2, int *a3)
{
  int v3 = a3;
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_253B08E50();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = v3[6];
  uint64_t v12 = &v5[v11];
  uint64_t v13 = &v4[v11];
  uint64_t v14 = type metadata accessor for ContextProtoConfidence(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_253462A5C(&qword_269CDF900);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    uint64_t v16 = *(int *)(v14 + 24);
    uint64_t v17 = &v12[v16];
    uint64_t v18 = &v13[v16];
    uint64_t v19 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v20 = v3[7];
  uint64_t v21 = &v5[v20];
  uint64_t v22 = &v4[v20];
  uint64_t v23 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, (uint64_t)v23))
  {
    uint64_t v24 = sub_253462A5C(&qword_269CDF8F0);
    memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    v195 = v5;
    v197 = v3;
    uint64_t v25 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v25;
    uint64_t v26 = v22[3];
    v21[2] = v22[2];
    v21[3] = v26;
    v21[4] = v22[4];
    uint64_t v27 = v23[7];
    uint64_t v28 = (char *)v21 + v27;
    uint64_t v29 = (char *)v22 + v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v14))
    {
      uint64_t v30 = sub_253462A5C(&qword_269CDF900);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
      v28[4] = v29[4];
      uint64_t v31 = *(int *)(v14 + 24);
      uint64_t v32 = &v28[v31];
      uint64_t v33 = &v29[v31];
      uint64_t v34 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v28, 0, 1, v14);
    }
    uint64_t v35 = v23[8];
    uint64_t v36 = (_DWORD *)((char *)v21 + v35);
    uint64_t v37 = (_DWORD *)((char *)v22 + v35);
    uint64_t v38 = type metadata accessor for ContextProtoBoundingBox(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v37, 1, v38))
    {
      uint64_t v39 = sub_253462A5C(&qword_269CDCCC0);
      memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      *uint64_t v36 = *v37;
      *((unsigned char *)v36 + 4) = *((unsigned char *)v37 + 4);
      void v36[2] = v37[2];
      *((unsigned char *)v36 + 12) = *((unsigned char *)v37 + 12);
      v36[4] = v37[4];
      *((unsigned char *)v36 + 20) = *((unsigned char *)v37 + 20);
      *((unsigned char *)v36 + 28) = *((unsigned char *)v37 + 28);
      v36[6] = v37[6];
      uint64_t v40 = *(int *)(v38 + 32);
      uint64_t v41 = (char *)v36 + v40;
      uint64_t v42 = (char *)v37 + v40;
      uint64_t v43 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v36, 0, 1, v38);
    }
    uint64_t v44 = v23[9];
    uint64_t v45 = (char *)v21 + v44;
    uint64_t v46 = (char *)v22 + v44;
    *(void *)uint64_t v45 = *(void *)v46;
    v45[8] = v46[8];
    uint64_t v47 = v23[10];
    uint64_t v48 = (void *)((char *)v21 + v47);
    uint64_t v49 = (void *)((char *)v22 + v47);
    uint64_t v50 = v49[1];
    *uint64_t v48 = *v49;
    v48[1] = v50;
    *((unsigned char *)v21 + v23[11]) = *((unsigned char *)v22 + v23[11]);
    *((unsigned char *)v21 + v23[12]) = *((unsigned char *)v22 + v23[12]);
    uint64_t v51 = v23[13];
    uint64_t v52 = (_DWORD *)((char *)v21 + v51);
    uint64_t v53 = (_DWORD *)((char *)v22 + v51);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v53, 1, v38))
    {
      uint64_t v54 = sub_253462A5C(&qword_269CDCCC0);
      memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      *uint64_t v52 = *v53;
      *((unsigned char *)v52 + 4) = *((unsigned char *)v53 + 4);
      v52[2] = v53[2];
      *((unsigned char *)v52 + 12) = *((unsigned char *)v53 + 12);
      v52[4] = v53[4];
      *((unsigned char *)v52 + 20) = *((unsigned char *)v53 + 20);
      *((unsigned char *)v52 + 28) = *((unsigned char *)v53 + 28);
      v52[6] = v53[6];
      uint64_t v55 = *(int *)(v38 + 32);
      uint64_t v56 = (char *)v52 + v55;
      uint64_t v57 = (char *)v53 + v55;
      uint64_t v58 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v52, 0, 1, v38);
    }
    *((unsigned char *)v21 + v23[14]) = *((unsigned char *)v22 + v23[14]);
    uint64_t v59 = v23[15];
    uint64_t v60 = (void *)((char *)v21 + v59);
    uint64_t v61 = (void *)((char *)v22 + v59);
    uint64_t v62 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v61, 1, v62))
    {
      uint64_t v63 = sub_253462A5C(&qword_269CDF920);
      memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      uint64_t v64 = v61[1];
      *uint64_t v60 = *v61;
      v60[1] = v64;
      uint64_t v65 = v61[3];
      v60[2] = v61[2];
      v60[3] = v65;
      uint64_t v66 = *(int *)(v62 + 24);
      v189 = (char *)v61 + v66;
      v190 = (char *)v60 + v66;
      uint64_t v67 = sub_253B07160();
      v185 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v185(v190, v189, v67);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v60, 0, 1, v62);
    }
    int v3 = v197;
    uint64_t v68 = v23[16];
    uint64_t v69 = (char *)v21 + v68;
    uint64_t v70 = (char *)v22 + v68;
    uint64_t v71 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v21, 0, 1, (uint64_t)v23);
    uint64_t v5 = v195;
  }
  uint64_t v72 = v3[8];
  uint64_t v73 = &v5[v72];
  uint64_t v74 = &v4[v72];
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)&v4[v72], 1, v9))
  {
    uint64_t v75 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v73, v74, v9);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v73, 0, 1, v9);
  }
  uint64_t v76 = v3[9];
  uint64_t v77 = &v5[v76];
  uint64_t v78 = &v4[v76];
  uint64_t v79 = type metadata accessor for ContextProtoStructuredContext(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v78, 1, v79))
  {
    uint64_t v80 = sub_253462A5C(&qword_269CDF8E0);
    memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
  }
  else
  {
    uint64_t v81 = type metadata accessor for ContextProtoStructuredContextKind(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v78, 1, v81))
    {
      uint64_t v82 = sub_253462A5C(&qword_269CDF958);
      memcpy(v77, v78, *(void *)(*(void *)(v82 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v196 = v5;
      v198 = v3;
      uint64_t v191 = v81;
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v92 = v78[1];
        *uint64_t v77 = *v78;
        v77[1] = v92;
        uint64_t v93 = v78[3];
        v77[2] = v78[2];
        v77[3] = v93;
        uint64_t v94 = v78[5];
        v77[4] = v78[4];
        v77[5] = v94;
        uint64_t v95 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
        __dstb = (char *)v77 + v95;
        v187 = (char *)v78 + v95;
        uint64_t v96 = sub_253B07160();
        uint64_t v97 = v4;
        uint64_t v98 = *(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16);
        uint64_t v90 = v191;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v99 = v96;
        uint64_t v5 = v196;
        v98(__dstb, v187, v99);
        uint64_t v4 = v97;
        int v3 = v198;
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v84 = v78[1];
        *uint64_t v77 = *v78;
        v77[1] = v84;
        *((unsigned char *)v77 + 16) = *((unsigned char *)v78 + 16);
        uint64_t v85 = v78[4];
        v77[3] = v78[3];
        v77[4] = v85;
        uint64_t v86 = v78[6];
        v77[5] = v78[5];
        v77[6] = v86;
        uint64_t v87 = v78[8];
        v77[7] = v78[7];
        v77[8] = v87;
        v77[9] = v78[9];
        uint64_t v88 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
        v183 = (char *)v78 + v88;
        v186 = (char *)v77 + v88;
        uint64_t v89 = sub_253B07160();
        v179 = *(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16);
        uint64_t v90 = v191;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v91 = v89;
        uint64_t v5 = v196;
        v179(v186, v183, v91);
      }
      else
      {
        uint64_t v100 = v78[1];
        *uint64_t v77 = *v78;
        v77[1] = v100;
        uint64_t v101 = v78[3];
        v77[2] = v78[2];
        v77[3] = v101;
        uint64_t v102 = v78[5];
        v77[4] = v78[4];
        v77[5] = v102;
        uint64_t v103 = v78[7];
        v77[6] = v78[6];
        v77[7] = v103;
        uint64_t v104 = v78[9];
        v77[8] = v78[8];
        v77[9] = v104;
        *((_DWORD *)v77 + 20) = *((_DWORD *)v78 + 20);
        *((unsigned char *)v77 + 84) = *((unsigned char *)v78 + 84);
        v188 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
        uint64_t v105 = v188[15];
        __dst = (void *)((char *)v77 + v105);
        uint64_t v106 = (void *)((char *)v78 + v105);
        uint64_t v107 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v106, 1, v107))
        {
          uint64_t v108 = sub_253462A5C(&qword_269CDF998);
          memcpy(__dst, v106, *(void *)(*(void *)(v108 - 8) + 64));
        }
        else
        {
          uint64_t v109 = v106[1];
          void *__dst = *v106;
          __dst[1] = v109;
          *((_WORD *)__dst + 8) = *((_WORD *)v106 + 8);
          uint64_t v110 = *(int *)(v107 + 28);
          v180 = (char *)v106 + v110;
          v184 = (char *)__dst + v110;
          uint64_t v111 = sub_253B07160();
          uint64_t v112 = v4;
          uint64_t v113 = *(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16);
          swift_bridgeObjectRetain();
          v113(v184, v180, v111);
          uint64_t v4 = v112;
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v107);
        }
        uint64_t v114 = v188;
        uint64_t v115 = v188[16];
        uint64_t v116 = (char *)v77 + v115;
        char v117 = (char *)v78 + v115;
        unint64_t v118 = *((void *)v117 + 1);
        int v3 = v198;
        if (v118 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v116 = *(_OWORD *)v117;
        }
        else
        {
          uint64_t v119 = *(void *)v117;
          sub_25348A9C8(*(void *)v117, *((void *)v117 + 1));
          *(void *)uint64_t v116 = v119;
          *((void *)v116 + 1) = v118;
        }
        uint64_t v120 = v188[17];
        int v121 = (void *)((char *)v77 + v120);
        char v122 = (void *)((char *)v78 + v120);
        uint64_t v123 = v122[1];
        *int v121 = *v122;
        v121[1] = v123;
        uint64_t v124 = v188[18];
        uint64_t v125 = (void *)((char *)v77 + v124);
        uint64_t v126 = (void *)((char *)v78 + v124);
        uint64_t v127 = v126[1];
        *uint64_t v125 = *v126;
        v125[1] = v127;
        uint64_t v128 = v188[19];
        __dsta = (_DWORD *)((char *)v77 + v128);
        int v129 = (_DWORD *)((char *)v78 + v128);
        uint64_t v130 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v129, 1, v130))
        {
          uint64_t v131 = sub_253462A5C(&qword_269CDF988);
          memcpy(__dsta, v129, *(void *)(*(void *)(v131 - 8) + 64));
        }
        else
        {
          _DWORD *__dsta = *v129;
          *((unsigned char *)__dsta + 4) = *((unsigned char *)v129 + 4);
          uint64_t v132 = *((void *)v129 + 2);
          *((void *)__dsta + 1) = *((void *)v129 + 1);
          *((void *)__dsta + 2) = v132;
          __dsta[6] = v129[6];
          *((unsigned char *)__dsta + 28) = *((unsigned char *)v129 + 28);
          __dsta[8] = v129[8];
          *((unsigned char *)__dsta + 36) = *((unsigned char *)v129 + 36);
          uint64_t v133 = *(int *)(v130 + 32);
          v181 = (char *)__dsta + v133;
          uint64_t v134 = (char *)v129 + v133;
          uint64_t v135 = sub_253B07160();
          uint64_t v136 = v4;
          uint64_t v137 = *(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v138 = v134;
          uint64_t v114 = v188;
          uint64_t v139 = v135;
          int v3 = v198;
          v137(v181, v138, v139);
          uint64_t v4 = v136;
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v130);
        }
        uint64_t v140 = v114[20];
        uint64_t v141 = (char *)v77 + v140;
        uint64_t v142 = (char *)v78 + v140;
        *(void *)uint64_t v141 = *(void *)v142;
        v141[8] = v142[8];
        uint64_t v143 = v114[21];
        uint64_t v144 = (void *)((char *)v77 + v143);
        uint64_t v145 = (void *)((char *)v78 + v143);
        uint64_t v146 = v145[1];
        *uint64_t v144 = *v145;
        v144[1] = v146;
        *((unsigned char *)v77 + v114[22]) = *((unsigned char *)v78 + v114[22]);
        *((unsigned char *)v77 + v114[23]) = *((unsigned char *)v78 + v114[23]);
        uint64_t v147 = v114[24];
        uint64_t v148 = (void *)((char *)v77 + v147);
        uint64_t v149 = (void *)((char *)v78 + v147);
        uint64_t v150 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v149, 1, v150))
        {
          uint64_t v151 = sub_253462A5C(&qword_269CDF978);
          memcpy(v148, v149, *(void *)(*(void *)(v151 - 8) + 64));
        }
        else
        {
          uint64_t v152 = v149[1];
          *uint64_t v148 = *v149;
          v148[1] = v152;
          uint64_t v153 = v149[3];
          v148[2] = v149[2];
          v148[3] = v153;
          uint64_t v154 = v149[5];
          v148[4] = v149[4];
          v148[5] = v154;
          uint64_t v155 = v149[7];
          v148[6] = v149[6];
          v148[7] = v155;
          uint64_t v156 = v149[9];
          v148[8] = v149[8];
          v148[9] = v156;
          v148[10] = v149[10];
          uint64_t v157 = *(int *)(v150 + 40);
          v178 = (char *)v149 + v157;
          v182 = (char *)v148 + v157;
          uint64_t v158 = sub_253B07160();
          v177 = *(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v114 = v188;
          swift_bridgeObjectRetain();
          int v3 = v198;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v177(v182, v178, v158);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v148, 0, 1, v150);
        }
        *((unsigned char *)v77 + v114[25]) = *((unsigned char *)v78 + v114[25]);
        *((unsigned char *)v77 + v114[26]) = *((unsigned char *)v78 + v114[26]);
        uint64_t v159 = v114[27];
        uint64_t v160 = (char *)v77 + v159;
        uint64_t v161 = (char *)v78 + v159;
        uint64_t v162 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 16))(v160, v161, v162);
        uint64_t v5 = v196;
        uint64_t v90 = v191;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v77, 0, 1, v90);
    }
    uint64_t v163 = *(int *)(v79 + 20);
    uint64_t v164 = (char *)v77 + v163;
    uint64_t v165 = (char *)v78 + v163;
    uint64_t v166 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 16))(v164, v165, v166);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v77, 0, 1, v79);
  }
  uint64_t v167 = v3[10];
  uint64_t v168 = v3[11];
  uint64_t v169 = &v5[v167];
  uint64_t v170 = &v4[v167];
  uint64_t v171 = v170[1];
  void *v169 = *v170;
  v169[1] = v171;
  uint64_t v172 = &v5[v168];
  uint64_t v173 = &v4[v168];
  uint64_t v174 = sub_253B07160();
  v175 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v174 - 8) + 16);
  swift_bridgeObjectRetain();
  v175(v172, v173, v174);
  return v5;
}

unsigned char *assignWithCopy for ContextProtoRetrievedContext(unsigned char *a1, unsigned char *a2, int *a3)
{
  int v3 = a3;
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_253B08E50();
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = v3[6];
  uint64_t v15 = &v5[v14];
  uint64_t v16 = &v4[v14];
  uint64_t v17 = type metadata accessor for ContextProtoConfidence(0);
  int v18 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v17);
  int v19 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v17);
  if (v18)
  {
    if (!v19)
    {
      *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
      v15[4] = v16[4];
      uint64_t v20 = *(int *)(v17 + 24);
      uint64_t v21 = &v15[v20];
      uint64_t v22 = &v16[v20];
      uint64_t v23 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    sub_2535BC188();
LABEL_12:
    uint64_t v24 = sub_253462A5C(&qword_269CDF900);
    memcpy(v15, v16, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  v15[4] = v16[4];
  uint64_t v36 = *(int *)(v17 + 24);
  uint64_t v37 = &v15[v36];
  uint64_t v38 = &v16[v36];
  uint64_t v39 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v39 - 8) + 24))(v37, v38, v39);
LABEL_13:
  uint64_t v25 = v3[7];
  uint64_t v26 = &v5[v25];
  uint64_t v27 = &v4[v25];
  uint64_t v28 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
  int v29 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v26, 1, (uint64_t)v28);
  int v30 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, (uint64_t)v28);
  if (!v29)
  {
    if (v30)
    {
      sub_2535BC188();
      goto LABEL_19;
    }
    v443 = v3;
    v436 = v5;
    *uint64_t v26 = *v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v26[1] = v27[1];
    v26[2] = v27[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v26[3] = v27[3];
    v26[4] = v27[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v40 = v28[7];
    uint64_t v41 = (char *)v26 + v40;
    uint64_t v42 = (char *)v27 + v40;
    int v43 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v26 + v40, 1, v17);
    int v44 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v42, 1, v17);
    if (v43)
    {
      if (!v44)
      {
        *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
        v41[4] = v42[4];
        uint64_t v45 = *(int *)(v17 + 24);
        uint64_t v46 = &v41[v45];
        uint64_t v47 = &v42[v45];
        uint64_t v48 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v41, 0, 1, v17);
        goto LABEL_39;
      }
    }
    else
    {
      if (!v44)
      {
        *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
        v41[4] = v42[4];
        uint64_t v184 = *(int *)(v17 + 24);
        v185 = &v41[v184];
        v186 = &v42[v184];
        uint64_t v187 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v187 - 8) + 24))(v185, v186, v187);
LABEL_39:
        uint64_t v99 = v28[8];
        uint64_t v100 = (char *)v26 + v99;
        uint64_t v101 = (char *)v27 + v99;
        uint64_t v102 = type metadata accessor for ContextProtoBoundingBox(0);
        int v103 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v100, 1, v102);
        int v104 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v101, 1, v102);
        if (v103)
        {
          if (!v104)
          {
            int v105 = *(_DWORD *)v101;
            v100[4] = v101[4];
            *(_DWORD *)uint64_t v100 = v105;
            int v106 = *((_DWORD *)v101 + 2);
            v100[12] = v101[12];
            *((_DWORD *)v100 + 2) = v106;
            int v107 = *((_DWORD *)v101 + 4);
            v100[20] = v101[20];
            *((_DWORD *)v100 + 4) = v107;
            int v108 = *((_DWORD *)v101 + 6);
            v100[28] = v101[28];
            *((_DWORD *)v100 + 6) = v108;
            uint64_t v109 = *(int *)(v102 + 32);
            uint64_t v110 = &v100[v109];
            uint64_t v111 = &v101[v109];
            uint64_t v112 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16))(v110, v111, v112);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v100, 0, 1, v102);
            goto LABEL_45;
          }
        }
        else
        {
          if (!v104)
          {
            int v188 = *(_DWORD *)v101;
            v100[4] = v101[4];
            *(_DWORD *)uint64_t v100 = v188;
            int v189 = *((_DWORD *)v101 + 2);
            v100[12] = v101[12];
            *((_DWORD *)v100 + 2) = v189;
            int v190 = *((_DWORD *)v101 + 4);
            v100[20] = v101[20];
            *((_DWORD *)v100 + 4) = v190;
            int v191 = *((_DWORD *)v101 + 6);
            v100[28] = v101[28];
            *((_DWORD *)v100 + 6) = v191;
            uint64_t v192 = *(int *)(v102 + 32);
            v193 = &v100[v192];
            uint64_t v194 = &v101[v192];
            uint64_t v195 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 24))(v193, v194, v195);
LABEL_45:
            uint64_t v114 = v28[9];
            uint64_t v115 = (char *)v26 + v114;
            uint64_t v116 = (char *)v27 + v114;
            uint64_t v117 = *(void *)v116;
            v115[8] = v116[8];
            *(void *)uint64_t v115 = v117;
            uint64_t v118 = v28[10];
            uint64_t v119 = (void *)((char *)v26 + v118);
            uint64_t v120 = (void *)((char *)v27 + v118);
            *uint64_t v119 = *v120;
            v119[1] = v120[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *((unsigned char *)v26 + v28[11]) = *((unsigned char *)v27 + v28[11]);
            *((unsigned char *)v26 + v28[12]) = *((unsigned char *)v27 + v28[12]);
            uint64_t v121 = v28[13];
            char v122 = (char *)v26 + v121;
            uint64_t v123 = (char *)v27 + v121;
            int v124 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v26 + v121, 1, v102);
            int v125 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v123, 1, v102);
            if (v124)
            {
              if (!v125)
              {
                int v126 = *(_DWORD *)v123;
                v122[4] = v123[4];
                *(_DWORD *)char v122 = v126;
                int v127 = *((_DWORD *)v123 + 2);
                v122[12] = v123[12];
                *((_DWORD *)v122 + 2) = v127;
                int v128 = *((_DWORD *)v123 + 4);
                v122[20] = v123[20];
                *((_DWORD *)v122 + 4) = v128;
                int v129 = *((_DWORD *)v123 + 6);
                v122[28] = v123[28];
                *((_DWORD *)v122 + 6) = v129;
                uint64_t v130 = *(int *)(v102 + 32);
                uint64_t v131 = &v122[v130];
                uint64_t v132 = &v123[v130];
                uint64_t v133 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16))(v131, v132, v133);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v122, 0, 1, v102);
                goto LABEL_51;
              }
            }
            else
            {
              if (!v125)
              {
                int v196 = *(_DWORD *)v123;
                v122[4] = v123[4];
                *(_DWORD *)char v122 = v196;
                int v197 = *((_DWORD *)v123 + 2);
                v122[12] = v123[12];
                *((_DWORD *)v122 + 2) = v197;
                int v198 = *((_DWORD *)v123 + 4);
                v122[20] = v123[20];
                *((_DWORD *)v122 + 4) = v198;
                int v199 = *((_DWORD *)v123 + 6);
                v122[28] = v123[28];
                *((_DWORD *)v122 + 6) = v199;
                uint64_t v200 = *(int *)(v102 + 32);
                v201 = &v122[v200];
                v202 = &v123[v200];
                uint64_t v203 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v203 - 8) + 24))(v201, v202, v203);
LABEL_51:
                *((unsigned char *)v26 + v28[14]) = *((unsigned char *)v27 + v28[14]);
                uint64_t v135 = v28[15];
                uint64_t v136 = (void *)((char *)v26 + v135);
                uint64_t v137 = (void *)((char *)v27 + v135);
                uint64_t v138 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
                int v139 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v136, 1, v138);
                int v140 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v137, 1, v138);
                if (v139)
                {
                  if (!v140)
                  {
                    *uint64_t v136 = *v137;
                    v136[1] = v137[1];
                    v136[2] = v137[2];
                    v136[3] = v137[3];
                    uint64_t v141 = *(int *)(v138 + 24);
                    v427 = (char *)v137 + v141;
                    v433 = (char *)v136 + v141;
                    uint64_t v142 = sub_253B07160();
                    v401 = *(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 16);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    v401(v433, v427, v142);
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v136, 0, 1, v138);
LABEL_57:
                    uint64_t v5 = v436;
                    uint64_t v144 = v28[16];
                    uint64_t v145 = (char *)v26 + v144;
                    uint64_t v146 = (char *)v27 + v144;
                    uint64_t v147 = sub_253B07160();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 24))(v145, v146, v147);
                    int v3 = v443;
                    goto LABEL_58;
                  }
                }
                else
                {
                  if (!v140)
                  {
                    *uint64_t v136 = *v137;
                    v136[1] = v137[1];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v136[2] = v137[2];
                    v136[3] = v137[3];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    uint64_t v204 = *(int *)(v138 + 24);
                    v205 = (char *)v136 + v204;
                    v206 = (char *)v137 + v204;
                    uint64_t v207 = sub_253B07160();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v207 - 8) + 24))(v205, v206, v207);
                    goto LABEL_57;
                  }
                  sub_2535BC188();
                }
                uint64_t v143 = sub_253462A5C(&qword_269CDF920);
                memcpy(v136, v137, *(void *)(*(void *)(v143 - 8) + 64));
                goto LABEL_57;
              }
              sub_2535BC188();
            }
            uint64_t v134 = sub_253462A5C(&qword_269CDCCC0);
            memcpy(v122, v123, *(void *)(*(void *)(v134 - 8) + 64));
            goto LABEL_51;
          }
          sub_2535BC188();
        }
        uint64_t v113 = sub_253462A5C(&qword_269CDCCC0);
        memcpy(v100, v101, *(void *)(*(void *)(v113 - 8) + 64));
        goto LABEL_45;
      }
      sub_2535BC188();
    }
    uint64_t v98 = sub_253462A5C(&qword_269CDF900);
    memcpy(v41, v42, *(void *)(*(void *)(v98 - 8) + 64));
    goto LABEL_39;
  }
  if (v30)
  {
LABEL_19:
    uint64_t v35 = sub_253462A5C(&qword_269CDF8F0);
    memcpy(v26, v27, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_58;
  }
  v440 = v4;
  v442 = v3;
  v435 = v5;
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  v26[2] = v27[2];
  v26[3] = v27[3];
  v26[4] = v27[4];
  uint64_t v31 = v28[7];
  uint64_t v32 = (char *)v26 + v31;
  uint64_t v33 = (char *)v27 + v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v33, 1, v17))
  {
    uint64_t v34 = sub_253462A5C(&qword_269CDF900);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
    v32[4] = v33[4];
    uint64_t v49 = *(int *)(v17 + 24);
    uint64_t v50 = &v32[v49];
    uint64_t v51 = &v33[v49];
    uint64_t v52 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v32, 0, 1, v17);
  }
  uint64_t v53 = v28[8];
  uint64_t v54 = (_DWORD *)((char *)v26 + v53);
  uint64_t v55 = (int *)((char *)v27 + v53);
  uint64_t v56 = type metadata accessor for ContextProtoBoundingBox(0);
  int v3 = v442;
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v55, 1, v56))
  {
    uint64_t v57 = sub_253462A5C(&qword_269CDCCC0);
    memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    int v58 = *v55;
    *((unsigned char *)v54 + 4) = *((unsigned char *)v55 + 4);
    *uint64_t v54 = v58;
    int v59 = v55[2];
    *((unsigned char *)v54 + 12) = *((unsigned char *)v55 + 12);
    v54[2] = v59;
    int v60 = v55[4];
    *((unsigned char *)v54 + 20) = *((unsigned char *)v55 + 20);
    v54[4] = v60;
    int v61 = v55[6];
    *((unsigned char *)v54 + 28) = *((unsigned char *)v55 + 28);
    v54[6] = v61;
    uint64_t v62 = *(int *)(v56 + 32);
    uint64_t v63 = (char *)v54 + v62;
    uint64_t v64 = (char *)v55 + v62;
    uint64_t v65 = sub_253B07160();
    uint64_t v66 = v64;
    int v3 = v442;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v66, v65);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v54, 0, 1, v56);
  }
  uint64_t v67 = v28[9];
  uint64_t v68 = (char *)v26 + v67;
  uint64_t v69 = (char *)v27 + v67;
  uint64_t v70 = *(void *)v69;
  v68[8] = v69[8];
  *(void *)uint64_t v68 = v70;
  uint64_t v71 = v28[10];
  uint64_t v72 = (void *)((char *)v26 + v71);
  uint64_t v73 = (void *)((char *)v27 + v71);
  void *v72 = *v73;
  v72[1] = v73[1];
  *((unsigned char *)v26 + v28[11]) = *((unsigned char *)v27 + v28[11]);
  *((unsigned char *)v26 + v28[12]) = *((unsigned char *)v27 + v28[12]);
  uint64_t v74 = v28[13];
  uint64_t v75 = (_DWORD *)((char *)v26 + v74);
  uint64_t v76 = (int *)((char *)v27 + v74);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v76, 1, v56))
  {
    uint64_t v77 = sub_253462A5C(&qword_269CDCCC0);
    memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
  }
  else
  {
    int v78 = *v76;
    *((unsigned char *)v75 + 4) = *((unsigned char *)v76 + 4);
    *uint64_t v75 = v78;
    int v79 = v76[2];
    *((unsigned char *)v75 + 12) = *((unsigned char *)v76 + 12);
    v75[2] = v79;
    int v80 = v76[4];
    *((unsigned char *)v75 + 20) = *((unsigned char *)v76 + 20);
    v75[4] = v80;
    int v81 = v76[6];
    *((unsigned char *)v75 + 28) = *((unsigned char *)v76 + 28);
    v75[6] = v81;
    uint64_t v82 = *(int *)(v56 + 32);
    uint64_t v83 = (char *)v75 + v82;
    uint64_t v84 = (char *)v76 + v82;
    uint64_t v85 = sub_253B07160();
    uint64_t v86 = v84;
    int v3 = v442;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16))(v83, v86, v85);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v75, 0, 1, v56);
  }
  *((unsigned char *)v26 + v28[14]) = *((unsigned char *)v27 + v28[14]);
  uint64_t v87 = v28[15];
  uint64_t v88 = (void *)((char *)v26 + v87);
  uint64_t v89 = (void *)((char *)v27 + v87);
  uint64_t v90 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v89, 1, v90))
  {
    uint64_t v91 = sub_253462A5C(&qword_269CDF920);
    memcpy(v88, v89, *(void *)(*(void *)(v91 - 8) + 64));
  }
  else
  {
    *uint64_t v88 = *v89;
    v88[1] = v89[1];
    v88[2] = v89[2];
    v88[3] = v89[3];
    uint64_t v92 = *(int *)(v90 + 24);
    v426 = (char *)v89 + v92;
    v432 = (char *)v88 + v92;
    uint64_t v93 = sub_253B07160();
    v414 = *(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16);
    swift_bridgeObjectRetain();
    int v3 = v442;
    swift_bridgeObjectRetain();
    v414(v432, v426, v93);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v88, 0, 1, v90);
  }
  uint64_t v94 = v28[16];
  uint64_t v95 = (char *)v26 + v94;
  uint64_t v96 = (char *)v27 + v94;
  uint64_t v97 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16))(v95, v96, v97);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, (uint64_t)v28);
  uint64_t v5 = v435;
  uint64_t v4 = v440;
LABEL_58:
  uint64_t v148 = v3[8];
  uint64_t v149 = &v5[v148];
  uint64_t v150 = &v4[v148];
  int v151 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)&v5[v148], 1, v9);
  int v152 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v150, 1, v9);
  if (v151)
  {
    if (!v152)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v149, v150, v9);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v149, 0, 1, v9);
      goto LABEL_64;
    }
    goto LABEL_63;
  }
  uint64_t v153 = *(void *)(v9 - 8);
  if (v152)
  {
    (*(void (**)(unsigned char *, uint64_t))(v153 + 8))(v149, v9);
LABEL_63:
    uint64_t v154 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v149, v150, *(void *)(*(void *)(v154 - 8) + 64));
    goto LABEL_64;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v153 + 24))(v149, v150, v9);
LABEL_64:
  uint64_t v155 = v3[9];
  uint64_t v156 = (uint64_t)&v5[v155];
  uint64_t v157 = (uint64_t)&v4[v155];
  uint64_t v158 = type metadata accessor for ContextProtoStructuredContext(0);
  int v159 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v156, 1, v158);
  int v160 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v157, 1, v158);
  if (!v159)
  {
    if (v160)
    {
      sub_2535BC188();
      goto LABEL_70;
    }
    uint64_t v164 = type metadata accessor for ContextProtoStructuredContextKind(0);
    int v165 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v156, 1, v164);
    int v166 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v157, 1, v164);
    v441 = v4;
    if (v165)
    {
      if (!v166)
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v434 = v164;
        if (EnumCaseMultiPayload == 2)
        {
          *(void *)uint64_t v156 = *(void *)v157;
          *(void *)(v156 + 8) = *(void *)(v157 + 8);
          *(void *)(v156 + 16) = *(void *)(v157 + 16);
          *(void *)(v156 + 24) = *(void *)(v157 + 24);
          *(void *)(v156 + 32) = *(void *)(v157 + 32);
          *(void *)(v156 + 40) = *(void *)(v157 + 40);
          uint64_t v212 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
          v406 = (void *)(v157 + v212);
          v420 = (void *)(v156 + v212);
          v213 = v5;
          uint64_t v214 = sub_253B07160();
          v215 = *(void (**)(void *, void *, uint64_t))(*(void *)(v214 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v216 = v214;
          uint64_t v5 = v213;
          uint64_t v164 = v434;
          v215(v420, v406, v216);
        }
        else
        {
          v437 = v5;
          if (EnumCaseMultiPayload == 1)
          {
            *(void *)uint64_t v156 = *(void *)v157;
            *(void *)(v156 + 8) = *(void *)(v157 + 8);
            *(unsigned char *)(v156 + 16) = *(unsigned char *)(v157 + 16);
            *(void *)(v156 + 24) = *(void *)(v157 + 24);
            *(void *)(v156 + 32) = *(void *)(v157 + 32);
            *(void *)(v156 + 40) = *(void *)(v157 + 40);
            *(void *)(v156 + 48) = *(void *)(v157 + 48);
            *(void *)(v156 + 56) = *(void *)(v157 + 56);
            *(void *)(v156 + 64) = *(void *)(v157 + 64);
            *(void *)(v156 + 72) = *(void *)(v157 + 72);
            uint64_t v168 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
            v402 = (void *)(v157 + v168);
            v415 = (void *)(v156 + v168);
            uint64_t v169 = sub_253B07160();
            __dsta = *(void (**)(void *, void *, uint64_t))(*(void *)(v169 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v170 = v169;
            uint64_t v5 = v437;
            __dsta(v415, v402, v170);
          }
          else
          {
            v445 = v3;
            *(void *)uint64_t v156 = *(void *)v157;
            *(void *)(v156 + 8) = *(void *)(v157 + 8);
            *(void *)(v156 + 16) = *(void *)(v157 + 16);
            *(void *)(v156 + 24) = *(void *)(v157 + 24);
            *(void *)(v156 + 32) = *(void *)(v157 + 32);
            *(void *)(v156 + 40) = *(void *)(v157 + 40);
            *(void *)(v156 + 48) = *(void *)(v157 + 48);
            *(void *)(v156 + 56) = *(void *)(v157 + 56);
            *(void *)(v156 + 64) = *(void *)(v157 + 64);
            *(void *)(v156 + 72) = *(void *)(v157 + 72);
            *(unsigned char *)(v156 + 80) = *(unsigned char *)(v157 + 80);
            *(unsigned char *)(v156 + 81) = *(unsigned char *)(v157 + 81);
            *(unsigned char *)(v156 + 82) = *(unsigned char *)(v157 + 82);
            *(unsigned char *)(v156 + 83) = *(unsigned char *)(v157 + 83);
            *(unsigned char *)(v156 + 84) = *(unsigned char *)(v157 + 84);
            uint64_t v217 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
            uint64_t v218 = *(int *)(v217 + 60);
            v407 = (void *)(v156 + v218);
            v421 = (int *)v217;
            v219 = (void *)(v157 + v218);
            uint64_t v220 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v219, 1, v220))
            {
              uint64_t v221 = sub_253462A5C(&qword_269CDF998);
              memcpy(v407, v219, *(void *)(*(void *)(v221 - 8) + 64));
            }
            else
            {
              void *v407 = *v219;
              v407[1] = v219[1];
              *((unsigned char *)v407 + 16) = *((unsigned char *)v219 + 16);
              *((unsigned char *)v407 + 17) = *((unsigned char *)v219 + 17);
              uint64_t v283 = *(int *)(v220 + 28);
              __dstd = (char *)v407 + v283;
              v284 = (char *)v219 + v283;
              uint64_t v285 = sub_253B07160();
              v286 = *(void (**)(char *, char *, uint64_t))(*(void *)(v285 - 8) + 16);
              swift_bridgeObjectRetain();
              v286(__dstd, v284, v285);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v407, 0, 1, v220);
            }
            v287 = v421;
            uint64_t v288 = v421[16];
            uint64_t v289 = v156 + v288;
            v290 = (uint64_t *)(v157 + v288);
            unint64_t v291 = v290[1];
            int v3 = v445;
            if (v291 >> 60 == 15)
            {
              *(_OWORD *)uint64_t v289 = *(_OWORD *)v290;
            }
            else
            {
              uint64_t v292 = *v290;
              sub_25348A9C8(*v290, v290[1]);
              *(void *)uint64_t v289 = v292;
              *(void *)(v289 + 8) = v291;
            }
            uint64_t v293 = v421[17];
            v294 = (void *)(v156 + v293);
            v295 = (void *)(v157 + v293);
            void *v294 = *v295;
            v294[1] = v295[1];
            uint64_t v296 = v421[18];
            v297 = (void *)(v156 + v296);
            v298 = (void *)(v157 + v296);
            void *v297 = *v298;
            v297[1] = v298[1];
            uint64_t v299 = v421[19];
            v300 = (_DWORD *)(v156 + v299);
            v301 = (int *)(v157 + v299);
            uint64_t v302 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v301, 1, v302))
            {
              uint64_t v303 = sub_253462A5C(&qword_269CDF988);
              memcpy(v300, v301, *(void *)(*(void *)(v303 - 8) + 64));
            }
            else
            {
              int v304 = *v301;
              *((unsigned char *)v300 + 4) = *((unsigned char *)v301 + 4);
              _DWORD *v300 = v304;
              *((void *)v300 + 1) = *((void *)v301 + 1);
              *((void *)v300 + 2) = *((void *)v301 + 2);
              int v305 = v301[6];
              *((unsigned char *)v300 + 28) = *((unsigned char *)v301 + 28);
              v300[6] = v305;
              int v306 = v301[8];
              *((unsigned char *)v300 + 36) = *((unsigned char *)v301 + 36);
              v300[8] = v306;
              uint64_t v307 = *(int *)(v302 + 32);
              v410 = (char *)v300 + v307;
              v308 = (char *)v301 + v307;
              uint64_t v309 = sub_253B07160();
              v310 = *(void (**)(char *, char *, uint64_t))(*(void *)(v309 - 8) + 16);
              swift_bridgeObjectRetain();
              v311 = v308;
              int v3 = v445;
              uint64_t v312 = v309;
              v287 = v421;
              v310(v410, v311, v312);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v300, 0, 1, v302);
            }
            uint64_t v313 = v287[20];
            uint64_t v314 = v156 + v313;
            v315 = (uint64_t *)(v157 + v313);
            uint64_t v316 = *v315;
            *(unsigned char *)(v314 + 8) = *((unsigned char *)v315 + 8);
            *(void *)uint64_t v314 = v316;
            uint64_t v317 = v287[21];
            v318 = (void *)(v156 + v317);
            v319 = (void *)(v157 + v317);
            void *v318 = *v319;
            v318[1] = v319[1];
            *(unsigned char *)(v156 + v287[22]) = *(unsigned char *)(v157 + v287[22]);
            *(unsigned char *)(v156 + v287[23]) = *(unsigned char *)(v157 + v287[23]);
            uint64_t v320 = v287[24];
            v321 = (void *)(v156 + v320);
            v322 = (void *)(v157 + v320);
            uint64_t v323 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v322, 1, v323))
            {
              uint64_t v324 = sub_253462A5C(&qword_269CDF978);
              memcpy(v321, v322, *(void *)(*(void *)(v324 - 8) + 64));
            }
            else
            {
              void *v321 = *v322;
              v321[1] = v322[1];
              v321[2] = v322[2];
              v321[3] = v322[3];
              v321[4] = v322[4];
              v321[5] = v322[5];
              v321[6] = v322[6];
              v321[7] = v322[7];
              v321[8] = v322[8];
              v321[9] = v322[9];
              v321[10] = v322[10];
              uint64_t v325 = *(int *)(v323 + 40);
              __dste = (char *)v322 + v325;
              v411 = (char *)v321 + v325;
              uint64_t v326 = sub_253B07160();
              v392 = *(void (**)(char *, char *, uint64_t))(*(void *)(v326 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              int v3 = v445;
              swift_bridgeObjectRetain();
              v287 = v421;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v392(v411, __dste, v326);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v321, 0, 1, v323);
            }
            uint64_t v164 = v434;
            *(unsigned char *)(v156 + v287[25]) = *(unsigned char *)(v157 + v287[25]);
            *(unsigned char *)(v156 + v287[26]) = *(unsigned char *)(v157 + v287[26]);
            uint64_t v327 = v287[27];
            uint64_t v328 = v156 + v327;
            uint64_t v329 = v157 + v327;
            uint64_t v330 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v330 - 8) + 16))(v328, v329, v330);
            uint64_t v5 = v437;
          }
        }
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v156, 0, 1, v164);
        goto LABEL_126;
      }
    }
    else
    {
      if (!v166)
      {
        if (v5 != v4)
        {
          sub_2535BC188();
          int v208 = swift_getEnumCaseMultiPayload();
          v439 = v5;
          if (v208 == 2)
          {
            *(void *)uint64_t v156 = *(void *)v157;
            *(void *)(v156 + 8) = *(void *)(v157 + 8);
            *(void *)(v156 + 16) = *(void *)(v157 + 16);
            *(void *)(v156 + 24) = *(void *)(v157 + 24);
            *(void *)(v156 + 32) = *(void *)(v157 + 32);
            *(void *)(v156 + 40) = *(void *)(v157 + 40);
            uint64_t v274 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
            v422 = (void *)(v157 + v274);
            uint64_t v430 = v156 + v274;
            uint64_t v275 = sub_253B07160();
            v276 = *(void (**)(uint64_t, void *, uint64_t))(*(void *)(v275 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v277 = v275;
            uint64_t v5 = v439;
            v276(v430, v422, v277);
          }
          else
          {
            if (v208 != 1)
            {
              v446 = v3;
              *(void *)uint64_t v156 = *(void *)v157;
              *(void *)(v156 + 8) = *(void *)(v157 + 8);
              *(void *)(v156 + 16) = *(void *)(v157 + 16);
              *(void *)(v156 + 24) = *(void *)(v157 + 24);
              *(void *)(v156 + 32) = *(void *)(v157 + 32);
              *(void *)(v156 + 40) = *(void *)(v157 + 40);
              *(void *)(v156 + 48) = *(void *)(v157 + 48);
              *(void *)(v156 + 56) = *(void *)(v157 + 56);
              *(void *)(v156 + 64) = *(void *)(v157 + 64);
              *(void *)(v156 + 72) = *(void *)(v157 + 72);
              *(unsigned char *)(v156 + 80) = *(unsigned char *)(v157 + 80);
              *(unsigned char *)(v156 + 81) = *(unsigned char *)(v157 + 81);
              *(unsigned char *)(v156 + 82) = *(unsigned char *)(v157 + 82);
              *(unsigned char *)(v156 + 83) = *(unsigned char *)(v157 + 83);
              *(unsigned char *)(v156 + 84) = *(unsigned char *)(v157 + 84);
              uint64_t v278 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
              uint64_t v279 = *(int *)(v278 + 60);
              v423 = (void *)(v156 + v279);
              v431 = (int *)v278;
              v280 = (void *)(v157 + v279);
              uint64_t v281 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v280, 1, v281))
              {
                uint64_t v282 = sub_253462A5C(&qword_269CDF998);
                memcpy(v423, v280, *(void *)(*(void *)(v282 - 8) + 64));
              }
              else
              {
                void *v423 = *v280;
                v423[1] = v280[1];
                *((unsigned char *)v423 + 16) = *((unsigned char *)v280 + 16);
                *((unsigned char *)v423 + 17) = *((unsigned char *)v280 + 17);
                uint64_t v343 = *(int *)(v281 + 28);
                v412 = (char *)v423 + v343;
                v344 = (char *)v280 + v343;
                uint64_t v345 = sub_253B07160();
                v346 = *(void (**)(char *, char *, uint64_t))(*(void *)(v345 - 8) + 16);
                swift_bridgeObjectRetain();
                v346(v412, v344, v345);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v423, 0, 1, v281);
              }
              v347 = v431;
              uint64_t v348 = v431[16];
              uint64_t v349 = v156 + v348;
              v350 = (uint64_t *)(v157 + v348);
              unint64_t v351 = v350[1];
              int v3 = v446;
              if (v351 >> 60 == 15)
              {
                *(_OWORD *)uint64_t v349 = *(_OWORD *)v350;
              }
              else
              {
                uint64_t v352 = *v350;
                sub_25348A9C8(*v350, v350[1]);
                *(void *)uint64_t v349 = v352;
                *(void *)(v349 + 8) = v351;
              }
              uint64_t v353 = v431[17];
              v354 = (void *)(v156 + v353);
              v355 = (void *)(v157 + v353);
              void *v354 = *v355;
              v354[1] = v355[1];
              uint64_t v356 = v431[18];
              v357 = (void *)(v156 + v356);
              v358 = (void *)(v157 + v356);
              void *v357 = *v358;
              v357[1] = v358[1];
              uint64_t v359 = v431[19];
              v360 = (_DWORD *)(v156 + v359);
              v361 = (int *)(v157 + v359);
              uint64_t v362 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v361, 1, v362))
              {
                uint64_t v363 = sub_253462A5C(&qword_269CDF988);
                memcpy(v360, v361, *(void *)(*(void *)(v363 - 8) + 64));
              }
              else
              {
                int v364 = *v361;
                *((unsigned char *)v360 + 4) = *((unsigned char *)v361 + 4);
                _DWORD *v360 = v364;
                *((void *)v360 + 1) = *((void *)v361 + 1);
                *((void *)v360 + 2) = *((void *)v361 + 2);
                int v365 = v361[6];
                *((unsigned char *)v360 + 28) = *((unsigned char *)v361 + 28);
                v360[6] = v365;
                int v366 = v361[8];
                *((unsigned char *)v360 + 36) = *((unsigned char *)v361 + 36);
                v360[8] = v366;
                uint64_t v367 = *(int *)(v362 + 32);
                v424 = (char *)v360 + v367;
                v368 = (char *)v361 + v367;
                uint64_t v369 = sub_253B07160();
                v370 = *(void (**)(char *, char *, uint64_t))(*(void *)(v369 - 8) + 16);
                swift_bridgeObjectRetain();
                v371 = v368;
                int v3 = v446;
                uint64_t v372 = v369;
                v347 = v431;
                v370(v424, v371, v372);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v360, 0, 1, v362);
              }
              uint64_t v373 = v347[20];
              uint64_t v374 = v156 + v373;
              v375 = (uint64_t *)(v157 + v373);
              uint64_t v376 = *v375;
              *(unsigned char *)(v374 + 8) = *((unsigned char *)v375 + 8);
              *(void *)uint64_t v374 = v376;
              uint64_t v377 = v347[21];
              v378 = (void *)(v156 + v377);
              v379 = (void *)(v157 + v377);
              void *v378 = *v379;
              v378[1] = v379[1];
              *(unsigned char *)(v156 + v347[22]) = *(unsigned char *)(v157 + v347[22]);
              *(unsigned char *)(v156 + v347[23]) = *(unsigned char *)(v157 + v347[23]);
              uint64_t v380 = v347[24];
              v381 = (void *)(v156 + v380);
              v382 = (void *)(v157 + v380);
              uint64_t v383 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
              swift_bridgeObjectRetain();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v382, 1, v383))
              {
                uint64_t v384 = sub_253462A5C(&qword_269CDF978);
                memcpy(v381, v382, *(void *)(*(void *)(v384 - 8) + 64));
              }
              else
              {
                void *v381 = *v382;
                v381[1] = v382[1];
                v381[2] = v382[2];
                v381[3] = v382[3];
                v381[4] = v382[4];
                v381[5] = v382[5];
                v381[6] = v382[6];
                v381[7] = v382[7];
                v381[8] = v382[8];
                v381[9] = v382[9];
                v381[10] = v382[10];
                uint64_t v385 = *(int *)(v383 + 40);
                v413 = (char *)v382 + v385;
                v425 = (char *)v381 + v385;
                uint64_t v386 = sub_253B07160();
                v393 = *(void (**)(char *, char *, uint64_t))(*(void *)(v386 - 8) + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                int v3 = v446;
                swift_bridgeObjectRetain();
                v347 = v431;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v393(v425, v413, v386);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v381, 0, 1, v383);
              }
              *(unsigned char *)(v156 + v347[25]) = *(unsigned char *)(v157 + v347[25]);
              *(unsigned char *)(v156 + v347[26]) = *(unsigned char *)(v157 + v347[26]);
              uint64_t v387 = v347[27];
              uint64_t v388 = v156 + v387;
              uint64_t v389 = v157 + v387;
              uint64_t v390 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v390 - 8) + 16))(v388, v389, v390);
              swift_storeEnumTagMultiPayload();
              uint64_t v5 = v439;
              goto LABEL_126;
            }
            *(void *)uint64_t v156 = *(void *)v157;
            *(void *)(v156 + 8) = *(void *)(v157 + 8);
            *(unsigned char *)(v156 + 16) = *(unsigned char *)(v157 + 16);
            *(void *)(v156 + 24) = *(void *)(v157 + 24);
            *(void *)(v156 + 32) = *(void *)(v157 + 32);
            *(void *)(v156 + 40) = *(void *)(v157 + 40);
            *(void *)(v156 + 48) = *(void *)(v157 + 48);
            *(void *)(v156 + 56) = *(void *)(v157 + 56);
            *(void *)(v156 + 64) = *(void *)(v157 + 64);
            *(void *)(v156 + 72) = *(void *)(v157 + 72);
            uint64_t v209 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
            v419 = (void *)(v157 + v209);
            uint64_t v429 = v156 + v209;
            uint64_t v210 = sub_253B07160();
            v405 = *(void (**)(uint64_t, void *, uint64_t))(*(void *)(v210 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v211 = v210;
            uint64_t v5 = v439;
            v405(v429, v419, v211);
          }
          swift_storeEnumTagMultiPayload();
        }
LABEL_126:
        uint64_t v331 = *(int *)(v158 + 20);
        uint64_t v332 = v156 + v331;
        uint64_t v333 = v157 + v331;
        uint64_t v334 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v334 - 8) + 24))(v332, v333, v334);
LABEL_127:
        uint64_t v4 = v441;
        goto LABEL_128;
      }
      sub_2535BC188();
    }
    uint64_t v175 = sub_253462A5C(&qword_269CDF958);
    memcpy((void *)v156, (const void *)v157, *(void *)(*(void *)(v175 - 8) + 64));
    goto LABEL_126;
  }
  if (!v160)
  {
    uint64_t v161 = type metadata accessor for ContextProtoStructuredContextKind(0);
    v441 = v4;
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v157, 1, v161))
    {
      uint64_t v162 = sub_253462A5C(&qword_269CDF958);
      memcpy((void *)v156, (const void *)v157, *(void *)(*(void *)(v162 - 8) + 64));
    }
    else
    {
      int v171 = swift_getEnumCaseMultiPayload();
      v444 = v3;
      uint64_t v428 = v161;
      if (v171 == 2)
      {
        *(void *)uint64_t v156 = *(void *)v157;
        *(void *)(v156 + 8) = *(void *)(v157 + 8);
        *(void *)(v156 + 16) = *(void *)(v157 + 16);
        *(void *)(v156 + 24) = *(void *)(v157 + 24);
        *(void *)(v156 + 32) = *(void *)(v157 + 32);
        *(void *)(v156 + 40) = *(void *)(v157 + 40);
        uint64_t v176 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
        v404 = (void *)(v157 + v176);
        v417 = (void *)(v156 + v176);
        uint64_t v177 = sub_253B07160();
        v178 = v5;
        v179 = *(void (**)(void *, void *, uint64_t))(*(void *)(v177 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v179(v417, v404, v177);
        uint64_t v5 = v178;
        uint64_t v174 = v428;
      }
      else
      {
        v438 = v5;
        if (v171 == 1)
        {
          *(void *)uint64_t v156 = *(void *)v157;
          *(void *)(v156 + 8) = *(void *)(v157 + 8);
          *(unsigned char *)(v156 + 16) = *(unsigned char *)(v157 + 16);
          *(void *)(v156 + 24) = *(void *)(v157 + 24);
          *(void *)(v156 + 32) = *(void *)(v157 + 32);
          *(void *)(v156 + 40) = *(void *)(v157 + 40);
          *(void *)(v156 + 48) = *(void *)(v157 + 48);
          *(void *)(v156 + 56) = *(void *)(v157 + 56);
          *(void *)(v156 + 64) = *(void *)(v157 + 64);
          *(void *)(v156 + 72) = *(void *)(v157 + 72);
          uint64_t v172 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
          v403 = (void *)(v157 + v172);
          v416 = (void *)(v156 + v172);
          uint64_t v173 = sub_253B07160();
          __dstb = *(void (**)(void *, void *, uint64_t))(*(void *)(v173 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v174 = v161;
          swift_bridgeObjectRetain();
          __dstb(v416, v403, v173);
        }
        else
        {
          *(void *)uint64_t v156 = *(void *)v157;
          *(void *)(v156 + 8) = *(void *)(v157 + 8);
          *(void *)(v156 + 16) = *(void *)(v157 + 16);
          *(void *)(v156 + 24) = *(void *)(v157 + 24);
          *(void *)(v156 + 32) = *(void *)(v157 + 32);
          *(void *)(v156 + 40) = *(void *)(v157 + 40);
          *(void *)(v156 + 48) = *(void *)(v157 + 48);
          *(void *)(v156 + 56) = *(void *)(v157 + 56);
          *(void *)(v156 + 64) = *(void *)(v157 + 64);
          *(void *)(v156 + 72) = *(void *)(v157 + 72);
          *(unsigned char *)(v156 + 80) = *(unsigned char *)(v157 + 80);
          *(unsigned char *)(v156 + 81) = *(unsigned char *)(v157 + 81);
          *(unsigned char *)(v156 + 82) = *(unsigned char *)(v157 + 82);
          *(unsigned char *)(v156 + 83) = *(unsigned char *)(v157 + 83);
          *(unsigned char *)(v156 + 84) = *(unsigned char *)(v157 + 84);
          v418 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
          uint64_t v180 = v418[15];
          __dst = (void *)(v156 + v180);
          v181 = (void *)(v157 + v180);
          uint64_t v182 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v181, 1, v182))
          {
            uint64_t v183 = sub_253462A5C(&qword_269CDF998);
            memcpy(__dst, v181, *(void *)(*(void *)(v183 - 8) + 64));
          }
          else
          {
            void *__dst = *v181;
            __dst[1] = v181[1];
            *((unsigned char *)__dst + 16) = *((unsigned char *)v181 + 16);
            *((unsigned char *)__dst + 17) = *((unsigned char *)v181 + 17);
            uint64_t v222 = *(int *)(v182 + 28);
            v408 = (char *)__dst + v222;
            v223 = (char *)v181 + v222;
            uint64_t v224 = sub_253B07160();
            v225 = *(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 16);
            swift_bridgeObjectRetain();
            v225(v408, v223, v224);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v182);
          }
          int v3 = v444;
          v226 = v418;
          uint64_t v227 = v418[16];
          uint64_t v228 = v156 + v227;
          v229 = (uint64_t *)(v157 + v227);
          unint64_t v230 = v229[1];
          if (v230 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v228 = *(_OWORD *)v229;
          }
          else
          {
            uint64_t v231 = *v229;
            sub_25348A9C8(*v229, v229[1]);
            *(void *)uint64_t v228 = v231;
            *(void *)(v228 + 8) = v230;
          }
          uint64_t v232 = v418[17];
          v233 = (void *)(v156 + v232);
          v234 = (void *)(v157 + v232);
          void *v233 = *v234;
          v233[1] = v234[1];
          uint64_t v235 = v418[18];
          v236 = (void *)(v156 + v235);
          v237 = (void *)(v157 + v235);
          void *v236 = *v237;
          v236[1] = v237[1];
          uint64_t v238 = v418[19];
          v239 = (_DWORD *)(v156 + v238);
          v240 = (int *)(v157 + v238);
          uint64_t v241 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v240, 1, v241))
          {
            uint64_t v242 = sub_253462A5C(&qword_269CDF988);
            memcpy(v239, v240, *(void *)(*(void *)(v242 - 8) + 64));
          }
          else
          {
            int v243 = *v240;
            *((unsigned char *)v239 + 4) = *((unsigned char *)v240 + 4);
            _DWORD *v239 = v243;
            *((void *)v239 + 1) = *((void *)v240 + 1);
            *((void *)v239 + 2) = *((void *)v240 + 2);
            int v244 = v240[6];
            *((unsigned char *)v239 + 28) = *((unsigned char *)v240 + 28);
            v239[6] = v244;
            int v245 = v240[8];
            *((unsigned char *)v239 + 36) = *((unsigned char *)v240 + 36);
            v239[8] = v245;
            uint64_t v246 = *(int *)(v241 + 32);
            v247 = (char *)v239 + v246;
            v248 = (char *)v240 + v246;
            v409 = (void *)v241;
            uint64_t v249 = sub_253B07160();
            v250 = *(void (**)(char *, char *, uint64_t))(*(void *)(v249 - 8) + 16);
            swift_bridgeObjectRetain();
            v251 = v248;
            int v3 = v444;
            v250(v247, v251, v249);
            v226 = v418;
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v239, 0, 1, (uint64_t)v409);
          }
          uint64_t v252 = v226[20];
          uint64_t v253 = v156 + v252;
          v254 = (uint64_t *)(v157 + v252);
          uint64_t v255 = *v254;
          *(unsigned char *)(v253 + 8) = *((unsigned char *)v254 + 8);
          *(void *)uint64_t v253 = v255;
          uint64_t v256 = v226[21];
          v257 = (void *)(v156 + v256);
          v258 = (void *)(v157 + v256);
          void *v257 = *v258;
          v257[1] = v258[1];
          *(unsigned char *)(v156 + v226[22]) = *(unsigned char *)(v157 + v226[22]);
          *(unsigned char *)(v156 + v226[23]) = *(unsigned char *)(v157 + v226[23]);
          uint64_t v259 = v226[24];
          v260 = (void *)(v156 + v259);
          v261 = (void *)(v157 + v259);
          uint64_t v262 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v261, 1, v262))
          {
            uint64_t v263 = sub_253462A5C(&qword_269CDF978);
            memcpy(v260, v261, *(void *)(*(void *)(v263 - 8) + 64));
          }
          else
          {
            void *v260 = *v261;
            v260[1] = v261[1];
            v260[2] = v261[2];
            v260[3] = v261[3];
            v260[4] = v261[4];
            v260[5] = v261[5];
            v260[6] = v261[6];
            v260[7] = v261[7];
            v260[8] = v261[8];
            v260[9] = v261[9];
            v260[10] = v261[10];
            uint64_t v264 = *(int *)(v262 + 40);
            v394 = (char *)v261 + v264;
            __dstc = (char *)v260 + v264;
            uint64_t v265 = sub_253B07160();
            v391 = *(void (**)(char *, char *, uint64_t))(*(void *)(v265 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            int v3 = v444;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v226 = v418;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v391(__dstc, v394, v265);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v260, 0, 1, v262);
          }
          uint64_t v5 = v438;
          uint64_t v174 = v428;
          *(unsigned char *)(v156 + v226[25]) = *(unsigned char *)(v157 + v226[25]);
          *(unsigned char *)(v156 + v226[26]) = *(unsigned char *)(v157 + v226[26]);
          uint64_t v266 = v226[27];
          uint64_t v267 = v156 + v266;
          uint64_t v268 = v157 + v266;
          uint64_t v269 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v269 - 8) + 16))(v267, v268, v269);
        }
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v156, 0, 1, v174);
    }
    uint64_t v270 = *(int *)(v158 + 20);
    uint64_t v271 = v156 + v270;
    uint64_t v272 = v157 + v270;
    uint64_t v273 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v273 - 8) + 16))(v271, v272, v273);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v156, 0, 1, v158);
    goto LABEL_127;
  }
LABEL_70:
  uint64_t v163 = sub_253462A5C(&qword_269CDF8E0);
  memcpy((void *)v156, (const void *)v157, *(void *)(*(void *)(v163 - 8) + 64));
LABEL_128:
  uint64_t v335 = v3[10];
  v336 = &v5[v335];
  v337 = &v4[v335];
  void *v336 = *v337;
  v336[1] = v337[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v338 = v3[11];
  v339 = &v5[v338];
  v340 = &v4[v338];
  uint64_t v341 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v341 - 8) + 24))(v339, v340, v341);
  return v5;
}

unsigned char *initializeWithTake for ContextProtoRetrievedContext(unsigned char *a1, unsigned char *a2, int *a3)
{
  int v3 = a3;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_253B08E50();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = v3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for ContextProtoConfidence(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_253462A5C(&qword_269CDF900);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    uint64_t v16 = *(int *)(v14 + 24);
    uint64_t v17 = &v12[v16];
    int v18 = &v13[v16];
    uint64_t v19 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v20 = v3[7];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, (uint64_t)v23))
  {
    uint64_t v24 = sub_253462A5C(&qword_269CDF8F0);
    memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    uint64_t v133 = v3;
    *uint64_t v21 = *v22;
    *(_OWORD *)(v21 + 1) = *(_OWORD *)(v22 + 1);
    *(_OWORD *)(v21 + 3) = *(_OWORD *)(v22 + 3);
    uint64_t v25 = v23[7];
    uint64_t v26 = (char *)v21 + v25;
    uint64_t v27 = (char *)v22 + v25;
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22 + v25, 1, v14))
    {
      uint64_t v28 = sub_253462A5C(&qword_269CDF900);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
      v26[4] = v27[4];
      uint64_t v29 = *(int *)(v14 + 24);
      int v30 = &v26[v29];
      uint64_t v31 = &v27[v29];
      uint64_t v32 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v14);
    }
    uint64_t v33 = v23[8];
    uint64_t v34 = (_DWORD *)((char *)v21 + v33);
    uint64_t v35 = (_DWORD *)((char *)v22 + v33);
    uint64_t v36 = type metadata accessor for ContextProtoBoundingBox(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v35, 1, v36))
    {
      uint64_t v37 = sub_253462A5C(&qword_269CDCCC0);
      memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      *uint64_t v34 = *v35;
      *((unsigned char *)v34 + 4) = *((unsigned char *)v35 + 4);
      v34[2] = v35[2];
      *((unsigned char *)v34 + 12) = *((unsigned char *)v35 + 12);
      v34[4] = v35[4];
      *((unsigned char *)v34 + 20) = *((unsigned char *)v35 + 20);
      *((unsigned char *)v34 + 28) = *((unsigned char *)v35 + 28);
      v34[6] = v35[6];
      uint64_t v38 = *(int *)(v36 + 32);
      uint64_t v39 = (char *)v34 + v38;
      uint64_t v40 = (char *)v35 + v38;
      uint64_t v41 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v34, 0, 1, v36);
    }
    uint64_t v42 = v23[9];
    int v43 = (char *)v21 + v42;
    int v44 = (char *)v22 + v42;
    *(void *)int v43 = *(void *)v44;
    v43[8] = v44[8];
    *(_OWORD *)((char *)v21 + v23[10]) = *(_OWORD *)((char *)v22 + v23[10]);
    *((unsigned char *)v21 + v23[11]) = *((unsigned char *)v22 + v23[11]);
    *((unsigned char *)v21 + v23[12]) = *((unsigned char *)v22 + v23[12]);
    uint64_t v45 = v23[13];
    uint64_t v46 = (_DWORD *)((char *)v21 + v45);
    uint64_t v47 = (_DWORD *)((char *)v22 + v45);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22 + v45, 1, v36))
    {
      uint64_t v48 = sub_253462A5C(&qword_269CDCCC0);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      *uint64_t v46 = *v47;
      *((unsigned char *)v46 + 4) = *((unsigned char *)v47 + 4);
      v46[2] = v47[2];
      *((unsigned char *)v46 + 12) = *((unsigned char *)v47 + 12);
      v46[4] = v47[4];
      *((unsigned char *)v46 + 20) = *((unsigned char *)v47 + 20);
      *((unsigned char *)v46 + 28) = *((unsigned char *)v47 + 28);
      v46[6] = v47[6];
      uint64_t v49 = *(int *)(v36 + 32);
      uint64_t v50 = (char *)v46 + v49;
      uint64_t v51 = (char *)v47 + v49;
      uint64_t v52 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v46, 0, 1, v36);
    }
    *((unsigned char *)v21 + v23[14]) = *((unsigned char *)v22 + v23[14]);
    uint64_t v53 = v23[15];
    uint64_t v54 = (_OWORD *)((char *)v21 + v53);
    uint64_t v55 = (_OWORD *)((char *)v22 + v53);
    uint64_t v56 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v55, 1, v56))
    {
      uint64_t v57 = sub_253462A5C(&qword_269CDF920);
      memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      long long v58 = v55[1];
      *uint64_t v54 = *v55;
      v54[1] = v58;
      uint64_t v59 = *(int *)(v56 + 24);
      int v60 = (char *)v54 + v59;
      int v61 = (char *)v55 + v59;
      uint64_t v62 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v54, 0, 1, v56);
    }
    int v3 = v133;
    uint64_t v63 = v23[16];
    uint64_t v64 = (char *)v21 + v63;
    uint64_t v65 = (char *)v22 + v63;
    uint64_t v66 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v21, 0, 1, (uint64_t)v23);
  }
  uint64_t v67 = v3[8];
  uint64_t v68 = &a1[v67];
  uint64_t v69 = &a2[v67];
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)&a2[v67], 1, v9))
  {
    uint64_t v70 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v68, v69, v9);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v68, 0, 1, v9);
  }
  uint64_t v71 = v3[9];
  uint64_t v72 = &a1[v71];
  uint64_t v73 = &a2[v71];
  uint64_t v74 = type metadata accessor for ContextProtoStructuredContext(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v73, 1, v74))
  {
    uint64_t v76 = type metadata accessor for ContextProtoStructuredContextKind(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v73, 1, v76))
    {
      uint64_t v77 = sub_253462A5C(&qword_269CDF958);
      memcpy(v72, v73, *(void *)(*(void *)(v77 - 8) + 64));
LABEL_45:
      uint64_t v121 = *(int *)(v74 + 20);
      char v122 = (char *)v72 + v121;
      uint64_t v123 = (char *)v73 + v121;
      uint64_t v124 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 32))(v122, v123, v124);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v72, 0, 1, v74);
      goto LABEL_46;
    }
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      long long v81 = v73[1];
      _OWORD *v72 = *v73;
      v72[1] = v81;
      v72[2] = v73[2];
      uint64_t v80 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v134 = v3;
        long long v85 = v73[1];
        _OWORD *v72 = *v73;
        v72[1] = v85;
        long long v86 = v73[3];
        v72[2] = v73[2];
        v72[3] = v86;
        v72[4] = v73[4];
        *((_DWORD *)v72 + 20) = *((_DWORD *)v73 + 20);
        *((unsigned char *)v72 + 84) = *((unsigned char *)v73 + 84);
        uint64_t v87 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
        uint64_t v88 = v87[15];
        uint64_t v89 = (_WORD *)((char *)v72 + v88);
        uint64_t v90 = (_WORD *)((char *)v73 + v88);
        uint64_t v91 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v90, 1, v91))
        {
          uint64_t v92 = sub_253462A5C(&qword_269CDF998);
          memcpy(v89, v90, *(void *)(*(void *)(v92 - 8) + 64));
        }
        else
        {
          *(_OWORD *)uint64_t v89 = *(_OWORD *)v90;
          v89[8] = v90[8];
          uint64_t v93 = *(int *)(v91 + 28);
          uint64_t v130 = (char *)v89 + v93;
          uint64_t v94 = (char *)v90 + v93;
          uint64_t v95 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 32))(v130, v94, v95);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v89, 0, 1, v91);
        }
        *(_OWORD *)((char *)v72 + v87[16]) = *(_OWORD *)((char *)v73 + v87[16]);
        *(_OWORD *)((char *)v72 + v87[17]) = *(_OWORD *)((char *)v73 + v87[17]);
        *(_OWORD *)((char *)v72 + v87[18]) = *(_OWORD *)((char *)v73 + v87[18]);
        uint64_t v96 = v87[19];
        uint64_t v97 = (_DWORD *)((char *)v72 + v96);
        uint64_t v98 = (_DWORD *)((char *)v73 + v96);
        uint64_t v99 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v98, 1, v99))
        {
          uint64_t v100 = sub_253462A5C(&qword_269CDF988);
          memcpy(v97, v98, *(void *)(*(void *)(v100 - 8) + 64));
        }
        else
        {
          *uint64_t v97 = *v98;
          *((unsigned char *)v97 + 4) = *((unsigned char *)v98 + 4);
          *(_OWORD *)(v97 + 2) = *(_OWORD *)(v98 + 2);
          v97[6] = v98[6];
          *((unsigned char *)v97 + 28) = *((unsigned char *)v98 + 28);
          v97[8] = v98[8];
          *((unsigned char *)v97 + 36) = *((unsigned char *)v98 + 36);
          uint64_t v101 = *(int *)(v99 + 32);
          uint64_t v131 = v99;
          uint64_t v102 = (char *)v97 + v101;
          int v103 = (char *)v98 + v101;
          uint64_t v104 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 32))(v102, v103, v104);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v97, 0, 1, v131);
        }
        uint64_t v105 = v87[20];
        int v106 = (char *)v72 + v105;
        int v107 = (char *)v73 + v105;
        *(void *)int v106 = *(void *)v107;
        v106[8] = v107[8];
        *(_OWORD *)((char *)v72 + v87[21]) = *(_OWORD *)((char *)v73 + v87[21]);
        *((unsigned char *)v72 + v87[22]) = *((unsigned char *)v73 + v87[22]);
        *((unsigned char *)v72 + v87[23]) = *((unsigned char *)v73 + v87[23]);
        uint64_t v108 = v87[24];
        uint64_t v109 = (void *)((char *)v72 + v108);
        uint64_t v110 = (void *)((char *)v73 + v108);
        uint64_t v111 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v110, 1, v111))
        {
          uint64_t v112 = sub_253462A5C(&qword_269CDF978);
          memcpy(v109, v110, *(void *)(*(void *)(v112 - 8) + 64));
        }
        else
        {
          *uint64_t v109 = *v110;
          *(_OWORD *)(v109 + 1) = *(_OWORD *)(v110 + 1);
          *(_OWORD *)(v109 + 3) = *(_OWORD *)(v110 + 3);
          *(_OWORD *)(v109 + 5) = *(_OWORD *)(v110 + 5);
          *(_OWORD *)(v109 + 7) = *(_OWORD *)(v110 + 7);
          *(_OWORD *)(v109 + 9) = *(_OWORD *)(v110 + 9);
          uint64_t v113 = *(int *)(v111 + 40);
          uint64_t v132 = v111;
          uint64_t v114 = (char *)v109 + v113;
          uint64_t v115 = (char *)v110 + v113;
          uint64_t v116 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 32))(v114, v115, v116);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v109, 0, 1, v132);
        }
        *((unsigned char *)v72 + v87[25]) = *((unsigned char *)v73 + v87[25]);
        *((unsigned char *)v72 + v87[26]) = *((unsigned char *)v73 + v87[26]);
        uint64_t v117 = v87[27];
        uint64_t v118 = (char *)v72 + v117;
        uint64_t v119 = (char *)v73 + v117;
        uint64_t v120 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 32))(v118, v119, v120);
        int v3 = v134;
        goto LABEL_44;
      }
      _OWORD *v72 = *v73;
      *((unsigned char *)v72 + 16) = *((unsigned char *)v73 + 16);
      *((void *)v72 + 3) = *((void *)v73 + 3);
      long long v79 = v73[3];
      v72[2] = v73[2];
      v72[3] = v79;
      v72[4] = v73[4];
      uint64_t v80 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
    }
    uint64_t v82 = (char *)v72 + v80;
    uint64_t v83 = (char *)v73 + v80;
    uint64_t v84 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v82, v83, v84);
LABEL_44:
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v72, 0, 1, v76);
    goto LABEL_45;
  }
  uint64_t v75 = sub_253462A5C(&qword_269CDF8E0);
  memcpy(v72, v73, *(void *)(*(void *)(v75 - 8) + 64));
LABEL_46:
  uint64_t v125 = v3[11];
  *(_OWORD *)&a1[v3[10]] = *(_OWORD *)&a2[v3[10]];
  int v126 = &a1[v125];
  int v127 = &a2[v125];
  uint64_t v128 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v128 - 8) + 32))(v126, v127, v128);
  return a1;
}

unsigned char *assignWithTake for ContextProtoRetrievedContext(unsigned char *a1, unsigned char *a2, int *a3)
{
  int v3 = a3;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_253B08E50();
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = v3[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = type metadata accessor for ContextProtoConfidence(0);
  int v18 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v17);
  int v19 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v17);
  if (v18)
  {
    if (!v19)
    {
      *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
      v15[4] = v16[4];
      uint64_t v20 = *(int *)(v17 + 24);
      uint64_t v21 = &v15[v20];
      uint64_t v22 = &v16[v20];
      uint64_t v23 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    sub_2535BC188();
LABEL_12:
    uint64_t v24 = sub_253462A5C(&qword_269CDF900);
    memcpy(v15, v16, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  v15[4] = v16[4];
  uint64_t v36 = *(int *)(v17 + 24);
  uint64_t v37 = &v15[v36];
  uint64_t v38 = &v16[v36];
  uint64_t v39 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v39 - 8) + 40))(v37, v38, v39);
LABEL_13:
  uint64_t v25 = v3[7];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
  int v29 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v26, 1, (uint64_t)v28);
  int v30 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, (uint64_t)v28);
  if (!v29)
  {
    if (v30)
    {
      sub_2535BC188();
      goto LABEL_19;
    }
    uint64_t v334 = v3;
    *uint64_t v26 = *v27;
    swift_bridgeObjectRelease();
    uint64_t v40 = v27[2];
    v26[1] = v27[1];
    v26[2] = v40;
    swift_bridgeObjectRelease();
    uint64_t v41 = v27[4];
    v26[3] = v27[3];
    v26[4] = v41;
    swift_bridgeObjectRelease();
    uint64_t v42 = v28[7];
    int v43 = (char *)v26 + v42;
    int v44 = (char *)v27 + v42;
    int v45 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v26 + v42, 1, v17);
    int v46 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v44, 1, v17);
    if (v45)
    {
      if (!v46)
      {
        *(_DWORD *)int v43 = *(_DWORD *)v44;
        v43[4] = v44[4];
        uint64_t v47 = *(int *)(v17 + 24);
        uint64_t v48 = &v43[v47];
        uint64_t v49 = &v44[v47];
        uint64_t v50 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v43, 0, 1, v17);
        goto LABEL_39;
      }
    }
    else
    {
      if (!v46)
      {
        *(_DWORD *)int v43 = *(_DWORD *)v44;
        v43[4] = v44[4];
        uint64_t v173 = *(int *)(v17 + 24);
        uint64_t v174 = &v43[v173];
        uint64_t v175 = &v44[v173];
        uint64_t v176 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 40))(v174, v175, v176);
LABEL_39:
        uint64_t v90 = v28[8];
        uint64_t v91 = (char *)v26 + v90;
        uint64_t v92 = (char *)v27 + v90;
        uint64_t v93 = type metadata accessor for ContextProtoBoundingBox(0);
        int v94 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v91, 1, v93);
        int v95 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v92, 1, v93);
        if (v94)
        {
          if (!v95)
          {
            *(_DWORD *)uint64_t v91 = *(_DWORD *)v92;
            v91[4] = v92[4];
            *((_DWORD *)v91 + 2) = *((_DWORD *)v92 + 2);
            v91[12] = v92[12];
            *((_DWORD *)v91 + 4) = *((_DWORD *)v92 + 4);
            v91[20] = v92[20];
            v91[28] = v92[28];
            *((_DWORD *)v91 + 6) = *((_DWORD *)v92 + 6);
            uint64_t v96 = *(int *)(v93 + 32);
            uint64_t v97 = &v91[v96];
            uint64_t v98 = &v92[v96];
            uint64_t v99 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(v97, v98, v99);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v91, 0, 1, v93);
            goto LABEL_45;
          }
        }
        else
        {
          if (!v95)
          {
            *(_DWORD *)uint64_t v91 = *(_DWORD *)v92;
            v91[4] = v92[4];
            *((_DWORD *)v91 + 2) = *((_DWORD *)v92 + 2);
            v91[12] = v92[12];
            *((_DWORD *)v91 + 4) = *((_DWORD *)v92 + 4);
            v91[20] = v92[20];
            v91[28] = v92[28];
            *((_DWORD *)v91 + 6) = *((_DWORD *)v92 + 6);
            uint64_t v177 = *(int *)(v93 + 32);
            v178 = &v91[v177];
            v179 = &v92[v177];
            uint64_t v180 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 40))(v178, v179, v180);
LABEL_45:
            uint64_t v101 = v28[9];
            uint64_t v102 = (char *)v26 + v101;
            int v103 = (char *)v27 + v101;
            *(void *)uint64_t v102 = *(void *)v103;
            v102[8] = v103[8];
            uint64_t v104 = v28[10];
            uint64_t v105 = (void *)((char *)v26 + v104);
            int v106 = (void *)((char *)v27 + v104);
            uint64_t v108 = *v106;
            uint64_t v107 = v106[1];
            *uint64_t v105 = v108;
            v105[1] = v107;
            swift_bridgeObjectRelease();
            *((unsigned char *)v26 + v28[11]) = *((unsigned char *)v27 + v28[11]);
            *((unsigned char *)v26 + v28[12]) = *((unsigned char *)v27 + v28[12]);
            uint64_t v109 = v28[13];
            uint64_t v110 = (char *)v26 + v109;
            uint64_t v111 = (char *)v27 + v109;
            int v112 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v26 + v109, 1, v93);
            int v113 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v111, 1, v93);
            if (v112)
            {
              if (!v113)
              {
                *(_DWORD *)uint64_t v110 = *(_DWORD *)v111;
                v110[4] = v111[4];
                *((_DWORD *)v110 + 2) = *((_DWORD *)v111 + 2);
                v110[12] = v111[12];
                *((_DWORD *)v110 + 4) = *((_DWORD *)v111 + 4);
                v110[20] = v111[20];
                v110[28] = v111[28];
                *((_DWORD *)v110 + 6) = *((_DWORD *)v111 + 6);
                uint64_t v114 = *(int *)(v93 + 32);
                uint64_t v115 = &v110[v114];
                uint64_t v116 = &v111[v114];
                uint64_t v117 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 32))(v115, v116, v117);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v110, 0, 1, v93);
                goto LABEL_51;
              }
            }
            else
            {
              if (!v113)
              {
                *(_DWORD *)uint64_t v110 = *(_DWORD *)v111;
                v110[4] = v111[4];
                *((_DWORD *)v110 + 2) = *((_DWORD *)v111 + 2);
                v110[12] = v111[12];
                *((_DWORD *)v110 + 4) = *((_DWORD *)v111 + 4);
                v110[20] = v111[20];
                v110[28] = v111[28];
                *((_DWORD *)v110 + 6) = *((_DWORD *)v111 + 6);
                uint64_t v181 = *(int *)(v93 + 32);
                uint64_t v182 = &v110[v181];
                uint64_t v183 = &v111[v181];
                uint64_t v184 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 40))(v182, v183, v184);
LABEL_51:
                *((unsigned char *)v26 + v28[14]) = *((unsigned char *)v27 + v28[14]);
                uint64_t v119 = v28[15];
                uint64_t v120 = (char *)v26 + v119;
                uint64_t v121 = (char *)v27 + v119;
                uint64_t v122 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
                int v123 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v120, 1, v122);
                int v124 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v121, 1, v122);
                if (v123)
                {
                  if (!v124)
                  {
                    long long v125 = *((_OWORD *)v121 + 1);
                    *(_OWORD *)uint64_t v120 = *(_OWORD *)v121;
                    *((_OWORD *)v120 + 1) = v125;
                    uint64_t v126 = *(int *)(v122 + 24);
                    int v127 = &v120[v126];
                    uint64_t v128 = &v121[v126];
                    uint64_t v129 = sub_253B07160();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 32))(v127, v128, v129);
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v120, 0, 1, v122);
LABEL_57:
                    int v3 = v334;
                    uint64_t v131 = v28[16];
                    uint64_t v132 = (char *)v26 + v131;
                    uint64_t v133 = (char *)v27 + v131;
                    uint64_t v134 = sub_253B07160();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 40))(v132, v133, v134);
                    goto LABEL_58;
                  }
                }
                else
                {
                  if (!v124)
                  {
                    uint64_t v185 = *((void *)v121 + 1);
                    *(void *)uint64_t v120 = *(void *)v121;
                    *((void *)v120 + 1) = v185;
                    swift_bridgeObjectRelease();
                    uint64_t v186 = *((void *)v121 + 3);
                    *((void *)v120 + 2) = *((void *)v121 + 2);
                    *((void *)v120 + 3) = v186;
                    swift_bridgeObjectRelease();
                    uint64_t v187 = *(int *)(v122 + 24);
                    int v188 = &v120[v187];
                    int v189 = &v121[v187];
                    uint64_t v190 = sub_253B07160();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v190 - 8) + 40))(v188, v189, v190);
                    goto LABEL_57;
                  }
                  sub_2535BC188();
                }
                uint64_t v130 = sub_253462A5C(&qword_269CDF920);
                memcpy(v120, v121, *(void *)(*(void *)(v130 - 8) + 64));
                goto LABEL_57;
              }
              sub_2535BC188();
            }
            uint64_t v118 = sub_253462A5C(&qword_269CDCCC0);
            memcpy(v110, v111, *(void *)(*(void *)(v118 - 8) + 64));
            goto LABEL_51;
          }
          sub_2535BC188();
        }
        uint64_t v100 = sub_253462A5C(&qword_269CDCCC0);
        memcpy(v91, v92, *(void *)(*(void *)(v100 - 8) + 64));
        goto LABEL_45;
      }
      sub_2535BC188();
    }
    uint64_t v89 = sub_253462A5C(&qword_269CDF900);
    memcpy(v43, v44, *(void *)(*(void *)(v89 - 8) + 64));
    goto LABEL_39;
  }
  if (v30)
  {
LABEL_19:
    uint64_t v35 = sub_253462A5C(&qword_269CDF8F0);
    memcpy(v26, v27, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_58;
  }
  uint64_t v333 = v3;
  *uint64_t v26 = *v27;
  *(_OWORD *)(v26 + 1) = *(_OWORD *)(v27 + 1);
  *(_OWORD *)(v26 + 3) = *(_OWORD *)(v27 + 3);
  uint64_t v31 = v28[7];
  uint64_t v32 = (char *)v26 + v31;
  uint64_t v33 = (char *)v27 + v31;
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27 + v31, 1, v17))
  {
    uint64_t v34 = sub_253462A5C(&qword_269CDF900);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
    v32[4] = v33[4];
    uint64_t v51 = *(int *)(v17 + 24);
    uint64_t v52 = &v32[v51];
    uint64_t v53 = &v33[v51];
    uint64_t v54 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v32, 0, 1, v17);
  }
  uint64_t v55 = v28[8];
  uint64_t v56 = (_DWORD *)((char *)v26 + v55);
  uint64_t v57 = (_DWORD *)((char *)v27 + v55);
  uint64_t v58 = type metadata accessor for ContextProtoBoundingBox(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v57, 1, v58))
  {
    uint64_t v59 = sub_253462A5C(&qword_269CDCCC0);
    memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    *uint64_t v56 = *v57;
    *((unsigned char *)v56 + 4) = *((unsigned char *)v57 + 4);
    v56[2] = v57[2];
    *((unsigned char *)v56 + 12) = *((unsigned char *)v57 + 12);
    v56[4] = v57[4];
    *((unsigned char *)v56 + 20) = *((unsigned char *)v57 + 20);
    *((unsigned char *)v56 + 28) = *((unsigned char *)v57 + 28);
    v56[6] = v57[6];
    uint64_t v60 = *(int *)(v58 + 32);
    int v61 = (char *)v56 + v60;
    uint64_t v62 = (char *)v57 + v60;
    uint64_t v63 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v56, 0, 1, v58);
  }
  uint64_t v64 = v28[9];
  uint64_t v65 = (char *)v26 + v64;
  uint64_t v66 = (char *)v27 + v64;
  *(void *)uint64_t v65 = *(void *)v66;
  v65[8] = v66[8];
  *(_OWORD *)((char *)v26 + v28[10]) = *(_OWORD *)((char *)v27 + v28[10]);
  *((unsigned char *)v26 + v28[11]) = *((unsigned char *)v27 + v28[11]);
  *((unsigned char *)v26 + v28[12]) = *((unsigned char *)v27 + v28[12]);
  uint64_t v67 = v28[13];
  uint64_t v68 = (_DWORD *)((char *)v26 + v67);
  uint64_t v69 = (_DWORD *)((char *)v27 + v67);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27 + v67, 1, v58))
  {
    uint64_t v70 = sub_253462A5C(&qword_269CDCCC0);
    memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
  }
  else
  {
    *uint64_t v68 = *v69;
    *((unsigned char *)v68 + 4) = *((unsigned char *)v69 + 4);
    v68[2] = v69[2];
    *((unsigned char *)v68 + 12) = *((unsigned char *)v69 + 12);
    v68[4] = v69[4];
    *((unsigned char *)v68 + 20) = *((unsigned char *)v69 + 20);
    *((unsigned char *)v68 + 28) = *((unsigned char *)v69 + 28);
    v68[6] = v69[6];
    uint64_t v71 = *(int *)(v58 + 32);
    uint64_t v72 = (char *)v68 + v71;
    uint64_t v73 = (char *)v69 + v71;
    uint64_t v74 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v68, 0, 1, v58);
  }
  *((unsigned char *)v26 + v28[14]) = *((unsigned char *)v27 + v28[14]);
  uint64_t v75 = v28[15];
  uint64_t v76 = (_OWORD *)((char *)v26 + v75);
  uint64_t v77 = (_OWORD *)((char *)v27 + v75);
  uint64_t v78 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v77, 1, v78))
  {
    uint64_t v79 = sub_253462A5C(&qword_269CDF920);
    memcpy(v76, v77, *(void *)(*(void *)(v79 - 8) + 64));
  }
  else
  {
    long long v80 = v77[1];
    *uint64_t v76 = *v77;
    v76[1] = v80;
    uint64_t v81 = *(int *)(v78 + 24);
    uint64_t v82 = (char *)v76 + v81;
    uint64_t v83 = (char *)v77 + v81;
    uint64_t v84 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v82, v83, v84);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v76, 0, 1, v78);
  }
  uint64_t v85 = v28[16];
  long long v86 = (char *)v26 + v85;
  uint64_t v87 = (char *)v27 + v85;
  uint64_t v88 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v86, v87, v88);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, (uint64_t)v28);
  int v3 = v333;
LABEL_58:
  uint64_t v135 = v3[8];
  uint64_t v136 = &a1[v135];
  uint64_t v137 = &a2[v135];
  int v138 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)&a1[v135], 1, v9);
  int v139 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v137, 1, v9);
  if (v138)
  {
    if (!v139)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v136, v137, v9);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v136, 0, 1, v9);
      goto LABEL_64;
    }
    goto LABEL_63;
  }
  uint64_t v140 = *(void *)(v9 - 8);
  if (v139)
  {
    (*(void (**)(unsigned char *, uint64_t))(v140 + 8))(v136, v9);
LABEL_63:
    uint64_t v141 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v136, v137, *(void *)(*(void *)(v141 - 8) + 64));
    goto LABEL_64;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v140 + 40))(v136, v137, v9);
LABEL_64:
  uint64_t v142 = v3[9];
  uint64_t v143 = (uint64_t)&a1[v142];
  uint64_t v144 = (uint64_t)&a2[v142];
  uint64_t v145 = type metadata accessor for ContextProtoStructuredContext(0);
  int v146 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v143, 1, v145);
  int v147 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v144, 1, v145);
  if (!v146)
  {
    if (v147)
    {
      sub_2535BC188();
      goto LABEL_70;
    }
    uint64_t v151 = type metadata accessor for ContextProtoStructuredContextKind(0);
    int v152 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v143, 1, v151);
    int v153 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v144, 1, v151);
    if (v152)
    {
      if (!v153)
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          long long v197 = *(_OWORD *)(v144 + 16);
          *(_OWORD *)uint64_t v143 = *(_OWORD *)v144;
          *(_OWORD *)(v143 + 16) = v197;
          *(_OWORD *)(v143 + 32) = *(_OWORD *)(v144 + 32);
          uint64_t v156 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            v336 = v3;
            long long v201 = *(_OWORD *)(v144 + 16);
            *(_OWORD *)uint64_t v143 = *(_OWORD *)v144;
            *(_OWORD *)(v143 + 16) = v201;
            long long v202 = *(_OWORD *)(v144 + 48);
            *(_OWORD *)(v143 + 32) = *(_OWORD *)(v144 + 32);
            *(_OWORD *)(v143 + 48) = v202;
            *(_OWORD *)(v143 + 64) = *(_OWORD *)(v144 + 64);
            *(_DWORD *)(v143 + 80) = *(_DWORD *)(v144 + 80);
            *(unsigned char *)(v143 + 84) = *(unsigned char *)(v144 + 84);
            uint64_t v203 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
            uint64_t v204 = v203[15];
            v205 = (_WORD *)(v143 + v204);
            v206 = (_WORD *)(v144 + v204);
            uint64_t v207 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v206, 1, v207))
            {
              uint64_t v208 = sub_253462A5C(&qword_269CDF998);
              memcpy(v205, v206, *(void *)(*(void *)(v208 - 8) + 64));
            }
            else
            {
              *(_OWORD *)v205 = *(_OWORD *)v206;
              v205[8] = v206[8];
              uint64_t v254 = *(int *)(v207 + 28);
              uint64_t v327 = (char *)v205 + v254;
              uint64_t v255 = (char *)v206 + v254;
              uint64_t v256 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v256 - 8) + 32))(v327, v255, v256);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v205, 0, 1, v207);
            }
            *(_OWORD *)(v143 + v203[16]) = *(_OWORD *)(v144 + v203[16]);
            *(_OWORD *)(v143 + v203[17]) = *(_OWORD *)(v144 + v203[17]);
            *(_OWORD *)(v143 + v203[18]) = *(_OWORD *)(v144 + v203[18]);
            uint64_t v257 = v203[19];
            v258 = (_DWORD *)(v143 + v257);
            uint64_t v259 = (_DWORD *)(v144 + v257);
            uint64_t v260 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v259, 1, v260))
            {
              uint64_t v261 = sub_253462A5C(&qword_269CDF988);
              memcpy(v258, v259, *(void *)(*(void *)(v261 - 8) + 64));
            }
            else
            {
              _DWORD *v258 = *v259;
              *((unsigned char *)v258 + 4) = *((unsigned char *)v259 + 4);
              *(_OWORD *)(v258 + 2) = *(_OWORD *)(v259 + 2);
              v258[6] = v259[6];
              *((unsigned char *)v258 + 28) = *((unsigned char *)v259 + 28);
              v258[8] = v259[8];
              *((unsigned char *)v258 + 36) = *((unsigned char *)v259 + 36);
              uint64_t v262 = *(int *)(v260 + 32);
              uint64_t v328 = v260;
              uint64_t v263 = (char *)v258 + v262;
              uint64_t v264 = (char *)v259 + v262;
              uint64_t v265 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v265 - 8) + 32))(v263, v264, v265);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v258, 0, 1, v328);
            }
            uint64_t v266 = v203[20];
            uint64_t v267 = v143 + v266;
            uint64_t v268 = v144 + v266;
            *(void *)uint64_t v267 = *(void *)v268;
            *(unsigned char *)(v267 + 8) = *(unsigned char *)(v268 + 8);
            *(_OWORD *)(v143 + v203[21]) = *(_OWORD *)(v144 + v203[21]);
            *(unsigned char *)(v143 + v203[22]) = *(unsigned char *)(v144 + v203[22]);
            *(unsigned char *)(v143 + v203[23]) = *(unsigned char *)(v144 + v203[23]);
            uint64_t v269 = v203[24];
            uint64_t v270 = (void *)(v143 + v269);
            uint64_t v271 = (void *)(v144 + v269);
            uint64_t v272 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v271, 1, v272))
            {
              uint64_t v273 = sub_253462A5C(&qword_269CDF978);
              memcpy(v270, v271, *(void *)(*(void *)(v273 - 8) + 64));
            }
            else
            {
              *uint64_t v270 = *v271;
              *(_OWORD *)(v270 + 1) = *(_OWORD *)(v271 + 1);
              *(_OWORD *)(v270 + 3) = *(_OWORD *)(v271 + 3);
              *(_OWORD *)(v270 + 5) = *(_OWORD *)(v271 + 5);
              *(_OWORD *)(v270 + 7) = *(_OWORD *)(v271 + 7);
              *(_OWORD *)(v270 + 9) = *(_OWORD *)(v271 + 9);
              uint64_t v274 = *(int *)(v272 + 40);
              uint64_t v329 = v272;
              uint64_t v275 = (char *)v270 + v274;
              v276 = (char *)v271 + v274;
              uint64_t v277 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v277 - 8) + 32))(v275, v276, v277);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v270, 0, 1, v329);
            }
            *(unsigned char *)(v143 + v203[25]) = *(unsigned char *)(v144 + v203[25]);
            *(unsigned char *)(v143 + v203[26]) = *(unsigned char *)(v144 + v203[26]);
            uint64_t v278 = v203[27];
            uint64_t v279 = v143 + v278;
            uint64_t v280 = v144 + v278;
            uint64_t v281 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v281 - 8) + 32))(v279, v280, v281);
            int v3 = v336;
            goto LABEL_121;
          }
          *(_OWORD *)uint64_t v143 = *(_OWORD *)v144;
          *(unsigned char *)(v143 + 16) = *(unsigned char *)(v144 + 16);
          *(void *)(v143 + 24) = *(void *)(v144 + 24);
          long long v155 = *(_OWORD *)(v144 + 48);
          *(_OWORD *)(v143 + 32) = *(_OWORD *)(v144 + 32);
          *(_OWORD *)(v143 + 48) = v155;
          *(_OWORD *)(v143 + 64) = *(_OWORD *)(v144 + 64);
          uint64_t v156 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
        }
        uint64_t v198 = v143 + v156;
        uint64_t v199 = v144 + v156;
        uint64_t v200 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v200 - 8) + 32))(v198, v199, v200);
LABEL_121:
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v143, 0, 1, v151);
        goto LABEL_122;
      }
    }
    else
    {
      if (!v153)
      {
        if (a1 != a2)
        {
          sub_2535BC188();
          int v191 = swift_getEnumCaseMultiPayload();
          if (v191 == 2)
          {
            long long v241 = *(_OWORD *)(v144 + 16);
            *(_OWORD *)uint64_t v143 = *(_OWORD *)v144;
            *(_OWORD *)(v143 + 16) = v241;
            *(_OWORD *)(v143 + 32) = *(_OWORD *)(v144 + 32);
            uint64_t v242 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
            uint64_t v243 = v143 + v242;
            uint64_t v244 = v144 + v242;
            uint64_t v245 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v245 - 8) + 32))(v243, v244, v245);
          }
          else
          {
            if (v191 != 1)
            {
              v337 = v3;
              long long v246 = *(_OWORD *)(v144 + 16);
              *(_OWORD *)uint64_t v143 = *(_OWORD *)v144;
              *(_OWORD *)(v143 + 16) = v246;
              long long v247 = *(_OWORD *)(v144 + 48);
              *(_OWORD *)(v143 + 32) = *(_OWORD *)(v144 + 32);
              *(_OWORD *)(v143 + 48) = v247;
              *(_OWORD *)(v143 + 64) = *(_OWORD *)(v144 + 64);
              *(_DWORD *)(v143 + 80) = *(_DWORD *)(v144 + 80);
              *(unsigned char *)(v143 + 84) = *(unsigned char *)(v144 + 84);
              v248 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
              uint64_t v249 = v248[15];
              v250 = (_WORD *)(v143 + v249);
              v251 = (_WORD *)(v144 + v249);
              uint64_t v252 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v251, 1, v252))
              {
                uint64_t v253 = sub_253462A5C(&qword_269CDF998);
                memcpy(v250, v251, *(void *)(*(void *)(v253 - 8) + 64));
              }
              else
              {
                *(_OWORD *)v250 = *(_OWORD *)v251;
                v250[8] = v251[8];
                uint64_t v296 = *(int *)(v252 + 28);
                uint64_t v330 = (char *)v250 + v296;
                v297 = (char *)v251 + v296;
                uint64_t v298 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v298 - 8) + 32))(v330, v297, v298);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v250, 0, 1, v252);
              }
              *(_OWORD *)(v143 + v248[16]) = *(_OWORD *)(v144 + v248[16]);
              *(_OWORD *)(v143 + v248[17]) = *(_OWORD *)(v144 + v248[17]);
              *(_OWORD *)(v143 + v248[18]) = *(_OWORD *)(v144 + v248[18]);
              uint64_t v299 = v248[19];
              v300 = (_DWORD *)(v143 + v299);
              v301 = (_DWORD *)(v144 + v299);
              uint64_t v302 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v301, 1, v302))
              {
                uint64_t v303 = sub_253462A5C(&qword_269CDF988);
                memcpy(v300, v301, *(void *)(*(void *)(v303 - 8) + 64));
              }
              else
              {
                _DWORD *v300 = *v301;
                *((unsigned char *)v300 + 4) = *((unsigned char *)v301 + 4);
                *(_OWORD *)(v300 + 2) = *(_OWORD *)(v301 + 2);
                v300[6] = v301[6];
                *((unsigned char *)v300 + 28) = *((unsigned char *)v301 + 28);
                v300[8] = v301[8];
                *((unsigned char *)v300 + 36) = *((unsigned char *)v301 + 36);
                uint64_t v304 = *(int *)(v302 + 32);
                uint64_t v331 = v302;
                int v305 = (char *)v300 + v304;
                int v306 = (char *)v301 + v304;
                uint64_t v307 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v307 - 8) + 32))(v305, v306, v307);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v300, 0, 1, v331);
              }
              uint64_t v308 = v248[20];
              uint64_t v309 = v143 + v308;
              uint64_t v310 = v144 + v308;
              *(void *)uint64_t v309 = *(void *)v310;
              *(unsigned char *)(v309 + 8) = *(unsigned char *)(v310 + 8);
              *(_OWORD *)(v143 + v248[21]) = *(_OWORD *)(v144 + v248[21]);
              *(unsigned char *)(v143 + v248[22]) = *(unsigned char *)(v144 + v248[22]);
              *(unsigned char *)(v143 + v248[23]) = *(unsigned char *)(v144 + v248[23]);
              uint64_t v311 = v248[24];
              uint64_t v312 = (void *)(v143 + v311);
              uint64_t v313 = (void *)(v144 + v311);
              uint64_t v314 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v313, 1, v314))
              {
                uint64_t v315 = sub_253462A5C(&qword_269CDF978);
                memcpy(v312, v313, *(void *)(*(void *)(v315 - 8) + 64));
              }
              else
              {
                *uint64_t v312 = *v313;
                *(_OWORD *)(v312 + 1) = *(_OWORD *)(v313 + 1);
                *(_OWORD *)(v312 + 3) = *(_OWORD *)(v313 + 3);
                *(_OWORD *)(v312 + 5) = *(_OWORD *)(v313 + 5);
                *(_OWORD *)(v312 + 7) = *(_OWORD *)(v313 + 7);
                *(_OWORD *)(v312 + 9) = *(_OWORD *)(v313 + 9);
                uint64_t v316 = *(int *)(v314 + 40);
                uint64_t v332 = v314;
                uint64_t v317 = (char *)v312 + v316;
                v318 = (char *)v313 + v316;
                uint64_t v319 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v319 - 8) + 32))(v317, v318, v319);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v312, 0, 1, v332);
              }
              *(unsigned char *)(v143 + v248[25]) = *(unsigned char *)(v144 + v248[25]);
              *(unsigned char *)(v143 + v248[26]) = *(unsigned char *)(v144 + v248[26]);
              uint64_t v320 = v248[27];
              uint64_t v321 = v143 + v320;
              uint64_t v322 = v144 + v320;
              uint64_t v323 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v323 - 8) + 32))(v321, v322, v323);
              swift_storeEnumTagMultiPayload();
              int v3 = v337;
              goto LABEL_122;
            }
            *(_OWORD *)uint64_t v143 = *(_OWORD *)v144;
            *(unsigned char *)(v143 + 16) = *(unsigned char *)(v144 + 16);
            *(void *)(v143 + 24) = *(void *)(v144 + 24);
            long long v192 = *(_OWORD *)(v144 + 48);
            *(_OWORD *)(v143 + 32) = *(_OWORD *)(v144 + 32);
            *(_OWORD *)(v143 + 48) = v192;
            *(_OWORD *)(v143 + 64) = *(_OWORD *)(v144 + 64);
            uint64_t v193 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
            uint64_t v194 = v143 + v193;
            uint64_t v195 = v144 + v193;
            uint64_t v196 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v196 - 8) + 32))(v194, v195, v196);
          }
          swift_storeEnumTagMultiPayload();
        }
LABEL_122:
        uint64_t v282 = *(int *)(v145 + 20);
        uint64_t v283 = v143 + v282;
        uint64_t v284 = v144 + v282;
        uint64_t v285 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v285 - 8) + 40))(v283, v284, v285);
        goto LABEL_123;
      }
      sub_2535BC188();
    }
    uint64_t v160 = sub_253462A5C(&qword_269CDF958);
    memcpy((void *)v143, (const void *)v144, *(void *)(*(void *)(v160 - 8) + 64));
    goto LABEL_122;
  }
  if (!v147)
  {
    uint64_t v148 = type metadata accessor for ContextProtoStructuredContextKind(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v144, 1, v148))
    {
      uint64_t v149 = sub_253462A5C(&qword_269CDF958);
      memcpy((void *)v143, (const void *)v144, *(void *)(*(void *)(v149 - 8) + 64));
LABEL_108:
      uint64_t v237 = *(int *)(v145 + 20);
      uint64_t v238 = v143 + v237;
      uint64_t v239 = v144 + v237;
      uint64_t v240 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v240 - 8) + 32))(v238, v239, v240);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v143, 0, 1, v145);
      goto LABEL_123;
    }
    int v157 = swift_getEnumCaseMultiPayload();
    if (v157 == 2)
    {
      long long v161 = *(_OWORD *)(v144 + 16);
      *(_OWORD *)uint64_t v143 = *(_OWORD *)v144;
      *(_OWORD *)(v143 + 16) = v161;
      *(_OWORD *)(v143 + 32) = *(_OWORD *)(v144 + 32);
      uint64_t v159 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
    }
    else
    {
      if (v157 != 1)
      {
        uint64_t v335 = v3;
        long long v165 = *(_OWORD *)(v144 + 16);
        *(_OWORD *)uint64_t v143 = *(_OWORD *)v144;
        *(_OWORD *)(v143 + 16) = v165;
        long long v166 = *(_OWORD *)(v144 + 48);
        *(_OWORD *)(v143 + 32) = *(_OWORD *)(v144 + 32);
        *(_OWORD *)(v143 + 48) = v166;
        *(_OWORD *)(v143 + 64) = *(_OWORD *)(v144 + 64);
        *(_DWORD *)(v143 + 80) = *(_DWORD *)(v144 + 80);
        *(unsigned char *)(v143 + 84) = *(unsigned char *)(v144 + 84);
        uint64_t v167 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
        uint64_t v168 = v167[15];
        uint64_t v169 = (_WORD *)(v143 + v168);
        uint64_t v170 = (_WORD *)(v144 + v168);
        uint64_t v171 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v170, 1, v171))
        {
          uint64_t v172 = sub_253462A5C(&qword_269CDF998);
          memcpy(v169, v170, *(void *)(*(void *)(v172 - 8) + 64));
        }
        else
        {
          *(_OWORD *)uint64_t v169 = *(_OWORD *)v170;
          v169[8] = v170[8];
          uint64_t v209 = *(int *)(v171 + 28);
          uint64_t v324 = (char *)v169 + v209;
          uint64_t v210 = (char *)v170 + v209;
          uint64_t v211 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v211 - 8) + 32))(v324, v210, v211);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v169, 0, 1, v171);
        }
        *(_OWORD *)(v143 + v167[16]) = *(_OWORD *)(v144 + v167[16]);
        *(_OWORD *)(v143 + v167[17]) = *(_OWORD *)(v144 + v167[17]);
        *(_OWORD *)(v143 + v167[18]) = *(_OWORD *)(v144 + v167[18]);
        uint64_t v212 = v167[19];
        v213 = (_DWORD *)(v143 + v212);
        uint64_t v214 = (_DWORD *)(v144 + v212);
        uint64_t v215 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v214, 1, v215))
        {
          uint64_t v216 = sub_253462A5C(&qword_269CDF988);
          memcpy(v213, v214, *(void *)(*(void *)(v216 - 8) + 64));
        }
        else
        {
          _DWORD *v213 = *v214;
          *((unsigned char *)v213 + 4) = *((unsigned char *)v214 + 4);
          *(_OWORD *)(v213 + 2) = *(_OWORD *)(v214 + 2);
          v213[6] = v214[6];
          *((unsigned char *)v213 + 28) = *((unsigned char *)v214 + 28);
          v213[8] = v214[8];
          *((unsigned char *)v213 + 36) = *((unsigned char *)v214 + 36);
          uint64_t v217 = *(int *)(v215 + 32);
          uint64_t v325 = v215;
          uint64_t v218 = (char *)v213 + v217;
          v219 = (char *)v214 + v217;
          uint64_t v220 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v220 - 8) + 32))(v218, v219, v220);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v213, 0, 1, v325);
        }
        uint64_t v221 = v167[20];
        uint64_t v222 = v143 + v221;
        uint64_t v223 = v144 + v221;
        *(void *)uint64_t v222 = *(void *)v223;
        *(unsigned char *)(v222 + 8) = *(unsigned char *)(v223 + 8);
        *(_OWORD *)(v143 + v167[21]) = *(_OWORD *)(v144 + v167[21]);
        *(unsigned char *)(v143 + v167[22]) = *(unsigned char *)(v144 + v167[22]);
        *(unsigned char *)(v143 + v167[23]) = *(unsigned char *)(v144 + v167[23]);
        uint64_t v224 = v167[24];
        v225 = (void *)(v143 + v224);
        v226 = (void *)(v144 + v224);
        uint64_t v227 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v226, 1, v227))
        {
          uint64_t v228 = sub_253462A5C(&qword_269CDF978);
          memcpy(v225, v226, *(void *)(*(void *)(v228 - 8) + 64));
        }
        else
        {
          void *v225 = *v226;
          *(_OWORD *)(v225 + 1) = *(_OWORD *)(v226 + 1);
          *(_OWORD *)(v225 + 3) = *(_OWORD *)(v226 + 3);
          *(_OWORD *)(v225 + 5) = *(_OWORD *)(v226 + 5);
          *(_OWORD *)(v225 + 7) = *(_OWORD *)(v226 + 7);
          *(_OWORD *)(v225 + 9) = *(_OWORD *)(v226 + 9);
          uint64_t v229 = *(int *)(v227 + 40);
          uint64_t v326 = v227;
          unint64_t v230 = (char *)v225 + v229;
          uint64_t v231 = (char *)v226 + v229;
          uint64_t v232 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v232 - 8) + 32))(v230, v231, v232);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v225, 0, 1, v326);
        }
        int v3 = v335;
        *(unsigned char *)(v143 + v167[25]) = *(unsigned char *)(v144 + v167[25]);
        *(unsigned char *)(v143 + v167[26]) = *(unsigned char *)(v144 + v167[26]);
        uint64_t v233 = v167[27];
        uint64_t v234 = v143 + v233;
        uint64_t v235 = v144 + v233;
        uint64_t v236 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v236 - 8) + 32))(v234, v235, v236);
        goto LABEL_107;
      }
      *(_OWORD *)uint64_t v143 = *(_OWORD *)v144;
      *(unsigned char *)(v143 + 16) = *(unsigned char *)(v144 + 16);
      *(void *)(v143 + 24) = *(void *)(v144 + 24);
      long long v158 = *(_OWORD *)(v144 + 48);
      *(_OWORD *)(v143 + 32) = *(_OWORD *)(v144 + 32);
      *(_OWORD *)(v143 + 48) = v158;
      *(_OWORD *)(v143 + 64) = *(_OWORD *)(v144 + 64);
      uint64_t v159 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
    }
    uint64_t v162 = v143 + v159;
    uint64_t v163 = v144 + v159;
    uint64_t v164 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v164 - 8) + 32))(v162, v163, v164);
LABEL_107:
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v143, 0, 1, v148);
    goto LABEL_108;
  }
LABEL_70:
  uint64_t v150 = sub_253462A5C(&qword_269CDF8E0);
  memcpy((void *)v143, (const void *)v144, *(void *)(*(void *)(v150 - 8) + 64));
LABEL_123:
  uint64_t v286 = v3[10];
  v287 = &a1[v286];
  uint64_t v288 = (uint64_t *)&a2[v286];
  uint64_t v290 = *v288;
  uint64_t v289 = v288[1];
  void *v287 = v290;
  v287[1] = v289;
  swift_bridgeObjectRelease();
  uint64_t v291 = v3[11];
  uint64_t v292 = &a1[v291];
  uint64_t v293 = &a2[v291];
  uint64_t v294 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v294 - 8) + 40))(v292, v293, v294);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoRetrievedContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535C4AB8);
}

uint64_t sub_2535C4AB8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_2534DA0C4();
  sub_253462A5C(&qword_269CDCBC8);
  sub_253486600();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    sub_2535E263C();
  }
  else
  {
    sub_253462A5C(&qword_269CDF900);
    sub_253486600();
    if (*(_DWORD *)(v8 + 84) == v3)
    {
      sub_2535E2560();
    }
    else
    {
      sub_253462A5C(&qword_269CDF8F0);
      sub_253486600();
      if (*(_DWORD *)(v9 + 84) == v3)
      {
        sub_2535E256C();
      }
      else
      {
        sub_253462A5C(&qword_269CDF8E0);
        sub_253486600();
        if (*(_DWORD *)(v10 + 84) == v3)
        {
          uint64_t v7 = a3[9];
        }
        else
        {
          if (v3 == 2147483646) {
            return sub_2535E2258(*(void *)(v4 + a3[10] + 8));
          }
          sub_253B07160();
          uint64_t v7 = a3[11];
        }
      }
    }
  }
  uint64_t v12 = sub_2535E22C8(v7);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v12, v13, v14);
}

uint64_t storeEnumTagSinglePayload for ContextProtoRetrievedContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535C4BDC);
}

void sub_2535C4BDC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_2534DA0C4();
  sub_253462A5C(&qword_269CDCBC8);
  sub_253486600();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    sub_2535E272C();
  }
  else
  {
    sub_253462A5C(&qword_269CDF900);
    sub_253486600();
    if (*(_DWORD *)(v10 + 84) == a3)
    {
      sub_2535E26D8();
    }
    else
    {
      sub_253462A5C(&qword_269CDF8F0);
      sub_253486600();
      if (*(_DWORD *)(v11 + 84) == a3)
      {
        sub_2535E26E4();
      }
      else
      {
        sub_253462A5C(&qword_269CDF8E0);
        sub_253486600();
        if (*(_DWORD *)(v12 + 84) == a3)
        {
          uint64_t v9 = a4[9];
        }
        else
        {
          if (a3 == 2147483646)
          {
            *(void *)(v5 + a4[10] + 8) = v4;
            return;
          }
          sub_253B07160();
          uint64_t v9 = a4[11];
        }
      }
    }
  }
  uint64_t v13 = sub_2535E2234(v9);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v13, v14, v15, v16);
}

void sub_2535C4CF0()
{
  sub_2535C4EF0(319, &qword_26B24A358, MEMORY[0x263F802B0]);
  if (v0 <= 0x3F)
  {
    sub_2535C4EF0(319, &qword_269CE00B8, (void (*)(uint64_t))type metadata accessor for ContextProtoConfidence);
    if (v1 <= 0x3F)
    {
      sub_2535C4EF0(319, &qword_269CE00C0, (void (*)(uint64_t))type metadata accessor for ContextProtoContextMetadata);
      if (v2 <= 0x3F)
      {
        sub_2535C4EF0(319, &qword_269CE00C8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContext);
        if (v3 <= 0x3F)
        {
          sub_253B07160();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_2535C4EF0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_253B09E00();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ContextProtoContextMetadata(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    uint64_t v9 = a2[4];
    a1[3] = a2[3];
    a1[4] = v9;
    uint64_t v10 = a3[7];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for ContextProtoConfidence(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = sub_253462A5C(&qword_269CDF900);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
      v11[4] = v12[4];
      uint64_t v15 = *(int *)(v13 + 24);
      uint64_t v16 = &v11[v15];
      uint64_t v17 = &v12[v15];
      uint64_t v18 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v11, 0, 1, v13);
    }
    uint64_t v19 = a3[8];
    uint64_t v20 = (_DWORD *)((char *)v7 + v19);
    uint64_t v21 = (_DWORD *)((char *)a2 + v19);
    uint64_t v22 = type metadata accessor for ContextProtoBoundingBox(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v22))
    {
      uint64_t v23 = sub_253462A5C(&qword_269CDCCC0);
      memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      *uint64_t v20 = *v21;
      *((unsigned char *)v20 + 4) = *((unsigned char *)v21 + 4);
      v20[2] = v21[2];
      *((unsigned char *)v20 + 12) = *((unsigned char *)v21 + 12);
      v20[4] = v21[4];
      *((unsigned char *)v20 + 20) = *((unsigned char *)v21 + 20);
      *((unsigned char *)v20 + 28) = *((unsigned char *)v21 + 28);
      v20[6] = v21[6];
      uint64_t v24 = *(int *)(v22 + 32);
      uint64_t v25 = (char *)v20 + v24;
      uint64_t v26 = (char *)v21 + v24;
      uint64_t v27 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, v22);
    }
    uint64_t v28 = a3[9];
    uint64_t v29 = a3[10];
    int v30 = (char *)v7 + v28;
    uint64_t v31 = (char *)a2 + v28;
    *(void *)int v30 = *(void *)v31;
    v30[8] = v31[8];
    uint64_t v32 = (void *)((char *)v7 + v29);
    uint64_t v33 = (void *)((char *)a2 + v29);
    uint64_t v34 = v33[1];
    void *v32 = *v33;
    v32[1] = v34;
    uint64_t v35 = a3[12];
    *((unsigned char *)v7 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *((unsigned char *)v7 + v35) = *((unsigned char *)a2 + v35);
    uint64_t v36 = a3[13];
    uint64_t v37 = (_DWORD *)((char *)v7 + v36);
    uint64_t v38 = (_DWORD *)((char *)a2 + v36);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, v22))
    {
      uint64_t v39 = sub_253462A5C(&qword_269CDCCC0);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      *uint64_t v37 = *v38;
      *((unsigned char *)v37 + 4) = *((unsigned char *)v38 + 4);
      void v37[2] = v38[2];
      *((unsigned char *)v37 + 12) = *((unsigned char *)v38 + 12);
      v37[4] = v38[4];
      *((unsigned char *)v37 + 20) = *((unsigned char *)v38 + 20);
      *((unsigned char *)v37 + 28) = *((unsigned char *)v38 + 28);
      v37[6] = v38[6];
      uint64_t v40 = *(int *)(v22 + 32);
      uint64_t v41 = (char *)v37 + v40;
      uint64_t v42 = (char *)v38 + v40;
      uint64_t v43 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v37, 0, 1, v22);
    }
    uint64_t v44 = a3[15];
    *((unsigned char *)v7 + a3[14]) = *((unsigned char *)a2 + a3[14]);
    int v45 = (void *)((char *)v7 + v44);
    int v46 = (void *)((char *)a2 + v44);
    uint64_t v47 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v46, 1, v47))
    {
      uint64_t v48 = sub_253462A5C(&qword_269CDF920);
      memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      uint64_t v49 = v46[1];
      *int v45 = *v46;
      v45[1] = v49;
      uint64_t v50 = v46[3];
      v45[2] = v46[2];
      v45[3] = v50;
      uint64_t v51 = *(int *)(v47 + 24);
      uint64_t v59 = (char *)v46 + v51;
      uint64_t v60 = (char *)v45 + v51;
      uint64_t v52 = sub_253B07160();
      uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v53(v60, v59, v52);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v45, 0, 1, v47);
    }
    uint64_t v54 = a3[16];
    uint64_t v55 = (char *)v7 + v54;
    uint64_t v56 = (char *)a2 + v54;
    uint64_t v57 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
  }
  return v7;
}

uint64_t destroy for ContextProtoContextMetadata(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = type metadata accessor for ContextProtoConfidence(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = type metadata accessor for ContextProtoBoundingBox(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v9))
  {
    uint64_t v10 = v8 + *(int *)(v9 + 32);
    uint64_t v11 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + a2[13];
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v12, 1, v9))
  {
    uint64_t v13 = v12 + *(int *)(v9 + 32);
    uint64_t v14 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  uint64_t v15 = a1 + a2[15];
  uint64_t v16 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v15, 1, v16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = v15 + *(int *)(v16 + 24);
    uint64_t v18 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  }
  uint64_t v19 = a1 + a2[16];
  uint64_t v20 = sub_253B07160();
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);
  return v21(v19, v20);
}

void *initializeWithCopy for ContextProtoContextMetadata(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  uint64_t v8 = a3[7];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for ContextProtoConfidence(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_253462A5C(&qword_269CDF900);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
    v9[4] = v10[4];
    uint64_t v13 = *(int *)(v11 + 24);
    uint64_t v14 = &v9[v13];
    uint64_t v15 = &v10[v13];
    uint64_t v16 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v17 = a3[8];
  uint64_t v18 = (_DWORD *)((char *)a1 + v17);
  uint64_t v19 = (_DWORD *)((char *)a2 + v17);
  uint64_t v20 = type metadata accessor for ContextProtoBoundingBox(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
  {
    uint64_t v21 = sub_253462A5C(&qword_269CDCCC0);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    *uint64_t v18 = *v19;
    *((unsigned char *)v18 + 4) = *((unsigned char *)v19 + 4);
    v18[2] = v19[2];
    *((unsigned char *)v18 + 12) = *((unsigned char *)v19 + 12);
    v18[4] = v19[4];
    *((unsigned char *)v18 + 20) = *((unsigned char *)v19 + 20);
    *((unsigned char *)v18 + 28) = *((unsigned char *)v19 + 28);
    v18[6] = v19[6];
    uint64_t v22 = *(int *)(v20 + 32);
    uint64_t v23 = (char *)v18 + v22;
    uint64_t v24 = (char *)v19 + v22;
    uint64_t v25 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
  }
  uint64_t v26 = a3[9];
  uint64_t v27 = a3[10];
  uint64_t v28 = (char *)a1 + v26;
  uint64_t v29 = (char *)a2 + v26;
  *(void *)uint64_t v28 = *(void *)v29;
  v28[8] = v29[8];
  int v30 = (void *)((char *)a1 + v27);
  uint64_t v31 = (void *)((char *)a2 + v27);
  uint64_t v32 = v31[1];
  void *v30 = *v31;
  v30[1] = v32;
  uint64_t v33 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *((unsigned char *)a1 + v33) = *((unsigned char *)a2 + v33);
  uint64_t v34 = a3[13];
  uint64_t v35 = (_DWORD *)((char *)a1 + v34);
  uint64_t v36 = (_DWORD *)((char *)a2 + v34);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v36, 1, v20))
  {
    uint64_t v37 = sub_253462A5C(&qword_269CDCCC0);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    *uint64_t v35 = *v36;
    *((unsigned char *)v35 + 4) = *((unsigned char *)v36 + 4);
    v35[2] = v36[2];
    *((unsigned char *)v35 + 12) = *((unsigned char *)v36 + 12);
    v35[4] = v36[4];
    *((unsigned char *)v35 + 20) = *((unsigned char *)v36 + 20);
    *((unsigned char *)v35 + 28) = *((unsigned char *)v36 + 28);
    v35[6] = v36[6];
    uint64_t v38 = *(int *)(v20 + 32);
    uint64_t v39 = (char *)v35 + v38;
    uint64_t v40 = (char *)v36 + v38;
    uint64_t v41 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v35, 0, 1, v20);
  }
  uint64_t v42 = a3[15];
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  uint64_t v43 = (void *)((char *)a1 + v42);
  uint64_t v44 = (void *)((char *)a2 + v42);
  uint64_t v45 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v44, 1, v45))
  {
    uint64_t v46 = sub_253462A5C(&qword_269CDF920);
    memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    uint64_t v47 = v44[1];
    *uint64_t v43 = *v44;
    v43[1] = v47;
    uint64_t v48 = v44[3];
    v43[2] = v44[2];
    v43[3] = v48;
    uint64_t v49 = *(int *)(v45 + 24);
    uint64_t v57 = (char *)v44 + v49;
    uint64_t v58 = (char *)v43 + v49;
    uint64_t v50 = sub_253B07160();
    uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v51(v58, v57, v50);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v43, 0, 1, v45);
  }
  uint64_t v52 = a3[16];
  uint64_t v53 = (char *)a1 + v52;
  uint64_t v54 = (char *)a2 + v52;
  uint64_t v55 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
  return a1;
}

void *assignWithCopy for ContextProtoContextMetadata(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ContextProtoConfidence(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
      v7[4] = v8[4];
      uint64_t v12 = *(int *)(v9 + 24);
      uint64_t v13 = &v7[v12];
      uint64_t v14 = &v8[v12];
      uint64_t v15 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_2535BC188();
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_269CDF900);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
  v7[4] = v8[4];
  uint64_t v68 = *(int *)(v9 + 24);
  uint64_t v69 = &v7[v68];
  uint64_t v70 = &v8[v68];
  uint64_t v71 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v71 - 8) + 24))(v69, v70, v71);
LABEL_7:
  uint64_t v17 = a3[8];
  uint64_t v18 = (uint64_t)a1 + v17;
  uint64_t v19 = (uint64_t)a2 + v17;
  uint64_t v20 = type metadata accessor for ContextProtoBoundingBox(0);
  int v21 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v18, 1, v20);
  int v22 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v20);
  if (v21)
  {
    if (!v22)
    {
      int v23 = *(_DWORD *)v19;
      *(unsigned char *)(v18 + 4) = *(unsigned char *)(v19 + 4);
      *(_DWORD *)uint64_t v18 = v23;
      int v24 = *(_DWORD *)(v19 + 8);
      *(unsigned char *)(v18 + 12) = *(unsigned char *)(v19 + 12);
      *(_DWORD *)(v18 + 8) = v24;
      int v25 = *(_DWORD *)(v19 + 16);
      *(unsigned char *)(v18 + 20) = *(unsigned char *)(v19 + 20);
      *(_DWORD *)(v18 + 16) = v25;
      int v26 = *(_DWORD *)(v19 + 24);
      *(unsigned char *)(v18 + 28) = *(unsigned char *)(v19 + 28);
      *(_DWORD *)(v18 + 24) = v26;
      uint64_t v27 = *(int *)(v20 + 32);
      uint64_t v28 = v18 + v27;
      uint64_t v29 = v19 + v27;
      uint64_t v30 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v20);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    sub_2535BC188();
LABEL_12:
    uint64_t v31 = sub_253462A5C(&qword_269CDCCC0);
    memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  int v72 = *(_DWORD *)v19;
  *(unsigned char *)(v18 + 4) = *(unsigned char *)(v19 + 4);
  *(_DWORD *)uint64_t v18 = v72;
  int v73 = *(_DWORD *)(v19 + 8);
  *(unsigned char *)(v18 + 12) = *(unsigned char *)(v19 + 12);
  *(_DWORD *)(v18 + 8) = v73;
  int v74 = *(_DWORD *)(v19 + 16);
  *(unsigned char *)(v18 + 20) = *(unsigned char *)(v19 + 20);
  *(_DWORD *)(v18 + 16) = v74;
  int v75 = *(_DWORD *)(v19 + 24);
  *(unsigned char *)(v18 + 28) = *(unsigned char *)(v19 + 28);
  *(_DWORD *)(v18 + 24) = v75;
  uint64_t v76 = *(int *)(v20 + 32);
  uint64_t v77 = v18 + v76;
  uint64_t v78 = v19 + v76;
  uint64_t v79 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 24))(v77, v78, v79);
LABEL_13:
  uint64_t v32 = a3[9];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = *(void *)v34;
  v33[8] = v34[8];
  *(void *)uint64_t v33 = v35;
  uint64_t v36 = a3[10];
  uint64_t v37 = (void *)((char *)a1 + v36);
  uint64_t v38 = (void *)((char *)a2 + v36);
  *uint64_t v37 = *v38;
  v37[1] = v38[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  uint64_t v39 = a3[13];
  uint64_t v40 = (uint64_t)a1 + v39;
  uint64_t v41 = (uint64_t)a2 + v39;
  int v42 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1 + v39, 1, v20);
  int v43 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v41, 1, v20);
  if (v42)
  {
    if (!v43)
    {
      int v44 = *(_DWORD *)v41;
      *(unsigned char *)(v40 + 4) = *(unsigned char *)(v41 + 4);
      *(_DWORD *)uint64_t v40 = v44;
      int v45 = *(_DWORD *)(v41 + 8);
      *(unsigned char *)(v40 + 12) = *(unsigned char *)(v41 + 12);
      *(_DWORD *)(v40 + 8) = v45;
      int v46 = *(_DWORD *)(v41 + 16);
      *(unsigned char *)(v40 + 20) = *(unsigned char *)(v41 + 20);
      *(_DWORD *)(v40 + 16) = v46;
      int v47 = *(_DWORD *)(v41 + 24);
      *(unsigned char *)(v40 + 28) = *(unsigned char *)(v41 + 28);
      *(_DWORD *)(v40 + 24) = v47;
      uint64_t v48 = *(int *)(v20 + 32);
      uint64_t v49 = v40 + v48;
      uint64_t v50 = v41 + v48;
      uint64_t v51 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v40, 0, 1, v20);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v43)
  {
    sub_2535BC188();
LABEL_18:
    uint64_t v52 = sub_253462A5C(&qword_269CDCCC0);
    memcpy((void *)v40, (const void *)v41, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_19;
  }
  int v80 = *(_DWORD *)v41;
  *(unsigned char *)(v40 + 4) = *(unsigned char *)(v41 + 4);
  *(_DWORD *)uint64_t v40 = v80;
  int v81 = *(_DWORD *)(v41 + 8);
  *(unsigned char *)(v40 + 12) = *(unsigned char *)(v41 + 12);
  *(_DWORD *)(v40 + 8) = v81;
  int v82 = *(_DWORD *)(v41 + 16);
  *(unsigned char *)(v40 + 20) = *(unsigned char *)(v41 + 20);
  *(_DWORD *)(v40 + 16) = v82;
  int v83 = *(_DWORD *)(v41 + 24);
  *(unsigned char *)(v40 + 28) = *(unsigned char *)(v41 + 28);
  *(_DWORD *)(v40 + 24) = v83;
  uint64_t v84 = *(int *)(v20 + 32);
  uint64_t v85 = v40 + v84;
  uint64_t v86 = v41 + v84;
  uint64_t v87 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 24))(v85, v86, v87);
LABEL_19:
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  uint64_t v53 = a3[15];
  uint64_t v54 = (void *)((char *)a1 + v53);
  uint64_t v55 = (void *)((char *)a2 + v53);
  uint64_t v56 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
  int v57 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54, 1, v56);
  int v58 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v55, 1, v56);
  if (!v57)
  {
    if (!v58)
    {
      *uint64_t v54 = *v55;
      v54[1] = v55[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v54[2] = v55[2];
      v54[3] = v55[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v88 = *(int *)(v56 + 24);
      uint64_t v89 = (char *)v54 + v88;
      uint64_t v90 = (char *)v55 + v88;
      uint64_t v91 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 24))(v89, v90, v91);
      goto LABEL_25;
    }
    sub_2535BC188();
    goto LABEL_24;
  }
  if (v58)
  {
LABEL_24:
    uint64_t v62 = sub_253462A5C(&qword_269CDF920);
    memcpy(v54, v55, *(void *)(*(void *)(v62 - 8) + 64));
    goto LABEL_25;
  }
  *uint64_t v54 = *v55;
  v54[1] = v55[1];
  v54[2] = v55[2];
  v54[3] = v55[3];
  uint64_t v59 = *(int *)(v56 + 24);
  uint64_t v92 = (char *)v55 + v59;
  uint64_t v93 = (char *)v54 + v59;
  uint64_t v60 = sub_253B07160();
  int v61 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v61(v93, v92, v60);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v54, 0, 1, v56);
LABEL_25:
  uint64_t v63 = a3[16];
  uint64_t v64 = (char *)a1 + v63;
  uint64_t v65 = (char *)a2 + v63;
  uint64_t v66 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 24))(v64, v65, v66);
  return a1;
}

uint64_t initializeWithTake for ContextProtoContextMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = a3[7];
  uint64_t v7 = (unsigned char *)(a1 + v6);
  uint64_t v8 = (unsigned char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ContextProtoConfidence(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CDF900);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
    v7[4] = v8[4];
    uint64_t v11 = *(int *)(v9 + 24);
    uint64_t v12 = &v7[v11];
    uint64_t v13 = &v8[v11];
    uint64_t v14 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v15 = a3[8];
  uint64_t v16 = (_DWORD *)(a1 + v15);
  uint64_t v17 = (_DWORD *)(a2 + v15);
  uint64_t v18 = type metadata accessor for ContextProtoBoundingBox(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18))
  {
    uint64_t v19 = sub_253462A5C(&qword_269CDCCC0);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    _DWORD *v16 = *v17;
    *((unsigned char *)v16 + 4) = *((unsigned char *)v17 + 4);
    v16[2] = v17[2];
    *((unsigned char *)v16 + 12) = *((unsigned char *)v17 + 12);
    v16[4] = v17[4];
    *((unsigned char *)v16 + 20) = *((unsigned char *)v17 + 20);
    *((unsigned char *)v16 + 28) = *((unsigned char *)v17 + 28);
    v16[6] = v17[6];
    uint64_t v20 = *(int *)(v18 + 32);
    int v21 = (char *)v16 + v20;
    int v22 = (char *)v17 + v20;
    uint64_t v23 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v18);
  }
  uint64_t v24 = a3[9];
  uint64_t v25 = a3[10];
  uint64_t v26 = a1 + v24;
  uint64_t v27 = a2 + v24;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  uint64_t v28 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v28) = *(unsigned char *)(a2 + v28);
  uint64_t v29 = a3[13];
  uint64_t v30 = (_DWORD *)(a1 + v29);
  uint64_t v31 = (_DWORD *)(a2 + v29);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v29, 1, v18))
  {
    uint64_t v32 = sub_253462A5C(&qword_269CDCCC0);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    _DWORD *v30 = *v31;
    *((unsigned char *)v30 + 4) = *((unsigned char *)v31 + 4);
    v30[2] = v31[2];
    *((unsigned char *)v30 + 12) = *((unsigned char *)v31 + 12);
    v30[4] = v31[4];
    *((unsigned char *)v30 + 20) = *((unsigned char *)v31 + 20);
    *((unsigned char *)v30 + 28) = *((unsigned char *)v31 + 28);
    v30[6] = v31[6];
    uint64_t v33 = *(int *)(v18 + 32);
    uint64_t v34 = (char *)v30 + v33;
    uint64_t v35 = (char *)v31 + v33;
    uint64_t v36 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v30, 0, 1, v18);
  }
  uint64_t v37 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v38 = (_OWORD *)(a1 + v37);
  uint64_t v39 = (_OWORD *)(a2 + v37);
  uint64_t v40 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v39, 1, v40))
  {
    uint64_t v41 = sub_253462A5C(&qword_269CDF920);
    memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    long long v42 = v39[1];
    *uint64_t v38 = *v39;
    v38[1] = v42;
    uint64_t v43 = *(int *)(v40 + 24);
    int v44 = (char *)v38 + v43;
    int v45 = (char *)v39 + v43;
    uint64_t v46 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v38, 0, 1, v40);
  }
  uint64_t v47 = a3[16];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
  return a1;
}

void *assignWithTake for ContextProtoContextMetadata(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[4];
  a1[3] = a2[3];
  a1[4] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[7];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for ContextProtoConfidence(0);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v11);
  int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11);
  if (v12)
  {
    if (!v13)
    {
      *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
      v9[4] = v10[4];
      uint64_t v14 = *(int *)(v11 + 24);
      uint64_t v15 = &v9[v14];
      uint64_t v16 = &v10[v14];
      uint64_t v17 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_2535BC188();
LABEL_6:
    uint64_t v18 = sub_253462A5C(&qword_269CDF900);
    memcpy(v9, v10, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  v9[4] = v10[4];
  uint64_t v66 = *(int *)(v11 + 24);
  uint64_t v67 = &v9[v66];
  uint64_t v68 = &v10[v66];
  uint64_t v69 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v69 - 8) + 40))(v67, v68, v69);
LABEL_7:
  uint64_t v19 = a3[8];
  uint64_t v20 = (uint64_t)a1 + v19;
  uint64_t v21 = (uint64_t)a2 + v19;
  uint64_t v22 = type metadata accessor for ContextProtoBoundingBox(0);
  int v23 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v20, 1, v22);
  int v24 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v21, 1, v22);
  if (v23)
  {
    if (!v24)
    {
      *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
      *(unsigned char *)(v20 + 4) = *(unsigned char *)(v21 + 4);
      *(_DWORD *)(v20 + 8) = *(_DWORD *)(v21 + 8);
      *(unsigned char *)(v20 + 12) = *(unsigned char *)(v21 + 12);
      *(_DWORD *)(v20 + 16) = *(_DWORD *)(v21 + 16);
      *(unsigned char *)(v20 + 20) = *(unsigned char *)(v21 + 20);
      *(unsigned char *)(v20 + 28) = *(unsigned char *)(v21 + 28);
      *(_DWORD *)(v20 + 24) = *(_DWORD *)(v21 + 24);
      uint64_t v25 = *(int *)(v22 + 32);
      uint64_t v26 = v20 + v25;
      uint64_t v27 = v21 + v25;
      uint64_t v28 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v20, 0, 1, v22);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    sub_2535BC188();
LABEL_12:
    uint64_t v29 = sub_253462A5C(&qword_269CDCCC0);
    memcpy((void *)v20, (const void *)v21, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(unsigned char *)(v20 + 4) = *(unsigned char *)(v21 + 4);
  *(_DWORD *)(v20 + 8) = *(_DWORD *)(v21 + 8);
  *(unsigned char *)(v20 + 12) = *(unsigned char *)(v21 + 12);
  *(_DWORD *)(v20 + 16) = *(_DWORD *)(v21 + 16);
  *(unsigned char *)(v20 + 20) = *(unsigned char *)(v21 + 20);
  *(unsigned char *)(v20 + 28) = *(unsigned char *)(v21 + 28);
  *(_DWORD *)(v20 + 24) = *(_DWORD *)(v21 + 24);
  uint64_t v70 = *(int *)(v22 + 32);
  uint64_t v71 = v20 + v70;
  uint64_t v72 = v21 + v70;
  uint64_t v73 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 40))(v71, v72, v73);
LABEL_13:
  uint64_t v30 = a3[9];
  uint64_t v31 = a3[10];
  uint64_t v32 = (char *)a1 + v30;
  uint64_t v33 = (char *)a2 + v30;
  *(void *)uint64_t v32 = *(void *)v33;
  v32[8] = v33[8];
  uint64_t v34 = (void *)((char *)a1 + v31);
  uint64_t v35 = (void *)((char *)a2 + v31);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  *uint64_t v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *((unsigned char *)a1 + v38) = *((unsigned char *)a2 + v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = (uint64_t)a1 + v39;
  uint64_t v41 = (uint64_t)a2 + v39;
  int v42 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1 + v39, 1, v22);
  int v43 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v41, 1, v22);
  if (v42)
  {
    if (!v43)
    {
      *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
      *(unsigned char *)(v40 + 4) = *(unsigned char *)(v41 + 4);
      *(_DWORD *)(v40 + 8) = *(_DWORD *)(v41 + 8);
      *(unsigned char *)(v40 + 12) = *(unsigned char *)(v41 + 12);
      *(_DWORD *)(v40 + 16) = *(_DWORD *)(v41 + 16);
      *(unsigned char *)(v40 + 20) = *(unsigned char *)(v41 + 20);
      *(unsigned char *)(v40 + 28) = *(unsigned char *)(v41 + 28);
      *(_DWORD *)(v40 + 24) = *(_DWORD *)(v41 + 24);
      uint64_t v44 = *(int *)(v22 + 32);
      uint64_t v45 = v40 + v44;
      uint64_t v46 = v41 + v44;
      uint64_t v47 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v40, 0, 1, v22);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v43)
  {
    sub_2535BC188();
LABEL_18:
    uint64_t v48 = sub_253462A5C(&qword_269CDCCC0);
    memcpy((void *)v40, (const void *)v41, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_19;
  }
  *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
  *(unsigned char *)(v40 + 4) = *(unsigned char *)(v41 + 4);
  *(_DWORD *)(v40 + 8) = *(_DWORD *)(v41 + 8);
  *(unsigned char *)(v40 + 12) = *(unsigned char *)(v41 + 12);
  *(_DWORD *)(v40 + 16) = *(_DWORD *)(v41 + 16);
  *(unsigned char *)(v40 + 20) = *(unsigned char *)(v41 + 20);
  *(unsigned char *)(v40 + 28) = *(unsigned char *)(v41 + 28);
  *(_DWORD *)(v40 + 24) = *(_DWORD *)(v41 + 24);
  uint64_t v74 = *(int *)(v22 + 32);
  uint64_t v75 = v40 + v74;
  uint64_t v76 = v41 + v74;
  uint64_t v77 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 40))(v75, v76, v77);
LABEL_19:
  uint64_t v49 = a3[15];
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  uint64_t v50 = (void *)((char *)a1 + v49);
  uint64_t v51 = (void *)((char *)a2 + v49);
  uint64_t v52 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
  int v53 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v50, 1, v52);
  int v54 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v51, 1, v52);
  if (!v53)
  {
    if (!v54)
    {
      uint64_t v78 = v51[1];
      *uint64_t v50 = *v51;
      v50[1] = v78;
      swift_bridgeObjectRelease();
      uint64_t v79 = v51[3];
      v50[2] = v51[2];
      v50[3] = v79;
      swift_bridgeObjectRelease();
      uint64_t v80 = *(int *)(v52 + 24);
      int v81 = (char *)v50 + v80;
      int v82 = (char *)v51 + v80;
      uint64_t v83 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 40))(v81, v82, v83);
      goto LABEL_25;
    }
    sub_2535BC188();
    goto LABEL_24;
  }
  if (v54)
  {
LABEL_24:
    uint64_t v60 = sub_253462A5C(&qword_269CDF920);
    memcpy(v50, v51, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_25;
  }
  long long v55 = *((_OWORD *)v51 + 1);
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  *((_OWORD *)v50 + 1) = v55;
  uint64_t v56 = *(int *)(v52 + 24);
  int v57 = (char *)v50 + v56;
  int v58 = (char *)v51 + v56;
  uint64_t v59 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v50, 0, 1, v52);
LABEL_25:
  uint64_t v61 = a3[16];
  uint64_t v62 = (char *)a1 + v61;
  uint64_t v63 = (char *)a2 + v61;
  uint64_t v64 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 40))(v62, v63, v64);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoContextMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535C6E88);
}

uint64_t sub_2535C6E88()
{
  sub_2535E2298();
  if (v3) {
    return sub_2534F89A0(*v1);
  }
  sub_2535E2460();
  sub_253462A5C(&qword_269CDF900);
  sub_253486600();
  if (*(_DWORD *)(v5 + 84) == v0)
  {
    sub_2535E256C();
  }
  else
  {
    sub_253462A5C(&qword_269CDCCC0);
    sub_253486600();
    if (*(_DWORD *)(v7 + 84) == v0)
    {
      sub_2535E27E4();
    }
    else
    {
      sub_253462A5C(&qword_269CDF920);
      sub_253486600();
      if (*(_DWORD *)(v8 + 84) == v0)
      {
        uint64_t v6 = *(int *)(v2 + 60);
      }
      else
      {
        sub_253B07160();
        uint64_t v6 = *(int *)(v2 + 64);
      }
    }
  }
  uint64_t v9 = sub_2535E22C8(v6);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, v10, v11);
}

uint64_t storeEnumTagSinglePayload for ContextProtoContextMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535C6F78);
}

void sub_2535C6F78()
{
  sub_2535E2244();
  if (v2)
  {
    sub_2535E2538();
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_269CDF900);
    sub_253486600();
    if (*(_DWORD *)(v3 + 84) == v1)
    {
      sub_2535E26E4();
    }
    else
    {
      sub_253462A5C(&qword_269CDCCC0);
      sub_253486600();
      if (*(_DWORD *)(v5 + 84) == v1)
      {
        sub_2535E2830();
      }
      else
      {
        sub_253462A5C(&qword_269CDF920);
        sub_253486600();
        if (*(_DWORD *)(v6 + 84) == v1)
        {
          uint64_t v4 = *(int *)(v0 + 60);
        }
        else
        {
          sub_253B07160();
          uint64_t v4 = *(int *)(v0 + 64);
        }
      }
    }
    uint64_t v7 = sub_2535E2234(v4);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, v8, v9, v10);
  }
}

void sub_2535C7050()
{
  sub_2535C4EF0(319, &qword_269CE00B8, (void (*)(uint64_t))type metadata accessor for ContextProtoConfidence);
  if (v0 <= 0x3F)
  {
    sub_2535C4EF0(319, &qword_269CE00E0, (void (*)(uint64_t))type metadata accessor for ContextProtoBoundingBox);
    if (v1 <= 0x3F)
    {
      sub_2535C4EF0(319, &qword_269CE00E8, (void (*)(uint64_t))type metadata accessor for ContextProtoContextualEntityDisplayRepresentation);
      if (v2 <= 0x3F)
      {
        sub_253B07160();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoContextualEntityDisplayRepresentation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_253B07160();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for ContextProtoContextualEntityDisplayRepresentation(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_253B07160();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for ContextProtoContextualEntityDisplayRepresentation(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B07160();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

void *assignWithCopy for ContextProtoContextualEntityDisplayRepresentation(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for ContextProtoContextualEntityDisplayRepresentation(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *assignWithTake for ContextProtoContextualEntityDisplayRepresentation(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoContextualEntityDisplayRepresentation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535C762C);
}

uint64_t sub_2535C762C()
{
  sub_2535E240C();
  if (v2) {
    return sub_2535E2258(*(void *)(v0 + 8));
  }
  sub_2535E22D4();
  uint64_t v4 = sub_2535E22C8(*(int *)(v1 + 24));
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for ContextProtoContextualEntityDisplayRepresentation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535C76A4);
}

void sub_2535C76A4()
{
  sub_2535E2308();
  if (v1)
  {
    sub_2535E2590();
  }
  else
  {
    sub_2535E235C();
    uint64_t v2 = sub_2535E2234(*(int *)(v0 + 24));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, v3, v4, v5);
  }
}

uint64_t sub_2535C7704()
{
  return sub_2535DC13C();
}

void *initializeBufferWithCopyOfBuffer for ContextProtoBoundingBox(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    *(unsigned char *)(a1 + 20) = *((unsigned char *)a2 + 20);
    *(unsigned char *)(a1 + 28) = *((unsigned char *)a2 + 28);
    uint64_t v5 = *(int *)(a3 + 32);
    uint64_t v6 = (uint64_t)a2 + v5;
    uint64_t v7 = a1 + v5;
    *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
    uint64_t v8 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v7, v6, v8);
  }
  return v3;
}

uint64_t destroy for ContextProtoBoundingBox(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 32);
  uint64_t v3 = sub_253B07160();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

uint64_t initializeWithCopy for ContextProtoBoundingBox(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = a2 + v4;
  uint64_t v6 = a1 + v4;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v7 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6, v5, v7);
  return a1;
}

uint64_t assignWithCopy for ContextProtoBoundingBox(uint64_t a1, int *a2, uint64_t a3)
{
  int v4 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v4;
  int v5 = a2[2];
  *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
  *(_DWORD *)(a1 + 8) = v5;
  int v6 = a2[4];
  *(unsigned char *)(a1 + 20) = *((unsigned char *)a2 + 20);
  *(_DWORD *)(a1 + 16) = v6;
  int v7 = a2[6];
  *(unsigned char *)(a1 + 28) = *((unsigned char *)a2 + 28);
  *(_DWORD *)(a1 + 24) = v7;
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (uint64_t)a2 + v8;
  uint64_t v11 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t initializeWithTake for ContextProtoBoundingBox(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = a2 + v4;
  uint64_t v6 = a1 + v4;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v7 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v6, v5, v7);
  return a1;
}

uint64_t assignWithTake for ContextProtoBoundingBox(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = a2 + v4;
  uint64_t v6 = a1 + v4;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v7 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v6, v5, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoBoundingBox(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535C7B64);
}

uint64_t sub_2535C7B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 32);
  uint64_t v5 = sub_253B07160();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for ContextProtoBoundingBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535C7BC4);
}

uint64_t sub_2535C7BC4()
{
  sub_253B07160();
  sub_2535E228C();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v0, v1, v2, v3);
}

uint64_t sub_2535C7C10()
{
  return sub_2535D0BB4();
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoSurroundingText(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (_DWORD *)((char *)a1 + v8);
    uint64_t v10 = (_DWORD *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for ContextProtoBoundingBox(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CDCCC0);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      _DWORD *v9 = *v10;
      *((unsigned char *)v9 + 4) = *((unsigned char *)v10 + 4);
      void v9[2] = v10[2];
      *((unsigned char *)v9 + 12) = *((unsigned char *)v10 + 12);
      v9[4] = v10[4];
      *((unsigned char *)v9 + 20) = *((unsigned char *)v10 + 20);
      *((unsigned char *)v9 + 28) = *((unsigned char *)v10 + 28);
      v9[6] = v10[6];
      uint64_t v14 = *(int *)(v11 + 32);
      uint64_t v15 = (char *)v9 + v14;
      uint64_t v16 = (char *)v10 + v14;
      uint64_t v17 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v18 = *(int *)(a3 + 24);
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return v4;
}

uint64_t destroy for ContextProtoSurroundingText(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for ContextProtoBoundingBox(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    uint64_t v6 = v4 + *(int *)(v5 + 32);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  uint64_t v9 = sub_253B07160();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  return v10(v8, v9);
}

void *initializeWithCopy for ContextProtoSurroundingText(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_DWORD *)((char *)a1 + v7);
  uint64_t v9 = (_DWORD *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for ContextProtoBoundingBox(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_269CDCCC0);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *uint64_t v8 = *v9;
    *((unsigned char *)v8 + 4) = *((unsigned char *)v9 + 4);
    v8[2] = v9[2];
    *((unsigned char *)v8 + 12) = *((unsigned char *)v9 + 12);
    v8[4] = v9[4];
    *((unsigned char *)v8 + 20) = *((unsigned char *)v9 + 20);
    *((unsigned char *)v8 + 28) = *((unsigned char *)v9 + 28);
    v8[6] = v9[6];
    uint64_t v12 = *(int *)(v10 + 32);
    uint64_t v13 = (char *)v8 + v12;
    uint64_t v14 = (char *)v9 + v12;
    uint64_t v15 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

void *assignWithCopy for ContextProtoSurroundingText(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (uint64_t)a1 + v6;
  uint64_t v8 = (uint64_t)a2 + v6;
  uint64_t v9 = type metadata accessor for ContextProtoBoundingBox(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      int v26 = *(_DWORD *)v8;
      *(unsigned char *)(v7 + 4) = *(unsigned char *)(v8 + 4);
      *(_DWORD *)uint64_t v7 = v26;
      int v27 = *(_DWORD *)(v8 + 8);
      *(unsigned char *)(v7 + 12) = *(unsigned char *)(v8 + 12);
      *(_DWORD *)(v7 + 8) = v27;
      int v28 = *(_DWORD *)(v8 + 16);
      *(unsigned char *)(v7 + 20) = *(unsigned char *)(v8 + 20);
      *(_DWORD *)(v7 + 16) = v28;
      int v29 = *(_DWORD *)(v8 + 24);
      *(unsigned char *)(v7 + 28) = *(unsigned char *)(v8 + 28);
      *(_DWORD *)(v7 + 24) = v29;
      uint64_t v30 = *(int *)(v9 + 32);
      uint64_t v31 = v7 + v30;
      uint64_t v32 = v8 + v30;
      uint64_t v33 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 24))(v31, v32, v33);
      goto LABEL_7;
    }
    sub_2535BC188();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v20 = sub_253462A5C(&qword_269CDCCC0);
    memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  int v12 = *(_DWORD *)v8;
  *(unsigned char *)(v7 + 4) = *(unsigned char *)(v8 + 4);
  *(_DWORD *)uint64_t v7 = v12;
  int v13 = *(_DWORD *)(v8 + 8);
  *(unsigned char *)(v7 + 12) = *(unsigned char *)(v8 + 12);
  *(_DWORD *)(v7 + 8) = v13;
  int v14 = *(_DWORD *)(v8 + 16);
  *(unsigned char *)(v7 + 20) = *(unsigned char *)(v8 + 20);
  *(_DWORD *)(v7 + 16) = v14;
  int v15 = *(_DWORD *)(v8 + 24);
  *(unsigned char *)(v7 + 28) = *(unsigned char *)(v8 + 28);
  *(_DWORD *)(v7 + 24) = v15;
  uint64_t v16 = *(int *)(v9 + 32);
  uint64_t v17 = v7 + v16;
  uint64_t v18 = v8 + v16;
  uint64_t v19 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, 0, 1, v9);
LABEL_7:
  uint64_t v21 = *(int *)(a3 + 24);
  uint64_t v22 = (char *)a1 + v21;
  int v23 = (char *)a2 + v21;
  uint64_t v24 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  return a1;
}

_OWORD *initializeWithTake for ContextProtoSurroundingText(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (_DWORD *)((char *)a1 + v6);
  uint64_t v8 = (_DWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for ContextProtoBoundingBox(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CDCCC0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *uint64_t v7 = *v8;
    *((unsigned char *)v7 + 4) = *((unsigned char *)v8 + 4);
    uint64_t v7[2] = v8[2];
    *((unsigned char *)v7 + 12) = *((unsigned char *)v8 + 12);
    v7[4] = v8[4];
    *((unsigned char *)v7 + 20) = *((unsigned char *)v8 + 20);
    *((unsigned char *)v7 + 28) = *((unsigned char *)v8 + 28);
    v7[6] = v8[6];
    uint64_t v11 = *(int *)(v9 + 32);
    int v12 = (char *)v7 + v11;
    int v13 = (char *)v8 + v11;
    uint64_t v14 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

void *assignWithTake for ContextProtoSurroundingText(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t)a1 + v7;
  uint64_t v9 = (uint64_t)a2 + v7;
  uint64_t v10 = type metadata accessor for ContextProtoBoundingBox(0);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v10);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, 1, v10);
  if (!v11)
  {
    if (!v12)
    {
      *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
      *(unsigned char *)(v8 + 4) = *(unsigned char *)(v9 + 4);
      *(_DWORD *)(v8 + 8) = *(_DWORD *)(v9 + 8);
      *(unsigned char *)(v8 + 12) = *(unsigned char *)(v9 + 12);
      *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
      *(unsigned char *)(v8 + 20) = *(unsigned char *)(v9 + 20);
      *(unsigned char *)(v8 + 28) = *(unsigned char *)(v9 + 28);
      *(_DWORD *)(v8 + 24) = *(_DWORD *)(v9 + 24);
      uint64_t v23 = *(int *)(v10 + 32);
      uint64_t v24 = v8 + v23;
      uint64_t v25 = v9 + v23;
      uint64_t v26 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_2535BC188();
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v17 = sub_253462A5C(&qword_269CDCCC0);
    memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(unsigned char *)(v8 + 4) = *(unsigned char *)(v9 + 4);
  *(_DWORD *)(v8 + 8) = *(_DWORD *)(v9 + 8);
  *(unsigned char *)(v8 + 12) = *(unsigned char *)(v9 + 12);
  *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
  *(unsigned char *)(v8 + 20) = *(unsigned char *)(v9 + 20);
  *(unsigned char *)(v8 + 28) = *(unsigned char *)(v9 + 28);
  *(_DWORD *)(v8 + 24) = *(_DWORD *)(v9 + 24);
  uint64_t v13 = *(int *)(v10 + 32);
  uint64_t v14 = v8 + v13;
  uint64_t v15 = v9 + v13;
  uint64_t v16 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v8, 0, 1, v10);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoSurroundingText(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535C86DC);
}

uint64_t sub_2535C86DC()
{
  sub_2535E240C();
  if (v2) {
    return sub_2535E2258(*(void *)(v1 + 8));
  }
  sub_2535E2460();
  sub_253462A5C(&qword_269CDCCC0);
  sub_253486600();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    sub_2535E263C();
  }
  else
  {
    sub_253B07160();
    sub_2535E2560();
  }
  uint64_t v6 = sub_2535E22C8(v5);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, v7, v8);
}

uint64_t storeEnumTagSinglePayload for ContextProtoSurroundingText(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535C877C);
}

void sub_2535C877C()
{
  sub_2535E2308();
  if (v1)
  {
    sub_2535E2590();
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_269CDCCC0);
    sub_253486600();
    if (*(_DWORD *)(v2 + 84) == v0)
    {
      sub_2535E272C();
    }
    else
    {
      sub_253B07160();
      sub_2535E26D8();
    }
    uint64_t v4 = sub_2535E2234(v3);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, v5, v6, v7);
  }
}

void sub_2535C8804(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void *initializeBufferWithCopyOfBuffer for ContextProtoConfidence(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for ContextProtoConfidence(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_253B07160();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

uint64_t initializeWithCopy for ContextProtoConfidence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for ContextProtoConfidence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for ContextProtoConfidence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ContextProtoConfidence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoConfidence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535C8B8C);
}

uint64_t sub_2535C8B8C(uint64_t a1, int a2)
{
  if (a2 == 253)
  {
    unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
    if (v3 >= 3) {
      return v3 - 2;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_2535E22D4();
    uint64_t v5 = sub_2535E22C8(*(int *)(v2 + 24));
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v5, v6, v7);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoConfidence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535C8C10);
}

void sub_2535C8C10()
{
  sub_2534DA0C4();
  if (v3 == 253)
  {
    *(unsigned char *)(v1 + 4) = v0 + 2;
  }
  else
  {
    sub_2535E235C();
    uint64_t v4 = sub_2535E2234(*(int *)(v2 + 24));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, v5, v6, v7);
  }
}

uint64_t sub_2535C8C78()
{
  return sub_2535DC13C();
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoStructuredContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ContextProtoStructuredContextKind(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CDF958);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v105 = v7;
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v18 = a2[1];
        *a1 = *a2;
        a1[1] = v18;
        uint64_t v19 = a2[3];
        a1[2] = a2[2];
        a1[3] = v19;
        uint64_t v20 = a2[5];
        a1[4] = a2[4];
        a1[5] = v20;
        uint64_t v21 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
        int v103 = (char *)a1 + v21;
        uint64_t v22 = (char *)a2 + v21;
        uint64_t v23 = sub_253B07160();
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
        uint64_t v17 = v105;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v24(v103, v22, v23);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v12 = a2[4];
        a1[3] = a2[3];
        a1[4] = v12;
        uint64_t v13 = a2[6];
        a1[5] = a2[5];
        a1[6] = v13;
        uint64_t v14 = a2[8];
        a1[7] = a2[7];
        a1[8] = v14;
        a1[9] = a2[9];
        uint64_t v15 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
        __dsta = (char *)a2 + v15;
        uint64_t v102 = (char *)a1 + v15;
        uint64_t v16 = sub_253B07160();
        int v95 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
        uint64_t v17 = v105;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v95(v102, __dsta, v16);
      }
      else
      {
        uint64_t v25 = a2[1];
        *a1 = *a2;
        a1[1] = v25;
        uint64_t v26 = a2[3];
        a1[2] = a2[2];
        a1[3] = v26;
        uint64_t v27 = a2[5];
        a1[4] = a2[4];
        a1[5] = v27;
        uint64_t v28 = a2[7];
        a1[6] = a2[6];
        a1[7] = v28;
        uint64_t v29 = a2[9];
        a1[8] = a2[8];
        a1[9] = v29;
        *((_DWORD *)a1 + 20) = *((_DWORD *)a2 + 20);
        *((unsigned char *)a1 + 84) = *((unsigned char *)a2 + 84);
        uint64_t v30 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
        uint64_t v31 = *(int *)(v30 + 60);
        __dst = (uint64_t *)((char *)a1 + v31);
        uint64_t v104 = (int *)v30;
        uint64_t v32 = (uint64_t *)((char *)a2 + v31);
        uint64_t v33 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v34 = v33;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v32, 1, v33))
        {
          uint64_t v35 = sub_253462A5C(&qword_269CDF998);
          memcpy(__dst, v32, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          uint64_t v36 = v32[1];
          void *__dst = *v32;
          __dst[1] = v36;
          *((_WORD *)__dst + 8) = *((_WORD *)v32 + 8);
          uint64_t v37 = *(int *)(v34 + 28);
          uint64_t v96 = (char *)__dst + v37;
          uint64_t v38 = (char *)v32 + v37;
          uint64_t v39 = sub_253B07160();
          uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
          swift_bridgeObjectRetain();
          v40(v96, v38, v39);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v34);
        }
        uint64_t v41 = v104;
        uint64_t v42 = v104[16];
        int v43 = (char *)a1 + v42;
        uint64_t v44 = (char *)a2 + v42;
        unint64_t v45 = *((void *)v44 + 1);
        if (v45 >> 60 == 15)
        {
          *(_OWORD *)int v43 = *(_OWORD *)v44;
        }
        else
        {
          uint64_t v46 = *(void *)v44;
          sub_25348A9C8(*(void *)v44, *((void *)v44 + 1));
          *(void *)int v43 = v46;
          *((void *)v43 + 1) = v45;
        }
        uint64_t v47 = v104[17];
        uint64_t v48 = (uint64_t *)((char *)a1 + v47);
        uint64_t v49 = (uint64_t *)((char *)a2 + v47);
        uint64_t v50 = v49[1];
        *uint64_t v48 = *v49;
        v48[1] = v50;
        uint64_t v51 = v104[18];
        uint64_t v52 = (uint64_t *)((char *)a1 + v51);
        int v53 = (uint64_t *)((char *)a2 + v51);
        uint64_t v54 = v53[1];
        *uint64_t v52 = *v53;
        v52[1] = v54;
        uint64_t v55 = v104[19];
        uint64_t v56 = (_DWORD *)((char *)a1 + v55);
        int v57 = (_DWORD *)((char *)a2 + v55);
        uint64_t v58 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v57, 1, v58))
        {
          uint64_t v59 = sub_253462A5C(&qword_269CDF988);
          memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          *uint64_t v56 = *v57;
          *((unsigned char *)v56 + 4) = *((unsigned char *)v57 + 4);
          uint64_t v60 = *((void *)v57 + 2);
          *((void *)v56 + 1) = *((void *)v57 + 1);
          *((void *)v56 + 2) = v60;
          v56[6] = v57[6];
          *((unsigned char *)v56 + 28) = *((unsigned char *)v57 + 28);
          v56[8] = v57[8];
          *((unsigned char *)v56 + 36) = *((unsigned char *)v57 + 36);
          uint64_t v61 = *(int *)(v58 + 32);
          __dstb = (char *)v56 + v61;
          uint64_t v62 = (char *)v57 + v61;
          uint64_t v63 = sub_253B07160();
          uint64_t v64 = *(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v65 = v62;
          uint64_t v41 = v104;
          v64(__dstb, v65, v63);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v56, 0, 1, v58);
        }
        uint64_t v66 = v41[20];
        uint64_t v67 = (char *)a1 + v66;
        uint64_t v68 = (char *)a2 + v66;
        *(void *)uint64_t v67 = *(void *)v68;
        v67[8] = v68[8];
        uint64_t v69 = v41[21];
        uint64_t v70 = (uint64_t *)((char *)a1 + v69);
        uint64_t v71 = (uint64_t *)((char *)a2 + v69);
        uint64_t v72 = v71[1];
        *uint64_t v70 = *v71;
        v70[1] = v72;
        *((unsigned char *)a1 + v41[22]) = *((unsigned char *)a2 + v41[22]);
        *((unsigned char *)a1 + v41[23]) = *((unsigned char *)a2 + v41[23]);
        uint64_t v73 = v41[24];
        uint64_t v74 = (uint64_t *)((char *)a1 + v73);
        uint64_t v75 = (uint64_t *)((char *)a2 + v73);
        uint64_t v76 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v75, 1, v76))
        {
          uint64_t v77 = sub_253462A5C(&qword_269CDF978);
          memcpy(v74, v75, *(void *)(*(void *)(v77 - 8) + 64));
        }
        else
        {
          uint64_t v78 = v75[1];
          *uint64_t v74 = *v75;
          v74[1] = v78;
          uint64_t v79 = v75[3];
          v74[2] = v75[2];
          v74[3] = v79;
          uint64_t v80 = v75[5];
          v74[4] = v75[4];
          v74[5] = v80;
          uint64_t v81 = v75[7];
          v74[6] = v75[6];
          v74[7] = v81;
          uint64_t v82 = v75[9];
          v74[8] = v75[8];
          v74[9] = v82;
          v74[10] = v75[10];
          uint64_t v83 = *(int *)(v76 + 40);
          uint64_t v97 = (char *)v75 + v83;
          __dstc = (char *)v74 + v83;
          uint64_t v84 = sub_253B07160();
          int v94 = *(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v41 = v104;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v94(__dstc, v97, v84);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v74, 0, 1, v76);
        }
        *((unsigned char *)a1 + v41[25]) = *((unsigned char *)a2 + v41[25]);
        *((unsigned char *)a1 + v41[26]) = *((unsigned char *)a2 + v41[26]);
        uint64_t v85 = v41[27];
        uint64_t v86 = (char *)a1 + v85;
        uint64_t v87 = (char *)a2 + v85;
        uint64_t v88 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v86, v87, v88);
        uint64_t v17 = v105;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v17);
    }
    uint64_t v89 = *(int *)(a3 + 20);
    uint64_t v90 = (char *)a1 + v89;
    uint64_t v91 = (char *)a2 + v89;
    uint64_t v92 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 16))(v90, v91, v92);
  }
  return a1;
}

uint64_t destroy for ContextProtoStructuredContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContextProtoStructuredContextKind(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
    }
    else
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_17;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
      uint64_t v7 = a1 + v6[15];
      uint64_t v8 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v8))
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = v7 + *(int *)(v8 + 28);
        uint64_t v10 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
      }
      uint64_t v11 = (uint64_t *)(a1 + v6[16]);
      unint64_t v12 = v11[1];
      if (v12 >> 60 != 15) {
        sub_253487D84(*v11, v12);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = a1 + v6[19];
      uint64_t v14 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v13, 1, v14))
      {
        swift_bridgeObjectRelease();
        uint64_t v15 = v13 + *(int *)(v14 + 32);
        uint64_t v16 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
      }
      swift_bridgeObjectRelease();
      uint64_t v17 = a1 + v6[24];
      uint64_t v18 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v17, 1, v18))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v19 = v17 + *(int *)(v18 + 40);
        uint64_t v20 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
      }
      uint64_t v21 = v6[27];
    }
    uint64_t v22 = a1 + v21;
    uint64_t v23 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  }
LABEL_17:
  uint64_t v24 = a1 + *(int *)(a2 + 20);
  uint64_t v25 = sub_253B07160();
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8);
  return v26(v24, v25);
}

void *initializeWithCopy for ContextProtoStructuredContext(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ContextProtoStructuredContextKind(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CDF958);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      uint64_t v16 = a2[3];
      a1[2] = a2[2];
      a1[3] = v16;
      uint64_t v17 = a2[5];
      a1[4] = a2[4];
      a1[5] = v17;
      uint64_t v18 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
      __dstb = (char *)a2 + v18;
      int v94 = (char *)a1 + v18;
      uint64_t v19 = sub_253B07160();
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20(v94, __dstb, v19);
    }
    else
    {
      uint64_t v100 = a3;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v10 = a2[4];
        a1[3] = a2[3];
        a1[4] = v10;
        uint64_t v11 = a2[6];
        a1[5] = a2[5];
        a1[6] = v11;
        uint64_t v12 = a2[8];
        a1[7] = a2[7];
        a1[8] = v12;
        a1[9] = a2[9];
        uint64_t v13 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
        uint64_t v93 = (char *)a2 + v13;
        uint64_t v98 = (char *)a1 + v13;
        uint64_t v14 = sub_253B07160();
        __dsta = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __dsta(v98, v93, v14);
      }
      else
      {
        uint64_t v21 = a2[1];
        *a1 = *a2;
        a1[1] = v21;
        uint64_t v22 = a2[3];
        a1[2] = a2[2];
        a1[3] = v22;
        uint64_t v23 = a2[5];
        a1[4] = a2[4];
        a1[5] = v23;
        uint64_t v24 = a2[7];
        a1[6] = a2[6];
        a1[7] = v24;
        uint64_t v25 = a2[9];
        a1[8] = a2[8];
        a1[9] = v25;
        *((_DWORD *)a1 + 20) = *((_DWORD *)a2 + 20);
        *((unsigned char *)a1 + 84) = *((unsigned char *)a2 + 84);
        uint64_t v99 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
        uint64_t v26 = v99[15];
        __dst = (void *)((char *)a1 + v26);
        uint64_t v27 = (void *)((char *)a2 + v26);
        uint64_t v28 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v29 = v28;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v28))
        {
          uint64_t v30 = sub_253462A5C(&qword_269CDF998);
          memcpy(__dst, v27, *(void *)(*(void *)(v30 - 8) + 64));
        }
        else
        {
          uint64_t v31 = v27[1];
          void *__dst = *v27;
          __dst[1] = v31;
          *((_WORD *)__dst + 8) = *((_WORD *)v27 + 8);
          uint64_t v32 = *(int *)(v29 + 28);
          int v95 = (char *)__dst + v32;
          uint64_t v33 = (char *)v27 + v32;
          uint64_t v34 = sub_253B07160();
          uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
          swift_bridgeObjectRetain();
          v35(v95, v33, v34);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v29);
        }
        uint64_t v36 = v99;
        uint64_t v37 = v99[16];
        uint64_t v38 = (char *)a1 + v37;
        uint64_t v39 = (char *)a2 + v37;
        unint64_t v40 = *((void *)v39 + 1);
        if (v40 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
        }
        else
        {
          uint64_t v41 = *(void *)v39;
          sub_25348A9C8(*(void *)v39, *((void *)v39 + 1));
          *(void *)uint64_t v38 = v41;
          *((void *)v38 + 1) = v40;
        }
        uint64_t v42 = v99[17];
        int v43 = (void *)((char *)a1 + v42);
        uint64_t v44 = (void *)((char *)a2 + v42);
        uint64_t v45 = v44[1];
        *int v43 = *v44;
        v43[1] = v45;
        uint64_t v46 = v99[18];
        uint64_t v47 = (void *)((char *)a1 + v46);
        uint64_t v48 = (void *)((char *)a2 + v46);
        uint64_t v49 = v48[1];
        void *v47 = *v48;
        v47[1] = v49;
        uint64_t v50 = v99[19];
        uint64_t v51 = (_DWORD *)((char *)a1 + v50);
        uint64_t v52 = (_DWORD *)((char *)a2 + v50);
        uint64_t v53 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v53))
        {
          uint64_t v54 = sub_253462A5C(&qword_269CDF988);
          memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          *uint64_t v51 = *v52;
          *((unsigned char *)v51 + 4) = *((unsigned char *)v52 + 4);
          uint64_t v55 = *((void *)v52 + 2);
          *((void *)v51 + 1) = *((void *)v52 + 1);
          *((void *)v51 + 2) = v55;
          v51[6] = v52[6];
          *((unsigned char *)v51 + 28) = *((unsigned char *)v52 + 28);
          v51[8] = v52[8];
          *((unsigned char *)v51 + 36) = *((unsigned char *)v52 + 36);
          uint64_t v56 = *(int *)(v53 + 32);
          uint64_t v96 = (char *)v51 + v56;
          int v57 = (char *)v52 + v56;
          uint64_t v58 = sub_253B07160();
          uint64_t v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16);
          swift_bridgeObjectRetain();
          v59(v96, v57, v58);
          uint64_t v36 = v99;
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v51, 0, 1, v53);
        }
        uint64_t v60 = v36[20];
        uint64_t v61 = (char *)a1 + v60;
        uint64_t v62 = (char *)a2 + v60;
        *(void *)uint64_t v61 = *(void *)v62;
        v61[8] = v62[8];
        uint64_t v63 = v36[21];
        uint64_t v64 = (void *)((char *)a1 + v63);
        uint64_t v65 = (void *)((char *)a2 + v63);
        uint64_t v66 = v65[1];
        void *v64 = *v65;
        v64[1] = v66;
        *((unsigned char *)a1 + v36[22]) = *((unsigned char *)a2 + v36[22]);
        *((unsigned char *)a1 + v36[23]) = *((unsigned char *)a2 + v36[23]);
        uint64_t v67 = v36[24];
        uint64_t v68 = (void *)((char *)a1 + v67);
        uint64_t v69 = (void *)((char *)a2 + v67);
        uint64_t v70 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v69, 1, v70))
        {
          uint64_t v71 = sub_253462A5C(&qword_269CDF978);
          memcpy(v68, v69, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          uint64_t v72 = v69[1];
          *uint64_t v68 = *v69;
          v68[1] = v72;
          uint64_t v73 = v69[3];
          v68[2] = v69[2];
          v68[3] = v73;
          uint64_t v74 = v69[5];
          v68[4] = v69[4];
          v68[5] = v74;
          uint64_t v75 = v69[7];
          v68[6] = v69[6];
          v68[7] = v75;
          uint64_t v76 = v69[9];
          v68[8] = v69[8];
          v68[9] = v76;
          v68[10] = v69[10];
          uint64_t v77 = *(int *)(v70 + 40);
          __dstc = (char *)v69 + v77;
          uint64_t v97 = (char *)v68 + v77;
          uint64_t v78 = sub_253B07160();
          uint64_t v88 = *(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v36 = v99;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v88(v97, __dstc, v78);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v68, 0, 1, v70);
        }
        a3 = v100;
        *((unsigned char *)a1 + v36[25]) = *((unsigned char *)a2 + v36[25]);
        *((unsigned char *)a1 + v36[26]) = *((unsigned char *)a2 + v36[26]);
        uint64_t v79 = v36[27];
        uint64_t v80 = (char *)a1 + v79;
        uint64_t v81 = (char *)a2 + v79;
        uint64_t v82 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16))(v80, v81, v82);
      }
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v83 = *(int *)(a3 + 20);
  uint64_t v84 = (char *)a1 + v83;
  uint64_t v85 = (char *)a2 + v83;
  uint64_t v86 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v84, v85, v86);
  return a1;
}

uint64_t assignWithCopy for ContextProtoStructuredContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ContextProtoStructuredContextKind(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        uint64_t v16 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
        __dstc = (void *)(a2 + v16);
        uint64_t v148 = (void *)(a1 + v16);
        uint64_t v17 = sub_253B07160();
        uint64_t v18 = *(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v18(v148, __dstc, v17);
      }
      else
      {
        uint64_t v156 = a3;
        if (EnumCaseMultiPayload == 1)
        {
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          uint64_t v10 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
          __dsta = (void *)(a2 + v10);
          int v146 = (void *)(a1 + v10);
          uint64_t v11 = sub_253B07160();
          uint64_t v135 = *(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v135(v146, __dsta, v11);
        }
        else
        {
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
          *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
          *(unsigned char *)(a1 + 82) = *(unsigned char *)(a2 + 82);
          *(unsigned char *)(a1 + 83) = *(unsigned char *)(a2 + 83);
          *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
          uint64_t v19 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
          uint64_t v20 = *(int *)(v19 + 60);
          __dst = (void *)(a1 + v20);
          uint64_t v149 = (int *)v19;
          uint64_t v21 = (void *)(a2 + v20);
          uint64_t v22 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v22))
          {
            uint64_t v23 = sub_253462A5C(&qword_269CDF998);
            memcpy(__dst, v21, *(void *)(*(void *)(v23 - 8) + 64));
          }
          else
          {
            void *__dst = *v21;
            __dst[1] = v21[1];
            *((unsigned char *)__dst + 16) = *((unsigned char *)v21 + 16);
            *((unsigned char *)__dst + 17) = *((unsigned char *)v21 + 17);
            uint64_t v34 = *(int *)(v22 + 28);
            uint64_t v136 = (char *)__dst + v34;
            uint64_t v35 = (char *)v21 + v34;
            uint64_t v36 = sub_253B07160();
            uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
            swift_bridgeObjectRetain();
            v37(v136, v35, v36);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v22);
          }
          uint64_t v38 = v149;
          uint64_t v39 = v149[16];
          uint64_t v40 = a1 + v39;
          uint64_t v41 = (uint64_t *)(a2 + v39);
          unint64_t v42 = v41[1];
          if (v42 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
          }
          else
          {
            uint64_t v43 = *v41;
            sub_25348A9C8(*v41, v41[1]);
            *(void *)uint64_t v40 = v43;
            *(void *)(v40 + 8) = v42;
          }
          uint64_t v44 = v149[17];
          uint64_t v45 = (void *)(a1 + v44);
          uint64_t v46 = (void *)(a2 + v44);
          *uint64_t v45 = *v46;
          v45[1] = v46[1];
          uint64_t v47 = v149[18];
          uint64_t v48 = (void *)(a1 + v47);
          uint64_t v49 = (void *)(a2 + v47);
          *uint64_t v48 = *v49;
          v48[1] = v49[1];
          uint64_t v50 = v149[19];
          uint64_t v51 = (_DWORD *)(a1 + v50);
          uint64_t v52 = (int *)(a2 + v50);
          uint64_t v53 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v53))
          {
            uint64_t v54 = sub_253462A5C(&qword_269CDF988);
            memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
          }
          else
          {
            int v55 = *v52;
            *((unsigned char *)v51 + 4) = *((unsigned char *)v52 + 4);
            *uint64_t v51 = v55;
            *((void *)v51 + 1) = *((void *)v52 + 1);
            *((void *)v51 + 2) = *((void *)v52 + 2);
            int v56 = v52[6];
            *((unsigned char *)v51 + 28) = *((unsigned char *)v52 + 28);
            v51[6] = v56;
            int v57 = v52[8];
            *((unsigned char *)v51 + 36) = *((unsigned char *)v52 + 36);
            v51[8] = v57;
            uint64_t v58 = *(int *)(v53 + 32);
            __dstd = (char *)v51 + v58;
            uint64_t v59 = (char *)v52 + v58;
            uint64_t v60 = sub_253B07160();
            uint64_t v61 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v62 = v59;
            uint64_t v38 = v149;
            v61(__dstd, v62, v60);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v51, 0, 1, v53);
          }
          uint64_t v63 = v38[20];
          uint64_t v64 = a1 + v63;
          uint64_t v65 = (uint64_t *)(a2 + v63);
          uint64_t v66 = *v65;
          *(unsigned char *)(v64 + 8) = *((unsigned char *)v65 + 8);
          *(void *)uint64_t v64 = v66;
          uint64_t v67 = v38[21];
          uint64_t v68 = (void *)(a1 + v67);
          uint64_t v69 = (void *)(a2 + v67);
          *uint64_t v68 = *v69;
          v68[1] = v69[1];
          *(unsigned char *)(a1 + v38[22]) = *(unsigned char *)(a2 + v38[22]);
          *(unsigned char *)(a1 + v38[23]) = *(unsigned char *)(a2 + v38[23]);
          uint64_t v70 = v38[24];
          uint64_t v71 = (void *)(a1 + v70);
          uint64_t v72 = (void *)(a2 + v70);
          uint64_t v73 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v72, 1, v73))
          {
            uint64_t v74 = sub_253462A5C(&qword_269CDF978);
            memcpy(v71, v72, *(void *)(*(void *)(v74 - 8) + 64));
          }
          else
          {
            *uint64_t v71 = *v72;
            v71[1] = v72[1];
            v71[2] = v72[2];
            v71[3] = v72[3];
            v71[4] = v72[4];
            v71[5] = v72[5];
            v71[6] = v72[6];
            v71[7] = v72[7];
            v71[8] = v72[8];
            v71[9] = v72[9];
            v71[10] = v72[10];
            uint64_t v75 = *(int *)(v73 + 40);
            uint64_t v137 = (char *)v72 + v75;
            __dste = (char *)v71 + v75;
            uint64_t v76 = sub_253B07160();
            uint64_t v133 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v38 = v149;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v133(__dste, v137, v76);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v71, 0, 1, v73);
          }
          *(unsigned char *)(a1 + v38[25]) = *(unsigned char *)(a2 + v38[25]);
          *(unsigned char *)(a1 + v38[26]) = *(unsigned char *)(a2 + v38[26]);
          uint64_t v77 = v38[27];
          uint64_t v78 = a1 + v77;
          uint64_t v79 = a2 + v77;
          uint64_t v80 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 16))(v78, v79, v80);
          a3 = v156;
        }
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v6);
      goto LABEL_43;
    }
LABEL_8:
    uint64_t v12 = sub_253462A5C(&qword_269CDF958);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v12 - 8) + 64));
    goto LABEL_43;
  }
  if (v8)
  {
    sub_2535BC188();
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_2535BC188();
    int v13 = swift_getEnumCaseMultiPayload();
    uint64_t v157 = a3;
    if (v13 == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      uint64_t v24 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
      uint64_t v154 = a1 + v24;
      uint64_t v25 = a2 + v24;
      uint64_t v26 = sub_253B07160();
      uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v27(v154, v25, v26);
    }
    else if (v13 == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      uint64_t v14 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
      int v147 = (void *)(a2 + v14);
      uint64_t v153 = a1 + v14;
      uint64_t v15 = sub_253B07160();
      __dstb = *(void (**)(uint64_t, void *, uint64_t))(*(void *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __dstb(v153, v147, v15);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
      *(unsigned char *)(a1 + 82) = *(unsigned char *)(a2 + 82);
      *(unsigned char *)(a1 + 83) = *(unsigned char *)(a2 + 83);
      *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
      uint64_t v28 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
      uint64_t v29 = *(int *)(v28 + 60);
      uint64_t v150 = (void *)(a1 + v29);
      long long v155 = (int *)v28;
      uint64_t v30 = (void *)(a2 + v29);
      uint64_t v31 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v32 = v31;
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v30, 1, v31))
      {
        uint64_t v33 = sub_253462A5C(&qword_269CDF998);
        memcpy(v150, v30, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        *uint64_t v150 = *v30;
        v150[1] = v30[1];
        *((unsigned char *)v150 + 16) = *((unsigned char *)v30 + 16);
        *((unsigned char *)v150 + 17) = *((unsigned char *)v30 + 17);
        uint64_t v81 = *(int *)(v31 + 28);
        __dstf = (char *)v150 + v81;
        uint64_t v82 = (char *)v30 + v81;
        uint64_t v83 = sub_253B07160();
        uint64_t v84 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16);
        swift_bridgeObjectRetain();
        v84(__dstf, v82, v83);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v150, 0, 1, v32);
      }
      uint64_t v85 = v155;
      uint64_t v86 = v155[16];
      uint64_t v87 = a1 + v86;
      uint64_t v88 = (uint64_t *)(a2 + v86);
      unint64_t v89 = v88[1];
      if (v89 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v87 = *(_OWORD *)v88;
      }
      else
      {
        uint64_t v90 = *v88;
        sub_25348A9C8(*v88, v88[1]);
        *(void *)uint64_t v87 = v90;
        *(void *)(v87 + 8) = v89;
      }
      uint64_t v91 = v155[17];
      uint64_t v92 = (void *)(a1 + v91);
      uint64_t v93 = (void *)(a2 + v91);
      *uint64_t v92 = *v93;
      v92[1] = v93[1];
      uint64_t v94 = v155[18];
      int v95 = (void *)(a1 + v94);
      uint64_t v96 = (void *)(a2 + v94);
      *int v95 = *v96;
      v95[1] = v96[1];
      uint64_t v97 = v155[19];
      uint64_t v98 = (_DWORD *)(a1 + v97);
      uint64_t v99 = (int *)(a2 + v97);
      uint64_t v100 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v99, 1, v100))
      {
        uint64_t v101 = sub_253462A5C(&qword_269CDF988);
        memcpy(v98, v99, *(void *)(*(void *)(v101 - 8) + 64));
      }
      else
      {
        int v102 = *v99;
        *((unsigned char *)v98 + 4) = *((unsigned char *)v99 + 4);
        *uint64_t v98 = v102;
        *((void *)v98 + 1) = *((void *)v99 + 1);
        *((void *)v98 + 2) = *((void *)v99 + 2);
        int v103 = v99[6];
        *((unsigned char *)v98 + 28) = *((unsigned char *)v99 + 28);
        v98[6] = v103;
        int v104 = v99[8];
        *((unsigned char *)v98 + 36) = *((unsigned char *)v99 + 36);
        v98[8] = v104;
        uint64_t v105 = *(int *)(v100 + 32);
        int v106 = (char *)v98 + v105;
        uint64_t v151 = (char *)v99 + v105;
        uint64_t v107 = sub_253B07160();
        uint64_t v108 = *(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v109 = v107;
        uint64_t v85 = v155;
        v108(v106, v151, v109);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v98, 0, 1, v100);
      }
      uint64_t v110 = v85[20];
      uint64_t v111 = a1 + v110;
      int v112 = (uint64_t *)(a2 + v110);
      uint64_t v113 = *v112;
      *(unsigned char *)(v111 + 8) = *((unsigned char *)v112 + 8);
      *(void *)uint64_t v111 = v113;
      uint64_t v114 = v85[21];
      uint64_t v115 = (void *)(a1 + v114);
      uint64_t v116 = (void *)(a2 + v114);
      *uint64_t v115 = *v116;
      v115[1] = v116[1];
      *(unsigned char *)(a1 + v85[22]) = *(unsigned char *)(a2 + v85[22]);
      *(unsigned char *)(a1 + v85[23]) = *(unsigned char *)(a2 + v85[23]);
      uint64_t v117 = v85[24];
      uint64_t v118 = (void *)(a1 + v117);
      uint64_t v119 = (void *)(a2 + v117);
      uint64_t v120 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v119, 1, v120))
      {
        uint64_t v121 = sub_253462A5C(&qword_269CDF978);
        memcpy(v118, v119, *(void *)(*(void *)(v121 - 8) + 64));
      }
      else
      {
        *uint64_t v118 = *v119;
        v118[1] = v119[1];
        v118[2] = v119[2];
        v118[3] = v119[3];
        v118[4] = v119[4];
        v118[5] = v119[5];
        v118[6] = v119[6];
        v118[7] = v119[7];
        v118[8] = v119[8];
        v118[9] = v119[9];
        v118[10] = v119[10];
        uint64_t v122 = *(int *)(v120 + 40);
        __dstg = (char *)v119 + v122;
        int v152 = (char *)v118 + v122;
        uint64_t v123 = sub_253B07160();
        uint64_t v134 = *(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v85 = v155;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v134(v152, __dstg, v123);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v118, 0, 1, v120);
      }
      a3 = v157;
      *(unsigned char *)(a1 + v85[25]) = *(unsigned char *)(a2 + v85[25]);
      *(unsigned char *)(a1 + v85[26]) = *(unsigned char *)(a2 + v85[26]);
      uint64_t v124 = v85[27];
      uint64_t v125 = a1 + v124;
      uint64_t v126 = a2 + v124;
      uint64_t v127 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 16))(v125, v126, v127);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_43:
  uint64_t v128 = *(int *)(a3 + 20);
  uint64_t v129 = a1 + v128;
  uint64_t v130 = a2 + v128;
  uint64_t v131 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v131 - 8) + 24))(v129, v130, v131);
  return a1;
}

_OWORD *initializeWithTake for ContextProtoStructuredContext(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ContextProtoStructuredContextKind(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CDF958);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      long long v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      a1[2] = a2[2];
      uint64_t v15 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      *((void *)a1 + 3) = *((void *)a2 + 3);
      long long v9 = a2[3];
      a1[2] = a2[2];
      a1[3] = v9;
      a1[4] = a2[4];
      uint64_t v10 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    }
    else
    {
      long long v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      long long v20 = a2[3];
      a1[2] = a2[2];
      a1[3] = v20;
      a1[4] = a2[4];
      *((_DWORD *)a1 + 20) = *((_DWORD *)a2 + 20);
      *((unsigned char *)a1 + 84) = *((unsigned char *)a2 + 84);
      uint64_t v21 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
      uint64_t v22 = v21[15];
      uint64_t v23 = (_WORD *)((char *)a1 + v22);
      uint64_t v24 = (_WORD *)((char *)a2 + v22);
      uint64_t v25 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
      {
        uint64_t v26 = sub_253462A5C(&qword_269CDF998);
        memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
        v23[8] = v24[8];
        uint64_t v27 = *(int *)(v25 + 28);
        uint64_t v28 = (char *)v23 + v27;
        uint64_t v29 = (char *)v24 + v27;
        uint64_t v30 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v25);
      }
      *(_OWORD *)((char *)a1 + v21[16]) = *(_OWORD *)((char *)a2 + v21[16]);
      *(_OWORD *)((char *)a1 + v21[17]) = *(_OWORD *)((char *)a2 + v21[17]);
      *(_OWORD *)((char *)a1 + v21[18]) = *(_OWORD *)((char *)a2 + v21[18]);
      uint64_t v31 = v21[19];
      uint64_t v32 = (_DWORD *)((char *)a1 + v31);
      uint64_t v33 = (_DWORD *)((char *)a2 + v31);
      uint64_t v34 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v33, 1, v34))
      {
        uint64_t v35 = sub_253462A5C(&qword_269CDF988);
        memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        _DWORD *v32 = *v33;
        *((unsigned char *)v32 + 4) = *((unsigned char *)v33 + 4);
        *(_OWORD *)(v32 + 2) = *(_OWORD *)(v33 + 2);
        v32[6] = v33[6];
        *((unsigned char *)v32 + 28) = *((unsigned char *)v33 + 28);
        v32[8] = v33[8];
        *((unsigned char *)v32 + 36) = *((unsigned char *)v33 + 36);
        uint64_t v36 = *(int *)(v34 + 32);
        uint64_t v37 = (char *)v32 + v36;
        uint64_t v38 = (char *)v33 + v36;
        uint64_t v39 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v32, 0, 1, v34);
      }
      uint64_t v40 = v21[20];
      uint64_t v41 = (char *)a1 + v40;
      unint64_t v42 = (char *)a2 + v40;
      *(void *)uint64_t v41 = *(void *)v42;
      v41[8] = v42[8];
      *(_OWORD *)((char *)a1 + v21[21]) = *(_OWORD *)((char *)a2 + v21[21]);
      *((unsigned char *)a1 + v21[22]) = *((unsigned char *)a2 + v21[22]);
      *((unsigned char *)a1 + v21[23]) = *((unsigned char *)a2 + v21[23]);
      uint64_t v43 = v21[24];
      uint64_t v44 = (void *)((char *)a1 + v43);
      uint64_t v45 = (void *)((char *)a2 + v43);
      uint64_t v46 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v45, 1, v46))
      {
        uint64_t v47 = sub_253462A5C(&qword_269CDF978);
        memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        *uint64_t v44 = *v45;
        *(_OWORD *)(v44 + 1) = *(_OWORD *)(v45 + 1);
        *(_OWORD *)(v44 + 3) = *(_OWORD *)(v45 + 3);
        *(_OWORD *)(v44 + 5) = *(_OWORD *)(v45 + 5);
        *(_OWORD *)(v44 + 7) = *(_OWORD *)(v45 + 7);
        *(_OWORD *)(v44 + 9) = *(_OWORD *)(v45 + 9);
        uint64_t v48 = *(int *)(v46 + 40);
        uint64_t v49 = (char *)v44 + v48;
        uint64_t v50 = (char *)v45 + v48;
        uint64_t v51 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v44, 0, 1, v46);
      }
      *((unsigned char *)a1 + v21[25]) = *((unsigned char *)a2 + v21[25]);
      *((unsigned char *)a1 + v21[26]) = *((unsigned char *)a2 + v21[26]);
      uint64_t v52 = v21[27];
      uint64_t v53 = (char *)a1 + v52;
      uint64_t v54 = (char *)a2 + v52;
      uint64_t v55 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v56 = *(int *)(a3 + 20);
  int v57 = (char *)a1 + v56;
  uint64_t v58 = (char *)a2 + v56;
  uint64_t v59 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
  return a1;
}

uint64_t assignWithTake for ContextProtoStructuredContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ContextProtoStructuredContextKind(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        long long v22 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v22;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        uint64_t v23 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
        uint64_t v24 = a1 + v23;
        uint64_t v25 = a2 + v23;
        uint64_t v26 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        long long v10 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v10;
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        uint64_t v11 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
        uint64_t v12 = a1 + v11;
        uint64_t v13 = a2 + v11;
        uint64_t v14 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      }
      else
      {
        long long v27 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v27;
        long long v28 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v28;
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
        *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
        uint64_t v29 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
        uint64_t v30 = v29[15];
        uint64_t v31 = (_WORD *)(a1 + v30);
        uint64_t v32 = (_WORD *)(a2 + v30);
        uint64_t v33 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v32, 1, v33))
        {
          uint64_t v34 = sub_253462A5C(&qword_269CDF998);
          memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
          v31[8] = v32[8];
          uint64_t v48 = *(int *)(v33 + 28);
          uint64_t v49 = (char *)v31 + v48;
          uint64_t v50 = (char *)v32 + v48;
          uint64_t v51 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v31, 0, 1, v33);
        }
        *(_OWORD *)(a1 + v29[16]) = *(_OWORD *)(a2 + v29[16]);
        *(_OWORD *)(a1 + v29[17]) = *(_OWORD *)(a2 + v29[17]);
        *(_OWORD *)(a1 + v29[18]) = *(_OWORD *)(a2 + v29[18]);
        uint64_t v52 = v29[19];
        uint64_t v53 = (_DWORD *)(a1 + v52);
        uint64_t v54 = (_DWORD *)(a2 + v52);
        uint64_t v55 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54, 1, v55))
        {
          uint64_t v56 = sub_253462A5C(&qword_269CDF988);
          memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
        }
        else
        {
          *uint64_t v53 = *v54;
          *((unsigned char *)v53 + 4) = *((unsigned char *)v54 + 4);
          *(_OWORD *)(v53 + 2) = *(_OWORD *)(v54 + 2);
          v53[6] = v54[6];
          *((unsigned char *)v53 + 28) = *((unsigned char *)v54 + 28);
          v53[8] = v54[8];
          *((unsigned char *)v53 + 36) = *((unsigned char *)v54 + 36);
          uint64_t v57 = *(int *)(v55 + 32);
          uint64_t v58 = (char *)v53 + v57;
          uint64_t v59 = (char *)v54 + v57;
          uint64_t v60 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v58, v59, v60);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v53, 0, 1, v55);
        }
        uint64_t v61 = v29[20];
        uint64_t v62 = a1 + v61;
        uint64_t v63 = a2 + v61;
        *(void *)uint64_t v62 = *(void *)v63;
        *(unsigned char *)(v62 + 8) = *(unsigned char *)(v63 + 8);
        *(_OWORD *)(a1 + v29[21]) = *(_OWORD *)(a2 + v29[21]);
        *(unsigned char *)(a1 + v29[22]) = *(unsigned char *)(a2 + v29[22]);
        *(unsigned char *)(a1 + v29[23]) = *(unsigned char *)(a2 + v29[23]);
        uint64_t v64 = v29[24];
        uint64_t v65 = (void *)(a1 + v64);
        uint64_t v66 = (void *)(a2 + v64);
        uint64_t v67 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v66, 1, v67))
        {
          uint64_t v68 = sub_253462A5C(&qword_269CDF978);
          memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          *uint64_t v65 = *v66;
          *(_OWORD *)(v65 + 1) = *(_OWORD *)(v66 + 1);
          *(_OWORD *)(v65 + 3) = *(_OWORD *)(v66 + 3);
          *(_OWORD *)(v65 + 5) = *(_OWORD *)(v66 + 5);
          *(_OWORD *)(v65 + 7) = *(_OWORD *)(v66 + 7);
          *(_OWORD *)(v65 + 9) = *(_OWORD *)(v66 + 9);
          uint64_t v69 = *(int *)(v67 + 40);
          uint64_t v70 = (char *)v65 + v69;
          uint64_t v71 = (char *)v66 + v69;
          uint64_t v72 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v70, v71, v72);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v65, 0, 1, v67);
        }
        *(unsigned char *)(a1 + v29[25]) = *(unsigned char *)(a2 + v29[25]);
        *(unsigned char *)(a1 + v29[26]) = *(unsigned char *)(a2 + v29[26]);
        uint64_t v73 = v29[27];
        uint64_t v74 = a1 + v73;
        uint64_t v75 = a2 + v73;
        uint64_t v76 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 32))(v74, v75, v76);
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v6);
      goto LABEL_37;
    }
LABEL_8:
    uint64_t v15 = sub_253462A5C(&qword_269CDF958);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_37;
  }
  if (v8)
  {
    sub_2535BC188();
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_2535BC188();
    int v16 = swift_getEnumCaseMultiPayload();
    if (v16 == 2)
    {
      long long v35 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v35;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      uint64_t v36 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
      uint64_t v37 = a1 + v36;
      uint64_t v38 = a2 + v36;
      uint64_t v39 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
    }
    else if (v16 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      long long v17 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v17;
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      uint64_t v18 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
      uint64_t v19 = a1 + v18;
      uint64_t v20 = a2 + v18;
      uint64_t v21 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    }
    else
    {
      long long v40 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v40;
      long long v41 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v41;
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
      *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
      unint64_t v42 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
      uint64_t v43 = v42[15];
      uint64_t v44 = (_WORD *)(a1 + v43);
      uint64_t v45 = (_WORD *)(a2 + v43);
      uint64_t v46 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v45, 1, v46))
      {
        uint64_t v47 = sub_253462A5C(&qword_269CDF998);
        memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
        v44[8] = v45[8];
        uint64_t v77 = *(int *)(v46 + 28);
        uint64_t v78 = (char *)v44 + v77;
        uint64_t v79 = (char *)v45 + v77;
        uint64_t v80 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v78, v79, v80);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v44, 0, 1, v46);
      }
      *(_OWORD *)(a1 + v42[16]) = *(_OWORD *)(a2 + v42[16]);
      *(_OWORD *)(a1 + v42[17]) = *(_OWORD *)(a2 + v42[17]);
      *(_OWORD *)(a1 + v42[18]) = *(_OWORD *)(a2 + v42[18]);
      uint64_t v81 = v42[19];
      uint64_t v82 = (_DWORD *)(a1 + v81);
      uint64_t v83 = (_DWORD *)(a2 + v81);
      uint64_t v84 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v83, 1, v84))
      {
        uint64_t v85 = sub_253462A5C(&qword_269CDF988);
        memcpy(v82, v83, *(void *)(*(void *)(v85 - 8) + 64));
      }
      else
      {
        *uint64_t v82 = *v83;
        *((unsigned char *)v82 + 4) = *((unsigned char *)v83 + 4);
        *(_OWORD *)(v82 + 2) = *(_OWORD *)(v83 + 2);
        v82[6] = v83[6];
        *((unsigned char *)v82 + 28) = *((unsigned char *)v83 + 28);
        v82[8] = v83[8];
        *((unsigned char *)v82 + 36) = *((unsigned char *)v83 + 36);
        uint64_t v86 = *(int *)(v84 + 32);
        uint64_t v87 = (char *)v82 + v86;
        uint64_t v88 = (char *)v83 + v86;
        uint64_t v89 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32))(v87, v88, v89);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v82, 0, 1, v84);
      }
      uint64_t v90 = v42[20];
      uint64_t v91 = a1 + v90;
      uint64_t v92 = a2 + v90;
      *(void *)uint64_t v91 = *(void *)v92;
      *(unsigned char *)(v91 + 8) = *(unsigned char *)(v92 + 8);
      *(_OWORD *)(a1 + v42[21]) = *(_OWORD *)(a2 + v42[21]);
      *(unsigned char *)(a1 + v42[22]) = *(unsigned char *)(a2 + v42[22]);
      *(unsigned char *)(a1 + v42[23]) = *(unsigned char *)(a2 + v42[23]);
      uint64_t v93 = v42[24];
      uint64_t v94 = (void *)(a1 + v93);
      int v95 = (void *)(a2 + v93);
      uint64_t v96 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v95, 1, v96))
      {
        uint64_t v97 = sub_253462A5C(&qword_269CDF978);
        memcpy(v94, v95, *(void *)(*(void *)(v97 - 8) + 64));
      }
      else
      {
        void *v94 = *v95;
        *(_OWORD *)(v94 + 1) = *(_OWORD *)(v95 + 1);
        *(_OWORD *)(v94 + 3) = *(_OWORD *)(v95 + 3);
        *(_OWORD *)(v94 + 5) = *(_OWORD *)(v95 + 5);
        *(_OWORD *)(v94 + 7) = *(_OWORD *)(v95 + 7);
        *(_OWORD *)(v94 + 9) = *(_OWORD *)(v95 + 9);
        uint64_t v98 = *(int *)(v96 + 40);
        uint64_t v99 = (char *)v94 + v98;
        uint64_t v100 = (char *)v95 + v98;
        uint64_t v101 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v99, v100, v101);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v94, 0, 1, v96);
      }
      *(unsigned char *)(a1 + v42[25]) = *(unsigned char *)(a2 + v42[25]);
      *(unsigned char *)(a1 + v42[26]) = *(unsigned char *)(a2 + v42[26]);
      uint64_t v102 = v42[27];
      uint64_t v103 = a1 + v102;
      uint64_t v104 = a2 + v102;
      uint64_t v105 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 32))(v103, v104, v105);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_37:
  uint64_t v106 = *(int *)(a3 + 20);
  uint64_t v107 = a1 + v106;
  uint64_t v108 = a2 + v106;
  uint64_t v109 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 40))(v107, v108, v109);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoStructuredContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535CBEE0);
}

uint64_t sub_2535CBEE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2535DE740(a1, a2, a3);
}

uint64_t storeEnumTagSinglePayload for ContextProtoStructuredContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535CBF00);
}

uint64_t sub_2535CBF00(uint64_t a1, uint64_t a2, int a3)
{
  return sub_2535DE7D8(a1, a2, a3);
}

void sub_2535CBF0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t initializeBufferWithCopyOfBuffer for ContextProtoStructuredContextKind(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v15 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v15;
      uint64_t v16 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v16;
      uint64_t v17 = a2[5];
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = v17;
      uint64_t v18 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
      uint64_t v19 = a1 + v18;
      uint64_t v20 = (uint64_t)a2 + v18;
      uint64_t v21 = sub_253B07160();
      long long v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22(v19, v20, v21);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v7;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v8 = a2[4];
      *(void *)(a1 + 24) = a2[3];
      *(void *)(a1 + 32) = v8;
      uint64_t v9 = a2[6];
      *(void *)(a1 + 40) = a2[5];
      *(void *)(a1 + 48) = v9;
      uint64_t v10 = a2[8];
      *(void *)(a1 + 56) = a2[7];
      *(void *)(a1 + 64) = v10;
      *(void *)(a1 + 72) = a2[9];
      uint64_t v11 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
      __dsta = (char *)a2 + v11;
      uint64_t v94 = a1 + v11;
      uint64_t v12 = sub_253B07160();
      uint64_t v13 = *(void (**)(uint64_t, void *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13(v94, __dsta, v12);
    }
    else
    {
      uint64_t v23 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v23;
      uint64_t v24 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v24;
      uint64_t v25 = a2[5];
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = v25;
      uint64_t v26 = a2[7];
      *(void *)(a1 + 48) = a2[6];
      *(void *)(a1 + 56) = v26;
      uint64_t v27 = a2[9];
      *(void *)(a1 + 64) = a2[8];
      *(void *)(a1 + 72) = v27;
      *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
      *(unsigned char *)(a1 + 84) = *((unsigned char *)a2 + 84);
      uint64_t v28 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
      uint64_t v29 = *(int *)(v28 + 60);
      uint64_t v88 = (int *)v28;
      __dst = (void *)(a1 + v29);
      uint64_t v30 = (uint64_t *)((char *)a2 + v29);
      uint64_t v31 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v30, 1, v31))
      {
        uint64_t v32 = sub_253462A5C(&qword_269CDF998);
        memcpy(__dst, v30, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        uint64_t v33 = v30[1];
        void *__dst = *v30;
        __dst[1] = v33;
        *((_WORD *)__dst + 8) = *((_WORD *)v30 + 8);
        uint64_t v34 = *(int *)(v31 + 28);
        long long v35 = (char *)__dst + v34;
        uint64_t v36 = (char *)v30 + v34;
        uint64_t v37 = sub_253B07160();
        uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
        swift_bridgeObjectRetain();
        v38(v35, v36, v37);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v31);
      }
      uint64_t v39 = v88;
      uint64_t v40 = v88[16];
      uint64_t v41 = a1 + v40;
      unint64_t v42 = (uint64_t *)((char *)a2 + v40);
      unint64_t v43 = v42[1];
      if (v43 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
      }
      else
      {
        uint64_t v44 = *v42;
        sub_25348A9C8(*v42, v42[1]);
        *(void *)uint64_t v41 = v44;
        *(void *)(v41 + 8) = v43;
      }
      uint64_t v45 = v88[17];
      uint64_t v46 = (void *)(a1 + v45);
      uint64_t v47 = (uint64_t *)((char *)a2 + v45);
      uint64_t v48 = v47[1];
      *uint64_t v46 = *v47;
      v46[1] = v48;
      uint64_t v49 = v88[18];
      uint64_t v50 = (void *)(a1 + v49);
      uint64_t v51 = (uint64_t *)((char *)a2 + v49);
      uint64_t v52 = v51[1];
      *uint64_t v50 = *v51;
      v50[1] = v52;
      uint64_t v53 = v88[19];
      uint64_t v54 = (_DWORD *)(a1 + v53);
      uint64_t v55 = (_DWORD *)((char *)a2 + v53);
      uint64_t v56 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v55, 1, v56))
      {
        uint64_t v57 = sub_253462A5C(&qword_269CDF988);
        memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        *uint64_t v54 = *v55;
        *((unsigned char *)v54 + 4) = *((unsigned char *)v55 + 4);
        uint64_t v58 = *((void *)v55 + 2);
        *((void *)v54 + 1) = *((void *)v55 + 1);
        *((void *)v54 + 2) = v58;
        v54[6] = v55[6];
        *((unsigned char *)v54 + 28) = *((unsigned char *)v55 + 28);
        v54[8] = v55[8];
        *((unsigned char *)v54 + 36) = *((unsigned char *)v55 + 36);
        uint64_t v59 = *(int *)(v56 + 32);
        uint64_t v60 = (char *)v54 + v59;
        __dstb = (char *)v55 + v59;
        uint64_t v61 = sub_253B07160();
        uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
        swift_bridgeObjectRetain();
        v62(v60, __dstb, v61);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v54, 0, 1, v56);
      }
      uint64_t v63 = v88[20];
      uint64_t v64 = a1 + v63;
      uint64_t v65 = (uint64_t)a2 + v63;
      *(void *)uint64_t v64 = *(void *)v65;
      *(unsigned char *)(v64 + 8) = *(unsigned char *)(v65 + 8);
      uint64_t v66 = v88[21];
      uint64_t v67 = (void *)(a1 + v66);
      uint64_t v68 = (uint64_t *)((char *)a2 + v66);
      uint64_t v69 = v68[1];
      *uint64_t v67 = *v68;
      v67[1] = v69;
      *(unsigned char *)(a1 + v88[22]) = *((unsigned char *)a2 + v88[22]);
      *(unsigned char *)(a1 + v88[23]) = *((unsigned char *)a2 + v88[23]);
      uint64_t v70 = v88[24];
      uint64_t v71 = (void *)(a1 + v70);
      uint64_t v72 = (uint64_t *)((char *)a2 + v70);
      uint64_t v73 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v72, 1, v73))
      {
        uint64_t v74 = sub_253462A5C(&qword_269CDF978);
        memcpy(v71, v72, *(void *)(*(void *)(v74 - 8) + 64));
      }
      else
      {
        uint64_t v75 = v72[1];
        *uint64_t v71 = *v72;
        v71[1] = v75;
        uint64_t v76 = v72[3];
        v71[2] = v72[2];
        v71[3] = v76;
        uint64_t v77 = v72[5];
        v71[4] = v72[4];
        v71[5] = v77;
        uint64_t v78 = v72[7];
        v71[6] = v72[6];
        v71[7] = v78;
        uint64_t v79 = v72[9];
        v71[8] = v72[8];
        v71[9] = v79;
        v71[10] = v72[10];
        uint64_t v80 = *(int *)(v73 + 40);
        uint64_t v89 = (char *)v72 + v80;
        __dstc = (char *)v71 + v80;
        uint64_t v81 = sub_253B07160();
        uint64_t v87 = *(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v87(__dstc, v89, v81);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v71, 0, 1, v73);
      }
      *(unsigned char *)(a1 + v39[25]) = *((unsigned char *)a2 + v39[25]);
      *(unsigned char *)(a1 + v39[26]) = *((unsigned char *)a2 + v39[26]);
      uint64_t v82 = v39[27];
      uint64_t v83 = a1 + v82;
      uint64_t v84 = (uint64_t)a2 + v82;
      uint64_t v85 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 16))(v83, v84, v85);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ContextProtoStructuredContextKind(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
  }
  else if (result == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
  }
  else
  {
    if (result) {
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v3 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    uint64_t v4 = a1 + v3[15];
    uint64_t v5 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = v4 + *(int *)(v5 + 28);
      uint64_t v7 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    }
    uint64_t v8 = (uint64_t *)(a1 + v3[16]);
    unint64_t v9 = v8[1];
    if (v9 >> 60 != 15) {
      sub_253487D84(*v8, v9);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = a1 + v3[19];
    uint64_t v11 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      uint64_t v12 = v10 + *(int *)(v11 + 32);
      uint64_t v13 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = a1 + v3[24];
    uint64_t v15 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v14, 1, v15))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = v14 + *(int *)(v15 + 40);
      uint64_t v17 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    }
    uint64_t v18 = v3[27];
  }
  uint64_t v19 = a1 + v18;
  uint64_t v20 = sub_253B07160();
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);
  return v21(v19, v20);
}

uint64_t initializeWithCopy for ContextProtoStructuredContextKind(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v12 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v12;
    uint64_t v13 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v13;
    uint64_t v14 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v14;
    uint64_t v15 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
    uint64_t v16 = a1 + v15;
    uint64_t v17 = a2 + v15;
    uint64_t v18 = sub_253B07160();
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    uint64_t v6 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v6;
    uint64_t v7 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v7;
    uint64_t v8 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v8;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    uint64_t v9 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
    uint64_t v91 = a1 + v9;
    __dsta = (void *)(a2 + v9);
    uint64_t v10 = sub_253B07160();
    uint64_t v11 = *(void (**)(uint64_t, void *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v91, __dsta, v10);
  }
  else
  {
    uint64_t v20 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v20;
    uint64_t v21 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v21;
    uint64_t v22 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v22;
    uint64_t v23 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v23;
    uint64_t v24 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v24;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
    uint64_t v25 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    uint64_t v26 = *(int *)(v25 + 60);
    uint64_t v85 = (int *)v25;
    __dst = (void *)(a1 + v26);
    uint64_t v27 = (void *)(a2 + v26);
    uint64_t v28 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v28))
    {
      uint64_t v29 = sub_253462A5C(&qword_269CDF998);
      memcpy(__dst, v27, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      uint64_t v30 = v27[1];
      void *__dst = *v27;
      __dst[1] = v30;
      *((_WORD *)__dst + 8) = *((_WORD *)v27 + 8);
      uint64_t v31 = *(int *)(v28 + 28);
      uint64_t v32 = (char *)__dst + v31;
      uint64_t v33 = (char *)v27 + v31;
      uint64_t v34 = sub_253B07160();
      long long v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
      swift_bridgeObjectRetain();
      v35(v32, v33, v34);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v28);
    }
    uint64_t v36 = v85;
    uint64_t v37 = v85[16];
    uint64_t v38 = a1 + v37;
    uint64_t v39 = (uint64_t *)(a2 + v37);
    unint64_t v40 = v39[1];
    if (v40 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
    }
    else
    {
      uint64_t v41 = *v39;
      sub_25348A9C8(*v39, v39[1]);
      *(void *)uint64_t v38 = v41;
      *(void *)(v38 + 8) = v40;
    }
    uint64_t v42 = v85[17];
    unint64_t v43 = (void *)(a1 + v42);
    uint64_t v44 = (void *)(a2 + v42);
    uint64_t v45 = v44[1];
    *unint64_t v43 = *v44;
    v43[1] = v45;
    uint64_t v46 = v85[18];
    uint64_t v47 = (void *)(a1 + v46);
    uint64_t v48 = (void *)(a2 + v46);
    uint64_t v49 = v48[1];
    void *v47 = *v48;
    v47[1] = v49;
    uint64_t v50 = v85[19];
    uint64_t v51 = (_DWORD *)(a1 + v50);
    uint64_t v52 = (_DWORD *)(a2 + v50);
    uint64_t v53 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v53))
    {
      uint64_t v54 = sub_253462A5C(&qword_269CDF988);
      memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      *uint64_t v51 = *v52;
      *((unsigned char *)v51 + 4) = *((unsigned char *)v52 + 4);
      uint64_t v55 = *((void *)v52 + 2);
      *((void *)v51 + 1) = *((void *)v52 + 1);
      *((void *)v51 + 2) = v55;
      v51[6] = v52[6];
      *((unsigned char *)v51 + 28) = *((unsigned char *)v52 + 28);
      v51[8] = v52[8];
      *((unsigned char *)v51 + 36) = *((unsigned char *)v52 + 36);
      uint64_t v56 = *(int *)(v53 + 32);
      __dstb = (char *)v51 + v56;
      uint64_t v57 = (char *)v52 + v56;
      uint64_t v58 = sub_253B07160();
      uint64_t v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16);
      swift_bridgeObjectRetain();
      v59(__dstb, v57, v58);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v51, 0, 1, v53);
    }
    uint64_t v60 = v85[20];
    uint64_t v61 = a1 + v60;
    uint64_t v62 = a2 + v60;
    *(void *)uint64_t v61 = *(void *)v62;
    *(unsigned char *)(v61 + 8) = *(unsigned char *)(v62 + 8);
    uint64_t v63 = v85[21];
    uint64_t v64 = (void *)(a1 + v63);
    uint64_t v65 = (void *)(a2 + v63);
    uint64_t v66 = v65[1];
    void *v64 = *v65;
    v64[1] = v66;
    *(unsigned char *)(a1 + v85[22]) = *(unsigned char *)(a2 + v85[22]);
    *(unsigned char *)(a1 + v85[23]) = *(unsigned char *)(a2 + v85[23]);
    uint64_t v67 = v85[24];
    uint64_t v68 = (void *)(a1 + v67);
    uint64_t v69 = (void *)(a2 + v67);
    uint64_t v70 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v69, 1, v70))
    {
      uint64_t v71 = sub_253462A5C(&qword_269CDF978);
      memcpy(v68, v69, *(void *)(*(void *)(v71 - 8) + 64));
    }
    else
    {
      uint64_t v72 = v69[1];
      *uint64_t v68 = *v69;
      v68[1] = v72;
      uint64_t v73 = v69[3];
      v68[2] = v69[2];
      v68[3] = v73;
      uint64_t v74 = v69[5];
      v68[4] = v69[4];
      v68[5] = v74;
      uint64_t v75 = v69[7];
      v68[6] = v69[6];
      v68[7] = v75;
      uint64_t v76 = v69[9];
      v68[8] = v69[8];
      v68[9] = v76;
      v68[10] = v69[10];
      uint64_t v77 = *(int *)(v70 + 40);
      uint64_t v86 = (char *)v69 + v77;
      __dstc = (char *)v68 + v77;
      uint64_t v78 = sub_253B07160();
      uint64_t v84 = *(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v84(__dstc, v86, v78);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v68, 0, 1, v70);
    }
    *(unsigned char *)(a1 + v36[25]) = *(unsigned char *)(a2 + v36[25]);
    *(unsigned char *)(a1 + v36[26]) = *(unsigned char *)(a2 + v36[26]);
    uint64_t v79 = v36[27];
    uint64_t v80 = a1 + v79;
    uint64_t v81 = a2 + v79;
    uint64_t v82 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 16))(v80, v81, v82);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for ContextProtoStructuredContextKind(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2535BC188();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      uint64_t v8 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
      uint64_t v9 = a1 + v8;
      uint64_t v10 = a2 + v8;
      uint64_t v11 = sub_253B07160();
      uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      uint64_t v5 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
      __dsta = (void *)(a2 + v5);
      uint64_t v72 = a1 + v5;
      uint64_t v6 = sub_253B07160();
      uint64_t v7 = *(void (**)(uint64_t, void *, uint64_t))(*(void *)(v6 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v7(v72, __dsta, v6);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
      *(unsigned char *)(a1 + 82) = *(unsigned char *)(a2 + 82);
      *(unsigned char *)(a1 + 83) = *(unsigned char *)(a2 + 83);
      *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
      uint64_t v13 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
      uint64_t v14 = *(int *)(v13 + 60);
      uint64_t v67 = (int *)v13;
      __dst = (void *)(a1 + v14);
      uint64_t v15 = (void *)(a2 + v14);
      uint64_t v16 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16))
      {
        uint64_t v17 = sub_253462A5C(&qword_269CDF998);
        memcpy(__dst, v15, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        void *__dst = *v15;
        __dst[1] = v15[1];
        *((unsigned char *)__dst + 16) = *((unsigned char *)v15 + 16);
        *((unsigned char *)__dst + 17) = *((unsigned char *)v15 + 17);
        uint64_t v18 = *(int *)(v16 + 28);
        uint64_t v19 = (char *)__dst + v18;
        uint64_t v20 = (char *)v15 + v18;
        uint64_t v21 = sub_253B07160();
        uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        v22(v19, v20, v21);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v16);
      }
      uint64_t v23 = v67[16];
      uint64_t v24 = a1 + v23;
      uint64_t v25 = (uint64_t *)(a2 + v23);
      unint64_t v26 = v25[1];
      if (v26 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
      }
      else
      {
        uint64_t v27 = *v25;
        sub_25348A9C8(*v25, v25[1]);
        *(void *)uint64_t v24 = v27;
        *(void *)(v24 + 8) = v26;
      }
      uint64_t v28 = v67[17];
      uint64_t v29 = (void *)(a1 + v28);
      uint64_t v30 = (void *)(a2 + v28);
      *uint64_t v29 = *v30;
      v29[1] = v30[1];
      uint64_t v31 = v67[18];
      uint64_t v32 = (void *)(a1 + v31);
      uint64_t v33 = (void *)(a2 + v31);
      void *v32 = *v33;
      v32[1] = v33[1];
      uint64_t v34 = v67[19];
      long long v35 = (_DWORD *)(a1 + v34);
      uint64_t v36 = (int *)(a2 + v34);
      uint64_t v37 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v36, 1, v37))
      {
        uint64_t v38 = sub_253462A5C(&qword_269CDF988);
        memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        int v39 = *v36;
        *((unsigned char *)v35 + 4) = *((unsigned char *)v36 + 4);
        *long long v35 = v39;
        *((void *)v35 + 1) = *((void *)v36 + 1);
        *((void *)v35 + 2) = *((void *)v36 + 2);
        int v40 = v36[6];
        *((unsigned char *)v35 + 28) = *((unsigned char *)v36 + 28);
        v35[6] = v40;
        int v41 = v36[8];
        *((unsigned char *)v35 + 36) = *((unsigned char *)v36 + 36);
        v35[8] = v41;
        uint64_t v42 = *(int *)(v37 + 32);
        __dstb = (char *)v35 + v42;
        unint64_t v43 = (char *)v36 + v42;
        uint64_t v44 = sub_253B07160();
        uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
        swift_bridgeObjectRetain();
        v45(__dstb, v43, v44);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v35, 0, 1, v37);
      }
      uint64_t v46 = v67[20];
      uint64_t v47 = a1 + v46;
      uint64_t v48 = (uint64_t *)(a2 + v46);
      uint64_t v49 = *v48;
      *(unsigned char *)(v47 + 8) = *((unsigned char *)v48 + 8);
      *(void *)uint64_t v47 = v49;
      uint64_t v50 = v67[21];
      uint64_t v51 = (void *)(a1 + v50);
      uint64_t v52 = (void *)(a2 + v50);
      *uint64_t v51 = *v52;
      v51[1] = v52[1];
      *(unsigned char *)(a1 + v67[22]) = *(unsigned char *)(a2 + v67[22]);
      *(unsigned char *)(a1 + v67[23]) = *(unsigned char *)(a2 + v67[23]);
      uint64_t v53 = v67[24];
      uint64_t v54 = (void *)(a1 + v53);
      uint64_t v55 = (void *)(a2 + v53);
      uint64_t v56 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v55, 1, v56))
      {
        uint64_t v57 = sub_253462A5C(&qword_269CDF978);
        memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        *uint64_t v54 = *v55;
        v54[1] = v55[1];
        v54[2] = v55[2];
        v54[3] = v55[3];
        v54[4] = v55[4];
        v54[5] = v55[5];
        v54[6] = v55[6];
        v54[7] = v55[7];
        v54[8] = v55[8];
        v54[9] = v55[9];
        v54[10] = v55[10];
        uint64_t v58 = *(int *)(v56 + 40);
        __dstc = (char *)v54 + v58;
        uint64_t v66 = (char *)v55 + v58;
        uint64_t v59 = sub_253B07160();
        uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v65(__dstc, v66, v59);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v54, 0, 1, v56);
      }
      *(unsigned char *)(a1 + v67[25]) = *(unsigned char *)(a2 + v67[25]);
      *(unsigned char *)(a1 + v67[26]) = *(unsigned char *)(a2 + v67[26]);
      uint64_t v60 = v67[27];
      uint64_t v61 = a1 + v60;
      uint64_t v62 = a2 + v60;
      uint64_t v63 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for ContextProtoStructuredContextKind(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    long long v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    uint64_t v11 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
    uint64_t v12 = a1 + v11;
    uint64_t v13 = a2 + v11;
    uint64_t v14 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    long long v5 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v5;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    uint64_t v6 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = a2 + v6;
    uint64_t v9 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  }
  else
  {
    long long v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v15;
    long long v16 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v16;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
    uint64_t v17 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    uint64_t v18 = v17[15];
    uint64_t v19 = (_WORD *)(a1 + v18);
    uint64_t v20 = (_WORD *)(a2 + v18);
    uint64_t v21 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21))
    {
      uint64_t v22 = sub_253462A5C(&qword_269CDF998);
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      v19[8] = v20[8];
      uint64_t v23 = *(int *)(v21 + 28);
      uint64_t v24 = (char *)v19 + v23;
      uint64_t v25 = (char *)v20 + v23;
      uint64_t v26 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v21);
    }
    *(_OWORD *)(a1 + v17[16]) = *(_OWORD *)(a2 + v17[16]);
    *(_OWORD *)(a1 + v17[17]) = *(_OWORD *)(a2 + v17[17]);
    *(_OWORD *)(a1 + v17[18]) = *(_OWORD *)(a2 + v17[18]);
    uint64_t v27 = v17[19];
    uint64_t v28 = (_DWORD *)(a1 + v27);
    uint64_t v29 = (_DWORD *)(a2 + v27);
    uint64_t v30 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v30))
    {
      uint64_t v31 = sub_253462A5C(&qword_269CDF988);
      memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      *uint64_t v28 = *v29;
      *((unsigned char *)v28 + 4) = *((unsigned char *)v29 + 4);
      *(_OWORD *)(v28 + 2) = *(_OWORD *)(v29 + 2);
      v28[6] = v29[6];
      *((unsigned char *)v28 + 28) = *((unsigned char *)v29 + 28);
      v28[8] = v29[8];
      *((unsigned char *)v28 + 36) = *((unsigned char *)v29 + 36);
      uint64_t v32 = *(int *)(v30 + 32);
      uint64_t v33 = (char *)v28 + v32;
      uint64_t v34 = (char *)v29 + v32;
      uint64_t v35 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v28, 0, 1, v30);
    }
    uint64_t v36 = v17[20];
    uint64_t v37 = a1 + v36;
    uint64_t v38 = a2 + v36;
    *(void *)uint64_t v37 = *(void *)v38;
    *(unsigned char *)(v37 + 8) = *(unsigned char *)(v38 + 8);
    *(_OWORD *)(a1 + v17[21]) = *(_OWORD *)(a2 + v17[21]);
    *(unsigned char *)(a1 + v17[22]) = *(unsigned char *)(a2 + v17[22]);
    *(unsigned char *)(a1 + v17[23]) = *(unsigned char *)(a2 + v17[23]);
    uint64_t v39 = v17[24];
    int v40 = (void *)(a1 + v39);
    int v41 = (void *)(a2 + v39);
    uint64_t v42 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v41, 1, v42))
    {
      uint64_t v43 = sub_253462A5C(&qword_269CDF978);
      memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      *int v40 = *v41;
      *(_OWORD *)(v40 + 1) = *(_OWORD *)(v41 + 1);
      *(_OWORD *)(v40 + 3) = *(_OWORD *)(v41 + 3);
      *(_OWORD *)(v40 + 5) = *(_OWORD *)(v41 + 5);
      *(_OWORD *)(v40 + 7) = *(_OWORD *)(v41 + 7);
      *(_OWORD *)(v40 + 9) = *(_OWORD *)(v41 + 9);
      uint64_t v44 = *(int *)(v42 + 40);
      uint64_t v45 = (char *)v40 + v44;
      uint64_t v46 = (char *)v41 + v44;
      uint64_t v47 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v40, 0, 1, v42);
    }
    *(unsigned char *)(a1 + v17[25]) = *(unsigned char *)(a2 + v17[25]);
    *(unsigned char *)(a1 + v17[26]) = *(unsigned char *)(a2 + v17[26]);
    uint64_t v48 = v17[27];
    uint64_t v49 = a1 + v48;
    uint64_t v50 = a2 + v48;
    uint64_t v51 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for ContextProtoStructuredContextKind(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2535BC188();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      long long v10 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      uint64_t v11 = *(int *)(type metadata accessor for ContextProtoStructedContextAppInFocusContext(0) + 28);
      uint64_t v12 = a1 + v11;
      uint64_t v13 = a2 + v11;
      uint64_t v14 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      long long v5 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v5;
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      uint64_t v6 = *(int *)(type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(0) + 40);
      uint64_t v7 = a1 + v6;
      uint64_t v8 = a2 + v6;
      uint64_t v9 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    }
    else
    {
      long long v15 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v15;
      long long v16 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v16;
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
      *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
      uint64_t v17 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
      uint64_t v18 = v17[15];
      uint64_t v19 = (_WORD *)(a1 + v18);
      uint64_t v20 = (_WORD *)(a2 + v18);
      uint64_t v21 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21))
      {
        uint64_t v22 = sub_253462A5C(&qword_269CDF998);
        memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
        v19[8] = v20[8];
        uint64_t v23 = *(int *)(v21 + 28);
        uint64_t v24 = (char *)v19 + v23;
        uint64_t v25 = (char *)v20 + v23;
        uint64_t v26 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v21);
      }
      *(_OWORD *)(a1 + v17[16]) = *(_OWORD *)(a2 + v17[16]);
      *(_OWORD *)(a1 + v17[17]) = *(_OWORD *)(a2 + v17[17]);
      *(_OWORD *)(a1 + v17[18]) = *(_OWORD *)(a2 + v17[18]);
      uint64_t v27 = v17[19];
      uint64_t v28 = (_DWORD *)(a1 + v27);
      uint64_t v29 = (_DWORD *)(a2 + v27);
      uint64_t v30 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v30))
      {
        uint64_t v31 = sub_253462A5C(&qword_269CDF988);
        memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        *uint64_t v28 = *v29;
        *((unsigned char *)v28 + 4) = *((unsigned char *)v29 + 4);
        *(_OWORD *)(v28 + 2) = *(_OWORD *)(v29 + 2);
        v28[6] = v29[6];
        *((unsigned char *)v28 + 28) = *((unsigned char *)v29 + 28);
        v28[8] = v29[8];
        *((unsigned char *)v28 + 36) = *((unsigned char *)v29 + 36);
        uint64_t v32 = *(int *)(v30 + 32);
        uint64_t v33 = (char *)v28 + v32;
        uint64_t v34 = (char *)v29 + v32;
        uint64_t v35 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v28, 0, 1, v30);
      }
      uint64_t v36 = v17[20];
      uint64_t v37 = a1 + v36;
      uint64_t v38 = a2 + v36;
      *(void *)uint64_t v37 = *(void *)v38;
      *(unsigned char *)(v37 + 8) = *(unsigned char *)(v38 + 8);
      *(_OWORD *)(a1 + v17[21]) = *(_OWORD *)(a2 + v17[21]);
      *(unsigned char *)(a1 + v17[22]) = *(unsigned char *)(a2 + v17[22]);
      *(unsigned char *)(a1 + v17[23]) = *(unsigned char *)(a2 + v17[23]);
      uint64_t v39 = v17[24];
      int v40 = (void *)(a1 + v39);
      int v41 = (void *)(a2 + v39);
      uint64_t v42 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v41, 1, v42))
      {
        uint64_t v43 = sub_253462A5C(&qword_269CDF978);
        memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        *int v40 = *v41;
        *(_OWORD *)(v40 + 1) = *(_OWORD *)(v41 + 1);
        *(_OWORD *)(v40 + 3) = *(_OWORD *)(v41 + 3);
        *(_OWORD *)(v40 + 5) = *(_OWORD *)(v41 + 5);
        *(_OWORD *)(v40 + 7) = *(_OWORD *)(v41 + 7);
        *(_OWORD *)(v40 + 9) = *(_OWORD *)(v41 + 9);
        uint64_t v44 = *(int *)(v42 + 40);
        uint64_t v45 = (char *)v40 + v44;
        uint64_t v46 = (char *)v41 + v44;
        uint64_t v47 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v40, 0, 1, v42);
      }
      *(unsigned char *)(a1 + v17[25]) = *(unsigned char *)(a2 + v17[25]);
      *(unsigned char *)(a1 + v17[26]) = *(unsigned char *)(a2 + v17[26]);
      uint64_t v48 = v17[27];
      uint64_t v49 = a1 + v48;
      uint64_t v50 = a2 + v48;
      uint64_t v51 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2535CE130()
{
  uint64_t result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for ContextProtoStructedContextAppInFocusContext(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ContextProtoStructuredContextSiriRequestContext(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v7;
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    uint64_t v10 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v10;
    *(void *)(a1 + 72) = a2[9];
    *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
    *(unsigned char *)(a1 + 84) = *((unsigned char *)a2 + 84);
    uint64_t v11 = a3[15];
    __dst = (void *)(a1 + v11);
    uint64_t v12 = (uint64_t *)((char *)a2 + v11);
    uint64_t v13 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = sub_253462A5C(&qword_269CDF998);
      memcpy(__dst, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v15 = v12[1];
      void *__dst = *v12;
      __dst[1] = v15;
      *((_WORD *)__dst + 8) = *((_WORD *)v12 + 8);
      uint64_t v16 = *(int *)(v13 + 28);
      uint64_t v17 = (char *)__dst + v16;
      uint64_t v18 = (char *)v12 + v16;
      uint64_t v19 = sub_253B07160();
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v17, v18, v19);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v13);
    }
    uint64_t v21 = a3[16];
    uint64_t v22 = v6 + v21;
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    unint64_t v24 = v23[1];
    if (v24 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    }
    else
    {
      uint64_t v25 = *v23;
      sub_25348A9C8(*v23, v23[1]);
      *(void *)uint64_t v22 = v25;
      *(void *)(v22 + 8) = v24;
    }
    uint64_t v26 = a3[17];
    uint64_t v27 = a3[18];
    uint64_t v28 = (void *)(v6 + v26);
    uint64_t v29 = (uint64_t *)((char *)a2 + v26);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = (void *)(v6 + v27);
    uint64_t v32 = (uint64_t *)((char *)a2 + v27);
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = a3[19];
    uint64_t v35 = (_DWORD *)(v6 + v34);
    uint64_t v36 = (_DWORD *)((char *)a2 + v34);
    uint64_t v37 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v36, 1, v37))
    {
      uint64_t v38 = sub_253462A5C(&qword_269CDF988);
      memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      *uint64_t v35 = *v36;
      *((unsigned char *)v35 + 4) = *((unsigned char *)v36 + 4);
      uint64_t v39 = *((void *)v36 + 2);
      *((void *)v35 + 1) = *((void *)v36 + 1);
      *((void *)v35 + 2) = v39;
      v35[6] = v36[6];
      *((unsigned char *)v35 + 28) = *((unsigned char *)v36 + 28);
      v35[8] = v36[8];
      *((unsigned char *)v35 + 36) = *((unsigned char *)v36 + 36);
      uint64_t v40 = *(int *)(v37 + 32);
      int v41 = (char *)v35 + v40;
      __dsta = (char *)v36 + v40;
      uint64_t v42 = sub_253B07160();
      uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
      swift_bridgeObjectRetain();
      v43(v41, __dsta, v42);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v35, 0, 1, v37);
    }
    uint64_t v44 = a3[20];
    uint64_t v45 = a3[21];
    uint64_t v46 = v6 + v44;
    uint64_t v47 = (uint64_t)a2 + v44;
    *(void *)uint64_t v46 = *(void *)v47;
    *(unsigned char *)(v46 + 8) = *(unsigned char *)(v47 + 8);
    uint64_t v48 = (void *)(v6 + v45);
    uint64_t v49 = (uint64_t *)((char *)a2 + v45);
    uint64_t v50 = v49[1];
    *uint64_t v48 = *v49;
    v48[1] = v50;
    uint64_t v51 = a3[23];
    *(unsigned char *)(v6 + a3[22]) = *((unsigned char *)a2 + a3[22]);
    *(unsigned char *)(v6 + v51) = *((unsigned char *)a2 + v51);
    uint64_t v52 = a3[24];
    uint64_t v53 = (void *)(v6 + v52);
    uint64_t v54 = (uint64_t *)((char *)a2 + v52);
    uint64_t v55 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54, 1, v55))
    {
      uint64_t v56 = sub_253462A5C(&qword_269CDF978);
      memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      uint64_t v57 = v54[1];
      *uint64_t v53 = *v54;
      v53[1] = v57;
      uint64_t v58 = v54[3];
      v53[2] = v54[2];
      v53[3] = v58;
      uint64_t v59 = v54[5];
      v53[4] = v54[4];
      v53[5] = v59;
      uint64_t v60 = v54[7];
      v53[6] = v54[6];
      v53[7] = v60;
      uint64_t v61 = v54[9];
      v53[8] = v54[8];
      v53[9] = v61;
      v53[10] = v54[10];
      uint64_t v62 = *(int *)(v55 + 40);
      __dstb = (char *)v53 + v62;
      uint64_t v71 = (char *)v54 + v62;
      uint64_t v63 = sub_253B07160();
      uint64_t v70 = *(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v70(__dstb, v71, v63);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v53, 0, 1, v55);
    }
    uint64_t v64 = a3[26];
    *(unsigned char *)(v6 + a3[25]) = *((unsigned char *)a2 + a3[25]);
    *(unsigned char *)(v6 + v64) = *((unsigned char *)a2 + v64);
    uint64_t v65 = a3[27];
    uint64_t v66 = v6 + v65;
    uint64_t v67 = (uint64_t)a2 + v65;
    uint64_t v68 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
  }
  return v6;
}

uint64_t destroy for ContextProtoStructuredContextSiriRequestContext(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[15];
  uint64_t v5 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 28);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = (uint64_t *)(a1 + a2[16]);
  unint64_t v9 = v8[1];
  if (v9 >> 60 != 15) {
    sub_253487D84(*v8, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + a2[19];
  uint64_t v11 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, 1, v11))
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = v10 + *(int *)(v11 + 32);
    uint64_t v13 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = a1 + a2[24];
  uint64_t v15 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v14, 1, v15))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v14 + *(int *)(v15 + 40);
    uint64_t v17 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  }
  uint64_t v18 = a1 + a2[27];
  uint64_t v19 = sub_253B07160();
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8);
  return v20(v18, v19);
}

uint64_t initializeWithCopy for ContextProtoStructuredContextSiriRequestContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  uint64_t v10 = a3[15];
  __dst = (void *)(a1 + v10);
  uint64_t v11 = (void *)(a2 + v10);
  uint64_t v12 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = sub_253462A5C(&qword_269CDF998);
    memcpy(__dst, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = v11[1];
    void *__dst = *v11;
    __dst[1] = v14;
    *((_WORD *)__dst + 8) = *((_WORD *)v11 + 8);
    uint64_t v15 = *(int *)(v12 + 28);
    uint64_t v16 = (char *)__dst + v15;
    uint64_t v17 = (char *)v11 + v15;
    uint64_t v18 = sub_253B07160();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v12);
  }
  uint64_t v20 = a3[16];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = (uint64_t *)(a2 + v20);
  unint64_t v23 = v22[1];
  if (v23 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  }
  else
  {
    uint64_t v24 = *v22;
    sub_25348A9C8(*v22, v22[1]);
    *(void *)uint64_t v21 = v24;
    *(void *)(v21 + 8) = v23;
  }
  uint64_t v25 = a3[17];
  uint64_t v26 = a3[18];
  uint64_t v27 = (void *)(a1 + v25);
  uint64_t v28 = (void *)(a2 + v25);
  uint64_t v29 = v28[1];
  void *v27 = *v28;
  v27[1] = v29;
  uint64_t v30 = (void *)(a1 + v26);
  uint64_t v31 = (void *)(a2 + v26);
  uint64_t v32 = v31[1];
  void *v30 = *v31;
  v30[1] = v32;
  uint64_t v33 = a3[19];
  uint64_t v34 = (_DWORD *)(a1 + v33);
  uint64_t v35 = (_DWORD *)(a2 + v33);
  uint64_t v36 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v35, 1, v36))
  {
    uint64_t v37 = sub_253462A5C(&qword_269CDF988);
    memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    *uint64_t v34 = *v35;
    *((unsigned char *)v34 + 4) = *((unsigned char *)v35 + 4);
    uint64_t v38 = *((void *)v35 + 2);
    *((void *)v34 + 1) = *((void *)v35 + 1);
    *((void *)v34 + 2) = v38;
    v34[6] = v35[6];
    *((unsigned char *)v34 + 28) = *((unsigned char *)v35 + 28);
    v34[8] = v35[8];
    *((unsigned char *)v34 + 36) = *((unsigned char *)v35 + 36);
    uint64_t v39 = *(int *)(v36 + 32);
    uint64_t v40 = (char *)v34 + v39;
    __dsta = (char *)v35 + v39;
    uint64_t v41 = sub_253B07160();
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
    swift_bridgeObjectRetain();
    v42(v40, __dsta, v41);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v34, 0, 1, v36);
  }
  uint64_t v43 = a3[20];
  uint64_t v44 = a3[21];
  uint64_t v45 = a1 + v43;
  uint64_t v46 = a2 + v43;
  *(void *)uint64_t v45 = *(void *)v46;
  *(unsigned char *)(v45 + 8) = *(unsigned char *)(v46 + 8);
  uint64_t v47 = (void *)(a1 + v44);
  uint64_t v48 = (void *)(a2 + v44);
  uint64_t v49 = v48[1];
  void *v47 = *v48;
  v47[1] = v49;
  uint64_t v50 = a3[23];
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  *(unsigned char *)(a1 + v50) = *(unsigned char *)(a2 + v50);
  uint64_t v51 = a3[24];
  uint64_t v52 = (void *)(a1 + v51);
  uint64_t v53 = (void *)(a2 + v51);
  uint64_t v54 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v53, 1, v54))
  {
    uint64_t v55 = sub_253462A5C(&qword_269CDF978);
    memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    uint64_t v56 = v53[1];
    *uint64_t v52 = *v53;
    v52[1] = v56;
    uint64_t v57 = v53[3];
    v52[2] = v53[2];
    v52[3] = v57;
    uint64_t v58 = v53[5];
    v52[4] = v53[4];
    v52[5] = v58;
    uint64_t v59 = v53[7];
    v52[6] = v53[6];
    v52[7] = v59;
    uint64_t v60 = v53[9];
    v52[8] = v53[8];
    v52[9] = v60;
    v52[10] = v53[10];
    uint64_t v61 = *(int *)(v54 + 40);
    __dstb = (char *)v52 + v61;
    uint64_t v70 = (char *)v53 + v61;
    uint64_t v62 = sub_253B07160();
    uint64_t v69 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v69(__dstb, v70, v62);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v52, 0, 1, v54);
  }
  uint64_t v63 = a3[26];
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  *(unsigned char *)(a1 + v63) = *(unsigned char *)(a2 + v63);
  uint64_t v64 = a3[27];
  uint64_t v65 = a1 + v64;
  uint64_t v66 = a2 + v64;
  uint64_t v67 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
  return a1;
}

uint64_t assignWithCopy for ContextProtoStructuredContextSiriRequestContext(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(unsigned char *)(a1 + 82) = *(unsigned char *)(a2 + 82);
  *(unsigned char *)(a1 + 83) = *(unsigned char *)(a2 + 83);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  uint64_t v6 = a3[15];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *(void *)uint64_t v7 = *(void *)v8;
      *(void *)(v7 + 8) = *(void *)(v8 + 8);
      *(unsigned char *)(v7 + 16) = *(unsigned char *)(v8 + 16);
      *(unsigned char *)(v7 + 17) = *(unsigned char *)(v8 + 17);
      uint64_t v12 = *(int *)(v9 + 28);
      uint64_t v13 = v7 + v12;
      uint64_t v83 = v8 + v12;
      uint64_t v14 = sub_253B07160();
      uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v13, v83, v14);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_2535BC188();
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_269CDF998);
    memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v7 + 16) = *(unsigned char *)(v8 + 16);
  *(unsigned char *)(v7 + 17) = *(unsigned char *)(v8 + 17);
  uint64_t v66 = *(int *)(v9 + 28);
  uint64_t v67 = v7 + v66;
  uint64_t v68 = v8 + v66;
  uint64_t v69 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 24))(v67, v68, v69);
LABEL_7:
  uint64_t v17 = a3[16];
  uint64_t v18 = (uint64_t *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  unint64_t v20 = *(void *)(a2 + v17 + 8);
  if (*(void *)(a1 + v17 + 8) >> 60 == 15)
  {
    if (v20 >> 60 != 15)
    {
      uint64_t v21 = *v19;
      sub_25348A9C8(v21, v20);
      *uint64_t v18 = v21;
      v18[1] = v20;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v20 >> 60 == 15)
  {
    sub_2535CF77C((uint64_t)v18);
LABEL_12:
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    goto LABEL_14;
  }
  uint64_t v22 = *v19;
  sub_25348A9C8(v22, v20);
  uint64_t v23 = *v18;
  unint64_t v24 = v18[1];
  *uint64_t v18 = v22;
  v18[1] = v20;
  sub_253487D84(v23, v24);
LABEL_14:
  uint64_t v25 = a3[17];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[18];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[19];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  int v35 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v32, 1, v34);
  int v36 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v33, 1, v34);
  if (v35)
  {
    if (!v36)
    {
      int v37 = *(_DWORD *)v33;
      *(unsigned char *)(v32 + 4) = *(unsigned char *)(v33 + 4);
      *(_DWORD *)uint64_t v32 = v37;
      *(void *)(v32 + 8) = *(void *)(v33 + 8);
      *(void *)(v32 + 16) = *(void *)(v33 + 16);
      int v38 = *(_DWORD *)(v33 + 24);
      *(unsigned char *)(v32 + 28) = *(unsigned char *)(v33 + 28);
      *(_DWORD *)(v32 + 24) = v38;
      int v39 = *(_DWORD *)(v33 + 32);
      *(unsigned char *)(v32 + 36) = *(unsigned char *)(v33 + 36);
      *(_DWORD *)(v32 + 32) = v39;
      uint64_t v40 = *(int *)(v34 + 32);
      uint64_t v41 = v32 + v40;
      uint64_t v84 = v33 + v40;
      uint64_t v42 = sub_253B07160();
      uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16);
      swift_bridgeObjectRetain();
      v43(v41, v84, v42);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v32, 0, 1, v34);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v36)
  {
    sub_2535BC188();
LABEL_19:
    uint64_t v44 = sub_253462A5C(&qword_269CDF988);
    memcpy((void *)v32, (const void *)v33, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_20;
  }
  int v70 = *(_DWORD *)v33;
  *(unsigned char *)(v32 + 4) = *(unsigned char *)(v33 + 4);
  *(_DWORD *)uint64_t v32 = v70;
  *(void *)(v32 + 8) = *(void *)(v33 + 8);
  *(void *)(v32 + 16) = *(void *)(v33 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v71 = *(_DWORD *)(v33 + 24);
  *(unsigned char *)(v32 + 28) = *(unsigned char *)(v33 + 28);
  *(_DWORD *)(v32 + 24) = v71;
  int v72 = *(_DWORD *)(v33 + 32);
  *(unsigned char *)(v32 + 36) = *(unsigned char *)(v33 + 36);
  *(_DWORD *)(v32 + 32) = v72;
  uint64_t v73 = *(int *)(v34 + 32);
  uint64_t v74 = v32 + v73;
  uint64_t v75 = v33 + v73;
  uint64_t v76 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 24))(v74, v75, v76);
LABEL_20:
  uint64_t v45 = a3[20];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = (uint64_t *)(a2 + v45);
  uint64_t v48 = *v47;
  *(unsigned char *)(v46 + 8) = *((unsigned char *)v47 + 8);
  *(void *)uint64_t v46 = v48;
  uint64_t v49 = a3[21];
  uint64_t v50 = (void *)(a1 + v49);
  uint64_t v51 = (void *)(a2 + v49);
  *uint64_t v50 = *v51;
  v50[1] = v51[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  uint64_t v52 = a3[24];
  uint64_t v53 = (void *)(a1 + v52);
  uint64_t v54 = (void *)(a2 + v52);
  uint64_t v55 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  int v56 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v53, 1, v55);
  int v57 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54, 1, v55);
  if (!v56)
  {
    if (!v57)
    {
      *uint64_t v53 = *v54;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v53[1] = v54[1];
      v53[2] = v54[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v53[3] = v54[3];
      v53[4] = v54[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v53[5] = v54[5];
      v53[6] = v54[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v53[7] = v54[7];
      v53[8] = v54[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v53[9] = v54[9];
      v53[10] = v54[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v77 = *(int *)(v55 + 40);
      uint64_t v78 = (char *)v53 + v77;
      uint64_t v79 = (char *)v54 + v77;
      uint64_t v80 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 24))(v78, v79, v80);
      goto LABEL_26;
    }
    sub_2535BC188();
    goto LABEL_25;
  }
  if (v57)
  {
LABEL_25:
    uint64_t v60 = sub_253462A5C(&qword_269CDF978);
    memcpy(v53, v54, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_26;
  }
  *uint64_t v53 = *v54;
  v53[1] = v54[1];
  v53[2] = v54[2];
  v53[3] = v54[3];
  v53[4] = v54[4];
  v53[5] = v54[5];
  v53[6] = v54[6];
  v53[7] = v54[7];
  v53[8] = v54[8];
  v53[9] = v54[9];
  v53[10] = v54[10];
  uint64_t v58 = *(int *)(v55 + 40);
  uint64_t v82 = (char *)v54 + v58;
  uint64_t v85 = (char *)v53 + v58;
  uint64_t v59 = sub_253B07160();
  uint64_t v81 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v81(v85, v82, v59);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v53, 0, 1, v55);
LABEL_26:
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  *(unsigned char *)(a1 + a3[26]) = *(unsigned char *)(a2 + a3[26]);
  uint64_t v61 = a3[27];
  uint64_t v62 = a1 + v61;
  uint64_t v63 = a2 + v61;
  uint64_t v64 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 24))(v62, v63, v64);
  return a1;
}

uint64_t sub_2535CF77C(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for ContextProtoStructuredContextSiriRequestContext(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  uint64_t v8 = a3[15];
  uint64_t v9 = (_WORD *)(a1 + v8);
  int v10 = (_WORD *)(a2 + v8);
  uint64_t v11 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_253462A5C(&qword_269CDF998);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    v9[8] = v10[8];
    uint64_t v13 = *(int *)(v11 + 28);
    uint64_t v14 = (char *)v9 + v13;
    uint64_t v15 = (char *)v10 + v13;
    uint64_t v16 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v17 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  uint64_t v18 = a3[19];
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  uint64_t v19 = (_DWORD *)(a1 + v18);
  unint64_t v20 = (_DWORD *)(a2 + v18);
  uint64_t v21 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21))
  {
    uint64_t v22 = sub_253462A5C(&qword_269CDF988);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    _DWORD *v19 = *v20;
    *((unsigned char *)v19 + 4) = *((unsigned char *)v20 + 4);
    *(_OWORD *)(v19 + 2) = *(_OWORD *)(v20 + 2);
    v19[6] = v20[6];
    *((unsigned char *)v19 + 28) = *((unsigned char *)v20 + 28);
    v19[8] = v20[8];
    *((unsigned char *)v19 + 36) = *((unsigned char *)v20 + 36);
    uint64_t v23 = *(int *)(v21 + 32);
    unint64_t v24 = (char *)v19 + v23;
    uint64_t v25 = (char *)v20 + v23;
    uint64_t v26 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v21);
  }
  uint64_t v27 = a3[20];
  uint64_t v28 = a3[21];
  uint64_t v29 = a1 + v27;
  uint64_t v30 = a2 + v27;
  *(void *)uint64_t v29 = *(void *)v30;
  *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
  *(_OWORD *)(a1 + v28) = *(_OWORD *)(a2 + v28);
  uint64_t v31 = a3[23];
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  *(unsigned char *)(a1 + v31) = *(unsigned char *)(a2 + v31);
  uint64_t v32 = a3[24];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (void *)(a2 + v32);
  uint64_t v35 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v34, 1, v35))
  {
    uint64_t v36 = sub_253462A5C(&qword_269CDF978);
    memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    void *v33 = *v34;
    *(_OWORD *)(v33 + 1) = *(_OWORD *)(v34 + 1);
    *(_OWORD *)(v33 + 3) = *(_OWORD *)(v34 + 3);
    *(_OWORD *)(v33 + 5) = *(_OWORD *)(v34 + 5);
    *(_OWORD *)(v33 + 7) = *(_OWORD *)(v34 + 7);
    *(_OWORD *)(v33 + 9) = *(_OWORD *)(v34 + 9);
    uint64_t v37 = *(int *)(v35 + 40);
    int v38 = (char *)v33 + v37;
    int v39 = (char *)v34 + v37;
    uint64_t v40 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v33, 0, 1, v35);
  }
  uint64_t v41 = a3[26];
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  *(unsigned char *)(a1 + v41) = *(unsigned char *)(a2 + v41);
  uint64_t v42 = a3[27];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  uint64_t v45 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
  return a1;
}

uint64_t assignWithTake for ContextProtoStructuredContextSiriRequestContext(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  uint64_t v10 = a3[15];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  int v14 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v11, 1, v13);
  int v15 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v12, 1, v13);
  if (v14)
  {
    if (!v15)
    {
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *(_WORD *)(v11 + 16) = *(_WORD *)(v12 + 16);
      uint64_t v16 = *(int *)(v13 + 28);
      uint64_t v17 = v11 + v16;
      uint64_t v18 = v12 + v16;
      uint64_t v19 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    sub_2535BC188();
LABEL_6:
    uint64_t v20 = sub_253462A5C(&qword_269CDF998);
    memcpy((void *)v11, (const void *)v12, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v74 = *(void *)(v12 + 8);
  *(void *)uint64_t v11 = *(void *)v12;
  *(void *)(v11 + 8) = v74;
  swift_bridgeObjectRelease();
  *(_WORD *)(v11 + 16) = *(_WORD *)(v12 + 16);
  uint64_t v75 = *(int *)(v13 + 28);
  uint64_t v76 = v11 + v75;
  uint64_t v77 = v12 + v75;
  uint64_t v78 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 40))(v76, v77, v78);
LABEL_7:
  uint64_t v21 = a3[16];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  unint64_t v24 = *(void *)(a1 + v21 + 8);
  if (v24 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    goto LABEL_12;
  }
  unint64_t v25 = *(void *)(v23 + 8);
  if (v25 >> 60 == 15)
  {
    sub_2535CF77C(v22);
    goto LABEL_10;
  }
  uint64_t v26 = *(void *)v22;
  *(void *)uint64_t v22 = *(void *)v23;
  *(void *)(v22 + 8) = v25;
  sub_253487D84(v26, v24);
LABEL_12:
  uint64_t v27 = a3[17];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (uint64_t *)(a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[18];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (uint64_t *)(a2 + v32);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  void *v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[19];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  uint64_t v40 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  int v41 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v38, 1, v40);
  int v42 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v39, 1, v40);
  if (v41)
  {
    if (!v42)
    {
      *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
      *(unsigned char *)(v38 + 4) = *(unsigned char *)(v39 + 4);
      *(_OWORD *)(v38 + 8) = *(_OWORD *)(v39 + 8);
      *(_DWORD *)(v38 + 24) = *(_DWORD *)(v39 + 24);
      *(unsigned char *)(v38 + 28) = *(unsigned char *)(v39 + 28);
      *(_DWORD *)(v38 + 32) = *(_DWORD *)(v39 + 32);
      *(unsigned char *)(v38 + 36) = *(unsigned char *)(v39 + 36);
      uint64_t v43 = *(int *)(v40 + 32);
      uint64_t v44 = v38 + v43;
      uint64_t v45 = v39 + v43;
      uint64_t v46 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v38, 0, 1, v40);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v42)
  {
    sub_2535BC188();
LABEL_17:
    uint64_t v47 = sub_253462A5C(&qword_269CDF988);
    memcpy((void *)v38, (const void *)v39, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_18;
  }
  *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
  *(unsigned char *)(v38 + 4) = *(unsigned char *)(v39 + 4);
  uint64_t v79 = *(void *)(v39 + 16);
  *(void *)(v38 + 8) = *(void *)(v39 + 8);
  *(void *)(v38 + 16) = v79;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v38 + 24) = *(_DWORD *)(v39 + 24);
  *(unsigned char *)(v38 + 28) = *(unsigned char *)(v39 + 28);
  *(_DWORD *)(v38 + 32) = *(_DWORD *)(v39 + 32);
  *(unsigned char *)(v38 + 36) = *(unsigned char *)(v39 + 36);
  uint64_t v80 = *(int *)(v40 + 32);
  uint64_t v81 = v38 + v80;
  uint64_t v82 = v39 + v80;
  uint64_t v83 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 40))(v81, v82, v83);
LABEL_18:
  uint64_t v48 = a3[20];
  uint64_t v49 = a3[21];
  uint64_t v50 = a1 + v48;
  uint64_t v51 = a2 + v48;
  *(void *)uint64_t v50 = *(void *)v51;
  *(unsigned char *)(v50 + 8) = *(unsigned char *)(v51 + 8);
  uint64_t v52 = (void *)(a1 + v49);
  uint64_t v53 = (uint64_t *)(a2 + v49);
  uint64_t v55 = *v53;
  uint64_t v54 = v53[1];
  *uint64_t v52 = v55;
  v52[1] = v54;
  swift_bridgeObjectRelease();
  uint64_t v56 = a3[23];
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  *(unsigned char *)(a1 + v56) = *(unsigned char *)(a2 + v56);
  uint64_t v57 = a3[24];
  uint64_t v58 = (void *)(a1 + v57);
  uint64_t v59 = (void *)(a2 + v57);
  uint64_t v60 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  int v61 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v58, 1, v60);
  int v62 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v59, 1, v60);
  if (!v61)
  {
    if (!v62)
    {
      *uint64_t v58 = *v59;
      swift_bridgeObjectRelease();
      uint64_t v84 = v59[2];
      v58[1] = v59[1];
      v58[2] = v84;
      swift_bridgeObjectRelease();
      uint64_t v85 = v59[4];
      v58[3] = v59[3];
      v58[4] = v85;
      swift_bridgeObjectRelease();
      uint64_t v86 = v59[6];
      v58[5] = v59[5];
      v58[6] = v86;
      swift_bridgeObjectRelease();
      uint64_t v87 = v59[8];
      v58[7] = v59[7];
      v58[8] = v87;
      swift_bridgeObjectRelease();
      uint64_t v88 = v59[10];
      v58[9] = v59[9];
      v58[10] = v88;
      swift_bridgeObjectRelease();
      uint64_t v89 = *(int *)(v60 + 40);
      uint64_t v90 = (char *)v58 + v89;
      uint64_t v91 = (char *)v59 + v89;
      uint64_t v92 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 40))(v90, v91, v92);
      goto LABEL_24;
    }
    sub_2535BC188();
    goto LABEL_23;
  }
  if (v62)
  {
LABEL_23:
    uint64_t v67 = sub_253462A5C(&qword_269CDF978);
    memcpy(v58, v59, *(void *)(*(void *)(v67 - 8) + 64));
    goto LABEL_24;
  }
  *uint64_t v58 = *v59;
  *(_OWORD *)(v58 + 1) = *(_OWORD *)(v59 + 1);
  *(_OWORD *)(v58 + 3) = *(_OWORD *)(v59 + 3);
  *(_OWORD *)(v58 + 5) = *(_OWORD *)(v59 + 5);
  *(_OWORD *)(v58 + 7) = *(_OWORD *)(v59 + 7);
  *(_OWORD *)(v58 + 9) = *(_OWORD *)(v59 + 9);
  uint64_t v63 = *(int *)(v60 + 40);
  uint64_t v64 = (char *)v58 + v63;
  uint64_t v65 = (char *)v59 + v63;
  uint64_t v66 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v58, 0, 1, v60);
LABEL_24:
  uint64_t v68 = a3[26];
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  *(unsigned char *)(a1 + v68) = *(unsigned char *)(a2 + v68);
  uint64_t v69 = a3[27];
  uint64_t v70 = a1 + v69;
  uint64_t v71 = a2 + v69;
  uint64_t v72 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 40))(v70, v71, v72);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535D0264);
}

uint64_t sub_2535D0264()
{
  sub_2535E2298();
  if (v3) {
    return sub_2534F89A0(*v1);
  }
  sub_2535E2460();
  sub_253462A5C(&qword_269CDF998);
  sub_253486600();
  if (*(_DWORD *)(v5 + 84) == v0)
  {
    uint64_t v6 = v2[15];
  }
  else
  {
    sub_253462A5C(&qword_269CDF988);
    sub_253486600();
    if (*(_DWORD *)(v7 + 84) == v0)
    {
      uint64_t v6 = v2[19];
    }
    else
    {
      sub_253462A5C(&qword_269CDF978);
      sub_253486600();
      if (*(_DWORD *)(v8 + 84) == v0)
      {
        uint64_t v6 = v2[24];
      }
      else
      {
        sub_253B07160();
        uint64_t v6 = v2[27];
      }
    }
  }
  uint64_t v9 = sub_2535E22C8(v6);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, v10, v11);
}

uint64_t storeEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535D035C);
}

void sub_2535D035C()
{
  sub_2535E2244();
  if (v2)
  {
    sub_2535E2538();
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_269CDF998);
    sub_253486600();
    if (*(_DWORD *)(v3 + 84) == v1)
    {
      uint64_t v4 = v0[15];
    }
    else
    {
      sub_253462A5C(&qword_269CDF988);
      sub_253486600();
      if (*(_DWORD *)(v5 + 84) == v1)
      {
        uint64_t v4 = v0[19];
      }
      else
      {
        sub_253462A5C(&qword_269CDF978);
        sub_253486600();
        if (*(_DWORD *)(v6 + 84) == v1)
        {
          uint64_t v4 = v0[24];
        }
        else
        {
          sub_253B07160();
          uint64_t v4 = v0[27];
        }
      }
    }
    uint64_t v7 = sub_2535E2234(v4);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, v8, v9, v10);
  }
}

void sub_2535D043C()
{
  sub_2535C4EF0(319, &qword_269CE0168, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
  if (v0 <= 0x3F)
  {
    sub_2535C4EF0(319, &qword_269CE0170, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
    if (v1 <= 0x3F)
    {
      sub_2535C4EF0(319, &qword_269CE0178, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
      if (v2 <= 0x3F)
      {
        sub_253B07160();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ContextProtoStructuredContextSiriRequestContextContentRestriction(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
    uint64_t v5 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v5;
    *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
    *(unsigned char *)(a1 + 28) = *((unsigned char *)a2 + 28);
    *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
    uint64_t v6 = *(int *)(a3 + 32);
    uint64_t v7 = (uint64_t)a2 + v6;
    uint64_t v8 = a1 + v6;
    *(unsigned char *)(a1 + 36) = *((unsigned char *)a2 + 36);
    uint64_t v9 = sub_253B07160();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v8, v7, v9);
  }
  return v3;
}

uint64_t destroy for ContextProtoStructuredContextSiriRequestContextContentRestriction(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_253B07160();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for ContextProtoStructuredContextSiriRequestContextContentRestriction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = a2 + v5;
  uint64_t v7 = a1 + v5;
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  uint64_t v8 = sub_253B07160();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v7, v6, v8);
  return a1;
}

uint64_t assignWithCopy for ContextProtoStructuredContextSiriRequestContextContentRestriction(uint64_t a1, int *a2, uint64_t a3)
{
  int v6 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v6;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v7 = a2[6];
  *(unsigned char *)(a1 + 28) = *((unsigned char *)a2 + 28);
  *(_DWORD *)(a1 + 24) = v7;
  int v8 = a2[8];
  *(unsigned char *)(a1 + 36) = *((unsigned char *)a2 + 36);
  *(_DWORD *)(a1 + 32) = v8;
  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = (uint64_t)a2 + v9;
  uint64_t v12 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for ContextProtoStructuredContextSiriRequestContextContentRestriction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = a2 + v4;
  uint64_t v6 = a1 + v4;
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  uint64_t v7 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v6, v5, v7);
  return a1;
}

uint64_t assignWithTake for ContextProtoStructuredContextSiriRequestContextContentRestriction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextContentRestriction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535D0AD4);
}

uint64_t sub_2535D0AD4()
{
  sub_2535E240C();
  if (v1) {
    return sub_2535E2258(*(void *)(v0 + 16));
  }
  sub_2535E22D4();
  sub_2535E27E4();
  uint64_t v4 = sub_2535E22C8(v3);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextContentRestriction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535D0B48);
}

void sub_2535D0B48()
{
  sub_2535E2308();
  if (v2)
  {
    *(void *)(v1 + 16) = v0;
  }
  else
  {
    sub_2535E235C();
    sub_2535E2830();
    uint64_t v4 = sub_2535E2234(v3);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, v5, v6, v7);
  }
}

uint64_t sub_2535D0BA8()
{
  return sub_2535D0BB4();
}

uint64_t sub_2535D0BB4()
{
  uint64_t result = sub_253B07160();
  if (v1 <= 0x3F)
  {
    sub_2535E27D8();
    swift_initStructMetadata();
    return sub_2535E2578();
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ContextProtoStructuredContextSiriRequestContextUser(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_253B07160();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for ContextProtoStructuredContextSiriRequestContextUser(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_253B07160();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for ContextProtoStructuredContextSiriRequestContextUser(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_253B07160();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for ContextProtoStructuredContextSiriRequestContextUser(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ContextProtoStructuredContextSiriRequestContextUser(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ContextProtoStructuredContextSiriRequestContextUser(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextUser(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535D1028);
}

uint64_t sub_2535D1028()
{
  sub_2535E240C();
  if (v2) {
    return sub_2535E2258(*(void *)(v0 + 8));
  }
  sub_2535E22D4();
  uint64_t v4 = sub_2535E22C8(*(int *)(v1 + 28));
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextUser(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535D10A0);
}

void sub_2535D10A0()
{
  sub_2535E2308();
  if (v1)
  {
    sub_2535E2590();
  }
  else
  {
    sub_2535E235C();
    uint64_t v2 = sub_2535E2234(*(int *)(v0 + 28));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, v3, v4, v5);
  }
}

uint64_t sub_2535D1100()
{
  return sub_2535D25F0();
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoStructuredContextSiriRequestContextMeCard(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = a2[4];
    a1[3] = a2[3];
    a1[4] = v7;
    uint64_t v8 = a2[6];
    a1[5] = a2[5];
    a1[6] = v8;
    uint64_t v9 = a2[8];
    a1[7] = a2[7];
    a1[8] = v9;
    uint64_t v10 = a2[10];
    uint64_t v11 = *(int *)(a3 + 40);
    int v15 = (char *)a1 + v11;
    uint64_t v16 = (char *)a2 + v11;
    a1[9] = a2[9];
    a1[10] = v10;
    uint64_t v12 = sub_253B07160();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v15, v16, v12);
  }
  return v5;
}

uint64_t destroy for ContextProtoStructuredContextSiriRequestContextMeCard(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_253B07160();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for ContextProtoStructuredContextSiriRequestContextMeCard(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v13 = (char *)a2 + v9;
  int v14 = (char *)a1 + v9;
  a1[10] = a2[10];
  uint64_t v10 = sub_253B07160();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v14, v13, v10);
  return a1;
}

void *assignWithCopy for ContextProtoStructuredContextSiriRequestContextMeCard(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ContextProtoStructuredContextSiriRequestContextMeCard(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v4 = *(int *)(a3 + 40);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v7 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for ContextProtoStructuredContextSiriRequestContextMeCard(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[4];
  a1[3] = a2[3];
  a1[4] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[6];
  a1[5] = a2[5];
  a1[6] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[8];
  a1[7] = a2[7];
  a1[8] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[10];
  a1[9] = a2[9];
  a1[10] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 40);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextMeCard(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535D16C0);
}

uint64_t sub_2535D16C0()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*v0);
  }
  sub_2535E22D4();
  uint64_t v4 = sub_2535E22C8(*(int *)(v1 + 40));
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextMeCard(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535D1738);
}

void sub_2535D1738()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E2538();
  }
  else
  {
    sub_2535E235C();
    uint64_t v2 = sub_2535E2234(*(int *)(v0 + 40));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, v3, v4, v5);
  }
}

uint64_t sub_2535D1798()
{
  return sub_2535D3D88();
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoStructuredContextSiriRequestContextAddress(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    uint64_t v9 = a2[9];
    a1[8] = a2[8];
    a1[9] = v9;
    uint64_t v10 = a2[11];
    uint64_t v11 = *(int *)(a3 + 40);
    uint64_t v16 = (char *)a1 + v11;
    uint64_t v17 = (char *)a2 + v11;
    a1[10] = a2[10];
    a1[11] = v10;
    uint64_t v12 = sub_253B07160();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v16, v17, v12);
  }
  return v3;
}

uint64_t destroy for ContextProtoStructuredContextSiriRequestContextAddress(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_253B07160();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for ContextProtoStructuredContextSiriRequestContextAddress(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  uint64_t v9 = a2[11];
  uint64_t v10 = *(int *)(a3 + 40);
  uint64_t v14 = (char *)a1 + v10;
  int v15 = (char *)a2 + v10;
  a1[10] = a2[10];
  a1[11] = v9;
  uint64_t v11 = sub_253B07160();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v14, v15, v11);
  return a1;
}

void *assignWithCopy for ContextProtoStructuredContextSiriRequestContextAddress(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for ContextProtoStructuredContextSiriRequestContextAddress(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  long long v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 40);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v10 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

void *assignWithTake for ContextProtoStructuredContextSiriRequestContextAddress(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[11];
  a1[10] = a2[10];
  a1[11] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 40);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextAddress(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535D1D4C);
}

uint64_t sub_2535D1D4C()
{
  sub_2535E240C();
  if (v2) {
    return sub_2535E2258(*(void *)(v0 + 8));
  }
  sub_2535E22D4();
  uint64_t v4 = sub_2535E22C8(*(int *)(v1 + 40));
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextAddress(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535D1DC4);
}

void sub_2535D1DC4()
{
  sub_2535E2308();
  if (v1)
  {
    sub_2535E2590();
  }
  else
  {
    sub_2535E235C();
    uint64_t v2 = sub_2535E2234(*(int *)(v0 + 40));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, v3, v4, v5);
  }
}

uint64_t sub_2535D1E24()
{
  return sub_2535D3D88();
}

uint64_t assignWithCopy for ContextProtoStructuredContextIntelligenceCommandContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t assignWithTake for ContextProtoStructuredContextIntelligenceCommandContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 40);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoStructuredContextIntelligenceCommandContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535D204C);
}

uint64_t storeEnumTagSinglePayload for ContextProtoStructuredContextIntelligenceCommandContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535D2064);
}

uint64_t sub_2535D2068()
{
  return sub_2535D3D88();
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoStructedContextAppInFocusContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = (char *)a1 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v11 = sub_253B07160();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v10, v9, v11);
  }
  return v3;
}

uint64_t destroy for ContextProtoStructedContextAppInFocusContext(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_253B07160();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for ContextProtoStructedContextAppInFocusContext(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a2 + v7;
  uint64_t v9 = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v10 = sub_253B07160();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

void *assignWithCopy for ContextProtoStructedContextAppInFocusContext(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for ContextProtoStructedContextAppInFocusContext(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *assignWithTake for ContextProtoStructedContextAppInFocusContext(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoStructedContextAppInFocusContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535D2500);
}

uint64_t sub_2535D2500()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*(void *)(v0 + 8));
  }
  sub_2535E22D4();
  uint64_t v4 = sub_2535E22C8(*(int *)(v1 + 28));
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for ContextProtoStructedContextAppInFocusContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535D2578);
}

void sub_2535D2578()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E24BC();
  }
  else
  {
    sub_2535E235C();
    uint64_t v2 = sub_2535E2234(*(int *)(v0 + 28));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, v3, v4, v5);
  }
}

uint64_t sub_2535D25D8()
{
  return sub_2535D25F0();
}

uint64_t sub_2535D25F0()
{
  uint64_t result = sub_253B07160();
  if (v1 <= 0x3F)
  {
    sub_2535E27D8();
    swift_initStructMetadata();
    return sub_2535E2578();
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ContextProtoQueryDecorationOutput(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a1;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    *(void *)(a1 + 48) = a2[6];
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    *(void *)(a1 + 64) = a2[8];
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(void *)(a1 + 80) = a2[10];
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    *(void *)(a1 + 96) = a2[12];
    *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
    *(void *)(a1 + 112) = a2[14];
    *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
    *(void *)(a1 + 128) = a2[16];
    *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
    *(void *)(a1 + 144) = a2[18];
    *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
    uint64_t v7 = a2[20];
    *(unsigned char *)(a1 + 168) = *((unsigned char *)a2 + 168);
    uint64_t v8 = *(int *)(a3 + 104);
    __dst = (void *)(a1 + v8);
    uint64_t v9 = (uint64_t *)((char *)a2 + v8);
    *(void *)(a1 + 160) = v7;
    uint64_t DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = DecorationToolRetrievalResponse;
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, DecorationToolRetrievalResponse))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CDFA00);
      memcpy(__dst, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v13 = v9[1];
      void *__dst = *v9;
      __dst[1] = v13;
      uint64_t v14 = v9[3];
      __dst[2] = v9[2];
      __dst[3] = v14;
      *((_DWORD *)__dst + 8) = *((_DWORD *)v9 + 8);
      uint64_t v15 = v9[6];
      __dst[5] = v9[5];
      __dst[6] = v15;
      uint64_t v16 = *(int *)(v11 + 36);
      unint64_t v24 = (char *)v9 + v16;
      unint64_t v25 = (char *)__dst + v16;
      uint64_t v17 = sub_253B07160();
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23(v25, v24, v17);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v11);
    }
    uint64_t v18 = *(int *)(a3 + 108);
    uint64_t v19 = v6 + v18;
    uint64_t v20 = (uint64_t)a2 + v18;
    uint64_t v21 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return v6;
}

uint64_t destroy for ContextProtoQueryDecorationOutput(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 104);
  uint64_t DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, DecorationToolRetrievalResponse))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(DecorationToolRetrievalResponse + 36);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 108);
  uint64_t v9 = sub_253B07160();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  return v10(v8, v9);
}

uint64_t initializeWithCopy for ContextProtoQueryDecorationOutput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  uint64_t v5 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  uint64_t v6 = *(int *)(a3 + 104);
  __dst = (void *)(a1 + v6);
  uint64_t v7 = (void *)(a2 + v6);
  *(void *)(a1 + 160) = v5;
  uint64_t DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = DecorationToolRetrievalResponse;
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, DecorationToolRetrievalResponse))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CDFA00);
    memcpy(__dst, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = v7[1];
    void *__dst = *v7;
    __dst[1] = v11;
    uint64_t v12 = v7[3];
    __dst[2] = v7[2];
    __dst[3] = v12;
    *((_DWORD *)__dst + 8) = *((_DWORD *)v7 + 8);
    uint64_t v13 = v7[6];
    __dst[5] = v7[5];
    __dst[6] = v13;
    uint64_t v14 = *(int *)(v9 + 36);
    uint64_t v22 = (char *)v7 + v14;
    uint64_t v23 = (char *)__dst + v14;
    uint64_t v15 = sub_253B07160();
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21(v23, v22, v15);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v9);
  }
  uint64_t v16 = *(int *)(a3 + 108);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

uint64_t assignWithCopy for ContextProtoQueryDecorationOutput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  uint64_t v6 = *(int *)(a3 + 104);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, DecorationToolRetrievalResponse);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, DecorationToolRetrievalResponse);
  if (!v10)
  {
    if (!v11)
    {
      *(void *)uint64_t v7 = *(void *)v8;
      *(void *)(v7 + 8) = *(void *)(v8 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v7 + 16) = *(void *)(v8 + 16);
      *(void *)(v7 + 24) = *(void *)(v8 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v7 + 32) = *(_DWORD *)(v8 + 32);
      *(void *)(v7 + 40) = *(void *)(v8 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v7 + 48) = *(void *)(v8 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v21 = *(int *)(DecorationToolRetrievalResponse + 36);
      uint64_t v22 = v7 + v21;
      uint64_t v23 = v8 + v21;
      uint64_t v24 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
      goto LABEL_7;
    }
    sub_2535BC188();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v15 = sub_253462A5C(&qword_269CDFA00);
    memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  *(void *)(v7 + 24) = *(void *)(v8 + 24);
  *(_DWORD *)(v7 + 32) = *(_DWORD *)(v8 + 32);
  *(void *)(v7 + 40) = *(void *)(v8 + 40);
  *(void *)(v7 + 48) = *(void *)(v8 + 48);
  uint64_t v12 = *(int *)(DecorationToolRetrievalResponse + 36);
  uint64_t v26 = v8 + v12;
  uint64_t v27 = v7 + v12;
  uint64_t v28 = a3;
  uint64_t v13 = sub_253B07160();
  unint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = v13;
  a3 = v28;
  v25(v27, v26, v14);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, 0, 1, DecorationToolRetrievalResponse);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 108);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

uint64_t initializeWithTake for ContextProtoQueryDecorationOutput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  uint64_t v6 = *(int *)(a3 + 104);
  uint64_t v7 = (_OWORD *)(a1 + v6);
  uint64_t v8 = (_OWORD *)(a2 + v6);
  uint64_t DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, DecorationToolRetrievalResponse))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CDFA00);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    long long v11 = v8[1];
    *uint64_t v7 = *v8;
    v7[1] = v11;
    *((_DWORD *)v7 + 8) = *((_DWORD *)v8 + 8);
    *(_OWORD *)((char *)v7 + 40) = *(_OWORD *)((char *)v8 + 40);
    uint64_t v12 = *(int *)(DecorationToolRetrievalResponse + 36);
    uint64_t v13 = (char *)v7 + v12;
    uint64_t v14 = (char *)v8 + v12;
    uint64_t v15 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, DecorationToolRetrievalResponse);
  }
  uint64_t v16 = *(int *)(a3 + 108);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

uint64_t assignWithTake for ContextProtoQueryDecorationOutput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  uint64_t v6 = *(int *)(a3 + 104);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, DecorationToolRetrievalResponse);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, DecorationToolRetrievalResponse);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v23 = *(void *)(v8 + 8);
      *(void *)uint64_t v7 = *(void *)v8;
      *(void *)(v7 + 8) = v23;
      swift_bridgeObjectRelease();
      uint64_t v24 = *(void *)(v8 + 24);
      *(void *)(v7 + 16) = *(void *)(v8 + 16);
      *(void *)(v7 + 24) = v24;
      swift_bridgeObjectRelease();
      *(_DWORD *)(v7 + 32) = *(_DWORD *)(v8 + 32);
      *(void *)(v7 + 40) = *(void *)(v8 + 40);
      swift_bridgeObjectRelease();
      *(void *)(v7 + 48) = *(void *)(v8 + 48);
      swift_bridgeObjectRelease();
      uint64_t v25 = *(int *)(DecorationToolRetrievalResponse + 36);
      uint64_t v26 = v7 + v25;
      uint64_t v27 = v8 + v25;
      uint64_t v28 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
      goto LABEL_7;
    }
    sub_2535BC188();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v17 = sub_253462A5C(&qword_269CDFA00);
    memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  long long v12 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v12;
  *(_DWORD *)(v7 + 32) = *(_DWORD *)(v8 + 32);
  *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
  uint64_t v13 = *(int *)(DecorationToolRetrievalResponse + 36);
  uint64_t v14 = v7 + v13;
  uint64_t v15 = v8 + v13;
  uint64_t v16 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, 0, 1, DecorationToolRetrievalResponse);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 108);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoQueryDecorationOutput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535D371C);
}

uint64_t sub_2535D371C()
{
  sub_2535E2298();
  if (v3) {
    return sub_2534F89A0(*v1);
  }
  sub_2535E2460();
  sub_253462A5C(&qword_269CDFA00);
  sub_253486600();
  if (*(_DWORD *)(v5 + 84) == v0)
  {
    uint64_t v6 = *(int *)(v2 + 104);
  }
  else
  {
    sub_253B07160();
    uint64_t v6 = *(int *)(v2 + 108);
  }
  uint64_t v7 = sub_2535E22C8(v6);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, v8, v9);
}

uint64_t storeEnumTagSinglePayload for ContextProtoQueryDecorationOutput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535D37C4);
}

void sub_2535D37C4()
{
  sub_2535E2244();
  if (v2)
  {
    sub_2535E2538();
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_269CDFA00);
    sub_253486600();
    if (*(_DWORD *)(v3 + 84) == v1)
    {
      uint64_t v4 = *(int *)(v0 + 104);
    }
    else
    {
      sub_253B07160();
      uint64_t v4 = *(int *)(v0 + 108);
    }
    uint64_t v5 = sub_2535E2234(v4);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v5, v6, v7, v8);
  }
}

void sub_2535D3854()
{
  sub_2535C4EF0(319, &qword_26B249DD0, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
  if (v0 <= 0x3F)
  {
    sub_253B07160();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

#error "2535D3A4C: call analysis failed (funcsize=69)"

uint64_t _s30IntelligenceFlowPlannerSupport55ContextProtoStructuredContextIntelligenceCommandContextVwxx_0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  sub_253B07160();
  sub_25346CAF4();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  return v7(v4, v5);
}

#error "2535D3BC0: call analysis failed (funcsize=49)"

uint64_t _s30IntelligenceFlowPlannerSupport55ContextProtoStructuredContextIntelligenceCommandContextVwtk_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  uint64_t v5 = *(int *)(a3 + 40);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  sub_253B07160();
  sub_25346CAF4();
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoQueryDecorationInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535D3C88);
}

uint64_t sub_2535D3C8C()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*(void *)(v0 + 8));
  }
  sub_2535E22D4();
  uint64_t v4 = sub_2535E22C8(*(int *)(v1 + 40));
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for ContextProtoQueryDecorationInput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535D3D04);
}

void sub_2535D3D08()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E24BC();
  }
  else
  {
    sub_2535E235C();
    uint64_t v2 = sub_2535E2234(*(int *)(v0 + 40));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, v3, v4, v5);
  }
}

uint64_t sub_2535D3D68()
{
  return sub_2535D3D88();
}

uint64_t sub_2535D3D88()
{
  uint64_t result = sub_253B07160();
  if (v1 <= 0x3F)
  {
    sub_2535E27D8();
    swift_initStructMetadata();
    return sub_2535E2578();
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoDynamicEnumerationEntity(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    uint64_t v11 = sub_253B08E60();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CDFA30);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = a3[6];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_253B08E50();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v17))
    {
      uint64_t v18 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v17);
    }
    uint64_t v19 = a3[7];
    uint64_t v20 = (char *)v4 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return v4;
}

uint64_t destroy for ContextProtoDynamicEnumerationEntity(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_253B08E60();
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = sub_253B08E50();
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + a2[7];
  uint64_t v9 = sub_253B07160();
  int v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  return v10(v8, v9);
}

void *initializeWithCopy for ContextProtoDynamicEnumerationEntity(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_253B08E60();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_269CDFA30);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_253B08E50();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v13, 0, 1, v15);
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

void *assignWithCopy for ContextProtoDynamicEnumerationEntity(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B08E60();
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_253462A5C(&qword_269CDFA30);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_253B08E50();
  int v18 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v17);
  int v19 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v17);
  if (!v18)
  {
    uint64_t v20 = *(void *)(v17 - 8);
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v15, v16, v17);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v17);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v21 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v17);
LABEL_13:
  uint64_t v22 = a3[7];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
  return a1;
}

_OWORD *initializeWithTake for ContextProtoDynamicEnumerationEntity(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B08E60();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CDFA30);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_253B08E50();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  int v18 = (char *)a2 + v16;
  uint64_t v19 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

void *assignWithTake for ContextProtoDynamicEnumerationEntity(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_253B08E60();
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_253462A5C(&qword_269CDFA30);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_253B08E50();
  int v19 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v18);
  int v20 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18);
  if (!v19)
  {
    uint64_t v21 = *(void *)(v18 - 8);
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v16, v17, v18);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    uint64_t v22 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v18);
LABEL_13:
  uint64_t v23 = a3[7];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoDynamicEnumerationEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535D4B28);
}

uint64_t sub_2535D4B28()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*(void *)(v1 + 8));
  }
  sub_2535E2460();
  sub_253462A5C(&qword_269CDFA30);
  sub_253486600();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    sub_2535E263C();
  }
  else
  {
    sub_253462A5C(&qword_269CDCBC8);
    sub_253486600();
    if (*(_DWORD *)(v6 + 84) == v0)
    {
      sub_2535E2560();
    }
    else
    {
      sub_253B07160();
      sub_2535E256C();
    }
  }
  uint64_t v7 = sub_2535E22C8(v5);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, v8, v9);
}

uint64_t storeEnumTagSinglePayload for ContextProtoDynamicEnumerationEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535D4BEC);
}

void sub_2535D4BEC()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E24BC();
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_269CDFA30);
    sub_253486600();
    if (*(_DWORD *)(v2 + 84) == v0)
    {
      sub_2535E272C();
    }
    else
    {
      sub_253462A5C(&qword_269CDCBC8);
      sub_253486600();
      if (*(_DWORD *)(v4 + 84) == v0)
      {
        sub_2535E26D8();
      }
      else
      {
        sub_253B07160();
        sub_2535E26E4();
      }
    }
    uint64_t v5 = sub_2535E2234(v3);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v5, v6, v7, v8);
  }
}

void sub_2535D4C98()
{
  sub_2535C4EF0(319, &qword_26B24A360, MEMORY[0x263F802D0]);
  if (v0 <= 0x3F)
  {
    sub_2535C4EF0(319, &qword_26B24A358, MEMORY[0x263F802B0]);
    if (v1 <= 0x3F)
    {
      sub_253B07160();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ContextProtoRetrievedTool(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    uint64_t v10 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_253462A5C(&qword_269CDCB80);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v13 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v13))
      {
        uint64_t v14 = sub_253462A5C(&qword_269CDCB70);
        memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v15 = sub_253B08EF0();
            goto LABEL_10;
          case 4u:
            uint64_t v25 = v9[1];
            *uint64_t v8 = *v9;
            v8[1] = v25;
            uint64_t v26 = v9[3];
            v8[2] = v9[2];
            v8[3] = v26;
            uint64_t v27 = v9[5];
            v8[4] = v9[4];
            v8[5] = v27;
            uint64_t v28 = type metadata accessor for ContextProtoUIControlTool(0);
            uint64_t v29 = *(int *)(v28 + 28);
            uint64_t v37 = v28;
            __dst = (char *)v8 + v29;
            uint64_t v30 = (char *)v9 + v29;
            uint64_t v31 = sub_253B08F30();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v30, 1, v31))
            {
              uint64_t v32 = sub_253462A5C(&qword_269CDFA70);
              memcpy(__dst, v30, *(void *)(*(void *)(v32 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(__dst, v30, v31);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v31);
            }
            uint64_t v33 = *(int *)(v37 + 32);
            uint64_t v34 = (char *)v8 + v33;
            uint64_t v35 = (char *)v9 + v33;
            uint64_t v36 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
            break;
          default:
            uint64_t v15 = sub_253B08F30();
LABEL_10:
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v8, v9, v15);
            break;
        }
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v13);
      }
      uint64_t v16 = *(int *)(v10 + 20);
      uint64_t v17 = (char *)v8 + v16;
      uint64_t v18 = (char *)v9 + v16;
      uint64_t v19 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
    }
    uint64_t v20 = *(int *)(a3 + 32);
    uint64_t v21 = (char *)v4 + v20;
    uint64_t v22 = (uint64_t)a2 + v20;
    uint64_t v23 = sub_253B07160();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return v4;
}

uint64_t destroy for ContextProtoRetrievedTool(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    uint64_t v6 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 2u:
        case 3u:
          uint64_t v7 = sub_253B08F30();
          goto LABEL_6;
        case 1u:
          uint64_t v7 = sub_253B08EF0();
LABEL_6:
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
          break;
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v14 = type metadata accessor for ContextProtoUIControlTool(0);
          uint64_t v15 = v4 + *(int *)(v14 + 28);
          uint64_t v16 = sub_253B08F30();
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v15, 1, v16)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
          }
          uint64_t v17 = v4 + *(int *)(v14 + 32);
          uint64_t v18 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
          break;
        default:
          break;
      }
    }
    uint64_t v8 = v4 + *(int *)(v5 + 20);
    uint64_t v9 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = a1 + *(int *)(a2 + 32);
  uint64_t v11 = sub_253B07160();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  return v12(v10, v11);
}

uint64_t initializeWithCopy for ContextProtoRetrievedTool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CDCB80);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CDCB70);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v13 = sub_253B08EF0();
          goto LABEL_8;
        case 4u:
          uint64_t v23 = v8[1];
          *uint64_t v7 = *v8;
          v7[1] = v23;
          uint64_t v24 = v8[3];
          uint64_t v7[2] = v8[2];
          v7[3] = v24;
          uint64_t v25 = v8[5];
          v7[4] = v8[4];
          v7[5] = v25;
          uint64_t v26 = type metadata accessor for ContextProtoUIControlTool(0);
          uint64_t v27 = *(int *)(v26 + 28);
          uint64_t v35 = v26;
          __dst = (char *)v7 + v27;
          uint64_t v28 = (char *)v8 + v27;
          uint64_t v29 = sub_253B08F30();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v29))
          {
            uint64_t v30 = sub_253462A5C(&qword_269CDFA70);
            memcpy(__dst, v28, *(void *)(*(void *)(v30 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(__dst, v28, v29);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v29);
          }
          uint64_t v31 = *(int *)(v35 + 32);
          uint64_t v32 = (char *)v7 + v31;
          uint64_t v33 = (char *)v8 + v31;
          uint64_t v34 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
          break;
        default:
          uint64_t v13 = sub_253B08F30();
LABEL_8:
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v7, v8, v13);
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(v9 + 20);
    uint64_t v15 = (char *)v7 + v14;
    uint64_t v16 = (char *)v8 + v14;
    uint64_t v17 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v18 = *(int *)(a3 + 32);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  return a1;
}

uint64_t assignWithCopy for ContextProtoRetrievedTool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_2535BC188();
      goto LABEL_7;
    }
    uint64_t v15 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v15);
    int v17 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v18 = sub_253B08EF0();
            goto LABEL_27;
          case 4u:
            *uint64_t v7 = *v8;
            v7[1] = v8[1];
            uint64_t v7[2] = v8[2];
            v7[3] = v8[3];
            v7[4] = v8[4];
            v7[5] = v8[5];
            uint64_t v30 = type metadata accessor for ContextProtoUIControlTool(0);
            uint64_t v31 = *(int *)(v30 + 28);
            uint64_t v64 = v30;
            __dsta = (char *)v7 + v31;
            uint64_t v32 = (char *)v8 + v31;
            uint64_t v33 = sub_253B08F30();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v32, 1, v33))
            {
              uint64_t v34 = sub_253462A5C(&qword_269CDFA70);
              memcpy(__dsta, v32, *(void *)(*(void *)(v34 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(__dsta, v32, v33);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v33);
            }
            uint64_t v44 = *(int *)(v64 + 32);
            uint64_t v45 = (char *)v7 + v44;
            uint64_t v46 = (char *)v8 + v44;
            uint64_t v47 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
            break;
          default:
            uint64_t v18 = sub_253B08F30();
LABEL_27:
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v7, v8, v18);
            break;
        }
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v15);
        goto LABEL_41;
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_2535BC188();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v39 = sub_253B08EF0();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(v7, v8, v39);
              break;
            case 4u:
              *uint64_t v7 = *v8;
              v7[1] = v8[1];
              uint64_t v7[2] = v8[2];
              v7[3] = v8[3];
              v7[4] = v8[4];
              v7[5] = v8[5];
              uint64_t v40 = type metadata accessor for ContextProtoUIControlTool(0);
              uint64_t v41 = *(int *)(v40 + 28);
              int v62 = (char *)v7 + v41;
              uint64_t v63 = v40;
              uint64_t v65 = (char *)v8 + v41;
              uint64_t v42 = sub_253B08F30();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v65, 1, v42))
              {
                uint64_t v43 = sub_253462A5C(&qword_269CDFA70);
                memcpy(v62, v65, *(void *)(*(void *)(v43 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v62, v65, v42);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v62, 0, 1, v42);
              }
              uint64_t v48 = *(int *)(v63 + 32);
              uint64_t v49 = (char *)v7 + v48;
              uint64_t v50 = (char *)v8 + v48;
              uint64_t v51 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
              break;
            default:
              uint64_t v21 = sub_253B08F30();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v7, v8, v21);
              break;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_41;
      }
      sub_2535BC188();
    }
    uint64_t v20 = sub_253462A5C(&qword_269CDCB70);
    memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
LABEL_41:
    uint64_t v52 = *(int *)(v9 + 20);
    uint64_t v53 = (char *)v7 + v52;
    uint64_t v54 = (char *)v8 + v52;
    uint64_t v55 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 24))(v53, v54, v55);
    goto LABEL_42;
  }
  if (v11)
  {
LABEL_7:
    uint64_t v14 = sub_253462A5C(&qword_269CDCB80);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_42;
  }
  uint64_t v12 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v12))
  {
    uint64_t v13 = sub_253462A5C(&qword_269CDCB70);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v19 = sub_253B08EF0();
        goto LABEL_21;
      case 4u:
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        uint64_t v7[2] = v8[2];
        v7[3] = v8[3];
        v7[4] = v8[4];
        v7[5] = v8[5];
        uint64_t v61 = type metadata accessor for ContextProtoUIControlTool(0);
        uint64_t v26 = *(int *)(v61 + 28);
        __dst = (char *)v7 + v26;
        uint64_t v27 = (char *)v8 + v26;
        uint64_t v28 = sub_253B08F30();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v28))
        {
          uint64_t v29 = sub_253462A5C(&qword_269CDFA70);
          memcpy(__dst, v27, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(__dst, v27, v28);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v28);
        }
        uint64_t v35 = *(int *)(v61 + 32);
        uint64_t v36 = (char *)v7 + v35;
        uint64_t v37 = (char *)v8 + v35;
        uint64_t v38 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
        break;
      default:
        uint64_t v19 = sub_253B08F30();
LABEL_21:
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v7, v8, v19);
        break;
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v12);
  }
  uint64_t v22 = *(int *)(v9 + 20);
  uint64_t v23 = (char *)v7 + v22;
  uint64_t v24 = (char *)v8 + v22;
  uint64_t v25 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_42:
  uint64_t v56 = *(int *)(a3 + 32);
  uint64_t v57 = a1 + v56;
  uint64_t v58 = a2 + v56;
  uint64_t v59 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 24))(v57, v58, v59);
  return a1;
}

uint64_t initializeWithTake for ContextProtoRetrievedTool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (_OWORD *)(a1 + v6);
  uint64_t v8 = (_OWORD *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CDCB80);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CDCB70);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v13 = sub_253B08EF0();
          goto LABEL_8;
        case 4u:
          long long v23 = v8[1];
          *uint64_t v7 = *v8;
          v7[1] = v23;
          uint64_t v7[2] = v8[2];
          uint64_t v24 = type metadata accessor for ContextProtoUIControlTool(0);
          uint64_t v25 = *(int *)(v24 + 28);
          uint64_t v33 = v24;
          __dst = (char *)v7 + v25;
          uint64_t v26 = (char *)v8 + v25;
          uint64_t v27 = sub_253B08F30();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v26, 1, v27))
          {
            uint64_t v28 = sub_253462A5C(&qword_269CDFA70);
            memcpy(__dst, v26, *(void *)(*(void *)(v28 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(__dst, v26, v27);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v27);
          }
          uint64_t v29 = *(int *)(v33 + 32);
          uint64_t v30 = (char *)v7 + v29;
          uint64_t v31 = (char *)v8 + v29;
          uint64_t v32 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
          break;
        default:
          uint64_t v13 = sub_253B08F30();
LABEL_8:
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v13 - 8) + 32))(v7, v8, v13);
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(v9 + 20);
    uint64_t v15 = (char *)v7 + v14;
    int v16 = (char *)v8 + v14;
    uint64_t v17 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v18 = *(int *)(a3 + 32);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
  return a1;
}

uint64_t assignWithTake for ContextProtoRetrievedTool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (_OWORD *)(a1 + v6);
  uint64_t v8 = (_OWORD *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_2535BC188();
      goto LABEL_7;
    }
    uint64_t v15 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v15);
    int v17 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v18 = sub_253B08EF0();
            goto LABEL_27;
          case 4u:
            long long v32 = v8[1];
            *uint64_t v7 = *v8;
            v7[1] = v32;
            uint64_t v7[2] = v8[2];
            uint64_t v33 = type metadata accessor for ContextProtoUIControlTool(0);
            uint64_t v34 = *(int *)(v33 + 28);
            uint64_t v67 = v33;
            __dsta = (char *)v7 + v34;
            uint64_t v35 = (char *)v8 + v34;
            uint64_t v36 = sub_253B08F30();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v35, 1, v36))
            {
              uint64_t v37 = sub_253462A5C(&qword_269CDFA70);
              memcpy(__dsta, v35, *(void *)(*(void *)(v37 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(__dsta, v35, v36);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v36);
            }
            uint64_t v49 = *(int *)(v67 + 32);
            uint64_t v50 = (char *)v7 + v49;
            uint64_t v51 = (char *)v8 + v49;
            uint64_t v52 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
            break;
          default:
            uint64_t v18 = sub_253B08F30();
LABEL_27:
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v18 - 8) + 32))(v7, v8, v18);
            break;
        }
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v15);
        goto LABEL_41;
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_2535BC188();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v42 = sub_253B08EF0();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v42 - 8) + 32))(v7, v8, v42);
              break;
            case 4u:
              long long v43 = v8[1];
              *uint64_t v7 = *v8;
              v7[1] = v43;
              uint64_t v7[2] = v8[2];
              uint64_t v44 = type metadata accessor for ContextProtoUIControlTool(0);
              uint64_t v45 = *(int *)(v44 + 28);
              __dstb = (char *)v7 + v45;
              uint64_t v46 = (char *)v8 + v45;
              uint64_t v47 = sub_253B08F30();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v46, 1, v47))
              {
                uint64_t v48 = sub_253462A5C(&qword_269CDFA70);
                memcpy(__dstb, v46, *(void *)(*(void *)(v48 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(__dstb, v46, v47);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstb, 0, 1, v47);
              }
              uint64_t v53 = *(int *)(v44 + 32);
              uint64_t v54 = (char *)v7 + v53;
              uint64_t v55 = (char *)v8 + v53;
              uint64_t v56 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
              break;
            default:
              uint64_t v21 = sub_253B08F30();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v21 - 8) + 32))(v7, v8, v21);
              break;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_41;
      }
      sub_2535BC188();
    }
    uint64_t v20 = sub_253462A5C(&qword_269CDCB70);
    memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
LABEL_41:
    uint64_t v57 = *(int *)(v9 + 20);
    uint64_t v58 = (char *)v7 + v57;
    uint64_t v59 = (char *)v8 + v57;
    uint64_t v60 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 40))(v58, v59, v60);
    goto LABEL_42;
  }
  if (v11)
  {
LABEL_7:
    uint64_t v14 = sub_253462A5C(&qword_269CDCB80);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_42;
  }
  uint64_t v12 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v12))
  {
    uint64_t v13 = sub_253462A5C(&qword_269CDCB70);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v19 = sub_253B08EF0();
        goto LABEL_21;
      case 4u:
        long long v26 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v26;
        uint64_t v7[2] = v8[2];
        uint64_t v27 = type metadata accessor for ContextProtoUIControlTool(0);
        uint64_t v28 = *(int *)(v27 + 28);
        uint64_t v66 = v27;
        __dst = (char *)v7 + v28;
        uint64_t v29 = (char *)v8 + v28;
        uint64_t v30 = sub_253B08F30();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v30))
        {
          uint64_t v31 = sub_253462A5C(&qword_269CDFA70);
          memcpy(__dst, v29, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(__dst, v29, v30);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v30);
        }
        uint64_t v38 = *(int *)(v66 + 32);
        uint64_t v39 = (char *)v7 + v38;
        uint64_t v40 = (char *)v8 + v38;
        uint64_t v41 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
        break;
      default:
        uint64_t v19 = sub_253B08F30();
LABEL_21:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v19 - 8) + 32))(v7, v8, v19);
        break;
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v12);
  }
  uint64_t v22 = *(int *)(v9 + 20);
  long long v23 = (char *)v7 + v22;
  uint64_t v24 = (char *)v8 + v22;
  uint64_t v25 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_42:
  uint64_t v61 = *(int *)(a3 + 32);
  uint64_t v62 = a1 + v61;
  uint64_t v63 = a2 + v61;
  uint64_t v64 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 40))(v62, v63, v64);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoRetrievedTool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535D6E4C);
}

uint64_t sub_2535D6E4C()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*(void *)(v1 + 8));
  }
  sub_2535E2460();
  sub_253462A5C(&qword_269CDCB80);
  sub_253486600();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    sub_2535E256C();
  }
  else
  {
    sub_253B07160();
    sub_2535E27E4();
  }
  uint64_t v6 = sub_2535E22C8(v5);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, v7, v8);
}

uint64_t storeEnumTagSinglePayload for ContextProtoRetrievedTool(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535D6EEC);
}

void sub_2535D6EEC()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E24BC();
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_269CDCB80);
    sub_253486600();
    if (*(_DWORD *)(v2 + 84) == v0)
    {
      sub_2535E26E4();
    }
    else
    {
      sub_253B07160();
      sub_2535E2830();
    }
    uint64_t v4 = sub_2535E2234(v3);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, v5, v6, v7);
  }
}

void sub_2535D6F74()
{
  sub_2535C4EF0(319, &qword_269CE0220, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool.Definition);
  if (v0 <= 0x3F)
  {
    sub_253B07160();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ContextProtoRetrievedTool.Stage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2535D714CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for ContextProtoRetrievedTool.Stage()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoRetrievedTool.Definition(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CDCB70);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v11 = sub_253B08EF0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
          break;
        case 4u:
          uint64_t v12 = a2[1];
          *a1 = *a2;
          a1[1] = v12;
          uint64_t v13 = a2[3];
          a1[2] = a2[2];
          a1[3] = v13;
          uint64_t v14 = a2[5];
          a1[4] = a2[4];
          a1[5] = v14;
          uint64_t v15 = type metadata accessor for ContextProtoUIControlTool(0);
          uint64_t v16 = *(int *)(v15 + 28);
          __dst = (char *)a1 + v16;
          int v17 = (char *)a2 + v16;
          uint64_t v18 = sub_253B08F30();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18))
          {
            uint64_t v19 = sub_253462A5C(&qword_269CDFA70);
            memcpy(__dst, v17, *(void *)(*(void *)(v19 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(__dst, v17, v18);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v18);
          }
          uint64_t v20 = *(int *)(v15 + 32);
          uint64_t v21 = (char *)a1 + v20;
          uint64_t v22 = (char *)a2 + v20;
          uint64_t v23 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
          break;
        default:
          uint64_t v10 = sub_253B08F30();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v24 = *(int *)(a3 + 20);
    uint64_t v25 = (char *)a1 + v24;
    long long v26 = (char *)a2 + v24;
    uint64_t v27 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for ContextProtoRetrievedTool.Definition(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
      case 3u:
        uint64_t v5 = sub_253B08F30();
        goto LABEL_5;
      case 1u:
        uint64_t v5 = sub_253B08EF0();
LABEL_5:
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
        break;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = type metadata accessor for ContextProtoUIControlTool(0);
        uint64_t v11 = a1 + *(int *)(v10 + 28);
        uint64_t v12 = sub_253B08F30();
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v11, 1, v12)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
        }
        uint64_t v13 = a1 + *(int *)(v10 + 32);
        uint64_t v14 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
        break;
      default:
        break;
    }
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = sub_253B07160();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  return v8(v6, v7);
}

void *initializeWithCopy for ContextProtoRetrievedTool.Definition(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CDCB70);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v9 = sub_253B08EF0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        break;
      case 4u:
        uint64_t v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        uint64_t v11 = a2[3];
        a1[2] = a2[2];
        a1[3] = v11;
        uint64_t v12 = a2[5];
        a1[4] = a2[4];
        a1[5] = v12;
        uint64_t v13 = type metadata accessor for ContextProtoUIControlTool(0);
        uint64_t v14 = *(int *)(v13 + 28);
        __dst = (char *)a1 + v14;
        uint64_t v15 = (char *)a2 + v14;
        uint64_t v16 = sub_253B08F30();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16))
        {
          uint64_t v17 = sub_253462A5C(&qword_269CDFA70);
          memcpy(__dst, v15, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(__dst, v15, v16);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v16);
        }
        uint64_t v18 = *(int *)(v13 + 32);
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        uint64_t v21 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        break;
      default:
        uint64_t v8 = sub_253B08F30();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        break;
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v22 = *(int *)(a3 + 20);
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  return a1;
}

void *assignWithCopy for ContextProtoRetrievedTool.Definition(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v12 = sub_253B08EF0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
          break;
        case 4u:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          a1[3] = a2[3];
          a1[4] = a2[4];
          a1[5] = a2[5];
          uint64_t v13 = type metadata accessor for ContextProtoUIControlTool(0);
          uint64_t v14 = *(int *)(v13 + 28);
          __dst = (char *)a1 + v14;
          uint64_t v15 = (char *)a2 + v14;
          uint64_t v16 = sub_253B08F30();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16))
          {
            uint64_t v17 = sub_253462A5C(&qword_269CDFA70);
            memcpy(__dst, v15, *(void *)(*(void *)(v17 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(__dst, v15, v16);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v16);
          }
          uint64_t v24 = *(int *)(v13 + 32);
          uint64_t v25 = (char *)a1 + v24;
          long long v26 = (char *)a2 + v24;
          uint64_t v27 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
          break;
        default:
          uint64_t v9 = sub_253B08F30();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_23;
    }
LABEL_7:
    uint64_t v10 = sub_253462A5C(&qword_269CDCB70);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_23;
  }
  if (v8)
  {
    sub_2535BC188();
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_2535BC188();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v18 = sub_253B08EF0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
        break;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        uint64_t v19 = type metadata accessor for ContextProtoUIControlTool(0);
        uint64_t v20 = *(int *)(v19 + 28);
        __dsta = (char *)a1 + v20;
        uint64_t v21 = (char *)a2 + v20;
        uint64_t v22 = sub_253B08F30();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v22))
        {
          uint64_t v23 = sub_253462A5C(&qword_269CDFA70);
          memcpy(__dsta, v21, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(__dsta, v21, v22);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v22);
        }
        uint64_t v28 = *(int *)(v19 + 32);
        uint64_t v29 = (char *)a1 + v28;
        uint64_t v30 = (char *)a2 + v28;
        uint64_t v31 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
        break;
      default:
        uint64_t v11 = sub_253B08F30();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_23:
  uint64_t v32 = *(int *)(a3 + 20);
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 24))(v33, v34, v35);
  return a1;
}

_OWORD *initializeWithTake for ContextProtoRetrievedTool.Definition(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CDCB70);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v9 = sub_253B08EF0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        break;
      case 4u:
        long long v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        a1[2] = a2[2];
        uint64_t v11 = type metadata accessor for ContextProtoUIControlTool(0);
        uint64_t v12 = *(int *)(v11 + 28);
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = sub_253B08F30();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v15))
        {
          uint64_t v16 = sub_253462A5C(&qword_269CDFA70);
          memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v13, 0, 1, v15);
        }
        uint64_t v17 = *(int *)(v11 + 32);
        uint64_t v18 = (char *)a1 + v17;
        uint64_t v19 = (char *)a2 + v17;
        uint64_t v20 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
        break;
      default:
        uint64_t v8 = sub_253B08F30();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        break;
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v21 = *(int *)(a3 + 20);
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  return a1;
}

_OWORD *assignWithTake for ContextProtoRetrievedTool.Definition(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v12 = sub_253B08EF0();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
          break;
        case 4u:
          long long v13 = a2[1];
          *a1 = *a2;
          a1[1] = v13;
          a1[2] = a2[2];
          uint64_t v14 = type metadata accessor for ContextProtoUIControlTool(0);
          uint64_t v15 = *(int *)(v14 + 28);
          uint64_t v16 = (char *)a1 + v15;
          uint64_t v17 = (char *)a2 + v15;
          uint64_t v18 = sub_253B08F30();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18))
          {
            uint64_t v19 = sub_253462A5C(&qword_269CDFA70);
            memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v18);
          }
          uint64_t v28 = *(int *)(v14 + 32);
          uint64_t v29 = (char *)a1 + v28;
          uint64_t v30 = (char *)a2 + v28;
          uint64_t v31 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
          break;
        default:
          uint64_t v9 = sub_253B08F30();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_23;
    }
LABEL_7:
    uint64_t v10 = sub_253462A5C(&qword_269CDCB70);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_23;
  }
  if (v8)
  {
    sub_2535BC188();
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_2535BC188();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v20 = sub_253B08EF0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
        break;
      case 4u:
        long long v21 = a2[1];
        *a1 = *a2;
        a1[1] = v21;
        a1[2] = a2[2];
        uint64_t v22 = type metadata accessor for ContextProtoUIControlTool(0);
        uint64_t v23 = *(int *)(v22 + 28);
        uint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = sub_253B08F30();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v26))
        {
          uint64_t v27 = sub_253462A5C(&qword_269CDFA70);
          memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v26);
        }
        uint64_t v32 = *(int *)(v22 + 32);
        uint64_t v33 = (char *)a1 + v32;
        uint64_t v34 = (char *)a2 + v32;
        uint64_t v35 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
        break;
      default:
        uint64_t v11 = sub_253B08F30();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_23:
  uint64_t v36 = *(int *)(a3 + 20);
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 40))(v37, v38, v39);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoRetrievedTool.Definition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535D8C0C);
}

uint64_t sub_2535D8C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2535DE740(a1, a2, a3);
}

uint64_t storeEnumTagSinglePayload for ContextProtoRetrievedTool.Definition(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535D8C2C);
}

uint64_t sub_2535D8C2C(uint64_t a1, uint64_t a2, int a3)
{
  return sub_2535DE7D8(a1, a2, a3);
}

void sub_2535D8C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = sub_253B08EF0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        break;
      case 4u:
        uint64_t v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        uint64_t v10 = a2[3];
        a1[2] = a2[2];
        a1[3] = v10;
        uint64_t v11 = a2[5];
        a1[4] = a2[4];
        a1[5] = v11;
        uint64_t v12 = type metadata accessor for ContextProtoUIControlTool(0);
        uint64_t v13 = *(int *)(v12 + 28);
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = sub_253B08F30();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16))
        {
          uint64_t v17 = sub_253462A5C(&qword_269CDFA70);
          memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v14, 0, 1, v16);
        }
        uint64_t v18 = *(int *)(v12 + 32);
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        uint64_t v21 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        break;
      default:
        uint64_t v6 = sub_253B08F30();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 2:
    case 3:
      uint64_t v3 = sub_253B08F30();
      goto LABEL_7;
    case 1:
      uint64_t v3 = sub_253B08EF0();
      goto LABEL_7;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = type metadata accessor for ContextProtoUIControlTool(0);
      uint64_t v5 = a1 + *(int *)(v4 + 28);
      uint64_t v6 = sub_253B08F30();
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v5, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      }
      a1 += *(int *)(v4 + 32);
      uint64_t v3 = sub_253B07160();
LABEL_7:
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v7(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v5 = sub_253B08EF0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
      break;
    case 4u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      uint64_t v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      uint64_t v8 = a2[5];
      a1[4] = a2[4];
      a1[5] = v8;
      uint64_t v9 = type metadata accessor for ContextProtoUIControlTool(0);
      uint64_t v10 = *(int *)(v9 + 28);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_253B08F30();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13))
      {
        uint64_t v14 = sub_253462A5C(&qword_269CDFA70);
        memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v11, 0, 1, v13);
      }
      uint64_t v15 = *(int *)(v9 + 32);
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      break;
    default:
      uint64_t v4 = sub_253B08F30();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_2535BC188();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v5 = sub_253B08EF0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
        break;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        uint64_t v6 = type metadata accessor for ContextProtoUIControlTool(0);
        uint64_t v7 = *(int *)(v6 + 28);
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = sub_253B08F30();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
        {
          uint64_t v11 = sub_253462A5C(&qword_269CDFA70);
          memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
        }
        uint64_t v12 = *(int *)(v6 + 32);
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
        break;
      default:
        uint64_t v4 = sub_253B08F30();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(_OWORD *a1, _OWORD *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v5 = sub_253B08EF0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      break;
    case 4u:
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      a1[2] = a2[2];
      uint64_t v7 = type metadata accessor for ContextProtoUIControlTool(0);
      uint64_t v8 = *(int *)(v7 + 28);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_253B08F30();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
      {
        uint64_t v12 = sub_253462A5C(&qword_269CDFA70);
        memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
      }
      uint64_t v13 = *(int *)(v7 + 32);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      break;
    default:
      uint64_t v4 = sub_253B08F30();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *assignWithTake for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_2535BC188();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v5 = sub_253B08EF0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
        break;
      case 4u:
        long long v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        a1[2] = a2[2];
        uint64_t v7 = type metadata accessor for ContextProtoUIControlTool(0);
        uint64_t v8 = *(int *)(v7 + 28);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_253B08F30();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
        {
          uint64_t v12 = sub_253462A5C(&qword_269CDFA70);
          memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
        }
        uint64_t v13 = *(int *)(v7 + 32);
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
        break;
      default:
        uint64_t v4 = sub_253B08F30();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2535D9CEC()
{
  uint64_t result = sub_253B08F30();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_253B08EF0();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for ContextProtoUIControlTool(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoUIControlTool(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = *(int *)(a3 + 28);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v13 = sub_253B08F30();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = sub_253462A5C(&qword_269CDFA70);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v11, 0, 1, v13);
    }
    uint64_t v16 = *(int *)(a3 + 32);
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return v4;
}

uint64_t destroy for ContextProtoUIControlTool(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_253B08F30();
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_253B07160();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  return v8(v6, v7);
}

void *initializeWithCopy for ContextProtoUIControlTool(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v12 = sub_253B08F30();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = sub_253462A5C(&qword_269CDFA70);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
  }
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

void *assignWithCopy for ContextProtoUIControlTool(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B08F30();
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_253462A5C(&qword_269CDFA70);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

_OWORD *initializeWithTake for ContextProtoUIControlTool(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_253B08F30();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_269CDFA70);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

void *assignWithTake for ContextProtoUIControlTool(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_253B08F30();
  int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v12);
  int v14 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12);
  if (!v13)
  {
    uint64_t v15 = *(void *)(v12 - 8);
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_269CDFA70);
    memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 32);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoUIControlTool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535DA734);
}

uint64_t sub_2535DA734()
{
  sub_2535E240C();
  if (v2) {
    return sub_2535E2258(*(void *)(v1 + 8));
  }
  sub_2535E2460();
  sub_253462A5C(&qword_269CDFA70);
  sub_253486600();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    sub_2535E256C();
  }
  else
  {
    sub_253B07160();
    sub_2535E27E4();
  }
  uint64_t v6 = sub_2535E22C8(v5);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, v7, v8);
}

uint64_t storeEnumTagSinglePayload for ContextProtoUIControlTool(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535DA7D4);
}

void sub_2535DA7D4()
{
  sub_2535E2308();
  if (v1)
  {
    sub_2535E2590();
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_269CDFA70);
    sub_253486600();
    if (*(_DWORD *)(v2 + 84) == v0)
    {
      sub_2535E26E4();
    }
    else
    {
      sub_253B07160();
      sub_2535E2830();
    }
    uint64_t v4 = sub_2535E2234(v3);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, v5, v6, v7);
  }
}

void sub_2535DA85C()
{
  sub_2535C4EF0(319, &qword_26B24A368, MEMORY[0x263F80360]);
  if (v0 <= 0x3F)
  {
    sub_253B07160();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ContextProtoSampleInvocation(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_253B07160();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for ContextProtoSampleInvocation(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_253B07160();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for ContextProtoSampleInvocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_253B07160();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for ContextProtoSampleInvocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ContextProtoSampleInvocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ContextProtoSampleInvocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoSampleInvocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535DAD28);
}

uint64_t storeEnumTagSinglePayload for ContextProtoSampleInvocation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535DAD40);
}

uint64_t sub_2535DAD44()
{
  return sub_2535DC13C();
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoToolRetrievalType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253B08E80();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CDFAA0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_253B08E70();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = sub_253462A5C(&qword_269CDFA90);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v11, 0, 1, v13);
    }
    uint64_t v15 = *(int *)(a3 + 24);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return a1;
}

uint64_t destroy for ContextProtoToolRetrievalType(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253B08E80();
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_253B08E70();
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_253B07160();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  return v9(v7, v8);
}

char *initializeWithCopy for ContextProtoToolRetrievalType(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_253B08E80();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CDFAA0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_253B08E70();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_253462A5C(&qword_269CDFA90);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

char *assignWithCopy for ContextProtoToolRetrievalType(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_253B08E80();
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_253462A5C(&qword_269CDFAA0);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_253B08E70();
  int v15 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v14);
  int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14);
  if (!v15)
  {
    uint64_t v17 = *(void *)(v14 - 8);
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v12, v13, v14);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v14);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    uint64_t v18 = sub_253462A5C(&qword_269CDFA90);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
LABEL_13:
  uint64_t v19 = *(int *)(a3 + 24);
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

char *initializeWithTake for ContextProtoToolRetrievalType(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_253B08E80();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CDFAA0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_253B08E70();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_253462A5C(&qword_269CDFA90);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = &a1[v13];
  int v15 = &a2[v13];
  uint64_t v16 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

char *assignWithTake for ContextProtoToolRetrievalType(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_253B08E80();
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_253462A5C(&qword_269CDFAA0);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_253B08E70();
  int v15 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v14);
  int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14);
  if (!v15)
  {
    uint64_t v17 = *(void *)(v14 - 8);
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v12, v13, v14);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v14);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    uint64_t v18 = sub_253462A5C(&qword_269CDFA90);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
LABEL_13:
  uint64_t v19 = *(int *)(a3 + 24);
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoToolRetrievalType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535DB9B0);
}

uint64_t sub_2535DB9B0()
{
  sub_2534DA0C4();
  sub_253462A5C(&qword_269CDFAA0);
  sub_253486600();
  if (*(_DWORD *)(v3 + 84) == v0)
  {
    uint64_t v4 = v2;
    uint64_t v5 = v1;
  }
  else
  {
    sub_253462A5C(&qword_269CDFA90);
    sub_253486600();
    if (*(_DWORD *)(v6 + 84) == v0)
    {
      sub_2535E263C();
    }
    else
    {
      sub_253B07160();
      sub_2535E2560();
    }
    uint64_t v5 = v1 + v7;
  }
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v5, v0, v4);
}

uint64_t storeEnumTagSinglePayload for ContextProtoToolRetrievalType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535DBA60);
}

uint64_t sub_2535DBA60(uint64_t a1, uint64_t a2, int a3)
{
  sub_2534DA0C4();
  sub_253462A5C(&qword_269CDFAA0);
  sub_253486600();
  if (*(_DWORD *)(v4 + 84) != a3)
  {
    sub_253462A5C(&qword_269CDFA90);
    sub_253486600();
    if (*(_DWORD *)(v5 + 84) == a3)
    {
      sub_2535E272C();
    }
    else
    {
      sub_253B07160();
      sub_2535E26D8();
    }
  }
  sub_2535E228C();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v6, v7, v8, v9);
}

void sub_2535DBB00()
{
  sub_2535C4EF0(319, &qword_269CE0280, MEMORY[0x263F80300]);
  if (v0 <= 0x3F)
  {
    sub_2535C4EF0(319, &qword_269CE0288, MEMORY[0x263F802E8]);
    if (v1 <= 0x3F)
    {
      sub_253B07160();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoToolQuery(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_253B07160();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for ContextProtoToolQuery(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_253B07160();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for ContextProtoToolQuery(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_253B07160();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for ContextProtoToolQuery(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ContextProtoToolQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for ContextProtoToolQuery(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoToolQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535DC044);
}

uint64_t sub_2535DC048()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*(void *)(v0 + 8));
  }
  sub_2535E22D4();
  uint64_t v4 = sub_2535E22C8(*(int *)(v1 + 24));
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for ContextProtoToolQuery(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535DC0C0);
}

void sub_2535DC0C4()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E24BC();
  }
  else
  {
    sub_2535E235C();
    uint64_t v2 = sub_2535E2234(*(int *)(v0 + 24));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, v3, v4, v5);
  }
}

uint64_t sub_2535DC124()
{
  return sub_2535DC13C();
}

uint64_t sub_2535DC13C()
{
  uint64_t result = sub_253B07160();
  if (v1 <= 0x3F)
  {
    sub_2535E2794();
    return sub_2535E2578();
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoToolQueryOutput(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CDCB80);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v10))
      {
        uint64_t v11 = sub_253462A5C(&qword_269CDCB70);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v13 = sub_253B08EF0();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
            break;
          case 4u:
            uint64_t v14 = a2[1];
            *a1 = *a2;
            a1[1] = v14;
            uint64_t v15 = a2[3];
            a1[2] = a2[2];
            a1[3] = v15;
            uint64_t v16 = a2[5];
            a1[4] = a2[4];
            a1[5] = v16;
            uint64_t v17 = type metadata accessor for ContextProtoUIControlTool(0);
            uint64_t v18 = *(int *)(v17 + 28);
            uint64_t v35 = v17;
            __dst = (char *)a1 + v18;
            uint64_t v19 = (char *)a2 + v18;
            uint64_t v20 = sub_253B08F30();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
            {
              uint64_t v21 = sub_253462A5C(&qword_269CDFA70);
              memcpy(__dst, v19, *(void *)(*(void *)(v21 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(__dst, v19, v20);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v20);
            }
            uint64_t v22 = *(int *)(v35 + 32);
            uint64_t v23 = (char *)a1 + v22;
            uint64_t v24 = (char *)a2 + v22;
            uint64_t v25 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
            break;
          default:
            uint64_t v12 = sub_253B08F30();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
            break;
        }
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v10);
      }
      uint64_t v26 = *(int *)(v7 + 20);
      uint64_t v27 = (char *)a1 + v26;
      uint64_t v28 = (char *)a2 + v26;
      uint64_t v29 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v30 = *(int *)(a3 + 20);
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  }
  return a1;
}

uint64_t destroy for ContextProtoToolQueryOutput(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    uint64_t v5 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v5))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 2u:
        case 3u:
          uint64_t v6 = sub_253B08F30();
          goto LABEL_6;
        case 1u:
          uint64_t v6 = sub_253B08EF0();
LABEL_6:
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
          break;
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v13 = type metadata accessor for ContextProtoUIControlTool(0);
          uint64_t v14 = a1 + *(int *)(v13 + 28);
          uint64_t v15 = sub_253B08F30();
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v14, 1, v15)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
          }
          uint64_t v16 = a1 + *(int *)(v13 + 32);
          uint64_t v17 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
          break;
        default:
          break;
      }
    }
    uint64_t v7 = a1 + *(int *)(v4 + 20);
    uint64_t v8 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v9 = a1 + *(int *)(a2 + 20);
  uint64_t v10 = sub_253B07160();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  return v11(v9, v10);
}

void *initializeWithCopy for ContextProtoToolQueryOutput(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CDCB80);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v8))
    {
      uint64_t v9 = sub_253462A5C(&qword_269CDCB70);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v11 = sub_253B08EF0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
          break;
        case 4u:
          uint64_t v12 = a2[1];
          *a1 = *a2;
          a1[1] = v12;
          uint64_t v13 = a2[3];
          a1[2] = a2[2];
          a1[3] = v13;
          uint64_t v14 = a2[5];
          a1[4] = a2[4];
          a1[5] = v14;
          uint64_t v15 = type metadata accessor for ContextProtoUIControlTool(0);
          uint64_t v16 = *(int *)(v15 + 28);
          __dst = (char *)a1 + v16;
          uint64_t v34 = v15;
          uint64_t v17 = (char *)a2 + v16;
          uint64_t v18 = sub_253B08F30();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18))
          {
            uint64_t v19 = sub_253462A5C(&qword_269CDFA70);
            memcpy(__dst, v17, *(void *)(*(void *)(v19 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(__dst, v17, v18);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v18);
          }
          uint64_t v20 = *(int *)(v34 + 32);
          uint64_t v21 = (char *)a1 + v20;
          uint64_t v22 = (char *)a2 + v20;
          uint64_t v23 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
          break;
        default:
          uint64_t v10 = sub_253B08F30();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v8);
    }
    uint64_t v24 = *(int *)(v6 + 20);
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v28 = *(int *)(a3 + 20);
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  return a1;
}

void *assignWithCopy for ContextProtoToolQueryOutput(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_2535BC188();
      goto LABEL_7;
    }
    uint64_t v12 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v12);
    int v14 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v25 = sub_253B08EF0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
            break;
          case 4u:
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            a1[3] = a2[3];
            a1[4] = a2[4];
            a1[5] = a2[5];
            uint64_t v26 = type metadata accessor for ContextProtoUIControlTool(0);
            uint64_t v27 = *(int *)(v26 + 28);
            __dsta = (char *)a1 + v27;
            uint64_t v66 = v26;
            uint64_t v28 = (char *)a2 + v27;
            uint64_t v29 = sub_253B08F30();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v29))
            {
              uint64_t v30 = sub_253462A5C(&qword_269CDFA70);
              memcpy(__dsta, v28, *(void *)(*(void *)(v30 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(__dsta, v28, v29);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v29);
            }
            uint64_t v45 = *(int *)(v66 + 32);
            uint64_t v46 = (char *)a1 + v45;
            uint64_t v47 = (char *)a2 + v45;
            uint64_t v48 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
            break;
          default:
            uint64_t v15 = sub_253B08F30();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
            break;
        }
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v12);
        goto LABEL_39;
      }
    }
    else
    {
      if (!v14)
      {
        if (a1 != a2)
        {
          sub_2535BC188();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v39 = sub_253B08EF0();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(a1, a2, v39);
              break;
            case 4u:
              *a1 = *a2;
              a1[1] = a2[1];
              a1[2] = a2[2];
              a1[3] = a2[3];
              a1[4] = a2[4];
              a1[5] = a2[5];
              uint64_t v40 = type metadata accessor for ContextProtoUIControlTool(0);
              uint64_t v41 = *(int *)(v40 + 28);
              __dstb = (char *)a1 + v41;
              uint64_t v67 = v40;
              uint64_t v42 = (char *)a2 + v41;
              uint64_t v43 = sub_253B08F30();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v42, 1, v43))
              {
                uint64_t v44 = sub_253462A5C(&qword_269CDFA70);
                memcpy(__dstb, v42, *(void *)(*(void *)(v44 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(__dstb, v42, v43);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstb, 0, 1, v43);
              }
              uint64_t v49 = *(int *)(v67 + 32);
              uint64_t v50 = (char *)a1 + v49;
              uint64_t v51 = (char *)a2 + v49;
              uint64_t v52 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
              break;
            default:
              uint64_t v18 = sub_253B08F30();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
              break;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_39;
      }
      sub_2535BC188();
    }
    uint64_t v17 = sub_253462A5C(&qword_269CDCB70);
    memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
LABEL_39:
    uint64_t v53 = *(int *)(v6 + 20);
    uint64_t v54 = (char *)a1 + v53;
    uint64_t v55 = (char *)a2 + v53;
    uint64_t v56 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 24))(v54, v55, v56);
    goto LABEL_40;
  }
  if (v8)
  {
LABEL_7:
    uint64_t v11 = sub_253462A5C(&qword_269CDCB80);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_40;
  }
  uint64_t v9 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CDCB70);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v19 = sub_253B08EF0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
        break;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        uint64_t v20 = type metadata accessor for ContextProtoUIControlTool(0);
        uint64_t v21 = *(int *)(v20 + 28);
        __dst = (char *)a1 + v21;
        uint64_t v65 = v20;
        uint64_t v22 = (char *)a2 + v21;
        uint64_t v23 = sub_253B08F30();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v23))
        {
          uint64_t v24 = sub_253462A5C(&qword_269CDFA70);
          memcpy(__dst, v22, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(__dst, v22, v23);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v23);
        }
        uint64_t v31 = *(int *)(v65 + 32);
        uint64_t v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        uint64_t v34 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
        break;
      default:
        uint64_t v16 = sub_253B08F30();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        break;
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v9);
  }
  uint64_t v35 = *(int *)(v6 + 20);
  uint64_t v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)a2 + v35;
  uint64_t v38 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_40:
  uint64_t v57 = *(int *)(a3 + 20);
  uint64_t v58 = (char *)a1 + v57;
  uint64_t v59 = (char *)a2 + v57;
  uint64_t v60 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 24))(v58, v59, v60);
  return a1;
}

_OWORD *initializeWithTake for ContextProtoToolQueryOutput(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CDCB80);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v8))
    {
      uint64_t v9 = sub_253462A5C(&qword_269CDCB70);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v11 = sub_253B08EF0();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
          break;
        case 4u:
          long long v12 = a2[1];
          *a1 = *a2;
          a1[1] = v12;
          a1[2] = a2[2];
          uint64_t v13 = type metadata accessor for ContextProtoUIControlTool(0);
          uint64_t v14 = *(int *)(v13 + 28);
          uint64_t v15 = (char *)a1 + v14;
          uint64_t v16 = (char *)a2 + v14;
          uint64_t v17 = sub_253B08F30();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v17))
          {
            uint64_t v18 = sub_253462A5C(&qword_269CDFA70);
            memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v17);
          }
          uint64_t v19 = *(int *)(v13 + 32);
          uint64_t v20 = (char *)a1 + v19;
          uint64_t v21 = (char *)a2 + v19;
          uint64_t v22 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
          break;
        default:
          uint64_t v10 = sub_253B08F30();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v8);
    }
    uint64_t v23 = *(int *)(v6 + 20);
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v27 = *(int *)(a3 + 20);
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

_OWORD *assignWithTake for ContextProtoToolQueryOutput(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_2535BC188();
      goto LABEL_7;
    }
    uint64_t v12 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v12);
    int v14 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v27 = sub_253B08EF0();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v27 - 8) + 32))(a1, a2, v27);
            break;
          case 4u:
            long long v28 = a2[1];
            *a1 = *a2;
            a1[1] = v28;
            a1[2] = a2[2];
            uint64_t v29 = type metadata accessor for ContextProtoUIControlTool(0);
            uint64_t v30 = *(int *)(v29 + 28);
            uint64_t v31 = (char *)a1 + v30;
            uint64_t v32 = (char *)a2 + v30;
            uint64_t v33 = sub_253B08F30();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v32, 1, v33))
            {
              uint64_t v34 = sub_253462A5C(&qword_269CDFA70);
              memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v31, 0, 1, v33);
            }
            uint64_t v51 = *(int *)(v29 + 32);
            uint64_t v52 = (char *)a1 + v51;
            uint64_t v53 = (char *)a2 + v51;
            uint64_t v54 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
            break;
          default:
            uint64_t v15 = sub_253B08F30();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
            break;
        }
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v12);
        goto LABEL_39;
      }
    }
    else
    {
      if (!v14)
      {
        if (a1 != a2)
        {
          sub_2535BC188();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v43 = sub_253B08EF0();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v43 - 8) + 32))(a1, a2, v43);
              break;
            case 4u:
              long long v44 = a2[1];
              *a1 = *a2;
              a1[1] = v44;
              a1[2] = a2[2];
              uint64_t v45 = type metadata accessor for ContextProtoUIControlTool(0);
              uint64_t v46 = *(int *)(v45 + 28);
              uint64_t v47 = (char *)a1 + v46;
              uint64_t v48 = (char *)a2 + v46;
              uint64_t v49 = sub_253B08F30();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v48, 1, v49))
              {
                uint64_t v50 = sub_253462A5C(&qword_269CDFA70);
                memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v47, 0, 1, v49);
              }
              uint64_t v55 = *(int *)(v45 + 32);
              uint64_t v56 = (char *)a1 + v55;
              uint64_t v57 = (char *)a2 + v55;
              uint64_t v58 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
              break;
            default:
              uint64_t v18 = sub_253B08F30();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
              break;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_39;
      }
      sub_2535BC188();
    }
    uint64_t v17 = sub_253462A5C(&qword_269CDCB70);
    memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
LABEL_39:
    uint64_t v59 = *(int *)(v6 + 20);
    uint64_t v60 = (char *)a1 + v59;
    uint64_t v61 = (char *)a2 + v59;
    uint64_t v62 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 40))(v60, v61, v62);
    goto LABEL_40;
  }
  if (v8)
  {
LABEL_7:
    uint64_t v11 = sub_253462A5C(&qword_269CDCB80);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_40;
  }
  uint64_t v9 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CDCB70);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v19 = sub_253B08EF0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
        break;
      case 4u:
        long long v20 = a2[1];
        *a1 = *a2;
        a1[1] = v20;
        a1[2] = a2[2];
        uint64_t v21 = type metadata accessor for ContextProtoUIControlTool(0);
        uint64_t v22 = *(int *)(v21 + 28);
        uint64_t v23 = (char *)a1 + v22;
        uint64_t v24 = (char *)a2 + v22;
        uint64_t v25 = sub_253B08F30();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
        {
          uint64_t v26 = sub_253462A5C(&qword_269CDFA70);
          memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v25);
        }
        uint64_t v35 = *(int *)(v21 + 32);
        uint64_t v36 = (char *)a1 + v35;
        uint64_t v37 = (char *)a2 + v35;
        uint64_t v38 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
        break;
      default:
        uint64_t v16 = sub_253B08F30();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
        break;
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v9);
  }
  uint64_t v39 = *(int *)(v6 + 20);
  uint64_t v40 = (char *)a1 + v39;
  uint64_t v41 = (char *)a2 + v39;
  uint64_t v42 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_40:
  uint64_t v63 = *(int *)(a3 + 20);
  uint64_t v64 = (char *)a1 + v63;
  uint64_t v65 = (char *)a2 + v63;
  uint64_t v66 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 40))(v64, v65, v66);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoToolQueryOutput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535DE734);
}

uint64_t sub_2535DE734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2535DE740(a1, a2, a3);
}

uint64_t sub_2535DE740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2534DA0C4();
  sub_253462A5C(v6);
  sub_253486600();
  if (*(_DWORD *)(v8 + 84) == v3)
  {
    uint64_t v9 = v7;
    uint64_t v10 = v4;
  }
  else
  {
    uint64_t v9 = sub_253B07160();
    uint64_t v10 = v4 + *(int *)(a3 + 20);
  }
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, v3, v9);
}

uint64_t storeEnumTagSinglePayload for ContextProtoToolQueryOutput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535DE7CC);
}

uint64_t sub_2535DE7CC(uint64_t a1, uint64_t a2, int a3)
{
  return sub_2535DE7D8(a1, a2, a3);
}

uint64_t sub_2535DE7D8(uint64_t a1, uint64_t a2, int a3)
{
  sub_2534DA0C4();
  sub_253462A5C(v4);
  sub_253486600();
  if (*(_DWORD *)(v5 + 84) != a3) {
    sub_253B07160();
  }
  sub_2535E228C();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v6, v7, v8, v9);
}

void sub_2535DE854(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_2535DE874(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  sub_2535C4EF0(319, a4, a5);
  if (v5 <= 0x3F)
  {
    sub_253B07160();
    if (v6 <= 0x3F)
    {
      sub_2535E27D8();
      swift_initStructMetadata();
      sub_2535E2578();
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ContextProtoQueryDecorationToolRetrievalResponse(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
    uint64_t v7 = a2[6];
    uint64_t v8 = *(int *)(a3 + 36);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    uint64_t v11 = sub_253B07160();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  return v3;
}

uint64_t destroy for ContextProtoQueryDecorationToolRetrievalResponse(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_253B07160();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for ContextProtoQueryDecorationToolRetrievalResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v10 = sub_253B07160();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for ContextProtoQueryDecorationToolRetrievalResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ContextProtoQueryDecorationToolRetrievalResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ContextProtoQueryDecorationToolRetrievalResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoQueryDecorationToolRetrievalResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535DEE14);
}

uint64_t sub_2535DEE14()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*(void *)(v0 + 8));
  }
  sub_2535E22D4();
  uint64_t v4 = sub_2535E22C8(*(int *)(v1 + 36));
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for ContextProtoQueryDecorationToolRetrievalResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535DEE8C);
}

void sub_2535DEE8C()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E24BC();
  }
  else
  {
    sub_2535E235C();
    uint64_t v2 = sub_2535E2234(*(int *)(v0 + 36));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, v3, v4, v5);
  }
}

uint64_t sub_2535DEEEC()
{
  uint64_t result = sub_253B07160();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoSpanMatchedEntity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_253B08E50();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v13 = *(int *)(a3 + 24);
    int v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v7;
}

uint64_t destroy for ContextProtoSpanMatchedEntity(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_253B08E50();
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_253B07160();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  return v8(v6, v7);
}

void *initializeWithCopy for ContextProtoSpanMatchedEntity(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B08E50();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

void *assignWithCopy for ContextProtoSpanMatchedEntity(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B08E50();
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

void *initializeWithTake for ContextProtoSpanMatchedEntity(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B08E50();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

void *assignWithTake for ContextProtoSpanMatchedEntity(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B08E50();
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoSpanMatchedEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535DF814);
}

uint64_t sub_2535DF814()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*v1);
  }
  sub_2535E2460();
  sub_253462A5C(&qword_269CDCBC8);
  sub_253486600();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    sub_2535E263C();
  }
  else
  {
    sub_253B07160();
    sub_2535E2560();
  }
  uint64_t v6 = sub_2535E22C8(v5);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, v7, v8);
}

uint64_t storeEnumTagSinglePayload for ContextProtoSpanMatchedEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535DF8B4);
}

void sub_2535DF8B4()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E2538();
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_269CDCBC8);
    sub_253486600();
    if (*(_DWORD *)(v2 + 84) == v0)
    {
      sub_2535E272C();
    }
    else
    {
      sub_253B07160();
      sub_2535E26D8();
    }
    uint64_t v4 = sub_2535E2234(v3);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, v5, v6, v7);
  }
}

void sub_2535DF93C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_2535DF968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  sub_2535C4EF0(319, a5, a6);
  if (v6 <= 0x3F)
  {
    sub_253B07160();
    if (v7 <= 0x3F)
    {
      sub_2535E2794();
      sub_2535E2578();
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ContextProtoEntityMatch(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
    *(unsigned char *)(a1 + 52) = *((unsigned char *)a2 + 52);
    uint64_t v9 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v9;
    uint64_t v10 = a2[10];
    uint64_t v11 = a3[12];
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v10;
    uint64_t matched = type metadata accessor for ContextProtoMatchProperties(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, matched))
    {
      uint64_t v15 = sub_253462A5C(&qword_269CDFB08);
      memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      *uint64_t v12 = *v13;
      *((unsigned char *)v12 + 8) = *((unsigned char *)v13 + 8);
      v12[2] = v13[2];
      *((unsigned char *)v12 + 24) = *((unsigned char *)v13 + 24);
      uint64_t v17 = *(int *)(matched + 24);
      uint64_t v18 = (void *)((char *)v12 + v17);
      uint64_t v19 = (void *)((char *)v13 + v17);
      uint64_t v20 = type metadata accessor for ContextProtoAliasTypes(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
      {
        uint64_t v21 = sub_253462A5C(&qword_269CDFB20);
        memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        *uint64_t v18 = *v19;
        uint64_t v22 = *(int *)(v20 + 20);
        uint64_t v39 = (char *)v19 + v22;
        uint64_t v40 = (char *)v18 + v22;
        uint64_t v23 = sub_253B07160();
        uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        v38(v40, v39, v23);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
      }
      uint64_t v24 = *(int *)(matched + 28);
      uint64_t v25 = (char *)v12 + v24;
      uint64_t v26 = (char *)v13 + v24;
      uint64_t v27 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, matched);
    }
    uint64_t v28 = a3[13];
    uint64_t v29 = a3[14];
    uint64_t v30 = (void *)((char *)v4 + v28);
    uint64_t v31 = (uint64_t *)((char *)a2 + v28);
    uint64_t v32 = v31[1];
    void *v30 = *v31;
    v30[1] = v32;
    uint64_t v33 = (char *)v4 + v29;
    uint64_t v34 = (uint64_t)a2 + v29;
    uint64_t v35 = sub_253B07160();
    uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16);
    swift_bridgeObjectRetain();
    v36(v33, v34, v35);
  }
  return v4;
}

uint64_t destroy for ContextProtoEntityMatch(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 48);
  uint64_t matched = type metadata accessor for ContextProtoMatchProperties(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, matched))
  {
    uint64_t v6 = v4 + *(int *)(matched + 24);
    uint64_t v7 = type metadata accessor for ContextProtoAliasTypes(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, 1, v7))
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = v6 + *(int *)(v7 + 20);
      uint64_t v9 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    }
    uint64_t v10 = v4 + *(int *)(matched + 28);
    uint64_t v11 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + *(int *)(a2 + 56);
  uint64_t v13 = sub_253B07160();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
  return v14(v12, v13);
}

uint64_t initializeWithCopy for ContextProtoEntityMatch(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 80);
  uint64_t v10 = a3[12];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  uint64_t matched = type metadata accessor for ContextProtoMatchProperties(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, matched))
  {
    uint64_t v14 = sub_253462A5C(&qword_269CDFB08);
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    *uint64_t v11 = *v12;
    *((unsigned char *)v11 + 8) = *((unsigned char *)v12 + 8);
    v11[2] = v12[2];
    *((unsigned char *)v11 + 24) = *((unsigned char *)v12 + 24);
    uint64_t v15 = *(int *)(matched + 24);
    uint64_t v16 = (void *)((char *)v11 + v15);
    uint64_t v17 = (void *)((char *)v12 + v15);
    uint64_t v18 = type metadata accessor for ContextProtoAliasTypes(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18))
    {
      uint64_t v19 = sub_253462A5C(&qword_269CDFB20);
      memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      void *v16 = *v17;
      uint64_t v20 = *(int *)(v18 + 20);
      uint64_t v37 = (char *)v17 + v20;
      uint64_t v38 = (char *)v16 + v20;
      uint64_t v21 = sub_253B07160();
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      v36(v38, v37, v21);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v18);
    }
    uint64_t v22 = *(int *)(matched + 28);
    uint64_t v23 = (char *)v11 + v22;
    uint64_t v24 = (char *)v12 + v22;
    uint64_t v25 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v11, 0, 1, matched);
  }
  uint64_t v26 = a3[13];
  uint64_t v27 = a3[14];
  uint64_t v28 = (void *)(a1 + v26);
  uint64_t v29 = (void *)(a2 + v26);
  uint64_t v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = a1 + v27;
  uint64_t v32 = a2 + v27;
  uint64_t v33 = sub_253B07160();
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16);
  swift_bridgeObjectRetain();
  v34(v31, v32, v33);
  return a1;
}

uint64_t assignWithCopy for ContextProtoEntityMatch(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[12];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t matched = type metadata accessor for ContextProtoMatchProperties(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, matched);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, matched);
  if (!v10)
  {
    if (v11)
    {
      sub_2535BC188();
      goto LABEL_7;
    }
    uint64_t v20 = *(void *)v8;
    *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
    *(void *)uint64_t v7 = v20;
    uint64_t v21 = *(void *)(v8 + 16);
    *(unsigned char *)(v7 + 24) = *(unsigned char *)(v8 + 24);
    *(void *)(v7 + 16) = v21;
    uint64_t v22 = *(int *)(matched + 24);
    uint64_t v23 = (void *)(v7 + v22);
    uint64_t v24 = (void *)(v8 + v22);
    uint64_t v25 = type metadata accessor for ContextProtoAliasTypes(0);
    int v26 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, v25);
    int v27 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25);
    if (v26)
    {
      if (!v27)
      {
        *uint64_t v23 = *v24;
        uint64_t v28 = *(int *)(v25 + 20);
        uint64_t v55 = (char *)v24 + v28;
        uint64_t v57 = (char *)v23 + v28;
        uint64_t v29 = sub_253B07160();
        uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
        swift_bridgeObjectRetain();
        v53(v57, v55, v29);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v25);
LABEL_16:
        uint64_t v37 = *(int *)(matched + 28);
        uint64_t v38 = v7 + v37;
        uint64_t v39 = v8 + v37;
        uint64_t v40 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 24))(v38, v39, v40);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v27)
      {
        *uint64_t v23 = *v24;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v49 = *(int *)(v25 + 20);
        uint64_t v50 = (char *)v23 + v49;
        uint64_t v51 = (char *)v24 + v49;
        uint64_t v52 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 24))(v50, v51, v52);
        goto LABEL_16;
      }
      sub_2535BC188();
    }
    uint64_t v36 = sub_253462A5C(&qword_269CDFB20);
    memcpy(v23, v24, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_16;
  }
  if (v11)
  {
LABEL_7:
    uint64_t v19 = sub_253462A5C(&qword_269CDFB08);
    memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_17;
  }
  uint64_t v12 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  *(void *)uint64_t v7 = v12;
  uint64_t v13 = *(void *)(v8 + 16);
  *(unsigned char *)(v7 + 24) = *(unsigned char *)(v8 + 24);
  *(void *)(v7 + 16) = v13;
  uint64_t v14 = *(int *)(matched + 24);
  uint64_t v15 = (void *)(v7 + v14);
  uint64_t v16 = (void *)(v8 + v14);
  uint64_t v17 = type metadata accessor for ContextProtoAliasTypes(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v17))
  {
    uint64_t v18 = sub_253462A5C(&qword_269CDFB20);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    *uint64_t v15 = *v16;
    uint64_t v30 = *(int *)(v17 + 20);
    uint64_t v56 = (char *)v16 + v30;
    uint64_t v58 = (char *)v15 + v30;
    uint64_t v31 = sub_253B07160();
    uint64_t v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
    swift_bridgeObjectRetain();
    v54(v58, v56, v31);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v17);
  }
  uint64_t v32 = *(int *)(matched + 28);
  uint64_t v33 = v7 + v32;
  uint64_t v34 = v8 + v32;
  uint64_t v35 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, 0, 1, matched);
LABEL_17:
  uint64_t v41 = a3[13];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (void *)(a2 + v41);
  *uint64_t v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[14];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  uint64_t v47 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 24))(v45, v46, v47);
  return a1;
}

uint64_t initializeWithTake for ContextProtoEntityMatch(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v7 = a3[12];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t matched = type metadata accessor for ContextProtoMatchProperties(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, matched))
  {
    uint64_t v11 = sub_253462A5C(&qword_269CDFB08);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *uint64_t v8 = *v9;
    *((unsigned char *)v8 + 8) = *((unsigned char *)v9 + 8);
    v8[2] = v9[2];
    *((unsigned char *)v8 + 24) = *((unsigned char *)v9 + 24);
    uint64_t v12 = *(int *)(matched + 24);
    uint64_t v13 = (void *)((char *)v8 + v12);
    uint64_t v14 = (void *)((char *)v9 + v12);
    uint64_t v15 = type metadata accessor for ContextProtoAliasTypes(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v15))
    {
      uint64_t v16 = sub_253462A5C(&qword_269CDFB20);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      void *v13 = *v14;
      uint64_t v17 = *(int *)(v15 + 20);
      uint64_t v18 = (char *)v13 + v17;
      uint64_t v19 = (char *)v14 + v17;
      uint64_t v20 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v13, 0, 1, v15);
    }
    uint64_t v21 = *(int *)(matched + 28);
    uint64_t v22 = (char *)v8 + v21;
    uint64_t v23 = (char *)v9 + v21;
    uint64_t v24 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, matched);
  }
  uint64_t v25 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
  return a1;
}

uint64_t assignWithTake for ContextProtoEntityMatch(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[12];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t matched = type metadata accessor for ContextProtoMatchProperties(0);
  int v14 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v11, 1, matched);
  int v15 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v12, 1, matched);
  if (!v14)
  {
    if (v15)
    {
      sub_2535BC188();
      goto LABEL_7;
    }
    *(void *)uint64_t v11 = *(void *)v12;
    *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
    *(void *)(v11 + 16) = *(void *)(v12 + 16);
    *(unsigned char *)(v11 + 24) = *(unsigned char *)(v12 + 24);
    uint64_t v22 = *(int *)(matched + 24);
    uint64_t v23 = (void *)(v11 + v22);
    uint64_t v24 = (void *)(v12 + v22);
    uint64_t v25 = type metadata accessor for ContextProtoAliasTypes(0);
    int v26 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, v25);
    int v27 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25);
    if (v26)
    {
      if (!v27)
      {
        *uint64_t v23 = *v24;
        uint64_t v28 = *(int *)(v25 + 20);
        uint64_t v29 = (char *)v23 + v28;
        uint64_t v30 = (char *)v24 + v28;
        uint64_t v31 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v25);
LABEL_16:
        uint64_t v41 = *(int *)(matched + 28);
        uint64_t v42 = v11 + v41;
        uint64_t v43 = v12 + v41;
        uint64_t v44 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 40))(v42, v43, v44);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v27)
      {
        *uint64_t v23 = *v24;
        swift_bridgeObjectRelease();
        uint64_t v55 = *(int *)(v25 + 20);
        uint64_t v56 = (char *)v23 + v55;
        uint64_t v57 = (char *)v24 + v55;
        uint64_t v58 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 40))(v56, v57, v58);
        goto LABEL_16;
      }
      sub_2535BC188();
    }
    uint64_t v40 = sub_253462A5C(&qword_269CDFB20);
    memcpy(v23, v24, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_16;
  }
  if (v15)
  {
LABEL_7:
    uint64_t v21 = sub_253462A5C(&qword_269CDFB08);
    memcpy((void *)v11, (const void *)v12, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_17;
  }
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  *(void *)(v11 + 16) = *(void *)(v12 + 16);
  *(unsigned char *)(v11 + 24) = *(unsigned char *)(v12 + 24);
  uint64_t v16 = *(int *)(matched + 24);
  uint64_t v17 = (void *)(v11 + v16);
  uint64_t v18 = (void *)(v12 + v16);
  uint64_t v19 = type metadata accessor for ContextProtoAliasTypes(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
  {
    uint64_t v20 = sub_253462A5C(&qword_269CDFB20);
    memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    *uint64_t v17 = *v18;
    uint64_t v32 = *(int *)(v19 + 20);
    uint64_t v33 = (char *)v17 + v32;
    uint64_t v34 = (char *)v18 + v32;
    uint64_t v35 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
  }
  uint64_t v36 = *(int *)(matched + 28);
  uint64_t v37 = v11 + v36;
  uint64_t v38 = v12 + v36;
  uint64_t v39 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v11, 0, 1, matched);
LABEL_17:
  uint64_t v45 = a3[13];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (uint64_t *)(a2 + v45);
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  *uint64_t v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  uint64_t v50 = a3[14];
  uint64_t v51 = a1 + v50;
  uint64_t v52 = a2 + v50;
  uint64_t v53 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 40))(v51, v52, v53);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoEntityMatch(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535E0D9C);
}

uint64_t sub_2535E0D9C()
{
  sub_2535E2298();
  if (v3) {
    return sub_2534F89A0(*(void *)(v1 + 8));
  }
  sub_2535E2460();
  sub_253462A5C(&qword_269CDFB08);
  sub_253486600();
  if (*(_DWORD *)(v5 + 84) == v0)
  {
    uint64_t v6 = *(int *)(v2 + 48);
  }
  else
  {
    sub_253B07160();
    uint64_t v6 = *(int *)(v2 + 56);
  }
  uint64_t v7 = sub_2535E22C8(v6);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, v8, v9);
}

uint64_t storeEnumTagSinglePayload for ContextProtoEntityMatch(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535E0E44);
}

void sub_2535E0E44()
{
  sub_2535E2244();
  if (v2)
  {
    sub_2535E24BC();
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_269CDFB08);
    sub_253486600();
    if (*(_DWORD *)(v3 + 84) == v1)
    {
      uint64_t v4 = *(int *)(v0 + 48);
    }
    else
    {
      sub_253B07160();
      uint64_t v4 = *(int *)(v0 + 56);
    }
    uint64_t v5 = sub_2535E2234(v4);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v5, v6, v7, v8);
  }
}

void sub_2535E0ED4()
{
  sub_2535C4EF0(319, &qword_269CE02D0, (void (*)(uint64_t))type metadata accessor for ContextProtoMatchProperties);
  if (v0 <= 0x3F)
  {
    sub_253B07160();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ContextProtoMatchProperties(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    uint64_t v10 = type metadata accessor for ContextProtoAliasTypes(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_253462A5C(&qword_269CDFB20);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      *uint64_t v8 = *v9;
      uint64_t v13 = *(int *)(v10 + 20);
      int v14 = (char *)v8 + v13;
      uint64_t v22 = (char *)v9 + v13;
      uint64_t v15 = sub_253B07160();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v14, v22, v15);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
    }
    uint64_t v17 = *(int *)(a3 + 28);
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = sub_253B07160();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return v4;
}

uint64_t destroy for ContextProtoMatchProperties(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for ContextProtoAliasTypes(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  uint64_t v9 = sub_253B07160();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  return v10(v8, v9);
}

uint64_t initializeWithCopy for ContextProtoMatchProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ContextProtoAliasTypes(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CDFB20);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *uint64_t v7 = *v8;
    uint64_t v11 = *(int *)(v9 + 20);
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v20 = (char *)v8 + v11;
    uint64_t v13 = sub_253B07160();
    int v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v12, v20, v13);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v15 = *(int *)(a3 + 28);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for ContextProtoMatchProperties(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)((char *)a2 + v8);
  uint64_t v11 = type metadata accessor for ContextProtoAliasTypes(0);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v11);
  int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11);
  if (!v12)
  {
    if (!v13)
    {
      void *v9 = *v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v24 = *(int *)(v11 + 20);
      uint64_t v25 = (char *)v9 + v24;
      int v26 = (char *)v10 + v24;
      uint64_t v27 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 24))(v25, v26, v27);
      goto LABEL_7;
    }
    sub_2535BC188();
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v18 = sub_253462A5C(&qword_269CDFB20);
    memcpy(v9, v10, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  void *v9 = *v10;
  uint64_t v14 = *(int *)(v11 + 20);
  uint64_t v15 = (char *)v9 + v14;
  uint64_t v28 = (char *)v10 + v14;
  uint64_t v16 = sub_253B07160();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  v17(v15, v28, v16);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
LABEL_7:
  uint64_t v19 = *(int *)(a3 + 28);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (uint64_t)a2 + v19;
  uint64_t v22 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for ContextProtoMatchProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ContextProtoAliasTypes(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CDFB20);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *uint64_t v7 = *v8;
    uint64_t v11 = *(int *)(v9 + 20);
    int v12 = (char *)v7 + v11;
    int v13 = (char *)v8 + v11;
    uint64_t v14 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v15 = *(int *)(a3 + 28);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for ContextProtoMatchProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ContextProtoAliasTypes(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *uint64_t v7 = *v8;
      swift_bridgeObjectRelease();
      uint64_t v22 = *(int *)(v9 + 20);
      uint64_t v23 = (char *)v7 + v22;
      uint64_t v24 = (char *)v8 + v22;
      uint64_t v25 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 40))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_2535BC188();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_269CDFB20);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v7 = *v8;
  uint64_t v12 = *(int *)(v9 + 20);
  int v13 = (char *)v7 + v12;
  uint64_t v14 = (char *)v8 + v12;
  uint64_t v15 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 28);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoMatchProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535E19F0);
}

uint64_t sub_2535E19F0()
{
  sub_2534DA0C4();
  sub_253462A5C(&qword_269CDFB20);
  sub_253486600();
  if (*(_DWORD *)(v1 + 84) == v0)
  {
    sub_2535E2560();
  }
  else
  {
    sub_253B07160();
    sub_2535E256C();
  }
  uint64_t v3 = sub_2535E22C8(v2);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v3, v4, v5);
}

uint64_t storeEnumTagSinglePayload for ContextProtoMatchProperties(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535E1A74);
}

uint64_t sub_2535E1A74(uint64_t a1, uint64_t a2, int a3)
{
  sub_253462A5C(&qword_269CDFB20);
  sub_253486600();
  if (*(_DWORD *)(v4 + 84) != a3) {
    sub_253B07160();
  }
  sub_2535E228C();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v5, v6, v7, v8);
}

void sub_2535E1AF8()
{
  sub_2535C4EF0(319, &qword_269CE02E8, (void (*)(uint64_t))type metadata accessor for ContextProtoAliasTypes);
  if (v0 <= 0x3F)
  {
    sub_253B07160();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoAliasTypes(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_253B07160();
    int v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for ContextProtoAliasTypes(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_253B07160();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for ContextProtoAliasTypes(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_253B07160();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *assignWithCopy for ContextProtoAliasTypes(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *initializeWithTake for ContextProtoAliasTypes(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for ContextProtoAliasTypes(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoAliasTypes(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535E1F8C);
}

uint64_t sub_2535E1F8C()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*v0);
  }
  sub_2535E22D4();
  uint64_t v4 = sub_2535E22C8(*(int *)(v1 + 20));
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for ContextProtoAliasTypes(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535E2004);
}

void sub_2535E2004()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E2538();
  }
  else
  {
    sub_2535E235C();
    uint64_t v2 = sub_2535E2234(*(int *)(v0 + 20));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, v3, v4, v5);
  }
}

uint64_t sub_2535E2064()
{
  uint64_t result = sub_253B07160();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2535E2234@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_2535E2258@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF) {
    LODWORD(a1) = -1;
  }
  int v1 = a1 - 1;
  if (v1 < 0) {
    int v1 = -1;
  }
  return (v1 + 1);
}

unint64_t sub_2535E2278@<X0>(uint64_t a1@<X8>)
{
  return a1 | ((unint64_t)v1 << 32);
}

uint64_t sub_2535E22A8(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
}

uint64_t sub_2535E22C8@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_2535E22D4()
{
  return sub_253B07160();
}

uint64_t sub_2535E22F0()
{
  return sub_253B07160();
}

uint64_t sub_2535E233C()
{
  return 0;
}

uint64_t sub_2535E2348()
{
  return 0;
}

uint64_t sub_2535E235C()
{
  return sub_253B07160();
}

uint64_t sub_2535E23B8()
{
  return type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
}

uint64_t sub_2535E23D0(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_2535E241C()
{
  return 0;
}

uint64_t sub_2535E2444()
{
  return 0;
}

uint64_t sub_2535E246C@<X0>(uint64_t a1@<X8>)
{
  return sub_2534B45B0(v2 + a1, v3, v1);
}

uint64_t sub_2535E2488()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2535E24A4()
{
  return type metadata accessor for ContextProtoContextMetadata(0);
}

void sub_2535E24BC()
{
  *(void *)(v1 + 8) = (v0 - 1);
}

uint64_t sub_2535E24D4()
{
  return 0;
}

uint64_t sub_2535E24F4()
{
  return type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
}

uint64_t sub_2535E2510()
{
  return 0;
}

void sub_2535E2538()
{
  *uint64_t v1 = (v0 - 1);
}

uint64_t sub_2535E2578()
{
  return 0;
}

void sub_2535E2584()
{
  void *v0 = 0;
  v0[1] = 0xE000000000000000;
}

void sub_2535E2590()
{
  *(void *)(v1 + 8) = v0;
}

uint64_t sub_2535E259C()
{
  return 0;
}

uint64_t sub_2535E25C4()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_2535E25F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

uint64_t sub_2535E260C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_2535E2624()
{
  return type metadata accessor for ContextProtoRetrievedContext(0);
}

uint64_t sub_2535E2648()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2535E2660(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_2535E269C(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_2535E26F0(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_2535E2738(uint64_t a1, uint64_t a2)
{
  return sub_2535BC290(v3, a2, v2);
}

uint64_t sub_2535E2750(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
}

uint64_t _s30IntelligenceFlowPlannerSupport23ContextProtoBoundingBoxV6heightSfSgvs_0(uint64_t result)
{
  *(_DWORD *)(v1 + 24) = result;
  *(unsigned char *)(v1 + 28) = BYTE4(result) & 1;
  return result;
}

uint64_t _s30IntelligenceFlowPlannerSupport23ContextProtoBoundingBoxV11xCoordinateSfSgvs_0(uint64_t result)
{
  *(_DWORD *)uint64_t v1 = result;
  *(unsigned char *)(v1 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_2535E2794()
{
  return swift_initStructMetadata();
}

uint64_t sub_2535E27CC()
{
  return v0;
}

uint64_t sub_2535E27D8()
{
  return v0;
}

void sub_2535E27F0(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)(v1 + a1);
  *uint64_t v2 = 0;
  v2[1] = 0;
}

void sub_2535E27FC()
{
  uint64_t v2 = (void *)(v0 + *(int *)(v1 + 40));
  *uint64_t v2 = 0;
  v2[1] = 0;
}

uint64_t sub_2535E2810@<X0>(uint64_t a1@<X8>)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1 + a1, 1, 1, v2);
}

uint64_t sub_2535E283C()
{
  return 0;
}

uint64_t sub_2535E2850()
{
  return sub_253B08E50();
}

uint64_t sub_2535E2870()
{
  return type metadata accessor for ContextProtoConfidence(0);
}

uint64_t sub_2535E288C()
{
  return type metadata accessor for ContextProtoContextMetadata(0);
}

void sub_2535E28A4(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(unsigned char *)(a1 + 4) = 1;
}

void sub_2535E28C4(uint64_t a1@<X8>)
{
  uint64_t v4 = v2 + a1;
  *(void *)uint64_t v4 = v3;
  *(unsigned char *)(v4 + 8) = v1 & 1;
}

uint64_t sub_2535E28D8()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CE0300);
  sub_253462BD4(v0, (uint64_t)qword_269CE0300);
  sub_253462A5C(&qword_26B24A588);
  char v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B36A70;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "UNKNOWN";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "VOICE_ONLY";
  *(void *)(v10 + 8) = 10;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  int v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *int v11 = 2;
  *(void *)uint64_t v12 = "VOICE_FORWARD";
  *((void *)v12 + 1) = 13;
  v12[16] = 2;
  v9();
  int v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 3;
  *(void *)uint64_t v14 = "DISPLAY_FORWARD";
  *((void *)v14 + 1) = 15;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 4;
  *(void *)uint64_t v16 = "DISPLAY_ONLY";
  *((void *)v16 + 1) = 12;
  v16[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ResponseGenerationProtoResponseMode._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA940, (uint64_t)qword_269CE0300, a1);
}

unint64_t static ResponseGenerationProtoResponseGenerationInput.protoMessageName.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_2535E2B98()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CE0318);
  sub_253462BD4(v0, (uint64_t)qword_269CE0318);
  sub_253462A5C(&qword_26B24A588);
  char v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B36A70;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "client_request_id";
  *(void *)(v6 + 8) = 17;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "utterance";
  *(void *)(v10 + 8) = 9;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  int v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *int v11 = 3;
  *(void *)uint64_t v12 = "response_mode";
  *((void *)v12 + 1) = 13;
  v12[16] = 2;
  v9();
  int v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 4;
  *(void *)uint64_t v14 = "response_locale";
  *((void *)v14 + 1) = 15;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "statement_result_digests";
  *((void *)v16 + 1) = 24;
  v16[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ResponseGenerationProtoResponseGenerationInput._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA948, (uint64_t)qword_269CE0318, a1);
}

uint64_t ResponseGenerationProtoResponseGenerationInput.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_2535B39E4(a1, a2);
  uint64_t result = sub_253B07230();
  if (!v2)
  {
    while ((v4 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 4:
          sub_253B07340();
          break;
        case 3:
          sub_2535B387C();
          sub_2535E2F14();
          break;
        case 5:
          sub_2535B387C();
          sub_2535E2F78();
          break;
        default:
          break;
      }
      uint64_t result = sub_253B07230();
    }
  }
  return result;
}

uint64_t sub_2535E2F14()
{
  return sub_253B07290();
}

uint64_t sub_2535E2F78()
{
  return sub_253B07370();
}

uint64_t ResponseGenerationProtoResponseGenerationInput.traverse<A>(visitor:)()
{
  uint64_t v2 = v1;
  sub_2535B399C();
  if (!v3 || (result = sub_2535B3B2C(), (uint64_t v2 = v1) == 0))
  {
    sub_2535B399C();
    if (!v5 || (result = sub_2535B3B2C(), (uint64_t v2 = v1) == 0))
    {
      if (!*(unsigned char *)(v0 + 32) || (sub_2535E5AF8(), v1 = v2, uint64_t result = sub_253B07450(), !v2))
      {
        sub_2535B399C();
        if (!v6 || (result = sub_2535B3B2C(), (uint64_t v2 = v1) == 0))
        {
          if (!*(void *)(*(void *)(v0 + 56) + 16)
            || (type metadata accessor for ResponseGenerationProtoStatementResultDigest(0),
                sub_2535E5F28(&qword_269CE0350, (void (*)(uint64_t))type metadata accessor for ResponseGenerationProtoStatementResultDigest), uint64_t result = sub_253B074F0(), !v2))
          {
            type metadata accessor for ResponseGenerationProtoResponseGenerationInput(0);
            return sub_253B07140();
          }
        }
      }
    }
  }
  return result;
}

uint64_t static ResponseGenerationProtoResponseGenerationInput.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253B07160();
  sub_253465998();
  uint64_t v6 = v5;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v22 - v11;
  BOOL v13 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v13 || (char v14 = 0, (sub_253B0A4C0() & 1) != 0))
  {
    BOOL v15 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v15 || (char v14 = 0, (sub_253B0A4C0() & 1) != 0))
    {
      if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32)) {
        goto LABEL_19;
      }
      BOOL v16 = *(void *)(a1 + 40) == *(void *)(a2 + 40) && *(void *)(a1 + 48) == *(void *)(a2 + 48);
      if (v16 || (char v14 = 0, (sub_253B0A4C0() & 1) != 0))
      {
        sub_2534BAAA0();
        if (v17)
        {
          uint64_t v18 = type metadata accessor for ResponseGenerationProtoResponseGenerationInput(0);
          uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
          v19(v12, a1 + *(int *)(v18 + 36), v4);
          v19(v10, a2 + *(int *)(v18 + 36), v4);
          sub_2535E5F28((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
          char v14 = sub_253B096B0();
          uint64_t v20 = *(void (**)(void))(v6 + 8);
          sub_2535B3940();
          v20();
          sub_2535B3940();
          v20();
          return v14 & 1;
        }
LABEL_19:
        char v14 = 0;
      }
    }
  }
  return v14 & 1;
}

uint64_t ResponseGenerationProtoResponseGenerationInput.hashValue.getter()
{
  return sub_2535E58A4((void (*)(void))type metadata accessor for ResponseGenerationProtoResponseGenerationInput, &qword_269CE0358, (void (*)(uint64_t))type metadata accessor for ResponseGenerationProtoResponseGenerationInput);
}

unint64_t sub_2535E33D8()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_2535E3400(uint64_t a1, uint64_t a2)
{
  return ResponseGenerationProtoResponseGenerationInput.decodeMessage<A>(decoder:)(a1, a2);
}

uint64_t sub_2535E3418()
{
  return ResponseGenerationProtoResponseGenerationInput.traverse<A>(visitor:)();
}

uint64_t sub_2535E3430(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535E5F28(&qword_269CE03F0, (void (*)(uint64_t))type metadata accessor for ResponseGenerationProtoResponseGenerationInput);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535E34B0()
{
  sub_2535E5F28((unint64_t *)&qword_269CE03C8, (void (*)(uint64_t))type metadata accessor for ResponseGenerationProtoResponseGenerationInput);
  return sub_253B073E0();
}

uint64_t sub_2535E3520()
{
  sub_2535E5F28((unint64_t *)&qword_269CE03C8, (void (*)(uint64_t))type metadata accessor for ResponseGenerationProtoResponseGenerationInput);
  return sub_253B073F0();
}

unint64_t static ResponseGenerationProtoStatementResultDigest.protoMessageName.getter()
{
  return 0xD000000000000028;
}

uint64_t sub_2535E35BC()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CE0330);
  sub_253462BD4(v0, (uint64_t)qword_269CE0330);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B36A50;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "tool_definition";
  *(void *)(v6 + 8) = 15;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "action_created";
  *(void *)(v10 + 8) = 14;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "statement_outcome";
  *((void *)v12 + 1) = 17;
  v12[16] = 2;
  v9();
  BOOL v13 = (void *)(v5 + 3 * v2);
  char v14 = (char *)v13 + v1[14];
  void *v13 = 4;
  *(void *)char v14 = "undo_operation";
  *((void *)v14 + 1) = 14;
  v14[16] = 2;
  v9();
  BOOL v15 = (void *)(v5 + 4 * v2);
  BOOL v16 = (char *)v15 + v1[14];
  *BOOL v15 = 5;
  *(void *)BOOL v16 = "response_manifest";
  *((void *)v16 + 1) = 17;
  v16[16] = 2;
  v9();
  char v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *char v17 = 6;
  *(void *)uint64_t v18 = "return_value_type_display_representation";
  *((void *)v18 + 1) = 40;
  v18[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static ResponseGenerationProtoStatementResultDigest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA950, (uint64_t)qword_269CE0330, a1);
}

uint64_t ResponseGenerationProtoStatementResultDigest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_2535B39E4(a1, a2);
  while (1)
  {
    uint64_t result = sub_253B07230();
    if (v2 || (v4 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        sub_2535B387C();
        sub_2535E3970();
        break;
      case 2:
        sub_2535B387C();
        sub_2535E3A10();
        break;
      case 3:
        sub_2535B387C();
        sub_2535E3AC0();
        break;
      case 4:
        sub_2535B387C();
        sub_2535E3B70();
        break;
      case 5:
        sub_2535B387C();
        sub_2535E3BE8();
        break;
      case 6:
        sub_2535B387C();
        sub_2535E3C98();
        break;
      default:
        continue;
    }
  }
}

uint64_t sub_2535E3970()
{
  return sub_253B07380();
}

uint64_t sub_2535E3A10()
{
  return sub_253B07380();
}

uint64_t sub_2535E3AC0()
{
  return sub_253B07380();
}

uint64_t sub_2535E3B70()
{
  return sub_253B07280();
}

uint64_t sub_2535E3BE8()
{
  return sub_253B07380();
}

uint64_t sub_2535E3C98()
{
  return sub_253B07380();
}

uint64_t ResponseGenerationProtoStatementResultDigest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_2535E3E1C(v3, a1, a2, a3);
  if (!v4)
  {
    uint64_t v6 = sub_2535B39B0();
    sub_2535E4004(v6);
    uint64_t v7 = sub_2535B39B0();
    sub_2535E41C4(v7);
    uint64_t v8 = sub_2535B39B0();
    sub_2535E4384(v8);
    uint64_t v9 = sub_2535B39B0();
    sub_2535E4414(v9);
    uint64_t v10 = sub_2535B39B0();
    sub_2535E45D4(v10, v11, v12, v13);
    type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
    return sub_253B07140();
  }
  return result;
}

uint64_t sub_2535E3E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v13[1] = a4;
  uint64_t v5 = sub_253462A5C(&qword_269CDFA70);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253B08F30();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253472348(a1, (uint64_t)v7, &qword_269CDFA70);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v8) == 1) {
    return sub_2534B2064((uint64_t)v7, &qword_269CDFA70);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  sub_2535E5F28(&qword_269CDFF50, MEMORY[0x263F80360]);
  sub_253B07500();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_2535E4004(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CE0398);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoAction(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  sub_253472348(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_269CE0398);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) == 1) {
    return sub_2534B2064((uint64_t)v4, &qword_269CE0398);
  }
  sub_2535E5B9C((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoAction);
  sub_2535E5F28(&qword_269CE0418, (void (*)(uint64_t))type metadata accessor for TranscriptProtoAction);
  sub_253B07500();
  return sub_2535E5B44((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoAction);
}

uint64_t sub_2535E41C4(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CE0388);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  sub_253472348(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_269CE0388);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) == 1) {
    return sub_2534B2064((uint64_t)v4, &qword_269CE0388);
  }
  sub_2535E5B9C((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoStatementOutcome);
  sub_2535E5F28(&qword_269CE0410, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementOutcome);
  sub_253B07500();
  return sub_2535E5B44((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoStatementOutcome);
}

uint64_t sub_2535E4384(uint64_t a1)
{
  uint64_t result = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 28)) != 2)
  {
    sub_2535E5EDC();
    return sub_253B07450();
  }
  return result;
}

uint64_t sub_2535E4414(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CE0378);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoResponseManifest(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  sub_253472348(a1 + *(int *)(v8 + 32), (uint64_t)v4, &qword_269CE0378);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) == 1) {
    return sub_2534B2064((uint64_t)v4, &qword_269CE0378);
  }
  sub_2535E5B9C((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoResponseManifest);
  sub_2535E5F28(&qword_269CE0400, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseManifest);
  sub_253B07500();
  return sub_2535E5B44((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoResponseManifest);
}

uint64_t sub_2535E45D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = sub_253462A5C(&qword_269CE0368);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253B08F00();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  sub_253472348(a1 + *(int *)(v12 + 36), (uint64_t)v7, &qword_269CE0368);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v8) == 1) {
    return sub_2534B2064((uint64_t)v7, &qword_269CE0368);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  sub_2535E5F28(&qword_269CE03F8, MEMORY[0x263F80348]);
  sub_253B07500();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t static ResponseGenerationProtoStatementResultDigest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v181 = a2;
  uint64_t v151 = sub_253B07160();
  sub_253465998();
  uint64_t v150 = v3;
  MEMORY[0x270FA5388](v4);
  sub_2534659D8();
  uint64_t v149 = v5;
  sub_2534B324C();
  MEMORY[0x270FA5388](v6);
  sub_2534B35DC();
  uint64_t v148 = v7;
  sub_253483660();
  uint64_t v156 = sub_253B08F00();
  sub_253465998();
  uint64_t v152 = v8;
  MEMORY[0x270FA5388](v9);
  sub_25346CB04();
  uint64_t v147 = v10;
  uint64_t v155 = sub_253462A5C(&qword_269CE0360);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v11);
  sub_25346CB04();
  uint64_t v157 = v12;
  uint64_t v13 = sub_253462A5C(&qword_269CE0368);
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  sub_2534659D8();
  uint64_t v153 = v15;
  sub_2534B324C();
  MEMORY[0x270FA5388](v16);
  sub_2534B3318();
  uint64_t v158 = v17;
  sub_2534B324C();
  MEMORY[0x270FA5388](v18);
  sub_2534B35DC();
  uint64_t v159 = v19;
  uint64_t v20 = sub_253483660();
  uint64_t v161 = type metadata accessor for TranscriptProtoResponseManifest(v20);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v21);
  sub_25346CB04();
  uint64_t v154 = v22;
  uint64_t v160 = sub_253462A5C(&qword_269CE0370);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v23);
  sub_25346CB04();
  uint64_t v162 = v24;
  uint64_t v25 = sub_253462A5C(&qword_269CE0378);
  uint64_t v26 = sub_25346CB4C(v25);
  MEMORY[0x270FA5388](v26);
  sub_2534659D8();
  uint64_t v167 = v27;
  sub_2534B324C();
  MEMORY[0x270FA5388](v28);
  sub_2534B3318();
  uint64_t v164 = v29;
  sub_2534B324C();
  MEMORY[0x270FA5388](v30);
  sub_2534B35DC();
  uint64_t v173 = v31;
  uint64_t v32 = sub_253483660();
  uint64_t v171 = type metadata accessor for TranscriptProtoStatementOutcome(v32);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v33);
  sub_25346CB04();
  uint64_t v163 = v34;
  uint64_t v168 = sub_253462A5C(&qword_269CE0380);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v35);
  sub_25346CB04();
  uint64_t v172 = v36;
  uint64_t v37 = sub_253462A5C(&qword_269CE0388);
  uint64_t v38 = sub_25346CB4C(v37);
  MEMORY[0x270FA5388](v38);
  sub_2534659D8();
  uint64_t v165 = v39;
  sub_2534B324C();
  MEMORY[0x270FA5388](v40);
  sub_2534B3318();
  uint64_t v169 = v41;
  sub_2534B324C();
  MEMORY[0x270FA5388](v42);
  sub_2534B35DC();
  uint64_t v170 = v43;
  uint64_t v44 = sub_253483660();
  uint64_t v178 = type metadata accessor for TranscriptProtoAction(v44);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v45);
  sub_25346CB04();
  uint64_t v166 = v46;
  uint64_t v175 = sub_253462A5C(&qword_269CE0390);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v47);
  sub_25346CB04();
  v179 = v48;
  uint64_t v49 = sub_253462A5C(&qword_269CE0398);
  uint64_t v50 = sub_25346CB4C(v49);
  MEMORY[0x270FA5388](v50);
  sub_2534659D8();
  uint64_t v174 = v51;
  sub_2534B324C();
  MEMORY[0x270FA5388](v52);
  sub_2534B3318();
  uint64_t v176 = v53;
  sub_2534B324C();
  MEMORY[0x270FA5388](v54);
  sub_2534B35DC();
  uint64_t v177 = v55;
  sub_253483660();
  uint64_t v56 = sub_253B08F30();
  sub_253465998();
  uint64_t v58 = v57;
  MEMORY[0x270FA5388](v59);
  uint64_t v61 = (char *)&v147 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_253462A5C(&qword_269CDFA68);
  uint64_t v63 = v62 - 8;
  MEMORY[0x270FA5388](v62);
  uint64_t v65 = (char *)&v147 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_253462A5C(&qword_269CDFA70);
  uint64_t v67 = sub_25346CB4C(v66);
  uint64_t v68 = MEMORY[0x270FA5388](v67);
  uint64_t v70 = (char *)&v147 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = MEMORY[0x270FA5388](v68);
  uint64_t v73 = (char *)&v147 - v72;
  MEMORY[0x270FA5388](v71);
  uint64_t v75 = (char *)&v147 - v74;
  uint64_t v180 = a1;
  sub_253472348(a1, (uint64_t)&v147 - v74, &qword_269CDFA70);
  sub_253472348(v181, (uint64_t)v73, &qword_269CDFA70);
  uint64_t v76 = (uint64_t)&v65[*(int *)(v63 + 56)];
  sub_253472348((uint64_t)v75, (uint64_t)v65, &qword_269CDFA70);
  sub_253472348((uint64_t)v73, v76, &qword_269CDFA70);
  sub_2534D8B48((uint64_t)v65, 1, v56);
  if (v77)
  {
    sub_2534B2064((uint64_t)v73, &qword_269CDFA70);
    sub_2534B2064((uint64_t)v75, &qword_269CDFA70);
    sub_2534D8B48(v76, 1, v56);
    if (v77)
    {
      sub_2534B2064((uint64_t)v65, &qword_269CDFA70);
      goto LABEL_11;
    }
LABEL_9:
    uint64_t v78 = &qword_269CDFA68;
    uint64_t v79 = (uint64_t)v65;
    goto LABEL_30;
  }
  sub_253472348((uint64_t)v65, (uint64_t)v70, &qword_269CDFA70);
  sub_2534D8B48(v76, 1, v56);
  if (v77)
  {
    sub_2534B2064((uint64_t)v73, &qword_269CDFA70);
    sub_2534B2064((uint64_t)v75, &qword_269CDFA70);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v70, v56);
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v61, v76, v56);
  sub_2535E5F28(&qword_269CDCC90, MEMORY[0x263F80360]);
  char v80 = sub_253B096B0();
  uint64_t v81 = *(void (**)(void))(v58 + 8);
  sub_2535B3940();
  v81();
  sub_2534B2064((uint64_t)v73, &qword_269CDFA70);
  sub_2534B2064((uint64_t)v75, &qword_269CDFA70);
  sub_2535B3940();
  v81();
  sub_2534B2064((uint64_t)v65, &qword_269CDFA70);
  if ((v80 & 1) == 0) {
    goto LABEL_31;
  }
LABEL_11:
  uint64_t v82 = (int *)type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  uint64_t v83 = v180;
  uint64_t v84 = v177;
  sub_253472348(v180 + v82[5], v177, &qword_269CE0398);
  uint64_t v85 = v181;
  uint64_t v86 = v176;
  sub_253472348(v181 + v82[5], v176, &qword_269CE0398);
  uint64_t v87 = v179;
  uint64_t v88 = (uint64_t)v179 + *(int *)(v175 + 48);
  sub_253472348(v84, (uint64_t)v179, &qword_269CE0398);
  sub_253472348(v86, v88, &qword_269CE0398);
  uint64_t v89 = v178;
  sub_2534D8B48((uint64_t)v87, 1, v178);
  if (v77)
  {
    sub_2534B2064(v86, &qword_269CE0398);
    sub_2534B2064(v84, &qword_269CE0398);
    sub_2534D8B48(v88, 1, v89);
    if (v77)
    {
      sub_2534B2064((uint64_t)v87, &qword_269CE0398);
      goto LABEL_21;
    }
LABEL_19:
    uint64_t v78 = &qword_269CE0390;
    uint64_t v79 = (uint64_t)v87;
    goto LABEL_30;
  }
  uint64_t v90 = v174;
  sub_253472348((uint64_t)v87, v174, &qword_269CE0398);
  sub_2534D8B48(v88, 1, v89);
  if (v91)
  {
    sub_2534B2064(v86, &qword_269CE0398);
    sub_2534B2064(v84, &qword_269CE0398);
    sub_2535E5B44(v90, (void (*)(void))type metadata accessor for TranscriptProtoAction);
    goto LABEL_19;
  }
  uint64_t v92 = v166;
  sub_2535E5B9C(v88, v166, (void (*)(void))type metadata accessor for TranscriptProtoAction);
  static TranscriptProtoAction.== infix(_:_:)();
  char v94 = v93;
  sub_2535E5B44(v92, (void (*)(void))type metadata accessor for TranscriptProtoAction);
  sub_2534B2064(v86, &qword_269CE0398);
  sub_2534B2064(v84, &qword_269CE0398);
  sub_2535E5B44(v90, (void (*)(void))type metadata accessor for TranscriptProtoAction);
  sub_2534B2064((uint64_t)v87, &qword_269CE0398);
  if ((v94 & 1) == 0) {
    goto LABEL_31;
  }
LABEL_21:
  uint64_t v95 = v170;
  sub_253472348(v83 + v82[6], v170, &qword_269CE0388);
  v179 = v82;
  uint64_t v96 = v169;
  sub_253472348(v85 + v82[6], v169, &qword_269CE0388);
  uint64_t v97 = v172;
  uint64_t v98 = v172 + *(int *)(v168 + 48);
  sub_253472348(v95, v172, &qword_269CE0388);
  sub_253472348(v96, v98, &qword_269CE0388);
  uint64_t v99 = v171;
  sub_2534D8B48(v97, 1, v171);
  if (v77)
  {
    sub_2534B2064(v96, &qword_269CE0388);
    sub_2534B2064(v95, &qword_269CE0388);
    sub_2534D8B48(v98, 1, v99);
    uint64_t v100 = v167;
    uint64_t v101 = v173;
    if (v77)
    {
      sub_2534B2064(v97, &qword_269CE0388);
      goto LABEL_34;
    }
LABEL_29:
    uint64_t v78 = &qword_269CE0380;
    uint64_t v79 = v97;
    goto LABEL_30;
  }
  uint64_t v102 = v165;
  sub_253472348(v97, v165, &qword_269CE0388);
  sub_2534D8B48(v98, 1, v99);
  uint64_t v104 = v173;
  if (v103)
  {
    sub_2534B2064(v96, &qword_269CE0388);
    sub_2534B2064(v95, &qword_269CE0388);
    sub_2535E5B44(v102, (void (*)(void))type metadata accessor for TranscriptProtoStatementOutcome);
    goto LABEL_29;
  }
  uint64_t v107 = v163;
  sub_2535E5B9C(v98, v163, (void (*)(void))type metadata accessor for TranscriptProtoStatementOutcome);
  static TranscriptProtoStatementOutcome.== infix(_:_:)();
  char v109 = v108;
  sub_2535E5B44(v107, (void (*)(void))type metadata accessor for TranscriptProtoStatementOutcome);
  sub_2534B2064(v96, &qword_269CE0388);
  uint64_t v100 = v167;
  sub_2534B2064(v95, &qword_269CE0388);
  sub_2535E5B44(v102, (void (*)(void))type metadata accessor for TranscriptProtoStatementOutcome);
  sub_2534B2064(v97, &qword_269CE0388);
  uint64_t v101 = v104;
  if ((v109 & 1) == 0) {
    goto LABEL_31;
  }
LABEL_34:
  uint64_t v110 = v179;
  uint64_t v111 = v179[7];
  int v112 = *(unsigned __int8 *)(v83 + v111);
  int v113 = *(unsigned __int8 *)(v85 + v111);
  if (v112 == 2)
  {
    if (v113 != 2) {
      goto LABEL_31;
    }
    goto LABEL_39;
  }
  char v105 = 0;
  if (v113 != 2 && ((v113 ^ v112) & 1) == 0)
  {
LABEL_39:
    sub_253472348(v83 + v179[8], v101, &qword_269CE0378);
    uint64_t v114 = v164;
    sub_253472348(v85 + v110[8], v164, &qword_269CE0378);
    uint64_t v115 = v162;
    uint64_t v116 = v162 + *(int *)(v160 + 48);
    sub_253472348(v101, v162, &qword_269CE0378);
    sub_253472348(v114, v116, &qword_269CE0378);
    uint64_t v117 = v161;
    sub_2534D8B48(v115, 1, v161);
    if (v77)
    {
      sub_2534B2064(v114, &qword_269CE0378);
      sub_2534B2064(v101, &qword_269CE0378);
      sub_2534D8B48(v116, 1, v117);
      if (v77)
      {
        sub_2534B2064(v115, &qword_269CE0378);
        uint64_t v118 = v159;
        uint64_t v119 = v158;
LABEL_49:
        uint64_t v127 = v179;
        sub_253472348(v83 + v179[9], v118, &qword_269CE0368);
        sub_253472348(v85 + v127[9], v119, &qword_269CE0368);
        uint64_t v128 = v157;
        uint64_t v129 = v157 + *(int *)(v155 + 48);
        sub_253472348(v118, v157, &qword_269CE0368);
        uint64_t v130 = v128;
        sub_253472348(v119, v129, &qword_269CE0368);
        uint64_t v131 = v128;
        uint64_t v132 = v156;
        sub_2534D8B48(v131, 1, v156);
        if (v77)
        {
          sub_2534B2064(v119, &qword_269CE0368);
          uint64_t v130 = v157;
          sub_2534B2064(v118, &qword_269CE0368);
          sub_2534D8B48(v129, 1, v132);
          if (v77)
          {
            sub_2534B2064(v130, &qword_269CE0368);
LABEL_59:
            uint64_t v139 = v83 + v127[10];
            uint64_t v140 = v150;
            uint64_t v141 = *(void (**)(uint64_t, uint64_t, uint64_t))(v150 + 16);
            uint64_t v142 = v148;
            uint64_t v143 = v151;
            v141(v148, v139, v151);
            uint64_t v144 = v85 + v127[10];
            uint64_t v145 = v149;
            v141(v149, v144, v143);
            sub_2535E5F28((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
            char v105 = sub_253B096B0();
            int v146 = *(void (**)(uint64_t, uint64_t))(v140 + 8);
            v146(v145, v143);
            v146(v142, v143);
            return v105 & 1;
          }
        }
        else
        {
          uint64_t v133 = v153;
          sub_253472348(v130, v153, &qword_269CE0368);
          sub_2534D8B48(v129, 1, v132);
          if (!v134)
          {
            uint64_t v135 = v152;
            uint64_t v136 = v119;
            uint64_t v137 = v147;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v152 + 32))(v147, v129, v132);
            sub_2535E5F28(&qword_269CE03A0, MEMORY[0x263F80348]);
            LODWORD(v178) = sub_253B096B0();
            int v138 = *(void (**)(uint64_t, uint64_t))(v135 + 8);
            v138(v137, v132);
            sub_2534B2064(v136, &qword_269CE0368);
            sub_2534B2064(v159, &qword_269CE0368);
            v138(v133, v132);
            sub_2534B2064(v157, &qword_269CE0368);
            if (v178) {
              goto LABEL_59;
            }
            goto LABEL_31;
          }
          sub_2534B2064(v119, &qword_269CE0368);
          sub_2534B2064(v118, &qword_269CE0368);
          (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v133, v132);
        }
        uint64_t v78 = &qword_269CE0360;
        uint64_t v79 = v130;
        goto LABEL_30;
      }
    }
    else
    {
      sub_253472348(v115, v100, &qword_269CE0378);
      sub_2534D8B48(v116, 1, v117);
      uint64_t v118 = v159;
      uint64_t v121 = v100;
      uint64_t v119 = v158;
      if (!v120)
      {
        uint64_t v122 = v116;
        uint64_t v123 = v101;
        uint64_t v124 = v154;
        sub_2535E5B9C(v122, v154, (void (*)(void))type metadata accessor for TranscriptProtoResponseManifest);
        static TranscriptProtoResponseManifest.== infix(_:_:)();
        char v126 = v125;
        sub_2535E5B44(v124, (void (*)(void))type metadata accessor for TranscriptProtoResponseManifest);
        sub_2534B2064(v164, &qword_269CE0378);
        sub_2534B2064(v123, &qword_269CE0378);
        sub_2535E5B44(v121, (void (*)(void))type metadata accessor for TranscriptProtoResponseManifest);
        sub_2534B2064(v115, &qword_269CE0378);
        if ((v126 & 1) == 0) {
          goto LABEL_31;
        }
        goto LABEL_49;
      }
      sub_2534B2064(v164, &qword_269CE0378);
      sub_2534B2064(v101, &qword_269CE0378);
      sub_2535E5B44(v100, (void (*)(void))type metadata accessor for TranscriptProtoResponseManifest);
    }
    uint64_t v78 = &qword_269CE0370;
    uint64_t v79 = v115;
LABEL_30:
    sub_2534B2064(v79, v78);
LABEL_31:
    char v105 = 0;
  }
  return v105 & 1;
}

uint64_t ResponseGenerationProtoStatementResultDigest.hashValue.getter()
{
  return sub_2535E58A4((void (*)(void))type metadata accessor for ResponseGenerationProtoStatementResultDigest, &qword_269CE03A8, (void (*)(uint64_t))type metadata accessor for ResponseGenerationProtoStatementResultDigest);
}

uint64_t sub_2535E58A4(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return sub_253B0A630();
}

unint64_t sub_2535E5930()
{
  return 0xD000000000000028;
}

uint64_t sub_2535E5958(uint64_t a1, uint64_t a2)
{
  return ResponseGenerationProtoStatementResultDigest.decodeMessage<A>(decoder:)(a1, a2);
}

uint64_t sub_2535E5970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ResponseGenerationProtoStatementResultDigest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2535E5988(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2535E5F28(&qword_269CE03E8, (void (*)(uint64_t))type metadata accessor for ResponseGenerationProtoStatementResultDigest);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535E5A08()
{
  sub_2535E5F28(&qword_269CE0350, (void (*)(uint64_t))type metadata accessor for ResponseGenerationProtoStatementResultDigest);
  return sub_253B073E0();
}

uint64_t sub_2535E5A78()
{
  sub_2535E5F28(&qword_269CE0350, (void (*)(uint64_t))type metadata accessor for ResponseGenerationProtoStatementResultDigest);
  return sub_253B073F0();
}

unint64_t sub_2535E5AF8()
{
  unint64_t result = qword_269CE0348;
  if (!qword_269CE0348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE0348);
  }
  return result;
}

uint64_t sub_2535E5B44(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_25346CAF4();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_2535E5B9C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25346CAF4();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

unint64_t sub_2535E5C00()
{
  unint64_t result = qword_269CE03B0;
  if (!qword_269CE03B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE03B0);
  }
  return result;
}

unint64_t sub_2535E5C50()
{
  unint64_t result = qword_269CE03B8;
  if (!qword_269CE03B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE03B8);
  }
  return result;
}

uint64_t sub_2535E5C9C()
{
  return sub_2535E5F28(&qword_269CE03C0, (void (*)(uint64_t))type metadata accessor for ResponseGenerationProtoResponseGenerationInput);
}

uint64_t sub_2535E5CE4()
{
  return sub_2535E5F28((unint64_t *)&qword_269CE03C8, (void (*)(uint64_t))type metadata accessor for ResponseGenerationProtoResponseGenerationInput);
}

uint64_t sub_2535E5D2C()
{
  return sub_2535E5F28(&qword_269CE0358, (void (*)(uint64_t))type metadata accessor for ResponseGenerationProtoResponseGenerationInput);
}

uint64_t sub_2535E5D74()
{
  return sub_2535E5F28(&qword_269CE03D0, (void (*)(uint64_t))type metadata accessor for ResponseGenerationProtoResponseGenerationInput);
}

uint64_t sub_2535E5DBC()
{
  return sub_2535E5F28(&qword_269CE03D8, (void (*)(uint64_t))type metadata accessor for ResponseGenerationProtoStatementResultDigest);
}

uint64_t sub_2535E5E04()
{
  return sub_2535E5F28(&qword_269CE0350, (void (*)(uint64_t))type metadata accessor for ResponseGenerationProtoStatementResultDigest);
}

uint64_t sub_2535E5E4C()
{
  return sub_2535E5F28(&qword_269CE03A8, (void (*)(uint64_t))type metadata accessor for ResponseGenerationProtoStatementResultDigest);
}

uint64_t sub_2535E5E94()
{
  return sub_2535E5F28(&qword_269CE03E0, (void (*)(uint64_t))type metadata accessor for ResponseGenerationProtoStatementResultDigest);
}

unint64_t sub_2535E5EDC()
{
  unint64_t result = qword_269CE0408;
  if (!qword_269CE0408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE0408);
  }
  return result;
}

uint64_t sub_2535E5F28(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

IntelligenceFlowPlannerSupport::ResponseGenerationProtoResponseMode __swiftcall ResponseGenerationProtoResponseMode.init()()
{
  unsigned char *v0 = 0;
  return result;
}

IntelligenceFlowPlannerSupport::ResponseGenerationProtoResponseMode_optional __swiftcall ResponseGenerationProtoResponseMode.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 5;
  if ((unint64_t)rawValue < 5) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (IntelligenceFlowPlannerSupport::ResponseGenerationProtoResponseMode_optional)rawValue;
}

uint64_t ResponseGenerationProtoResponseMode.rawValue.getter()
{
  return *v0;
}

uint64_t ResponseGenerationProtoResponseGenerationInput.init()@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for ResponseGenerationProtoResponseGenerationInput(0);
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(unsigned char *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0xE000000000000000;
  *(void *)(a1 + 56) = MEMORY[0x263F8EE78];
  return result;
}

uint64_t type metadata accessor for ResponseGenerationProtoResponseGenerationInput(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE0438);
}

uint64_t ResponseGenerationProtoResponseGenerationInput.unknownFields.getter()
{
  type metadata accessor for ResponseGenerationProtoResponseGenerationInput(0);
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v0 = sub_2534ACF74();
  return v1(v0);
}

uint64_t ResponseGenerationProtoResponseGenerationInput.unknownFields.setter(uint64_t a1)
{
  type metadata accessor for ResponseGenerationProtoResponseGenerationInput(0);
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40);
  return v5(v1, a1, v3);
}

uint64_t (*ResponseGenerationProtoResponseGenerationInput.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t ResponseGenerationProtoStatementResultDigest.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_253B08F30();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 1, 1, v2);
  uint64_t v3 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  uint64_t v4 = sub_2535E233C();
  uint64_t v5 = type metadata accessor for TranscriptProtoAction(v4);
  sub_2535E22A8(v5);
  uint64_t v6 = sub_2535E233C();
  uint64_t v7 = type metadata accessor for TranscriptProtoStatementOutcome(v6);
  sub_2535E22A8(v7);
  *(unsigned char *)(a1 + *(int *)(v3 + 28)) = 2;
  uint64_t v8 = sub_2535E233C();
  uint64_t v9 = type metadata accessor for TranscriptProtoResponseManifest(v8);
  sub_2535E22A8(v9);
  sub_2535E233C();
  uint64_t v10 = sub_253B08F00();
  sub_2535E22A8(v10);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t type metadata accessor for ResponseGenerationProtoStatementResultDigest(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE04D8);
}

uint64_t ResponseGenerationProtoStatementResultDigest.unknownFields.getter()
{
  sub_2535FA788();
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v0 = sub_2534ACF74();
  return v1(v0);
}

uint64_t ResponseGenerationProtoStatementResultDigest.unknownFields.setter(uint64_t a1)
{
  type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40);
  return v5(v1, a1, v3);
}

uint64_t (*ResponseGenerationProtoStatementResultDigest.unknownFields.modify())()
{
  return nullsub_1;
}

void *static ResponseGenerationProtoResponseMode.allCases.getter()
{
  return &unk_270341080;
}

IntelligenceFlowPlannerSupport::ResponseGenerationProtoResponseMode_optional sub_2535E62FC(Swift::Int *a1)
{
  return ResponseGenerationProtoResponseMode.init(rawValue:)(*a1);
}

uint64_t sub_2535E6304@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ResponseGenerationProtoResponseMode.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2535E632C()
{
  return sub_25397FB30();
}

uint64_t sub_2535E6334(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2535E5AF8();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

uint64_t sub_2535E6380()
{
  return sub_2539809C0();
}

void sub_2535E6388(void *a1@<X8>)
{
  *a1 = &unk_270341080;
}

uint64_t ResponseGenerationProtoResponseGenerationInput.clientRequestID.getter()
{
  return sub_2534ACF74();
}

uint64_t ResponseGenerationProtoResponseGenerationInput.clientRequestID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ResponseGenerationProtoResponseGenerationInput.clientRequestID.modify())()
{
  return nullsub_1;
}

uint64_t ResponseGenerationProtoResponseGenerationInput.utterance.getter()
{
  return sub_2534ACF74();
}

uint64_t ResponseGenerationProtoResponseGenerationInput.utterance.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ResponseGenerationProtoResponseGenerationInput.utterance.modify())()
{
  return nullsub_1;
}

void ResponseGenerationProtoResponseGenerationInput.responseMode.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

unsigned char *ResponseGenerationProtoResponseGenerationInput.responseMode.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 32) = *result;
  return result;
}

uint64_t (*ResponseGenerationProtoResponseGenerationInput.responseMode.modify())()
{
  return nullsub_1;
}

uint64_t ResponseGenerationProtoResponseGenerationInput.responseLocale.getter()
{
  return sub_2534ACF74();
}

uint64_t ResponseGenerationProtoResponseGenerationInput.responseLocale.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*ResponseGenerationProtoResponseGenerationInput.responseLocale.modify())()
{
  return nullsub_1;
}

uint64_t ResponseGenerationProtoResponseGenerationInput.statementResultDigests.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ResponseGenerationProtoResponseGenerationInput.statementResultDigests.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*ResponseGenerationProtoResponseGenerationInput.statementResultDigests.modify())()
{
  return nullsub_1;
}

uint64_t ResponseGenerationProtoResponseGenerationInput.init(clientRequestID:utterance:responseMode:responseLocale:statementResultDigests:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  char v17 = *a5;
  type metadata accessor for ResponseGenerationProtoResponseGenerationInput(0);
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(unsigned char *)(a9 + 32) = v17;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  return result;
}

uint64_t ResponseGenerationProtoStatementResultDigest.toolDefinition.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_253472348(v1, a1, &qword_269CDFA70);
}

uint64_t ResponseGenerationProtoStatementResultDigest.toolDefinition.setter(uint64_t a1)
{
  return sub_2535BC290(a1, v1, &qword_269CDFA70);
}

uint64_t (*ResponseGenerationProtoStatementResultDigest.toolDefinition.modify())()
{
  return nullsub_1;
}

uint64_t ResponseGenerationProtoStatementResultDigest.actionCreated.getter()
{
  uint64_t v2 = sub_2535FA788();
  return sub_253472348(v1 + *(int *)(v2 + 20), v0, &qword_269CE0398);
}

uint64_t ResponseGenerationProtoStatementResultDigest.actionCreated.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  return sub_2535BC290(a1, v1 + *(int *)(v3 + 20), &qword_269CE0398);
}

uint64_t (*ResponseGenerationProtoStatementResultDigest.actionCreated.modify())()
{
  return nullsub_1;
}

uint64_t ResponseGenerationProtoStatementResultDigest.statementOutcome.getter()
{
  uint64_t v2 = sub_2535FA788();
  return sub_253472348(v1 + *(int *)(v2 + 24), v0, &qword_269CE0388);
}

uint64_t ResponseGenerationProtoStatementResultDigest.statementOutcome.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  return sub_2535BC290(a1, v1 + *(int *)(v3 + 24), &qword_269CE0388);
}

uint64_t (*ResponseGenerationProtoStatementResultDigest.statementOutcome.modify())()
{
  return nullsub_1;
}

uint64_t ResponseGenerationProtoStatementResultDigest.undoOperation.getter()
{
  uint64_t result = sub_2535FA788();
  unsigned char *v0 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t ResponseGenerationProtoStatementResultDigest.undoOperation.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  *(unsigned char *)(v1 + *(int *)(result + 28)) = v2;
  return result;
}

uint64_t (*ResponseGenerationProtoStatementResultDigest.undoOperation.modify())()
{
  return nullsub_1;
}

uint64_t ResponseGenerationProtoStatementResultDigest.responseManifest.getter()
{
  uint64_t v2 = sub_2535FA788();
  return sub_253472348(v1 + *(int *)(v2 + 32), v0, &qword_269CE0378);
}

uint64_t ResponseGenerationProtoStatementResultDigest.responseManifest.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  return sub_2535BC290(a1, v1 + *(int *)(v3 + 32), &qword_269CE0378);
}

uint64_t (*ResponseGenerationProtoStatementResultDigest.responseManifest.modify())()
{
  return nullsub_1;
}

uint64_t ResponseGenerationProtoStatementResultDigest.returnValueTypeDisplayRepresentation.getter()
{
  uint64_t v2 = sub_2535FA788();
  return sub_253472348(v1 + *(int *)(v2 + 36), v0, &qword_269CE0368);
}

uint64_t ResponseGenerationProtoStatementResultDigest.returnValueTypeDisplayRepresentation.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  return sub_2535BC290(a1, v1 + *(int *)(v3 + 36), &qword_269CE0368);
}

uint64_t (*ResponseGenerationProtoStatementResultDigest.returnValueTypeDisplayRepresentation.modify())()
{
  return nullsub_1;
}

uint64_t ResponseGenerationProtoStatementResultDigest.init(toolDefinition:actionCreated:statementOutcome:undoOperation:responseManifest:returnValueTypeDisplayRepresentation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v31 = *a4;
  uint64_t v11 = sub_253B08F30();
  sub_2535E22A8(v11);
  uint64_t v12 = (int *)type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  uint64_t v13 = a7 + v12[5];
  uint64_t v14 = type metadata accessor for TranscriptProtoAction(0);
  sub_25346CC08(v13, v15, v16, v14);
  uint64_t v17 = a7 + v12[6];
  uint64_t v18 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  sub_25346CC08(v17, v19, v20, v18);
  uint64_t v21 = v12[7];
  *(unsigned char *)(a7 + v21) = 2;
  uint64_t v22 = a7 + v12[8];
  uint64_t v23 = type metadata accessor for TranscriptProtoResponseManifest(0);
  sub_25346CC08(v22, v24, v25, v23);
  uint64_t v26 = a7 + v12[9];
  uint64_t v27 = sub_253B08F00();
  sub_25346CC08(v26, v28, v29, v27);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_2535BC290(a1, a7, &qword_269CDFA70);
  sub_2535BC290(a2, v13, &qword_269CE0398);
  sub_2535BC290(a3, v17, &qword_269CE0388);
  *(unsigned char *)(a7 + v21) = v31;
  sub_2535BC290(a5, v22, &qword_269CE0378);
  return sub_2535BC290(a6, v26, &qword_269CE0368);
}

unint64_t sub_2535E6BB8()
{
  unint64_t result = qword_269CE0420;
  if (!qword_269CE0420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE0420);
  }
  return result;
}

unint64_t sub_2535E6C08()
{
  unint64_t result = qword_269CE0428;
  if (!qword_269CE0428)
  {
    sub_25347907C(&qword_269CE0430);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE0428);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ResponseGenerationProtoResponseMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2535E6D28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseGenerationProtoResponseMode()
{
  return &type metadata for ResponseGenerationProtoResponseMode;
}

void *initializeBufferWithCopyOfBuffer for ResponseGenerationProtoResponseGenerationInput(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *int v3 = *a2;
    int v3 = (void *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    uint64_t v8 = *(int *)(a3 + 36);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    *(void *)(a1 + 56) = a2[7];
    uint64_t v11 = sub_253B07160();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  return v3;
}

uint64_t destroy for ResponseGenerationProtoResponseGenerationInput(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_253B07160();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for ResponseGenerationProtoResponseGenerationInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v10 = sub_253B07160();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for ResponseGenerationProtoResponseGenerationInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ResponseGenerationProtoResponseGenerationInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ResponseGenerationProtoResponseGenerationInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseGenerationProtoResponseGenerationInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535E7258);
}

uint64_t sub_2535E7258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_253B07160();
    uint64_t v9 = a1 + *(int *)(a3 + 36);
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ResponseGenerationProtoResponseGenerationInput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535E72F4);
}

uint64_t sub_2535E72F4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_253B07160();
    uint64_t v8 = v5 + *(int *)(a4 + 36);
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_2535E7374()
{
  uint64_t result = sub_253B07160();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ResponseGenerationProtoStatementResultDigest(void *a1, char *a2, int *a3)
{
  int v3 = a2;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = a3;
  uint64_t v7 = sub_253B08F30();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v3, 1, v7))
  {
    uint64_t v8 = sub_253462A5C(&qword_269CDFA70);
    memcpy(a1, v3, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v3, v7);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
  }
  uint64_t v10 = v6[5];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = &v3[v10];
  uint64_t v13 = (int *)type metadata accessor for TranscriptProtoAction(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, (uint64_t)v13))
  {
    uint64_t v14 = sub_253462A5C(&qword_269CE0398);
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v373 = v6;
    uint64_t v380 = a1;
    uint64_t v390 = v3;
    uint64_t v15 = *((void *)v12 + 1);
    *uint64_t v11 = *(void *)v12;
    v11[1] = v15;
    *((unsigned char *)v11 + 16) = v12[16];
    v11[3] = *((void *)v12 + 3);
    uint64_t v16 = v13[7];
    uint64_t v17 = (void *)((char *)v11 + v16);
    uint64_t v18 = &v12[v16];
    uint64_t v19 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
    {
      uint64_t v20 = sub_253462A5C(&qword_26B249528);
      memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
      uint64_t v21 = *((void *)v18 + 2);
      v17[1] = *((void *)v18 + 1);
      v17[2] = v21;
      uint64_t v22 = *(int *)(v19 + 24);
      __dstc = (char *)v17 + v22;
      uint64_t v23 = &v18[v22];
      uint64_t v24 = sub_253B07160();
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v25(__dstc, v23, v24);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
    }
    uint64_t v26 = v13[8];
    uint64_t v27 = (void *)((char *)v11 + v26);
    uint64_t v28 = &v12[v26];
    uint64_t v29 = *((void *)v28 + 1);
    void *v27 = *(void *)v28;
    v27[1] = v29;
    uint64_t v30 = v13[9];
    char v31 = (void *)((char *)v11 + v30);
    uint64_t v32 = &v12[v30];
    uint64_t v33 = *((void *)v32 + 1);
    *char v31 = *(void *)v32;
    v31[1] = v33;
    uint64_t v34 = v13[10];
    uint64_t v35 = (void *)((char *)v11 + v34);
    uint64_t v36 = &v12[v34];
    uint64_t v37 = *((void *)v36 + 1);
    *uint64_t v35 = *(void *)v36;
    v35[1] = v37;
    uint64_t v38 = v13[11];
    uint64_t v39 = (void *)((char *)v11 + v38);
    uint64_t v40 = &v12[v38];
    uint64_t v41 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v40, 1, v41))
    {
      uint64_t v42 = sub_253462A5C(&qword_269CE0448);
      memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      uint64_t v43 = *((void *)v40 + 1);
      *uint64_t v39 = *(void *)v40;
      v39[1] = v43;
      uint64_t v44 = *((void *)v40 + 3);
      v39[2] = *((void *)v40 + 2);
      v39[3] = v44;
      uint64_t v45 = *(int *)(v41 + 24);
      unint64_t v351 = &v40[v45];
      __dstd = (char *)v39 + v45;
      uint64_t v46 = sub_253B07160();
      uint64_t v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v47(__dstd, v351, v46);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v39, 0, 1, v41);
    }
    int v3 = v390;
    uint64_t v48 = v13[12];
    uint64_t v49 = (char *)v11 + v48;
    uint64_t v50 = &v12[v48];
    uint64_t v51 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v11, 0, 1, (uint64_t)v13);
    uint64_t v6 = v373;
    a1 = v380;
  }
  uint64_t v52 = v6[6];
  uint64_t v53 = (void *)((char *)a1 + v52);
  uint64_t v54 = &v3[v52];
  uint64_t v55 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54, 1, v55))
  {
    uint64_t v57 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54, 1, v57))
    {
      uint64_t v58 = sub_253462A5C(&qword_269CE04B0);
      memcpy(v53, v54, *(void *)(*(void *)(v58 - 8) + 64));
LABEL_99:
      uint64_t v246 = *(int *)(v55 + 20);
      long long v247 = (char *)v53 + v246;
      v248 = &v54[v246];
      uint64_t v249 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v249 - 8) + 16))(v247, v248, v249);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v53, 0, 1, v55);
      goto LABEL_100;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v375 = v6;
        v382 = a1;
        v391 = v3;
        *uint64_t v53 = *(void *)v54;
        uint64_t v65 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v66 = *(int *)(v65 + 20);
        uint64_t v67 = (void *)((char *)v53 + v66);
        uint64_t v68 = &v54[v66];
        uint64_t v69 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v68, 1, v69))
        {
          uint64_t v70 = sub_253462A5C(&qword_269CE0480);
          memcpy(v67, v68, *(void *)(*(void *)(v70 - 8) + 64));
          uint64_t v6 = v375;
        }
        else
        {
          __dst = (void *)v65;
          uint64_t v124 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v68, 1, v124))
          {
            uint64_t v125 = sub_253462A5C(&qword_269CE0478);
            memcpy(v67, v68, *(void *)(*(void *)(v125 - 8) + 64));
          }
          else
          {
            uint64_t v355 = v124;
            uint64_t v155 = *((void *)v68 + 1);
            *uint64_t v67 = *(void *)v68;
            v67[1] = v155;
            *((unsigned char *)v67 + 16) = v68[16];
            uint64_t v156 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v157 = *(int *)(v156 + 24);
            v339 = (char *)v67 + v157;
            uint64_t v345 = v156;
            uint64_t v158 = &v68[v157];
            uint64_t v159 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v158, 1, v159))
            {
              uint64_t v160 = sub_253462A5C(&qword_269CE0470);
              memcpy(v339, v158, *(void *)(*(void *)(v160 - 8) + 64));
            }
            else
            {
              char *v339 = *v158;
              uint64_t v181 = *(int *)(v159 + 20);
              uint64_t v182 = &v339[v181];
              v336 = &v158[v181];
              uint64_t v183 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v183 - 8) + 16))(v182, v336, v183);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v339, 0, 1, v159);
            }
            uint64_t v184 = *(int *)(v345 + 28);
            uint64_t v185 = (char *)v67 + v184;
            uint64_t v186 = &v68[v184];
            uint64_t v187 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v187 - 8) + 16))(v185, v186, v187);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v67, 0, 1, v355);
          }
          uint64_t v188 = *(int *)(v69 + 20);
          int v189 = (char *)v67 + v188;
          uint64_t v190 = &v68[v188];
          uint64_t v191 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 16))(v189, v190, v191);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v67, 0, 1, v69);
          uint64_t v65 = (uint64_t)__dst;
          uint64_t v6 = v375;
        }
        uint64_t v192 = *(int *)(v65 + 24);
        uint64_t v193 = (char *)v53 + v192;
        uint64_t v194 = &v54[v192];
        uint64_t v195 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 16))(v193, v194, v195);
        swift_storeEnumTagMultiPayload();
        a1 = v382;
        int v3 = v391;
        goto LABEL_98;
      case 2u:
        uint64_t v71 = *((void *)v54 + 1);
        *uint64_t v53 = *(void *)v54;
        v53[1] = v71;
        uint64_t v72 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
        uint64_t v383 = (char *)v53 + v72;
        __dste = &v54[v72];
        v392 = v3;
        uint64_t v73 = sub_253B07160();
        uint64_t v74 = a1;
        uint64_t v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v76 = v73;
        int v3 = v392;
        v75(v383, __dste, v76);
        a1 = v74;
        goto LABEL_38;
      case 3u:
        uint64_t v374 = v6;
        v393 = v3;
        char v77 = a1;
        uint64_t v78 = *((void *)v54 + 1);
        *uint64_t v53 = *(void *)v54;
        v53[1] = v78;
        v53[2] = *((void *)v54 + 2);
        *((unsigned char *)v53 + 24) = v54[24];
        uint64_t v79 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        uint64_t v80 = *(int *)(v79 + 24);
        uint64_t v81 = (char *)v53 + v80;
        uint64_t v82 = &v54[v80];
        uint64_t v83 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v82, 1, v83)) {
          goto LABEL_26;
        }
        goto LABEL_44;
      case 4u:
        uint64_t v85 = *((void *)v54 + 1);
        *uint64_t v53 = *(void *)v54;
        v53[1] = v85;
        uint64_t v86 = *((void *)v54 + 3);
        v53[2] = *((void *)v54 + 2);
        v53[3] = v86;
        *((unsigned char *)v53 + 32) = v54[32];
        uint64_t v87 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        uint64_t v384 = (char *)v53 + v87;
        uint64_t v352 = &v54[v87];
        v394 = v3;
        uint64_t v88 = a1;
        uint64_t v89 = sub_253B07160();
        __dstf = (void *)v57;
        uint64_t v90 = v6;
        char v91 = *(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v92 = v89;
        a1 = v88;
        int v3 = v394;
        v91(v384, v352, v92);
        uint64_t v6 = v90;
        uint64_t v57 = (uint64_t)__dstf;
        goto LABEL_38;
      case 5u:
        uint64_t v374 = v6;
        v393 = v3;
        char v77 = a1;
        uint64_t v93 = *((void *)v54 + 1);
        *uint64_t v53 = *(void *)v54;
        v53[1] = v93;
        *((unsigned char *)v53 + 16) = v54[16];
        uint64_t v79 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
        uint64_t v94 = *(int *)(v79 + 24);
        uint64_t v81 = (char *)v53 + v94;
        uint64_t v82 = &v54[v94];
        uint64_t v83 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v82, 1, v83))
        {
LABEL_26:
          uint64_t v84 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
LABEL_44:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v81, 0, 1, v83);
        }
        uint64_t v126 = *(int *)(v79 + 28);
        uint64_t v127 = (char *)v53 + v126;
        uint64_t v128 = &v54[v126];
        uint64_t v129 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 16))(v127, v128, v129);
        goto LABEL_49;
      case 6u:
        uint64_t v374 = v6;
        v393 = v3;
        char v77 = a1;
        uint64_t v95 = *((void *)v54 + 1);
        *uint64_t v53 = *(void *)v54;
        v53[1] = v95;
        uint64_t v96 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v97 = *(int *)(v96 + 20);
        uint64_t v98 = (char *)v53 + v97;
        uint64_t v99 = &v54[v97];
        uint64_t v100 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v99, 1, v100))
        {
          uint64_t v101 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v98, v99, *(void *)(*(void *)(v101 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v98, 0, 1, v100);
        }
        uint64_t v130 = *(int *)(v96 + 24);
        uint64_t v131 = (char *)v53 + v130;
        uint64_t v132 = &v54[v130];
        uint64_t v133 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16))(v131, v132, v133);
LABEL_49:
        swift_storeEnumTagMultiPayload();
        a1 = v77;
        goto LABEL_84;
      case 7u:
        uint64_t v102 = v3;
        uint64_t v103 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54, 1, v103))
        {
          uint64_t v104 = sub_253462A5C(&qword_269CE0498);
          memcpy(v53, v54, *(void *)(*(void *)(v104 - 8) + 64));
          goto LABEL_96;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 2:
            uint64_t v387 = a1;
            uint64_t v163 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54, 1, v163))
            {
              uint64_t v164 = sub_253462A5C(&qword_269CE0490);
              memcpy(v53, v54, *(void *)(*(void *)(v164 - 8) + 64));
            }
            else
            {
              int v222 = swift_getEnumCaseMultiPayload();
              if (v222 == 1)
              {
                uint64_t v377 = v6;
                uint64_t v228 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54, 1, v228))
                {
                  uint64_t v229 = sub_253462A5C(&qword_269CE0488);
                  memcpy(v53, v54, *(void *)(*(void *)(v229 - 8) + 64));
                }
                else
                {
                  *(unsigned char *)uint64_t v53 = *v54;
                  uint64_t v230 = *(int *)(v228 + 20);
                  uint64_t v231 = (char *)v53 + v230;
                  uint64_t v232 = &v54[v230];
                  uint64_t v233 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v233 - 8) + 16))(v231, v232, v233);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v53, 0, 1, v228);
                }
                uint64_t v234 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0)
                              + 20);
                uint64_t v235 = (char *)v53 + v234;
                uint64_t v236 = &v54[v234];
                uint64_t v237 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v237 - 8) + 16))(v235, v236, v237);
                swift_storeEnumTagMultiPayload();
                uint64_t v6 = v377;
              }
              else if (v222)
              {
                memcpy(v53, v54, *(void *)(*(void *)(v163 - 8) + 64));
              }
              else
              {
                uint64_t v223 = *((void *)v54 + 1);
                *uint64_t v53 = *(void *)v54;
                v53[1] = v223;
                uint64_t v224 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
                v347 = &v54[v224];
                v357 = (char *)v53 + v224;
                __dstk = (void *)v57;
                v225 = v6;
                uint64_t v226 = sub_253B07160();
                uint64_t v341 = *(void (**)(char *, char *, uint64_t))(*(void *)(v226 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v227 = v226;
                uint64_t v6 = v225;
                uint64_t v57 = (uint64_t)__dstk;
                v341(v357, v347, v227);
                swift_storeEnumTagMultiPayload();
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v53, 0, 1, v163);
            }
            uint64_t v238 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
            uint64_t v239 = (char *)v53 + v238;
            uint64_t v240 = &v54[v238];
            uint64_t v241 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v241 - 8) + 16))(v239, v240, v241);
            swift_storeEnumTagMultiPayload();
            a1 = v387;
            break;
          case 1:
            *(unsigned char *)uint64_t v53 = *v54;
            uint64_t v165 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v166 = (char *)v53 + v165;
            uint64_t v167 = &v54[v165];
            uint64_t v168 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16))(v166, v167, v168);
            goto LABEL_70;
          case 0:
            *(unsigned char *)uint64_t v53 = *v54;
            uint64_t v135 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v136 = (char *)v53 + v135;
            uint64_t v137 = &v54[v135];
            uint64_t v138 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16))(v136, v137, v138);
LABEL_70:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v53, v54, *(void *)(*(void *)(v103 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v53, 0, 1, v103);
LABEL_96:
        uint64_t v242 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
        uint64_t v243 = (char *)v53 + v242;
        uint64_t v244 = &v54[v242];
        uint64_t v245 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v245 - 8) + 16))(v243, v244, v245);
LABEL_97:
        swift_storeEnumTagMultiPayload();
        int v3 = v102;
LABEL_98:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v53, 0, 1, v57);
        goto LABEL_99;
      case 8u:
        uint64_t v105 = *((void *)v54 + 1);
        *uint64_t v53 = *(void *)v54;
        v53[1] = v105;
        v53[2] = *((void *)v54 + 2);
        uint64_t v106 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        uint64_t v385 = (char *)v53 + v106;
        uint64_t v353 = &v54[v106];
        v395 = v3;
        uint64_t v107 = a1;
        uint64_t v108 = sub_253B07160();
        __dstg = (void *)v57;
        char v109 = v6;
        uint64_t v110 = *(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v111 = v108;
        a1 = v107;
        int v3 = v395;
        v110(v385, v353, v111);
        uint64_t v6 = v109;
        uint64_t v57 = (uint64_t)__dstg;
        goto LABEL_38;
      case 9u:
        uint64_t v102 = v3;
        uint64_t v112 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54, 1, v112))
        {
          uint64_t v113 = sub_253462A5C(&qword_269CE04A8);
          memcpy(v53, v54, *(void *)(*(void *)(v113 - 8) + 64));
        }
        else
        {
          uint64_t v139 = a1;
          uint64_t v140 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54, 1, v140))
          {
            uint64_t v141 = sub_253462A5C(&qword_269CE04A0);
            memcpy(v53, v54, *(void *)(*(void *)(v141 - 8) + 64));
          }
          else
          {
            uint64_t v376 = v6;
            uint64_t v154 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54, 16, v154))
            {
              memcpy(v53, v54, *(void *)(*(void *)(v140 - 8) + 64));
            }
            else
            {
              uint64_t v169 = *((void *)v54 + 1);
              *uint64_t v53 = *(void *)v54;
              v53[1] = v169;
              uint64_t v170 = *((void *)v54 + 3);
              v53[2] = *((void *)v54 + 2);
              v53[3] = v170;
              v53[4] = *((void *)v54 + 4);
              uint64_t v171 = *(int *)(v154 + 28);
              uint64_t v388 = (char *)v53 + v171;
              __dstj = &v54[v171];
              uint64_t v172 = sub_253B07160();
              v340 = *(void (**)(char *, char *, uint64_t))(*(void *)(v172 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v340(v388, __dstj, v172);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v53, 0, 16, v154);
            }
            uint64_t v6 = v376;
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v53, 0, 1, v140);
          }
          a1 = v139;
          uint64_t v173 = *(int *)(v112 + 20);
          uint64_t v174 = (char *)v53 + v173;
          uint64_t v175 = &v54[v173];
          uint64_t v176 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16))(v174, v175, v176);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v53, 0, 1, v112);
        }
        uint64_t v177 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
        uint64_t v178 = (char *)v53 + v177;
        v179 = &v54[v177];
        uint64_t v180 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 16))(v178, v179, v180);
        goto LABEL_97;
      case 0xAu:
        *uint64_t v53 = *(void *)v54;
        uint64_t v114 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
        uint64_t v386 = (char *)v53 + v114;
        __dsth = &v54[v114];
        v396 = v3;
        uint64_t v115 = sub_253B07160();
        uint64_t v116 = a1;
        uint64_t v117 = *(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v118 = v115;
        int v3 = v396;
        v117(v386, __dsth, v118);
        a1 = v116;
LABEL_38:
        swift_storeEnumTagMultiPayload();
        goto LABEL_98;
      default:
        v381 = a1;
        *(unsigned char *)uint64_t v53 = *v54;
        *(_WORD *)((char *)v53 + 1) = *(_WORD *)(v54 + 1);
        uint64_t v59 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v60 = v59[7];
        uint64_t v61 = (char *)v53 + v60;
        uint64_t v62 = &v54[v60];
        uint64_t v63 = sub_253B08E50();
        uint64_t v374 = v6;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v62, 1, v63))
        {
          uint64_t v64 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v61, 0, 1, v63);
        }
        uint64_t v119 = v59[8];
        char v120 = (void *)((char *)v53 + v119);
        uint64_t v121 = &v54[v119];
        uint64_t v122 = type metadata accessor for TranscriptProtoUndoContext(0);
        v393 = v3;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v121, 1, v122))
        {
          uint64_t v123 = sub_253462A5C(&qword_269CE0450);
          memcpy(v120, v121, *(void *)(*(void *)(v123 - 8) + 64));
        }
        else
        {
          __dsti = v59;
          uint64_t v142 = *((void *)v121 + 1);
          *char v120 = *(void *)v121;
          v120[1] = v142;
          uint64_t v143 = *((void *)v121 + 3);
          v120[2] = *((void *)v121 + 2);
          v120[3] = v143;
          uint64_t v144 = *((void *)v121 + 5);
          v120[4] = *((void *)v121 + 4);
          v120[5] = v144;
          uint64_t v145 = *(int *)(v122 + 28);
          v344 = &v121[v145];
          v354 = (char *)v120 + v145;
          uint64_t v146 = sub_253B07160();
          uint64_t v338 = *(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 16);
          uint64_t v59 = __dsti;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v338(v354, v344, v146);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v120, 0, 1, v122);
        }
        uint64_t v147 = v59[9];
        uint64_t v148 = (void *)((char *)v53 + v147);
        uint64_t v149 = &v54[v147];
        uint64_t v150 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v149, 1, v150))
        {
          uint64_t v151 = sub_253462A5C(&qword_269CE0468);
          memcpy(v148, v149, *(void *)(*(void *)(v151 - 8) + 64));
        }
        else
        {
          uint64_t v152 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          __dsta = v59;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v149, 1, v152))
          {
            uint64_t v153 = sub_253462A5C(&qword_269CE0460);
            memcpy(v148, v149, *(void *)(*(void *)(v153 - 8) + 64));
          }
          else
          {
            uint64_t v356 = v150;
            uint64_t v161 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v149, 1, v161))
            {
              uint64_t v162 = sub_253462A5C(&qword_269CE0458);
              memcpy(v148, v149, *(void *)(*(void *)(v162 - 8) + 64));
            }
            else
            {
              uint64_t v196 = *((void *)v149 + 1);
              *uint64_t v148 = *(void *)v149;
              v148[1] = v196;
              uint64_t v346 = v161;
              uint64_t v197 = *((void *)v149 + 2);
              unint64_t v198 = *((void *)v149 + 3);
              swift_bridgeObjectRetain();
              sub_25348A9C8(v197, v198);
              v148[2] = v197;
              v148[3] = v198;
              v148[4] = *((void *)v149 + 4);
              uint64_t v199 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              uint64_t v200 = (char *)v148 + v199;
              long long v201 = &v149[v199];
              uint64_t v202 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 16))(v200, v201, v202);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v148, 0, 1, v346);
            }
            uint64_t v203 = *(int *)(v152 + 20);
            uint64_t v204 = (char *)v148 + v203;
            v205 = &v149[v203];
            uint64_t v206 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v206 - 8) + 16))(v204, v205, v206);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v148, 0, 1, v152);
            uint64_t v150 = v356;
          }
          uint64_t v207 = *(int *)(v150 + 20);
          uint64_t v208 = (char *)v148 + v207;
          uint64_t v209 = v150;
          uint64_t v210 = &v149[v207];
          uint64_t v211 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v211 - 8) + 16))(v208, v210, v211);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v148, 0, 1, v209);
          uint64_t v59 = __dsta;
        }
        uint64_t v212 = v59[10];
        v213 = (void *)((char *)v53 + v212);
        uint64_t v214 = &v54[v212];
        uint64_t v215 = v59;
        uint64_t v216 = *((void *)v214 + 1);
        void *v213 = *(void *)v214;
        v213[1] = v216;
        uint64_t v217 = v215[11];
        uint64_t v218 = (char *)v53 + v217;
        v219 = &v54[v217];
        uint64_t v220 = sub_253B07160();
        uint64_t v221 = *(void (**)(char *, char *, uint64_t))(*(void *)(v220 - 8) + 16);
        swift_bridgeObjectRetain();
        v221(v218, v219, v220);
        swift_storeEnumTagMultiPayload();
        a1 = v381;
LABEL_84:
        int v3 = v393;
        uint64_t v6 = v374;
        goto LABEL_98;
    }
  }
  uint64_t v56 = sub_253462A5C(&qword_269CE0388);
  memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
LABEL_100:
  uint64_t v250 = v6[8];
  *((unsigned char *)a1 + v6[7]) = v3[v6[7]];
  v251 = (void *)((char *)a1 + v250);
  uint64_t v252 = &v3[v250];
  uint64_t v253 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v252, 1, (uint64_t)v253))
  {
    uint64_t v254 = sub_253462A5C(&qword_269CE0378);
    memcpy(v251, v252, *(void *)(*(void *)(v254 - 8) + 64));
  }
  else
  {
    uint64_t v389 = a1;
    v397 = v3;
    void *v251 = *(void *)v252;
    uint64_t v255 = v253[5];
    uint64_t v256 = (void *)((char *)v251 + v255);
    uint64_t v257 = &v252[v255];
    uint64_t v258 = type metadata accessor for TranscriptProtoResponseDialog(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v257, 1, v258))
    {
      uint64_t v259 = sub_253462A5C(&qword_269CE04B8);
      memcpy(v256, v257, *(void *)(*(void *)(v259 - 8) + 64));
    }
    else
    {
      uint64_t v260 = *((void *)v257 + 1);
      *uint64_t v256 = *(void *)v257;
      v256[1] = v260;
      uint64_t v261 = *((void *)v257 + 3);
      v256[2] = *((void *)v257 + 2);
      v256[3] = v261;
      uint64_t v262 = *((void *)v257 + 5);
      v256[4] = *((void *)v257 + 4);
      v256[5] = v262;
      v378 = v6;
      uint64_t v263 = *((void *)v257 + 7);
      v256[6] = *((void *)v257 + 6);
      v256[7] = v263;
      uint64_t v264 = *(int *)(v258 + 32);
      v358 = &v257[v264];
      __dstl = (char *)v256 + v264;
      uint64_t v265 = sub_253B07160();
      uint64_t v348 = *(void (**)(char *, char *, uint64_t))(*(void *)(v265 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v6 = v378;
      swift_bridgeObjectRetain();
      v348(__dstl, v358, v265);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v256, 0, 1, v258);
    }
    uint64_t v266 = v253[6];
    uint64_t v267 = (void *)((char *)v251 + v266);
    uint64_t v268 = &v252[v266];
    uint64_t v269 = type metadata accessor for TranscriptProtoResponseVisual(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v268, 1, v269))
    {
      uint64_t v270 = sub_253462A5C(&qword_269CE04C8);
      memcpy(v267, v268, *(void *)(*(void *)(v270 - 8) + 64));
    }
    else
    {
      v379 = v6;
      uint64_t v271 = *((void *)v268 + 1);
      *uint64_t v267 = *(void *)v268;
      v267[1] = v271;
      uint64_t v272 = *(int *)(v269 + 24);
      __dstb = (char *)v267 + v272;
      uint64_t v273 = &v268[v272];
      uint64_t v274 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v273, 1, v274))
      {
        uint64_t v275 = sub_253462A5C(&qword_269CE04C0);
        memcpy(__dstb, v273, *(void *)(*(void *)(v275 - 8) + 64));
      }
      else
      {
        char *__dstb = *v273;
        uint64_t v276 = *(int *)(v274 + 20);
        uint64_t v277 = &__dstb[v276];
        uint64_t v278 = &v273[v276];
        uint64_t v279 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v279 - 8) + 16))(v277, v278, v279);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstb, 0, 1, v274);
      }
      uint64_t v280 = *(int *)(v269 + 28);
      uint64_t v281 = (char *)v267 + v280;
      uint64_t v282 = &v268[v280];
      uint64_t v283 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v283 - 8) + 16))(v281, v282, v283);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v267, 0, 1, v269);
      uint64_t v6 = v379;
    }
    uint64_t v284 = v253[7];
    uint64_t v285 = (void *)((char *)v251 + v284);
    uint64_t v286 = &v252[v284];
    uint64_t v287 = *((void *)v286 + 1);
    *uint64_t v285 = *(void *)v286;
    v285[1] = v287;
    uint64_t v288 = v253[8];
    uint64_t v289 = (void *)((char *)v251 + v288);
    uint64_t v290 = &v252[v288];
    uint64_t v291 = *((void *)v290 + 1);
    *uint64_t v289 = *(void *)v290;
    v289[1] = v291;
    *((unsigned char *)v251 + v253[9]) = v252[v253[9]];
    *((unsigned char *)v251 + v253[10]) = v252[v253[10]];
    uint64_t v292 = v253[11];
    uint64_t v293 = (void *)((char *)v251 + v292);
    uint64_t v294 = &v252[v292];
    uint64_t v295 = type metadata accessor for TranscriptProtoUIType(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v294, 1, v295))
    {
      uint64_t v296 = sub_253462A5C(&qword_269CE04D0);
      memcpy(v293, v294, *(void *)(*(void *)(v296 - 8) + 64));
    }
    else
    {
      v297 = v6;
      uint64_t v298 = type metadata accessor for TranscriptProtoUitype(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v294, 1, v298))
      {
        uint64_t v299 = sub_253462A5C(&qword_269CDCC08);
        memcpy(v293, v294, *(void *)(*(void *)(v299 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v306 = *((void *)v294 + 1);
            *uint64_t v293 = *(void *)v294;
            v293[1] = v306;
            uint64_t v307 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
            goto LABEL_119;
          case 2u:
            uint64_t v308 = *(void *)v294;
            unint64_t v309 = *((void *)v294 + 1);
            sub_25348A9C8(*(void *)v294, v309);
            *uint64_t v293 = v308;
            v293[1] = v309;
            uint64_t v310 = *((void *)v294 + 3);
            v293[2] = *((void *)v294 + 2);
            v293[3] = v310;
            uint64_t v307 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
LABEL_119:
            v350 = &v294[v307];
            uint64_t v359 = (char *)v293 + v307;
            uint64_t v311 = sub_253B07160();
            uint64_t v343 = *(void (**)(char *, char *, uint64_t))(*(void *)(v311 - 8) + 16);
            swift_bridgeObjectRetain();
            v343(v359, v350, v311);
            break;
          case 3u:
            uint64_t v312 = *(void *)v294;
            unint64_t v313 = *((void *)v294 + 1);
            sub_25348A9C8(*(void *)v294, v313);
            *uint64_t v293 = v312;
            v293[1] = v313;
            uint64_t v314 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
            uint64_t v315 = (char *)v293 + v314;
            uint64_t v316 = &v294[v314];
            uint64_t v317 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v317 - 8) + 16))(v315, v316, v317);
            break;
          default:
            uint64_t v300 = *(void *)v294;
            unint64_t v301 = *((void *)v294 + 1);
            sub_25348A9C8(*(void *)v294, v301);
            *uint64_t v293 = v300;
            v293[1] = v301;
            uint64_t v302 = *((void *)v294 + 3);
            v293[2] = *((void *)v294 + 2);
            v293[3] = v302;
            uint64_t v303 = *((void *)v294 + 5);
            v293[4] = *((void *)v294 + 4);
            v293[5] = v303;
            uint64_t v304 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
            v342 = &v294[v304];
            uint64_t v349 = (char *)v293 + v304;
            uint64_t v305 = sub_253B07160();
            v337 = *(void (**)(char *, char *, uint64_t))(*(void *)(v305 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v337(v349, v342, v305);
            break;
        }
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v293, 0, 1, v298);
      }
      uint64_t v6 = v297;
      uint64_t v318 = *(int *)(v295 + 20);
      uint64_t v319 = (char *)v293 + v318;
      uint64_t v320 = &v294[v318];
      uint64_t v321 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v321 - 8) + 16))(v319, v320, v321);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v293, 0, 1, v295);
    }
    uint64_t v322 = v253[12];
    uint64_t v323 = (char *)v251 + v322;
    uint64_t v324 = &v252[v322];
    uint64_t v325 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v325 - 8) + 16))(v323, v324, v325);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v251, 0, 1, (uint64_t)v253);
    a1 = v389;
    int v3 = v397;
  }
  uint64_t v326 = v6[9];
  uint64_t v327 = (char *)a1 + v326;
  uint64_t v328 = &v3[v326];
  uint64_t v329 = sub_253B08F00();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v328, 1, v329))
  {
    uint64_t v330 = sub_253462A5C(&qword_269CE0368);
    memcpy(v327, v328, *(void *)(*(void *)(v330 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v329 - 8) + 16))(v327, v328, v329);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v327, 0, 1, v329);
  }
  uint64_t v331 = v6[10];
  uint64_t v332 = (char *)a1 + v331;
  uint64_t v333 = &v3[v331];
  uint64_t v334 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v334 - 8) + 16))(v332, v333, v334);
  return a1;
}

uint64_t destroy for ResponseGenerationProtoStatementResultDigest(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_253B08F30();
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = (int *)type metadata accessor for TranscriptProtoAction(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v5, 1, (uint64_t)v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v5 + v6[7];
    uint64_t v8 = type metadata accessor for TranscriptProtoStatementID(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v8))
    {
      swift_bridgeObjectRelease();
      uint64_t v9 = v7 + *(int *)(v8 + 24);
      uint64_t v10 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v5 + v6[11];
    uint64_t v12 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v11, 1, v12))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = v11 + *(int *)(v12 + 24);
      uint64_t v14 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    }
    uint64_t v15 = v5 + v6[12];
    uint64_t v16 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  uint64_t v17 = a1 + a2[6];
  uint64_t v18 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v17, 1, v18))
  {
    uint64_t v19 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v17, 1, v19))
    {
LABEL_66:
      uint64_t v80 = v17 + *(int *)(v18 + 20);
      uint64_t v81 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v80, v81);
      goto LABEL_67;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v20 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v21 = v17 + v20[7];
        uint64_t v22 = sub_253B08E50();
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v21, 1, v22)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
        }
        uint64_t v23 = v17 + v20[8];
        uint64_t v24 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v23, 1, v24))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v25 = v23 + *(int *)(v24 + 28);
          uint64_t v26 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
        }
        uint64_t v27 = v17 + v20[9];
        uint64_t v28 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v27, 1, v28))
        {
          uint64_t v29 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v27, 1, v29))
          {
            uint64_t v30 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v27, 1, v30))
            {
              swift_bridgeObjectRelease();
              sub_253487D84(*(void *)(v27 + 16), *(void *)(v27 + 24));
              uint64_t v31 = v27
                  + *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
              uint64_t v32 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
            }
            uint64_t v33 = v27 + *(int *)(v29 + 20);
            uint64_t v34 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
          }
          uint64_t v35 = v27 + *(int *)(v28 + 20);
          uint64_t v36 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
        }
        swift_bridgeObjectRelease();
        uint64_t v37 = v20[11];
        goto LABEL_65;
      case 1u:
        swift_bridgeObjectRelease();
        uint64_t v38 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v39 = v17 + *(int *)(v38 + 20);
        uint64_t v40 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v39, 1, v40))
        {
          uint64_t v41 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v39, 1, v41))
          {
            swift_bridgeObjectRelease();
            uint64_t v42 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v43 = v39 + *(int *)(v42 + 24);
            uint64_t v44 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v43, 1, v44))
            {
              uint64_t v45 = v43 + *(int *)(v44 + 20);
              uint64_t v46 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8))(v45, v46);
            }
            uint64_t v47 = v39 + *(int *)(v42 + 28);
            uint64_t v48 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v47, v48);
          }
          uint64_t v49 = v39 + *(int *)(v40 + 20);
          uint64_t v50 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v49, v50);
        }
        goto LABEL_38;
      case 2u:
        swift_bridgeObjectRelease();
        uint64_t v51 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_64;
      case 3u:
        swift_bridgeObjectRelease();
        uint64_t v52 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_33;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v37 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_65;
      case 5u:
        swift_bridgeObjectRelease();
        uint64_t v52 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_33:
        uint64_t v53 = v52;
        uint64_t v54 = v17 + *(int *)(v52 + 24);
        uint64_t v55 = sub_253B08E50();
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v54, 1, v55)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8))(v54, v55);
        }
        uint64_t v37 = *(int *)(v53 + 28);
        goto LABEL_65;
      case 6u:
        swift_bridgeObjectRelease();
        uint64_t v38 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v56 = v17 + *(int *)(v38 + 20);
        uint64_t v57 = sub_253B08E50();
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v56, 1, v57)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 8))(v56, v57);
        }
LABEL_38:
        uint64_t v37 = *(int *)(v38 + 24);
        goto LABEL_65;
      case 7u:
        uint64_t v58 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v17, 1, v58)) {
          goto LABEL_63;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v60 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
          }
          else
          {
            if (EnumCaseMultiPayload) {
              goto LABEL_63;
            }
            uint64_t v60 = type metadata accessor for TranscriptProtoAppRequirement(0);
          }
LABEL_62:
          uint64_t v76 = v17 + *(int *)(v60 + 20);
          uint64_t v77 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v77 - 8) + 8))(v76, v77);
LABEL_63:
          uint64_t v51 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_64:
          uint64_t v37 = *(int *)(v51 + 20);
LABEL_65:
          uint64_t v78 = v17 + v37;
          uint64_t v79 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v78, v79);
          goto LABEL_66;
        }
        uint64_t v68 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v17, 1, v68)) {
          goto LABEL_61;
        }
        int v69 = swift_getEnumCaseMultiPayload();
        if (v69 == 1)
        {
          uint64_t v71 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v17, 1, v71))
          {
            uint64_t v72 = v17 + *(int *)(v71 + 20);
            uint64_t v73 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v73 - 8) + 8))(v72, v73);
          }
          uint64_t v70 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
        }
        else
        {
          if (v69)
          {
LABEL_61:
            uint64_t v60 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
            goto LABEL_62;
          }
          swift_bridgeObjectRelease();
          uint64_t v70 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
        }
        uint64_t v74 = v17 + *(int *)(v70 + 20);
        uint64_t v75 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v75 - 8) + 8))(v74, v75);
        goto LABEL_61;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v37 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        goto LABEL_65;
      case 9u:
        uint64_t v61 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v17, 1, v61))
        {
          uint64_t v62 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v17, 1, v62))
          {
            uint64_t v63 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v17, 16, v63))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v64 = v17 + *(int *)(v63 + 28);
              uint64_t v65 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v65 - 8) + 8))(v64, v65);
            }
          }
          uint64_t v66 = v17 + *(int *)(v61 + 20);
          uint64_t v67 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v67 - 8) + 8))(v66, v67);
        }
        uint64_t v51 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_64;
      case 0xAu:
        swift_bridgeObjectRelease();
        uint64_t v51 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
        goto LABEL_64;
      default:
        goto LABEL_66;
    }
  }
LABEL_67:
  uint64_t v82 = a1 + a2[8];
  uint64_t v83 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v82, 1, (uint64_t)v83))
  {
    swift_bridgeObjectRelease();
    uint64_t v84 = v82 + v83[5];
    uint64_t v85 = type metadata accessor for TranscriptProtoResponseDialog(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v84, 1, v85))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v86 = v84 + *(int *)(v85 + 32);
      uint64_t v87 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v87 - 8) + 8))(v86, v87);
    }
    uint64_t v88 = v82 + v83[6];
    uint64_t v89 = type metadata accessor for TranscriptProtoResponseVisual(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v88, 1, v89))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v90 = v88 + *(int *)(v89 + 24);
      uint64_t v91 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v90, 1, v91))
      {
        uint64_t v92 = v90 + *(int *)(v91 + 20);
        uint64_t v93 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v93 - 8) + 8))(v92, v93);
      }
      uint64_t v94 = v88 + *(int *)(v89 + 28);
      uint64_t v95 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v95 - 8) + 8))(v94, v95);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v96 = v82 + v83[11];
    uint64_t v97 = type metadata accessor for TranscriptProtoUIType(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v96, 1, v97))
    {
      uint64_t v98 = type metadata accessor for TranscriptProtoUitype(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v96, 1, v98))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            sub_253487D84(*(void *)v96, *(void *)(v96 + 8));
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v99 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
            goto LABEL_82;
          case 1u:
            swift_bridgeObjectRelease();
            uint64_t v100 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
            goto LABEL_81;
          case 2u:
            sub_253487D84(*(void *)v96, *(void *)(v96 + 8));
            swift_bridgeObjectRelease();
            uint64_t v99 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
            goto LABEL_82;
          case 3u:
            sub_253487D84(*(void *)v96, *(void *)(v96 + 8));
            uint64_t v100 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_81:
            uint64_t v99 = *(int *)(v100 + 20);
LABEL_82:
            uint64_t v101 = v96 + v99;
            uint64_t v102 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v102 - 8) + 8))(v101, v102);
            break;
          default:
            break;
        }
      }
      uint64_t v103 = v96 + *(int *)(v97 + 20);
      uint64_t v104 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v104 - 8) + 8))(v103, v104);
    }
    uint64_t v105 = v82 + v83[12];
    uint64_t v106 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v106 - 8) + 8))(v105, v106);
  }
  uint64_t v107 = a1 + a2[9];
  uint64_t v108 = sub_253B08F00();
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v107, 1, v108)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v108 - 8) + 8))(v107, v108);
  }
  uint64_t v109 = a1 + a2[10];
  uint64_t v110 = sub_253B07160();
  uint64_t v111 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v110 - 8) + 8);
  return v111(v109, v110);
}

char *initializeWithCopy for ResponseGenerationProtoStatementResultDigest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_253B08F30();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CDFA70);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = (int *)type metadata accessor for TranscriptProtoAction(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, (uint64_t)v11))
  {
    uint64_t v12 = sub_253462A5C(&qword_269CE0398);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v371 = a3;
    v378 = a1;
    uint64_t v388 = a2;
    uint64_t v13 = *((void *)v10 + 1);
    *(void *)uint64_t v9 = *(void *)v10;
    *((void *)v9 + 1) = v13;
    v9[16] = v10[16];
    *((void *)v9 + 3) = *((void *)v10 + 3);
    uint64_t v14 = v11[7];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    uint64_t v17 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v17))
    {
      uint64_t v18 = sub_253462A5C(&qword_26B249528);
      memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
      uint64_t v19 = *((void *)v16 + 2);
      *((void *)v15 + 1) = *((void *)v16 + 1);
      *((void *)v15 + 2) = v19;
      uint64_t v20 = *(int *)(v17 + 24);
      __dstc = &v15[v20];
      uint64_t v21 = &v16[v20];
      uint64_t v22 = sub_253B07160();
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v23(__dstc, v21, v22);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v17);
    }
    uint64_t v24 = v11[8];
    uint64_t v25 = &v9[v24];
    uint64_t v26 = &v10[v24];
    uint64_t v27 = *((void *)v26 + 1);
    *(void *)uint64_t v25 = *(void *)v26;
    *((void *)v25 + 1) = v27;
    uint64_t v28 = v11[9];
    uint64_t v29 = &v9[v28];
    uint64_t v30 = &v10[v28];
    uint64_t v31 = *((void *)v30 + 1);
    *(void *)uint64_t v29 = *(void *)v30;
    *((void *)v29 + 1) = v31;
    uint64_t v32 = v11[10];
    uint64_t v33 = &v9[v32];
    uint64_t v34 = &v10[v32];
    uint64_t v35 = *((void *)v34 + 1);
    *(void *)uint64_t v33 = *(void *)v34;
    *((void *)v33 + 1) = v35;
    uint64_t v36 = v11[11];
    uint64_t v37 = &v9[v36];
    uint64_t v38 = &v10[v36];
    uint64_t v39 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, v39))
    {
      uint64_t v40 = sub_253462A5C(&qword_269CE0448);
      memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      uint64_t v41 = *((void *)v38 + 1);
      *(void *)uint64_t v37 = *(void *)v38;
      *((void *)v37 + 1) = v41;
      uint64_t v42 = *((void *)v38 + 3);
      *((void *)v37 + 2) = *((void *)v38 + 2);
      *((void *)v37 + 3) = v42;
      uint64_t v43 = *(int *)(v39 + 24);
      uint64_t v349 = &v38[v43];
      __dstd = &v37[v43];
      uint64_t v44 = sub_253B07160();
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45(__dstd, v349, v44);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v37, 0, 1, v39);
    }
    a2 = v388;
    uint64_t v46 = v11[12];
    uint64_t v47 = &v9[v46];
    uint64_t v48 = &v10[v46];
    uint64_t v49 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, (uint64_t)v11);
    a3 = v371;
    a1 = v378;
  }
  uint64_t v50 = a3[6];
  uint64_t v51 = &a1[v50];
  uint64_t v52 = &a2[v50];
  uint64_t v53 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v53))
  {
    uint64_t v54 = sub_253462A5C(&qword_269CE0388);
    memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
    goto LABEL_98;
  }
  uint64_t v55 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v55))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v373 = a3;
        uint64_t v380 = a1;
        uint64_t v389 = a2;
        *(void *)uint64_t v51 = *(void *)v52;
        uint64_t v63 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v64 = *(int *)(v63 + 20);
        uint64_t v65 = &v51[v64];
        uint64_t v66 = &v52[v64];
        uint64_t v67 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v66, 1, v67))
        {
          uint64_t v68 = sub_253462A5C(&qword_269CE0480);
          memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
          a3 = v373;
        }
        else
        {
          __dst = (void *)v63;
          uint64_t v122 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v66, 1, v122))
          {
            uint64_t v123 = sub_253462A5C(&qword_269CE0478);
            memcpy(v65, v66, *(void *)(*(void *)(v123 - 8) + 64));
          }
          else
          {
            uint64_t v353 = v122;
            uint64_t v153 = *((void *)v66 + 1);
            *(void *)uint64_t v65 = *(void *)v66;
            *((void *)v65 + 1) = v153;
            v65[16] = v66[16];
            uint64_t v154 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v155 = *(int *)(v154 + 24);
            v337 = &v65[v155];
            uint64_t v343 = v154;
            uint64_t v156 = &v66[v155];
            uint64_t v157 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v156, 1, v157))
            {
              uint64_t v158 = sub_253462A5C(&qword_269CE0470);
              memcpy(v337, v156, *(void *)(*(void *)(v158 - 8) + 64));
            }
            else
            {
              char *v337 = *v156;
              uint64_t v179 = *(int *)(v157 + 20);
              uint64_t v180 = &v337[v179];
              uint64_t v334 = &v156[v179];
              uint64_t v181 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 16))(v180, v334, v181);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v337, 0, 1, v157);
            }
            uint64_t v182 = *(int *)(v343 + 28);
            uint64_t v183 = &v65[v182];
            uint64_t v184 = &v66[v182];
            uint64_t v185 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v185 - 8) + 16))(v183, v184, v185);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v65, 0, 1, v353);
          }
          uint64_t v186 = *(int *)(v67 + 20);
          uint64_t v187 = &v65[v186];
          uint64_t v188 = &v66[v186];
          uint64_t v189 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v189 - 8) + 16))(v187, v188, v189);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v65, 0, 1, v67);
          uint64_t v63 = (uint64_t)__dst;
          a3 = v373;
        }
        uint64_t v190 = *(int *)(v63 + 24);
        uint64_t v191 = &v51[v190];
        uint64_t v192 = &v52[v190];
        uint64_t v193 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 16))(v191, v192, v193);
        swift_storeEnumTagMultiPayload();
        a1 = v380;
        a2 = v389;
        goto LABEL_96;
      case 2u:
        uint64_t v69 = *((void *)v52 + 1);
        *(void *)uint64_t v51 = *(void *)v52;
        *((void *)v51 + 1) = v69;
        uint64_t v70 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
        v381 = &v51[v70];
        __dste = &v52[v70];
        uint64_t v390 = a2;
        uint64_t v71 = sub_253B07160();
        uint64_t v72 = a1;
        uint64_t v73 = *(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v74 = v71;
        a2 = v390;
        v73(v381, __dste, v74);
        a1 = v72;
        goto LABEL_36;
      case 3u:
        uint64_t v372 = a3;
        v391 = a2;
        uint64_t v75 = a1;
        uint64_t v76 = *((void *)v52 + 1);
        *(void *)uint64_t v51 = *(void *)v52;
        *((void *)v51 + 1) = v76;
        *((void *)v51 + 2) = *((void *)v52 + 2);
        v51[24] = v52[24];
        uint64_t v77 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        uint64_t v78 = *(int *)(v77 + 24);
        uint64_t v79 = &v51[v78];
        uint64_t v80 = &v52[v78];
        uint64_t v81 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v80, 1, v81)) {
          goto LABEL_24;
        }
        goto LABEL_42;
      case 4u:
        uint64_t v83 = *((void *)v52 + 1);
        *(void *)uint64_t v51 = *(void *)v52;
        *((void *)v51 + 1) = v83;
        uint64_t v84 = *((void *)v52 + 3);
        *((void *)v51 + 2) = *((void *)v52 + 2);
        *((void *)v51 + 3) = v84;
        v51[32] = v52[32];
        uint64_t v85 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        v382 = &v51[v85];
        v350 = &v52[v85];
        v392 = a2;
        uint64_t v86 = a1;
        uint64_t v87 = sub_253B07160();
        __dstf = (void *)v55;
        uint64_t v88 = a3;
        uint64_t v89 = *(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v90 = v87;
        a1 = v86;
        a2 = v392;
        v89(v382, v350, v90);
        a3 = v88;
        uint64_t v55 = (uint64_t)__dstf;
        goto LABEL_36;
      case 5u:
        uint64_t v372 = a3;
        v391 = a2;
        uint64_t v75 = a1;
        uint64_t v91 = *((void *)v52 + 1);
        *(void *)uint64_t v51 = *(void *)v52;
        *((void *)v51 + 1) = v91;
        v51[16] = v52[16];
        uint64_t v77 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
        uint64_t v92 = *(int *)(v77 + 24);
        uint64_t v79 = &v51[v92];
        uint64_t v80 = &v52[v92];
        uint64_t v81 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v80, 1, v81))
        {
LABEL_24:
          uint64_t v82 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v79, v80, *(void *)(*(void *)(v82 - 8) + 64));
        }
        else
        {
LABEL_42:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v79, v80, v81);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v79, 0, 1, v81);
        }
        uint64_t v124 = *(int *)(v77 + 28);
        uint64_t v125 = &v51[v124];
        uint64_t v126 = &v52[v124];
        uint64_t v127 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16))(v125, v126, v127);
        goto LABEL_47;
      case 6u:
        uint64_t v372 = a3;
        v391 = a2;
        uint64_t v75 = a1;
        uint64_t v93 = *((void *)v52 + 1);
        *(void *)uint64_t v51 = *(void *)v52;
        *((void *)v51 + 1) = v93;
        uint64_t v94 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v95 = *(int *)(v94 + 20);
        uint64_t v96 = &v51[v95];
        uint64_t v97 = &v52[v95];
        uint64_t v98 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v97, 1, v98))
        {
          uint64_t v99 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v96, v97, *(void *)(*(void *)(v99 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16))(v96, v97, v98);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v96, 0, 1, v98);
        }
        uint64_t v128 = *(int *)(v94 + 24);
        uint64_t v129 = &v51[v128];
        uint64_t v130 = &v52[v128];
        uint64_t v131 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16))(v129, v130, v131);
LABEL_47:
        swift_storeEnumTagMultiPayload();
        a1 = v75;
        goto LABEL_82;
      case 7u:
        uint64_t v100 = a2;
        uint64_t v101 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v101))
        {
          uint64_t v102 = sub_253462A5C(&qword_269CE0498);
          memcpy(v51, v52, *(void *)(*(void *)(v102 - 8) + 64));
          goto LABEL_94;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 2:
            uint64_t v385 = a1;
            uint64_t v161 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v161))
            {
              uint64_t v162 = sub_253462A5C(&qword_269CE0490);
              memcpy(v51, v52, *(void *)(*(void *)(v162 - 8) + 64));
            }
            else
            {
              int v220 = swift_getEnumCaseMultiPayload();
              if (v220 == 1)
              {
                v375 = a3;
                uint64_t v226 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v226))
                {
                  uint64_t v227 = sub_253462A5C(&qword_269CE0488);
                  memcpy(v51, v52, *(void *)(*(void *)(v227 - 8) + 64));
                }
                else
                {
                  *uint64_t v51 = *v52;
                  uint64_t v228 = *(int *)(v226 + 20);
                  uint64_t v229 = &v51[v228];
                  uint64_t v230 = &v52[v228];
                  uint64_t v231 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v231 - 8) + 16))(v229, v230, v231);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v51, 0, 1, v226);
                }
                uint64_t v232 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0)
                              + 20);
                uint64_t v233 = &v51[v232];
                uint64_t v234 = &v52[v232];
                uint64_t v235 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v235 - 8) + 16))(v233, v234, v235);
                swift_storeEnumTagMultiPayload();
                a3 = v375;
              }
              else if (v220)
              {
                memcpy(v51, v52, *(void *)(*(void *)(v161 - 8) + 64));
              }
              else
              {
                uint64_t v221 = *((void *)v52 + 1);
                *(void *)uint64_t v51 = *(void *)v52;
                *((void *)v51 + 1) = v221;
                uint64_t v222 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
                uint64_t v345 = &v52[v222];
                uint64_t v355 = &v51[v222];
                __dstk = (void *)v55;
                uint64_t v223 = a3;
                uint64_t v224 = sub_253B07160();
                v339 = *(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v225 = v224;
                a3 = v223;
                uint64_t v55 = (uint64_t)__dstk;
                v339(v355, v345, v225);
                swift_storeEnumTagMultiPayload();
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v51, 0, 1, v161);
            }
            uint64_t v236 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
            uint64_t v237 = &v51[v236];
            uint64_t v238 = &v52[v236];
            uint64_t v239 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v239 - 8) + 16))(v237, v238, v239);
            swift_storeEnumTagMultiPayload();
            a1 = v385;
            break;
          case 1:
            *uint64_t v51 = *v52;
            uint64_t v163 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v164 = &v51[v163];
            uint64_t v165 = &v52[v163];
            uint64_t v166 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 16))(v164, v165, v166);
            goto LABEL_68;
          case 0:
            *uint64_t v51 = *v52;
            uint64_t v133 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            char v134 = &v51[v133];
            uint64_t v135 = &v52[v133];
            uint64_t v136 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 16))(v134, v135, v136);
LABEL_68:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v51, v52, *(void *)(*(void *)(v101 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v51, 0, 1, v101);
LABEL_94:
        uint64_t v240 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
        uint64_t v241 = &v51[v240];
        uint64_t v242 = &v52[v240];
        uint64_t v243 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v243 - 8) + 16))(v241, v242, v243);
LABEL_95:
        swift_storeEnumTagMultiPayload();
        a2 = v100;
LABEL_96:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v51, 0, 1, v55);
        goto LABEL_97;
      case 8u:
        uint64_t v103 = *((void *)v52 + 1);
        *(void *)uint64_t v51 = *(void *)v52;
        *((void *)v51 + 1) = v103;
        *((void *)v51 + 2) = *((void *)v52 + 2);
        uint64_t v104 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        uint64_t v383 = &v51[v104];
        unint64_t v351 = &v52[v104];
        v393 = a2;
        uint64_t v105 = a1;
        uint64_t v106 = sub_253B07160();
        __dstg = (void *)v55;
        uint64_t v107 = a3;
        uint64_t v108 = *(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v109 = v106;
        a1 = v105;
        a2 = v393;
        v108(v383, v351, v109);
        a3 = v107;
        uint64_t v55 = (uint64_t)__dstg;
        goto LABEL_36;
      case 9u:
        uint64_t v100 = a2;
        uint64_t v110 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v110))
        {
          uint64_t v111 = sub_253462A5C(&qword_269CE04A8);
          memcpy(v51, v52, *(void *)(*(void *)(v111 - 8) + 64));
        }
        else
        {
          uint64_t v137 = a1;
          uint64_t v138 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v138))
          {
            uint64_t v139 = sub_253462A5C(&qword_269CE04A0);
            memcpy(v51, v52, *(void *)(*(void *)(v139 - 8) + 64));
          }
          else
          {
            uint64_t v374 = a3;
            uint64_t v152 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 16, v152))
            {
              memcpy(v51, v52, *(void *)(*(void *)(v138 - 8) + 64));
            }
            else
            {
              uint64_t v167 = *((void *)v52 + 1);
              *(void *)uint64_t v51 = *(void *)v52;
              *((void *)v51 + 1) = v167;
              uint64_t v168 = *((void *)v52 + 3);
              *((void *)v51 + 2) = *((void *)v52 + 2);
              *((void *)v51 + 3) = v168;
              *((void *)v51 + 4) = *((void *)v52 + 4);
              uint64_t v169 = *(int *)(v152 + 28);
              uint64_t v386 = &v51[v169];
              __dstj = &v52[v169];
              uint64_t v170 = sub_253B07160();
              uint64_t v338 = *(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v338(v386, __dstj, v170);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v51, 0, 16, v152);
            }
            a3 = v374;
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v51, 0, 1, v138);
          }
          a1 = v137;
          uint64_t v171 = *(int *)(v110 + 20);
          uint64_t v172 = &v51[v171];
          uint64_t v173 = &v52[v171];
          uint64_t v174 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 16))(v172, v173, v174);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v51, 0, 1, v110);
        }
        uint64_t v175 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
        uint64_t v176 = &v51[v175];
        uint64_t v177 = &v52[v175];
        uint64_t v178 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 16))(v176, v177, v178);
        goto LABEL_95;
      case 0xAu:
        *(void *)uint64_t v51 = *(void *)v52;
        uint64_t v112 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
        uint64_t v384 = &v51[v112];
        __dsth = &v52[v112];
        v394 = a2;
        uint64_t v113 = sub_253B07160();
        uint64_t v114 = a1;
        uint64_t v115 = *(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v116 = v113;
        a2 = v394;
        v115(v384, __dsth, v116);
        a1 = v114;
LABEL_36:
        swift_storeEnumTagMultiPayload();
        goto LABEL_96;
      default:
        v379 = a1;
        *uint64_t v51 = *v52;
        *(_WORD *)(v51 + 1) = *(_WORD *)(v52 + 1);
        uint64_t v57 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v58 = v57[7];
        uint64_t v59 = &v51[v58];
        uint64_t v60 = &v52[v58];
        uint64_t v61 = sub_253B08E50();
        uint64_t v372 = a3;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v60, 1, v61))
        {
          uint64_t v62 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v59, v60, *(void *)(*(void *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v59, 0, 1, v61);
        }
        uint64_t v117 = v57[8];
        uint64_t v118 = &v51[v117];
        uint64_t v119 = &v52[v117];
        uint64_t v120 = type metadata accessor for TranscriptProtoUndoContext(0);
        v391 = a2;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v119, 1, v120))
        {
          uint64_t v121 = sub_253462A5C(&qword_269CE0450);
          memcpy(v118, v119, *(void *)(*(void *)(v121 - 8) + 64));
        }
        else
        {
          __dsti = v57;
          uint64_t v140 = *((void *)v119 + 1);
          *(void *)uint64_t v118 = *(void *)v119;
          *((void *)v118 + 1) = v140;
          uint64_t v141 = *((void *)v119 + 3);
          *((void *)v118 + 2) = *((void *)v119 + 2);
          *((void *)v118 + 3) = v141;
          uint64_t v142 = *((void *)v119 + 5);
          *((void *)v118 + 4) = *((void *)v119 + 4);
          *((void *)v118 + 5) = v142;
          uint64_t v143 = *(int *)(v120 + 28);
          v342 = &v119[v143];
          uint64_t v352 = &v118[v143];
          uint64_t v144 = sub_253B07160();
          v336 = *(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 16);
          uint64_t v57 = __dsti;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v336(v352, v342, v144);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v118, 0, 1, v120);
        }
        uint64_t v145 = v57[9];
        uint64_t v146 = &v51[v145];
        uint64_t v147 = &v52[v145];
        uint64_t v148 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v147, 1, v148))
        {
          uint64_t v149 = sub_253462A5C(&qword_269CE0468);
          memcpy(v146, v147, *(void *)(*(void *)(v149 - 8) + 64));
        }
        else
        {
          uint64_t v150 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          __dsta = v57;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v147, 1, v150))
          {
            uint64_t v151 = sub_253462A5C(&qword_269CE0460);
            memcpy(v146, v147, *(void *)(*(void *)(v151 - 8) + 64));
          }
          else
          {
            uint64_t v354 = v148;
            uint64_t v159 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v147, 1, v159))
            {
              uint64_t v160 = sub_253462A5C(&qword_269CE0458);
              memcpy(v146, v147, *(void *)(*(void *)(v160 - 8) + 64));
            }
            else
            {
              uint64_t v194 = *((void *)v147 + 1);
              *(void *)uint64_t v146 = *(void *)v147;
              *((void *)v146 + 1) = v194;
              uint64_t v344 = v159;
              uint64_t v195 = *((void *)v147 + 2);
              unint64_t v196 = *((void *)v147 + 3);
              swift_bridgeObjectRetain();
              sub_25348A9C8(v195, v196);
              *((void *)v146 + 2) = v195;
              *((void *)v146 + 3) = v196;
              *((void *)v146 + 4) = *((void *)v147 + 4);
              uint64_t v197 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              unint64_t v198 = &v146[v197];
              uint64_t v199 = &v147[v197];
              uint64_t v200 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 16))(v198, v199, v200);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v146, 0, 1, v344);
            }
            uint64_t v201 = *(int *)(v150 + 20);
            uint64_t v202 = &v146[v201];
            uint64_t v203 = &v147[v201];
            uint64_t v204 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v204 - 8) + 16))(v202, v203, v204);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v146, 0, 1, v150);
            uint64_t v148 = v354;
          }
          uint64_t v205 = *(int *)(v148 + 20);
          uint64_t v206 = &v146[v205];
          uint64_t v207 = v148;
          uint64_t v208 = &v147[v205];
          uint64_t v209 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v209 - 8) + 16))(v206, v208, v209);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v146, 0, 1, v207);
          uint64_t v57 = __dsta;
        }
        uint64_t v210 = v57[10];
        uint64_t v211 = &v51[v210];
        uint64_t v212 = &v52[v210];
        v213 = v57;
        uint64_t v214 = *((void *)v212 + 1);
        *(void *)uint64_t v211 = *(void *)v212;
        *((void *)v211 + 1) = v214;
        uint64_t v215 = v213[11];
        uint64_t v216 = &v51[v215];
        uint64_t v217 = &v52[v215];
        uint64_t v218 = sub_253B07160();
        v219 = *(void (**)(char *, char *, uint64_t))(*(void *)(v218 - 8) + 16);
        swift_bridgeObjectRetain();
        v219(v216, v217, v218);
        swift_storeEnumTagMultiPayload();
        a1 = v379;
LABEL_82:
        a2 = v391;
        a3 = v372;
        goto LABEL_96;
    }
  }
  uint64_t v56 = sub_253462A5C(&qword_269CE04B0);
  memcpy(v51, v52, *(void *)(*(void *)(v56 - 8) + 64));
LABEL_97:
  uint64_t v244 = *(int *)(v53 + 20);
  uint64_t v245 = &v51[v244];
  uint64_t v246 = &v52[v244];
  uint64_t v247 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v247 - 8) + 16))(v245, v246, v247);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v51, 0, 1, v53);
LABEL_98:
  uint64_t v248 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v249 = &a1[v248];
  uint64_t v250 = &a2[v248];
  v251 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v250, 1, (uint64_t)v251))
  {
    uint64_t v252 = sub_253462A5C(&qword_269CE0378);
    memcpy(v249, v250, *(void *)(*(void *)(v252 - 8) + 64));
  }
  else
  {
    uint64_t v387 = a1;
    v395 = a2;
    *(void *)uint64_t v249 = *(void *)v250;
    uint64_t v253 = v251[5];
    uint64_t v254 = &v249[v253];
    uint64_t v255 = &v250[v253];
    uint64_t v256 = type metadata accessor for TranscriptProtoResponseDialog(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v255, 1, v256))
    {
      uint64_t v257 = sub_253462A5C(&qword_269CE04B8);
      memcpy(v254, v255, *(void *)(*(void *)(v257 - 8) + 64));
    }
    else
    {
      uint64_t v258 = *((void *)v255 + 1);
      *(void *)uint64_t v254 = *(void *)v255;
      *((void *)v254 + 1) = v258;
      uint64_t v259 = *((void *)v255 + 3);
      *((void *)v254 + 2) = *((void *)v255 + 2);
      *((void *)v254 + 3) = v259;
      uint64_t v260 = *((void *)v255 + 5);
      *((void *)v254 + 4) = *((void *)v255 + 4);
      *((void *)v254 + 5) = v260;
      uint64_t v376 = a3;
      uint64_t v261 = *((void *)v255 + 7);
      *((void *)v254 + 6) = *((void *)v255 + 6);
      *((void *)v254 + 7) = v261;
      uint64_t v262 = *(int *)(v256 + 32);
      uint64_t v356 = &v255[v262];
      __dstl = &v254[v262];
      uint64_t v263 = sub_253B07160();
      uint64_t v346 = *(void (**)(char *, char *, uint64_t))(*(void *)(v263 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a3 = v376;
      swift_bridgeObjectRetain();
      v346(__dstl, v356, v263);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v254, 0, 1, v256);
    }
    uint64_t v264 = v251[6];
    uint64_t v265 = &v249[v264];
    uint64_t v266 = &v250[v264];
    uint64_t v267 = type metadata accessor for TranscriptProtoResponseVisual(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v266, 1, v267))
    {
      uint64_t v268 = sub_253462A5C(&qword_269CE04C8);
      memcpy(v265, v266, *(void *)(*(void *)(v268 - 8) + 64));
    }
    else
    {
      uint64_t v377 = a3;
      uint64_t v269 = *((void *)v266 + 1);
      *(void *)uint64_t v265 = *(void *)v266;
      *((void *)v265 + 1) = v269;
      uint64_t v270 = *(int *)(v267 + 24);
      __dstb = &v265[v270];
      uint64_t v271 = &v266[v270];
      uint64_t v272 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v271, 1, v272))
      {
        uint64_t v273 = sub_253462A5C(&qword_269CE04C0);
        memcpy(__dstb, v271, *(void *)(*(void *)(v273 - 8) + 64));
      }
      else
      {
        char *__dstb = *v271;
        uint64_t v274 = *(int *)(v272 + 20);
        uint64_t v275 = &__dstb[v274];
        uint64_t v276 = &v271[v274];
        uint64_t v277 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v277 - 8) + 16))(v275, v276, v277);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstb, 0, 1, v272);
      }
      uint64_t v278 = *(int *)(v267 + 28);
      uint64_t v279 = &v265[v278];
      uint64_t v280 = &v266[v278];
      uint64_t v281 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v281 - 8) + 16))(v279, v280, v281);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v265, 0, 1, v267);
      a3 = v377;
    }
    uint64_t v282 = v251[7];
    uint64_t v283 = &v249[v282];
    uint64_t v284 = &v250[v282];
    uint64_t v285 = *((void *)v284 + 1);
    *(void *)uint64_t v283 = *(void *)v284;
    *((void *)v283 + 1) = v285;
    uint64_t v286 = v251[8];
    uint64_t v287 = &v249[v286];
    uint64_t v288 = &v250[v286];
    uint64_t v289 = *((void *)v288 + 1);
    *(void *)uint64_t v287 = *(void *)v288;
    *((void *)v287 + 1) = v289;
    v249[v251[9]] = v250[v251[9]];
    v249[v251[10]] = v250[v251[10]];
    uint64_t v290 = v251[11];
    uint64_t v291 = &v249[v290];
    uint64_t v292 = &v250[v290];
    uint64_t v293 = type metadata accessor for TranscriptProtoUIType(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v292, 1, v293))
    {
      uint64_t v294 = sub_253462A5C(&qword_269CE04D0);
      memcpy(v291, v292, *(void *)(*(void *)(v294 - 8) + 64));
    }
    else
    {
      uint64_t v295 = a3;
      uint64_t v296 = type metadata accessor for TranscriptProtoUitype(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v292, 1, v296))
      {
        uint64_t v297 = sub_253462A5C(&qword_269CDCC08);
        memcpy(v291, v292, *(void *)(*(void *)(v297 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v304 = *((void *)v292 + 1);
            *(void *)uint64_t v291 = *(void *)v292;
            *((void *)v291 + 1) = v304;
            uint64_t v305 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
            goto LABEL_117;
          case 2u:
            uint64_t v306 = *(void *)v292;
            unint64_t v307 = *((void *)v292 + 1);
            sub_25348A9C8(*(void *)v292, v307);
            *(void *)uint64_t v291 = v306;
            *((void *)v291 + 1) = v307;
            uint64_t v308 = *((void *)v292 + 3);
            *((void *)v291 + 2) = *((void *)v292 + 2);
            *((void *)v291 + 3) = v308;
            uint64_t v305 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
LABEL_117:
            uint64_t v348 = &v292[v305];
            v357 = &v291[v305];
            uint64_t v309 = sub_253B07160();
            uint64_t v341 = *(void (**)(char *, char *, uint64_t))(*(void *)(v309 - 8) + 16);
            swift_bridgeObjectRetain();
            v341(v357, v348, v309);
            break;
          case 3u:
            uint64_t v310 = *(void *)v292;
            unint64_t v311 = *((void *)v292 + 1);
            sub_25348A9C8(*(void *)v292, v311);
            *(void *)uint64_t v291 = v310;
            *((void *)v291 + 1) = v311;
            uint64_t v312 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
            unint64_t v313 = &v291[v312];
            uint64_t v314 = &v292[v312];
            uint64_t v315 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v315 - 8) + 16))(v313, v314, v315);
            break;
          default:
            uint64_t v298 = *(void *)v292;
            unint64_t v299 = *((void *)v292 + 1);
            sub_25348A9C8(*(void *)v292, v299);
            *(void *)uint64_t v291 = v298;
            *((void *)v291 + 1) = v299;
            uint64_t v300 = *((void *)v292 + 3);
            *((void *)v291 + 2) = *((void *)v292 + 2);
            *((void *)v291 + 3) = v300;
            uint64_t v301 = *((void *)v292 + 5);
            *((void *)v291 + 4) = *((void *)v292 + 4);
            *((void *)v291 + 5) = v301;
            uint64_t v302 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
            v340 = &v292[v302];
            v347 = &v291[v302];
            uint64_t v303 = sub_253B07160();
            uint64_t v335 = *(void (**)(char *, char *, uint64_t))(*(void *)(v303 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v335(v347, v340, v303);
            break;
        }
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v291, 0, 1, v296);
      }
      a3 = v295;
      uint64_t v316 = *(int *)(v293 + 20);
      uint64_t v317 = &v291[v316];
      uint64_t v318 = &v292[v316];
      uint64_t v319 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v319 - 8) + 16))(v317, v318, v319);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v291, 0, 1, v293);
    }
    uint64_t v320 = v251[12];
    uint64_t v321 = &v249[v320];
    uint64_t v322 = &v250[v320];
    uint64_t v323 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v323 - 8) + 16))(v321, v322, v323);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v249, 0, 1, (uint64_t)v251);
    a1 = v387;
    a2 = v395;
  }
  uint64_t v324 = a3[9];
  uint64_t v325 = &a1[v324];
  uint64_t v326 = &a2[v324];
  uint64_t v327 = sub_253B08F00();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v326, 1, v327))
  {
    uint64_t v328 = sub_253462A5C(&qword_269CE0368);
    memcpy(v325, v326, *(void *)(*(void *)(v328 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v327 - 8) + 16))(v325, v326, v327);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v325, 0, 1, v327);
  }
  uint64_t v329 = a3[10];
  uint64_t v330 = &a1[v329];
  uint64_t v331 = &a2[v329];
  uint64_t v332 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v332 - 8) + 16))(v330, v331, v332);
  return a1;
}

char *assignWithCopy for ResponseGenerationProtoStatementResultDigest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_253B08F30();
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_253462A5C(&qword_269CDFA70);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = (uint64_t)&a1[v11];
  uint64_t v13 = (uint64_t)&a2[v11];
  uint64_t v14 = (int *)type metadata accessor for TranscriptProtoAction(0);
  int v15 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v12, 1, (uint64_t)v14);
  int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v13, 1, (uint64_t)v14);
  if (!v15)
  {
    if (v16)
    {
      sub_2535F2C0C(v12, (void (*)(void))type metadata accessor for TranscriptProtoAction);
      goto LABEL_13;
    }
    v1001 = a3;
    *(void *)uint64_t v12 = *(void *)v13;
    *(void *)(v12 + 8) = *(void *)(v13 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
    *(void *)(v12 + 24) = *(void *)(v13 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v23 = v14[7];
    uint64_t v24 = (void *)(v12 + v23);
    uint64_t v25 = (void *)(v13 + v23);
    uint64_t v26 = type metadata accessor for TranscriptProtoStatementID(0);
    int v27 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v26);
    int v28 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v26);
    if (v27)
    {
      if (!v28)
      {
        *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
        v24[1] = v25[1];
        v24[2] = v25[2];
        uint64_t v29 = *(int *)(v26 + 24);
        v937 = (char *)v25 + v29;
        __srcj = (char *)v24 + v29;
        v922 = a2;
        uint64_t v30 = sub_253B07160();
        uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v32 = v30;
        a2 = v922;
        v31(__srcj, v937, v32);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v26);
        goto LABEL_26;
      }
    }
    else
    {
      if (!v28)
      {
        *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
        v24[1] = v25[1];
        v24[2] = v25[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v107 = *(int *)(v26 + 24);
        uint64_t v108 = (char *)v24 + v107;
        uint64_t v109 = a1;
        uint64_t v110 = (char *)v25 + v107;
        uint64_t v111 = sub_253B07160();
        uint64_t v112 = v110;
        a1 = v109;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 24))(v108, v112, v111);
LABEL_26:
        uint64_t v60 = v14[8];
        uint64_t v61 = (void *)(v12 + v60);
        uint64_t v62 = (void *)(v13 + v60);
        *uint64_t v61 = *v62;
        v61[1] = v62[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v63 = v14[9];
        uint64_t v64 = (void *)(v12 + v63);
        uint64_t v65 = (void *)(v13 + v63);
        void *v64 = *v65;
        v64[1] = v65[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v66 = v14[10];
        uint64_t v67 = (void *)(v12 + v66);
        uint64_t v68 = (void *)(v13 + v66);
        *uint64_t v67 = *v68;
        v67[1] = v68[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v69 = v14[11];
        uint64_t v70 = (void *)(v12 + v69);
        uint64_t v71 = (void *)(v13 + v69);
        uint64_t v72 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
        int v73 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v70, 1, v72);
        int v74 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v71, 1, v72);
        if (v73)
        {
          if (!v74)
          {
            *uint64_t v70 = *v71;
            v70[1] = v71[1];
            v70[2] = v71[2];
            v70[3] = v71[3];
            uint64_t v75 = *(int *)(v72 + 24);
            v940 = (char *)v70 + v75;
            v899 = (char *)v71 + v75;
            uint64_t v76 = sub_253B07160();
            v879 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v879(v940, v899, v76);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v70, 0, 1, v72);
LABEL_32:
            uint64_t v78 = v14[12];
            uint64_t v79 = v12 + v78;
            uint64_t v80 = v13 + v78;
            uint64_t v81 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 24))(v79, v80, v81);
            a3 = v1001;
            goto LABEL_33;
          }
        }
        else
        {
          if (!v74)
          {
            *uint64_t v70 = *v71;
            v70[1] = v71[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v70[2] = v71[2];
            v70[3] = v71[3];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v113 = *(int *)(v72 + 24);
            uint64_t v114 = (char *)v70 + v113;
            uint64_t v115 = a1;
            uint64_t v116 = (char *)v71 + v113;
            uint64_t v117 = sub_253B07160();
            uint64_t v118 = v116;
            a1 = v115;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 24))(v114, v118, v117);
            goto LABEL_32;
          }
          sub_2535F2C0C((uint64_t)v70, (void (*)(void))type metadata accessor for TranscriptProtoGlobalToolIdentifier);
        }
        uint64_t v77 = sub_253462A5C(&qword_269CE0448);
        memcpy(v70, v71, *(void *)(*(void *)(v77 - 8) + 64));
        goto LABEL_32;
      }
      sub_2535F2C0C((uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
    }
    uint64_t v59 = sub_253462A5C(&qword_26B249528);
    memcpy(v24, v25, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_26;
  }
  if (v16)
  {
LABEL_13:
    uint64_t v22 = sub_253462A5C(&qword_269CE0398);
    memcpy((void *)v12, (const void *)v13, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_33;
  }
  __src = a1;
  v1000 = a3;
  *(void *)uint64_t v12 = *(void *)v13;
  *(void *)(v12 + 8) = *(void *)(v13 + 8);
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  *(void *)(v12 + 24) = *(void *)(v13 + 24);
  uint64_t v17 = v14[7];
  uint64_t v18 = (void *)(v12 + v17);
  uint64_t v19 = (void *)(v13 + v17);
  uint64_t v20 = type metadata accessor for TranscriptProtoStatementID(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
  {
    uint64_t v21 = sub_253462A5C(&qword_26B249528);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[1] = v19[1];
    v18[2] = v19[2];
    uint64_t v33 = *(int *)(v20 + 24);
    v938 = (char *)v18 + v33;
    v897 = (char *)v19 + v33;
    uint64_t v34 = sub_253B07160();
    uint64_t v35 = a2;
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
    swift_bridgeObjectRetain();
    v36(v938, v897, v34);
    a2 = v35;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
  }
  uint64_t v37 = v14[8];
  uint64_t v38 = (void *)(v12 + v37);
  uint64_t v39 = (void *)(v13 + v37);
  *uint64_t v38 = *v39;
  v38[1] = v39[1];
  uint64_t v40 = v14[9];
  uint64_t v41 = (void *)(v12 + v40);
  uint64_t v42 = (void *)(v13 + v40);
  void *v41 = *v42;
  v41[1] = v42[1];
  uint64_t v43 = v14[10];
  uint64_t v44 = (void *)(v12 + v43);
  uint64_t v45 = (void *)(v13 + v43);
  *uint64_t v44 = *v45;
  v44[1] = v45[1];
  uint64_t v46 = v14[11];
  uint64_t v47 = (void *)(v12 + v46);
  uint64_t v48 = (void *)(v13 + v46);
  uint64_t v49 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v48, 1, v49))
  {
    uint64_t v50 = sub_253462A5C(&qword_269CE0448);
    memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    void *v47 = *v48;
    v47[1] = v48[1];
    v47[2] = v48[2];
    v47[3] = v48[3];
    uint64_t v51 = *(int *)(v49 + 24);
    v939 = (char *)v47 + v51;
    v898 = (char *)v48 + v51;
    v923 = a2;
    uint64_t v52 = sub_253B07160();
    uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v54 = v52;
    a2 = v923;
    v53(v939, v898, v54);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v47, 0, 1, v49);
  }
  uint64_t v55 = v14[12];
  uint64_t v56 = v12 + v55;
  uint64_t v57 = v13 + v55;
  uint64_t v58 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v12, 0, 1, (uint64_t)v14);
  a1 = __src;
  a3 = v1000;
LABEL_33:
  uint64_t v82 = a3[6];
  uint64_t v83 = &a1[v82];
  uint64_t v84 = &a2[v82];
  uint64_t v85 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  int v86 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v83, 1, v85);
  int v87 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v85);
  if (v86)
  {
    if (!v87)
    {
      uint64_t v88 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v88))
      {
        uint64_t v89 = sub_253462A5C(&qword_269CE04B0);
        memcpy(v83, v84, *(void *)(*(void *)(v89 - 8) + 64));
LABEL_266:
        uint64_t v575 = *(int *)(v85 + 20);
        v576 = &v83[v575];
        v577 = &v84[v575];
        uint64_t v578 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v578 - 8) + 16))(v576, v577, v578);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v85);
        goto LABEL_280;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          v925 = a2;
          uint64_t v943 = v88;
          *(void *)uint64_t v83 = *(void *)v84;
          uint64_t v125 = type metadata accessor for TranscriptProtoActionConfirmation(0);
          uint64_t v126 = *(int *)(v125 + 20);
          uint64_t v127 = &v83[v126];
          uint64_t v128 = &v84[v126];
          uint64_t v129 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v128, 1, v129))
          {
            uint64_t v130 = sub_253462A5C(&qword_269CE0480);
            memcpy(v127, v128, *(void *)(*(void *)(v130 - 8) + 64));
          }
          else
          {
            uint64_t v1010 = v125;
            uint64_t v224 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v128, 1, v224))
            {
              uint64_t v225 = sub_253462A5C(&qword_269CE0478);
              memcpy(v127, v128, *(void *)(*(void *)(v225 - 8) + 64));
            }
            else
            {
              uint64_t v905 = v224;
              __srcd = a1;
              *(void *)uint64_t v127 = *(void *)v128;
              *((void *)v127 + 1) = *((void *)v128 + 1);
              v127[16] = v128[16];
              uint64_t v317 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
              uint64_t v318 = *(int *)(v317 + 24);
              __dst = &v127[v318];
              uint64_t v881 = v317;
              uint64_t v319 = &v128[v318];
              uint64_t v320 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
              swift_bridgeObjectRetain();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v319, 1, v320))
              {
                uint64_t v321 = sub_253462A5C(&qword_269CE0470);
                memcpy(__dst, v319, *(void *)(*(void *)(v321 - 8) + 64));
              }
              else
              {
                char *__dst = *v319;
                uint64_t v368 = *(int *)(v320 + 20);
                v854 = &__dst[v368];
                uint64_t v369 = &v319[v368];
                uint64_t v370 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v370 - 8) + 16))(v854, v369, v370);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v320);
              }
              uint64_t v371 = *(int *)(v881 + 28);
              uint64_t v372 = &v127[v371];
              uint64_t v373 = &v128[v371];
              uint64_t v374 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v374 - 8) + 16))(v372, v373, v374);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v127, 0, 1, v905);
              a1 = __srcd;
            }
            uint64_t v375 = *(int *)(v129 + 20);
            uint64_t v376 = &v127[v375];
            uint64_t v377 = &v128[v375];
            uint64_t v378 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v378 - 8) + 16))(v376, v377, v378);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v127, 0, 1, v129);
            uint64_t v125 = v1010;
          }
          uint64_t v379 = *(int *)(v125 + 24);
          uint64_t v380 = &v83[v379];
          v381 = &v84[v379];
          uint64_t v382 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v382 - 8) + 16))(v380, v381, v382);
          uint64_t v88 = v943;
          goto LABEL_182;
        case 2u:
          *(void *)uint64_t v83 = *(void *)v84;
          *((void *)v83 + 1) = *((void *)v84 + 1);
          uint64_t v131 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
          __srck = a1;
          v1002 = &v83[v131];
          uint64_t v132 = &v84[v131];
          uint64_t v133 = sub_253B07160();
          uint64_t v944 = v88;
          char v134 = *(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v135 = v132;
          a1 = __srck;
          v134(v1002, v135, v133);
          uint64_t v88 = v944;
          goto LABEL_264;
        case 3u:
          v925 = a2;
          uint64_t v945 = v88;
          uint64_t v136 = a1;
          *(void *)uint64_t v83 = *(void *)v84;
          *((void *)v83 + 1) = *((void *)v84 + 1);
          uint64_t v137 = *((void *)v84 + 2);
          v83[24] = v84[24];
          *((void *)v83 + 2) = v137;
          uint64_t v138 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
          uint64_t v139 = *(int *)(v138 + 24);
          uint64_t v140 = &v83[v139];
          uint64_t v141 = &v84[v139];
          uint64_t v142 = sub_253B08E50();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v141, 1, v142)) {
            goto LABEL_61;
          }
          goto LABEL_94;
        case 4u:
          *(void *)uint64_t v83 = *(void *)v84;
          *((void *)v83 + 1) = *((void *)v84 + 1);
          *((void *)v83 + 2) = *((void *)v84 + 2);
          uint64_t v144 = *((void *)v84 + 3);
          v83[32] = v84[32];
          *((void *)v83 + 3) = v144;
          uint64_t v145 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
          __srcl = &v83[v145];
          v900 = &v84[v145];
          uint64_t v946 = v88;
          uint64_t v146 = sub_253B07160();
          v1003 = a3;
          uint64_t v147 = a2;
          uint64_t v148 = *(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v149 = v146;
          uint64_t v88 = v946;
          v148(__srcl, v900, v149);
          a2 = v147;
          a3 = v1003;
          goto LABEL_264;
        case 5u:
          v925 = a2;
          uint64_t v945 = v88;
          uint64_t v136 = a1;
          *(void *)uint64_t v83 = *(void *)v84;
          *((void *)v83 + 1) = *((void *)v84 + 1);
          v83[16] = v84[16];
          uint64_t v138 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
          uint64_t v150 = *(int *)(v138 + 24);
          uint64_t v140 = &v83[v150];
          uint64_t v141 = &v84[v150];
          uint64_t v142 = sub_253B08E50();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v141, 1, v142))
          {
LABEL_61:
            uint64_t v143 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v140, v141, *(void *)(*(void *)(v143 - 8) + 64));
          }
          else
          {
LABEL_94:
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 16))(v140, v141, v142);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v140, 0, 1, v142);
          }
          a1 = v136;
          uint64_t v226 = *(int *)(v138 + 28);
          uint64_t v227 = &v83[v226];
          uint64_t v228 = &v84[v226];
          uint64_t v229 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v229 - 8) + 16))(v227, v228, v229);
          uint64_t v88 = v945;
          goto LABEL_182;
        case 6u:
          v925 = a2;
          uint64_t v947 = v88;
          uint64_t v151 = a1;
          *(void *)uint64_t v83 = *(void *)v84;
          *((void *)v83 + 1) = *((void *)v84 + 1);
          uint64_t v152 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
          uint64_t v153 = *(int *)(v152 + 20);
          uint64_t v154 = &v83[v153];
          uint64_t v155 = &v84[v153];
          uint64_t v156 = sub_253B08E50();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v155, 1, v156))
          {
            uint64_t v157 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v154, v155, *(void *)(*(void *)(v157 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 16))(v154, v155, v156);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v154, 0, 1, v156);
          }
          a1 = v151;
          uint64_t v230 = *(int *)(v152 + 24);
          uint64_t v231 = &v83[v230];
          uint64_t v232 = &v84[v230];
          uint64_t v233 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v233 - 8) + 16))(v231, v232, v233);
          uint64_t v88 = v947;
LABEL_182:
          swift_storeEnumTagMultiPayload();
          goto LABEL_183;
        case 7u:
          uint64_t v158 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v158))
          {
            uint64_t v159 = sub_253462A5C(&qword_269CE0498);
            memcpy(v83, v84, *(void *)(*(void *)(v159 - 8) + 64));
            goto LABEL_263;
          }
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          switch(EnumCaseMultiPayload)
          {
            case 2:
              uint64_t v957 = v88;
              uint64_t v334 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v334))
              {
                uint64_t v335 = sub_253462A5C(&qword_269CE0490);
                memcpy(v83, v84, *(void *)(*(void *)(v335 - 8) + 64));
              }
              else
              {
                int v434 = swift_getEnumCaseMultiPayload();
                v931 = a2;
                if (v434 == 1)
                {
                  v503 = a1;
                  uint64_t v504 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
                  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v504))
                  {
                    uint64_t v505 = sub_253462A5C(&qword_269CE0488);
                    memcpy(v83, v84, *(void *)(*(void *)(v505 - 8) + 64));
                  }
                  else
                  {
                    *uint64_t v83 = *v84;
                    uint64_t v559 = *(int *)(v504 + 20);
                    v560 = &v83[v559];
                    v561 = &v84[v559];
                    uint64_t v562 = sub_253B07160();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v562 - 8) + 16))(v560, v561, v562);
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v504);
                  }
                  uint64_t v563 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0)
                                + 20);
                  v564 = &v83[v563];
                  v565 = &v84[v563];
                  uint64_t v566 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v566 - 8) + 16))(v564, v565, v566);
                  swift_storeEnumTagMultiPayload();
                  a1 = v503;
                }
                else if (v434)
                {
                  memcpy(v83, v84, *(void *)(*(void *)(v334 - 8) + 64));
                }
                else
                {
                  *(void *)uint64_t v83 = *(void *)v84;
                  *((void *)v83 + 1) = *((void *)v84 + 1);
                  uint64_t v435 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0)
                                + 20);
                  __srcx = &v84[v435];
                  v1020 = &v83[v435];
                  uint64_t v436 = sub_253B07160();
                  v910 = *(void (**)(char *, char *, uint64_t))(*(void *)(v436 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v910(v1020, __srcx, v436);
                  swift_storeEnumTagMultiPayload();
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v334);
                a2 = v931;
              }
              uint64_t v567 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
              v568 = &v83[v567];
              v569 = &v84[v567];
              uint64_t v570 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v570 - 8) + 16))(v568, v569, v570);
              swift_storeEnumTagMultiPayload();
              uint64_t v88 = v957;
              break;
            case 1:
              *uint64_t v83 = *v84;
              uint64_t v336 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
              v337 = &v83[v336];
              uint64_t v338 = &v84[v336];
              uint64_t v339 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v339 - 8) + 16))(v337, v338, v339);
              goto LABEL_156;
            case 0:
              *uint64_t v83 = *v84;
              uint64_t v235 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
              uint64_t v236 = &v83[v235];
              uint64_t v237 = &v84[v235];
              uint64_t v238 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v238 - 8) + 16))(v236, v237, v238);
LABEL_156:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v83, v84, *(void *)(*(void *)(v158 - 8) + 64));
              break;
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v158);
LABEL_263:
          uint64_t v571 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
          v572 = &v83[v571];
          v573 = &v84[v571];
          uint64_t v574 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v574 - 8) + 16))(v572, v573, v574);
LABEL_264:
          swift_storeEnumTagMultiPayload();
LABEL_265:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v88);
          goto LABEL_266;
        case 8u:
          *(void *)uint64_t v83 = *(void *)v84;
          *((void *)v83 + 1) = *((void *)v84 + 1);
          *((void *)v83 + 2) = *((void *)v84 + 2);
          uint64_t v160 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
          __srcm = &v83[v160];
          v901 = &v84[v160];
          uint64_t v948 = v88;
          uint64_t v161 = sub_253B07160();
          v1004 = a3;
          uint64_t v162 = a2;
          uint64_t v163 = *(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v164 = v161;
          uint64_t v88 = v948;
          v163(__srcm, v901, v164);
          a2 = v162;
          a3 = v1004;
          goto LABEL_264;
        case 9u:
          uint64_t v165 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v165))
          {
            uint64_t v166 = sub_253462A5C(&qword_269CE04A8);
            memcpy(v83, v84, *(void *)(*(void *)(v166 - 8) + 64));
          }
          else
          {
            uint64_t v239 = v88;
            uint64_t v240 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v240))
            {
              uint64_t v241 = sub_253462A5C(&qword_269CE04A0);
              memcpy(v83, v84, *(void *)(*(void *)(v241 - 8) + 64));
            }
            else
            {
              v929 = a2;
              uint64_t v322 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 16, v322))
              {
                memcpy(v83, v84, *(void *)(*(void *)(v240 - 8) + 64));
              }
              else
              {
                *(void *)uint64_t v83 = *(void *)v84;
                *((void *)v83 + 1) = *((void *)v84 + 1);
                *((void *)v83 + 2) = *((void *)v84 + 2);
                *((void *)v83 + 3) = *((void *)v84 + 3);
                *((void *)v83 + 4) = *((void *)v84 + 4);
                uint64_t v383 = *(int *)(v322 + 28);
                v1018 = &v83[v383];
                v958 = &v84[v383];
                __srcw = a1;
                uint64_t v384 = sub_253B07160();
                v884 = *(void (**)(char *, char *, uint64_t))(*(void *)(v384 - 8) + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v385 = v384;
                a1 = __srcw;
                v884(v1018, v958, v385);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 16, v322);
              }
              a2 = v929;
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v240);
            }
            uint64_t v88 = v239;
            uint64_t v386 = *(int *)(v165 + 20);
            uint64_t v387 = &v83[v386];
            uint64_t v388 = &v84[v386];
            uint64_t v389 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v389 - 8) + 16))(v387, v388, v389);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v165);
          }
          uint64_t v390 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
          v391 = &v83[v390];
          v392 = &v84[v390];
          uint64_t v393 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v393 - 8) + 16))(v391, v392, v393);
          goto LABEL_264;
        case 0xAu:
          *(void *)uint64_t v83 = *(void *)v84;
          uint64_t v167 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
          __srcn = a1;
          v1005 = &v83[v167];
          uint64_t v168 = &v84[v167];
          uint64_t v169 = sub_253B07160();
          uint64_t v949 = v88;
          uint64_t v170 = *(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v171 = v168;
          a1 = __srcn;
          v170(v1005, v171, v169);
          uint64_t v88 = v949;
          goto LABEL_264;
        default:
          uint64_t v942 = v88;
          __srcb = a1;
          *uint64_t v83 = *v84;
          v83[1] = v84[1];
          v83[2] = v84[2];
          uint64_t v100 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
          uint64_t v101 = v100[7];
          uint64_t v102 = &v83[v101];
          uint64_t v103 = &v84[v101];
          uint64_t v104 = sub_253B08E50();
          v925 = a2;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v103, 1, v104))
          {
            uint64_t v105 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v102, v103, *(void *)(*(void *)(v105 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16))(v102, v103, v104);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v102, 0, 1, v104);
          }
          uint64_t v219 = v100[8];
          int v220 = &v83[v219];
          uint64_t v221 = &v84[v219];
          uint64_t v222 = type metadata accessor for TranscriptProtoUndoContext(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v221, 1, v222))
          {
            uint64_t v223 = sub_253462A5C(&qword_269CE0450);
            memcpy(v220, v221, *(void *)(*(void *)(v223 - 8) + 64));
          }
          else
          {
            *(void *)int v220 = *(void *)v221;
            *((void *)v220 + 1) = *((void *)v221 + 1);
            *((void *)v220 + 2) = *((void *)v221 + 2);
            *((void *)v220 + 3) = *((void *)v221 + 3);
            *((void *)v220 + 4) = *((void *)v221 + 4);
            *((void *)v220 + 5) = *((void *)v221 + 5);
            uint64_t v242 = *(int *)(v222 + 28);
            v880 = &v221[v242];
            v904 = &v220[v242];
            uint64_t v243 = sub_253B07160();
            __dstc = *(void (**)(char *, char *, uint64_t))(*(void *)(v243 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __dstc(v904, v880, v243);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v220, 0, 1, v222);
          }
          uint64_t v244 = v100[9];
          uint64_t v245 = &v83[v244];
          uint64_t v246 = &v84[v244];
          uint64_t v247 = type metadata accessor for TranscriptProtoFollowUpAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v246, 1, v247))
          {
            uint64_t v248 = sub_253462A5C(&qword_269CE0468);
            memcpy(v245, v246, *(void *)(*(void *)(v248 - 8) + 64));
          }
          else
          {
            uint64_t v249 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v246, 1, v249))
            {
              uint64_t v250 = sub_253462A5C(&qword_269CE0460);
              memcpy(v245, v246, *(void *)(*(void *)(v250 - 8) + 64));
            }
            else
            {
              uint64_t v323 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
              uint64_t v1016 = v249;
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v246, 1, v323))
              {
                uint64_t v324 = sub_253462A5C(&qword_269CE0458);
                memcpy(v245, v246, *(void *)(*(void *)(v324 - 8) + 64));
              }
              else
              {
                *(void *)uint64_t v245 = *(void *)v246;
                *((void *)v245 + 1) = *((void *)v246 + 1);
                uint64_t v908 = v323;
                uint64_t v394 = *((void *)v246 + 2);
                unint64_t v395 = *((void *)v246 + 3);
                swift_bridgeObjectRetain();
                sub_25348A9C8(v394, v395);
                *((void *)v245 + 2) = v394;
                *((void *)v245 + 3) = v395;
                *((void *)v245 + 4) = *((void *)v246 + 4);
                uint64_t v396 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                              + 28);
                v397 = &v245[v396];
                v398 = &v246[v396];
                uint64_t v399 = sub_253B07160();
                v400 = v397;
                uint64_t v249 = v1016;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v399 - 8) + 16))(v400, v398, v399);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v245, 0, 1, v908);
              }
              uint64_t v401 = *(int *)(v249 + 20);
              v402 = &v245[v401];
              v403 = &v246[v401];
              uint64_t v404 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v404 - 8) + 16))(v402, v403, v404);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v245, 0, 1, v1016);
            }
            uint64_t v405 = *(int *)(v247 + 20);
            v406 = &v245[v405];
            v407 = &v246[v405];
            uint64_t v408 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v408 - 8) + 16))(v406, v407, v408);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v245, 0, 1, v247);
          }
          uint64_t v409 = v100[10];
          v410 = &v83[v409];
          v411 = &v84[v409];
          *(void *)v410 = *(void *)v411;
          *((void *)v410 + 1) = *((void *)v411 + 1);
          uint64_t v412 = v100[11];
          v413 = &v83[v412];
          v414 = &v84[v412];
          uint64_t v415 = sub_253B07160();
          v416 = *(void (**)(char *, char *, uint64_t))(*(void *)(v415 - 8) + 16);
          swift_bridgeObjectRetain();
          v416(v413, v414, v415);
          uint64_t v88 = v942;
          swift_storeEnumTagMultiPayload();
          a1 = __srcb;
LABEL_183:
          a2 = v925;
          goto LABEL_265;
      }
    }
LABEL_39:
    uint64_t v90 = sub_253462A5C(&qword_269CE0388);
    memcpy(v83, v84, *(void *)(*(void *)(v90 - 8) + 64));
    goto LABEL_280;
  }
  if (v87)
  {
    sub_2535F2C0C((uint64_t)v83, (void (*)(void))type metadata accessor for TranscriptProtoStatementOutcome);
    goto LABEL_39;
  }
  uint64_t v91 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  int v92 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v83, 1, v91);
  int v93 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v91);
  if (!v92)
  {
    if (v93)
    {
      sub_2535F2C0C((uint64_t)v83, (void (*)(void))type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      goto LABEL_50;
    }
    if (a1 == a2) {
      goto LABEL_279;
    }
    sub_2535F2C0C((uint64_t)v83, (void (*)(void))type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v926 = a2;
        *(void *)uint64_t v83 = *(void *)v84;
        uint64_t v256 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v257 = *(int *)(v256 + 20);
        uint64_t v258 = &v83[v257];
        uint64_t v259 = &v84[v257];
        uint64_t v260 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v259, 1, v260))
        {
          uint64_t v261 = sub_253462A5C(&qword_269CE0480);
          memcpy(v258, v259, *(void *)(*(void *)(v261 - 8) + 64));
        }
        else
        {
          uint64_t v1017 = v256;
          uint64_t v345 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v259, 1, v345))
          {
            uint64_t v346 = sub_253462A5C(&qword_269CE0478);
            memcpy(v258, v259, *(void *)(*(void *)(v346 - 8) + 64));
          }
          else
          {
            uint64_t v911 = v345;
            __srcg = a1;
            *(void *)uint64_t v258 = *(void *)v259;
            *((void *)v258 + 1) = *((void *)v259 + 1);
            v258[16] = v259[16];
            uint64_t v449 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v450 = *(int *)(v449 + 24);
            __dstb = &v258[v450];
            uint64_t v887 = v449;
            v451 = &v259[v450];
            uint64_t v452 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v451, 1, v452))
            {
              uint64_t v453 = sub_253462A5C(&qword_269CE0470);
              memcpy(__dstb, v451, *(void *)(*(void *)(v453 - 8) + 64));
            }
            else
            {
              char *__dstb = *v451;
              uint64_t v516 = *(int *)(v452 + 20);
              v856 = &__dstb[v516];
              v517 = &v451[v516];
              uint64_t v518 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v518 - 8) + 16))(v856, v517, v518);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstb, 0, 1, v452);
            }
            uint64_t v519 = *(int *)(v887 + 28);
            v520 = &v258[v519];
            v521 = &v259[v519];
            uint64_t v522 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v522 - 8) + 16))(v520, v521, v522);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v258, 0, 1, v911);
            a1 = __srcg;
          }
          uint64_t v523 = *(int *)(v260 + 20);
          v524 = &v258[v523];
          v525 = &v259[v523];
          uint64_t v526 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v526 - 8) + 16))(v524, v525, v526);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v258, 0, 1, v260);
          uint64_t v256 = v1017;
        }
        uint64_t v527 = *(int *)(v256 + 24);
        v528 = &v83[v527];
        v529 = &v84[v527];
        uint64_t v530 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v530 - 8) + 16))(v528, v529, v530);
        goto LABEL_246;
      case 2u:
        *(void *)uint64_t v83 = *(void *)v84;
        *((void *)v83 + 1) = *((void *)v84 + 1);
        uint64_t v262 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
        __srcs = a1;
        v1011 = &v83[v262];
        uint64_t v263 = &v84[v262];
        uint64_t v264 = sub_253B07160();
        uint64_t v265 = *(void (**)(char *, char *, uint64_t))(*(void *)(v264 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v266 = v263;
        a1 = __srcs;
        v265(v1011, v266, v264);
        goto LABEL_387;
      case 3u:
        v926 = a2;
        uint64_t v267 = a1;
        *(void *)uint64_t v83 = *(void *)v84;
        *((void *)v83 + 1) = *((void *)v84 + 1);
        uint64_t v268 = *((void *)v84 + 2);
        v83[24] = v84[24];
        *((void *)v83 + 2) = v268;
        uint64_t v269 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        uint64_t v270 = *(int *)(v269 + 24);
        uint64_t v271 = &v83[v270];
        uint64_t v272 = &v84[v270];
        uint64_t v273 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v272, 1, v273)) {
          goto LABEL_117;
        }
        goto LABEL_163;
      case 4u:
        *(void *)uint64_t v83 = *(void *)v84;
        *((void *)v83 + 1) = *((void *)v84 + 1);
        *((void *)v83 + 2) = *((void *)v84 + 2);
        uint64_t v275 = *((void *)v84 + 3);
        v83[32] = v84[32];
        *((void *)v83 + 3) = v275;
        uint64_t v276 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        __srct = &v84[v276];
        v1012 = &v83[v276];
        v927 = a2;
        uint64_t v277 = sub_253B07160();
        uint64_t v278 = *(void (**)(char *, char *, uint64_t))(*(void *)(v277 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v278(v1012, __srct, v277);
        a2 = v927;
        goto LABEL_387;
      case 5u:
        v926 = a2;
        uint64_t v267 = a1;
        *(void *)uint64_t v83 = *(void *)v84;
        *((void *)v83 + 1) = *((void *)v84 + 1);
        v83[16] = v84[16];
        uint64_t v269 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
        uint64_t v279 = *(int *)(v269 + 24);
        uint64_t v271 = &v83[v279];
        uint64_t v272 = &v84[v279];
        uint64_t v273 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v272, 1, v273))
        {
LABEL_117:
          uint64_t v274 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v271, v272, *(void *)(*(void *)(v274 - 8) + 64));
        }
        else
        {
LABEL_163:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v273 - 8) + 16))(v271, v272, v273);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v271, 0, 1, v273);
        }
        a1 = v267;
        uint64_t v347 = *(int *)(v269 + 28);
        uint64_t v348 = &v83[v347];
        uint64_t v349 = &v84[v347];
        uint64_t v350 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v350 - 8) + 16))(v348, v349, v350);
        goto LABEL_246;
      case 6u:
        v926 = a2;
        uint64_t v280 = a1;
        *(void *)uint64_t v83 = *(void *)v84;
        *((void *)v83 + 1) = *((void *)v84 + 1);
        uint64_t v281 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v282 = *(int *)(v281 + 20);
        uint64_t v283 = &v83[v282];
        uint64_t v284 = &v84[v282];
        uint64_t v285 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v284, 1, v285))
        {
          uint64_t v286 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v283, v284, *(void *)(*(void *)(v286 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v285 - 8) + 16))(v283, v284, v285);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v283, 0, 1, v285);
        }
        a1 = v280;
        uint64_t v351 = *(int *)(v281 + 24);
        uint64_t v352 = &v83[v351];
        uint64_t v353 = &v84[v351];
        uint64_t v354 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v354 - 8) + 16))(v352, v353, v354);
LABEL_246:
        swift_storeEnumTagMultiPayload();
        goto LABEL_247;
      case 7u:
        uint64_t v287 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v287))
        {
          uint64_t v288 = sub_253462A5C(&qword_269CE0498);
          memcpy(v83, v84, *(void *)(*(void *)(v288 - 8) + 64));
          goto LABEL_386;
        }
        int v355 = swift_getEnumCaseMultiPayload();
        if (v355 != 2)
        {
          if (v355 == 1)
          {
            *uint64_t v83 = *v84;
            uint64_t v495 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            v496 = &v83[v495];
            v497 = &v84[v495];
            uint64_t v498 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v498 - 8) + 16))(v496, v497, v498);
            goto LABEL_230;
          }
          if (!v355)
          {
            *uint64_t v83 = *v84;
            uint64_t v356 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            v357 = &v83[v356];
            v358 = &v84[v356];
            uint64_t v359 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v359 - 8) + 16))(v357, v358, v359);
LABEL_230:
            swift_storeEnumTagMultiPayload();
            goto LABEL_385;
          }
          memcpy(v83, v84, *(void *)(*(void *)(v287 - 8) + 64));
LABEL_385:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v287);
LABEL_386:
          uint64_t v847 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
          v848 = &v83[v847];
          v849 = &v84[v847];
          uint64_t v850 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v850 - 8) + 16))(v848, v849, v850);
LABEL_387:
          swift_storeEnumTagMultiPayload();
          goto LABEL_279;
        }
        v933 = a2;
        uint64_t v493 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v493))
        {
          uint64_t v494 = sub_253462A5C(&qword_269CE0490);
          memcpy(v83, v84, *(void *)(*(void *)(v494 - 8) + 64));
LABEL_384:
          uint64_t v843 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          v844 = &v83[v843];
          v845 = &v84[v843];
          uint64_t v846 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v846 - 8) + 16))(v844, v845, v846);
          swift_storeEnumTagMultiPayload();
          a2 = v933;
          goto LABEL_385;
        }
        int v554 = swift_getEnumCaseMultiPayload();
        if (v554 == 1)
        {
          uint64_t v579 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v579))
          {
            uint64_t v580 = sub_253462A5C(&qword_269CE0488);
            memcpy(v83, v84, *(void *)(*(void *)(v580 - 8) + 64));
          }
          else
          {
            *uint64_t v83 = *v84;
            uint64_t v835 = *(int *)(v579 + 20);
            v836 = &v83[v835];
            v837 = &v84[v835];
            uint64_t v838 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v838 - 8) + 16))(v836, v837, v838);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v579);
          }
          uint64_t v839 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          v840 = &v83[v839];
          v841 = &v84[v839];
          uint64_t v842 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v842 - 8) + 16))(v840, v841, v842);
        }
        else
        {
          if (v554)
          {
            memcpy(v83, v84, *(void *)(*(void *)(v493 - 8) + 64));
LABEL_383:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v493);
            goto LABEL_384;
          }
          *(void *)uint64_t v83 = *(void *)v84;
          *((void *)v83 + 1) = *((void *)v84 + 1);
          uint64_t v555 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          __srcz = &v84[v555];
          v1025 = &v83[v555];
          uint64_t v556 = sub_253B07160();
          v915 = *(void (**)(char *, char *, uint64_t))(*(void *)(v556 - 8) + 16);
          swift_bridgeObjectRetain();
          v915(v1025, __srcz, v556);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_383;
      case 8u:
        *(void *)uint64_t v83 = *(void *)v84;
        *((void *)v83 + 1) = *((void *)v84 + 1);
        *((void *)v83 + 2) = *((void *)v84 + 2);
        uint64_t v289 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        __srcu = &v84[v289];
        v1013 = &v83[v289];
        v928 = a2;
        uint64_t v290 = sub_253B07160();
        uint64_t v291 = *(void (**)(char *, char *, uint64_t))(*(void *)(v290 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v291(v1013, __srcu, v290);
        a2 = v928;
        goto LABEL_387;
      case 9u:
        uint64_t v292 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v292))
        {
          uint64_t v293 = sub_253462A5C(&qword_269CE04A8);
          memcpy(v83, v84, *(void *)(*(void *)(v293 - 8) + 64));
        }
        else
        {
          uint64_t v360 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v360))
          {
            uint64_t v361 = sub_253462A5C(&qword_269CE04A0);
            memcpy(v83, v84, *(void *)(*(void *)(v361 - 8) + 64));
          }
          else
          {
            v932 = a2;
            __srcf = a1;
            uint64_t v437 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 16, v437))
            {
              memcpy(v83, v84, *(void *)(*(void *)(v360 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v83 = *(void *)v84;
              *((void *)v83 + 1) = *((void *)v84 + 1);
              *((void *)v83 + 2) = *((void *)v84 + 2);
              *((void *)v83 + 3) = *((void *)v84 + 3);
              *((void *)v83 + 4) = *((void *)v84 + 4);
              uint64_t v506 = *(int *)(v437 + 28);
              v1024 = &v83[v506];
              v961 = &v84[v506];
              uint64_t v507 = sub_253B07160();
              v888 = *(void (**)(char *, char *, uint64_t))(*(void *)(v507 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v888(v1024, v961, v507);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 16, v437);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v360);
            a1 = __srcf;
            a2 = v932;
          }
          uint64_t v508 = *(int *)(v292 + 20);
          v509 = &v83[v508];
          v510 = &v84[v508];
          uint64_t v511 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v511 - 8) + 16))(v509, v510, v511);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v292);
        }
        uint64_t v512 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
        v513 = &v83[v512];
        v514 = &v84[v512];
        uint64_t v515 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v515 - 8) + 16))(v513, v514, v515);
        goto LABEL_387;
      case 0xAu:
        *(void *)uint64_t v83 = *(void *)v84;
        uint64_t v294 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
        __srcv = a1;
        v1014 = &v83[v294];
        uint64_t v295 = &v84[v294];
        uint64_t v296 = sub_253B07160();
        uint64_t v297 = *(void (**)(char *, char *, uint64_t))(*(void *)(v296 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v298 = v295;
        a1 = __srcv;
        v297(v1014, v298, v296);
        goto LABEL_387;
      default:
        __srcc = a1;
        *uint64_t v83 = *v84;
        v83[1] = v84[1];
        v83[2] = v84[2];
        uint64_t v119 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v120 = v119[7];
        uint64_t v121 = &v83[v120];
        uint64_t v122 = &v84[v120];
        uint64_t v123 = sub_253B08E50();
        v926 = a2;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v122, 1, v123))
        {
          uint64_t v124 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v121, v122, *(void *)(*(void *)(v124 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 16))(v121, v122, v123);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v121, 0, 1, v123);
        }
        uint64_t v340 = v119[8];
        uint64_t v341 = &v83[v340];
        v342 = &v84[v340];
        uint64_t v343 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v342, 1, v343))
        {
          uint64_t v344 = sub_253462A5C(&qword_269CE0450);
          memcpy(v341, v342, *(void *)(*(void *)(v344 - 8) + 64));
        }
        else
        {
          *(void *)uint64_t v341 = *(void *)v342;
          *((void *)v341 + 1) = *((void *)v342 + 1);
          *((void *)v341 + 2) = *((void *)v342 + 2);
          *((void *)v341 + 3) = *((void *)v342 + 3);
          *((void *)v341 + 4) = *((void *)v342 + 4);
          *((void *)v341 + 5) = *((void *)v342 + 5);
          uint64_t v419 = *(int *)(v343 + 28);
          v885 = &v342[v419];
          v909 = &v341[v419];
          uint64_t v420 = sub_253B07160();
          __dste = *(void (**)(char *, char *, uint64_t))(*(void *)(v420 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __dste(v909, v885, v420);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v341, 0, 1, v343);
        }
        uint64_t v421 = v119[9];
        v422 = &v83[v421];
        v423 = &v84[v421];
        uint64_t v424 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v423, 1, v424))
        {
          uint64_t v425 = sub_253462A5C(&qword_269CE0468);
          memcpy(v422, v423, *(void *)(*(void *)(v425 - 8) + 64));
        }
        else
        {
          uint64_t v426 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v423, 1, v426))
          {
            uint64_t v427 = sub_253462A5C(&qword_269CE0460);
            memcpy(v422, v423, *(void *)(*(void *)(v427 - 8) + 64));
          }
          else
          {
            uint64_t v913 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            uint64_t v1022 = v426;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v423, 1, v913))
            {
              uint64_t v492 = sub_253462A5C(&qword_269CE0458);
              memcpy(v422, v423, *(void *)(*(void *)(v492 - 8) + 64));
            }
            else
            {
              *(void *)v422 = *(void *)v423;
              *((void *)v422 + 1) = *((void *)v423 + 1);
              uint64_t v531 = *((void *)v423 + 2);
              unint64_t v532 = *((void *)v423 + 3);
              swift_bridgeObjectRetain();
              sub_25348A9C8(v531, v532);
              *((void *)v422 + 2) = v531;
              *((void *)v422 + 3) = v532;
              *((void *)v422 + 4) = *((void *)v423 + 4);
              uint64_t v533 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              v534 = &v422[v533];
              v535 = &v423[v533];
              uint64_t v536 = sub_253B07160();
              v537 = v534;
              uint64_t v426 = v1022;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v536 - 8) + 16))(v537, v535, v536);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v422, 0, 1, v913);
            }
            uint64_t v538 = *(int *)(v426 + 20);
            v539 = &v422[v538];
            v540 = &v423[v538];
            uint64_t v541 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v541 - 8) + 16))(v539, v540, v541);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v422, 0, 1, v1022);
          }
          uint64_t v542 = *(int *)(v424 + 20);
          v543 = &v422[v542];
          v544 = &v423[v542];
          uint64_t v545 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v545 - 8) + 16))(v543, v544, v545);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v422, 0, 1, v424);
        }
        uint64_t v546 = v119[10];
        v547 = &v83[v546];
        v548 = &v84[v546];
        *(void *)v547 = *(void *)v548;
        *((void *)v547 + 1) = *((void *)v548 + 1);
        uint64_t v549 = v119[11];
        v550 = &v83[v549];
        v551 = &v84[v549];
        uint64_t v552 = sub_253B07160();
        v553 = *(void (**)(char *, char *, uint64_t))(*(void *)(v552 - 8) + 16);
        swift_bridgeObjectRetain();
        v553(v550, v551, v552);
        swift_storeEnumTagMultiPayload();
        a1 = __srcc;
LABEL_247:
        a2 = v926;
        goto LABEL_279;
    }
  }
  if (v93)
  {
LABEL_50:
    uint64_t v106 = sub_253462A5C(&qword_269CE04B0);
    memcpy(v83, v84, *(void *)(*(void *)(v106 - 8) + 64));
    goto LABEL_279;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v924 = a2;
      uint64_t v950 = v91;
      *(void *)uint64_t v83 = *(void *)v84;
      uint64_t v172 = type metadata accessor for TranscriptProtoActionConfirmation(0);
      uint64_t v173 = *(int *)(v172 + 20);
      uint64_t v174 = &v83[v173];
      uint64_t v175 = &v84[v173];
      uint64_t v176 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v175, 1, v176))
      {
        uint64_t v177 = sub_253462A5C(&qword_269CE0480);
        memcpy(v174, v175, *(void *)(*(void *)(v177 - 8) + 64));
      }
      else
      {
        uint64_t v1015 = v172;
        uint64_t v299 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v175, 1, v299))
        {
          uint64_t v300 = sub_253462A5C(&qword_269CE0478);
          memcpy(v174, v175, *(void *)(*(void *)(v300 - 8) + 64));
        }
        else
        {
          uint64_t v907 = v299;
          __srce = a1;
          *(void *)uint64_t v174 = *(void *)v175;
          *((void *)v174 + 1) = *((void *)v175 + 1);
          v174[16] = v175[16];
          uint64_t v362 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
          uint64_t v363 = *(int *)(v362 + 24);
          __dsta = &v174[v363];
          uint64_t v883 = v362;
          int v364 = &v175[v363];
          uint64_t v365 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v364, 1, v365))
          {
            uint64_t v366 = sub_253462A5C(&qword_269CE0470);
            memcpy(__dsta, v364, *(void *)(*(void *)(v366 - 8) + 64));
          }
          else
          {
            char *__dsta = *v364;
            uint64_t v454 = *(int *)(v365 + 20);
            v855 = &__dsta[v454];
            v455 = &v364[v454];
            uint64_t v456 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v456 - 8) + 16))(v855, v455, v456);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v365);
          }
          uint64_t v457 = *(int *)(v883 + 28);
          v458 = &v174[v457];
          v459 = &v175[v457];
          uint64_t v460 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v460 - 8) + 16))(v458, v459, v460);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v174, 0, 1, v907);
          a1 = __srce;
        }
        uint64_t v461 = *(int *)(v176 + 20);
        v462 = &v174[v461];
        v463 = &v175[v461];
        uint64_t v464 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v464 - 8) + 16))(v462, v463, v464);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v174, 0, 1, v176);
        uint64_t v172 = v1015;
      }
      uint64_t v465 = *(int *)(v172 + 24);
      v466 = &v83[v465];
      v467 = &v84[v465];
      uint64_t v468 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v468 - 8) + 16))(v466, v467, v468);
      uint64_t v91 = v950;
      goto LABEL_219;
    case 2u:
      *(void *)uint64_t v83 = *(void *)v84;
      *((void *)v83 + 1) = *((void *)v84 + 1);
      uint64_t v178 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
      __srco = a1;
      v1006 = &v83[v178];
      uint64_t v179 = &v84[v178];
      uint64_t v180 = sub_253B07160();
      uint64_t v951 = v91;
      uint64_t v181 = *(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v182 = v179;
      a1 = __srco;
      v181(v1006, v182, v180);
      uint64_t v91 = v951;
      goto LABEL_277;
    case 3u:
      v924 = a2;
      uint64_t v952 = v91;
      uint64_t v183 = a1;
      *(void *)uint64_t v83 = *(void *)v84;
      *((void *)v83 + 1) = *((void *)v84 + 1);
      uint64_t v184 = *((void *)v84 + 2);
      v83[24] = v84[24];
      *((void *)v83 + 2) = v184;
      uint64_t v185 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
      uint64_t v186 = *(int *)(v185 + 24);
      uint64_t v187 = &v83[v186];
      uint64_t v188 = &v84[v186];
      uint64_t v189 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v188, 1, v189)) {
        goto LABEL_77;
      }
      goto LABEL_131;
    case 4u:
      *(void *)uint64_t v83 = *(void *)v84;
      *((void *)v83 + 1) = *((void *)v84 + 1);
      *((void *)v83 + 2) = *((void *)v84 + 2);
      uint64_t v191 = *((void *)v84 + 3);
      v83[32] = v84[32];
      *((void *)v83 + 3) = v191;
      uint64_t v192 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
      __srcp = &v83[v192];
      v902 = &v84[v192];
      uint64_t v953 = v91;
      uint64_t v193 = sub_253B07160();
      v1007 = a3;
      uint64_t v194 = a2;
      uint64_t v195 = *(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v196 = v193;
      uint64_t v91 = v953;
      v195(__srcp, v902, v196);
      a2 = v194;
      a3 = v1007;
      goto LABEL_277;
    case 5u:
      v924 = a2;
      uint64_t v952 = v91;
      uint64_t v183 = a1;
      *(void *)uint64_t v83 = *(void *)v84;
      *((void *)v83 + 1) = *((void *)v84 + 1);
      v83[16] = v84[16];
      uint64_t v185 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
      uint64_t v197 = *(int *)(v185 + 24);
      uint64_t v187 = &v83[v197];
      uint64_t v188 = &v84[v197];
      uint64_t v189 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v188, 1, v189))
      {
LABEL_77:
        uint64_t v190 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v187, v188, *(void *)(*(void *)(v190 - 8) + 64));
      }
      else
      {
LABEL_131:
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v189 - 8) + 16))(v187, v188, v189);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v187, 0, 1, v189);
      }
      a1 = v183;
      uint64_t v301 = *(int *)(v185 + 28);
      uint64_t v302 = &v83[v301];
      uint64_t v303 = &v84[v301];
      uint64_t v304 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v304 - 8) + 16))(v302, v303, v304);
      uint64_t v91 = v952;
      goto LABEL_219;
    case 6u:
      v924 = a2;
      uint64_t v954 = v91;
      unint64_t v198 = a1;
      *(void *)uint64_t v83 = *(void *)v84;
      *((void *)v83 + 1) = *((void *)v84 + 1);
      uint64_t v199 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
      uint64_t v200 = *(int *)(v199 + 20);
      uint64_t v201 = &v83[v200];
      uint64_t v202 = &v84[v200];
      uint64_t v203 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v202, 1, v203))
      {
        uint64_t v204 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v201, v202, *(void *)(*(void *)(v204 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v203 - 8) + 16))(v201, v202, v203);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v201, 0, 1, v203);
      }
      a1 = v198;
      uint64_t v305 = *(int *)(v199 + 24);
      uint64_t v306 = &v83[v305];
      unint64_t v307 = &v84[v305];
      uint64_t v308 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v308 - 8) + 16))(v306, v307, v308);
      uint64_t v91 = v954;
LABEL_219:
      swift_storeEnumTagMultiPayload();
      goto LABEL_224;
    case 7u:
      uint64_t v205 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v205))
      {
        uint64_t v206 = sub_253462A5C(&qword_269CE0498);
        memcpy(v83, v84, *(void *)(*(void *)(v206 - 8) + 64));
        goto LABEL_276;
      }
      int v309 = swift_getEnumCaseMultiPayload();
      switch(v309)
      {
        case 2:
          uint64_t v959 = v91;
          uint64_t v428 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v428))
          {
            uint64_t v429 = sub_253462A5C(&qword_269CE0490);
            memcpy(v83, v84, *(void *)(*(void *)(v429 - 8) + 64));
LABEL_274:
            uint64_t v589 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
            v590 = &v83[v589];
            v591 = &v84[v589];
            uint64_t v592 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v592 - 8) + 16))(v590, v591, v592);
            swift_storeEnumTagMultiPayload();
            uint64_t v91 = v959;
            goto LABEL_275;
          }
          v934 = a2;
          __srch = a1;
          int v499 = swift_getEnumCaseMultiPayload();
          if (v499 == 1)
          {
            uint64_t v557 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v557))
            {
              uint64_t v558 = sub_253462A5C(&qword_269CE0488);
              memcpy(v83, v84, *(void *)(*(void *)(v558 - 8) + 64));
            }
            else
            {
              *uint64_t v83 = *v84;
              uint64_t v581 = *(int *)(v557 + 20);
              v582 = &v83[v581];
              v583 = &v84[v581];
              uint64_t v584 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v584 - 8) + 16))(v582, v583, v584);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v557);
            }
            uint64_t v585 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
            v586 = &v83[v585];
            v587 = &v84[v585];
            uint64_t v588 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v588 - 8) + 16))(v586, v587, v588);
          }
          else
          {
            if (v499)
            {
              memcpy(v83, v84, *(void *)(*(void *)(v428 - 8) + 64));
LABEL_273:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v428);
              a1 = __srch;
              a2 = v934;
              goto LABEL_274;
            }
            *(void *)uint64_t v83 = *(void *)v84;
            *((void *)v83 + 1) = *((void *)v84 + 1);
            uint64_t v500 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
            v1023 = &v83[v500];
            v914 = &v84[v500];
            uint64_t v501 = sub_253B07160();
            v502 = *(void (**)(char *, char *, uint64_t))(*(void *)(v501 - 8) + 16);
            swift_bridgeObjectRetain();
            v502(v1023, v914, v501);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_273;
        case 1:
          *uint64_t v83 = *v84;
          uint64_t v430 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
          v431 = &v83[v430];
          v432 = &v84[v430];
          uint64_t v433 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v433 - 8) + 16))(v431, v432, v433);
          goto LABEL_202;
        case 0:
          *uint64_t v83 = *v84;
          uint64_t v310 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
          unint64_t v311 = &v83[v310];
          uint64_t v312 = &v84[v310];
          uint64_t v313 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v313 - 8) + 16))(v311, v312, v313);
LABEL_202:
          swift_storeEnumTagMultiPayload();
          goto LABEL_275;
      }
      memcpy(v83, v84, *(void *)(*(void *)(v205 - 8) + 64));
LABEL_275:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v205);
LABEL_276:
      uint64_t v593 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
      v594 = &v83[v593];
      v595 = &v84[v593];
      uint64_t v596 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v596 - 8) + 16))(v594, v595, v596);
LABEL_277:
      swift_storeEnumTagMultiPayload();
LABEL_278:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v91);
LABEL_279:
      uint64_t v597 = *(int *)(v85 + 20);
      v598 = &v83[v597];
      v599 = &v84[v597];
      uint64_t v600 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v600 - 8) + 24))(v598, v599, v600);
LABEL_280:
      a1[a3[7]] = a2[a3[7]];
      uint64_t v601 = a3[8];
      v602 = &a1[v601];
      v603 = &a2[v601];
      v604 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
      int v605 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v602, 1, (uint64_t)v604);
      int v606 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v603, 1, (uint64_t)v604);
      if (v605)
      {
        if (!v606)
        {
          v1026 = a3;
          *(void *)v602 = *(void *)v603;
          uint64_t v607 = v604[5];
          v608 = &v602[v607];
          v609 = &v603[v607];
          uint64_t v610 = type metadata accessor for TranscriptProtoResponseDialog(0);
          swift_bridgeObjectRetain();
          v962 = v604;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v609, 1, v610))
          {
            uint64_t v611 = sub_253462A5C(&qword_269CE04B8);
            memcpy(v608, v609, *(void *)(*(void *)(v611 - 8) + 64));
          }
          else
          {
            *(void *)v608 = *(void *)v609;
            *((void *)v608 + 1) = *((void *)v609 + 1);
            *((void *)v608 + 2) = *((void *)v609 + 2);
            *((void *)v608 + 3) = *((void *)v609 + 3);
            *((void *)v608 + 4) = *((void *)v609 + 4);
            *((void *)v608 + 5) = *((void *)v609 + 5);
            *((void *)v608 + 6) = *((void *)v609 + 6);
            *((void *)v608 + 7) = *((void *)v609 + 7);
            uint64_t v622 = *(int *)(v610 + 32);
            v917 = &v608[v622];
            __dstg = &v609[v622];
            v890 = v602;
            uint64_t v623 = sub_253B07160();
            v624 = *(void (**)(char *, char *, uint64_t))(*(void *)(v623 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v625 = v623;
            v602 = v890;
            v624(v917, __dstg, v625);
            v604 = v962;
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v608, 0, 1, v610);
          }
          uint64_t v626 = v604[6];
          v627 = &v602[v626];
          v628 = &v603[v626];
          uint64_t v629 = type metadata accessor for TranscriptProtoResponseVisual(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v628, 1, v629))
          {
            uint64_t v630 = sub_253462A5C(&qword_269CE04C8);
            memcpy(v627, v628, *(void *)(*(void *)(v630 - 8) + 64));
          }
          else
          {
            v891 = v602;
            v631 = a2;
            v632 = a1;
            *(void *)v627 = *(void *)v628;
            *((void *)v627 + 1) = *((void *)v628 + 1);
            uint64_t v633 = *(int *)(v629 + 24);
            v634 = &v627[v633];
            v635 = &v628[v633];
            uint64_t v636 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v635, 1, v636))
            {
              uint64_t v637 = sub_253462A5C(&qword_269CE04C0);
              memcpy(v634, v635, *(void *)(*(void *)(v637 - 8) + 64));
            }
            else
            {
              char *v634 = *v635;
              uint64_t v652 = *(int *)(v636 + 20);
              v653 = &v634[v652];
              v654 = &v635[v652];
              uint64_t v655 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v655 - 8) + 16))(v653, v654, v655);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v634, 0, 1, v636);
            }
            a1 = v632;
            uint64_t v656 = *(int *)(v629 + 28);
            v657 = &v627[v656];
            v658 = &v628[v656];
            uint64_t v659 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v659 - 8) + 16))(v657, v658, v659);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v627, 0, 1, v629);
            a2 = v631;
            v602 = v891;
            v604 = v962;
          }
          uint64_t v660 = v604[7];
          v661 = &v602[v660];
          v662 = &v603[v660];
          *(void *)v661 = *(void *)v662;
          *((void *)v661 + 1) = *((void *)v662 + 1);
          uint64_t v663 = v604[8];
          v664 = &v602[v663];
          v665 = &v603[v663];
          *(void *)v664 = *(void *)v665;
          *((void *)v664 + 1) = *((void *)v665 + 1);
          v602[v604[9]] = v603[v604[9]];
          v602[v604[10]] = v603[v604[10]];
          uint64_t v666 = v604[11];
          v667 = &v602[v666];
          v668 = &v603[v666];
          uint64_t v669 = type metadata accessor for TranscriptProtoUIType(0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v668, 1, v669))
          {
            uint64_t v670 = sub_253462A5C(&qword_269CE04D0);
            memcpy(v667, v668, *(void *)(*(void *)(v670 - 8) + 64));
          }
          else
          {
            v671 = a2;
            uint64_t v672 = type metadata accessor for TranscriptProtoUitype(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v668, 1, v672))
            {
              uint64_t v673 = sub_253462A5C(&qword_269CDCC08);
              memcpy(v667, v668, *(void *)(*(void *)(v673 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  *(void *)v667 = *(void *)v668;
                  *((void *)v667 + 1) = *((void *)v668 + 1);
                  uint64_t v702 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
                  goto LABEL_321;
                case 2u:
                  uint64_t v703 = *(void *)v668;
                  unint64_t v704 = *((void *)v668 + 1);
                  sub_25348A9C8(*(void *)v668, v704);
                  *(void *)v667 = v703;
                  *((void *)v667 + 1) = v704;
                  *((void *)v667 + 2) = *((void *)v668 + 2);
                  *((void *)v667 + 3) = *((void *)v668 + 3);
                  uint64_t v702 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
LABEL_321:
                  v893 = &v667[v702];
                  __srcbb = a1;
                  v705 = &v668[v702];
                  v919 = v603;
                  uint64_t v706 = sub_253B07160();
                  v858 = *(void (**)(char *, char *, uint64_t))(*(void *)(v706 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v707 = v705;
                  a1 = __srcbb;
                  uint64_t v708 = v706;
                  v603 = v919;
                  v858(v893, v707, v708);
                  break;
                case 3u:
                  uint64_t v709 = *(void *)v668;
                  unint64_t v710 = *((void *)v668 + 1);
                  sub_25348A9C8(*(void *)v668, v710);
                  *(void *)v667 = v709;
                  *((void *)v667 + 1) = v710;
                  uint64_t v711 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
                  v712 = &v667[v711];
                  v713 = &v668[v711];
                  uint64_t v714 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v714 - 8) + 16))(v712, v713, v714);
                  break;
                default:
                  uint64_t v674 = *(void *)v668;
                  unint64_t v675 = *((void *)v668 + 1);
                  sub_25348A9C8(*(void *)v668, v675);
                  *(void *)v667 = v674;
                  *((void *)v667 + 1) = v675;
                  *((void *)v667 + 2) = *((void *)v668 + 2);
                  *((void *)v667 + 3) = *((void *)v668 + 3);
                  *((void *)v667 + 4) = *((void *)v668 + 4);
                  *((void *)v667 + 5) = *((void *)v668 + 5);
                  uint64_t v676 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
                  __srcba = &v667[v676];
                  v857 = &v668[v676];
                  v892 = v602;
                  uint64_t v677 = sub_253B07160();
                  v851 = *(void (**)(char *, char *, uint64_t))(*(void *)(v677 - 8) + 16);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  uint64_t v678 = v677;
                  v602 = v892;
                  v851(__srcba, v857, v678);
                  break;
              }
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v667, 0, 1, v672);
            }
            a2 = v671;
            uint64_t v715 = *(int *)(v669 + 20);
            v716 = &v667[v715];
            v717 = &v668[v715];
            uint64_t v718 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v718 - 8) + 16))(v716, v717, v718);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v667, 0, 1, v669);
            v604 = v962;
          }
          uint64_t v719 = v604[12];
          v720 = &v602[v719];
          v721 = &v603[v719];
          uint64_t v722 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v722 - 8) + 16))(v720, v721, v722);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v602, 0, 1, (uint64_t)v604);
          goto LABEL_371;
        }
LABEL_286:
        uint64_t v612 = sub_253462A5C(&qword_269CE0378);
        memcpy(v602, v603, *(void *)(*(void *)(v612 - 8) + 64));
        goto LABEL_372;
      }
      if (v606)
      {
        sub_2535F2C0C((uint64_t)v602, (void (*)(void))type metadata accessor for TranscriptProtoResponseManifest);
        goto LABEL_286;
      }
      v1026 = a3;
      *(void *)v602 = *(void *)v603;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v613 = v604[5];
      v614 = &v602[v613];
      v615 = &v603[v613];
      uint64_t v616 = type metadata accessor for TranscriptProtoResponseDialog(0);
      int v617 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v614, 1, v616);
      int v618 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v615, 1, v616);
      v963 = v604;
      if (v617)
      {
        if (!v618)
        {
          *(void *)v614 = *(void *)v615;
          *((void *)v614 + 1) = *((void *)v615 + 1);
          *((void *)v614 + 2) = *((void *)v615 + 2);
          *((void *)v614 + 3) = *((void *)v615 + 3);
          *((void *)v614 + 4) = *((void *)v615 + 4);
          *((void *)v614 + 5) = *((void *)v615 + 5);
          *((void *)v614 + 6) = *((void *)v615 + 6);
          *((void *)v614 + 7) = *((void *)v615 + 7);
          uint64_t v619 = *(int *)(v616 + 32);
          __dstf = &v615[v619];
          v889 = &v614[v619];
          uint64_t v620 = sub_253B07160();
          v916 = v603;
          v621 = *(void (**)(char *, char *, uint64_t))(*(void *)(v620 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v621(v889, __dstf, v620);
          v603 = v916;
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v614, 0, 1, v616);
          goto LABEL_298;
        }
        goto LABEL_297;
      }
      if (v618)
      {
        sub_2535F2C0C((uint64_t)v614, (void (*)(void))type metadata accessor for TranscriptProtoResponseDialog);
LABEL_297:
        uint64_t v638 = sub_253462A5C(&qword_269CE04B8);
        memcpy(v614, v615, *(void *)(*(void *)(v638 - 8) + 64));
        goto LABEL_298;
      }
      *(void *)v614 = *(void *)v615;
      *((void *)v614 + 1) = *((void *)v615 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v614 + 2) = *((void *)v615 + 2);
      *((void *)v614 + 3) = *((void *)v615 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v614 + 4) = *((void *)v615 + 4);
      *((void *)v614 + 5) = *((void *)v615 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v614 + 6) = *((void *)v615 + 6);
      *((void *)v614 + 7) = *((void *)v615 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v679 = *(int *)(v616 + 32);
      v680 = &v614[v679];
      v681 = &v615[v679];
      uint64_t v682 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v682 - 8) + 24))(v680, v681, v682);
LABEL_298:
      uint64_t v639 = v604[6];
      v640 = &v602[v639];
      v641 = &v603[v639];
      uint64_t v642 = type metadata accessor for TranscriptProtoResponseVisual(0);
      int v643 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v640, 1, v642);
      int v644 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v641, 1, v642);
      if (v643)
      {
        if (!v644)
        {
          v918 = v603;
          v935 = a2;
          v645 = a1;
          *(void *)v640 = *(void *)v641;
          *((void *)v640 + 1) = *((void *)v641 + 1);
          uint64_t v646 = *(int *)(v642 + 24);
          v647 = &v640[v646];
          v648 = &v641[v646];
          uint64_t v649 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v648, 1, v649))
          {
            uint64_t v650 = sub_253462A5C(&qword_269CE04C0);
            memcpy(v647, v648, *(void *)(*(void *)(v650 - 8) + 64));
          }
          else
          {
            char *v647 = *v648;
            uint64_t v694 = *(int *)(v649 + 20);
            v695 = &v647[v694];
            v696 = &v648[v694];
            uint64_t v697 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v697 - 8) + 16))(v695, v696, v697);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v647, 0, 1, v649);
          }
          a1 = v645;
          uint64_t v698 = *(int *)(v642 + 28);
          v699 = &v640[v698];
          v700 = &v641[v698];
          uint64_t v701 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v701 - 8) + 16))(v699, v700, v701);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v640, 0, 1, v642);
          v603 = v918;
          a2 = v935;
          goto LABEL_330;
        }
LABEL_304:
        uint64_t v651 = sub_253462A5C(&qword_269CE04C8);
        memcpy(v640, v641, *(void *)(*(void *)(v651 - 8) + 64));
        goto LABEL_331;
      }
      if (v644)
      {
        sub_2535F2C0C((uint64_t)v640, (void (*)(void))type metadata accessor for TranscriptProtoResponseVisual);
        goto LABEL_304;
      }
      v936 = a2;
      *(void *)v640 = *(void *)v641;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v640 + 1) = *((void *)v641 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v683 = *(int *)(v642 + 24);
      v684 = &v640[v683];
      v685 = &v641[v683];
      uint64_t v686 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
      int v687 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v684, 1, v686);
      __srci = v685;
      int v688 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v685, 1, v686);
      if (!v687)
      {
        if (!v688)
        {
          char *v684 = *v685;
          uint64_t v777 = *(int *)(v686 + 20);
          v778 = &v684[v777];
          v779 = &v685[v777];
          uint64_t v780 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v780 - 8) + 24))(v778, v779, v780);
          goto LABEL_329;
        }
        sub_2535F2C0C((uint64_t)v684, (void (*)(void))type metadata accessor for TranscriptProtoResponseVisualOptions);
        goto LABEL_328;
      }
      if (v688)
      {
LABEL_328:
        uint64_t v723 = sub_253462A5C(&qword_269CE04C0);
        memcpy(v684, v685, *(void *)(*(void *)(v723 - 8) + 64));
        goto LABEL_329;
      }
      char *v684 = *v685;
      uint64_t v689 = *(int *)(v686 + 20);
      v690 = &v684[v689];
      uint64_t v691 = (uint64_t)v684;
      v692 = &__srci[v689];
      uint64_t v693 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v693 - 8) + 16))(v690, v692, v693);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v691, 0, 1, v686);
LABEL_329:
      a2 = v936;
      uint64_t v724 = *(int *)(v642 + 28);
      v725 = &v640[v724];
      v726 = &v641[v724];
      uint64_t v727 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v727 - 8) + 24))(v725, v726, v727);
LABEL_330:
      v604 = v963;
LABEL_331:
      uint64_t v728 = v604[7];
      v729 = &v602[v728];
      v730 = &v603[v728];
      *(void *)v729 = *(void *)v730;
      *((void *)v729 + 1) = *((void *)v730 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v731 = v604[8];
      v732 = &v602[v731];
      v733 = &v603[v731];
      *(void *)v732 = *(void *)v733;
      *((void *)v732 + 1) = *((void *)v733 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v602[v604[9]] = v603[v604[9]];
      v602[v604[10]] = v603[v604[10]];
      uint64_t v734 = v604[11];
      v735 = (uint64_t *)&v602[v734];
      v736 = (uint64_t *)&v603[v734];
      uint64_t v737 = type metadata accessor for TranscriptProtoUIType(0);
      int v738 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v735, 1, v737);
      int v739 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v736, 1, v737);
      if (!v738)
      {
        if (v739)
        {
          sub_2535F2C0C((uint64_t)v735, (void (*)(void))type metadata accessor for TranscriptProtoUIType);
          goto LABEL_337;
        }
        v744 = a2;
        uint64_t v745 = type metadata accessor for TranscriptProtoUitype(0);
        int v746 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v735, 1, v745);
        int v747 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v736, 1, v745);
        if (v746)
        {
          if (!v747)
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                uint64_t *v735 = *v736;
                v735[1] = v736[1];
                uint64_t v786 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
                goto LABEL_360;
              case 2u:
                uint64_t v787 = *v736;
                unint64_t v788 = v736[1];
                sub_25348A9C8(*v736, v788);
                uint64_t *v735 = v787;
                v735[1] = v788;
                v735[2] = v736[2];
                v735[3] = v736[3];
                uint64_t v786 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
LABEL_360:
                __dstl = (char *)v735 + v786;
                __srcbg = a1;
                v789 = (char *)v736 + v786;
                uint64_t v790 = sub_253B07160();
                v863 = *(void (**)(char *, char *, uint64_t))(*(void *)(v790 - 8) + 16);
                v920 = v603;
                v752 = v602;
                swift_bridgeObjectRetain();
                v791 = v789;
                a1 = __srcbg;
                v863(__dstl, v791, v790);
                goto LABEL_361;
              case 3u:
                uint64_t v792 = *v736;
                unint64_t v793 = v736[1];
                sub_25348A9C8(*v736, v793);
                uint64_t *v735 = v792;
                v735[1] = v793;
                uint64_t v794 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
                v795 = (char *)v735 + v794;
                v796 = (char *)v736 + v794;
                uint64_t v797 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v797 - 8) + 16))(v795, v796, v797);
                goto LABEL_363;
              default:
                uint64_t v748 = *v736;
                unint64_t v749 = v736[1];
                sub_25348A9C8(*v736, v749);
                uint64_t *v735 = v748;
                v735[1] = v749;
                v735[2] = v736[2];
                v735[3] = v736[3];
                v735[4] = v736[4];
                v735[5] = v736[5];
                uint64_t v750 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
                v859 = (char *)v736 + v750;
                __dsth = (char *)v735 + v750;
                __srcbc = a1;
                uint64_t v751 = sub_253B07160();
                v852 = *(void (**)(char *, char *, uint64_t))(*(void *)(v751 - 8) + 16);
                v920 = v603;
                v752 = v602;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v753 = v751;
                a1 = __srcbc;
                v852(__dsth, v859, v753);
LABEL_361:
                v602 = v752;
                v603 = v920;
LABEL_363:
                swift_storeEnumTagMultiPayload();
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v735, 0, 1, v745);
                break;
            }
            goto LABEL_368;
          }
        }
        else
        {
          if (!v747)
          {
            if (a1 != v744)
            {
              sub_2535F2C0C((uint64_t)v735, (void (*)(void))type metadata accessor for TranscriptProtoUitype);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  uint64_t *v735 = *v736;
                  v735[1] = v736[1];
                  uint64_t v798 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
                  v895 = (char *)v735 + v798;
                  __srcbh = a1;
                  v799 = (char *)v736 + v798;
                  uint64_t v800 = sub_253B07160();
                  __dstm = *(void (**)(char *, char *, uint64_t))(*(void *)(v800 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v801 = v799;
                  a1 = __srcbh;
                  __dstm(v895, v801, v800);
                  break;
                case 2u:
                  uint64_t v802 = *v736;
                  unint64_t v803 = v736[1];
                  sub_25348A9C8(*v736, v803);
                  uint64_t *v735 = v802;
                  v735[1] = v803;
                  v735[2] = v736[2];
                  v735[3] = v736[3];
                  uint64_t v804 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
                  v896 = (char *)v735 + v804;
                  __srcbi = a1;
                  v805 = (char *)v736 + v804;
                  uint64_t v806 = sub_253B07160();
                  __dstn = *(void (**)(char *, char *, uint64_t))(*(void *)(v806 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v807 = v805;
                  a1 = __srcbi;
                  __dstn(v896, v807, v806);
                  break;
                case 3u:
                  uint64_t v808 = *v736;
                  unint64_t v809 = v736[1];
                  sub_25348A9C8(*v736, v809);
                  uint64_t *v735 = v808;
                  v735[1] = v809;
                  uint64_t v810 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
                  v811 = (char *)v735 + v810;
                  v812 = (char *)v736 + v810;
                  uint64_t v813 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v813 - 8) + 16))(v811, v812, v813);
                  break;
                default:
                  uint64_t v781 = *v736;
                  unint64_t v782 = v736[1];
                  sub_25348A9C8(*v736, v782);
                  uint64_t *v735 = v781;
                  v735[1] = v782;
                  v735[2] = v736[2];
                  v735[3] = v736[3];
                  v735[4] = v736[4];
                  v735[5] = v736[5];
                  uint64_t v783 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
                  __dstk = (char *)v736 + v783;
                  v894 = (char *)v735 + v783;
                  __srcbf = a1;
                  uint64_t v784 = sub_253B07160();
                  v862 = *(void (**)(char *, char *, uint64_t))(*(void *)(v784 - 8) + 16);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  uint64_t v785 = v784;
                  a1 = __srcbf;
                  v862(v894, __dstk, v785);
                  break;
              }
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_368;
          }
          sub_2535F2C0C((uint64_t)v735, (void (*)(void))type metadata accessor for TranscriptProtoUitype);
        }
        uint64_t v760 = sub_253462A5C(&qword_269CDCC08);
        memcpy(v735, v736, *(void *)(*(void *)(v760 - 8) + 64));
LABEL_368:
        uint64_t v814 = *(int *)(v737 + 20);
        v815 = (char *)v735 + v814;
        v816 = (char *)v736 + v814;
        uint64_t v817 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v817 - 8) + 24))(v815, v816, v817);
        a2 = v744;
LABEL_369:
        v604 = v963;
        goto LABEL_370;
      }
      if (!v739)
      {
        v740 = a2;
        uint64_t v741 = type metadata accessor for TranscriptProtoUitype(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v736, 1, v741))
        {
          uint64_t v742 = sub_253462A5C(&qword_269CDCC08);
          memcpy(v735, v736, *(void *)(*(void *)(v742 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t *v735 = *v736;
              v735[1] = v736[1];
              uint64_t v761 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
              goto LABEL_349;
            case 2u:
              uint64_t v762 = *v736;
              unint64_t v763 = v736[1];
              sub_25348A9C8(*v736, v763);
              uint64_t *v735 = v762;
              v735[1] = v763;
              v735[2] = v736[2];
              v735[3] = v736[3];
              uint64_t v761 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
LABEL_349:
              __dstj = (char *)v735 + v761;
              __srcbe = a1;
              v764 = (char *)v736 + v761;
              uint64_t v765 = sub_253B07160();
              v861 = *(void (**)(char *, char *, uint64_t))(*(void *)(v765 - 8) + 16);
              v921 = v603;
              v758 = v602;
              swift_bridgeObjectRetain();
              v766 = v764;
              a1 = __srcbe;
              v861(__dstj, v766, v765);
              goto LABEL_350;
            case 3u:
              uint64_t v767 = *v736;
              unint64_t v768 = v736[1];
              sub_25348A9C8(*v736, v768);
              uint64_t *v735 = v767;
              v735[1] = v768;
              uint64_t v769 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
              v770 = (char *)v735 + v769;
              v771 = (char *)v736 + v769;
              uint64_t v772 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v772 - 8) + 16))(v770, v771, v772);
              goto LABEL_352;
            default:
              uint64_t v754 = *v736;
              unint64_t v755 = v736[1];
              sub_25348A9C8(*v736, v755);
              uint64_t *v735 = v754;
              v735[1] = v755;
              v735[2] = v736[2];
              v735[3] = v736[3];
              v735[4] = v736[4];
              v735[5] = v736[5];
              uint64_t v756 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
              v860 = (char *)v736 + v756;
              __dsti = (char *)v735 + v756;
              __srcbd = a1;
              uint64_t v757 = sub_253B07160();
              v853 = *(void (**)(char *, char *, uint64_t))(*(void *)(v757 - 8) + 16);
              v921 = v603;
              v758 = v602;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v759 = v757;
              a1 = __srcbd;
              v853(__dsti, v860, v759);
LABEL_350:
              v602 = v758;
              v603 = v921;
LABEL_352:
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v735, 0, 1, v741);
              break;
          }
        }
        a2 = v740;
        uint64_t v773 = *(int *)(v737 + 20);
        v774 = (char *)v735 + v773;
        v775 = (char *)v736 + v773;
        uint64_t v776 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v776 - 8) + 16))(v774, v775, v776);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v735, 0, 1, v737);
        goto LABEL_369;
      }
LABEL_337:
      uint64_t v743 = sub_253462A5C(&qword_269CE04D0);
      memcpy(v735, v736, *(void *)(*(void *)(v743 - 8) + 64));
LABEL_370:
      uint64_t v818 = v604[12];
      v819 = &v602[v818];
      v820 = &v603[v818];
      uint64_t v821 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v821 - 8) + 24))(v819, v820, v821);
LABEL_371:
      a3 = v1026;
LABEL_372:
      uint64_t v822 = a3[9];
      v823 = &a1[v822];
      v824 = &a2[v822];
      uint64_t v825 = sub_253B08F00();
      int v826 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v823, 1, v825);
      int v827 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v824, 1, v825);
      if (!v826)
      {
        uint64_t v828 = *(void *)(v825 - 8);
        if (!v827)
        {
          (*(void (**)(char *, char *, uint64_t))(v828 + 24))(v823, v824, v825);
          goto LABEL_378;
        }
        (*(void (**)(char *, uint64_t))(v828 + 8))(v823, v825);
        goto LABEL_377;
      }
      if (v827)
      {
LABEL_377:
        uint64_t v829 = sub_253462A5C(&qword_269CE0368);
        memcpy(v823, v824, *(void *)(*(void *)(v829 - 8) + 64));
        goto LABEL_378;
      }
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v825 - 8) + 16))(v823, v824, v825);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v823, 0, 1, v825);
LABEL_378:
      uint64_t v830 = a3[10];
      v831 = &a1[v830];
      v832 = &a2[v830];
      uint64_t v833 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v833 - 8) + 24))(v831, v832, v833);
      return a1;
    case 8u:
      *(void *)uint64_t v83 = *(void *)v84;
      *((void *)v83 + 1) = *((void *)v84 + 1);
      *((void *)v83 + 2) = *((void *)v84 + 2);
      uint64_t v207 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
      __srcq = &v83[v207];
      v903 = &v84[v207];
      uint64_t v955 = v91;
      uint64_t v208 = sub_253B07160();
      v1008 = a3;
      uint64_t v209 = a2;
      uint64_t v210 = *(void (**)(char *, char *, uint64_t))(*(void *)(v208 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v211 = v208;
      uint64_t v91 = v955;
      v210(__srcq, v903, v211);
      a2 = v209;
      a3 = v1008;
      goto LABEL_277;
    case 9u:
      uint64_t v212 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v212))
      {
        uint64_t v213 = sub_253462A5C(&qword_269CE04A8);
        memcpy(v83, v84, *(void *)(*(void *)(v213 - 8) + 64));
      }
      else
      {
        uint64_t v314 = v91;
        uint64_t v315 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v315))
        {
          uint64_t v316 = sub_253462A5C(&qword_269CE04A0);
          memcpy(v83, v84, *(void *)(*(void *)(v316 - 8) + 64));
        }
        else
        {
          v930 = a2;
          uint64_t v367 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 16, v367))
          {
            memcpy(v83, v84, *(void *)(*(void *)(v315 - 8) + 64));
          }
          else
          {
            *(void *)uint64_t v83 = *(void *)v84;
            *((void *)v83 + 1) = *((void *)v84 + 1);
            *((void *)v83 + 2) = *((void *)v84 + 2);
            *((void *)v83 + 3) = *((void *)v84 + 3);
            *((void *)v83 + 4) = *((void *)v84 + 4);
            uint64_t v438 = *(int *)(v367 + 28);
            v1021 = &v83[v438];
            v960 = &v84[v438];
            __srcy = a1;
            uint64_t v439 = sub_253B07160();
            v886 = *(void (**)(char *, char *, uint64_t))(*(void *)(v439 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v440 = v439;
            a1 = __srcy;
            v886(v1021, v960, v440);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 16, v367);
          }
          a2 = v930;
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v315);
        }
        uint64_t v91 = v314;
        uint64_t v441 = *(int *)(v212 + 20);
        v442 = &v83[v441];
        v443 = &v84[v441];
        uint64_t v444 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v444 - 8) + 16))(v442, v443, v444);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v212);
      }
      uint64_t v445 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
      v446 = &v83[v445];
      v447 = &v84[v445];
      uint64_t v448 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v448 - 8) + 16))(v446, v447, v448);
      goto LABEL_277;
    case 0xAu:
      *(void *)uint64_t v83 = *(void *)v84;
      uint64_t v214 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
      __srcr = a1;
      v1009 = &v83[v214];
      uint64_t v215 = &v84[v214];
      uint64_t v216 = sub_253B07160();
      uint64_t v956 = v91;
      uint64_t v217 = *(void (**)(char *, char *, uint64_t))(*(void *)(v216 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v218 = v215;
      a1 = __srcr;
      v217(v1009, v218, v216);
      uint64_t v91 = v956;
      goto LABEL_277;
    default:
      uint64_t v941 = v91;
      __srca = a1;
      *uint64_t v83 = *v84;
      v83[1] = v84[1];
      v83[2] = v84[2];
      uint64_t v94 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
      uint64_t v95 = v94[7];
      uint64_t v96 = &v83[v95];
      uint64_t v97 = &v84[v95];
      uint64_t v98 = sub_253B08E50();
      v924 = a2;
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v97, 1, v98))
      {
        uint64_t v99 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v96, v97, *(void *)(*(void *)(v99 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16))(v96, v97, v98);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v96, 0, 1, v98);
      }
      uint64_t v251 = v94[8];
      uint64_t v252 = &v83[v251];
      uint64_t v253 = &v84[v251];
      uint64_t v254 = type metadata accessor for TranscriptProtoUndoContext(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v253, 1, v254))
      {
        uint64_t v255 = sub_253462A5C(&qword_269CE0450);
        memcpy(v252, v253, *(void *)(*(void *)(v255 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v252 = *(void *)v253;
        *((void *)v252 + 1) = *((void *)v253 + 1);
        *((void *)v252 + 2) = *((void *)v253 + 2);
        *((void *)v252 + 3) = *((void *)v253 + 3);
        *((void *)v252 + 4) = *((void *)v253 + 4);
        *((void *)v252 + 5) = *((void *)v253 + 5);
        uint64_t v325 = *(int *)(v254 + 28);
        v882 = &v253[v325];
        v906 = &v252[v325];
        uint64_t v326 = sub_253B07160();
        __dstd = *(void (**)(char *, char *, uint64_t))(*(void *)(v326 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __dstd(v906, v882, v326);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v252, 0, 1, v254);
      }
      uint64_t v327 = v94[9];
      uint64_t v328 = &v83[v327];
      uint64_t v329 = &v84[v327];
      uint64_t v330 = type metadata accessor for TranscriptProtoFollowUpAction(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v329, 1, v330))
      {
        uint64_t v331 = sub_253462A5C(&qword_269CE0468);
        memcpy(v328, v329, *(void *)(*(void *)(v331 - 8) + 64));
      }
      else
      {
        uint64_t v332 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v329, 1, v332))
        {
          uint64_t v333 = sub_253462A5C(&qword_269CE0460);
          memcpy(v328, v329, *(void *)(*(void *)(v333 - 8) + 64));
        }
        else
        {
          uint64_t v417 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
          uint64_t v1019 = v332;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v329, 1, v417))
          {
            uint64_t v418 = sub_253462A5C(&qword_269CE0458);
            memcpy(v328, v329, *(void *)(*(void *)(v418 - 8) + 64));
          }
          else
          {
            *(void *)uint64_t v328 = *(void *)v329;
            *((void *)v328 + 1) = *((void *)v329 + 1);
            uint64_t v912 = v417;
            uint64_t v469 = *((void *)v329 + 2);
            unint64_t v470 = *((void *)v329 + 3);
            swift_bridgeObjectRetain();
            sub_25348A9C8(v469, v470);
            *((void *)v328 + 2) = v469;
            *((void *)v328 + 3) = v470;
            *((void *)v328 + 4) = *((void *)v329 + 4);
            uint64_t v471 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
            v472 = &v328[v471];
            v473 = &v329[v471];
            uint64_t v474 = sub_253B07160();
            v475 = v472;
            uint64_t v332 = v1019;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v474 - 8) + 16))(v475, v473, v474);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v328, 0, 1, v912);
          }
          uint64_t v476 = *(int *)(v332 + 20);
          v477 = &v328[v476];
          v478 = &v329[v476];
          uint64_t v479 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v479 - 8) + 16))(v477, v478, v479);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v328, 0, 1, v1019);
        }
        uint64_t v480 = *(int *)(v330 + 20);
        v481 = &v328[v480];
        v482 = &v329[v480];
        uint64_t v483 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v483 - 8) + 16))(v481, v482, v483);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v328, 0, 1, v330);
      }
      uint64_t v484 = v94[10];
      v485 = &v83[v484];
      v486 = &v84[v484];
      *(void *)v485 = *(void *)v486;
      *((void *)v485 + 1) = *((void *)v486 + 1);
      uint64_t v487 = v94[11];
      v488 = &v83[v487];
      v489 = &v84[v487];
      uint64_t v490 = sub_253B07160();
      v491 = *(void (**)(char *, char *, uint64_t))(*(void *)(v490 - 8) + 16);
      swift_bridgeObjectRetain();
      v491(v488, v489, v490);
      uint64_t v91 = v941;
      swift_storeEnumTagMultiPayload();
      a1 = __srca;
LABEL_224:
      a2 = v924;
      goto LABEL_278;
  }
}

uint64_t sub_2535F2C0C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_25346CAF4();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

char *initializeWithTake for ResponseGenerationProtoStatementResultDigest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_253B08F30();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CDFA70);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = (int *)type metadata accessor for TranscriptProtoAction(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, (uint64_t)v11))
  {
    uint64_t v12 = sub_253462A5C(&qword_269CE0398);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    v9[16] = v10[16];
    *((void *)v9 + 3) = *((void *)v10 + 3);
    uint64_t v13 = v11[7];
    uint64_t v14 = &v9[v13];
    int v15 = &v10[v13];
    uint64_t v16 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16))
    {
      uint64_t v17 = sub_253462A5C(&qword_26B249528);
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
      *(_OWORD *)(v14 + 8) = *(_OWORD *)(v15 + 8);
      uint64_t v18 = *(int *)(v16 + 24);
      uint64_t v19 = &v14[v18];
      uint64_t v20 = &v15[v18];
      uint64_t v21 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v14, 0, 1, v16);
    }
    *(_OWORD *)&v9[v11[8]] = *(_OWORD *)&v10[v11[8]];
    *(_OWORD *)&v9[v11[9]] = *(_OWORD *)&v10[v11[9]];
    *(_OWORD *)&v9[v11[10]] = *(_OWORD *)&v10[v11[10]];
    uint64_t v22 = v11[11];
    uint64_t v23 = &v9[v22];
    uint64_t v24 = &v10[v22];
    uint64_t v25 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
    {
      uint64_t v26 = sub_253462A5C(&qword_269CE0448);
      memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      long long v27 = *((_OWORD *)v24 + 1);
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v27;
      uint64_t v28 = *(int *)(v25 + 24);
      uint64_t v29 = &v23[v28];
      uint64_t v30 = &v24[v28];
      uint64_t v31 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v25);
    }
    uint64_t v32 = v11[12];
    uint64_t v33 = &v9[v32];
    uint64_t v34 = &v10[v32];
    uint64_t v35 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, (uint64_t)v11);
  }
  uint64_t v36 = a3[6];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  uint64_t v39 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, v39))
  {
    uint64_t v40 = sub_253462A5C(&qword_269CE0388);
    memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_96;
  }
  uint64_t v41 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, v41))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v292 = a2;
        uint64_t v296 = a3;
        *(void *)uint64_t v37 = *(void *)v38;
        uint64_t v49 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v50 = *(int *)(v49 + 20);
        uint64_t v51 = &v37[v50];
        uint64_t v52 = &v38[v50];
        uint64_t v53 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v53))
        {
          uint64_t v54 = sub_253462A5C(&qword_269CE0480);
          memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
          a2 = v292;
        }
        else
        {
          uint64_t v95 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          uint64_t v286 = v49;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v95))
          {
            uint64_t v96 = sub_253462A5C(&qword_269CE0478);
            memcpy(v51, v52, *(void *)(*(void *)(v96 - 8) + 64));
          }
          else
          {
            uint64_t v281 = v95;
            *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
            v51[16] = v52[16];
            uint64_t v127 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v128 = *(int *)(v127 + 24);
            __dst = &v51[v128];
            uint64_t v129 = &v52[v128];
            uint64_t v280 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v129, 1, v280))
            {
              uint64_t v130 = sub_253462A5C(&qword_269CE0470);
              memcpy(__dst, v129, *(void *)(*(void *)(v130 - 8) + 64));
            }
            else
            {
              char *__dst = *v129;
              uint64_t v150 = *(int *)(v280 + 20);
              uint64_t v279 = v127;
              uint64_t v151 = &__dst[v150];
              uint64_t v152 = &v129[v150];
              uint64_t v153 = sub_253B07160();
              uint64_t v154 = v151;
              uint64_t v127 = v279;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 32))(v154, v152, v153);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v280);
            }
            uint64_t v155 = *(int *)(v127 + 28);
            uint64_t v156 = &v51[v155];
            uint64_t v157 = &v52[v155];
            uint64_t v158 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 32))(v156, v157, v158);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v51, 0, 1, v281);
          }
          uint64_t v159 = *(int *)(v53 + 20);
          uint64_t v160 = &v51[v159];
          uint64_t v161 = &v52[v159];
          uint64_t v162 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 32))(v160, v161, v162);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v51, 0, 1, v53);
          uint64_t v49 = v286;
          a2 = v292;
        }
        uint64_t v163 = *(int *)(v49 + 24);
        uint64_t v164 = &v37[v163];
        uint64_t v165 = &v38[v163];
        uint64_t v166 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 32))(v164, v165, v166);
        goto LABEL_76;
      case 2u:
        *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
        uint64_t v55 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
        uint64_t v56 = &v37[v55];
        uint64_t v57 = &v38[v55];
        uint64_t v58 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
        goto LABEL_93;
      case 3u:
        uint64_t v296 = a3;
        *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
        *((void *)v37 + 2) = *((void *)v38 + 2);
        v37[24] = v38[24];
        uint64_t v59 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        uint64_t v60 = *(int *)(v59 + 24);
        uint64_t v61 = &v37[v60];
        uint64_t v62 = &v38[v60];
        uint64_t v63 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v62, 1, v63)) {
          goto LABEL_24;
        }
        goto LABEL_41;
      case 4u:
        *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
        uint64_t v65 = *((void *)v38 + 3);
        *((void *)v37 + 2) = *((void *)v38 + 2);
        *((void *)v37 + 3) = v65;
        v37[32] = v38[32];
        uint64_t v66 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        uint64_t v67 = &v37[v66];
        uint64_t v68 = &v38[v66];
        uint64_t v69 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v67, v68, v69);
        goto LABEL_93;
      case 5u:
        uint64_t v296 = a3;
        *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
        v37[16] = v38[16];
        uint64_t v59 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
        uint64_t v70 = *(int *)(v59 + 24);
        uint64_t v61 = &v37[v70];
        uint64_t v62 = &v38[v70];
        uint64_t v63 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v62, 1, v63))
        {
LABEL_24:
          uint64_t v64 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
LABEL_41:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v61, 0, 1, v63);
        }
        uint64_t v97 = *(int *)(v59 + 28);
        uint64_t v98 = &v37[v97];
        uint64_t v99 = &v38[v97];
        uint64_t v100 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v98, v99, v100);
        goto LABEL_76;
      case 6u:
        uint64_t v296 = a3;
        *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
        uint64_t v71 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v72 = *(int *)(v71 + 20);
        int v73 = &v37[v72];
        int v74 = &v38[v72];
        uint64_t v75 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v74, 1, v75))
        {
          uint64_t v76 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v73, v74, *(void *)(*(void *)(v76 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v73, 0, 1, v75);
        }
        uint64_t v101 = *(int *)(v71 + 24);
        uint64_t v102 = &v37[v101];
        uint64_t v103 = &v38[v101];
        uint64_t v104 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 32))(v102, v103, v104);
LABEL_76:
        swift_storeEnumTagMultiPayload();
        a3 = v296;
        goto LABEL_94;
      case 7u:
        uint64_t v77 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, v77))
        {
          uint64_t v78 = sub_253462A5C(&qword_269CE0498);
          memcpy(v37, v38, *(void *)(*(void *)(v78 - 8) + 64));
          goto LABEL_92;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 2:
            uint64_t v297 = a3;
            uint64_t v133 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, v133))
            {
              uint64_t v134 = sub_253462A5C(&qword_269CE0490);
              memcpy(v37, v38, *(void *)(*(void *)(v134 - 8) + 64));
            }
            else
            {
              int v187 = swift_getEnumCaseMultiPayload();
              if (v187 == 1)
              {
                uint64_t v293 = a2;
                uint64_t v192 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, v192))
                {
                  uint64_t v193 = sub_253462A5C(&qword_269CE0488);
                  memcpy(v37, v38, *(void *)(*(void *)(v193 - 8) + 64));
                }
                else
                {
                  *uint64_t v37 = *v38;
                  uint64_t v194 = *(int *)(v192 + 20);
                  uint64_t v195 = &v37[v194];
                  uint64_t v196 = &v38[v194];
                  uint64_t v197 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 32))(v195, v196, v197);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v37, 0, 1, v192);
                }
                uint64_t v198 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0)
                              + 20);
                uint64_t v199 = &v37[v198];
                uint64_t v200 = &v38[v198];
                uint64_t v201 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v201 - 8) + 32))(v199, v200, v201);
                swift_storeEnumTagMultiPayload();
                a2 = v293;
              }
              else if (v187)
              {
                memcpy(v37, v38, *(void *)(*(void *)(v133 - 8) + 64));
              }
              else
              {
                *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
                uint64_t v188 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
                uint64_t v189 = &v37[v188];
                uint64_t v190 = &v38[v188];
                uint64_t v191 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 32))(v189, v190, v191);
                swift_storeEnumTagMultiPayload();
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v37, 0, 1, v133);
            }
            uint64_t v202 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
            uint64_t v203 = &v37[v202];
            uint64_t v204 = &v38[v202];
            uint64_t v205 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 32))(v203, v204, v205);
            swift_storeEnumTagMultiPayload();
            a3 = v297;
            break;
          case 1:
            *uint64_t v37 = *v38;
            uint64_t v135 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v136 = &v37[v135];
            uint64_t v137 = &v38[v135];
            uint64_t v138 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 32))(v136, v137, v138);
            goto LABEL_66;
          case 0:
            *uint64_t v37 = *v38;
            uint64_t v106 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v107 = &v37[v106];
            uint64_t v108 = &v38[v106];
            uint64_t v109 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 32))(v107, v108, v109);
LABEL_66:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v37, v38, *(void *)(*(void *)(v77 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v37, 0, 1, v77);
LABEL_92:
        uint64_t v206 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
        uint64_t v207 = &v37[v206];
        uint64_t v208 = &v38[v206];
        uint64_t v209 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v209 - 8) + 32))(v207, v208, v209);
LABEL_93:
        swift_storeEnumTagMultiPayload();
LABEL_94:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v37, 0, 1, v41);
        goto LABEL_95;
      case 8u:
        *(void *)uint64_t v37 = *(void *)v38;
        *(_OWORD *)(v37 + 8) = *(_OWORD *)(v38 + 8);
        uint64_t v79 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        uint64_t v80 = &v37[v79];
        uint64_t v81 = &v38[v79];
        uint64_t v82 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v80, v81, v82);
        goto LABEL_93;
      case 9u:
        uint64_t v83 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, v83))
        {
          uint64_t v84 = sub_253462A5C(&qword_269CE04A8);
          memcpy(v37, v38, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          uint64_t v110 = a3;
          uint64_t v111 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, v111))
          {
            uint64_t v112 = sub_253462A5C(&qword_269CE04A0);
            memcpy(v37, v38, *(void *)(*(void *)(v112 - 8) + 64));
          }
          else
          {
            uint64_t v125 = a2;
            uint64_t v126 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 16, v126))
            {
              memcpy(v37, v38, *(void *)(*(void *)(v111 - 8) + 64));
            }
            else
            {
              long long v139 = *((_OWORD *)v38 + 1);
              *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
              *((_OWORD *)v37 + 1) = v139;
              *((void *)v37 + 4) = *((void *)v38 + 4);
              uint64_t v140 = *(int *)(v126 + 28);
              uint64_t v298 = &v37[v140];
              uint64_t v289 = &v38[v140];
              uint64_t v141 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 32))(v298, v289, v141);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v37, 0, 16, v126);
            }
            a2 = v125;
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v37, 0, 1, v111);
          }
          a3 = v110;
          uint64_t v142 = *(int *)(v83 + 20);
          uint64_t v143 = &v37[v142];
          uint64_t v144 = &v38[v142];
          uint64_t v145 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 32))(v143, v144, v145);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v37, 0, 1, v83);
        }
        uint64_t v146 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
        uint64_t v147 = &v37[v146];
        uint64_t v148 = &v38[v146];
        uint64_t v149 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 32))(v147, v148, v149);
        goto LABEL_93;
      case 0xAu:
        *(void *)uint64_t v37 = *(void *)v38;
        uint64_t v85 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
        int v86 = &v37[v85];
        int v87 = &v38[v85];
        uint64_t v88 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v86, v87, v88);
        goto LABEL_93;
      default:
        uint64_t v295 = a3;
        *uint64_t v37 = *v38;
        *(_WORD *)(v37 + 1) = *(_WORD *)(v38 + 1);
        uint64_t v43 = type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v44 = *(int *)(v43 + 28);
        uint64_t v45 = &v37[v44];
        uint64_t v46 = &v38[v44];
        uint64_t v47 = sub_253B08E50();
        uint64_t v291 = a2;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v46, 1, v47))
        {
          uint64_t v48 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v45, 0, 1, v47);
        }
        uint64_t v89 = v43;
        uint64_t v90 = *(int *)(v43 + 32);
        uint64_t v91 = &v37[v90];
        int v92 = &v38[v90];
        uint64_t v93 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v92, 1, v93))
        {
          uint64_t v94 = sub_253462A5C(&qword_269CE0450);
          memcpy(v91, v92, *(void *)(*(void *)(v94 - 8) + 64));
        }
        else
        {
          long long v113 = *((_OWORD *)v92 + 1);
          *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
          *((_OWORD *)v91 + 1) = v113;
          *((_OWORD *)v91 + 2) = *((_OWORD *)v92 + 2);
          uint64_t v114 = *(int *)(v93 + 28);
          uint64_t v287 = &v91[v114];
          uint64_t v115 = &v92[v114];
          uint64_t v116 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 32))(v287, v115, v116);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v91, 0, 1, v93);
        }
        uint64_t v117 = v89;
        uint64_t v118 = *(int *)(v89 + 36);
        uint64_t v119 = &v37[v118];
        uint64_t v120 = &v38[v118];
        uint64_t v121 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v120, 1, v121))
        {
          uint64_t v122 = sub_253462A5C(&qword_269CE0468);
          memcpy(v119, v120, *(void *)(*(void *)(v122 - 8) + 64));
        }
        else
        {
          uint64_t v123 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          uint64_t v288 = v121;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v120, 1, v123))
          {
            uint64_t v124 = sub_253462A5C(&qword_269CE0460);
            memcpy(v119, v120, *(void *)(*(void *)(v124 - 8) + 64));
          }
          else
          {
            uint64_t v131 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            __dsta = v119;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v120, 1, v131))
            {
              uint64_t v132 = sub_253462A5C(&qword_269CE0458);
              memcpy(v119, v120, *(void *)(*(void *)(v132 - 8) + 64));
            }
            else
            {
              long long v167 = *((_OWORD *)v120 + 1);
              *(_OWORD *)uint64_t v119 = *(_OWORD *)v120;
              *((_OWORD *)v119 + 1) = v167;
              *((void *)v119 + 4) = *((void *)v120 + 4);
              uint64_t v168 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              uint64_t v282 = v131;
              uint64_t v169 = &v119[v168];
              uint64_t v170 = &v120[v168];
              uint64_t v171 = sub_253B07160();
              uint64_t v172 = v170;
              uint64_t v119 = __dsta;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 32))(v169, v172, v171);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v282);
            }
            uint64_t v173 = *(int *)(v123 + 20);
            uint64_t v174 = &v119[v173];
            uint64_t v175 = &v120[v173];
            uint64_t v176 = sub_253B07160();
            uint64_t v177 = v175;
            uint64_t v119 = __dsta;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 32))(v174, v177, v176);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v123);
            uint64_t v121 = v288;
          }
          uint64_t v178 = *(int *)(v121 + 20);
          uint64_t v179 = &v119[v178];
          uint64_t v180 = (uint64_t)v119;
          uint64_t v181 = &v120[v178];
          uint64_t v182 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 32))(v179, v181, v182);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v180, 0, 1, v288);
        }
        *(_OWORD *)&v37[*(int *)(v117 + 40)] = *(_OWORD *)&v38[*(int *)(v117 + 40)];
        uint64_t v183 = *(int *)(v117 + 44);
        uint64_t v184 = &v37[v183];
        uint64_t v185 = &v38[v183];
        uint64_t v186 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v186 - 8) + 32))(v184, v185, v186);
        swift_storeEnumTagMultiPayload();
        a2 = v291;
        a3 = v295;
        goto LABEL_94;
    }
  }
  uint64_t v42 = sub_253462A5C(&qword_269CE04B0);
  memcpy(v37, v38, *(void *)(*(void *)(v42 - 8) + 64));
LABEL_95:
  uint64_t v210 = *(int *)(v39 + 20);
  uint64_t v211 = &v37[v210];
  uint64_t v212 = &v38[v210];
  uint64_t v213 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v213 - 8) + 32))(v211, v212, v213);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v37, 0, 1, v39);
LABEL_96:
  uint64_t v214 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v215 = &a1[v214];
  uint64_t v216 = &a2[v214];
  uint64_t v217 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v216, 1, (uint64_t)v217))
  {
    uint64_t v218 = sub_253462A5C(&qword_269CE0378);
    memcpy(v215, v216, *(void *)(*(void *)(v218 - 8) + 64));
  }
  else
  {
    uint64_t v299 = a3;
    *(void *)uint64_t v215 = *(void *)v216;
    uint64_t v219 = v217[5];
    int v220 = &v215[v219];
    uint64_t v221 = &v216[v219];
    uint64_t v222 = type metadata accessor for TranscriptProtoResponseDialog(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v221, 1, v222))
    {
      uint64_t v223 = sub_253462A5C(&qword_269CE04B8);
      memcpy(v220, v221, *(void *)(*(void *)(v223 - 8) + 64));
    }
    else
    {
      long long v224 = *((_OWORD *)v221 + 1);
      *(_OWORD *)int v220 = *(_OWORD *)v221;
      *((_OWORD *)v220 + 1) = v224;
      long long v225 = *((_OWORD *)v221 + 3);
      *((_OWORD *)v220 + 2) = *((_OWORD *)v221 + 2);
      *((_OWORD *)v220 + 3) = v225;
      uint64_t v226 = *(int *)(v222 + 32);
      uint64_t v227 = &v220[v226];
      uint64_t v228 = &v221[v226];
      uint64_t v229 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v229 - 8) + 32))(v227, v228, v229);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v220, 0, 1, v222);
    }
    uint64_t v230 = v217[6];
    uint64_t v231 = &v215[v230];
    uint64_t v232 = &v216[v230];
    uint64_t v233 = type metadata accessor for TranscriptProtoResponseVisual(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v232, 1, v233))
    {
      uint64_t v234 = sub_253462A5C(&qword_269CE04C8);
      memcpy(v231, v232, *(void *)(*(void *)(v234 - 8) + 64));
    }
    else
    {
      uint64_t v294 = a2;
      *(_OWORD *)uint64_t v231 = *(_OWORD *)v232;
      uint64_t v235 = *(int *)(v233 + 24);
      uint64_t v236 = &v231[v235];
      uint64_t v237 = &v232[v235];
      uint64_t v238 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v237, 1, v238))
      {
        uint64_t v239 = sub_253462A5C(&qword_269CE04C0);
        memcpy(v236, v237, *(void *)(*(void *)(v239 - 8) + 64));
      }
      else
      {
        char *v236 = *v237;
        uint64_t v240 = *(int *)(v238 + 20);
        uint64_t v290 = &v236[v240];
        uint64_t v241 = &v237[v240];
        uint64_t v242 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v242 - 8) + 32))(v290, v241, v242);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v236, 0, 1, v238);
      }
      uint64_t v243 = *(int *)(v233 + 28);
      uint64_t v244 = &v231[v243];
      uint64_t v245 = &v232[v243];
      uint64_t v246 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v246 - 8) + 32))(v244, v245, v246);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v231, 0, 1, v233);
      a2 = v294;
    }
    *(_OWORD *)&v215[v217[7]] = *(_OWORD *)&v216[v217[7]];
    *(_OWORD *)&v215[v217[8]] = *(_OWORD *)&v216[v217[8]];
    v215[v217[9]] = v216[v217[9]];
    v215[v217[10]] = v216[v217[10]];
    uint64_t v247 = v217[11];
    uint64_t v248 = &v215[v247];
    uint64_t v249 = &v216[v247];
    uint64_t v250 = type metadata accessor for TranscriptProtoUIType(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v249, 1, v250))
    {
      uint64_t v251 = sub_253462A5C(&qword_269CE04D0);
      memcpy(v248, v249, *(void *)(*(void *)(v251 - 8) + 64));
    }
    else
    {
      uint64_t v252 = a2;
      uint64_t v253 = type metadata accessor for TranscriptProtoUitype(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v249, 1, v253))
      {
        uint64_t v254 = sub_253462A5C(&qword_269CDCC08);
        memcpy(v248, v249, *(void *)(*(void *)(v254 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *(_OWORD *)uint64_t v248 = *(_OWORD *)v249;
            uint64_t v257 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
            goto LABEL_116;
          case 2u:
            long long v258 = *((_OWORD *)v249 + 1);
            *(_OWORD *)uint64_t v248 = *(_OWORD *)v249;
            *((_OWORD *)v248 + 1) = v258;
            uint64_t v256 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
            break;
          case 3u:
            *(_OWORD *)uint64_t v248 = *(_OWORD *)v249;
            uint64_t v257 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_116:
            uint64_t v256 = *(int *)(v257 + 20);
            break;
          default:
            long long v255 = *((_OWORD *)v249 + 1);
            *(_OWORD *)uint64_t v248 = *(_OWORD *)v249;
            *((_OWORD *)v248 + 1) = v255;
            *((_OWORD *)v248 + 2) = *((_OWORD *)v249 + 2);
            uint64_t v256 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
            break;
        }
        __dstb = &v248[v256];
        uint64_t v259 = &v249[v256];
        uint64_t v260 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v260 - 8) + 32))(__dstb, v259, v260);
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v248, 0, 1, v253);
      }
      a2 = v252;
      uint64_t v261 = *(int *)(v250 + 20);
      uint64_t v262 = &v248[v261];
      uint64_t v263 = &v249[v261];
      uint64_t v264 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v264 - 8) + 32))(v262, v263, v264);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v248, 0, 1, v250);
    }
    uint64_t v265 = v217[12];
    uint64_t v266 = &v215[v265];
    uint64_t v267 = &v216[v265];
    uint64_t v268 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v268 - 8) + 32))(v266, v267, v268);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v215, 0, 1, (uint64_t)v217);
    a3 = v299;
  }
  uint64_t v269 = a3[9];
  uint64_t v270 = &a1[v269];
  uint64_t v271 = &a2[v269];
  uint64_t v272 = sub_253B08F00();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v271, 1, v272))
  {
    uint64_t v273 = sub_253462A5C(&qword_269CE0368);
    memcpy(v270, v271, *(void *)(*(void *)(v273 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v272 - 8) + 32))(v270, v271, v272);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v270, 0, 1, v272);
  }
  uint64_t v274 = a3[10];
  uint64_t v275 = &a1[v274];
  uint64_t v276 = &a2[v274];
  uint64_t v277 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v277 - 8) + 32))(v275, v276, v277);
  return a1;
}

char *assignWithTake for ResponseGenerationProtoStatementResultDigest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_253B08F30();
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_253462A5C(&qword_269CDFA70);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = (uint64_t)&a1[v11];
  uint64_t v13 = (uint64_t)&a2[v11];
  uint64_t v14 = (int *)type metadata accessor for TranscriptProtoAction(0);
  int v15 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v12, 1, (uint64_t)v14);
  int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v13, 1, (uint64_t)v14);
  if (!v15)
  {
    if (v16)
    {
      sub_2535F2C0C(v12, (void (*)(void))type metadata accessor for TranscriptProtoAction);
      goto LABEL_13;
    }
    v876 = a3;
    uint64_t v24 = a2;
    uint64_t v25 = *(void *)(v13 + 8);
    *(void *)uint64_t v12 = *(void *)v13;
    *(void *)(v12 + 8) = v25;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
    *(void *)(v12 + 24) = *(void *)(v13 + 24);
    swift_bridgeObjectRelease();
    uint64_t v26 = v14[7];
    long long v27 = (char *)(v12 + v26);
    uint64_t v28 = (char *)(v13 + v26);
    uint64_t v29 = type metadata accessor for TranscriptProtoStatementID(0);
    int v30 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v29);
    int v31 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v29);
    if (v30)
    {
      if (!v31)
      {
        *(_DWORD *)long long v27 = *(_DWORD *)v28;
        *(_OWORD *)(v27 + 8) = *(_OWORD *)(v28 + 8);
        uint64_t v32 = *(int *)(v29 + 24);
        uint64_t v33 = &v27[v32];
        uint64_t v34 = &v28[v32];
        uint64_t v35 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v27, 0, 1, v29);
        goto LABEL_26;
      }
    }
    else
    {
      if (!v31)
      {
        *(_DWORD *)long long v27 = *(_DWORD *)v28;
        uint64_t v111 = *((void *)v28 + 2);
        *((void *)v27 + 1) = *((void *)v28 + 1);
        *((void *)v27 + 2) = v111;
        swift_bridgeObjectRelease();
        uint64_t v112 = *(int *)(v29 + 24);
        long long v113 = &v27[v112];
        uint64_t v114 = &v28[v112];
        uint64_t v115 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 40))(v113, v114, v115);
LABEL_26:
        uint64_t v55 = v14[8];
        uint64_t v56 = (void *)(v12 + v55);
        uint64_t v57 = (uint64_t *)(v13 + v55);
        uint64_t v59 = *v57;
        uint64_t v58 = v57[1];
        *uint64_t v56 = v59;
        v56[1] = v58;
        swift_bridgeObjectRelease();
        uint64_t v60 = v14[9];
        uint64_t v61 = (void *)(v12 + v60);
        uint64_t v62 = (uint64_t *)(v13 + v60);
        uint64_t v64 = *v62;
        uint64_t v63 = v62[1];
        *uint64_t v61 = v64;
        v61[1] = v63;
        swift_bridgeObjectRelease();
        uint64_t v65 = v14[10];
        uint64_t v66 = (void *)(v12 + v65);
        uint64_t v67 = (uint64_t *)(v13 + v65);
        uint64_t v69 = *v67;
        uint64_t v68 = v67[1];
        *uint64_t v66 = v69;
        v66[1] = v68;
        swift_bridgeObjectRelease();
        uint64_t v70 = v14[11];
        uint64_t v71 = (_OWORD *)(v12 + v70);
        uint64_t v72 = (_OWORD *)(v13 + v70);
        uint64_t v73 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
        int v74 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v71, 1, v73);
        int v75 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v72, 1, v73);
        if (v74)
        {
          if (!v75)
          {
            long long v76 = v72[1];
            *uint64_t v71 = *v72;
            v71[1] = v76;
            uint64_t v77 = *(int *)(v73 + 24);
            uint64_t v78 = (char *)v71 + v77;
            uint64_t v79 = (char *)v72 + v77;
            uint64_t v80 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v78, v79, v80);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v71, 0, 1, v73);
LABEL_32:
            a2 = v24;
            uint64_t v82 = v14[12];
            uint64_t v83 = v12 + v82;
            uint64_t v84 = v13 + v82;
            uint64_t v85 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 40))(v83, v84, v85);
            a3 = v876;
            goto LABEL_33;
          }
        }
        else
        {
          if (!v75)
          {
            uint64_t v116 = *((void *)v72 + 1);
            *(void *)uint64_t v71 = *(void *)v72;
            *((void *)v71 + 1) = v116;
            swift_bridgeObjectRelease();
            uint64_t v117 = *((void *)v72 + 3);
            *((void *)v71 + 2) = *((void *)v72 + 2);
            *((void *)v71 + 3) = v117;
            swift_bridgeObjectRelease();
            uint64_t v118 = *(int *)(v73 + 24);
            uint64_t v119 = (char *)v71 + v118;
            uint64_t v120 = (char *)v72 + v118;
            uint64_t v121 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 40))(v119, v120, v121);
            goto LABEL_32;
          }
          sub_2535F2C0C((uint64_t)v71, (void (*)(void))type metadata accessor for TranscriptProtoGlobalToolIdentifier);
        }
        uint64_t v81 = sub_253462A5C(&qword_269CE0448);
        memcpy(v71, v72, *(void *)(*(void *)(v81 - 8) + 64));
        goto LABEL_32;
      }
      sub_2535F2C0C((uint64_t)v27, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
    }
    uint64_t v54 = sub_253462A5C(&qword_26B249528);
    memcpy(v27, v28, *(void *)(*(void *)(v54 - 8) + 64));
    goto LABEL_26;
  }
  if (v16)
  {
LABEL_13:
    uint64_t v23 = sub_253462A5C(&qword_269CE0398);
    memcpy((void *)v12, (const void *)v13, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_33;
  }
  uint64_t v17 = a3;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  *(void *)(v12 + 24) = *(void *)(v13 + 24);
  uint64_t v18 = v14[7];
  uint64_t v19 = (_DWORD *)(v12 + v18);
  uint64_t v20 = (_DWORD *)(v13 + v18);
  uint64_t v21 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21))
  {
    uint64_t v22 = sub_253462A5C(&qword_26B249528);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    _DWORD *v19 = *v20;
    *(_OWORD *)(v19 + 2) = *(_OWORD *)(v20 + 2);
    uint64_t v36 = *(int *)(v21 + 24);
    uint64_t v37 = (char *)v19 + v36;
    uint64_t v38 = (char *)v20 + v36;
    uint64_t v39 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v21);
  }
  *(_OWORD *)(v12 + v14[8]) = *(_OWORD *)(v13 + v14[8]);
  *(_OWORD *)(v12 + v14[9]) = *(_OWORD *)(v13 + v14[9]);
  *(_OWORD *)(v12 + v14[10]) = *(_OWORD *)(v13 + v14[10]);
  uint64_t v40 = v14[11];
  uint64_t v41 = (_OWORD *)(v12 + v40);
  uint64_t v42 = (_OWORD *)(v13 + v40);
  uint64_t v43 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v42, 1, v43))
  {
    uint64_t v44 = sub_253462A5C(&qword_269CE0448);
    memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    long long v45 = v42[1];
    _OWORD *v41 = *v42;
    v41[1] = v45;
    uint64_t v46 = *(int *)(v43 + 24);
    uint64_t v47 = (char *)v41 + v46;
    uint64_t v48 = (char *)v42 + v46;
    uint64_t v49 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v41, 0, 1, v43);
  }
  a3 = v17;
  uint64_t v50 = v14[12];
  uint64_t v51 = v12 + v50;
  uint64_t v52 = v13 + v50;
  uint64_t v53 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v12, 0, 1, (uint64_t)v14);
LABEL_33:
  uint64_t v86 = a3[6];
  int v87 = &a1[v86];
  uint64_t v88 = &a2[v86];
  uint64_t v89 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  int v90 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v87, 1, v89);
  int v91 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v89);
  if (v90)
  {
    if (!v91)
    {
      uint64_t v92 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v92))
      {
        uint64_t v93 = sub_253462A5C(&qword_269CE04B0);
        memcpy(v87, v88, *(void *)(*(void *)(v93 - 8) + 64));
LABEL_264:
        uint64_t v591 = *(int *)(v89 + 20);
        uint64_t v592 = &v87[v591];
        uint64_t v593 = &v88[v591];
        uint64_t v594 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v594 - 8) + 32))(v592, v593, v594);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v89);
        goto LABEL_279;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          v867 = a2;
          v880 = a3;
          uint64_t v128 = a1;
          *(void *)int v87 = *(void *)v88;
          uint64_t v129 = type metadata accessor for TranscriptProtoActionConfirmation(0);
          uint64_t v130 = *(int *)(v129 + 20);
          uint64_t v131 = &v87[v130];
          uint64_t v132 = &v88[v130];
          uint64_t v133 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v132, 1, v133))
          {
            uint64_t v134 = sub_253462A5C(&qword_269CE0480);
            memcpy(v131, v132, *(void *)(*(void *)(v134 - 8) + 64));
            a1 = v128;
          }
          else
          {
            __src = (void *)v129;
            uint64_t v221 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v132, 1, v221))
            {
              uint64_t v222 = sub_253462A5C(&qword_269CE0478);
              memcpy(v131, v132, *(void *)(*(void *)(v222 - 8) + 64));
            }
            else
            {
              uint64_t v840 = v221;
              *(_OWORD *)uint64_t v131 = *(_OWORD *)v132;
              v131[16] = v132[16];
              uint64_t v319 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
              uint64_t v320 = *(int *)(v319 + 24);
              __dst = &v131[v320];
              uint64_t v321 = &v132[v320];
              v837 = (int *)type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v321, 1, (uint64_t)v837))
              {
                uint64_t v322 = sub_253462A5C(&qword_269CE0470);
                memcpy(__dst, v321, *(void *)(*(void *)(v322 - 8) + 64));
              }
              else
              {
                char *__dst = *v321;
                uint64_t v376 = v837[5];
                uint64_t v835 = v319;
                uint64_t v377 = &__dst[v376];
                uint64_t v378 = &v321[v376];
                uint64_t v379 = sub_253B07160();
                uint64_t v380 = v377;
                uint64_t v319 = v835;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v379 - 8) + 32))(v380, v378, v379);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, (uint64_t)v837);
              }
              uint64_t v381 = *(int *)(v319 + 28);
              uint64_t v382 = &v131[v381];
              uint64_t v383 = &v132[v381];
              uint64_t v384 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v384 - 8) + 32))(v382, v383, v384);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v131, 0, 1, v840);
            }
            uint64_t v385 = *(int *)(v133 + 20);
            uint64_t v386 = &v131[v385];
            uint64_t v387 = &v132[v385];
            uint64_t v388 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v388 - 8) + 32))(v386, v387, v388);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v131, 0, 1, v133);
            a1 = v128;
            uint64_t v129 = (uint64_t)__src;
          }
          uint64_t v389 = *(int *)(v129 + 24);
          uint64_t v390 = &v87[v389];
          v391 = &v88[v389];
          uint64_t v392 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v392 - 8) + 32))(v390, v391, v392);
          swift_storeEnumTagMultiPayload();
          a2 = v867;
          a3 = v880;
          goto LABEL_263;
        case 2u:
          *(_OWORD *)int v87 = *(_OWORD *)v88;
          uint64_t v135 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
          uint64_t v136 = &v87[v135];
          uint64_t v137 = &v88[v135];
          uint64_t v138 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 32))(v136, v137, v138);
          goto LABEL_73;
        case 3u:
          uint64_t v881 = a3;
          long long v139 = a2;
          *(_OWORD *)int v87 = *(_OWORD *)v88;
          *((void *)v87 + 2) = *((void *)v88 + 2);
          v87[24] = v88[24];
          uint64_t v140 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
          uint64_t v141 = *(int *)(v140 + 24);
          uint64_t v142 = &v87[v141];
          uint64_t v143 = &v88[v141];
          uint64_t v144 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v143, 1, v144)) {
            goto LABEL_61;
          }
          goto LABEL_95;
        case 4u:
          *(_OWORD *)int v87 = *(_OWORD *)v88;
          uint64_t v146 = *((void *)v88 + 3);
          *((void *)v87 + 2) = *((void *)v88 + 2);
          *((void *)v87 + 3) = v146;
          v87[32] = v88[32];
          uint64_t v147 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
          uint64_t v148 = &v87[v147];
          uint64_t v149 = &v88[v147];
          uint64_t v150 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 32))(v148, v149, v150);
          goto LABEL_73;
        case 5u:
          uint64_t v881 = a3;
          long long v139 = a2;
          *(_OWORD *)int v87 = *(_OWORD *)v88;
          v87[16] = v88[16];
          uint64_t v140 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
          uint64_t v151 = *(int *)(v140 + 24);
          uint64_t v142 = &v87[v151];
          uint64_t v143 = &v88[v151];
          uint64_t v144 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v143, 1, v144))
          {
LABEL_61:
            uint64_t v145 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v142, v143, *(void *)(*(void *)(v145 - 8) + 64));
          }
          else
          {
LABEL_95:
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 32))(v142, v143, v144);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v142, 0, 1, v144);
          }
          uint64_t v223 = *(int *)(v140 + 28);
          long long v224 = &v87[v223];
          long long v225 = &v88[v223];
          uint64_t v226 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v226 - 8) + 32))(v224, v225, v226);
          goto LABEL_100;
        case 6u:
          uint64_t v881 = a3;
          long long v139 = a2;
          *(_OWORD *)int v87 = *(_OWORD *)v88;
          uint64_t v152 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
          uint64_t v153 = *(int *)(v152 + 20);
          uint64_t v154 = &v87[v153];
          uint64_t v155 = &v88[v153];
          uint64_t v156 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v155, 1, v156))
          {
            uint64_t v157 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v154, v155, *(void *)(*(void *)(v157 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 32))(v154, v155, v156);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v154, 0, 1, v156);
          }
          uint64_t v227 = *(int *)(v152 + 24);
          uint64_t v228 = &v87[v227];
          uint64_t v229 = &v88[v227];
          uint64_t v230 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v230 - 8) + 32))(v228, v229, v230);
LABEL_100:
          swift_storeEnumTagMultiPayload();
          a2 = v139;
          a3 = v881;
          goto LABEL_263;
        case 7u:
          uint64_t v158 = a3;
          uint64_t v159 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v159))
          {
            uint64_t v160 = sub_253462A5C(&qword_269CE0498);
            memcpy(v87, v88, *(void *)(*(void *)(v160 - 8) + 64));
            goto LABEL_261;
          }
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          switch(EnumCaseMultiPayload)
          {
            case 2:
              v870 = a2;
              uint64_t v340 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v340))
              {
                uint64_t v341 = sub_253462A5C(&qword_269CE0490);
                memcpy(v87, v88, *(void *)(*(void *)(v341 - 8) + 64));
              }
              else
              {
                int v447 = swift_getEnumCaseMultiPayload();
                if (v447 == 1)
                {
                  v860 = a1;
                  uint64_t v518 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
                  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v518))
                  {
                    uint64_t v519 = sub_253462A5C(&qword_269CE0488);
                    memcpy(v87, v88, *(void *)(*(void *)(v519 - 8) + 64));
                  }
                  else
                  {
                    *int v87 = *v88;
                    uint64_t v575 = *(int *)(v518 + 20);
                    v576 = &v87[v575];
                    v577 = &v88[v575];
                    uint64_t v578 = sub_253B07160();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v578 - 8) + 32))(v576, v577, v578);
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v518);
                  }
                  uint64_t v579 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0)
                                + 20);
                  uint64_t v580 = &v87[v579];
                  uint64_t v581 = &v88[v579];
                  uint64_t v582 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v582 - 8) + 32))(v580, v581, v582);
                  swift_storeEnumTagMultiPayload();
                  a1 = v860;
                }
                else if (v447)
                {
                  memcpy(v87, v88, *(void *)(*(void *)(v340 - 8) + 64));
                }
                else
                {
                  *(_OWORD *)int v87 = *(_OWORD *)v88;
                  uint64_t v448 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0)
                                + 20);
                  uint64_t v449 = &v87[v448];
                  uint64_t v450 = &v88[v448];
                  uint64_t v451 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v451 - 8) + 32))(v449, v450, v451);
                  swift_storeEnumTagMultiPayload();
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v340);
              }
              uint64_t v583 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
              uint64_t v584 = &v87[v583];
              uint64_t v585 = &v88[v583];
              uint64_t v586 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v586 - 8) + 32))(v584, v585, v586);
              swift_storeEnumTagMultiPayload();
              a2 = v870;
              break;
            case 1:
              *int v87 = *v88;
              uint64_t v342 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
              uint64_t v343 = &v87[v342];
              uint64_t v344 = &v88[v342];
              uint64_t v345 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v345 - 8) + 32))(v343, v344, v345);
              goto LABEL_160;
            case 0:
              *int v87 = *v88;
              uint64_t v232 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
              uint64_t v233 = &v87[v232];
              uint64_t v234 = &v88[v232];
              uint64_t v235 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v235 - 8) + 32))(v233, v234, v235);
LABEL_160:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v87, v88, *(void *)(*(void *)(v159 - 8) + 64));
              break;
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v159);
LABEL_261:
          uint64_t v587 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
          uint64_t v588 = &v87[v587];
          uint64_t v589 = &v88[v587];
          uint64_t v590 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v590 - 8) + 32))(v588, v589, v590);
LABEL_262:
          swift_storeEnumTagMultiPayload();
          a3 = v158;
LABEL_263:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v92);
          goto LABEL_264;
        case 8u:
          *(void *)int v87 = *(void *)v88;
          *(_OWORD *)(v87 + 8) = *(_OWORD *)(v88 + 8);
          uint64_t v161 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
          uint64_t v162 = &v87[v161];
          uint64_t v163 = &v88[v161];
          uint64_t v164 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 32))(v162, v163, v164);
          goto LABEL_73;
        case 9u:
          uint64_t v158 = a3;
          uint64_t v165 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v165))
          {
            uint64_t v166 = sub_253462A5C(&qword_269CE04A8);
            memcpy(v87, v88, *(void *)(*(void *)(v166 - 8) + 64));
          }
          else
          {
            uint64_t v236 = a2;
            uint64_t v237 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v237))
            {
              uint64_t v238 = sub_253462A5C(&qword_269CE04A0);
              memcpy(v87, v88, *(void *)(*(void *)(v238 - 8) + 64));
            }
            else
            {
              uint64_t v323 = a1;
              uint64_t v324 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 16, v324))
              {
                memcpy(v87, v88, *(void *)(*(void *)(v237 - 8) + 64));
              }
              else
              {
                long long v393 = *((_OWORD *)v88 + 1);
                *(_OWORD *)int v87 = *(_OWORD *)v88;
                *((_OWORD *)v87 + 1) = v393;
                *((void *)v87 + 4) = *((void *)v88 + 4);
                uint64_t v394 = *(int *)(v324 + 28);
                v871 = &v88[v394];
                v886 = &v87[v394];
                uint64_t v395 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v395 - 8) + 32))(v886, v871, v395);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 16, v324);
              }
              a1 = v323;
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v237);
            }
            a2 = v236;
            uint64_t v396 = *(int *)(v165 + 20);
            v397 = &v87[v396];
            v398 = &v88[v396];
            uint64_t v399 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v399 - 8) + 32))(v397, v398, v399);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v165);
          }
          uint64_t v400 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
          uint64_t v401 = &v87[v400];
          v402 = &v88[v400];
          uint64_t v403 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v403 - 8) + 32))(v401, v402, v403);
          goto LABEL_262;
        case 0xAu:
          *(void *)int v87 = *(void *)v88;
          uint64_t v167 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
          uint64_t v168 = &v87[v167];
          uint64_t v169 = &v88[v167];
          uint64_t v170 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 32))(v168, v169, v170);
LABEL_73:
          swift_storeEnumTagMultiPayload();
          goto LABEL_263;
        default:
          v865 = a2;
          *int v87 = *v88;
          *(_WORD *)(v87 + 1) = *(_WORD *)(v88 + 1);
          uint64_t v878 = type metadata accessor for TranscriptProtoActionSuccess(0);
          uint64_t v104 = *(int *)(v878 + 28);
          uint64_t v105 = &v87[v104];
          uint64_t v106 = &v88[v104];
          uint64_t v107 = sub_253B08E50();
          v857 = a1;
          uint64_t v108 = a3;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v106, 1, v107))
          {
            uint64_t v109 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v105, v106, *(void *)(*(void *)(v109 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 32))(v105, v106, v107);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v105, 0, 1, v107);
          }
          uint64_t v215 = (int *)v878;
          uint64_t v216 = *(int *)(v878 + 32);
          uint64_t v217 = &v87[v216];
          uint64_t v218 = &v88[v216];
          uint64_t v219 = type metadata accessor for TranscriptProtoUndoContext(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v218, 1, v219))
          {
            uint64_t v220 = sub_253462A5C(&qword_269CE0450);
            memcpy(v217, v218, *(void *)(*(void *)(v220 - 8) + 64));
          }
          else
          {
            long long v239 = *((_OWORD *)v218 + 1);
            *(_OWORD *)uint64_t v217 = *(_OWORD *)v218;
            *((_OWORD *)v217 + 1) = v239;
            *((_OWORD *)v217 + 2) = *((_OWORD *)v218 + 2);
            uint64_t v240 = *(int *)(v219 + 28);
            uint64_t v241 = &v217[v240];
            uint64_t v242 = &v218[v240];
            uint64_t v243 = sub_253B07160();
            uint64_t v244 = v241;
            uint64_t v215 = (int *)v878;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v243 - 8) + 32))(v244, v242, v243);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v217, 0, 1, v219);
          }
          uint64_t v245 = v215[9];
          uint64_t v246 = &v87[v245];
          uint64_t v247 = &v88[v245];
          uint64_t v248 = type metadata accessor for TranscriptProtoFollowUpAction(0);
          a3 = v108;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v247, 1, v248))
          {
            uint64_t v249 = sub_253462A5C(&qword_269CE0468);
            memcpy(v246, v247, *(void *)(*(void *)(v249 - 8) + 64));
          }
          else
          {
            uint64_t v250 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v247, 1, v250))
            {
              uint64_t v251 = sub_253462A5C(&qword_269CE0460);
              memcpy(v246, v247, *(void *)(*(void *)(v251 - 8) + 64));
            }
            else
            {
              __srcb = (void *)v248;
              uint64_t v325 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v247, 1, v325))
              {
                uint64_t v326 = sub_253462A5C(&qword_269CE0458);
                memcpy(v246, v247, *(void *)(*(void *)(v326 - 8) + 64));
              }
              else
              {
                long long v404 = *((_OWORD *)v247 + 1);
                *(_OWORD *)uint64_t v246 = *(_OWORD *)v247;
                *((_OWORD *)v246 + 1) = v404;
                *((void *)v246 + 4) = *((void *)v247 + 4);
                uint64_t v405 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                              + 28);
                __dstc = (void *)v325;
                uint64_t v406 = v250;
                v407 = &v246[v405];
                uint64_t v408 = &v247[v405];
                uint64_t v409 = sub_253B07160();
                v410 = v407;
                uint64_t v250 = v406;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v409 - 8) + 32))(v410, v408, v409);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v246, 0, 1, (uint64_t)__dstc);
              }
              uint64_t v411 = *(int *)(v250 + 20);
              uint64_t v412 = v250;
              v413 = &v246[v411];
              v414 = &v247[v411];
              uint64_t v415 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v415 - 8) + 32))(v413, v414, v415);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v246, 0, 1, v412);
              uint64_t v248 = (uint64_t)__srcb;
            }
            uint64_t v416 = *(int *)(v248 + 20);
            uint64_t v417 = &v246[v416];
            uint64_t v418 = v248;
            uint64_t v419 = &v247[v416];
            uint64_t v420 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v420 - 8) + 32))(v417, v419, v420);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v246, 0, 1, v418);
            uint64_t v215 = (int *)v878;
          }
          *(_OWORD *)&v87[v215[10]] = *(_OWORD *)&v88[v215[10]];
          uint64_t v421 = v215[11];
          v422 = &v87[v421];
          v423 = &v88[v421];
          uint64_t v424 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v424 - 8) + 32))(v422, v423, v424);
          swift_storeEnumTagMultiPayload();
          a1 = v857;
          a2 = v865;
          goto LABEL_263;
      }
    }
LABEL_39:
    uint64_t v94 = sub_253462A5C(&qword_269CE0388);
    memcpy(v87, v88, *(void *)(*(void *)(v94 - 8) + 64));
    goto LABEL_279;
  }
  if (v91)
  {
    sub_2535F2C0C((uint64_t)v87, (void (*)(void))type metadata accessor for TranscriptProtoStatementOutcome);
    goto LABEL_39;
  }
  uint64_t v95 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  int v96 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v87, 1, v95);
  int v97 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v95);
  if (v96)
  {
    if (!v97)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          v868 = a2;
          v882 = a3;
          uint64_t v171 = a1;
          *(void *)int v87 = *(void *)v88;
          uint64_t v172 = type metadata accessor for TranscriptProtoActionConfirmation(0);
          uint64_t v173 = *(int *)(v172 + 20);
          uint64_t v174 = &v87[v173];
          uint64_t v175 = &v88[v173];
          uint64_t v176 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v175, 1, v176))
          {
            uint64_t v177 = sub_253462A5C(&qword_269CE0480);
            memcpy(v174, v175, *(void *)(*(void *)(v177 - 8) + 64));
            a1 = v171;
          }
          else
          {
            uint64_t v301 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
            __srca = (void *)v172;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v175, 1, v301))
            {
              uint64_t v302 = sub_253462A5C(&qword_269CE0478);
              memcpy(v174, v175, *(void *)(*(void *)(v302 - 8) + 64));
            }
            else
            {
              __dsta = (void *)v301;
              *(_OWORD *)uint64_t v174 = *(_OWORD *)v175;
              v174[16] = v175[16];
              uint64_t v370 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
              uint64_t v371 = *(int *)(v370 + 24);
              uint64_t v838 = &v174[v371];
              uint64_t v841 = v370;
              uint64_t v372 = &v175[v371];
              uint64_t v834 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v372, 1, v834))
              {
                uint64_t v373 = sub_253462A5C(&qword_269CE0470);
                memcpy(v838, v372, *(void *)(*(void *)(v373 - 8) + 64));
              }
              else
              {
                *uint64_t v838 = *v372;
                uint64_t v469 = *(int *)(v834 + 20);
                uint64_t v833 = &v838[v469];
                unint64_t v470 = &v372[v469];
                uint64_t v471 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v471 - 8) + 32))(v833, v470, v471);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v838, 0, 1, v834);
              }
              uint64_t v472 = *(int *)(v841 + 28);
              v473 = &v174[v472];
              uint64_t v474 = &v175[v472];
              uint64_t v475 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v475 - 8) + 32))(v473, v474, v475);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v174, 0, 1, (uint64_t)__dsta);
            }
            uint64_t v476 = *(int *)(v176 + 20);
            v477 = &v174[v476];
            v478 = &v175[v476];
            uint64_t v479 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v479 - 8) + 32))(v477, v478, v479);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v174, 0, 1, v176);
            a1 = v171;
            uint64_t v172 = (uint64_t)__srca;
          }
          uint64_t v480 = *(int *)(v172 + 24);
          v481 = &v87[v480];
          v482 = &v88[v480];
          uint64_t v483 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v483 - 8) + 32))(v481, v482, v483);
          swift_storeEnumTagMultiPayload();
          a2 = v868;
          a3 = v882;
          goto LABEL_277;
        case 2u:
          *(_OWORD *)int v87 = *(_OWORD *)v88;
          uint64_t v178 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
          uint64_t v179 = &v87[v178];
          uint64_t v180 = &v88[v178];
          uint64_t v181 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 32))(v179, v180, v181);
          goto LABEL_276;
        case 3u:
          uint64_t v883 = a3;
          uint64_t v182 = a2;
          *(_OWORD *)int v87 = *(_OWORD *)v88;
          *((void *)v87 + 2) = *((void *)v88 + 2);
          v87[24] = v88[24];
          uint64_t v183 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
          uint64_t v184 = *(int *)(v183 + 24);
          uint64_t v185 = &v87[v184];
          uint64_t v186 = &v88[v184];
          uint64_t v187 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v186, 1, v187)) {
            goto LABEL_78;
          }
          goto LABEL_134;
        case 4u:
          *(_OWORD *)int v87 = *(_OWORD *)v88;
          uint64_t v189 = *((void *)v88 + 3);
          *((void *)v87 + 2) = *((void *)v88 + 2);
          *((void *)v87 + 3) = v189;
          v87[32] = v88[32];
          uint64_t v190 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
          uint64_t v191 = &v87[v190];
          uint64_t v192 = &v88[v190];
          uint64_t v193 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 32))(v191, v192, v193);
          goto LABEL_276;
        case 5u:
          uint64_t v883 = a3;
          uint64_t v182 = a2;
          *(_OWORD *)int v87 = *(_OWORD *)v88;
          v87[16] = v88[16];
          uint64_t v183 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
          uint64_t v194 = *(int *)(v183 + 24);
          uint64_t v185 = &v87[v194];
          uint64_t v186 = &v88[v194];
          uint64_t v187 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v186, 1, v187))
          {
LABEL_78:
            uint64_t v188 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v185, v186, *(void *)(*(void *)(v188 - 8) + 64));
          }
          else
          {
LABEL_134:
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v187 - 8) + 32))(v185, v186, v187);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v185, 0, 1, v187);
          }
          uint64_t v303 = *(int *)(v183 + 28);
          uint64_t v304 = &v87[v303];
          uint64_t v305 = &v88[v303];
          uint64_t v306 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v306 - 8) + 32))(v304, v305, v306);
          goto LABEL_139;
        case 6u:
          uint64_t v883 = a3;
          uint64_t v182 = a2;
          *(_OWORD *)int v87 = *(_OWORD *)v88;
          uint64_t v195 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
          uint64_t v196 = *(int *)(v195 + 20);
          uint64_t v197 = &v87[v196];
          uint64_t v198 = &v88[v196];
          uint64_t v199 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v198, 1, v199))
          {
            uint64_t v200 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v197, v198, *(void *)(*(void *)(v200 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v199 - 8) + 32))(v197, v198, v199);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v197, 0, 1, v199);
          }
          uint64_t v307 = *(int *)(v195 + 24);
          uint64_t v308 = &v87[v307];
          int v309 = &v88[v307];
          uint64_t v310 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v310 - 8) + 32))(v308, v309, v310);
LABEL_139:
          swift_storeEnumTagMultiPayload();
          a2 = v182;
          a3 = v883;
          goto LABEL_277;
        case 7u:
          uint64_t v201 = a3;
          uint64_t v202 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v202))
          {
            uint64_t v203 = sub_253462A5C(&qword_269CE0498);
            memcpy(v87, v88, *(void *)(*(void *)(v203 - 8) + 64));
            goto LABEL_275;
          }
          int v311 = swift_getEnumCaseMultiPayload();
          if (v311 != 2)
          {
            if (v311 == 1)
            {
              *int v87 = *v88;
              uint64_t v443 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
              uint64_t v444 = &v87[v443];
              uint64_t v445 = &v88[v443];
              uint64_t v446 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v446 - 8) + 32))(v444, v445, v446);
            }
            else
            {
              if (v311)
              {
                memcpy(v87, v88, *(void *)(*(void *)(v202 - 8) + 64));
                goto LABEL_274;
              }
              *int v87 = *v88;
              uint64_t v312 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
              uint64_t v313 = &v87[v312];
              uint64_t v314 = &v88[v312];
              uint64_t v315 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v315 - 8) + 32))(v313, v314, v315);
            }
LABEL_273:
            swift_storeEnumTagMultiPayload();
LABEL_274:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v202);
LABEL_275:
            a3 = v201;
            uint64_t v608 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
            v609 = &v87[v608];
            uint64_t v610 = &v88[v608];
            uint64_t v611 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v611 - 8) + 32))(v609, v610, v611);
LABEL_276:
            swift_storeEnumTagMultiPayload();
LABEL_277:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v95);
            goto LABEL_278;
          }
          uint64_t v440 = a2;
          uint64_t v441 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v441))
          {
            uint64_t v442 = sub_253462A5C(&qword_269CE0490);
            memcpy(v87, v88, *(void *)(*(void *)(v442 - 8) + 64));
LABEL_272:
            a2 = v440;
            uint64_t v604 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
            int v605 = &v87[v604];
            int v606 = &v88[v604];
            uint64_t v607 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v607 - 8) + 32))(v605, v606, v607);
            goto LABEL_273;
          }
          v859 = a1;
          int v513 = swift_getEnumCaseMultiPayload();
          if (v513 == 1)
          {
            uint64_t v573 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v573))
            {
              uint64_t v574 = sub_253462A5C(&qword_269CE0488);
              memcpy(v87, v88, *(void *)(*(void *)(v574 - 8) + 64));
            }
            else
            {
              *int v87 = *v88;
              uint64_t v597 = *(int *)(v573 + 20);
              v889 = &v87[v597];
              v598 = &v88[v597];
              uint64_t v599 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v599 - 8) + 32))(v889, v598, v599);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v573);
            }
            uint64_t v600 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
            uint64_t v601 = &v87[v600];
            v602 = &v88[v600];
            uint64_t v603 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v603 - 8) + 32))(v601, v602, v603);
          }
          else
          {
            if (v513)
            {
              memcpy(v87, v88, *(void *)(*(void *)(v441 - 8) + 64));
LABEL_271:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v441);
              a1 = v859;
              goto LABEL_272;
            }
            *(_OWORD *)int v87 = *(_OWORD *)v88;
            uint64_t v514 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
            uint64_t v515 = &v87[v514];
            uint64_t v516 = &v88[v514];
            uint64_t v517 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v517 - 8) + 32))(v515, v516, v517);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_271;
        case 8u:
          *(void *)int v87 = *(void *)v88;
          *(_OWORD *)(v87 + 8) = *(_OWORD *)(v88 + 8);
          uint64_t v204 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
          uint64_t v205 = &v87[v204];
          uint64_t v206 = &v88[v204];
          uint64_t v207 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v207 - 8) + 32))(v205, v206, v207);
          goto LABEL_276;
        case 9u:
          uint64_t v208 = a3;
          uint64_t v209 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v209))
          {
            uint64_t v210 = sub_253462A5C(&qword_269CE04A8);
            memcpy(v87, v88, *(void *)(*(void *)(v210 - 8) + 64));
          }
          else
          {
            uint64_t v316 = a2;
            uint64_t v317 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v317))
            {
              uint64_t v318 = sub_253462A5C(&qword_269CE04A0);
              memcpy(v87, v88, *(void *)(*(void *)(v318 - 8) + 64));
            }
            else
            {
              uint64_t v374 = a1;
              uint64_t v375 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 16, v375))
              {
                memcpy(v87, v88, *(void *)(*(void *)(v317 - 8) + 64));
              }
              else
              {
                long long v454 = *((_OWORD *)v88 + 1);
                *(_OWORD *)int v87 = *(_OWORD *)v88;
                *((_OWORD *)v87 + 1) = v454;
                *((void *)v87 + 4) = *((void *)v88 + 4);
                uint64_t v455 = *(int *)(v375 + 28);
                v872 = &v88[v455];
                uint64_t v887 = &v87[v455];
                uint64_t v456 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v456 - 8) + 32))(v887, v872, v456);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 16, v375);
              }
              a1 = v374;
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v317);
            }
            a2 = v316;
            uint64_t v457 = *(int *)(v209 + 20);
            v458 = &v87[v457];
            v459 = &v88[v457];
            uint64_t v460 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v460 - 8) + 32))(v458, v459, v460);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v209);
          }
          a3 = v208;
          uint64_t v461 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
          v462 = &v87[v461];
          v463 = &v88[v461];
          uint64_t v464 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v464 - 8) + 32))(v462, v463, v464);
          goto LABEL_276;
        case 0xAu:
          *(void *)int v87 = *(void *)v88;
          uint64_t v211 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
          uint64_t v212 = &v87[v211];
          uint64_t v213 = &v88[v211];
          uint64_t v214 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 32))(v212, v213, v214);
          goto LABEL_276;
        default:
          v864 = a2;
          *int v87 = *v88;
          *(_WORD *)(v87 + 1) = *(_WORD *)(v88 + 1);
          uint64_t v877 = type metadata accessor for TranscriptProtoActionSuccess(0);
          uint64_t v98 = *(int *)(v877 + 28);
          uint64_t v99 = &v87[v98];
          uint64_t v100 = &v88[v98];
          uint64_t v101 = sub_253B08E50();
          v856 = a1;
          uint64_t v102 = a3;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v100, 1, v101))
          {
            uint64_t v103 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v99, v100, *(void *)(*(void *)(v103 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v99, v100, v101);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v99, 0, 1, v101);
          }
          uint64_t v252 = (int *)v877;
          uint64_t v253 = *(int *)(v877 + 32);
          uint64_t v254 = &v87[v253];
          long long v255 = &v88[v253];
          uint64_t v256 = type metadata accessor for TranscriptProtoUndoContext(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v255, 1, v256))
          {
            uint64_t v257 = sub_253462A5C(&qword_269CE0450);
            memcpy(v254, v255, *(void *)(*(void *)(v257 - 8) + 64));
          }
          else
          {
            long long v327 = *((_OWORD *)v255 + 1);
            *(_OWORD *)uint64_t v254 = *(_OWORD *)v255;
            *((_OWORD *)v254 + 1) = v327;
            *((_OWORD *)v254 + 2) = *((_OWORD *)v255 + 2);
            uint64_t v328 = *(int *)(v256 + 28);
            uint64_t v329 = &v254[v328];
            uint64_t v330 = &v255[v328];
            uint64_t v331 = sub_253B07160();
            uint64_t v332 = v329;
            uint64_t v252 = (int *)v877;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v331 - 8) + 32))(v332, v330, v331);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v254, 0, 1, v256);
          }
          uint64_t v333 = v252[9];
          uint64_t v334 = &v87[v333];
          uint64_t v335 = &v88[v333];
          uint64_t v336 = type metadata accessor for TranscriptProtoFollowUpAction(0);
          a3 = v102;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v335, 1, v336))
          {
            uint64_t v337 = sub_253462A5C(&qword_269CE0468);
            memcpy(v334, v335, *(void *)(*(void *)(v337 - 8) + 64));
          }
          else
          {
            uint64_t v338 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v335, 1, v338))
            {
              uint64_t v339 = sub_253462A5C(&qword_269CE0460);
              memcpy(v334, v335, *(void *)(*(void *)(v339 - 8) + 64));
            }
            else
            {
              __srcd = (void *)v336;
              uint64_t v425 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v335, 1, v425))
              {
                uint64_t v426 = sub_253462A5C(&qword_269CE0458);
                memcpy(v334, v335, *(void *)(*(void *)(v426 - 8) + 64));
              }
              else
              {
                long long v484 = *((_OWORD *)v335 + 1);
                *(_OWORD *)uint64_t v334 = *(_OWORD *)v335;
                *((_OWORD *)v334 + 1) = v484;
                *((void *)v334 + 4) = *((void *)v335 + 4);
                uint64_t v485 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                              + 28);
                __dstd = (void *)v425;
                uint64_t v486 = v338;
                uint64_t v487 = &v334[v485];
                v488 = &v335[v485];
                uint64_t v489 = sub_253B07160();
                uint64_t v490 = v487;
                uint64_t v338 = v486;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v489 - 8) + 32))(v490, v488, v489);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v334, 0, 1, (uint64_t)__dstd);
              }
              uint64_t v491 = *(int *)(v338 + 20);
              uint64_t v492 = v338;
              uint64_t v493 = &v334[v491];
              uint64_t v494 = &v335[v491];
              uint64_t v495 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v495 - 8) + 32))(v493, v494, v495);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v334, 0, 1, v492);
              uint64_t v336 = (uint64_t)__srcd;
            }
            uint64_t v496 = *(int *)(v336 + 20);
            v497 = &v334[v496];
            uint64_t v498 = v336;
            int v499 = &v335[v496];
            uint64_t v500 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v500 - 8) + 32))(v497, v499, v500);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v334, 0, 1, v498);
            uint64_t v252 = (int *)v877;
          }
          *(_OWORD *)&v87[v252[10]] = *(_OWORD *)&v88[v252[10]];
          uint64_t v501 = v252[11];
          v502 = &v87[v501];
          v503 = &v88[v501];
          uint64_t v504 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v504 - 8) + 32))(v502, v503, v504);
          swift_storeEnumTagMultiPayload();
          a1 = v856;
          a2 = v864;
          goto LABEL_277;
      }
    }
    goto LABEL_50;
  }
  if (!v97)
  {
    if (a1 == a2) {
      goto LABEL_278;
    }
    sub_2535F2C0C((uint64_t)v87, (void (*)(void))type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v869 = a2;
        v884 = a3;
        long long v258 = a1;
        *(void *)int v87 = *(void *)v88;
        uint64_t v259 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v260 = *(int *)(v259 + 20);
        uint64_t v261 = &v87[v260];
        uint64_t v262 = &v88[v260];
        uint64_t v263 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v262, 1, v263))
        {
          uint64_t v264 = sub_253462A5C(&qword_269CE0480);
          memcpy(v261, v262, *(void *)(*(void *)(v264 - 8) + 64));
          a1 = v258;
        }
        else
        {
          uint64_t v352 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          __srcc = (void *)v259;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v262, 1, v352))
          {
            uint64_t v353 = sub_253462A5C(&qword_269CE0478);
            memcpy(v261, v262, *(void *)(*(void *)(v353 - 8) + 64));
          }
          else
          {
            uint64_t v842 = v352;
            *(_OWORD *)uint64_t v261 = *(_OWORD *)v262;
            v261[16] = v262[16];
            uint64_t v465 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v466 = *(int *)(v465 + 24);
            __dstb = &v261[v466];
            v467 = &v262[v466];
            uint64_t v839 = (int *)type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v467, 1, (uint64_t)v839))
            {
              uint64_t v468 = sub_253462A5C(&qword_269CE0470);
              memcpy(__dstb, v467, *(void *)(*(void *)(v468 - 8) + 64));
            }
            else
            {
              char *__dstb = *v467;
              uint64_t v531 = v839[5];
              uint64_t v836 = v465;
              unint64_t v532 = &__dstb[v531];
              uint64_t v533 = &v467[v531];
              uint64_t v534 = sub_253B07160();
              v535 = v532;
              uint64_t v465 = v836;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v534 - 8) + 32))(v535, v533, v534);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstb, 0, 1, (uint64_t)v839);
            }
            uint64_t v536 = *(int *)(v465 + 28);
            v537 = &v261[v536];
            uint64_t v538 = &v262[v536];
            uint64_t v539 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v539 - 8) + 32))(v537, v538, v539);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v261, 0, 1, v842);
          }
          uint64_t v540 = *(int *)(v263 + 20);
          uint64_t v541 = &v261[v540];
          uint64_t v542 = &v262[v540];
          uint64_t v543 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v543 - 8) + 32))(v541, v542, v543);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v261, 0, 1, v263);
          a1 = v258;
          uint64_t v259 = (uint64_t)__srcc;
        }
        uint64_t v544 = *(int *)(v259 + 24);
        uint64_t v545 = &v87[v544];
        uint64_t v546 = &v88[v544];
        uint64_t v547 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v547 - 8) + 32))(v545, v546, v547);
        swift_storeEnumTagMultiPayload();
        a2 = v869;
        a3 = v884;
        goto LABEL_278;
      case 2u:
        *(_OWORD *)int v87 = *(_OWORD *)v88;
        uint64_t v265 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
        uint64_t v266 = &v87[v265];
        uint64_t v267 = &v88[v265];
        uint64_t v268 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v268 - 8) + 32))(v266, v267, v268);
        goto LABEL_131;
      case 3u:
        v885 = a3;
        uint64_t v269 = a2;
        *(_OWORD *)int v87 = *(_OWORD *)v88;
        *((void *)v87 + 2) = *((void *)v88 + 2);
        v87[24] = v88[24];
        uint64_t v270 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        uint64_t v271 = *(int *)(v270 + 24);
        uint64_t v272 = &v87[v271];
        uint64_t v273 = &v88[v271];
        uint64_t v274 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v273, 1, v274)) {
          goto LABEL_119;
        }
        goto LABEL_167;
      case 4u:
        *(_OWORD *)int v87 = *(_OWORD *)v88;
        uint64_t v276 = *((void *)v88 + 3);
        *((void *)v87 + 2) = *((void *)v88 + 2);
        *((void *)v87 + 3) = v276;
        v87[32] = v88[32];
        uint64_t v277 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        uint64_t v278 = &v87[v277];
        uint64_t v279 = &v88[v277];
        uint64_t v280 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v280 - 8) + 32))(v278, v279, v280);
        goto LABEL_131;
      case 5u:
        v885 = a3;
        uint64_t v269 = a2;
        *(_OWORD *)int v87 = *(_OWORD *)v88;
        v87[16] = v88[16];
        uint64_t v270 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
        uint64_t v281 = *(int *)(v270 + 24);
        uint64_t v272 = &v87[v281];
        uint64_t v273 = &v88[v281];
        uint64_t v274 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v273, 1, v274))
        {
LABEL_119:
          uint64_t v275 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v272, v273, *(void *)(*(void *)(v275 - 8) + 64));
        }
        else
        {
LABEL_167:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v274 - 8) + 32))(v272, v273, v274);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v272, 0, 1, v274);
        }
        uint64_t v354 = *(int *)(v270 + 28);
        int v355 = &v87[v354];
        uint64_t v356 = &v88[v354];
        uint64_t v357 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v357 - 8) + 32))(v355, v356, v357);
        goto LABEL_172;
      case 6u:
        v885 = a3;
        uint64_t v269 = a2;
        *(_OWORD *)int v87 = *(_OWORD *)v88;
        uint64_t v282 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v283 = *(int *)(v282 + 20);
        uint64_t v284 = &v87[v283];
        uint64_t v285 = &v88[v283];
        uint64_t v286 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v285, 1, v286))
        {
          uint64_t v287 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v284, v285, *(void *)(*(void *)(v287 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v286 - 8) + 32))(v284, v285, v286);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v284, 0, 1, v286);
        }
        uint64_t v358 = *(int *)(v282 + 24);
        uint64_t v359 = &v87[v358];
        uint64_t v360 = &v88[v358];
        uint64_t v361 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v361 - 8) + 32))(v359, v360, v361);
LABEL_172:
        swift_storeEnumTagMultiPayload();
        a2 = v269;
        a3 = v885;
        goto LABEL_278;
      case 7u:
        uint64_t v288 = a3;
        uint64_t v289 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v289))
        {
          uint64_t v290 = sub_253462A5C(&qword_269CE0498);
          memcpy(v87, v88, *(void *)(*(void *)(v290 - 8) + 64));
          goto LABEL_381;
        }
        int v362 = swift_getEnumCaseMultiPayload();
        if (v362 != 2)
        {
          if (v362 == 1)
          {
            *int v87 = *v88;
            uint64_t v509 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            v510 = &v87[v509];
            uint64_t v511 = &v88[v509];
            uint64_t v512 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v512 - 8) + 32))(v510, v511, v512);
            goto LABEL_230;
          }
          if (!v362)
          {
            *int v87 = *v88;
            uint64_t v363 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            int v364 = &v87[v363];
            uint64_t v365 = &v88[v363];
            uint64_t v366 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v366 - 8) + 32))(v364, v365, v366);
LABEL_230:
            swift_storeEnumTagMultiPayload();
            goto LABEL_380;
          }
          memcpy(v87, v88, *(void *)(*(void *)(v289 - 8) + 64));
LABEL_380:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v289);
LABEL_381:
          uint64_t v829 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
          uint64_t v830 = &v87[v829];
          v831 = &v88[v829];
          uint64_t v832 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v832 - 8) + 32))(v830, v831, v832);
LABEL_382:
          swift_storeEnumTagMultiPayload();
          a3 = v288;
          goto LABEL_278;
        }
        v873 = a2;
        uint64_t v507 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v507))
        {
          uint64_t v508 = sub_253462A5C(&qword_269CE0490);
          memcpy(v87, v88, *(void *)(*(void *)(v508 - 8) + 64));
LABEL_379:
          uint64_t v825 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          int v826 = &v87[v825];
          int v827 = &v88[v825];
          uint64_t v828 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v828 - 8) + 32))(v826, v827, v828);
          swift_storeEnumTagMultiPayload();
          a2 = v873;
          goto LABEL_380;
        }
        int v568 = swift_getEnumCaseMultiPayload();
        if (v568 == 1)
        {
          uint64_t v595 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v595))
          {
            uint64_t v596 = sub_253462A5C(&qword_269CE0488);
            memcpy(v87, v88, *(void *)(*(void *)(v596 - 8) + 64));
          }
          else
          {
            *int v87 = *v88;
            uint64_t v818 = *(int *)(v595 + 20);
            v891 = &v87[v818];
            v819 = &v88[v818];
            uint64_t v820 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v820 - 8) + 32))(v891, v819, v820);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v595);
          }
          uint64_t v821 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v822 = &v87[v821];
          v823 = &v88[v821];
          uint64_t v824 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v824 - 8) + 32))(v822, v823, v824);
        }
        else
        {
          if (v568)
          {
            memcpy(v87, v88, *(void *)(*(void *)(v507 - 8) + 64));
LABEL_378:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v507);
            goto LABEL_379;
          }
          *(_OWORD *)int v87 = *(_OWORD *)v88;
          uint64_t v569 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v570 = &v87[v569];
          uint64_t v571 = &v88[v569];
          uint64_t v572 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v572 - 8) + 32))(v570, v571, v572);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_378;
      case 8u:
        *(void *)int v87 = *(void *)v88;
        *(_OWORD *)(v87 + 8) = *(_OWORD *)(v88 + 8);
        uint64_t v291 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        uint64_t v292 = &v87[v291];
        uint64_t v293 = &v88[v291];
        uint64_t v294 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v294 - 8) + 32))(v292, v293, v294);
        goto LABEL_131;
      case 9u:
        uint64_t v288 = a3;
        uint64_t v295 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v295))
        {
          uint64_t v296 = sub_253462A5C(&qword_269CE04A8);
          memcpy(v87, v88, *(void *)(*(void *)(v296 - 8) + 64));
        }
        else
        {
          uint64_t v367 = a2;
          uint64_t v368 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v368))
          {
            uint64_t v369 = sub_253462A5C(&qword_269CE04A0);
            memcpy(v87, v88, *(void *)(*(void *)(v369 - 8) + 64));
          }
          else
          {
            uint64_t v452 = a1;
            uint64_t v453 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 16, v453))
            {
              memcpy(v87, v88, *(void *)(*(void *)(v368 - 8) + 64));
            }
            else
            {
              long long v520 = *((_OWORD *)v88 + 1);
              *(_OWORD *)int v87 = *(_OWORD *)v88;
              *((_OWORD *)v87 + 1) = v520;
              *((void *)v87 + 4) = *((void *)v88 + 4);
              uint64_t v521 = *(int *)(v453 + 28);
              v874 = &v88[v521];
              v888 = &v87[v521];
              uint64_t v522 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v522 - 8) + 32))(v888, v874, v522);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 16, v453);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v368);
            a1 = v452;
          }
          a2 = v367;
          uint64_t v523 = *(int *)(v295 + 20);
          v524 = &v87[v523];
          v525 = &v88[v523];
          uint64_t v526 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v526 - 8) + 32))(v524, v525, v526);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v295);
        }
        uint64_t v527 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
        v528 = &v87[v527];
        v529 = &v88[v527];
        uint64_t v530 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v530 - 8) + 32))(v528, v529, v530);
        goto LABEL_382;
      case 0xAu:
        *(void *)int v87 = *(void *)v88;
        uint64_t v297 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
        uint64_t v298 = &v87[v297];
        uint64_t v299 = &v88[v297];
        uint64_t v300 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v300 - 8) + 32))(v298, v299, v300);
LABEL_131:
        swift_storeEnumTagMultiPayload();
        goto LABEL_278;
      default:
        v866 = a2;
        *int v87 = *v88;
        *(_WORD *)(v87 + 1) = *(_WORD *)(v88 + 1);
        uint64_t v879 = type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v122 = *(int *)(v879 + 28);
        uint64_t v123 = &v87[v122];
        uint64_t v124 = &v88[v122];
        uint64_t v125 = sub_253B08E50();
        v858 = a1;
        uint64_t v126 = a3;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v124, 1, v125))
        {
          uint64_t v127 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v123, v124, *(void *)(*(void *)(v127 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 32))(v123, v124, v125);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v123, 0, 1, v125);
        }
        uint64_t v346 = (int *)v879;
        uint64_t v347 = *(int *)(v879 + 32);
        uint64_t v348 = &v87[v347];
        uint64_t v349 = &v88[v347];
        uint64_t v350 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v349, 1, v350))
        {
          uint64_t v351 = sub_253462A5C(&qword_269CE0450);
          memcpy(v348, v349, *(void *)(*(void *)(v351 - 8) + 64));
        }
        else
        {
          long long v427 = *((_OWORD *)v349 + 1);
          *(_OWORD *)uint64_t v348 = *(_OWORD *)v349;
          *((_OWORD *)v348 + 1) = v427;
          *((_OWORD *)v348 + 2) = *((_OWORD *)v349 + 2);
          uint64_t v428 = *(int *)(v350 + 28);
          uint64_t v429 = &v348[v428];
          uint64_t v430 = &v349[v428];
          uint64_t v431 = sub_253B07160();
          v432 = v429;
          uint64_t v346 = (int *)v879;
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v431 - 8) + 32))(v432, v430, v431);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v348, 0, 1, v350);
        }
        uint64_t v433 = v346[9];
        int v434 = &v87[v433];
        uint64_t v435 = &v88[v433];
        uint64_t v436 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        a3 = v126;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v435, 1, v436))
        {
          uint64_t v437 = sub_253462A5C(&qword_269CE0468);
          memcpy(v434, v435, *(void *)(*(void *)(v437 - 8) + 64));
        }
        else
        {
          uint64_t v438 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v435, 1, v438))
          {
            uint64_t v439 = sub_253462A5C(&qword_269CE0460);
            memcpy(v434, v435, *(void *)(*(void *)(v439 - 8) + 64));
          }
          else
          {
            __srce = (void *)v436;
            uint64_t v505 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v435, 1, v505))
            {
              uint64_t v506 = sub_253462A5C(&qword_269CE0458);
              memcpy(v434, v435, *(void *)(*(void *)(v506 - 8) + 64));
            }
            else
            {
              long long v548 = *((_OWORD *)v435 + 1);
              *(_OWORD *)int v434 = *(_OWORD *)v435;
              *((_OWORD *)v434 + 1) = v548;
              *((void *)v434 + 4) = *((void *)v435 + 4);
              uint64_t v549 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              __dste = (void *)v438;
              v550 = &v434[v549];
              v551 = &v435[v549];
              uint64_t v552 = sub_253B07160();
              v553 = v550;
              uint64_t v438 = (uint64_t)__dste;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v552 - 8) + 32))(v553, v551, v552);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v434, 0, 1, v505);
            }
            uint64_t v554 = *(int *)(v438 + 20);
            uint64_t v555 = v438;
            uint64_t v556 = &v434[v554];
            uint64_t v557 = &v435[v554];
            uint64_t v558 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v558 - 8) + 32))(v556, v557, v558);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v434, 0, 1, v555);
            uint64_t v436 = (uint64_t)__srce;
          }
          uint64_t v559 = *(int *)(v436 + 20);
          v560 = &v434[v559];
          uint64_t v561 = v436;
          uint64_t v562 = &v435[v559];
          uint64_t v563 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v563 - 8) + 32))(v560, v562, v563);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v434, 0, 1, v561);
          uint64_t v346 = (int *)v879;
        }
        *(_OWORD *)&v87[v346[10]] = *(_OWORD *)&v88[v346[10]];
        uint64_t v564 = v346[11];
        v565 = &v87[v564];
        uint64_t v566 = &v88[v564];
        uint64_t v567 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v567 - 8) + 32))(v565, v566, v567);
        swift_storeEnumTagMultiPayload();
        a1 = v858;
        a2 = v866;
        goto LABEL_278;
    }
  }
  sub_2535F2C0C((uint64_t)v87, (void (*)(void))type metadata accessor for TranscriptProtoStatementOutcomeEnum);
LABEL_50:
  uint64_t v110 = sub_253462A5C(&qword_269CE04B0);
  memcpy(v87, v88, *(void *)(*(void *)(v110 - 8) + 64));
LABEL_278:
  uint64_t v612 = *(int *)(v89 + 20);
  uint64_t v613 = &v87[v612];
  v614 = &v88[v612];
  uint64_t v615 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v615 - 8) + 40))(v613, v614, v615);
LABEL_279:
  uint64_t v616 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  int v617 = &a1[v616];
  int v618 = &a2[v616];
  uint64_t v619 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  int v620 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v617, 1, (uint64_t)v619);
  int v621 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v618, 1, (uint64_t)v619);
  if (v620)
  {
    if (!v621)
    {
      v875 = a2;
      v890 = a3;
      *(void *)int v617 = *(void *)v618;
      uint64_t v622 = v619[5];
      uint64_t v623 = &v617[v622];
      v624 = &v618[v622];
      uint64_t v625 = type metadata accessor for TranscriptProtoResponseDialog(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v624, 1, v625))
      {
        uint64_t v626 = sub_253462A5C(&qword_269CE04B8);
        memcpy(v623, v624, *(void *)(*(void *)(v626 - 8) + 64));
      }
      else
      {
        long long v640 = *((_OWORD *)v624 + 1);
        *(_OWORD *)uint64_t v623 = *(_OWORD *)v624;
        *((_OWORD *)v623 + 1) = v640;
        long long v641 = *((_OWORD *)v624 + 3);
        *((_OWORD *)v623 + 2) = *((_OWORD *)v624 + 2);
        *((_OWORD *)v623 + 3) = v641;
        uint64_t v642 = *(int *)(v625 + 32);
        int v643 = &v623[v642];
        int v644 = &v624[v642];
        uint64_t v645 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v645 - 8) + 32))(v643, v644, v645);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v623, 0, 1, v625);
      }
      uint64_t v646 = v619[6];
      v647 = &v617[v646];
      v648 = &v618[v646];
      uint64_t v649 = type metadata accessor for TranscriptProtoResponseVisual(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v648, 1, v649))
      {
        uint64_t v650 = sub_253462A5C(&qword_269CE04C8);
        memcpy(v647, v648, *(void *)(*(void *)(v650 - 8) + 64));
      }
      else
      {
        v861 = a1;
        *(_OWORD *)v647 = *(_OWORD *)v648;
        uint64_t v651 = *(int *)(v649 + 24);
        uint64_t v652 = &v647[v651];
        v653 = &v648[v651];
        uint64_t v654 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v653, 1, v654))
        {
          uint64_t v655 = sub_253462A5C(&qword_269CE04C0);
          memcpy(v652, v653, *(void *)(*(void *)(v655 - 8) + 64));
        }
        else
        {
          *uint64_t v652 = *v653;
          uint64_t v669 = *(int *)(v654 + 20);
          uint64_t v670 = &v652[v669];
          v671 = &v653[v669];
          uint64_t v672 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v672 - 8) + 32))(v670, v671, v672);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v652, 0, 1, v654);
        }
        uint64_t v673 = *(int *)(v649 + 28);
        uint64_t v674 = &v647[v673];
        unint64_t v675 = &v648[v673];
        uint64_t v676 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v676 - 8) + 32))(v674, v675, v676);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v647, 0, 1, v649);
        a1 = v861;
      }
      *(_OWORD *)&v617[v619[7]] = *(_OWORD *)&v618[v619[7]];
      *(_OWORD *)&v617[v619[8]] = *(_OWORD *)&v618[v619[8]];
      v617[v619[9]] = v618[v619[9]];
      v617[v619[10]] = v618[v619[10]];
      uint64_t v677 = v619[11];
      uint64_t v678 = &v617[v677];
      uint64_t v679 = &v618[v677];
      uint64_t v680 = type metadata accessor for TranscriptProtoUIType(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v679, 1, v680))
      {
        uint64_t v681 = sub_253462A5C(&qword_269CE04D0);
        memcpy(v678, v679, *(void *)(*(void *)(v681 - 8) + 64));
      }
      else
      {
        uint64_t v682 = a1;
        uint64_t v683 = type metadata accessor for TranscriptProtoUitype(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v679, 1, v683))
        {
          uint64_t v684 = sub_253462A5C(&qword_269CDCC08);
          memcpy(v678, v679, *(void *)(*(void *)(v684 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *(_OWORD *)uint64_t v678 = *(_OWORD *)v679;
              uint64_t v714 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
              goto LABEL_321;
            case 2u:
              long long v715 = *((_OWORD *)v679 + 1);
              *(_OWORD *)uint64_t v678 = *(_OWORD *)v679;
              *((_OWORD *)v678 + 1) = v715;
              uint64_t v686 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
              break;
            case 3u:
              *(_OWORD *)uint64_t v678 = *(_OWORD *)v679;
              uint64_t v714 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_321:
              uint64_t v686 = *(int *)(v714 + 20);
              break;
            default:
              long long v685 = *((_OWORD *)v679 + 1);
              *(_OWORD *)uint64_t v678 = *(_OWORD *)v679;
              *((_OWORD *)v678 + 1) = v685;
              *((_OWORD *)v678 + 2) = *((_OWORD *)v679 + 2);
              uint64_t v686 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
              break;
          }
          v716 = &v678[v686];
          v717 = &v679[v686];
          uint64_t v718 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v718 - 8) + 32))(v716, v717, v718);
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v678, 0, 1, v683);
        }
        a1 = v682;
        uint64_t v719 = *(int *)(v680 + 20);
        v720 = &v678[v719];
        v721 = &v679[v719];
        uint64_t v722 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v722 - 8) + 32))(v720, v721, v722);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v678, 0, 1, v680);
      }
      uint64_t v723 = v619[12];
      uint64_t v724 = &v617[v723];
      v725 = &v618[v723];
      uint64_t v726 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v726 - 8) + 32))(v724, v725, v726);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v617, 0, 1, (uint64_t)v619);
      goto LABEL_366;
    }
LABEL_285:
    uint64_t v627 = sub_253462A5C(&qword_269CE0378);
    memcpy(v617, v618, *(void *)(*(void *)(v627 - 8) + 64));
    goto LABEL_367;
  }
  if (v621)
  {
    sub_2535F2C0C((uint64_t)v617, (void (*)(void))type metadata accessor for TranscriptProtoResponseManifest);
    goto LABEL_285;
  }
  v875 = a2;
  v890 = a3;
  *(void *)int v617 = *(void *)v618;
  swift_bridgeObjectRelease();
  uint64_t v628 = v619[5];
  uint64_t v629 = &v617[v628];
  uint64_t v630 = &v618[v628];
  uint64_t v631 = type metadata accessor for TranscriptProtoResponseDialog(0);
  int v632 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v629, 1, v631);
  int v633 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v630, 1, v631);
  if (v632)
  {
    if (!v633)
    {
      long long v634 = *((_OWORD *)v630 + 1);
      *(_OWORD *)uint64_t v629 = *(_OWORD *)v630;
      *((_OWORD *)v629 + 1) = v634;
      long long v635 = *((_OWORD *)v630 + 3);
      *((_OWORD *)v629 + 2) = *((_OWORD *)v630 + 2);
      *((_OWORD *)v629 + 3) = v635;
      uint64_t v636 = *(int *)(v631 + 32);
      uint64_t v637 = &v629[v636];
      uint64_t v638 = &v630[v636];
      uint64_t v639 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v639 - 8) + 32))(v637, v638, v639);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v629, 0, 1, v631);
      goto LABEL_297;
    }
    goto LABEL_296;
  }
  if (v633)
  {
    sub_2535F2C0C((uint64_t)v629, (void (*)(void))type metadata accessor for TranscriptProtoResponseDialog);
LABEL_296:
    uint64_t v656 = sub_253462A5C(&qword_269CE04B8);
    memcpy(v629, v630, *(void *)(*(void *)(v656 - 8) + 64));
    goto LABEL_297;
  }
  uint64_t v687 = *((void *)v630 + 1);
  *(void *)uint64_t v629 = *(void *)v630;
  *((void *)v629 + 1) = v687;
  swift_bridgeObjectRelease();
  uint64_t v688 = *((void *)v630 + 3);
  *((void *)v629 + 2) = *((void *)v630 + 2);
  *((void *)v629 + 3) = v688;
  swift_bridgeObjectRelease();
  uint64_t v689 = *((void *)v630 + 5);
  *((void *)v629 + 4) = *((void *)v630 + 4);
  *((void *)v629 + 5) = v689;
  swift_bridgeObjectRelease();
  uint64_t v690 = *((void *)v630 + 7);
  *((void *)v629 + 6) = *((void *)v630 + 6);
  *((void *)v629 + 7) = v690;
  swift_bridgeObjectRelease();
  uint64_t v691 = *(int *)(v631 + 32);
  v692 = &v629[v691];
  uint64_t v693 = &v630[v691];
  uint64_t v694 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v694 - 8) + 40))(v692, v693, v694);
LABEL_297:
  uint64_t v657 = v619[6];
  v658 = &v617[v657];
  uint64_t v659 = &v618[v657];
  uint64_t v660 = type metadata accessor for TranscriptProtoResponseVisual(0);
  int v661 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v658, 1, v660);
  int v662 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v659, 1, v660);
  if (!v661)
  {
    if (v662)
    {
      sub_2535F2C0C((uint64_t)v658, (void (*)(void))type metadata accessor for TranscriptProtoResponseVisual);
      goto LABEL_303;
    }
    v863 = a1;
    *(void *)v658 = *(void *)v659;
    swift_bridgeObjectRelease();
    *((void *)v658 + 1) = *((void *)v659 + 1);
    swift_bridgeObjectRelease();
    uint64_t v695 = *(int *)(v660 + 24);
    v696 = &v658[v695];
    uint64_t v697 = &v659[v695];
    uint64_t v698 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
    int v699 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v696, 1, v698);
    __srcf = v697;
    int v700 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v697, 1, v698);
    if (v699)
    {
      if (!v700)
      {
        char *v696 = *v697;
        uint64_t v701 = *(int *)(v698 + 20);
        uint64_t v702 = &v696[v701];
        uint64_t v703 = (uint64_t)v696;
        unint64_t v704 = &__srcf[v701];
        uint64_t v705 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v705 - 8) + 32))(v702, v704, v705);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v703, 0, 1, v698);
LABEL_328:
        a1 = v863;
        uint64_t v728 = *(int *)(v660 + 28);
        v729 = &v658[v728];
        v730 = &v659[v728];
        uint64_t v731 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v731 - 8) + 40))(v729, v730, v731);
        goto LABEL_329;
      }
    }
    else
    {
      if (!v700)
      {
        char *v696 = *v697;
        uint64_t v770 = *(int *)(v698 + 20);
        v771 = &v696[v770];
        uint64_t v772 = &v697[v770];
        uint64_t v773 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v773 - 8) + 40))(v771, v772, v773);
        goto LABEL_328;
      }
      sub_2535F2C0C((uint64_t)v696, (void (*)(void))type metadata accessor for TranscriptProtoResponseVisualOptions);
    }
    uint64_t v727 = sub_253462A5C(&qword_269CE04C0);
    memcpy(v696, v697, *(void *)(*(void *)(v727 - 8) + 64));
    goto LABEL_328;
  }
  if (v662)
  {
LABEL_303:
    uint64_t v668 = sub_253462A5C(&qword_269CE04C8);
    memcpy(v658, v659, *(void *)(*(void *)(v668 - 8) + 64));
    goto LABEL_329;
  }
  v862 = a1;
  *(_OWORD *)v658 = *(_OWORD *)v659;
  uint64_t v663 = *(int *)(v660 + 24);
  v664 = &v658[v663];
  v665 = &v659[v663];
  uint64_t v666 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v665, 1, v666))
  {
    uint64_t v667 = sub_253462A5C(&qword_269CE04C0);
    memcpy(v664, v665, *(void *)(*(void *)(v667 - 8) + 64));
  }
  else
  {
    char *v664 = *v665;
    uint64_t v706 = *(int *)(v666 + 20);
    v707 = &v664[v706];
    uint64_t v708 = &v665[v706];
    uint64_t v709 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v709 - 8) + 32))(v707, v708, v709);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v664, 0, 1, v666);
  }
  uint64_t v710 = *(int *)(v660 + 28);
  uint64_t v711 = &v658[v710];
  v712 = &v659[v710];
  uint64_t v713 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v713 - 8) + 32))(v711, v712, v713);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v658, 0, 1, v660);
  a1 = v862;
LABEL_329:
  uint64_t v732 = v619[7];
  v733 = &v617[v732];
  uint64_t v734 = &v618[v732];
  uint64_t v736 = *(void *)v734;
  uint64_t v735 = *((void *)v734 + 1);
  *(void *)v733 = v736;
  *((void *)v733 + 1) = v735;
  swift_bridgeObjectRelease();
  uint64_t v737 = v619[8];
  int v738 = &v617[v737];
  int v739 = &v618[v737];
  uint64_t v741 = *(void *)v739;
  uint64_t v740 = *((void *)v739 + 1);
  *(void *)int v738 = v741;
  *((void *)v738 + 1) = v740;
  swift_bridgeObjectRelease();
  v617[v619[9]] = v618[v619[9]];
  v617[v619[10]] = v618[v619[10]];
  uint64_t v742 = v619[11];
  uint64_t v743 = &v617[v742];
  v744 = &v618[v742];
  uint64_t v745 = type metadata accessor for TranscriptProtoUIType(0);
  int v746 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v743, 1, v745);
  int v747 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v744, 1, v745);
  if (v746)
  {
    if (!v747)
    {
      uint64_t v748 = a1;
      uint64_t v749 = type metadata accessor for TranscriptProtoUitype(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v744, 1, v749))
      {
        uint64_t v750 = sub_253462A5C(&qword_269CDCC08);
        memcpy(v743, v744, *(void *)(*(void *)(v750 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *(_OWORD *)uint64_t v743 = *(_OWORD *)v744;
            uint64_t v761 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
            goto LABEL_348;
          case 2u:
            long long v762 = *((_OWORD *)v744 + 1);
            *(_OWORD *)uint64_t v743 = *(_OWORD *)v744;
            *((_OWORD *)v743 + 1) = v762;
            uint64_t v759 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
            break;
          case 3u:
            *(_OWORD *)uint64_t v743 = *(_OWORD *)v744;
            uint64_t v761 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_348:
            uint64_t v759 = *(int *)(v761 + 20);
            break;
          default:
            long long v758 = *((_OWORD *)v744 + 1);
            *(_OWORD *)uint64_t v743 = *(_OWORD *)v744;
            *((_OWORD *)v743 + 1) = v758;
            *((_OWORD *)v743 + 2) = *((_OWORD *)v744 + 2);
            uint64_t v759 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
            break;
        }
        unint64_t v763 = &v743[v759];
        v764 = &v744[v759];
        uint64_t v765 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v765 - 8) + 32))(v763, v764, v765);
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v743, 0, 1, v749);
      }
      a1 = v748;
      uint64_t v766 = *(int *)(v745 + 20);
      uint64_t v767 = &v743[v766];
      unint64_t v768 = &v744[v766];
      uint64_t v769 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v769 - 8) + 32))(v767, v768, v769);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v743, 0, 1, v745);
      goto LABEL_365;
    }
    goto LABEL_335;
  }
  if (!v747)
  {
    v752 = a1;
    uint64_t v753 = type metadata accessor for TranscriptProtoUitype(0);
    int v754 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v743, 1, v753);
    int v755 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v744, 1, v753);
    if (v754)
    {
      if (!v755)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *(_OWORD *)uint64_t v743 = *(_OWORD *)v744;
            uint64_t v779 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
            goto LABEL_358;
          case 2u:
            long long v780 = *((_OWORD *)v744 + 1);
            *(_OWORD *)uint64_t v743 = *(_OWORD *)v744;
            *((_OWORD *)v743 + 1) = v780;
            uint64_t v757 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
            break;
          case 3u:
            *(_OWORD *)uint64_t v743 = *(_OWORD *)v744;
            uint64_t v779 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_358:
            uint64_t v757 = *(int *)(v779 + 20);
            break;
          default:
            long long v756 = *((_OWORD *)v744 + 1);
            *(_OWORD *)uint64_t v743 = *(_OWORD *)v744;
            *((_OWORD *)v743 + 1) = v756;
            *((_OWORD *)v743 + 2) = *((_OWORD *)v744 + 2);
            uint64_t v757 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
            break;
        }
        uint64_t v781 = &v743[v757];
        unint64_t v782 = &v744[v757];
        uint64_t v783 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v783 - 8) + 32))(v781, v782, v783);
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v743, 0, 1, v753);
        goto LABEL_364;
      }
    }
    else
    {
      if (!v755)
      {
        if (v752 != v875)
        {
          sub_2535F2C0C((uint64_t)v743, (void (*)(void))type metadata accessor for TranscriptProtoUitype);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *(_OWORD *)uint64_t v743 = *(_OWORD *)v744;
              uint64_t v784 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
              uint64_t v785 = &v743[v784];
              uint64_t v786 = &v744[v784];
              uint64_t v787 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v787 - 8) + 32))(v785, v786, v787);
              break;
            case 2u:
              long long v788 = *((_OWORD *)v744 + 1);
              *(_OWORD *)uint64_t v743 = *(_OWORD *)v744;
              *((_OWORD *)v743 + 1) = v788;
              uint64_t v789 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
              uint64_t v790 = &v743[v789];
              v791 = &v744[v789];
              uint64_t v792 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v792 - 8) + 32))(v790, v791, v792);
              break;
            case 3u:
              *(_OWORD *)uint64_t v743 = *(_OWORD *)v744;
              uint64_t v793 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
              uint64_t v794 = &v743[v793];
              v795 = &v744[v793];
              uint64_t v796 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v796 - 8) + 32))(v794, v795, v796);
              break;
            default:
              long long v774 = *((_OWORD *)v744 + 1);
              *(_OWORD *)uint64_t v743 = *(_OWORD *)v744;
              *((_OWORD *)v743 + 1) = v774;
              *((_OWORD *)v743 + 2) = *((_OWORD *)v744 + 2);
              uint64_t v775 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
              uint64_t v776 = &v743[v775];
              uint64_t v777 = &v744[v775];
              uint64_t v778 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v778 - 8) + 32))(v776, v777, v778);
              break;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_364;
      }
      sub_2535F2C0C((uint64_t)v743, (void (*)(void))type metadata accessor for TranscriptProtoUitype);
    }
    uint64_t v760 = sub_253462A5C(&qword_269CDCC08);
    memcpy(v743, v744, *(void *)(*(void *)(v760 - 8) + 64));
LABEL_364:
    uint64_t v797 = *(int *)(v745 + 20);
    uint64_t v798 = &v743[v797];
    v799 = &v744[v797];
    uint64_t v800 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v800 - 8) + 40))(v798, v799, v800);
    a1 = v752;
    goto LABEL_365;
  }
  sub_2535F2C0C((uint64_t)v743, (void (*)(void))type metadata accessor for TranscriptProtoUIType);
LABEL_335:
  uint64_t v751 = sub_253462A5C(&qword_269CE04D0);
  memcpy(v743, v744, *(void *)(*(void *)(v751 - 8) + 64));
LABEL_365:
  uint64_t v801 = v619[12];
  uint64_t v802 = &v617[v801];
  unint64_t v803 = &v618[v801];
  uint64_t v804 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v804 - 8) + 40))(v802, v803, v804);
LABEL_366:
  a2 = v875;
  a3 = v890;
LABEL_367:
  uint64_t v805 = a3[9];
  uint64_t v806 = &a1[v805];
  v807 = &a2[v805];
  uint64_t v808 = sub_253B08F00();
  int v809 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v806, 1, v808);
  int v810 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v807, 1, v808);
  if (!v809)
  {
    uint64_t v811 = *(void *)(v808 - 8);
    if (!v810)
    {
      (*(void (**)(char *, char *, uint64_t))(v811 + 40))(v806, v807, v808);
      goto LABEL_373;
    }
    (*(void (**)(char *, uint64_t))(v811 + 8))(v806, v808);
    goto LABEL_372;
  }
  if (v810)
  {
LABEL_372:
    uint64_t v812 = sub_253462A5C(&qword_269CE0368);
    memcpy(v806, v807, *(void *)(*(void *)(v812 - 8) + 64));
    goto LABEL_373;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v808 - 8) + 32))(v806, v807, v808);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v806, 0, 1, v808);
LABEL_373:
  uint64_t v813 = a3[10];
  uint64_t v814 = &a1[v813];
  v815 = &a2[v813];
  uint64_t v816 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v816 - 8) + 40))(v814, v815, v816);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseGenerationProtoStatementResultDigest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2535FA230);
}

uint64_t sub_2535FA230(uint64_t a1, uint64_t a2, int *a3)
{
  sub_253462A5C(&qword_269CDFA70);
  sub_253486600();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_20:
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, a2, v8);
  }
  sub_253462A5C(&qword_269CE0398);
  sub_253486600();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v12 = a3[5];
LABEL_19:
    uint64_t v9 = a1 + v12;
    goto LABEL_20;
  }
  sub_253462A5C(&qword_269CE0388);
  sub_253486600();
  if (*(_DWORD *)(v14 + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v12 = a3[6];
    goto LABEL_19;
  }
  if (a2 != 253)
  {
    sub_253462A5C(&qword_269CE0378);
    sub_253486600();
    if (*(_DWORD *)(v19 + 84) == a2)
    {
      uint64_t v8 = v18;
      uint64_t v12 = a3[8];
    }
    else
    {
      sub_253462A5C(&qword_269CE0368);
      sub_253486600();
      if (*(_DWORD *)(v21 + 84) == a2)
      {
        uint64_t v8 = v20;
        uint64_t v12 = a3[9];
      }
      else
      {
        uint64_t v8 = sub_253B07160();
        uint64_t v12 = a3[10];
      }
    }
    goto LABEL_19;
  }
  if (*(unsigned __int8 *)(a1 + a3[7]) <= 2u) {
    int v15 = 2;
  }
  else {
    int v15 = *(unsigned __int8 *)(a1 + a3[7]);
  }
  unsigned int v16 = v15 - 2;
  if (*(unsigned __int8 *)(a1 + a3[7]) >= 2u) {
    return v16;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ResponseGenerationProtoStatementResultDigest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2535FA39C);
}

void sub_2535FA39C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_253462A5C(&qword_269CDFA70);
  sub_253486600();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_253462A5C(&qword_269CE0398);
    sub_253486600();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      sub_253462A5C(&qword_269CE0388);
      sub_253486600();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[6];
      }
      else
      {
        if (a3 == 253)
        {
          *(unsigned char *)(a1 + a4[7]) = a2 + 2;
          return;
        }
        sub_253462A5C(&qword_269CE0378);
        sub_253486600();
        if (*(_DWORD *)(v18 + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v14 = a4[8];
        }
        else
        {
          sub_253462A5C(&qword_269CE0368);
          sub_253486600();
          if (*(_DWORD *)(v20 + 84) == a3)
          {
            uint64_t v10 = v19;
            uint64_t v14 = a4[9];
          }
          else
          {
            uint64_t v10 = sub_253B07160();
            uint64_t v14 = a4[10];
          }
        }
      }
    }
    uint64_t v11 = a1 + v14;
  }
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v11, a2, a2, v10);
}

void sub_2535FA4E8()
{
  sub_2535FA734(319, &qword_26B24A368, MEMORY[0x263F80360]);
  if (v0 <= 0x3F)
  {
    sub_2535FA734(319, &qword_269CE04E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoAction);
    if (v1 <= 0x3F)
    {
      sub_2535FA734(319, &qword_26B249908, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementOutcome);
      if (v2 <= 0x3F)
      {
        sub_2535FA734(319, &qword_26B2498D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseManifest);
        if (v3 <= 0x3F)
        {
          sub_2535FA734(319, &qword_269CE04F0, MEMORY[0x263F80348]);
          if (v4 <= 0x3F)
          {
            sub_253B07160();
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void sub_2535FA734(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_253B09E00();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2535FA788()
{
  return type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
}

BOOL sub_2535FA7A0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v3 = (int)a1;
      uint64_t v2 = a1 >> 32;
      break;
    case 2uLL:
      uint64_t v3 = *(void *)(a1 + 16);
      uint64_t v2 = *(void *)(a1 + 24);
      break;
    case 3uLL:
      return v3 == v2;
    default:
      uint64_t v3 = 0;
      uint64_t v2 = BYTE6(a2);
      break;
  }
  return v3 == v2;
}

uint64_t sub_2535FA804()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CE04F8);
  sub_253462BD4(v0, (uint64_t)qword_269CE04F8);
  sub_253462A5C(&qword_26B24A588);
  unint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B34E50;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "ENTITY_QUERY";
  *(void *)(v6 + 8) = 12;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "SIRI_VOCABULARY";
  *(void *)(v10 + 8) = 15;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 2;
  *(void *)uint64_t v12 = "USER_FEEDBACK_LEARNING";
  *((void *)v12 + 1) = 22;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 3;
  *(void *)uint64_t v14 = "MEGADOME_ECR";
  *((void *)v14 + 1) = 12;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 4;
  *(void *)uint64_t v16 = "CONTEXT_REGISTRY";
  *((void *)v16 + 1) = 16;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 5;
  *(void *)uint64_t v18 = "RETURN_VALUE";
  *((void *)v18 + 1) = 12;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v2);
  uint64_t v20 = (char *)v19 + v1[14];
  void *v19 = 6;
  *(void *)uint64_t v20 = "USER_PROMPT";
  *((void *)v20 + 1) = 11;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v5 + 7 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *uint64_t v21 = 7;
  *(void *)uint64_t v22 = "OMNISEARCH";
  *((void *)v22 + 1) = 10;
  v22[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static TranscriptProtoCandidateSource._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA958, (uint64_t)qword_269CE04F8, a1);
}

uint64_t sub_2535FAB68()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CE0510);
  sub_253462BD4(v0, (uint64_t)qword_269CE0510);
  sub_253462A5C(&qword_26B24A588);
  unint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B22690;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 0;
  *(void *)unint64_t v6 = "deviceUnlockRequired";
  *(void *)(v6 + 8) = 20;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)unint64_t v10 = "appLaunchRequired";
  *((void *)v10 + 1) = 17;
  v10[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static TranscriptProtoSystemRequirement._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA960, (uint64_t)qword_269CE0510, a1);
}

uint64_t sub_2535FAD54()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CE0528);
  sub_253462BD4(v0, (uint64_t)qword_269CE0528);
  sub_253462A5C(&qword_26B24A588);
  unint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B34E60;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "notSet";
  *(void *)(v6 + 8) = 6;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "prescribedPlanGenerator";
  *(void *)(v10 + 8) = 23;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "planOverride";
  *((void *)v12 + 1) = 12;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 4;
  *(void *)uint64_t v14 = "fullPlanner";
  *((void *)v14 + 1) = 11;
  v14[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static TranscriptProtoPlanSource._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA968, (uint64_t)qword_269CE0528, a1);
}

uint64_t sub_2535FAFBC()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CE0540);
  sub_253462BD4(v0, (uint64_t)qword_269CE0540);
  sub_253462A5C(&qword_26B24A588);
  unint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_253B3B310;
  unint64_t v4 = v28 + v3 + v1[14];
  *(void *)(v28 + v3) = 0;
  *(void *)unint64_t v4 = "QueryOperator_UNKNOWN";
  *(void *)(v4 + 8) = 21;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = *MEMORY[0x263F50718];
  uint64_t v6 = sub_253B07510();
  uint64_t v7 = *(void (**)(void))(*(void *)(v6 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v7)(v4, v5, v6);
  unint64_t v8 = v28 + v3 + v2 + v1[14];
  *(void *)(v28 + v3 + v2) = 1;
  *(void *)unint64_t v8 = "QueryOperator_EQUALTO";
  *(void *)(v8 + 8) = 21;
  *(unsigned char *)(v8 + 16) = 2;
  v7();
  uint64_t v9 = (void *)(v28 + v3 + 2 * v2);
  unint64_t v10 = (char *)v9 + v1[14];
  void *v9 = 2;
  *(void *)unint64_t v10 = "QueryOperator_NOTEQUALTO";
  *((void *)v10 + 1) = 24;
  v10[16] = 2;
  v7();
  uint64_t v11 = (void *)(v28 + v3 + 3 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "QueryOperator_GREATERTHAN_OP";
  *((void *)v12 + 1) = 28;
  v12[16] = 2;
  v7();
  uint64_t v13 = (void *)(v28 + v3 + 4 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 4;
  *(void *)uint64_t v14 = "QueryOperator_GREATERTHANOREQUALTO";
  *((void *)v14 + 1) = 34;
  v14[16] = 2;
  v7();
  uint64_t v15 = (void *)(v28 + v3 + 5 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "QueryOperator_LESSTHAN_OP";
  *((void *)v16 + 1) = 25;
  v16[16] = 2;
  v7();
  uint64_t v17 = (void *)(v28 + v3 + 6 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)uint64_t v18 = "QueryOperator_LESSTHANOREQUALTO";
  *((void *)v18 + 1) = 31;
  v18[16] = 2;
  v7();
  uint64_t v19 = (void *)(v28 + v3 + 7 * v2);
  uint64_t v20 = (char *)v19 + v1[14];
  void *v19 = 7;
  *(void *)uint64_t v20 = "QueryOperator_CONTAINS";
  *((void *)v20 + 1) = 22;
  v20[16] = 2;
  v7();
  uint64_t v21 = (void *)(v28 + v3 + 8 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *uint64_t v21 = 8;
  *(void *)uint64_t v22 = "QueryOperator_HASPREFIX";
  *((void *)v22 + 1) = 23;
  v22[16] = 2;
  v7();
  uint64_t v23 = (void *)(v28 + v3 + 9 * v2);
  uint64_t v24 = (char *)v23 + v1[14];
  *uint64_t v23 = 9;
  *(void *)uint64_t v24 = "QueryOperator_HASSUFFIX";
  *((void *)v24 + 1) = 23;
  v24[16] = 2;
  v7();
  uint64_t v25 = (void *)(v28 + v3 + 10 * v2);
  uint64_t v26 = (char *)v25 + v1[14];
  void *v25 = 10;
  *(void *)uint64_t v26 = "QueryOperator_ISBETWEEN";
  *((void *)v26 + 1) = 23;
  v26[16] = 2;
  v7();
  return sub_253B07520();
}

uint64_t static TranscriptProtoQueryOperator._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA970, (uint64_t)qword_269CE0540, a1);
}

uint64_t sub_2535FB3C8()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CE0558);
  sub_253462BD4(v0, (uint64_t)qword_269CE0558);
  sub_253462A5C(&qword_26B24A588);
  unint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B34E30;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 0;
  *(void *)unint64_t v6 = "Completion";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)unint64_t v10 = "Disambiguation";
  *((void *)v10 + 1) = 14;
  v10[16] = 2;
  v9();
  uint64_t v11 = (void *)((char *)v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 2;
  *(void *)uint64_t v12 = "Confirmation";
  *((void *)v12 + 1) = 12;
  v12[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static TranscriptProtoResponseType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA978, (uint64_t)qword_269CE0558, a1);
}

uint64_t sub_2535FB5F0()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CE0570);
  sub_253462BD4(v0, (uint64_t)qword_269CE0570);
  sub_253462A5C(&qword_26B24A588);
  unint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B22690;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 0;
  *(void *)unint64_t v6 = "NONE";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)unint64_t v10 = "SUPPRESS_PRINT";
  *((void *)v10 + 1) = 14;
  v10[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static TranscriptProtoResponseDialogPresentationHint._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA980, (uint64_t)qword_269CE0570, a1);
}

uint64_t sub_2535FB7DC()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CE0588);
  sub_253462BD4(v0, (uint64_t)qword_269CE0588);
  sub_253462A5C(&qword_26B24A588);
  unint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B22690;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 0;
  *(void *)unint64_t v6 = "ASTUpdateKind_APPEND";
  *(void *)(v6 + 8) = 20;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)unint64_t v10 = "ASTUpdateKind_REPLACE";
  *((void *)v10 + 1) = 21;
  v10[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static TranscriptProtoASTUpdateKind._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA988, (uint64_t)qword_269CE0588, a1);
}

uint64_t sub_2535FB9C8()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CE05A0);
  sub_253462BD4(v0, (uint64_t)qword_269CE05A0);
  sub_253462A5C(&qword_26B24A588);
  unint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B34E30;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 0;
  *(void *)unint64_t v6 = "plus";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)unint64_t v10 = "minus";
  *((void *)v10 + 1) = 5;
  v10[16] = 2;
  v9();
  uint64_t v11 = (void *)((char *)v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 2;
  *(void *)uint64_t v12 = "not";
  *((void *)v12 + 1) = 3;
  v12[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static TranscriptProtoPrefixExpression_PrefixOp._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA990, (uint64_t)qword_269CE05A0, a1);
}

uint64_t sub_2535FBBF0()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CE05B8);
  sub_253462BD4(v0, (uint64_t)qword_269CE05B8);
  sub_253462A5C(&qword_26B24A588);
  unint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_253B3B320;
  unint64_t v4 = v44 + v3 + v1[14];
  *(void *)(v44 + v3) = 0;
  *(void *)unint64_t v4 = "assign";
  *(void *)(v4 + 8) = 6;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = *MEMORY[0x263F50718];
  uint64_t v6 = sub_253B07510();
  uint64_t v7 = *(void (**)(void))(*(void *)(v6 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v7)(v4, v5, v6);
  unint64_t v8 = v44 + v3 + v2 + v1[14];
  *(void *)(v44 + v3 + v2) = 1;
  *(void *)unint64_t v8 = "add";
  *(void *)(v8 + 8) = 3;
  *(unsigned char *)(v8 + 16) = 2;
  v7();
  uint64_t v9 = (void *)(v44 + v3 + 2 * v2);
  unint64_t v10 = (char *)v9 + v1[14];
  void *v9 = 2;
  *(void *)unint64_t v10 = "addAssign";
  *((void *)v10 + 1) = 9;
  v10[16] = 2;
  v7();
  uint64_t v11 = (void *)(v44 + v3 + 3 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "subtract";
  *((void *)v12 + 1) = 8;
  v12[16] = 2;
  v7();
  uint64_t v13 = (void *)(v44 + v3 + 4 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 4;
  *(void *)uint64_t v14 = "subtractAssign";
  *((void *)v14 + 1) = 14;
  v14[16] = 2;
  v7();
  uint64_t v15 = (void *)(v44 + v3 + 5 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "divide";
  *((void *)v16 + 1) = 6;
  v16[16] = 2;
  v7();
  uint64_t v17 = (void *)(v44 + v3 + 6 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)uint64_t v18 = "divideAssign";
  *((void *)v18 + 1) = 12;
  v18[16] = 2;
  v7();
  uint64_t v19 = (void *)(v44 + v3 + 7 * v2);
  uint64_t v20 = (char *)v19 + v1[14];
  void *v19 = 7;
  *(void *)uint64_t v20 = "multiply";
  *((void *)v20 + 1) = 8;
  v20[16] = 2;
  v7();
  uint64_t v21 = (void *)(v44 + v3 + 8 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *uint64_t v21 = 8;
  *(void *)uint64_t v22 = "multiplyAssign";
  *((void *)v22 + 1) = 14;
  v22[16] = 2;
  v7();
  uint64_t v23 = (void *)(v44 + v3 + 9 * v2);
  uint64_t v24 = (char *)v23 + v1[14];
  *uint64_t v23 = 9;
  *(void *)uint64_t v24 = "exponent";
  *((void *)v24 + 1) = 8;
  v24[16] = 2;
  v7();
  uint64_t v25 = (void *)(v44 + v3 + 10 * v2);
  uint64_t v26 = (char *)v25 + v1[14];
  void *v25 = 10;
  *(void *)uint64_t v26 = "equal";
  *((void *)v26 + 1) = 5;
  v26[16] = 2;
  v7();
  long long v27 = (void *)(v44 + v3 + 11 * v2);
  uint64_t v28 = (char *)v27 + v1[14];
  void *v27 = 11;
  *(void *)uint64_t v28 = "notEqual";
  *((void *)v28 + 1) = 8;
  v28[16] = 2;
  v7();
  uint64_t v29 = (void *)(v44 + v3 + 12 * v2);
  int v30 = (char *)v29 + v1[14];
  *uint64_t v29 = 12;
  *(void *)int v30 = "in";
  *((void *)v30 + 1) = 2;
  v30[16] = 2;
  v7();
  int v31 = (void *)(v44 + v3 + 13 * v2);
  uint64_t v32 = (char *)v31 + v1[14];
  *int v31 = 13;
  *(void *)uint64_t v32 = "greaterThanEqual";
  *((void *)v32 + 1) = 16;
  v32[16] = 2;
  v7();
  uint64_t v33 = (void *)(v44 + v3 + 14 * v2);
  uint64_t v34 = (char *)v33 + v1[14];
  void *v33 = 14;
  *(void *)uint64_t v34 = "greaterThan";
  *((void *)v34 + 1) = 11;
  v34[16] = 2;
  v7();
  uint64_t v35 = (void *)(v44 + v3 + 15 * v2);
  uint64_t v36 = (char *)v35 + v1[14];
  *uint64_t v35 = 15;
  *(void *)uint64_t v36 = "lessThanEqual";
  *((void *)v36 + 1) = 13;
  v36[16] = 2;
  v7();
  uint64_t v37 = (void *)(v44 + v3 + 16 * v2);
  uint64_t v38 = (char *)v37 + v1[14];
  *uint64_t v37 = 16;
  *(void *)uint64_t v38 = "lessThan";
  *((void *)v38 + 1) = 8;
  v38[16] = 2;
  v7();
  uint64_t v39 = (void *)(v44 + v3 + 17 * v2);
  uint64_t v40 = (char *)v39 + v1[14];
  *uint64_t v39 = 17;
  *(void *)uint64_t v40 = "and";
  *((void *)v40 + 1) = 3;
  v40[16] = 2;
  v7();
  uint64_t v41 = (void *)(v44 + v3 + 18 * v2);
  uint64_t v42 = (char *)v41 + v1[14];
  void *v41 = 18;
  *(void *)uint64_t v42 = "or";
  *((void *)v42 + 1) = 2;
  v42[16] = 2;
  v7();
  return sub_253B07520();
}

uint64_t static TranscriptProtoInfixExpression_InfixOp._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA998, (uint64_t)qword_269CE05B8, a1);
}

uint64_t sub_2535FC1D8()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CE05D0);
  sub_253462BD4(v0, (uint64_t)qword_269CE05D0);
  sub_253462A5C(&qword_26B24A588);
  unint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_253B3B320;
  unint64_t v4 = v44 + v3 + v1[14];
  *(void *)(v44 + v3) = 0;
  *(void *)unint64_t v4 = "ASTInfixOp_ASSIGN";
  *(void *)(v4 + 8) = 17;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = *MEMORY[0x263F50718];
  uint64_t v6 = sub_253B07510();
  uint64_t v7 = *(void (**)(void))(*(void *)(v6 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v7)(v4, v5, v6);
  unint64_t v8 = v44 + v3 + v2 + v1[14];
  *(void *)(v44 + v3 + v2) = 1;
  *(void *)unint64_t v8 = "ASTInfixOp_ADD";
  *(void *)(v8 + 8) = 14;
  *(unsigned char *)(v8 + 16) = 2;
  v7();
  uint64_t v9 = (void *)(v44 + v3 + 2 * v2);
  unint64_t v10 = (char *)v9 + v1[14];
  void *v9 = 2;
  *(void *)unint64_t v10 = "ASTInfixOp_ADDASSIGN";
  *((void *)v10 + 1) = 20;
  v10[16] = 2;
  v7();
  uint64_t v11 = (void *)(v44 + v3 + 3 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "ASTInfixOp_SUBTRACT";
  *((void *)v12 + 1) = 19;
  v12[16] = 2;
  v7();
  uint64_t v13 = (void *)(v44 + v3 + 4 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 4;
  *(void *)uint64_t v14 = "ASTInfixOp_SUBTRACTASSIGN";
  *((void *)v14 + 1) = 25;
  v14[16] = 2;
  v7();
  uint64_t v15 = (void *)(v44 + v3 + 5 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "ASTInfixOp_DIVIDE";
  *((void *)v16 + 1) = 17;
  v16[16] = 2;
  v7();
  uint64_t v17 = (void *)(v44 + v3 + 6 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)uint64_t v18 = "ASTInfixOp_DIVIDEASSIGN";
  *((void *)v18 + 1) = 23;
  v18[16] = 2;
  v7();
  uint64_t v19 = (void *)(v44 + v3 + 7 * v2);
  uint64_t v20 = (char *)v19 + v1[14];
  void *v19 = 7;
  *(void *)uint64_t v20 = "ASTInfixOp_MULTIPLY";
  *((void *)v20 + 1) = 19;
  v20[16] = 2;
  v7();
  uint64_t v21 = (void *)(v44 + v3 + 8 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *uint64_t v21 = 8;
  *(void *)uint64_t v22 = "ASTInfixOp_MULTIPLYASSIGN";
  *((void *)v22 + 1) = 25;
  v22[16] = 2;
  v7();
  uint64_t v23 = (void *)(v44 + v3 + 9 * v2);
  uint64_t v24 = (char *)v23 + v1[14];
  *uint64_t v23 = 9;
  *(void *)uint64_t v24 = "ASTInfixOp_EXPONENT";
  *((void *)v24 + 1) = 19;
  v24[16] = 2;
  v7();
  uint64_t v25 = (void *)(v44 + v3 + 10 * v2);
  uint64_t v26 = (char *)v25 + v1[14];
  void *v25 = 10;
  *(void *)uint64_t v26 = "ASTInfixOp_EQUAL";
  *((void *)v26 + 1) = 16;
  v26[16] = 2;
  v7();
  long long v27 = (void *)(v44 + v3 + 11 * v2);
  uint64_t v28 = (char *)v27 + v1[14];
  void *v27 = 11;
  *(void *)uint64_t v28 = "ASTInfixOp_NOTEQUAL";
  *((void *)v28 + 1) = 19;
  v28[16] = 2;
  v7();
  uint64_t v29 = (void *)(v44 + v3 + 12 * v2);
  int v30 = (char *)v29 + v1[14];
  *uint64_t v29 = 12;
  *(void *)int v30 = "ASTInfixOp_IN";
  *((void *)v30 + 1) = 13;
  v30[16] = 2;
  v7();
  int v31 = (void *)(v44 + v3 + 13 * v2);
  uint64_t v32 = (char *)v31 + v1[14];
  *int v31 = 13;
  *(void *)uint64_t v32 = "ASTInfixOp_GREATERTHANEQUAL";
  *((void *)v32 + 1) = 27;
  v32[16] = 2;
  v7();
  uint64_t v33 = (void *)(v44 + v3 + 14 * v2);
  uint64_t v34 = (char *)v33 + v1[14];
  void *v33 = 14;
  *(void *)uint64_t v34 = "ASTInfixOp_GREATERTHAN";
  *((void *)v34 + 1) = 22;
  v34[16] = 2;
  v7();
  uint64_t v35 = (void *)(v44 + v3 + 15 * v2);
  uint64_t v36 = (char *)v35 + v1[14];
  *uint64_t v35 = 15;
  *(void *)uint64_t v36 = "ASTInfixOp_LESSTHANEQUAL";
  *((void *)v36 + 1) = 24;
  v36[16] = 2;
  v7();
  uint64_t v37 = (void *)(v44 + v3 + 16 * v2);
  uint64_t v38 = (char *)v37 + v1[14];
  *uint64_t v37 = 16;
  *(void *)uint64_t v38 = "ASTInfixOp_LESSTHAN";
  *((void *)v38 + 1) = 19;
  v38[16] = 2;
  v7();
  uint64_t v39 = (void *)(v44 + v3 + 17 * v2);
  uint64_t v40 = (char *)v39 + v1[14];
  *uint64_t v39 = 17;
  *(void *)uint64_t v40 = "ASTInfixOp_AND";
  *((void *)v40 + 1) = 14;
  v40[16] = 2;
  v7();
  uint64_t v41 = (void *)(v44 + v3 + 18 * v2);
  uint64_t v42 = (char *)v41 + v1[14];
  void *v41 = 18;
  *(void *)uint64_t v42 = "ASTInfixOp_OR";
  *((void *)v42 + 1) = 13;
  v42[16] = 2;
  v7();
  return sub_253B07520();
}

uint64_t static TranscriptProtoASTInfixOp._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA9A0, (uint64_t)qword_269CE05D0, a1);
}

uint64_t sub_2535FC7CC()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CE05E8);
  sub_253462BD4(v0, (uint64_t)qword_269CE05E8);
  sub_253462A5C(&qword_26B24A588);
  unint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B34E30;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 0;
  *(void *)unint64_t v6 = "ASTPrefixOp_PLUS";
  *(void *)(v6 + 8) = 16;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)unint64_t v10 = "ASTPrefixOp_MINUS";
  *((void *)v10 + 1) = 17;
  v10[16] = 2;
  v9();
  uint64_t v11 = (void *)((char *)v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 2;
  *(void *)uint64_t v12 = "ASTPrefixOp_NOT";
  *((void *)v12 + 1) = 15;
  v12[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static TranscriptProtoASTPrefixOp._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA9A8, (uint64_t)qword_269CE05E8, a1);
}

uint64_t sub_2535FC9F4()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CE0600);
  sub_253462BD4(v0, (uint64_t)qword_269CE0600);
  sub_253462A5C(&qword_26B24A588);
  unint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B22690;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 0;
  *(void *)unint64_t v6 = "append";
  *(void *)(v6 + 8) = 6;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)unint64_t v10 = "replace";
  *((void *)v10 + 1) = 7;
  v10[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static TranscriptProtoUpdateParameterExpression_UpdateKind._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA9B0, (uint64_t)qword_269CE0600, a1);
}

uint64_t sub_2535FCBE0()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CE0618);
  sub_253462BD4(v0, (uint64_t)qword_269CE0618);
  sub_253462A5C(&qword_26B24A588);
  unint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B22690;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 0;
  *(void *)unint64_t v6 = "undo";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)unint64_t v10 = "redo";
  *((void *)v10 + 1) = 4;
  v10[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static TranscriptProtoUndoOperation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA9B8, (uint64_t)qword_269CE0618, a1);
}

unint64_t static TranscriptProtoEvent.protoMessageName.getter()
{
  return sub_2535B3A28(16);
}

uint64_t sub_2535FCDE4()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_26B2491B0);
  sub_253462BD4(v0, (uint64_t)qword_26B2491B0);
  sub_253462A5C(&qword_26B24A588);
  unint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_253B3B330;
  unint64_t v4 = v32 + v3 + v1[14];
  *(void *)(v32 + v3) = 11;
  *(void *)unint64_t v4 = "rawId";
  *(void *)(v4 + 8) = 5;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = *MEMORY[0x263F50718];
  uint64_t v6 = sub_253B07510();
  uint64_t v7 = *(void (**)(void))(*(void *)(v6 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v7)(v4, v5, v6);
  unint64_t v8 = v32 + v3 + v2 + v1[14];
  *(void *)(v32 + v3 + v2) = 1;
  *(void *)unint64_t v8 = "rawSessionId";
  *(void *)(v8 + 8) = 12;
  *(unsigned char *)(v8 + 16) = 2;
  v7();
  uint64_t v9 = (void *)(v32 + v3 + 2 * v2);
  unint64_t v10 = (char *)v9 + v1[14];
  void *v9 = 12;
  *(void *)unint64_t v10 = "rawQueryEventId";
  *((void *)v10 + 1) = 15;
  v10[16] = 2;
  v7();
  uint64_t v11 = (void *)(v32 + v3 + 3 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 2;
  *(void *)uint64_t v12 = "rawPayload";
  *((void *)v12 + 1) = 10;
  v12[16] = 2;
  v7();
  uint64_t v13 = (void *)(v32 + v3 + 4 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 3;
  *(void *)uint64_t v14 = "clientRequestId";
  *((void *)v14 + 1) = 15;
  v14[16] = 2;
  v7();
  uint64_t v15 = (void *)(v32 + v3 + 5 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 4;
  *(void *)uint64_t v16 = "clientSessionId";
  *((void *)v16 + 1) = 15;
  v16[16] = 2;
  v7();
  uint64_t v17 = (void *)(v32 + v3 + 6 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 9;
  *(void *)uint64_t v18 = "clientApplicationId";
  *((void *)v18 + 1) = 19;
  v18[16] = 2;
  v7();
  uint64_t v19 = (void *)(v32 + v3 + 7 * v2);
  uint64_t v20 = (char *)v19 + v1[14];
  void *v19 = 10;
  *(void *)uint64_t v20 = "clientGroupId";
  *((void *)v20 + 1) = 13;
  v20[16] = 2;
  v7();
  uint64_t v21 = (void *)(v32 + v3 + 8 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *uint64_t v21 = 13;
  *(void *)uint64_t v22 = "timepoint";
  *((void *)v22 + 1) = 9;
  v22[16] = 2;
  v7();
  uint64_t v23 = (void *)(v32 + v3 + 9 * v2);
  uint64_t v24 = (char *)v23 + v1[14];
  *uint64_t v23 = 5;
  *(void *)uint64_t v24 = "rawTimestamp";
  *((void *)v24 + 1) = 12;
  v24[16] = 2;
  v7();
  uint64_t v25 = (void *)(v32 + v3 + 10 * v2);
  uint64_t v26 = (char *)v25 + v1[14];
  void *v25 = 6;
  *(void *)uint64_t v26 = "sender";
  *((void *)v26 + 1) = 6;
  v26[16] = 2;
  v7();
  long long v27 = (void *)(v32 + v3 + 11 * v2);
  uint64_t v28 = (char *)v27 + v1[14];
  void *v27 = 7;
  *(void *)uint64_t v28 = "postingSpan";
  *((void *)v28 + 1) = 11;
  v28[16] = 2;
  v7();
  uint64_t v29 = (void *)(v32 + v3 + 12 * v2);
  int v30 = (char *)v29 + v1[14];
  *uint64_t v29 = 8;
  *(void *)int v30 = "rawInitiatedSpans";
  *((void *)v30 + 1) = 17;
  v30[16] = 2;
  v7();
  return sub_253B07520();
}

uint64_t static TranscriptProtoEvent._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_26B2491D0, (uint64_t)qword_26B2491B0, a1);
}

void TranscriptProtoEvent.decodeMessage<A>(decoder:)()
{
  sub_2534847F8();
  uint64_t v1 = sub_2535B3890();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
        case 3:
        case 4:
        case 9:
        case 11:
          sub_2536D2DF8();
          break;
        case 2:
          sub_2535B387C();
          sub_2535FD3BC();
          break;
        case 5:
          sub_2535B387C();
          sub_2535FD46C();
          break;
        case 6:
          sub_2535B387C();
          sub_2535FD51C();
          break;
        case 7:
          sub_2535B387C();
          sub_2535FD5CC();
          break;
        case 8:
          sub_2535B387C();
          sub_2535FD67C();
          break;
        case 10:
          sub_2535B387C();
          sub_2535FD6FC();
          break;
        case 12:
          sub_2536D2EE0();
          break;
        case 13:
          sub_2535B387C();
          sub_2535FD760();
          break;
        default:
          break;
      }
      uint64_t v1 = sub_2535B3A9C();
    }
  }
  sub_2534847C8();
}

uint64_t sub_2535FD3BC()
{
  return sub_253B07380();
}

uint64_t sub_2535FD46C()
{
  return sub_253B07380();
}

uint64_t sub_2535FD51C()
{
  return sub_253B07380();
}

uint64_t sub_2535FD5CC()
{
  return sub_253B07380();
}

uint64_t sub_2535FD67C()
{
  return sub_253B07220();
}

uint64_t sub_2535FD6FC()
{
  return sub_253B07330();
}

uint64_t sub_2535FD760()
{
  return sub_253B07380();
}

void TranscriptProtoEvent.traverse<A>(visitor:)()
{
  sub_2535B45A0();
  sub_2536D4214();
  sub_2535B399C();
  if (!v2 || (sub_2535B3B2C(), !v0))
  {
    uint64_t v3 = sub_2536D2ABC();
    sub_2535FD9CC(v3);
    if (!v0)
    {
      sub_2535B399C();
      if (v4) {
        sub_2535B3B2C();
      }
      sub_2535B399C();
      if (v5) {
        sub_2535B3B2C();
      }
      uint64_t v6 = sub_2536D2ABC();
      sub_2535FDB8C(v6, v7, v8, v9);
      uint64_t v10 = sub_2536D2ABC();
      sub_2535FDD80(v10);
      uint64_t v11 = sub_2536D2ABC();
      sub_2535FDF40(v11);
      if (*(void *)(*(void *)(v1 + 80) + 16))
      {
        sub_253B07110();
        sub_253B07130();
        sub_253B07420();
      }
      sub_2535B399C();
      if (v12) {
        sub_2535B3B2C();
      }
      uint64_t v13 = sub_2536D2ABC();
      sub_2535FE100(v13);
      sub_2535B399C();
      if (v14) {
        sub_2535B3B2C();
      }
      uint64_t v15 = sub_2536D2ABC();
      sub_2535FE178(v15);
      uint64_t v16 = sub_2536D2ABC();
      sub_2535FE1B4(v16);
      type metadata accessor for TranscriptProtoEvent(0);
      sub_2536D2D20();
    }
  }
  sub_2535B4660();
}

uint64_t sub_2535FD9CC(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2493A0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoPayload(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TranscriptProtoEvent(0);
  sub_2535B37D8(a1 + *(int *)(v8 + 44), (uint64_t)v4, &qword_26B2493A0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) == 1) {
    return sub_2534B2064((uint64_t)v4, &qword_26B2493A0);
  }
  sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoPayload);
  sub_2536D25DC(&qword_26B249380, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPayload);
  sub_253B07500();
  return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoPayload);
}

uint64_t sub_2535FDB8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = sub_253462A5C(&qword_26B248D00);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253B07100();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TranscriptProtoEvent(0);
  sub_2535B37D8(a1 + *(int *)(v12 + 56), (uint64_t)v7, &qword_26B248D00);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v8) == 1) {
    return sub_2534B2064((uint64_t)v7, &qword_26B248D00);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  sub_2536D25DC(&qword_26B248CF8, MEMORY[0x263F502F0]);
  sub_253B07500();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_2535FDD80(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2496F0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoParticipantID(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TranscriptProtoEvent(0);
  sub_2535B37D8(a1 + *(int *)(v8 + 60), (uint64_t)v4, &qword_26B2496F0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) == 1) {
    return sub_2534B2064((uint64_t)v4, &qword_26B2496F0);
  }
  sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoParticipantID);
  sub_2536D25DC(&qword_26B2496D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParticipantID);
  sub_253B07500();
  return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoParticipantID);
}

uint64_t sub_2535FDF40(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2492C8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoSpanID(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TranscriptProtoEvent(0);
  sub_2535B37D8(a1 + *(int *)(v8 + 64), (uint64_t)v4, &qword_26B2492C8);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) == 1) {
    return sub_2534B2064((uint64_t)v4, &qword_26B2492C8);
  }
  sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoSpanID);
  sub_2536D25DC(&qword_26B2492A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSpanID);
  sub_253B07500();
  return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoSpanID);
}

uint64_t sub_2535FE100(uint64_t a1)
{
  uint64_t result = type metadata accessor for TranscriptProtoEvent(0);
  if (*(void *)(a1 + *(int *)(result + 48) + 8)) {
    return sub_253B074C0();
  }
  return result;
}

uint64_t sub_2535FE178(uint64_t result)
{
  if (*(void *)(result + 96)) {
    return sub_253B074C0();
  }
  return result;
}

uint64_t sub_2535FE1B4(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494B0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoTimepoint(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TranscriptProtoEvent(0);
  sub_2535B37D8(a1 + *(int *)(v8 + 52), (uint64_t)v4, &qword_26B2494B0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) == 1) {
    return sub_2534B2064((uint64_t)v4, &qword_26B2494B0);
  }
  sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoTimepoint);
  sub_2536D25DC(&qword_26B249490, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTimepoint);
  sub_253B07500();
  return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoTimepoint);
}

void static TranscriptProtoEvent.== infix(_:_:)()
{
  sub_2534B3258();
  uint64_t v5 = v4;
  uint64_t v6 = sub_253B07160();
  sub_253465998();
  uint64_t v183 = v7;
  MEMORY[0x270FA5388](v8);
  sub_2534659D8();
  uint64_t v182 = v9;
  sub_2534B324C();
  MEMORY[0x270FA5388](v10);
  sub_2534B35DC();
  uint64_t v181 = v11;
  uint64_t v12 = sub_253483660();
  uint64_t v187 = type metadata accessor for TranscriptProtoSpanID(v12);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v13);
  sub_25346CB04();
  uint64_t v184 = (void *)v14;
  uint64_t v186 = sub_253462A5C(&qword_269CE1A58);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v15);
  sub_25346CB04();
  uint64_t v191 = (uint64_t *)v16;
  uint64_t v17 = sub_253462A5C(&qword_26B2492C8);
  uint64_t v18 = sub_25346CB4C(v17);
  MEMORY[0x270FA5388](v18);
  sub_2534659D8();
  uint64_t v185 = (void *)v19;
  sub_2534B324C();
  MEMORY[0x270FA5388](v20);
  sub_2534B3318();
  uint64_t v190 = v21;
  sub_2534B324C();
  MEMORY[0x270FA5388](v22);
  uint64_t v193 = (uint64_t)&v177 - v23;
  uint64_t v24 = sub_253483660();
  uint64_t v207 = type metadata accessor for TranscriptProtoParticipantID(v24);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v25);
  sub_2536D4180(v26, v177);
  uint64_t v194 = sub_253462A5C(&qword_269CE1A60);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v27);
  sub_2534D9264(v28, v177);
  uint64_t v29 = sub_253462A5C(&qword_26B2496F0);
  uint64_t v30 = sub_25346CB4C(v29);
  MEMORY[0x270FA5388](v30);
  sub_2534659D8();
  uint64_t v189 = (void *)v31;
  sub_2534B324C();
  MEMORY[0x270FA5388](v32);
  sub_2534B3318();
  uint64_t v196 = v33;
  sub_2534B324C();
  MEMORY[0x270FA5388](v34);
  sub_2534B35DC();
  uint64_t v197 = v35;
  uint64_t v202 = sub_253B07100();
  sub_253465998();
  uint64_t v195 = v36;
  MEMORY[0x270FA5388](v37);
  sub_25346CB04();
  uint64_t v192 = v38;
  uint64_t v201 = sub_253462A5C(&qword_269CE1A68);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v39);
  sub_253483644(v40, v177);
  uint64_t v41 = sub_253462A5C(&qword_26B248D00);
  uint64_t v42 = sub_25346CB4C(v41);
  MEMORY[0x270FA5388](v42);
  sub_2534659D8();
  uint64_t v200 = v43;
  sub_2534B324C();
  MEMORY[0x270FA5388](v44);
  uint64_t v204 = (char *)&v177 - v45;
  sub_2534B324C();
  MEMORY[0x270FA5388](v46);
  uint64_t v205 = (char *)&v177 - v47;
  uint64_t v48 = sub_253483660();
  uint64_t v209 = type metadata accessor for TranscriptProtoTimepoint(v48);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v49);
  sub_2534D9BAC(v50, v177);
  uint64_t v208 = sub_253462A5C(&qword_269CE1A70);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v51);
  sub_2534D8F84(v52, v177);
  uint64_t v53 = sub_253462A5C(&qword_26B2494B0);
  uint64_t v54 = sub_25346CB4C(v53);
  MEMORY[0x270FA5388](v54);
  uint64_t v203 = (uint64_t)&v177 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v56);
  uint64_t v211 = (char *)&v177 - v57;
  sub_2534B324C();
  MEMORY[0x270FA5388](v58);
  uint64_t v212 = (uint64_t)&v177 - v59;
  uint64_t v60 = sub_253483660();
  uint64_t v61 = type metadata accessor for TranscriptProtoPayload(v60);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v62);
  sub_25346CC6C();
  uint64_t v63 = sub_253462A5C(&qword_269CE1A78);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v64);
  sub_25348366C();
  uint64_t v65 = sub_253462A5C(&qword_26B2493A0);
  uint64_t v66 = sub_25346CB4C(v65);
  uint64_t v67 = MEMORY[0x270FA5388](v66);
  uint64_t v69 = (char *)&v177 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v67);
  sub_25351C738();
  MEMORY[0x270FA5388](v70);
  sub_2534D9EC0();
  BOOL v72 = *v5 == *v71 && v5[1] == v71[1];
  uint64_t v213 = v71;
  if (v72 || (v73 = sub_253B0A4C0(), uint64_t v71 = v213, (v73 & 1) != 0))
  {
    BOOL v74 = v5[2] == v71[2] && v5[3] == v71[3];
    if (v74 || (v75 = sub_253B0A4C0(), uint64_t v71 = v213, (v75 & 1) != 0))
    {
      uint64_t v76 = v5[12];
      uint64_t v77 = v71[12];
      if (v76)
      {
        if (!v77) {
          goto LABEL_30;
        }
        if (v5[11] != v71[11] || v76 != v77)
        {
          char v79 = sub_253B0A4C0();
          uint64_t v71 = v213;
          if ((v79 & 1) == 0) {
            goto LABEL_30;
          }
        }
      }
      else if (v77)
      {
        goto LABEL_30;
      }
      uint64_t v180 = v6;
      uint64_t v80 = v71;
      uint64_t v81 = type metadata accessor for TranscriptProtoEvent(0);
      uint64_t v82 = v5;
      uint64_t v83 = (int *)v81;
      uint64_t v84 = *(int *)(v81 + 44);
      uint64_t v179 = v82;
      sub_2535B37D8((uint64_t)v82 + v84, v2, &qword_26B2493A0);
      uint64_t v178 = v83;
      sub_2535B37D8((uint64_t)v80 + v83[11], v3, &qword_26B2493A0);
      uint64_t v85 = v0 + *(int *)(v63 + 48);
      sub_2536D3600(v2);
      sub_2536D3690(v3);
      sub_2534D8B48(v0, 1, v61);
      if (v72)
      {
        sub_2535B44F0();
        sub_2535B440C();
        sub_2534D8B48(v85, 1, v61);
        if (v72)
        {
          sub_2534B2064(v0, &qword_26B2493A0);
          goto LABEL_32;
        }
      }
      else
      {
        uint64_t v86 = sub_2534DA5AC();
        sub_2535B37D8(v86, v87, v88);
        sub_2534D8B48(v85, 1, v61);
        if (!v89)
        {
          sub_2536D2624(v85, v1, (void (*)(void))type metadata accessor for TranscriptProtoPayload);
          char v92 = static TranscriptProtoPayload.== infix(_:_:)(v69, v1);
          uint64_t v93 = sub_2536D3880();
          sub_2536D2680(v93, v94);
          sub_2536D3064();
          sub_2536D4EB4();
          uint64_t v95 = sub_2534D99FC();
          sub_2536D2680(v95, v96);
          sub_2536D30AC();
          if ((v92 & 1) == 0) {
            goto LABEL_30;
          }
LABEL_32:
          int v97 = v179;
          uint64_t v98 = v213;
          if (v179[4] != v213[4] || v179[5] != v213[5])
          {
            sub_253B0A4C0();
            sub_2536D5298();
            if ((v100 & 1) == 0) {
              goto LABEL_30;
            }
          }
          if (v97[6] != v98[6] || v97[7] != v98[7])
          {
            sub_253B0A4C0();
            sub_2536D5298();
            if ((v102 & 1) == 0) {
              goto LABEL_30;
            }
          }
          if (v97[8] != v98[8] || v97[9] != v98[9])
          {
            sub_253B0A4C0();
            sub_2536D5298();
            if ((v104 & 1) == 0) {
              goto LABEL_30;
            }
          }
          sub_2536D4084();
          if (v108)
          {
            if (!v105) {
              goto LABEL_30;
            }
            sub_2535B3D0C(v106);
            if (!v72 || v109 != v110)
            {
              sub_253B0A4C0();
              sub_2536D5298();
              if ((v112 & 1) == 0) {
                goto LABEL_30;
              }
            }
          }
          else if (v105)
          {
            goto LABEL_30;
          }
          long long v113 = v178;
          uint64_t v114 = v212;
          uint64_t v115 = v107;
          sub_2535B37D8((uint64_t)v97 + v178[13], v212, &qword_26B2494B0);
          uint64_t v116 = (uint64_t)v211;
          sub_2536D35D0(v115 + v113[13]);
          uint64_t v117 = v210;
          uint64_t v118 = v210 + *(int *)(v208 + 48);
          sub_2535B4508(v114);
          sub_2535B3F2C(v116);
          uint64_t v119 = sub_2536D42D4();
          uint64_t v120 = v209;
          sub_2534D8B48(v119, v121, v209);
          if (v72)
          {
            sub_2536D2F8C();
            sub_2536D3618();
            sub_2534D8B48(v118, 1, v120);
            uint64_t v122 = v206;
            uint64_t v123 = v207;
            uint64_t v124 = (uint64_t)v204;
            uint64_t v125 = (uint64_t)v205;
            if (v72)
            {
              sub_2534B2064(v117, &qword_26B2494B0);
              goto LABEL_66;
            }
          }
          else
          {
            uint64_t v126 = v203;
            sub_2535B37D8(v117, v203, &qword_26B2494B0);
            sub_2534D8B48(v118, 1, v120);
            uint64_t v122 = v206;
            uint64_t v128 = v207;
            uint64_t v124 = (uint64_t)v204;
            uint64_t v125 = (uint64_t)v205;
            if (!v127)
            {
              sub_2536D2624(v118, v199, (void (*)(void))type metadata accessor for TranscriptProtoTimepoint);
              static TranscriptProtoTimepoint.== infix(_:_:)();
              sub_2536D2D64();
              sub_2536D5268();
              sub_2534B2064(v212, &qword_26B2494B0);
              sub_2536D55F0();
              sub_2535B44D8();
              uint64_t v123 = v128;
              if ((v118 & 1) == 0) {
                goto LABEL_30;
              }
LABEL_66:
              uint64_t v129 = v178;
              sub_2536D35D0((uint64_t)v97 + v178[14]);
              sub_2536D3850((uint64_t)v213 + v129[14]);
              uint64_t v130 = v122 + *(int *)(v201 + 48);
              sub_2536D30DC(v125);
              sub_2535B3F2C(v124);
              uint64_t v131 = sub_2536D42B0();
              uint64_t v132 = v202;
              sub_2534D8B48(v131, v133, v202);
              if (v72)
              {
                sub_2536D3618();
                sub_2536D2F8C();
                sub_2534D8B48(v130, 1, v132);
                if (v72)
                {
                  sub_2534B2064(v122, &qword_26B248D00);
                  goto LABEL_76;
                }
              }
              else
              {
                uint64_t v134 = v200;
                sub_2535B37D8(v122, v200, &qword_26B248D00);
                sub_2534D8B48(v130, 1, v132);
                if (!v135)
                {
                  uint64_t v136 = v195;
                  sub_25347FA84();
                  v137();
                  sub_2536D25DC(&qword_269CE1A80, MEMORY[0x263F502F0]);
                  LODWORD(v212) = sub_253B096B0();
                  uint64_t v138 = *(void (**)(void))(v136 + 8);
                  sub_2534D97B4();
                  v138();
                  sub_2536D3618();
                  sub_2536D2F8C();
                  sub_2534D97B4();
                  v138();
                  sub_2535B41B8();
                  if ((v212 & 1) == 0) {
                    goto LABEL_30;
                  }
LABEL_76:
                  long long v139 = v178;
                  uint64_t v140 = &qword_26B2496F0;
                  uint64_t v141 = v197;
                  sub_2536D3850((uint64_t)v97 + v178[15]);
                  uint64_t v142 = sub_2535B3F98(v139[15]);
                  uint64_t v143 = v196;
                  sub_2536D35D0(v142);
                  uint64_t v144 = v198;
                  uint64_t v145 = v198 + *(int *)(v194 + 48);
                  sub_2535B4054(v141);
                  sub_2535B3F2C(v143);
                  uint64_t v146 = sub_2536D3E28();
                  sub_2534D8B48(v146, v147, v123);
                  if (v72)
                  {
                    sub_2536D2F8C();
                    sub_2536D3618();
                    sub_2534D8B48(v145, 1, v123);
                    uint64_t v148 = v193;
                    if (v72)
                    {
                      sub_2534B2064(v198, &qword_26B2496F0);
LABEL_91:
                      uint64_t v158 = v178;
                      uint64_t v159 = &qword_26B2492C8;
                      sub_2536D3850((uint64_t)v97 + v178[16]);
                      uint64_t v160 = sub_2535B3F98(v158[16]);
                      uint64_t v161 = v190;
                      sub_2536D35D0(v160);
                      uint64_t v162 = (uint64_t)v191 + *(int *)(v186 + 48);
                      sub_2535B4054(v148);
                      sub_2536D4F30(v161);
                      uint64_t v163 = sub_2536D3E28();
                      uint64_t v164 = v187;
                      sub_2534D8B48(v163, v165, v187);
                      if (v72)
                      {
                        sub_2536D2F8C();
                        uint64_t v166 = sub_2534DA828();
                        uint64_t v159 = v191;
                        sub_2534B2064(v166, v167);
                        sub_2534D8B48(v162, 1, v164);
                        if (v72)
                        {
                          sub_2534B2064((uint64_t)v159, &qword_26B2492C8);
LABEL_96:
                          sub_2534C07B4();
                          if (v168)
                          {
                            uint64_t v169 = v183;
                            uint64_t v170 = *(void (**)(void))(v183 + 16);
                            sub_253535668();
                            v170();
                            sub_253535668();
                            v170();
                            sub_2536D25DC((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
                            sub_2534D9A44();
                            sub_2536D3748();
                            uint64_t v171 = *(void (**)(void))(v169 + 8);
                            sub_2534D9B10();
                            sub_25347FB18();
                            v171();
                            sub_25353CE60();
                            sub_25347FB18();
                            v171();
                          }
                          goto LABEL_30;
                        }
                      }
                      else
                      {
                        uint64_t v172 = v164;
                        uint64_t v173 = v185;
                        sub_2535B37D8((uint64_t)&qword_26B2492C8, (uint64_t)v185, &qword_26B2492C8);
                        sub_2534D8B48(v162, 1, v172);
                        if (!v174)
                        {
                          uint64_t v175 = v184;
                          sub_2536D2624(v162, (uint64_t)v184, (void (*)(void))type metadata accessor for TranscriptProtoSpanID);
                          if (*v173 == *v175)
                          {
                            sub_2536D25DC((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
                            char v176 = sub_2536D3748();
                            sub_2536D2680((uint64_t)v175, (void (*)(void))type metadata accessor for TranscriptProtoSpanID);
                            sub_2534B2064(v190, &qword_26B2492C8);
                            sub_2534B2064(v193, &qword_26B2492C8);
                            sub_2536D4E54();
                            sub_2534B2064((uint64_t)v191, &qword_26B2492C8);
                            if ((v176 & 1) == 0) {
                              goto LABEL_30;
                            }
                            goto LABEL_96;
                          }
                          sub_2536D2680((uint64_t)v175, (void (*)(void))type metadata accessor for TranscriptProtoSpanID);
                          uint64_t v140 = &qword_26B2492C8;
                          sub_2534B2064(v190, &qword_26B2492C8);
                          sub_2534B2064(v193, &qword_26B2492C8);
                          sub_2536D52D4();
                          uint64_t v91 = (uint64_t)v191;
                          goto LABEL_107;
                        }
                        sub_2534B2064(v190, &qword_26B2492C8);
                        sub_2534B2064(v193, &qword_26B2492C8);
                        sub_2536D2680((uint64_t)v173, (void (*)(void))type metadata accessor for TranscriptProtoSpanID);
                      }
                      int v90 = &qword_269CE1A58;
                      uint64_t v91 = (uint64_t)v159;
LABEL_29:
                      sub_2534B2064(v91, v90);
                      goto LABEL_30;
                    }
                  }
                  else
                  {
                    uint64_t v149 = v189;
                    sub_2535B37D8(v144, (uint64_t)v189, &qword_26B2496F0);
                    sub_2534D8B48(v145, 1, v123);
                    if (!v150)
                    {
                      uint64_t v151 = v145;
                      uint64_t v152 = v188;
                      sub_2536D2624(v151, (uint64_t)v188, (void (*)(void))type metadata accessor for TranscriptProtoParticipantID);
                      BOOL v153 = *v149 == *v152 && v149[1] == v152[1];
                      if (!v153 && (sub_253B0A4C0() & 1) == 0)
                      {
                        sub_2536D2680((uint64_t)v188, (void (*)(void))type metadata accessor for TranscriptProtoParticipantID);
                        sub_2534B2064(v196, &qword_26B2496F0);
                        sub_2534B2064(v197, &qword_26B2496F0);
                        sub_2536D2680((uint64_t)v149, (void (*)(void))type metadata accessor for TranscriptProtoParticipantID);
                        uint64_t v91 = v144;
LABEL_107:
                        int v90 = v140;
                        goto LABEL_29;
                      }
                      uint64_t v154 = (uint64_t)v188;
                      sub_2536D25DC((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
                      char v155 = sub_2536D3748();
                      sub_2536D2680(v154, (void (*)(void))type metadata accessor for TranscriptProtoParticipantID);
                      sub_2534B2064(v196, &qword_26B2496F0);
                      sub_2534B2064(v197, &qword_26B2496F0);
                      sub_2536D42BC();
                      uint64_t v156 = sub_2534DA178();
                      uint64_t v148 = v193;
                      sub_2534B2064(v156, v157);
                      if ((v155 & 1) == 0) {
                        goto LABEL_30;
                      }
                      goto LABEL_91;
                    }
                    sub_2534B2064(v196, &qword_26B2496F0);
                    sub_2534B2064(v197, &qword_26B2496F0);
                    sub_2536D2680((uint64_t)v149, (void (*)(void))type metadata accessor for TranscriptProtoParticipantID);
                  }
                  int v90 = &qword_269CE1A60;
                  uint64_t v91 = v198;
                  goto LABEL_29;
                }
                sub_2536D477C();
                sub_2535B4294();
                (*(void (**)(uint64_t, uint64_t))(v195 + 8))(v134, v132);
              }
              int v90 = &qword_269CE1A68;
              uint64_t v91 = v122;
              goto LABEL_29;
            }
            sub_2536D5250();
            sub_2534B2064(v212, &qword_26B2494B0);
            sub_2536D2680(v126, (void (*)(void))type metadata accessor for TranscriptProtoTimepoint);
          }
          int v90 = &qword_269CE1A70;
          uint64_t v91 = v117;
          goto LABEL_29;
        }
        sub_2535B44C0();
        sub_2535B4130();
        sub_2536D2680((uint64_t)v69, (void (*)(void))type metadata accessor for TranscriptProtoPayload);
      }
      int v90 = &qword_269CE1A78;
      uint64_t v91 = v0;
      goto LABEL_29;
    }
  }
LABEL_30:
  sub_2535B4124();
  sub_253465A14();
}

uint64_t TranscriptProtoEvent.hashValue.getter()
{
  return sub_253612D58((void (*)(void))type metadata accessor for TranscriptProtoEvent, &qword_269CE1A88, (void (*)(uint64_t))type metadata accessor for TranscriptProtoEvent);
}

unint64_t sub_2535FF4EC()
{
  return 0xD000000000000010;
}

uint64_t (*sub_2535FF514())()
{
  return nullsub_1;
}

void sub_2535FF538()
{
}

void sub_2535FF550()
{
}

uint64_t sub_2535FF568(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2536D25DC(&qword_269CE40F0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoEvent);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2535FF5E8()
{
  sub_2536D25DC(&qword_26B2491D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoEvent);
  return sub_253B073E0();
}

uint64_t sub_2535FF658()
{
  sub_2536D25DC(&qword_26B2491D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoEvent);
  return sub_253B073F0();
}

unint64_t static TranscriptProtoPayload.protoMessageName.getter()
{
  return sub_2535B3A28(18);
}

uint64_t sub_2535FF6F0()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_26B249360);
  sub_253462BD4(v0, (uint64_t)qword_26B249360);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v98 = swift_allocObject();
  *(_OWORD *)(v98 + 16) = xmmword_253B3B340;
  unint64_t v4 = v98 + v3 + v1[14];
  *(void *)(v98 + v3) = 46;
  *(void *)unint64_t v4 = "sessionStart";
  *(void *)(v4 + 8) = 12;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = *MEMORY[0x263F50718];
  uint64_t v6 = sub_253B07510();
  uint64_t v7 = *(void (**)(void))(*(void *)(v6 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v7)(v4, v5, v6);
  unint64_t v8 = v98 + v3 + v2 + v1[14];
  *(void *)(v98 + v3 + v2) = 1;
  *(void *)unint64_t v8 = "textQuery";
  *(void *)(v8 + 8) = 9;
  *(unsigned char *)(v8 + 16) = 2;
  v7();
  uint64_t v9 = (void *)(v98 + v3 + 2 * v2);
  uint64_t v10 = (char *)v9 + v1[14];
  void *v9 = 2;
  *(void *)uint64_t v10 = "speechQuery";
  *((void *)v10 + 1) = 11;
  v10[16] = 2;
  v7();
  uint64_t v11 = (void *)(v98 + v3 + 3 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 41;
  *(void *)uint64_t v12 = "request";
  *((void *)v12 + 1) = 7;
  v12[16] = 2;
  v7();
  uint64_t v13 = (void *)(v98 + v3 + 4 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  void *v13 = 3;
  *(void *)uint64_t v14 = "planCreated";
  *((void *)v14 + 1) = 11;
  v14[16] = 2;
  v7();
  uint64_t v15 = (void *)(v98 + v3 + 5 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 4;
  *(void *)uint64_t v16 = "actionCreated";
  *((void *)v16 + 1) = 13;
  v16[16] = 2;
  v7();
  uint64_t v17 = (void *)(v98 + v3 + 6 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 5;
  *(void *)uint64_t v18 = "clientActionCreated";
  *((void *)v18 + 1) = 19;
  v18[16] = 2;
  v7();
  uint64_t v19 = (void *)(v98 + v3 + 7 * v2);
  uint64_t v20 = (char *)v19 + v1[14];
  void *v19 = 6;
  *(void *)uint64_t v20 = "queriesCreated";
  *((void *)v20 + 1) = 14;
  v20[16] = 2;
  v7();
  uint64_t v21 = (void *)(v98 + v3 + 8 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *uint64_t v21 = 7;
  *(void *)uint64_t v22 = "variablesSet";
  *((void *)v22 + 1) = 12;
  v22[16] = 2;
  v7();
  uint64_t v23 = (void *)(v98 + v3 + 9 * v2);
  uint64_t v24 = (char *)v23 + v1[14];
  *uint64_t v23 = 9;
  *(void *)uint64_t v24 = "executorFinished";
  *((void *)v24 + 1) = 16;
  v24[16] = 2;
  v7();
  uint64_t v25 = (void *)(v98 + v3 + 10 * v2);
  uint64_t v26 = (char *)v25 + v1[14];
  void *v25 = 10;
  *(void *)uint64_t v26 = "clientIdentifier";
  *((void *)v26 + 1) = 16;
  v26[16] = 2;
  v7();
  uint64_t v27 = (void *)(v98 + v3 + 11 * v2);
  uint64_t v28 = (char *)v27 + v1[14];
  void *v27 = 11;
  *(void *)uint64_t v28 = "criticalError";
  *((void *)v28 + 1) = 13;
  v28[16] = 2;
  v7();
  uint64_t v29 = (void *)(v98 + v3 + 12 * v2);
  uint64_t v30 = (char *)v29 + v1[14];
  *uint64_t v29 = 47;
  *(void *)uint64_t v30 = "recoverableError";
  *((void *)v30 + 1) = 16;
  v30[16] = 2;
  v7();
  uint64_t v31 = (void *)(v98 + v3 + 13 * v2);
  uint64_t v32 = (char *)v31 + v1[14];
  *uint64_t v31 = 12;
  *(void *)uint64_t v32 = "clientCustom";
  *((void *)v32 + 1) = 12;
  v32[16] = 2;
  v7();
  uint64_t v33 = (void *)(v98 + v3 + 14 * v2);
  uint64_t v34 = (char *)v33 + v1[14];
  void *v33 = 14;
  *(void *)uint64_t v34 = "endOfPlan";
  *((void *)v34 + 1) = 9;
  v34[16] = 2;
  v7();
  uint64_t v35 = (void *)(v98 + v3 + 15 * v2);
  uint64_t v36 = (char *)v35 + v1[14];
  *uint64_t v35 = 15;
  *(void *)uint64_t v36 = "terminate";
  *((void *)v36 + 1) = 9;
  v36[16] = 2;
  v7();
  uint64_t v37 = (void *)(v98 + v3 + 16 * v2);
  uint64_t v38 = (char *)v37 + v1[14];
  *uint64_t v37 = 17;
  *(void *)uint64_t v38 = "systemPromptResolved";
  *((void *)v38 + 1) = 20;
  v38[16] = 2;
  v7();
  uint64_t v39 = (void *)(v98 + v3 + 17 * v2);
  uint64_t v40 = (char *)v39 + v1[14];
  *uint64_t v39 = 18;
  *(void *)uint64_t v40 = "actionExecuted";
  *((void *)v40 + 1) = 14;
  v40[16] = 2;
  v7();
  uint64_t v41 = (void *)(v98 + v3 + 18 * v2);
  uint64_t v42 = (char *)v41 + v1[14];
  void *v41 = 19;
  *(void *)uint64_t v42 = "queriesExecuted";
  *((void *)v42 + 1) = 15;
  v42[16] = 2;
  v7();
  uint64_t v43 = (void *)(v98 + v3 + 19 * v2);
  uint64_t v44 = (char *)v43 + v1[14];
  *uint64_t v43 = 20;
  *(void *)uint64_t v44 = "actionResponseGenerated";
  *((void *)v44 + 1) = 23;
  v44[16] = 2;
  v7();
  uint64_t v45 = (void *)(v98 + v3 + 20 * v2);
  uint64_t v46 = (char *)v45 + v1[14];
  *uint64_t v45 = 21;
  *(void *)uint64_t v46 = "actionResolverRequestCreated";
  *((void *)v46 + 1) = 28;
  v46[16] = 2;
  v7();
  uint64_t v47 = (void *)(v98 + v3 + 21 * v2);
  uint64_t v48 = (char *)v47 + v1[14];
  void *v47 = 22;
  *(void *)uint64_t v48 = "clientInitiatedClientAction";
  *((void *)v48 + 1) = 27;
  v48[16] = 2;
  v7();
  uint64_t v49 = (void *)(v98 + v3 + 22 * v2);
  uint64_t v50 = (char *)v49 + v1[14];
  void *v49 = 23;
  *(void *)uint64_t v50 = "contextPrewarmRequest";
  *((void *)v50 + 1) = 21;
  v50[16] = 2;
  v7();
  uint64_t v51 = (void *)(v98 + v3 + 23 * v2);
  uint64_t v52 = (char *)v51 + v1[14];
  *uint64_t v51 = 24;
  *(void *)uint64_t v52 = "contextPrewarmCompleted";
  *((void *)v52 + 1) = 23;
  v52[16] = 2;
  v7();
  uint64_t v53 = (void *)(v98 + v3 + 24 * v2);
  uint64_t v54 = (char *)v53 + v1[14];
  *uint64_t v53 = 25;
  *(void *)uint64_t v54 = "safetyModeRelease";
  *((void *)v54 + 1) = 17;
  v54[16] = 2;
  v7();
  uint64_t v55 = (void *)(v98 + v3 + 25 * v2);
  uint64_t v56 = (char *)v55 + v1[14];
  void *v55 = 26;
  *(void *)uint64_t v56 = "safetyModeException";
  *((void *)v56 + 1) = 19;
  v56[16] = 2;
  v7();
  uint64_t v57 = (void *)(v98 + v3 + 26 * v2);
  uint64_t v58 = (char *)v57 + v1[14];
  *uint64_t v57 = 27;
  *(void *)uint64_t v58 = "responseGenerationRequest";
  *((void *)v58 + 1) = 25;
  v58[16] = 2;
  v7();
  uint64_t v59 = (void *)(v98 + v3 + 27 * v2);
  uint64_t v60 = (char *)v59 + v1[14];
  *uint64_t v59 = 28;
  *(void *)uint64_t v60 = "entitySpanMatched";
  *((void *)v60 + 1) = 17;
  v60[16] = 2;
  v7();
  uint64_t v61 = (void *)(v98 + v3 + 28 * v2);
  uint64_t v62 = (char *)v61 + v1[14];
  *uint64_t v61 = 29;
  *(void *)uint64_t v62 = "ContextRetrieved";
  *((void *)v62 + 1) = 16;
  v62[16] = 2;
  v7();
  uint64_t v63 = (void *)(v98 + v3 + 29 * v2);
  uint64_t v64 = (char *)v63 + v1[14];
  *uint64_t v63 = 30;
  *(void *)uint64_t v64 = "actionCanceled";
  *((void *)v64 + 1) = 14;
  v64[16] = 2;
  v7();
  uint64_t v65 = (void *)(v98 + v3 + 30 * v2);
  uint64_t v66 = (char *)v65 + v1[14];
  *uint64_t v65 = 31;
  *(void *)uint64_t v66 = "toolsRetrieved";
  *((void *)v66 + 1) = 14;
  v66[16] = 2;
  v7();
  uint64_t v67 = (void *)(v98 + v3 + 31 * v2);
  uint64_t v68 = (char *)v67 + v1[14];
  *uint64_t v67 = 32;
  *(void *)uint64_t v68 = "systemResponseGenerated";
  *((void *)v68 + 1) = 23;
  v68[16] = 2;
  v7();
  uint64_t v69 = (void *)(v98 + v3 + 32 * v2);
  uint64_t v70 = (char *)v69 + v1[14];
  *uint64_t v69 = 33;
  *(void *)uint64_t v70 = "statementEvaluated";
  *((void *)v70 + 1) = 18;
  v70[16] = 2;
  v7();
  uint64_t v71 = (void *)(v98 + v3 + 33 * v2);
  BOOL v72 = (char *)v71 + v1[14];
  *uint64_t v71 = 34;
  *(void *)BOOL v72 = "externalAgentTextQuery";
  *((void *)v72 + 1) = 22;
  v72[16] = 2;
  v7();
  char v73 = (void *)(v98 + v3 + 34 * v2);
  BOOL v74 = (char *)v73 + v1[14];
  *char v73 = 35;
  *(void *)BOOL v74 = "externalAgentSpeechQuery";
  *((void *)v74 + 1) = 24;
  v74[16] = 2;
  v7();
  char v75 = (void *)(v98 + v3 + 35 * v2);
  uint64_t v76 = (char *)v75 + v1[14];
  *char v75 = 42;
  *(void *)uint64_t v76 = "externalAgentRequest";
  *((void *)v76 + 1) = 20;
  v76[16] = 2;
  v7();
  uint64_t v77 = (void *)(v98 + v3 + 36 * v2);
  uint64_t v78 = (char *)v77 + v1[14];
  *uint64_t v77 = 36;
  *(void *)uint64_t v78 = "externalAgentOutcome";
  *((void *)v78 + 1) = 20;
  v78[16] = 2;
  v7();
  char v79 = (void *)(v98 + v3 + 37 * v2);
  uint64_t v80 = (char *)v79 + v1[14];
  *char v79 = 37;
  *(void *)uint64_t v80 = "externalAgentRequestRewriteMetadata";
  *((void *)v80 + 1) = 35;
  v80[16] = 2;
  v7();
  uint64_t v81 = (void *)(v98 + v3 + 38 * v2);
  uint64_t v82 = (char *)v81 + v1[14];
  *uint64_t v81 = 38;
  *(void *)uint64_t v82 = "ToolResolution";
  *((void *)v82 + 1) = 14;
  v82[16] = 2;
  v7();
  uint64_t v83 = (void *)(v98 + v3 + 39 * v2);
  uint64_t v84 = (char *)v83 + v1[14];
  *uint64_t v83 = 39;
  *(void *)uint64_t v84 = "undoRedoRequest";
  *((void *)v84 + 1) = 15;
  v84[16] = 2;
  v7();
  uint64_t v85 = (void *)(v98 + v3 + 40 * v2);
  uint64_t v86 = (char *)v85 + v1[14];
  *uint64_t v85 = 40;
  *(void *)uint64_t v86 = "clientUndoRedoRequest";
  *((void *)v86 + 1) = 21;
  v86[16] = 2;
  v7();
  uint64_t v87 = (void *)(v98 + v3 + 41 * v2);
  uint64_t v88 = (char *)v87 + v1[14];
  *uint64_t v87 = 43;
  *(void *)uint64_t v88 = "typeConversionRequest";
  *((void *)v88 + 1) = 21;
  v88[16] = 2;
  v7();
  char v89 = (void *)(v98 + v3 + 42 * v2);
  int v90 = (char *)v89 + v1[14];
  *char v89 = 44;
  *(void *)int v90 = "typeConversionResult";
  *((void *)v90 + 1) = 20;
  v90[16] = 2;
  v7();
  uint64_t v91 = (void *)(v98 + v3 + 43 * v2);
  char v92 = (char *)v91 + v1[14];
  *uint64_t v91 = 45;
  *(void *)char v92 = "queryDecorationResult";
  *((void *)v92 + 1) = 21;
  v92[16] = 2;
  v7();
  uint64_t v93 = (void *)(v98 + v3 + 44 * v2);
  uint64_t v94 = (char *)v93 + v1[14];
  *uint64_t v93 = 48;
  *(void *)uint64_t v94 = "continuePlanning";
  *((void *)v94 + 1) = 16;
  v94[16] = 2;
  v7();
  uint64_t v95 = (void *)(v98 + v3 + 45 * v2);
  int v96 = (char *)v95 + v1[14];
  *uint64_t v95 = 49;
  *(void *)int v96 = "queryDecorationPrePlannerResult";
  *((void *)v96 + 1) = 31;
  v96[16] = 2;
  v7();
  return sub_253B07520();
}

uint64_t static TranscriptProtoPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_26B249378, (uint64_t)qword_26B249360, a1);
}

void TranscriptProtoPayload.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  sub_2535B39E4(a1, a2);
  while (1)
  {
    uint64_t v3 = sub_253B07230();
    if (v2 || (v4 & 1) != 0) {
      break;
    }
    switch(v3)
    {
      case 1:
        uint64_t v5 = sub_2536D29F8();
        sub_2536007B4(v5, v6, v7, v8);
        break;
      case 2:
        uint64_t v9 = sub_2536D29F8();
        sub_253600C58(v9, v10, v11, v12);
        break;
      case 3:
        uint64_t v13 = sub_2536D29F8();
        sub_2536010FC(v13, v14, v15, v16);
        break;
      case 4:
        uint64_t v17 = sub_2536D29F8();
        sub_2536015A0(v17, v18, v19, v20);
        break;
      case 5:
        uint64_t v21 = sub_2536D29F8();
        sub_253601A44(v21, v22, v23, v24);
        break;
      case 6:
        uint64_t v25 = sub_2536D29F8();
        sub_253601EE8(v25, v26, v27, v28);
        break;
      case 7:
        uint64_t v29 = sub_2536D29F8();
        sub_25360238C(v29, v30, v31, v32);
        break;
      case 9:
      case 14:
      case 15:
        sub_2535B387C();
        sub_253603178();
        break;
      case 10:
        sub_2535B387C();
        sub_253632F7C();
        break;
      case 11:
        uint64_t v33 = sub_2536D29F8();
        sub_253602830(v33, v34, v35, v36);
        break;
      case 12:
        uint64_t v37 = sub_2536D29F8();
        sub_253602CD4(v37, v38, v39, v40);
        break;
      case 17:
        uint64_t v41 = sub_2536D29F8();
        sub_2536033B4(v41, v42, v43, v44);
        break;
      case 18:
        uint64_t v45 = sub_2536D29F8();
        sub_253603858(v45, v46, v47, v48);
        break;
      case 19:
        uint64_t v49 = sub_2536D29F8();
        sub_253603CFC(v49, v50, v51, v52);
        break;
      case 20:
        uint64_t v53 = sub_2536D29F8();
        sub_2536041A0(v53, v54, v55, v56);
        break;
      case 21:
        uint64_t v57 = sub_2536D29F8();
        sub_253604644(v57, v58, v59, v60);
        break;
      case 22:
        uint64_t v61 = sub_2536D29F8();
        sub_253604AE8(v61, v62, v63, v64);
        break;
      case 23:
        uint64_t v65 = sub_2536D29F8();
        sub_253604F8C(v65, v66, v67, v68);
        break;
      case 24:
        uint64_t v69 = sub_2536D29F8();
        sub_253605430(v69, v70, v71, v72);
        break;
      case 25:
        uint64_t v73 = sub_2536D29F8();
        sub_2536058D4(v73, v74, v75, v76);
        break;
      case 26:
        uint64_t v77 = sub_2536D29F8();
        sub_253605D78(v77, v78, v79, v80);
        break;
      case 27:
        uint64_t v81 = sub_2536D29F8();
        sub_25360621C(v81, v82, v83, v84);
        break;
      case 28:
        uint64_t v85 = sub_2536D29F8();
        sub_2536066C0(v85, v86, v87, v88);
        break;
      case 29:
        uint64_t v89 = sub_2536D29F8();
        sub_253606B64(v89, v90, v91, v92);
        break;
      case 30:
        uint64_t v93 = sub_2536D29F8();
        sub_253607008(v93, v94, v95, v96);
        break;
      case 31:
        uint64_t v97 = sub_2536D29F8();
        sub_2536074AC(v97, v98, v99, v100);
        break;
      case 32:
        uint64_t v101 = sub_2536D29F8();
        sub_253607950(v101, v102, v103, v104);
        break;
      case 33:
        uint64_t v105 = sub_2536D29F8();
        sub_253607DF4(v105, v106, v107, v108);
        break;
      case 34:
        uint64_t v109 = sub_2536D29F8();
        sub_253608298(v109, v110, v111, v112);
        break;
      case 35:
        uint64_t v113 = sub_2536D29F8();
        sub_25360873C(v113, v114, v115, v116);
        break;
      case 36:
        uint64_t v117 = sub_2536D29F8();
        sub_253608BE0(v117, v118, v119, v120);
        break;
      case 37:
        uint64_t v121 = sub_2536D29F8();
        sub_253609084(v121, v122, v123, v124);
        break;
      case 38:
        uint64_t v125 = sub_2536D29F8();
        sub_253609528(v125, v126, v127, v128);
        break;
      case 39:
        uint64_t v129 = sub_2536D29F8();
        sub_2536099CC(v129, v130, v131, v132);
        break;
      case 40:
        uint64_t v133 = sub_2536D29F8();
        sub_253609E70(v133, v134, v135, v136);
        break;
      case 41:
        uint64_t v137 = sub_2536D29F8();
        sub_25360A314(v137, v138, v139, v140);
        break;
      case 42:
        uint64_t v141 = sub_2536D29F8();
        sub_25360A7B8(v141, v142, v143, v144);
        break;
      case 43:
        uint64_t v145 = sub_2536D29F8();
        sub_25360AC5C(v145, v146, v147, v148);
        break;
      case 44:
        uint64_t v149 = sub_2536D29F8();
        sub_25360B100(v149, v150, v151, v152);
        break;
      case 45:
        uint64_t v153 = sub_2536D29F8();
        sub_25360B5A4(v153, v154, v155, v156);
        break;
      case 46:
        uint64_t v157 = sub_2536D29F8();
        sub_25360BA48(v157, v158, v159, v160);
        break;
      case 47:
        uint64_t v161 = sub_2536D29F8();
        sub_25360BEE8(v161, v162, v163, v164);
        break;
      case 48:
        uint64_t v165 = sub_2536D29F8();
        sub_25360C38C(v165, v166, v167, v168);
        break;
      case 49:
        uint64_t v169 = sub_2536D29F8();
        sub_25360C830(v169, v170, v171, v172);
        break;
      default:
        break;
    }
    sub_2534D9B10();
  }
}

uint64_t sub_2536007B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoTextQuery(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4480);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4480);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoTextQuery);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoTextQuery);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE39A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTextQuery);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4480);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4480);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4480);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4480);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoTextQuery);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4480);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoTextQuery);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_253600C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoSpeechQuery(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4488);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4488);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoSpeechQuery);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoSpeechQuery);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE39D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSpeechQuery);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4488);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4488);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4488);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4488);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoSpeechQuery);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4488);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoSpeechQuery);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_2536010FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoPlan(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4490);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4490);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoPlan);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoPlan);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE2DC8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPlan);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4490);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4490);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4490);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4490);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoPlan);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4490);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoPlan);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_2536015A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoAction(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE0398);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE0398);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoAction);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoAction);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE0418, (void (*)(uint64_t))type metadata accessor for TranscriptProtoAction);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE0398);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE0398);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE0398);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE0398);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoAction);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE0398);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoAction);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_253601A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoClientAction(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4498);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4498);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoClientAction);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoClientAction);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE2A38, (void (*)(uint64_t))type metadata accessor for TranscriptProtoClientAction);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4498);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4498);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4498);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4498);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoClientAction);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4498);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoClientAction);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_253601EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t Step = type metadata accessor for TranscriptProtoQueryStep(0);
  uint64_t v6 = MEMORY[0x270FA5388](Step);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE44A0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, Step);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE44A0);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoQueryStep);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoQueryStep);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, Step);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE2ED8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryStep);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE44A0);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE44A0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, Step) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE44A0);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE44A0);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoQueryStep);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE44A0);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoQueryStep);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_25360238C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoVariableStep(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE44A8);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE44A8);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoVariableStep);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoVariableStep);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE32D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVariableStep);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE44A8);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE44A8);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE44A8);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE44A8);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoVariableStep);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE44A8);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoVariableStep);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_253602830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoSessionError(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE44B0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE44B0);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoSessionError);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoSessionError);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE2B28, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSessionError);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE44B0);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE44B0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE44B0);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE44B0);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoSessionError);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE44B0);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoSessionError);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_253602CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoClientCustom(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE44B8);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 12)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE44B8);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoClientCustom);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoClientCustom);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE2AC8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoClientCustom);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE44B8);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE44B8);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE44B8);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE44B8);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoClientCustom);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE44B8);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoClientCustom);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

void sub_253603178()
{
  sub_2534847F8();
  uint64_t v23 = v4;
  uint64_t v6 = v5;
  uint64_t v24 = v7;
  uint64_t v8 = sub_253462A5C(v5);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  sub_2534B3294();
  uint64_t v10 = sub_253462A5C(&qword_269CE4128);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v12);
  sub_2536D4118();
  uint64_t v13 = sub_253B070D0();
  uint64_t v14 = sub_2536D42B0();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v14, v15, 1, v13);
  sub_2536D25DC(&qword_26B2411D0, MEMORY[0x263F502E0]);
  sub_2534D9840();
  sub_253B07280();
  if (v1
    || (sub_2535B37D8(v3, v0, &qword_269CE4128),
        int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v0, 1, v13),
        uint64_t v17 = sub_2534DA034(),
        sub_2534B2064(v17, v18),
        v16 == 1))
  {
    sub_2534B2064(v3, &qword_269CE4128);
  }
  else
  {
    sub_2535B37D8(v24, v2, v6);
    uint64_t v19 = v23(0);
    uint64_t v20 = sub_2536D3ACC();
    int v22 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v20, v21, v19);
    sub_2534B2064(v2, v6);
    if (v22 != 1) {
      sub_253B07240();
    }
    sub_2534B2064(v3, &qword_269CE4128);
    sub_2534B2064(v24, v6);
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v24, 0, 1, v19);
  }
  sub_2534847C8();
}

uint64_t sub_2536033B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4470);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 13)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4470);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoSystemPromptResolution);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoSystemPromptResolution);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE3160, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolution);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4470);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4470);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4470);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4470);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoSystemPromptResolution);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4470);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoSystemPromptResolution);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_253603858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoActionStepResult(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE44C0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 14)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE44C0);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoActionStepResult);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoActionStepResult);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE29B8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionStepResult);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE44C0);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE44C0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE44C0);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE44C0);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoActionStepResult);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE44C0);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoActionStepResult);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_253603CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t StepResults = type metadata accessor for TranscriptProtoQueryStepResults(0);
  uint64_t v6 = MEMORY[0x270FA5388](StepResults);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE44C8);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, StepResults);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 15)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE44C8);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoQueryStepResults);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoQueryStepResults);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, StepResults);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE2F00, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryStepResults);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE44C8);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE44C8);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, StepResults) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE44C8);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE44C8);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoQueryStepResults);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE44C8);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoQueryStepResults);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_2536041A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoActionResponse(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE44D0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 16)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE44D0);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoActionResponse);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoActionResponse);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE3190, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionResponse);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE44D0);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE44D0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE44D0);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE44D0);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoActionResponse);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE44D0);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoActionResponse);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_253604644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE44D8);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 17)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE44D8);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoActionResolverRequest);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoActionResolverRequest);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE31A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionResolverRequest);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE44D8);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE44D8);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE44D8);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE44D8);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoActionResolverRequest);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE44D8);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoActionResolverRequest);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_253604AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoClientInitiatedClientAction(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE44E0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 18)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE44E0);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoClientInitiatedClientAction);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoClientInitiatedClientAction);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE3248, (void (*)(uint64_t))type metadata accessor for TranscriptProtoClientInitiatedClientAction);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE44E0);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE44E0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE44E0);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE44E0);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoClientInitiatedClientAction);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE44E0);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoClientInitiatedClientAction);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_253604F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoContextPrewarmRequest(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE44E8);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 19)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE44E8);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoContextPrewarmRequest);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoContextPrewarmRequest);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE2958, (void (*)(uint64_t))type metadata accessor for TranscriptProtoContextPrewarmRequest);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE44E8);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE44E8);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE44E8);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE44E8);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoContextPrewarmRequest);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE44E8);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoContextPrewarmRequest);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_253605430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoContextPrewarmCompleted(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE44F0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 20)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE44F0);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoContextPrewarmCompleted);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoContextPrewarmCompleted);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE2970, (void (*)(uint64_t))type metadata accessor for TranscriptProtoContextPrewarmCompleted);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE44F0);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE44F0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE44F0);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE44F0);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoContextPrewarmCompleted);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE44F0);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoContextPrewarmCompleted);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_2536058D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoSafetyModeRelease(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE44F8);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 21)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE44F8);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoSafetyModeRelease);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoSafetyModeRelease);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE31F8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSafetyModeRelease);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE44F8);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE44F8);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE44F8);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE44F8);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoSafetyModeRelease);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE44F8);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoSafetyModeRelease);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_253605D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoSafetyModeException(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4500);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 22)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4500);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoSafetyModeException);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoSafetyModeException);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE3210, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSafetyModeException);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4500);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4500);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4500);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4500);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoSafetyModeException);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4500);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoSafetyModeException);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_25360621C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoResponseGenerationRequest(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4508);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 23)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4508);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoResponseGenerationRequest);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoResponseGenerationRequest);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE29F8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseGenerationRequest);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4508);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4508);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4508);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4508);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoResponseGenerationRequest);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4508);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoResponseGenerationRequest);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_2536066C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t matched = type metadata accessor for TranscriptProtoEntitySpanMatchResult(0);
  uint64_t v6 = MEMORY[0x270FA5388](matched);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4510);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, matched);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 24)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4510);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoEntitySpanMatchResult);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoEntitySpanMatchResult);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, matched);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE37A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoEntitySpanMatchResult);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4510);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4510);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, matched) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4510);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4510);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoEntitySpanMatchResult);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4510);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoEntitySpanMatchResult);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_253606B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoContextRetrieved(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4518);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 25)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4518);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoContextRetrieved);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoContextRetrieved);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE31C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoContextRetrieved);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4518);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4518);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4518);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4518);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoContextRetrieved);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4518);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoContextRetrieved);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_253607008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoActionCancellation(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4520);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 26)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4520);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoActionCancellation);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoActionCancellation);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE28A0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionCancellation);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4520);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4520);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4520);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4520);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoActionCancellation);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4520);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoActionCancellation);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_2536074AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoToolRetrievalResponse(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4528);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 27)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4528);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoToolRetrievalResponse);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoToolRetrievalResponse);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE37C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoToolRetrievalResponse);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4528);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4528);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4528);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4528);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoToolRetrievalResponse);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4528);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoToolRetrievalResponse);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_253607950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoSystemResponse(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4530);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 28)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4530);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoSystemResponse);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoSystemResponse);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE37D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemResponse);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4530);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4530);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4530);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4530);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoSystemResponse);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4530);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoSystemResponse);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_253607DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementResult(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4538);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 29)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4538);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoStatementResult);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoStatementResult);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE1C90, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementResult);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4538);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4538);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4538);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4538);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoStatementResult);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4538);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoStatementResult);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_253608298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4540);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 30)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4540);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentTextQuery);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentTextQuery);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE39C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentTextQuery);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4540);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4540);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4540);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4540);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentTextQuery);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4540);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentTextQuery);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_25360873C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4548);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 31)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4548);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE39F0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4548);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4548);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4548);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4548);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4548);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_253608BE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4550);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 33)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4550);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentOutcome);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentOutcome);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE29A0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentOutcome);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4550);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4550);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4550);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4550);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentOutcome);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4550);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentOutcome);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_253609084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE1AD0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 34)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE1AD0);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE2790, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE1AD0);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE1AD0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE1AD0);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE1AD0);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE1AD0);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_253609528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoToolResolution(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4558);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 35)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4558);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoToolResolution);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoToolResolution);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE3858, (void (*)(uint64_t))type metadata accessor for TranscriptProtoToolResolution);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4558);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4558);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4558);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4558);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoToolResolution);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4558);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoToolResolution);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_2536099CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoUndoRedoRequest(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4560);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 36)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4560);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoUndoRedoRequest);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoUndoRedoRequest);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE3870, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUndoRedoRequest);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4560);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4560);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4560);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4560);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoUndoRedoRequest);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4560);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoUndoRedoRequest);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_253609E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4568);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 37)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4568);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoClientUndoRedoRequest);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoClientUndoRedoRequest);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE3888, (void (*)(uint64_t))type metadata accessor for TranscriptProtoClientUndoRedoRequest);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4568);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4568);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4568);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4568);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoClientUndoRedoRequest);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4568);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoClientUndoRedoRequest);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_25360A314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoRequest(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4570);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4570);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoRequest);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoRequest);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE26F0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequest);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4570);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4570);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4570);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4570);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoRequest);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4570);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoRequest);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_25360A7B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoExternalAgentRequest(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4578);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 32)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4578);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentRequest);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentRequest);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE2778, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentRequest);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4578);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4578);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4578);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4578);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentRequest);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4578);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentRequest);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_25360AC5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoTypeConversionRequest(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4580);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 38)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4580);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoTypeConversionRequest);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoTypeConversionRequest);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE38A0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTypeConversionRequest);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4580);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4580);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4580);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4580);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoTypeConversionRequest);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4580);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoTypeConversionRequest);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_25360B100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoTypeConversionResult(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4588);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 39)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4588);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoTypeConversionResult);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoTypeConversionResult);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE38B8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTypeConversionResult);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4588);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4588);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4588);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4588);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoTypeConversionResult);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4588);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoTypeConversionResult);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_25360B5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t DecorationResult = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
  uint64_t v6 = MEMORY[0x270FA5388](DecorationResult);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4590);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, DecorationResult);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 40)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4590);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoQueryDecorationResult);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoQueryDecorationResult);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, DecorationResult);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE38D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationResult);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4590);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4590);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, DecorationResult) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4590);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4590);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoQueryDecorationResult);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4590);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoQueryDecorationResult);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_25360BA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoSessionStart(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE4598);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
    else
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE4598);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoSessionStart);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoSessionStart);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_26B249608, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSessionStart);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE4598);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE4598);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE4598);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE4598);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoSessionStart);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE4598);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoSessionStart);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_25360BEE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoRecoverableError(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE45A0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 11)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE45A0);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoRecoverableError);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoRecoverableError);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE2DE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRecoverableError);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE45A0);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE45A0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE45A0);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE45A0);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoRecoverableError);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE45A0);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoRecoverableError);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_25360C38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TranscriptProtoContinuePlanning(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE45A8);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, v5);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 41)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE45A8);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoContinuePlanning);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoContinuePlanning);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE3A08, (void (*)(uint64_t))type metadata accessor for TranscriptProtoContinuePlanning);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE45A8);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE45A8);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v5) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE45A8);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE45A8);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoContinuePlanning);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE45A8);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoContinuePlanning);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

uint64_t sub_25360C830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v37 = a4;
  uint64_t v36 = a3;
  uint64_t DecorationPrePlannerResult = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
  uint64_t v6 = MEMORY[0x270FA5388](DecorationPrePlannerResult);
  uint64_t v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_253462A5C(&qword_269CE45B0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  int v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v31 - v23;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v31 - v23, 1, 1, DecorationPrePlannerResult);
  uint64_t v31 = a1;
  sub_2535B37D8(a1, (uint64_t)v12, &qword_26B2494F8);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13);
  if (v32 == 1)
  {
    sub_2534B2064((uint64_t)v12, &qword_26B2494F8);
    uint64_t v25 = v13;
  }
  else
  {
    sub_2536D2624((uint64_t)v12, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2536D2624((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    uint64_t v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 42)
    {
      sub_2534B2064((uint64_t)v24, &qword_269CE45B0);
      sub_2536D2624((uint64_t)v16, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
      sub_2536D2624((uint64_t)v9, (uint64_t)v24, (void (*)(void))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, DecorationPrePlannerResult);
    }
    else
    {
      sub_2536D2680((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    }
  }
  uint64_t v26 = v34;
  sub_2536D25DC(&qword_269CE38E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
  sub_253B07380();
  if (v26)
  {
    uint64_t v27 = (uint64_t)v24;
    return sub_2534B2064(v27, &qword_269CE45B0);
  }
  sub_2535B37D8((uint64_t)v24, (uint64_t)v22, &qword_269CE45B0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, DecorationPrePlannerResult) == 1)
  {
    sub_2534B2064((uint64_t)v24, &qword_269CE45B0);
    uint64_t v27 = (uint64_t)v22;
    return sub_2534B2064(v27, &qword_269CE45B0);
  }
  uint64_t v29 = v33;
  sub_2536D2624((uint64_t)v22, v33, (void (*)(void))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
  if (v32 != 1) {
    sub_253B07240();
  }
  sub_2534B2064((uint64_t)v24, &qword_269CE45B0);
  uint64_t v30 = v31;
  sub_2534B2064(v31, &qword_26B2494F8);
  sub_2536D2624(v29, v30, (void (*)(void))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
  swift_storeEnumTagMultiPayload();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, 1, v25);
}

void TranscriptProtoPayload.traverse<A>(visitor:)()
{
  sub_2535B4280();
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  uint64_t v3 = sub_25346CB4C(v2);
  MEMORY[0x270FA5388](v3);
  sub_25346CC54();
  sub_2535B37D8(v0, v0, &qword_26B2494F8);
  uint64_t v4 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  sub_2534D8B48(v0, 1, v4);
  if (!v5)
  {
    sub_2536D500C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = sub_2535B3BB4();
        sub_25360D10C(v7);
        goto LABEL_46;
      case 2u:
        uint64_t v8 = sub_2535B3BB4();
        sub_25360D300(v8);
        goto LABEL_46;
      case 3u:
        uint64_t v9 = sub_2535B3BB4();
        sub_2536118F0(v9);
        goto LABEL_46;
      case 4u:
        uint64_t v10 = sub_2535B3BB4();
        sub_25360D4F4(v10);
        goto LABEL_46;
      case 5u:
        uint64_t v11 = sub_2535B3BB4();
        sub_25360D6E8(v11);
        goto LABEL_46;
      case 6u:
        uint64_t v12 = sub_2535B3BB4();
        sub_25360D8DC(v12);
        goto LABEL_46;
      case 7u:
        uint64_t v13 = sub_2535B3BB4();
        sub_25360DAD0(v13);
        goto LABEL_46;
      case 8u:
        uint64_t v14 = sub_2535B3BB4();
        sub_25360DCC4(v14);
        goto LABEL_46;
      case 9u:
        sub_2536D2680(v0, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
        uint64_t v15 = sub_2535B3BB4();
        sub_25360E0C8(v15);
        goto LABEL_54;
      case 0xAu:
        uint64_t v16 = sub_2535B3BB4();
        sub_25360E208(v16);
        goto LABEL_46;
      case 0xBu:
        uint64_t v17 = sub_2535B3BB4();
        sub_2536124A4(v17);
        goto LABEL_46;
      case 0xCu:
        uint64_t v18 = sub_2535B3BB4();
        sub_25360E3FC(v18);
        goto LABEL_46;
      case 0xDu:
        uint64_t v19 = sub_2535B3BB4();
        sub_25360EA10(v19);
        goto LABEL_46;
      case 0xEu:
        uint64_t v20 = sub_2535B3BB4();
        sub_25360EC04(v20);
        goto LABEL_46;
      case 0xFu:
        uint64_t v21 = sub_2535B3BB4();
        sub_25360EDF8(v21);
        goto LABEL_46;
      case 0x10u:
        uint64_t v22 = sub_2535B3BB4();
        sub_25360EFEC(v22);
        goto LABEL_46;
      case 0x11u:
        uint64_t v23 = sub_2535B3BB4();
        sub_25360F1E0(v23);
        goto LABEL_46;
      case 0x12u:
        uint64_t v24 = sub_2535B3BB4();
        sub_25360F3D4(v24);
        goto LABEL_46;
      case 0x13u:
        uint64_t v25 = sub_2535B3BB4();
        sub_25360F5C8(v25);
        goto LABEL_46;
      case 0x14u:
        uint64_t v26 = sub_2535B3BB4();
        sub_25360F7BC(v26);
        goto LABEL_46;
      case 0x15u:
        uint64_t v27 = sub_2535B3BB4();
        sub_25360F9B0(v27);
        goto LABEL_46;
      case 0x16u:
        uint64_t v28 = sub_2535B3BB4();
        sub_25360FBA4(v28);
        goto LABEL_46;
      case 0x17u:
        uint64_t v29 = sub_2535B3BB4();
        sub_25360FD98(v29);
        goto LABEL_46;
      case 0x18u:
        uint64_t v30 = sub_2535B3BB4();
        sub_25360FF8C(v30);
        goto LABEL_46;
      case 0x19u:
        uint64_t v31 = sub_2535B3BB4();
        sub_253610180(v31);
        goto LABEL_46;
      case 0x1Au:
        uint64_t v32 = sub_2535B3BB4();
        sub_253610374(v32);
        goto LABEL_46;
      case 0x1Bu:
        uint64_t v33 = sub_2535B3BB4();
        sub_253610568(v33);
        goto LABEL_46;
      case 0x1Cu:
        uint64_t v34 = sub_2535B3BB4();
        sub_25361075C(v34);
        goto LABEL_46;
      case 0x1Du:
        uint64_t v35 = sub_2535B3BB4();
        sub_253610950(v35);
        goto LABEL_46;
      case 0x1Eu:
        uint64_t v36 = sub_2535B3BB4();
        sub_253610B44(v36);
        goto LABEL_46;
      case 0x1Fu:
        uint64_t v37 = sub_2535B3BB4();
        sub_253610D38(v37);
        goto LABEL_46;
      case 0x20u:
        uint64_t v38 = sub_2535B3BB4();
        sub_253611AE4(v38);
        goto LABEL_46;
      case 0x21u:
        uint64_t v39 = sub_2535B3BB4();
        sub_253610F2C(v39);
        goto LABEL_46;
      case 0x22u:
        uint64_t v40 = sub_2535B3BB4();
        sub_253611120(v40);
        goto LABEL_46;
      case 0x23u:
        uint64_t v41 = sub_2535B3BB4();
        sub_253611314(v41);
        goto LABEL_46;
      case 0x24u:
        uint64_t v42 = sub_2535B3BB4();
        sub_253611508(v42);
        goto LABEL_46;
      case 0x25u:
        uint64_t v43 = sub_2535B3BB4();
        sub_2536116FC(v43);
        goto LABEL_46;
      case 0x26u:
        uint64_t v44 = sub_2535B3BB4();
        sub_253611CD8(v44);
        goto LABEL_46;
      case 0x27u:
        uint64_t v45 = sub_2535B3BB4();
        sub_253611ECC(v45);
        goto LABEL_46;
      case 0x28u:
        uint64_t v46 = sub_2535B3BB4();
        sub_2536120C0(v46);
        goto LABEL_46;
      case 0x29u:
        uint64_t v47 = sub_2535B3BB4();
        sub_253612698(v47);
        goto LABEL_46;
      case 0x2Au:
        uint64_t v48 = sub_2535B3BB4();
        sub_25361288C(v48);
        goto LABEL_46;
      case 0x2Bu:
        uint64_t v49 = sub_2535B3BB4();
        sub_25360DEB8(v49, v50, v51, v52);
        goto LABEL_54;
      case 0x2Cu:
        uint64_t v53 = sub_2535B3BB4();
        sub_25360E5F0(v53, v54, v55, v56);
        goto LABEL_54;
      case 0x2Du:
        uint64_t v57 = sub_2535B3BB4();
        sub_25360E800(v57, v58, v59, v60);
LABEL_54:
        if (!v1) {
          break;
        }
        goto LABEL_50;
      default:
        uint64_t v6 = sub_2535B3BB4();
        sub_2536122B4(v6);
LABEL_46:
        if (v1)
        {
          sub_2536D2680(v0, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
          goto LABEL_50;
        }
        sub_2536D2680(v0, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
        break;
    }
  }
  type metadata accessor for TranscriptProtoPayload(0);
  sub_2536D2AD4();
LABEL_50:
  sub_2536D30A0();
  sub_2535B42DC();
}

uint64_t sub_25360D10C(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoTextQuery(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoTextQuery);
      sub_2536D25DC(&qword_269CE39A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTextQuery);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoTextQuery);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_25360D300(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoSpeechQuery(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoSpeechQuery);
      sub_2536D25DC(&qword_269CE39D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSpeechQuery);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoSpeechQuery);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_25360D4F4(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoPlan(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoPlan);
      sub_2536D25DC(&qword_269CE2DC8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPlan);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoPlan);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_25360D6E8(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoAction(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoAction);
      sub_2536D25DC(&qword_269CE0418, (void (*)(uint64_t))type metadata accessor for TranscriptProtoAction);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoAction);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_25360D8DC(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoClientAction(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoClientAction);
      sub_2536D25DC(&qword_269CE2A38, (void (*)(uint64_t))type metadata accessor for TranscriptProtoClientAction);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoClientAction);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_25360DAD0(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Step = type metadata accessor for TranscriptProtoQueryStep(0);
  MEMORY[0x270FA5388](Step);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoQueryStep);
      sub_2536D25DC(&qword_269CE2ED8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryStep);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoQueryStep);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_25360DCC4(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoVariableStep(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoVariableStep);
      sub_2536D25DC(&qword_269CE32D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVariableStep);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoVariableStep);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_25360DEB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v15[1] = a4;
  uint64_t v5 = sub_253B070D0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v11, &qword_26B2494F8);
  uint64_t v12 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v11, &qword_26B2494F8);
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t result = sub_2536D2680((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    if (EnumCaseMultiPayload == 43)
    {
      MEMORY[0x25A2660C0](result);
      sub_2536D25DC(&qword_26B2411D0, MEMORY[0x263F502E0]);
      sub_253B07450();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25360E0C8(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v5 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      sub_253B074C0();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_25360E208(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoSessionError(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoSessionError);
      sub_2536D25DC(&qword_269CE2B28, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSessionError);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoSessionError);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_25360E3FC(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoClientCustom(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 12)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoClientCustom);
      sub_2536D25DC(&qword_269CE2AC8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoClientCustom);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoClientCustom);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_25360E5F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v15[1] = a4;
  uint64_t v5 = sub_253B070D0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v11, &qword_26B2494F8);
  uint64_t v12 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v11, &qword_26B2494F8);
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t result = sub_2536D2680((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    if (EnumCaseMultiPayload == 44)
    {
      MEMORY[0x25A2660C0](result);
      sub_2536D25DC(&qword_26B2411D0, MEMORY[0x263F502E0]);
      sub_253B07450();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25360E800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v15[1] = a4;
  uint64_t v5 = sub_253B070D0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v11, &qword_26B2494F8);
  uint64_t v12 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v11, &qword_26B2494F8);
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t result = sub_2536D2680((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
    if (EnumCaseMultiPayload == 45)
    {
      MEMORY[0x25A2660C0](result);
      sub_2536D25DC(&qword_26B2411D0, MEMORY[0x263F502E0]);
      sub_253B07450();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25360EA10(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 13)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoSystemPromptResolution);
      sub_2536D25DC(&qword_269CE3160, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolution);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoSystemPromptResolution);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_25360EC04(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoActionStepResult(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 14)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoActionStepResult);
      sub_2536D25DC(&qword_269CE29B8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionStepResult);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoActionStepResult);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_25360EDF8(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t StepResults = type metadata accessor for TranscriptProtoQueryStepResults(0);
  MEMORY[0x270FA5388](StepResults);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 15)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoQueryStepResults);
      sub_2536D25DC(&qword_269CE2F00, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryStepResults);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoQueryStepResults);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_25360EFEC(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoActionResponse(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 16)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoActionResponse);
      sub_2536D25DC(&qword_269CE3190, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionResponse);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoActionResponse);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_25360F1E0(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 17)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoActionResolverRequest);
      sub_2536D25DC(&qword_269CE31A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionResolverRequest);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoActionResolverRequest);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_25360F3D4(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoClientInitiatedClientAction(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 18)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoClientInitiatedClientAction);
      sub_2536D25DC(&qword_269CE3248, (void (*)(uint64_t))type metadata accessor for TranscriptProtoClientInitiatedClientAction);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoClientInitiatedClientAction);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_25360F5C8(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoContextPrewarmRequest(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 19)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoContextPrewarmRequest);
      sub_2536D25DC(&qword_269CE2958, (void (*)(uint64_t))type metadata accessor for TranscriptProtoContextPrewarmRequest);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoContextPrewarmRequest);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_25360F7BC(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoContextPrewarmCompleted(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 20)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoContextPrewarmCompleted);
      sub_2536D25DC(&qword_269CE2970, (void (*)(uint64_t))type metadata accessor for TranscriptProtoContextPrewarmCompleted);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoContextPrewarmCompleted);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_25360F9B0(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoSafetyModeRelease(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 21)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoSafetyModeRelease);
      sub_2536D25DC(&qword_269CE31F8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSafetyModeRelease);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoSafetyModeRelease);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_25360FBA4(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoSafetyModeException(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 22)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoSafetyModeException);
      sub_2536D25DC(&qword_269CE3210, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSafetyModeException);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoSafetyModeException);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_25360FD98(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoResponseGenerationRequest(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 23)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoResponseGenerationRequest);
      sub_2536D25DC(&qword_269CE29F8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseGenerationRequest);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoResponseGenerationRequest);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_25360FF8C(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t matched = type metadata accessor for TranscriptProtoEntitySpanMatchResult(0);
  MEMORY[0x270FA5388](matched);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 24)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoEntitySpanMatchResult);
      sub_2536D25DC(&qword_269CE37A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoEntitySpanMatchResult);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoEntitySpanMatchResult);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_253610180(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoContextRetrieved(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 25)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoContextRetrieved);
      sub_2536D25DC(&qword_269CE31C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoContextRetrieved);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoContextRetrieved);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_253610374(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoActionCancellation(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 26)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoActionCancellation);
      sub_2536D25DC(&qword_269CE28A0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionCancellation);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoActionCancellation);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_253610568(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoToolRetrievalResponse(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 27)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoToolRetrievalResponse);
      sub_2536D25DC(&qword_269CE37C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoToolRetrievalResponse);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoToolRetrievalResponse);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_25361075C(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoSystemResponse(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 28)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoSystemResponse);
      sub_2536D25DC(&qword_269CE37D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemResponse);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoSystemResponse);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_253610950(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementResult(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 29)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoStatementResult);
      sub_2536D25DC(&qword_269CE1C90, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementResult);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoStatementResult);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_253610B44(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 30)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentTextQuery);
      sub_2536D25DC(&qword_269CE39C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentTextQuery);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentTextQuery);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_253610D38(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 31)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
      sub_2536D25DC(&qword_269CE39F0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_253610F2C(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 33)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentOutcome);
      sub_2536D25DC(&qword_269CE29A0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentOutcome);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentOutcome);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_253611120(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 34)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
      sub_2536D25DC(&qword_269CE2790, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_253611314(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoToolResolution(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 35)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoToolResolution);
      sub_2536D25DC(&qword_269CE3858, (void (*)(uint64_t))type metadata accessor for TranscriptProtoToolResolution);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoToolResolution);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_253611508(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoUndoRedoRequest(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 36)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoUndoRedoRequest);
      sub_2536D25DC(&qword_269CE3870, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUndoRedoRequest);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoUndoRedoRequest);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_2536116FC(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 37)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoClientUndoRedoRequest);
      sub_2536D25DC(&qword_269CE3888, (void (*)(uint64_t))type metadata accessor for TranscriptProtoClientUndoRedoRequest);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoClientUndoRedoRequest);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_2536118F0(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoRequest(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoRequest);
      sub_2536D25DC(&qword_269CE26F0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequest);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoRequest);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_253611AE4(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoExternalAgentRequest(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 32)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentRequest);
      sub_2536D25DC(&qword_269CE2778, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentRequest);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentRequest);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_253611CD8(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoTypeConversionRequest(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 38)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoTypeConversionRequest);
      sub_2536D25DC(&qword_269CE38A0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTypeConversionRequest);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoTypeConversionRequest);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_253611ECC(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoTypeConversionResult(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 39)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoTypeConversionResult);
      sub_2536D25DC(&qword_269CE38B8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTypeConversionResult);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoTypeConversionResult);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_2536120C0(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DecorationResult = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
  MEMORY[0x270FA5388](DecorationResult);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 40)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoQueryDecorationResult);
      sub_2536D25DC(&qword_269CE38D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationResult);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoQueryDecorationResult);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_2536122B4(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoSessionStart(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoSessionStart);
      sub_2536D25DC(&qword_26B249608, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSessionStart);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoSessionStart);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_2536124A4(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoRecoverableError(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 11)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoRecoverableError);
      sub_2536D25DC(&qword_269CE2DE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRecoverableError);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoRecoverableError);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_253612698(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoContinuePlanning(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 41)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoContinuePlanning);
      sub_2536D25DC(&qword_269CE3A08, (void (*)(uint64_t))type metadata accessor for TranscriptProtoContinuePlanning);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoContinuePlanning);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

uint64_t sub_25361288C(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2494F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DecorationPrePlannerResult = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
  MEMORY[0x270FA5388](DecorationPrePlannerResult);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2494F8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_2534B2064((uint64_t)v4, &qword_26B2494F8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 42)
    {
      sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
      sub_2536D25DC(&qword_269CE38E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
      sub_253B07500();
      return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
    }
    uint64_t result = sub_2536D2680((uint64_t)v4, (void (*)(void))type metadata accessor for TranscriptProtoPayloadEnum);
  }
  __break(1u);
  return result;
}

#error "253612C68: call analysis failed (funcsize=155)"

uint64_t TranscriptProtoPayload.hashValue.getter()
{
  return sub_253612D58((void (*)(void))type metadata accessor for TranscriptProtoPayload, &qword_269CE1A98, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPayload);
}

uint64_t sub_253612D58(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return sub_253B0A630();
}

unint64_t sub_253612DE4()
{
  return 0xD000000000000012;
}

void sub_253612E0C(uint64_t a1, uint64_t a2)
{
}

void sub_253612E24()
{
}

uint64_t sub_253612E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2536D25DC(&qword_269CE40E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPayload);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_253612EBC()
{
  sub_2536D25DC(&qword_26B249380, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPayload);
  return sub_253B073E0();
}

uint64_t sub_253612F2C()
{
  sub_2536D25DC(&qword_26B249380, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPayload);
  return sub_253B073F0();
}

unint64_t static TranscriptProtoTranscript.protoMessageName.getter()
{
  return sub_2535B3A28(21);
}

uint64_t sub_253612FC4()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_269CE0630);
  sub_253462BD4(v0, (uint64_t)qword_269CE0630);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B34E30;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "sessionId";
  *(void *)(v6 + 8) = 9;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "clientSessionId";
  *((void *)v10 + 1) = 15;
  v10[16] = 2;
  v9();
  uint64_t v11 = (void *)((char *)v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "events";
  *((void *)v12 + 1) = 6;
  v12[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static TranscriptProtoTranscript._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_269CDA9C0, (uint64_t)qword_269CE0630, a1);
}

void TranscriptProtoTranscript.decodeMessage<A>(decoder:)()
{
  uint64_t v1 = sub_2535B3890();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_2536D3588();
          break;
        case 2:
          sub_2536D2EE0();
          break;
        case 1:
          sub_2535B3CD4();
          break;
      }
      uint64_t v1 = sub_2535B3A9C();
    }
  }
}

void TranscriptProtoTranscript.traverse<A>(visitor:)()
{
  sub_2535B45A0();
  sub_2535B399C();
  if (!v1 || (sub_2536D2C10(), !v0))
  {
    uint64_t v2 = sub_2536D4760();
    sub_2536B4558(v2);
    if (!v0)
    {
      sub_2536D518C();
      if (v3)
      {
        type metadata accessor for TranscriptProtoEvent(0);
        sub_2536D25DC(&qword_26B2491D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoEvent);
        sub_2536D2B2C();
      }
      type metadata accessor for TranscriptProtoTranscript(0);
      sub_2536D2AD4();
    }
  }
  sub_2535B4660();
}

void static TranscriptProtoTranscript.== infix(_:_:)()
{
  sub_2535B3C98();
  sub_2535B3980();
  sub_253465998();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v6);
  sub_2535B3A30();
  BOOL v9 = v9 && v7 == v8;
  if (!v9 && (sub_253B0A4C0() & 1) == 0) {
    goto LABEL_17;
  }
  uint64_t v10 = *(void *)(v0 + 32);
  if (!*(void *)(v1 + 32))
  {
    if (v10) {
      goto LABEL_17;
    }
    goto LABEL_15;
  }
  if (v10)
  {
    sub_2536D4A24();
    BOOL v13 = v9 && v11 == v12;
    if (v13 || (sub_253B0A4C0() & 1) != 0)
    {
LABEL_15:
      sub_2536D43D0();
      sub_2534BACF0();
      if (v14)
      {
        type metadata accessor for TranscriptProtoTranscript(0);
        uint64_t v15 = sub_2535B38B8();
        ((void (*)(uint64_t))v2)(v15);
        sub_2535B3914();
        v2();
        sub_2536D25DC((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
        sub_2535B3960();
        uint64_t v16 = *(void (**)(void))(v4 + 8);
        sub_2535B3940();
        v16();
        sub_2535B3940();
        v16();
      }
    }
  }
LABEL_17:
  sub_2535B3D00();
  sub_25346CD04();
}

uint64_t TranscriptProtoTranscript.hashValue.getter()
{
  return sub_253612D58((void (*)(void))type metadata accessor for TranscriptProtoTranscript, &qword_269CE1AA0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTranscript);
}

unint64_t sub_253613544()
{
  return 0xD000000000000015;
}

void sub_25361356C()
{
}

void sub_253613584()
{
}

uint64_t sub_25361359C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2536D25DC(&qword_269CE40E0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTranscript);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_25361361C()
{
  sub_2536D25DC(&qword_269CE26C8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTranscript);
  return sub_253B073E0();
}

uint64_t sub_25361368C()
{
  sub_2536D25DC(&qword_269CE26C8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTranscript);
  return sub_253B073F0();
}

unint64_t static TranscriptProtoTimepoint.protoMessageName.getter()
{
  return sub_2535B3A28(20);
}

uint64_t sub_253613724()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_26B249470);
  sub_253462BD4(v0, (uint64_t)qword_26B249470);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B34E60;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "rawDate";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  BOOL v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "suspendingClockInstantNs";
  *(void *)(v10 + 8) = 24;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "continuousClockInstantNs";
  *((void *)v12 + 1) = 24;
  v12[16] = 2;
  v9();
  BOOL v13 = (void *)(v5 + 3 * v2);
  char v14 = (char *)v13 + v1[14];
  void *v13 = 4;
  *(void *)char v14 = "rawBootSessionUUID";
  *((void *)v14 + 1) = 18;
  v14[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static TranscriptProtoTimepoint._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_26B249488, (uint64_t)qword_26B249470, a1);
}

uint64_t TranscriptProtoTimepoint.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_2535B3890();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_2535B387C();
          sub_253613A38();
          break;
        case 2:
        case 3:
          sub_2535B443C();
          sub_253B07360();
          break;
        case 4:
          sub_2536D2DF8();
          break;
        default:
          break;
      }
      uint64_t result = sub_2535B3A9C();
    }
  }
  return result;
}

uint64_t sub_253613A38()
{
  return sub_253B07380();
}

uint64_t TranscriptProtoTimepoint.traverse<A>(visitor:)()
{
  uint64_t v2 = sub_2536D2F50();
  uint64_t result = sub_253613BA8(v2, v3, v4, v5);
  if (!v0)
  {
    if (*v1)
    {
      sub_2536D4A0C();
      sub_253B074E0();
    }
    if (v1[1]) {
      sub_253B074E0();
    }
    sub_2535B399C();
    if (v7) {
      sub_2535B3B2C();
    }
    type metadata accessor for TranscriptProtoTimepoint(0);
    return sub_2535B3B48();
  }
  return result;
}

uint64_t sub_253613BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = sub_253462A5C(&qword_26B248D00);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253B07100();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TranscriptProtoTimepoint(0);
  sub_2535B37D8(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_26B248D00);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v8) == 1) {
    return sub_2534B2064((uint64_t)v7, &qword_26B248D00);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  sub_2536D25DC(&qword_26B248CF8, MEMORY[0x263F502F0]);
  sub_253B07500();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void static TranscriptProtoTimepoint.== infix(_:_:)()
{
  sub_2534B3258();
  uint64_t v6 = v5;
  sub_2536D4D78();
  sub_253465998();
  uint64_t v45 = v8;
  uint64_t v46 = v7;
  MEMORY[0x270FA5388](v7);
  v44[2] = (uint64_t)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  sub_2536D30F4(v11, v12, v13, v14, v15, v16, v17, v18, v44[0]);
  uint64_t v19 = sub_253B07100();
  sub_253465998();
  uint64_t v49 = v20;
  MEMORY[0x270FA5388](v21);
  sub_2534B34A4();
  uint64_t v22 = sub_253462A5C(&qword_269CE1A68);
  uint64_t v23 = v22 - 8;
  MEMORY[0x270FA5388](v22);
  sub_25346CC6C();
  uint64_t v24 = sub_253462A5C(&qword_26B248D00);
  uint64_t v25 = sub_25346CB4C(v24);
  MEMORY[0x270FA5388](v25);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v26);
  sub_2534836BC();
  MEMORY[0x270FA5388](v27);
  uint64_t v28 = sub_2534DA444();
  uint64_t v29 = type metadata accessor for TranscriptProtoTimepoint(v28);
  uint64_t v30 = *(int *)(v29 + 28);
  uint64_t v47 = v3;
  uint64_t v31 = (uint64_t)v3 + v30;
  uint64_t v32 = v29;
  sub_2536D3600(v31);
  uint64_t v33 = *(int *)(v32 + 28);
  uint64_t v48 = v6;
  sub_2536D3998((uint64_t)v6 + v33);
  uint64_t v34 = v2 + *(int *)(v23 + 56);
  sub_2536D45AC(v0);
  sub_2536D3690(v1);
  sub_2534D8B48(v2, 1, v19);
  if (!v35)
  {
    sub_2535B37D8(v2, v4, &qword_26B248D00);
    sub_2534D8B48(v34, 1, v19);
    if (!v35)
    {
      uint64_t v37 = v49;
      sub_2535B3CF0();
      v38();
      sub_2536D25DC(&qword_269CE1A80, MEMORY[0x263F502F0]);
      HIDWORD(v44[0]) = sub_253B096B0();
      uint64_t v39 = *(void (**)(void))(v37 + 8);
      sub_2536D2A7C();
      v39();
      sub_2536D4AB8();
      sub_2536D30AC();
      sub_2536D2A7C();
      v39();
      sub_2536D3F60();
      if ((v44[0] & 0x100000000) == 0) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    sub_2535B3F80();
    sub_2535B43DC();
    sub_2535B3F64();
    v36();
LABEL_9:
    sub_2534B2064(v2, &qword_269CE1A68);
    goto LABEL_19;
  }
  sub_2536D4AB8();
  sub_2536D30AC();
  sub_2534D8B48(v34, 1, v19);
  if (!v35) {
    goto LABEL_9;
  }
  sub_2534B2064(v2, &qword_26B248D00);
LABEL_11:
  uint64_t v40 = v47;
  if (*(void *)v47 == *v48 && *((void *)v47 + 1) == v48[1])
  {
    BOOL v41 = *((void *)v47 + 2) == v48[2] && *((void *)v47 + 3) == v48[3];
    if (v41 || (sub_253B0A4C0() & 1) != 0)
    {
      uint64_t v42 = v45;
      sub_2535B4608();
      sub_2535B3A00();
      v40();
      sub_2535B3A00();
      v40();
      sub_2536D25DC((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
      sub_2536D2B78();
      uint64_t v43 = *(void (**)(void))(v42 + 8);
      sub_2535B3B1C();
      v43();
      sub_2535B3B1C();
      v43();
    }
  }
LABEL_19:
  sub_2535B4124();
  sub_253465A14();
}

uint64_t TranscriptProtoTimepoint.hashValue.getter()
{
  return sub_253612D58((void (*)(void))type metadata accessor for TranscriptProtoTimepoint, &qword_269CE1AA8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTimepoint);
}

unint64_t sub_2536141BC()
{
  return 0xD000000000000014;
}

uint64_t sub_2536141E4()
{
  return TranscriptProtoTimepoint.decodeMessage<A>(decoder:)();
}

uint64_t sub_2536141FC()
{
  return TranscriptProtoTimepoint.traverse<A>(visitor:)();
}

uint64_t sub_253614214(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2536D25DC(&qword_269CE40D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTimepoint);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_253614294()
{
  sub_2536D25DC(&qword_26B249490, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTimepoint);
  return sub_253B073E0();
}

uint64_t sub_253614304()
{
  sub_2536D25DC(&qword_26B249490, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTimepoint);
  return sub_253B073F0();
}

unint64_t static TranscriptProtoSessionStart.protoMessageName.getter()
{
  return sub_2535B3A28(23);
}

uint64_t sub_25361439C()
{
  uint64_t v0 = sub_253B07540();
  sub_2534AF1BC(v0, qword_26B2495E8);
  sub_253462BD4(v0, (uint64_t)qword_26B2495E8);
  sub_253462A5C(&qword_26B24A588);
  uint64_t v1 = (int *)(sub_253462A5C(&qword_26B24A3A0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_253B22690;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 2;
  *(void *)unint64_t v6 = "initialLocaleSettings";
  *(void *)(v6 + 8) = 21;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_253B07510();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 3;
  *(void *)uint64_t v10 = "originatingDevice";
  *((void *)v10 + 1) = 17;
  v10[16] = 2;
  v9();
  return sub_253B07520();
}

uint64_t static TranscriptProtoSessionStart._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2535B07CC(&qword_26B249600, (uint64_t)qword_26B2495E8, a1);
}

void TranscriptProtoSessionStart.decodeMessage<A>(decoder:)()
{
  uint64_t v1 = sub_2535B3890();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 3)
      {
        sub_2535B387C();
        sub_253614628();
      }
      else if (v1 == 2)
      {
        sub_2536D2BEC();
      }
      uint64_t v1 = sub_2535B3A9C();
    }
  }
}

uint64_t sub_253614628()
{
  return sub_253B07380();
}

void TranscriptProtoSessionStart.traverse<A>(visitor:)()
{
}

uint64_t sub_25361472C(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B2497A0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoLocaleSettings(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2535B37D8(a1, (uint64_t)v4, &qword_26B2497A0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) == 1) {
    return sub_2534B2064((uint64_t)v4, &qword_26B2497A0);
  }
  sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoLocaleSettings);
  sub_2536D25DC(&qword_26B249780, (void (*)(uint64_t))type metadata accessor for TranscriptProtoLocaleSettings);
  sub_253B07500();
  return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoLocaleSettings);
}

uint64_t sub_2536148E0(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B249680);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoDeviceDetails(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TranscriptProtoSessionStart(0);
  sub_2535B37D8(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_26B249680);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) == 1) {
    return sub_2534B2064((uint64_t)v4, &qword_26B249680);
  }
  sub_2536D2624((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoDeviceDetails);
  sub_2536D25DC(&qword_269CE3830, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDeviceDetails);
  sub_253B07500();
  return sub_2536D2680((uint64_t)v7, (void (*)(void))type metadata accessor for TranscriptProtoDeviceDetails);
}

void static TranscriptProtoSessionStart.== infix(_:_:)()
{
  sub_2534B3258();
  sub_2536D3AB0();
  sub_253465998();
  uint64_t v55 = v6;
  uint64_t v56 = v5;
  MEMORY[0x270FA5388](v5);
  v54[3] = (uint64_t)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v8);
  v54[2] = (uint64_t)v54 - v9;
  uint64_t v10 = sub_253483660();
  uint64_t v61 = type metadata accessor for TranscriptProtoDeviceDetails(v10);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v11);
  sub_2534D929C(v12, v54[0]);
  uint64_t v58 = sub_253462A5C(&qword_269CE1AB0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v13);
  sub_2536D2C5C(v14, v54[0]);
  uint64_t v15 = sub_253462A5C(&qword_26B249680);
  uint64_t v16 = sub_25346CB4C(v15);
  MEMORY[0x270FA5388](v16);
  uint64_t v57 = (char *)v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v18);
  uint64_t v59 = (char *)v54 - v19;
  sub_2534B324C();
  MEMORY[0x270FA5388](v20);
  uint64_t v60 = (char *)v54 - v21;
  uint64_t v22 = sub_253483660();
  uint64_t v23 = type metadata accessor for TranscriptProtoLocaleSettings(v22);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v24);
  sub_25346CC54();
  sub_253462A5C(&qword_269CE1AB8);
  sub_2536D3224();
  MEMORY[0x270FA5388](v25);
  sub_2534B3294();
  uint64_t v26 = sub_253462A5C(&qword_26B2497A0);
  uint64_t v27 = sub_25346CB4C(v26);
  MEMORY[0x270FA5388](v27);
  sub_2534D8CE4();
  MEMORY[0x270FA5388](v28);
  sub_25351C99C();
  uint64_t v30 = MEMORY[0x270FA5388](v29);
  sub_2536D2EB4(v30, v31, v32, v33, v34, v35, v36, v37, v54[0]);
  sub_2536D3328();
  sub_2536D307C();
  sub_2536D3C4C();
  uint64_t v38 = sub_2534D8B48(v2, 1, v23);
  if (v40)
  {
    sub_2536D2F8C();
    sub_2535B44F0();
    sub_2534D8B48(v1, 1, v23);
    if (v40)
    {
      sub_2534B2064(v2, &qword_26B2497A0);
      goto LABEL_11;
    }
LABEL_9:
    BOOL v41 = &qword_269CE1AB8;
    uint64_t v42 = (uint64_t *)v2;
LABEL_20:
    sub_2534B2064((uint64_t)v42, v41);
    goto LABEL_21;
  }
  sub_2536D442C(v38, v39, &qword_26B2497A0);
  sub_2534D8B48(v1, 1, v23);
  if (v40)
  {
    sub_2535B4294();
    sub_2535B44C0();
    sub_2536D2680(v3, (void (*)(void))type metadata accessor for TranscriptProtoLocaleSettings);
    goto LABEL_9;
  }
  sub_2536D2624(v1, v0, (void (*)(void))type metadata accessor for TranscriptProtoLocaleSettings);
  sub_2534D9A78();
  static TranscriptProtoLocaleSettings.== infix(_:_:)();
  char v44 = v43;
  sub_2536D39DC();
  sub_2536D2F8C();
  sub_2535B44F0();
  sub_2536D4ECC();
  sub_2536D3DB0();
  if ((v44 & 1) == 0) {
    goto LABEL_21;
  }
LABEL_11:
  uint64_t v45 = type metadata accessor for TranscriptProtoSessionStart(0);
  uint64_t v46 = sub_2536D3424(v45);
  sub_2536D32A4(v46);
  sub_2536D2FA4();
  sub_2536D2E54();
  sub_2536D35E8(v4);
  uint64_t v47 = v61;
  uint64_t v48 = sub_2534D8B48((uint64_t)&qword_26B2497A0, 1, v61);
  if (v40)
  {
    sub_2536D2EFC();
    sub_2535B44D8();
    sub_2534D8B48((uint64_t)&qword_26B2497A0, 1, v47);
    if (v40)
    {
      sub_2534B2064((uint64_t)&qword_26B2497A0, &qword_26B249680);
LABEL_23:
      uint64_t v51 = v55;
      uint64_t v52 = *(void (**)(void))(v55 + 16);
      sub_2535B3A00();
      v52();
      sub_2535B3A00();
      v52();
      sub_2536D25DC((unint64_t *)&qword_269CDCB90, MEMORY[0x263F50560]);
      sub_2535B42B8();
      uint64_t v53 = *(void (**)(void))(v51 + 8);
      sub_253592354();
      v53();
      sub_253592354();
      v53();
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  sub_2536D3C18(v48, v49, &qword_26B249680);
  sub_2534D8B48((uint64_t)&qword_26B2497A0, 1, v47);
  if (v50)
  {
    sub_2535B4478();
    sub_2535B44F0();
    sub_2536D2680(v3, (void (*)(void))type metadata accessor for TranscriptProtoDeviceDetails);
LABEL_19:
    BOOL v41 = &qword_269CE1AB0;
    uint64_t v42 = &qword_26B2497A0;
    goto LABEL_20;
  }
  sub_2536D2624((uint64_t)&qword_26B2497A0, v54[1], (void (*)(void))type metadata accessor for TranscriptProtoDeviceDetails);
  sub_2535791D8();
  static TranscriptProtoDeviceDetails.== infix(_:_:)();
  sub_2536D330C();
  sub_2536D3CC8();
  sub_2536D3064();
  sub_2536D388C();
  sub_2536D4244();
  if (&qword_26B2497A0) {
    goto LABEL_23;
  }
LABEL_21:
  sub_2535B4124();
  sub_253465A14();
}