uint64_t sub_253A3B62C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_253A3B648()
{
  return sub_253B0A2C0();
}

uint64_t sub_253A3B674()
{
  return sub_253B0A2C0();
}

uint64_t sub_253A3B698()
{
  return v0;
}

void *sub_253A3B6B0()
{
  return sub_253472068(v0, v1);
}

uint64_t sub_253A3B6D0()
{
  return sub_253B0A440();
}

uint64_t sub_253A3B6FC()
{
  return sub_253B0A3A0();
}

uint64_t sub_253A3B724()
{
  return sub_253B0A370();
}

uint64_t sub_253A3B748()
{
  return sub_253B0A3A0();
}

uint64_t sub_253A3B76C()
{
  return sub_253B0A2C0();
}

uint64_t sub_253A3B788()
{
  return sub_253B0A3A0();
}

uint64_t sub_253A3B7A8()
{
  return swift_allocObject();
}

uint64_t sub_253A3B7D4()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_253A3B7EC()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_253A3B808(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_253A3B81C()
{
  return v0;
}

uint64_t sub_253A3B82C()
{
  return sub_253B0A440();
}

uint64_t sub_253A3B848()
{
  return sub_253B09860();
}

uint64_t sub_253A3B884()
{
  return sub_253B0A370();
}

uint64_t sub_253A3B89C()
{
  return swift_allocObject();
}

uint64_t sub_253A3B8BC()
{
  *(unsigned char *)(v0 - 66) = 1;
  return 0;
}

uint64_t sub_253A3B8D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_2539DF5B8(a1, v3);
}

uint64_t sub_253A3B914()
{
  return sub_253B0A2C0();
}

uint64_t sub_253A3B938()
{
  return sub_253B0A440();
}

uint64_t sub_253A3B950()
{
  return sub_253B0A1D0();
}

void *sub_253A3B978(void *a1)
{
  return sub_253472068(a1, v1);
}

uint64_t sub_253A3B994()
{
  return sub_253B0A3E0();
}

uint64_t sub_253A3B9D8()
{
  return v0;
}

uint64_t sub_253A3B9F8()
{
  return sub_253B09860();
}

uint64_t sub_253A3BA18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_2539DF5B8(a1, v3);
}

uint64_t sub_253A3BA30()
{
  return sub_253B0A2C0();
}

uint64_t sub_253A3BA50@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 288) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_253A3BA74()
{
  return sub_253B0A440();
}

uint64_t sub_253A3BA9C()
{
  return v0;
}

uint64_t sub_253A3BAB4()
{
  return v0;
}

uint64_t sub_253A3BACC()
{
  return sub_253961F60(v1, v0, v2);
}

uint64_t sub_253A3BAF0()
{
  return sub_253B0A660();
}

uint64_t sub_253A3BB08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18)
{
  uint64_t v21 = *(void *)(v18 - 112);
  uint64_t v20 = *(void *)(v18 - 104);
  uint64_t v22 = *(void *)(v18 - 152);
  uint64_t v23 = *(void *)(v18 - 136);
  uint64_t v24 = *(void *)(v18 - 88);
  uint64_t v25 = *(void *)(v18 - 184);
  uint64_t v26 = *(void *)(v18 - 176);
  return Session.Event.init(id:sessionId:queryEventId:payload:clientRequestId:clientSessionId:clientApplicationId:clientGroupId:timepoint:sender:postingSpan:initiatedSpans:)(v22, v23, v20, v24, v25, v26, v21, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_253A3BB6C()
{
  return v0;
}

uint64_t sub_253A3BB84()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_253A3BBB0()
{
  return sub_253B0A3E0();
}

uint64_t sub_253A3BBDC()
{
  return sub_253B0A370();
}

uint64_t sub_253A3BC14()
{
  *(unsigned char *)(v0 - 66) = 1;
  return sub_253B0A3F0();
}

uint64_t sub_253A3BC4C(uint64_t a1)
{
  return *(void *)a1;
}

void sub_253A3BC78()
{
  *(void *)(v0 - 64) = 0;
  *(void *)(v0 - 56) = 0xE000000000000000;
}

uint64_t sub_253A3BC88()
{
  return sub_253472458(v1, v0);
}

uint64_t sub_253A3BCA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v12 - 104) = v10;
  return sub_253961F60(v10, (uint64_t)&a9 - v9, v11);
}

uint64_t sub_253A3BCCC()
{
  return sub_253B0A3E0();
}

uint64_t sub_253A3BCE4()
{
  return sub_253472458(v1, v0);
}

void *sub_253A3BCFC(void *a1)
{
  return sub_253472068(a1, v1);
}

uint64_t sub_253A3BD18()
{
  return sub_253B0A3A0();
}

uint64_t sub_253A3BD40()
{
  return sub_253B0A2C0();
}

uint64_t sub_253A3BD64()
{
  return sub_253B0A370();
}

uint64_t sub_253A3BD88()
{
  return v0;
}

uint64_t sub_253A3BDA0()
{
  return v0;
}

uint64_t sub_253A3BDB8()
{
  return v0;
}

uint64_t sub_253A3BDE0()
{
  return sub_253B09860();
}

uint64_t sub_253A3BE14()
{
  return sub_253B0A4C0();
}

uint64_t sub_253A3BE38@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  int v3 = v2 - 1;
  if (v3 < 0) {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t sub_253A3BE74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_2539DF5B8(a1, v3);
}

uint64_t sub_253A3BE8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_2539DF660(a1, v3);
}

void *sub_253A3BEA4(void *a1)
{
  return sub_253472068(a1, v1);
}

void *sub_253A3BED4()
{
  return sub_253472068(v1, v0);
}

uint64_t sub_253A3BEF4()
{
  return sub_253B0A370();
}

uint64_t sub_253A3BF24()
{
  return sub_253B0A310();
}

uint64_t sub_253A3BF54()
{
  return v0;
}

uint64_t sub_253A3BF64()
{
  return sub_253B0A370();
}

uint64_t sub_253A3BF94()
{
  return sub_253B0A3F0();
}

uint64_t sub_253A3BFB0(uint64_t a1)
{
  return v1 + *(int *)(a1 + 20);
}

uint64_t sub_253A3BFC0()
{
  return sub_253B0A3A0();
}

uint64_t sub_253A3BFDC@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 320) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_253A3C000()
{
  return v0;
}

uint64_t sub_253A3C00C()
{
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_253A3C04C()
{
  return sub_253B0A3A0();
}

uint64_t sub_253A3C070()
{
  return v0;
}

uint64_t sub_253A3C084()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_253A3C09C()
{
  return sub_253B0A1C0();
}

uint64_t sub_253A3C0C0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 104) = a1;
  return sub_253B0A400();
}

uint64_t sub_253A3C0E4()
{
  return sub_253B0A370();
}

uint64_t sub_253A3C110()
{
  *(unsigned char *)(v0 - 65) = 0;
  return sub_253B0A320();
}

uint64_t sub_253A3C134()
{
  return 0;
}

uint64_t sub_253A3C160@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t sub_253A3C180()
{
  return v1 + *(int *)(v0 + 24);
}

uint64_t sub_253A3C198()
{
  return sub_253B0A370();
}

uint64_t sub_253A3C1B8()
{
  return sub_253B0A3A0();
}

uint64_t sub_253A3C1EC()
{
  return sub_253B09860();
}

uint64_t sub_253A3C210()
{
  return sub_253961F60(v1, v0, v2);
}

uint64_t sub_253A3C234()
{
  return sub_253472458(v1, v0);
}

uint64_t sub_253A3C24C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)(v3 - 256);
  *(void *)uint64_t v4 = a1;
  *(void *)(v4 + 8) = v1;
  *(unsigned char *)(v4 + 16) = v2;
  return v4;
}

uint64_t sub_253A3C264@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 240) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_253A3C284()
{
  *(unsigned char *)(v0 - 66) = 1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_253A3C2A8()
{
  return sub_253B0A3A0();
}

uint64_t sub_253A3C2C0()
{
  return sub_253B059D0();
}

uint64_t sub_253A3C2E4()
{
  return sub_253B09860();
}

uint64_t sub_253A3C300()
{
  return v0 + *(int *)(v1 + 20);
}

uint64_t sub_253A3C310()
{
  return 0;
}

uint64_t sub_253A3C328()
{
  return 0;
}

uint64_t sub_253A3C340(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  return swift_bridgeObjectRetain();
}

uint64_t sub_253A3C36C()
{
  return v0 + *(int *)(v1 + 20);
}

uint64_t sub_253A3C384()
{
  return 0;
}

uint64_t sub_253A3C390()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_253A3C3B8@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t sub_253A3C3C4()
{
  type metadata accessor for ClientAction(0);
  return sub_253B059D0();
}

uint64_t sub_253A3C418()
{
  *(unsigned char *)(v0 - 96) = 1;
  return sub_253B055C0();
}

void sub_253A3C440(uint64_t a1@<X8>)
{
  *(void *)(v4 - 136) = v2;
  *(void *)(v4 - 128) = v1;
  *(void *)(v4 - 120) = ~a1;
  *(void *)(v4 - 144) = v3;
  uint64_t v5 = v3 + 16;
  *(void *)(v4 - 112) = *(void *)(v5 + 56);
  *(void *)(v4 - 152) = v5 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
}

uint64_t sub_253A3C470()
{
  return sub_253472458(v1, v0);
}

uint64_t sub_253A3C488@<X0>(uint64_t a1@<X8>)
{
  return sub_253961F60(v2 + a1, v1, v3);
}

uint64_t sub_253A3C4A4()
{
  return sub_253961F60(v0, v1, v2);
}

uint64_t sub_253A3C4C0()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_253A3C4DC()
{
  return sub_253B059D0();
}

uint64_t sub_253A3C504()
{
  return sub_253B055C0();
}

uint64_t sub_253A3C548()
{
  return type metadata accessor for Session.Event.Payload(0);
}

uint64_t sub_253A3C570()
{
  return sub_25396DF48(v1, v0);
}

uint64_t sub_253A3C58C()
{
  return sub_253B059D0();
}

uint64_t sub_253A3C5A8()
{
  return sub_253B0A370();
}

uint64_t sub_253A3C5E0()
{
  return sub_253B055C0();
}

uint64_t sub_253A3C5FC(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_253A3C618()
{
  return 0x52747865746E6F63;
}

uint64_t sub_253A3C63C()
{
  return 0x61636F5669726973;
}

uint64_t sub_253A3C660()
{
  return v0;
}

uint64_t sub_253A3C68C()
{
  return *(void *)(v0 + *(int *)(v1 + 32));
}

void sub_253A3C6A0()
{
  *(unsigned char *)(v0 - 67) = 2;
}

uint64_t sub_253A3C6C4()
{
  return v0;
}

uint64_t sub_253A3C6D8()
{
  return swift_initStructMetadata();
}

uint64_t sub_253A3C70C()
{
  return sub_253B059D0();
}

uint64_t sub_253A3C72C()
{
  return sub_253B0A2C0();
}

uint64_t sub_253A3C74C()
{
  return sub_253B0A2C0();
}

uint64_t sub_253A3C76C()
{
  return sub_253B0A440();
}

void sub_253A3C7B8()
{
  *(void *)(v1 - 104) = v0 + 56;
}

uint64_t sub_253A3C7E4()
{
  return sub_253B0A2C0();
}

uint64_t sub_253A3C818()
{
  return sub_253B0A2C0();
}

uint64_t sub_253A3C838()
{
  return 0;
}

uint64_t sub_253A3C84C()
{
  return sub_253B09860();
}

uint64_t sub_253A3C86C()
{
  return sub_253B095D0();
}

uint64_t sub_253A3C88C()
{
  *(void *)(v3 - 96) = v0;
  return sub_253961F60(v0, v1, v2);
}

uint64_t sub_253A3C8AC()
{
  return type metadata accessor for Session.Event(0);
}

uint64_t sub_253A3C8D0()
{
  *(void *)(v1 - 184) = v0;
  return 1;
}

uint64_t sub_253A3C8F8()
{
  return 0x656D6F646167656DLL;
}

uint64_t sub_253A3C918()
{
  return v0;
}

uint64_t sub_253A3C930()
{
  *uint64_t v1 = v0;
  return sub_253B0A2D0();
}

uint64_t sub_253A3C954()
{
  *(unsigned char *)(v0 - 68) = 3;
  return v0 - 68;
}

uint64_t sub_253A3C964()
{
  *(unsigned char *)(v0 - 68) = 3;
  return sub_253B0A3B0();
}

uint64_t sub_253A3C998()
{
  *(unsigned char *)(v0 - 67) = 2;
  return sub_253B0A370();
}

uint64_t sub_253A3C9CC()
{
  return sub_253B0A3E0();
}

uint64_t sub_253A3C9E4(uint64_t a1)
{
  *(void *)(v1 - 112) = a1;
  return sub_253B0A370();
}

uint64_t sub_253A3CA18()
{
  return sub_253B0A370();
}

uint64_t sub_253A3CA58()
{
  *(unsigned char *)(v0 - 65) = 0;
  return sub_253B059D0();
}

uint64_t sub_253A3CA70()
{
  return sub_253B055C0();
}

uint64_t sub_253A3CA94()
{
  *(unsigned char *)(v0 - 66) = 1;
  return v0 - 66;
}

uint64_t sub_253A3CAA4()
{
  return v0;
}

uint64_t sub_253A3CABC()
{
  return 0;
}

uint64_t sub_253A3CAE4()
{
  return sub_253B0A660();
}

uint64_t sub_253A3CB08(uint64_t a1)
{
  return v1 + *(int *)(a1 + 20);
}

void sub_253A3CB18(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + *(int *)(a1 + 32));
  *uint64_t v3 = 0;
  v3[1] = 0;
  StatementID.init(fromExprId:)();
}

uint64_t sub_253A3CB4C(uint64_t result)
{
  *(void *)(v2 - 80) = *(void *)(v1 + *(int *)(result + 20));
  *(unsigned char *)(v2 - 81) = 1;
  return result;
}

uint64_t sub_253A3CB64()
{
  return sub_253B0A4C0();
}

uint64_t sub_253A3CB7C()
{
  return sub_253B0A660();
}

uint64_t sub_253A3CBA0()
{
  return sub_253B0A2C0();
}

uint64_t sub_253A3CBC4()
{
  return v0;
}

uint64_t sub_253A3CBDC()
{
  return sub_253B0A660();
}

uint64_t sub_253A3CC00()
{
  return sub_253B0A660();
}

uint64_t sub_253A3CC24()
{
  return 0x61566E7275746572;
}

void sub_253A3CC44()
{
  *(void *)(v0 - 152) = 0;
  *(void *)(v0 - 144) = 0xE000000000000000;
}

uint64_t sub_253A3CC54()
{
  return sub_253B0A440();
}

uint64_t sub_253A3CC78(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 1, 1, v1);
}

uint64_t sub_253A3CC94()
{
  return sub_253472458(v1, v0);
}

void sub_253A3CCAC()
{
  *(void *)(v0 - 152) = 0x203A72657375;
  *(void *)(v0 - 144) = 0xE600000000000000;
}

uint64_t sub_253A3CCE4()
{
  return v0;
}

uint64_t sub_253A3CCFC()
{
  return sub_253B0A2E0();
}

uint64_t sub_253A3CD18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = (void *)(v2 + a1);
  uint64_t v5 = v4[1];
  uint64_t v7 = v4[2];
  uint64_t v6 = v4[3];
  *uint64_t v1 = *v4;
  v1[1] = v5;
  v1[2] = v7;
  v1[3] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_253A3CD3C()
{
  return sub_253B0A4C0();
}

uint64_t sub_253A3CD60()
{
  return v0;
}

uint64_t sub_253A3CD70()
{
  return 1;
}

uint64_t sub_253A3CD80()
{
  return 1;
}

uint64_t sub_253A3CD90()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_253A3CDC0()
{
  return 0x6D6F725072657375;
}

uint64_t sub_253A3CDE0()
{
  return sub_253B09860();
}

uint64_t sub_253A3CE14()
{
  return sub_253472458(v0, v1);
}

uint64_t sub_253A3CE2C()
{
  return sub_253B09860();
}

void sub_253A3CE44()
{
  uint64_t v3 = (uint64_t *)(v0 + *(int *)(v1 + 24));
  uint64_t v4 = *v3;
  LOBYTE(v3) = *((unsigned char *)v3 + 8);
  *(void *)(v2 - 80) = v4;
  *(unsigned char *)(v2 - 72) = (_BYTE)v3;
  *(unsigned char *)(v2 - 81) = 2;
}

unint64_t sub_253A3CE68()
{
  uint64_t v4 = v0 + *(int *)(v1 + 24);
  uint64_t v5 = *(void *)(v4 + 16);
  *(_OWORD *)(v2 - 96) = *(_OWORD *)v4;
  *(void *)(v2 - 80) = v5;
  *(unsigned char *)(v2 - 97) = 2;
  return sub_2539EA568();
}

uint64_t sub_253A3CE98()
{
  return sub_253B0A370();
}

uint64_t sub_253A3CEB0()
{
  return sub_253B0A400();
}

uint64_t sub_253A3CEC8()
{
  return sub_253B0A370();
}

uint64_t sub_253A3CEF8()
{
  return sub_253B0A370();
}

uint64_t sub_253A3CF34(uint64_t result, int a2)
{
  *(void *)(result + 8) = (a2 - 1);
  return result;
}

void sub_253A3CF40()
{
  *(unsigned char *)(v0 - 67) = 1;
}

uint64_t sub_253A3CF4C(uint64_t a1)
{
  *(void *)(v4 - 192) = *(void *)(v3 + v1);
  *(void *)(v4 - 184) = v2;
  *(void *)(v4 - 200) = *(void *)(v3 + *(int *)(a1 + 28));
  return swift_bridgeObjectRetain();
}

uint64_t sub_253A3CF7C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + a1) = v8;
  *uint64_t v9 = a4;
  v9[1] = a5;
  *uint64_t v7 = a6;
  v7[1] = a3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_253A3CFAC()
{
  return sub_253B09860();
}

uint64_t sub_253A3CFDC()
{
  *(void *)(v2 - 88) = *v1;
  *uint64_t v1 = 0x8000000000000000;
  return v0;
}

uint64_t sub_253A3D000()
{
  return v0;
}

uint64_t sub_253A3D030()
{
  return v0;
}

uint64_t sub_253A3D03C()
{
  return v0;
}

uint64_t sub_253A3D048()
{
  return sub_253472458(v1, v0);
}

uint64_t sub_253A3D060()
{
  return sub_253B0A370();
}

uint64_t sub_253A3D090()
{
  return sub_253B06820();
}

uint64_t sub_253A3D0E4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 264) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_253A3D108@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 296) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_253A3D12C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 376) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_253A3D150@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 272) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_253A3D174(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_253961F60(v3, v4, a3);
}

uint64_t sub_253A3D1A4()
{
  *(void *)(v1 - 128) = v0;
  *(unsigned char *)(v1 - 65) = 0;
  return sub_253B0A320();
}

uint64_t sub_253A3D1D4()
{
  return sub_253B09860();
}

uint64_t sub_253A3D204()
{
  return type metadata accessor for ClientAction(0);
}

uint64_t sub_253A3D21C()
{
  return _s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0();
}

uint64_t sub_253A3D234()
{
  return sub_253B09860();
}

char *sub_253A3D24C(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return (char *)a1 + v2;
}

uint64_t sub_253A3D278@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 104) = a1;
  return sub_253B0A320();
}

uint64_t sub_253A3D298@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 136) = a1;
  return 0;
}

void sub_253A3D2AC()
{
  *(unsigned char *)(v0 - 81) = 2;
}

void sub_253A3D2B8()
{
  *(unsigned char *)(v0 - 68) = 2;
}

uint64_t sub_253A3D2C4()
{
  *(unsigned char *)(v0 - 67) = 2;
  return v0 - 67;
}

uint64_t sub_253A3D2D4()
{
  return v0;
}

uint64_t sub_253A3D2E8()
{
  *(unsigned char *)(v0 - 65) = 0;
  return sub_253B0A3F0();
}

uint64_t sub_253A3D314()
{
  return sub_253B0A2C0();
}

uint64_t sub_253A3D330()
{
  return sub_253B0A2C0();
}

uint64_t sub_253A3D350()
{
  return swift_initStructMetadata();
}

uint64_t sub_253A3D370()
{
  return 0;
}

uint64_t sub_253A3D390()
{
  return *(void *)(v0 - 192);
}

unsigned char *sub_253A3D3A0@<X0>(char a1@<W8>)
{
  uint64_t v2 = *(unsigned char **)(v1 - 256);
  *uint64_t v2 = a1;
  return v2;
}

void sub_253A3D3B4()
{
  *(unsigned char *)(v0 - 81) = 1;
}

void sub_253A3D3C0()
{
  *(void *)(v1 - 136) = v0;
  *(unsigned char *)(v1 - 65) = 0;
}

uint64_t sub_253A3D3E0()
{
  return 0;
}

uint64_t sub_253A3D400()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_253A3D41C()
{
  return v0 + 32;
}

uint64_t sub_253A3D42C()
{
  return sub_253B0A2C0();
}

uint64_t sub_253A3D44C()
{
  return sub_253B059D0();
}

uint64_t sub_253A3D478()
{
  return 0;
}

uint64_t sub_253A3D488()
{
  return v0 + *(int *)(v1 + 28);
}

uint64_t sub_253A3D4A8()
{
  *(void *)(v5 - 184) = v2;
  *(void *)(v5 - 176) = v4;
  *(void *)(v5 - 192) = v0;
  *(void *)(v5 - 168) = v3;
  *(void *)(v5 - 88) = v1;
  return sub_253B0A390();
}

uint64_t sub_253A3D4E4()
{
  return 0;
}

uint64_t sub_253A3D4F8()
{
  return *(void *)(v0 - 128);
}

uint64_t sub_253A3D518()
{
  return v0;
}

uint64_t sub_253A3D524()
{
  return v0;
}

uint64_t sub_253A3D53C()
{
  return sub_253B0A440();
}

uint64_t sub_253A3D55C()
{
  return v0;
}

uint64_t sub_253A3D568()
{
  return v0;
}

uint64_t sub_253A3D57C()
{
  return 0x736E6961746E6F63;
}

uint64_t sub_253A3D594@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(v1 + 24) = a1;
  uint64_t v3 = (void *)(v2 + a1);
  uint64_t result = v3[1];
  *(void *)uint64_t v1 = *v3;
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t sub_253A3D5A8()
{
  return sub_253B0A440();
}

uint64_t sub_253A3D5D8()
{
  return v0;
}

uint64_t sub_253A3D5E8(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 1, 1, v1);
}

uint64_t sub_253A3D604()
{
  return sub_253961F60(v0, v1, v2);
}

uint64_t sub_253A3D620()
{
  *(void *)(v0 - 152) = 0x203A72657375;
  *(void *)(v0 - 144) = 0xE600000000000000;
  return swift_bridgeObjectRetain();
}

uint64_t sub_253A3D66C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_253A3D688(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v1, 1, a1);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v2, 1, a1);
}

uint64_t sub_253A3D6CC()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_253A3D6EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_2539DF660(a1, v3);
}

void sub_253A3D704(uint64_t a1@<X8>)
{
  *(void *)(v2 + a1 + 8) = (v1 - 1);
}

uint64_t sub_253A3D714()
{
  return v0;
}

void sub_253A3D724()
{
  *(void *)(*(void *)(v0 - 144) + *(int *)(*(void *)(v0 - 136) + 20)) = *(void *)(v0 - 88);
}

uint64_t sub_253A3D778@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 248) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_253A3D798@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_253A3D7C8()
{
  return sub_253B0A680();
}

uint64_t sub_253A3D7E4()
{
  return sub_253B0A680();
}

uint64_t sub_253A3D800()
{
  return v0;
}

uint64_t sub_253A3D814()
{
  return sub_253472458(v0, v1);
}

BOOL _s30IntelligenceFlowPlannerSupport14RequestContentO22SystemPromptResolutionV011RequirementI0V2eeoiySbAG_AGtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_253A3D844()
{
  return sub_253B059B0();
}

uint64_t sub_253A3D86C()
{
  return sub_253B09120();
}

void sub_253A3D888()
{
  *uint64_t v0 = *(void *)(v1 - 72);
}

uint64_t sub_253A3D894()
{
  return v0;
}

uint64_t sub_253A3D8A4()
{
  return v0;
}

uint64_t sub_253A3D8B8()
{
  return v0;
}

uint64_t sub_253A3D8C8()
{
  return 0;
}

uint64_t sub_253A3D8DC()
{
  return v0;
}

char *sub_253A3D8EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (char *)&a9 - v9;
}

uint64_t sub_253A3D8FC(void *a1, void *a2)
{
  uint64_t result = a2[1];
  *a1 = *a2;
  a1[1] = result;
  return result;
}

uint64_t sub_253A3D90C()
{
  return type metadata accessor for ActionResolverRequest(0);
}

uint64_t sub_253A3D924()
{
  return sub_253B09630();
}

uint64_t sub_253A3D940()
{
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_253A3D96C()
{
  return type metadata accessor for Session.Event(0);
}

uint64_t sub_253A3D988()
{
  return 0;
}

uint64_t sub_253A3D9A8()
{
  return type metadata accessor for Candidate(0);
}

__n128 sub_253A3D9C8()
{
  __n128 result = *(__n128 *)(v0 - 176);
  *(_OWORD *)(v0 - 128) = *(_OWORD *)(v0 - 160);
  *(__n128 *)(v0 - 112) = result;
  uint64_t v2 = *(void *)(v0 - 192);
  *(void *)(v0 - 96) = *(void *)(v0 - 184);
  *(void *)(v0 - 88) = v2;
  return result;
}

uint64_t sub_253A3D9F0()
{
  *(void *)(v4 - 176) = v1;
  *(void *)(v4 - 168) = v2;
  *(void *)(v4 - 160) = v0;
  *(void *)(v4 - 88) = v3;
  return sub_253B0A390();
}

uint64_t sub_253A3DA18()
{
  return sub_253B059D0();
}

uint64_t _s30IntelligenceFlowPlannerSupport16ContextRetrievedV09utteranceE0SayAA0fE9StatementVGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_253A3DA44()
{
  *(unsigned char *)(v0 - 65) = 0;
  return 0;
}

uint64_t sub_253A3DA50()
{
  *(unsigned char *)(v0 - 65) = 0;
  return sub_253B055C0();
}

void sub_253A3DA68()
{
  *(unsigned char *)(v0 - 104) = 1;
}

void sub_253A3DA74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13 = (void *)(v9 + *(int *)(v12 + 20));
  *uint64_t v13 = v11;
  v13[1] = v10;
  *(void *)(v9 + *(int *)(v12 + 24)) = a9;
}

uint64_t sub_253A3DA90()
{
  *(unsigned char *)(v0 - 66) = 1;
  return sub_253B059D0();
}

uint64_t _s30IntelligenceFlowPlannerSupport015ClientInitiatedE6ActionV10parametersSDySS7ToolKit10TypedValueOGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_253A3DADC()
{
  return sub_253B0A660();
}

uint64_t sub_253A3DB10()
{
  return sub_253B0A370();
}

uint64_t sub_253A3DB38()
{
  return sub_253472458(v1, v0);
}

uint64_t sub_253A3DB50()
{
  return v0;
}

uint64_t sub_253A3DB68()
{
  return v0;
}

uint64_t sub_253A3DB74(uint64_t a1)
{
  uint64_t v3 = *(int *)(a1 + 20);
  *(void *)(v2 - 104) = v1;
  return v1 + v3;
}

uint64_t sub_253A3DB90()
{
  *(void *)(v1 - 96) = v0;
  return sub_253B0A660();
}

uint64_t sub_253A3DBB8()
{
  return v0;
}

uint64_t sub_253A3DBD4()
{
  *(void *)(v0 - 152) = 0;
  *(void *)(v0 - 144) = 0xE000000000000000;
  return sub_253B0A000();
}

uint64_t sub_253A3DBFC()
{
  *(void *)(v1 - 88) = v0;
  return 0;
}

void sub_253A3DC08()
{
  *(void *)(v0 - 72) = *(void *)(v0 - 112);
}

void sub_253A3DC14()
{
  *(void *)(v0 + 16) = v1;
}

uint64_t sub_253A3DC4C()
{
  return sub_253B055C0();
}

uint64_t sub_253A3DC74()
{
  return type metadata accessor for RequestContent(0);
}

uint64_t sub_253A3DC9C()
{
  return sub_253B09120();
}

uint64_t sub_253A3DCFC()
{
  return _s30IntelligenceFlowPlannerSupport20PlatformPnRTelemetryC7startedy10Foundation4UUIDVAA12StartedStateO_0aE7Library0aB11IdentifiersVSgAGtFZfA1__0();
}

uint64_t sub_253A3DD24()
{
  return sub_253B055C0();
}

uint64_t sub_253A3DD4C()
{
  return type metadata accessor for Timepoint();
}

uint64_t sub_253A3DD90()
{
  return type metadata accessor for RequestContent(0);
}

uint64_t sub_253A3DDB8()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_253A3DDD0()
{
  return sub_253B09860();
}

uint64_t sub_253A3DDE8()
{
  return sub_253B0A480();
}

uint64_t sub_253A3DE00(uint64_t a1)
{
  return sub_253961F60(a1, v1, v2);
}

uint64_t sub_253A3DE18()
{
  return sub_253B09860();
}

uint64_t sub_253A3DE3C(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
  return type metadata accessor for StatementResult(0);
}

uint64_t sub_253A3DE70(uint64_t a1)
{
  uint64_t result = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v3, 1, 1, a1);
  uint64_t v5 = (void *)(v1 + *(int *)(v2 + 24));
  *uint64_t v5 = 0;
  v5[1] = 0;
  v5[2] = 0;
  return result;
}

uint64_t sub_253A3DECC()
{
  return 1;
}

uint64_t sub_253A3DEE8()
{
  return sub_253B09860();
}

unint64_t sub_253A3DF00()
{
  return 0xD000000000000014;
}

uint64_t sub_253A3DF14()
{
  *(void *)(v4 - 96) = v0;
  uint64_t v6 = *(int *)(v0 + 20);
  return sub_253961F60(v1 + v6, v3, v2);
}

uint64_t sub_253A3DF3C@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_253A3DF48(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_253961F60(v3, v4, a3);
}

uint64_t sub_253A3DF60()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_253A3DF78()
{
  return 0;
}

uint64_t sub_253A3DF84()
{
  return type metadata accessor for ActionCancellation(0);
}

__n128 sub_253A3DFA0()
{
  __n128 result = *(__n128 *)(v0 - 128);
  long long v2 = *(_OWORD *)(v0 - 112);
  uint64_t v3 = *(void *)(v0 - 96);
  uint64_t v4 = *(void *)(v0 - 88);
  uint64_t v5 = *(void *)(v0 - 144);
  *(__n128 *)uint64_t v5 = result;
  *(_OWORD *)(v5 + 16) = v2;
  *(void *)(v5 + 32) = v3;
  *(void *)(v5 + 40) = v4;
  return result;
}

uint64_t sub_253A3DFB8()
{
  return sub_253B0A440();
}

uint64_t sub_253A3DFFC()
{
  return sub_253B0A000();
}

void sub_253A3E02C()
{
  *uint64_t v1 = v0;
}

__n128 sub_253A3E03C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (__n128 *)(v1 + a1);
  unint64_t v4 = v3->n128_u64[1];
  *(void *)(v2 - 104) = v3->n128_u64[0];
  *(void *)(v2 - 96) = v4;
  __n128 result = v3[1];
  *(__n128 *)(v2 - 88) = result;
  return result;
}

void sub_253A3E054()
{
  *(unsigned char *)(v0 - 69) = 4;
}

void sub_253A3E080()
{
  *(void *)(v2 - 104) = *(void *)(v0 + *(int *)(v1 + 28));
  *(unsigned char *)(v2 - 65) = 3;
}

void sub_253A3E098()
{
  *(unsigned char *)(v0 - 65) = 2;
}

uint64_t sub_253A3E0B4()
{
  *(unsigned char *)(v0 - 67) = 2;
  return 0;
}

uint64_t sub_253A3E0D8()
{
  return v0;
}

uint64_t sub_253A3E0E4()
{
  *(unsigned char *)(v0 - 65) = 0;
  return sub_253B0A320();
}

uint64_t sub_253A3E118()
{
  return sub_253B0A5F0();
}

uint64_t sub_253A3E13C()
{
  *(void *)(v1 - 136) = v0;
  return sub_253B0A090();
}

uint64_t sub_253A3E160()
{
  return sub_253B0A4C0();
}

void sub_253A3E184()
{
  *(void *)(v1 - 96) = v0;
}

uint64_t sub_253A3E190()
{
  return swift_bridgeObjectRelease();
}

void sub_253A3E1AC()
{
  *(unsigned char *)(v0 - 66) = 1;
}

void sub_253A3E1D4(uint64_t a1@<X8>)
{
  *(void *)(v2 - 96) = v1;
  *(void *)(v2 - 136) = a1;
}

uint64_t sub_253A3E1E4@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 120) = a1;
  return sub_253B0A330();
}

void sub_253A3E208(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
}

uint64_t sub_253A3E248()
{
  return sub_253B0A3B0();
}

void sub_253A3E270()
{
  StatementID.init(fromExprId:)();
}

uint64_t sub_253A3E2A4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_253A3E2C0()
{
  *(unsigned char *)(v0 - 66) = 1;
  return 0;
}

uint64_t sub_253A3E2D8(uint64_t a1)
{
  return v1 + *(int *)(a1 + 20);
}

uint64_t sub_253A3E2E4(uint64_t result)
{
  unint64_t v4 = (void *)(v3 + *(int *)(result + 20));
  *unint64_t v4 = v2;
  v4[1] = v1;
  return result;
}

uint64_t sub_253A3E2FC()
{
  *(unsigned char *)(v0 - 74) = 1;
  return 0;
}

uint64_t sub_253A3E314()
{
  *(unsigned char *)(v0 - 66) = 1;
  return sub_253B06820();
}

uint64_t sub_253A3E338()
{
  return 0;
}

uint64_t sub_253A3E348(uint64_t a1)
{
  return v1 + *(int *)(a1 + 20);
}

__n128 sub_253A3E354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  __n128 result = a9;
  *uint64_t v9 = a9;
  v9[1].n128_u64[0] = v10;
  v9[1].n128_u64[1] = v11;
  return result;
}

uint64_t sub_253A3E364@<X0>(uint64_t a1@<X8>)
{
  return sub_253961F60(v2 + a1, v3, v1);
}

uint64_t sub_253A3E380()
{
  return sub_253B059D0();
}

uint64_t sub_253A3E39C()
{
  return sub_253B0A3A0();
}

uint64_t sub_253A3E3C0()
{
  return v0;
}

uint64_t sub_253A3E3D8(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_253A3E3E8(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_253A3E3FC()
{
  return v0;
}

uint64_t sub_253A3E40C()
{
  return sub_253B0A440();
}

uint64_t sub_253A3E424()
{
  *(void *)(v1 - 152) = v0;
  return v0;
}

uint64_t sub_253A3E43C()
{
  return v0;
}

uint64_t sub_253A3E454()
{
  return sub_253961E40(v2, v1, v0);
}

uint64_t sub_253A3E478()
{
  return sub_253B0A370();
}

uint64_t sub_253A3E49C()
{
  return sub_253472458(v1, v0);
}

uint64_t sub_253A3E4B4()
{
  return sub_253B0A660();
}

uint64_t sub_253A3E4D8()
{
  return sub_253B0A660();
}

uint64_t sub_253A3E508()
{
  return sub_253B0A2C0();
}

uint64_t sub_253A3E550()
{
  return sub_253961F60(v2, v0, v1);
}

uint64_t sub_253A3E574()
{
  return v0 - 152;
}

uint64_t sub_253A3E580(char a1)
{
  return a1 & 1;
}

uint64_t sub_253A3E58C()
{
  return sub_253B0A370();
}

uint64_t sub_253A3E5B0()
{
  return v0;
}

uint64_t sub_253A3E5C8()
{
  return v0;
}

uint64_t sub_253A3E5D4()
{
  return v0;
}

uint64_t sub_253A3E5E0()
{
  return sub_253B0A370();
}

uint64_t sub_253A3E604()
{
  return sub_253B09860();
}

uint64_t sub_253A3E620()
{
  return v0;
}

uint64_t sub_253A3E630()
{
  return v0;
}

uint64_t sub_253A3E654@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return type metadata accessor for StatementResult(0);
}

uint64_t sub_253A3E670@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return type metadata accessor for QueryStep(0);
}

uint64_t sub_253A3E68C@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 112) = a1;
  return v1 - 112;
}

uint64_t sub_253A3E6BC()
{
  return v0;
}

uint64_t sub_253A3E6CC()
{
  return v0;
}

uint64_t sub_253A3E6E4()
{
  return sub_253961E88(v0, v1);
}

uint64_t sub_253A3E700()
{
  return sub_25396DF48(v0, v1);
}

uint64_t sub_253A3E71C()
{
  return v0;
}

uint64_t sub_253A3E734()
{
  return sub_253487D84(v1, v0);
}

uint64_t sub_253A3E764()
{
  return 0;
}

uint64_t sub_253A3E77C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_2539DF5B8(a1, v3);
}

uint64_t sub_253A3E7AC()
{
  return sub_253B0A440();
}

uint64_t sub_253A3E7D8()
{
  return v0;
}

void sub_253A3E7F0()
{
  *(void *)(v1 - 72) = v0;
  sub_2539E7ADC();
}

uint64_t sub_253A3E82C@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return sub_253B0A2E0();
}

uint64_t sub_253A3E850()
{
  return sub_253B0A480();
}

uint64_t sub_253A3E86C@<X0>(uint64_t a1@<X8>)
{
  return v1 + ((a1 + 32) & ~a1);
}

uint64_t sub_253A3E894()
{
  return sub_253961E88(v1, v0);
}

unint64_t sub_253A3E8B0(uint64_t a1)
{
  return sub_25396E204(a1, v1, 0, 1);
}

uint64_t sub_253A3E8E8()
{
  *uint64_t v0 = 0x8000000000000000;
  return swift_bridgeObjectRetain();
}

uint64_t sub_253A3E918(uint64_t a1)
{
  *(void *)(v3 + 40) = a1;
  return sub_253961F60(v2, v1, v4);
}

uint64_t sub_253A3E93C()
{
  return sub_253B096B0();
}

uint64_t sub_253A3E960()
{
  return sub_253B0A2C0();
}

uint64_t sub_253A3E9A0()
{
  return sub_253B059D0();
}

void sub_253A3E9C8()
{
  *(void *)(v1 - 88) = v0;
}

void sub_253A3E9D8()
{
  *(void *)(v1 - 88) = v0;
}

uint64_t sub_253A3E9E4()
{
  return sub_253B09860();
}

uint64_t sub_253A3E9FC()
{
  return v0;
}

uint64_t sub_253A3EA08()
{
  return sub_25396DF48(v1, v0);
}

uint64_t sub_253A3EA40()
{
  *(void *)(v1 - 96) = v0;
  return sub_253B095C0();
}

__n128 sub_253A3EA64()
{
  __n128 result = *(__n128 *)(v0 - 104);
  *(__n128 *)(v0 - 128) = result;
  return result;
}

uint64_t sub_253A3EA74()
{
  return sub_253B09860();
}

uint64_t sub_253A3EA90()
{
  return sub_253B09860();
}

uint64_t sub_253A3EAB4()
{
  return sub_253B09860();
}

uint64_t sub_253A3EAE8()
{
  return 8236;
}

uint64_t sub_253A3EB10(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  return 0;
}

uint64_t sub_253A3EB20()
{
  return type metadata accessor for Action(0);
}

uint64_t sub_253A3EB44()
{
  return sub_2539DF660(v0, v1);
}

uint64_t sub_253A3EB5C()
{
  uint64_t v3 = *(void *)(v1 - 160);
  return sub_2539DF5B8(v0, v3);
}

uint64_t sub_253A3EB78()
{
  return v0;
}

uint64_t sub_253A3EB88()
{
  return v0;
}

uint64_t sub_253A3EBA4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_253A3EBC0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  return swift_bridgeObjectRelease();
}

uint64_t sub_253A3EBE4()
{
  return v0;
}

uint64_t sub_253A3EBF8()
{
  return v0;
}

uint64_t sub_253A3EC0C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 96) = a1;
  *(void *)(v2 - 88) = v1;
  return sub_253B09860();
}

uint64_t sub_253A3EC2C()
{
  return v0;
}

uint64_t sub_253A3EC40()
{
  return sub_253B0A320();
}

uint64_t sub_253A3EC60()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_253A3EC78()
{
  uint64_t v5 = *(void *)(v3 - 88);
  *uint64_t v0 = v2;
  v0[1] = v1;
  v0[2] = v5;
  return swift_bridgeObjectRetain();
}

void sub_253A3EC98()
{
  uint64_t v1 = *(void *)(v0 - 56);
  *(void *)(v0 - 64) = *(void *)(v0 - 64);
  *(void *)(v0 - 56) = v1;
}

void sub_253A3ECA4(void *a1@<X8>)
{
  *a1 = v1;
  a1[1] = v2;
}

void sub_253A3ECAC(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 56) = 2;
}

uint64_t sub_253A3ECB8@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  return sub_253B09120();
}

uint64_t sub_253A3ECD8()
{
  return *(void *)(v0 + *(int *)(v1 + 32) + 8);
}

uint64_t sub_253A3ECEC()
{
  return 0;
}

uint64_t sub_253A3ECF8()
{
  return 0;
}

uint64_t sub_253A3ED04()
{
  return sub_253B0A370();
}

uint64_t sub_253A3ED30()
{
  *uint64_t v0 = v1;
  return sub_253B0A2D0();
}

uint64_t sub_253A3ED50()
{
  return *(void *)(v0 - 112);
}

uint64_t sub_253A3ED70@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 112) = a1;
  return sub_253B059D0();
}

uint64_t sub_253A3ED9C()
{
  return *(void *)(v0 + *(int *)(v1 + 28));
}

uint64_t sub_253A3EDB0@<X0>(uint64_t a1@<X8>)
{
  return *(void *)a1;
}

uint64_t sub_253A3EDBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  *uint64_t v1 = *a1;
  v1[1] = v3;
  v1[2] = v4;
  return result;
}

uint64_t sub_253A3EDDC()
{
  return v0;
}

uint64_t sub_253A3EDF0()
{
  return v0 - 72;
}

uint64_t sub_253A3EDFC()
{
  return v0;
}

uint64_t sub_253A3EE40()
{
  return v0;
}

uint64_t sub_253A3EE54()
{
  *(unsigned char *)(v0 - 65) = 0;
  return v0 - 65;
}

uint64_t sub_253A3EE60()
{
  *(unsigned char *)(v0 - 65) = 0;
  return sub_253B09120();
}

void sub_253A3EE78()
{
  *(unsigned char *)(v0 - 65) = 0;
}

uint64_t sub_253A3EE98()
{
  return sub_253B09860();
}

void sub_253A3EEBC()
{
  *(unsigned char *)(v0 - 82) = 1;
}

void sub_253A3EEC8()
{
  *(unsigned char *)(v0 - 96) = 1;
}

uint64_t sub_253A3EEDC()
{
  *(unsigned char *)(v0 - 66) = 1;
  return *(void *)(v0 - 96);
}

uint64_t sub_253A3EEF0()
{
  *(unsigned char *)(v0 - 66) = 1;
  return *(unsigned int *)(v0 - 72);
}

void sub_253A3EF60(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_253A3EF6C()
{
  return 0;
}

void sub_253A3EF78(uint64_t a1@<X8>)
{
  uint64_t v4 = (void *)(v3 + a1);
  *uint64_t v4 = v2;
  v4[1] = v1;
}

uint64_t sub_253A3EF84()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_253A3EF9C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = (void *)(v3 + a3);
  *uint64_t v4 = result;
  v4[1] = a2;
  return result;
}

uint64_t sub_253A3EFA8()
{
  return v0;
}

uint64_t sub_253A3EFC8()
{
  return v0;
}

uint64_t sub_253A3EFDC()
{
  return v0;
}

uint64_t sub_253A3EFF0()
{
  return 0;
}

uint64_t sub_253A3F018()
{
  return v0 + *(int *)(v1 + 32);
}

uint64_t sub_253A3F044()
{
  return sub_253B0A370();
}

uint64_t sub_253A3F064()
{
  return 0;
}

size_t sub_253A3F07C(const void *a1)
{
  return j__malloc_size(a1);
}

uint64_t _s30IntelligenceFlowPlannerSupport7SessionO4PlanV19DecompositionResultV6prompt7queriesAGSSSg_SaySSGtcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t _s30IntelligenceFlowPlannerSupport21ContextPrewarmRequestV07prewarmG2IdACSS_tcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_253A3F0B8(uint64_t a1)
{
  return *(void *)a1;
}

void sub_253A3F0CC()
{
  *uint64_t v0 = 0x8000000000000000;
}

uint64_t sub_253A3F0F8()
{
  return sub_253B09860();
}

uint64_t sub_253A3F11C()
{
  uint64_t v3 = *(void *)(v1 - 136);
  return sub_2539DF660(v0, v3);
}

uint64_t sub_253A3F148()
{
  return sub_253B0A680();
}

uint64_t sub_253A3F168()
{
  return sub_253B0A370();
}

uint64_t sub_253A3F188@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = (void *)(*(void *)(a1 + 48) + 16 * v2);
  uint64_t v5 = v4[1];
  *uint64_t v1 = *v4;
  v1[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_253A3F1D0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 104);
  return sub_2539DF5B8(a1, v3);
}

uint64_t sub_253A3F1FC()
{
  return v0;
}

uint64_t sub_253A3F210()
{
  return v0;
}

uint64_t sub_253A3F224()
{
  return v0;
}

uint64_t sub_253A3F238()
{
  return sub_253B0A680();
}

void sub_253A3F258()
{
  *(void *)(v1 - 88) = v0;
  *(unsigned char *)(v1 - 65) = 0;
}

uint64_t sub_253A3F26C()
{
  return sub_253B0A170();
}

void sub_253A3F28C()
{
  *(void *)(v0 - 152) = 0;
  *(void *)(v0 - 144) = 0xE000000000000000;
}

uint64_t sub_253A3F298()
{
  *(void *)(v0 - 152) = 0;
  *(void *)(v0 - 144) = 0xE000000000000000;
  return sub_253B0A000();
}

void sub_253A3F2B8()
{
  *(void *)(v1 - 104) = v0;
}

uint64_t sub_253A3F2C4@<X0>(uint64_t a1@<X8>)
{
  return v1 + *(int *)(*(void *)(a1 - 256) + 20);
}

uint64_t sub_253A3F2D8@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + *(int *)(*(void *)(a1 - 256) + 20));
}

uint64_t sub_253A3F2EC()
{
  return 0;
}

uint64_t sub_253A3F30C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_2539DF660(a1, v3);
}

uint64_t sub_253A3F324()
{
  return sub_253472458(v1, v0);
}

uint64_t sub_253A3F33C()
{
  return sub_253487D84(v1, v0);
}

uint64_t sub_253A3F354()
{
  return v0;
}

uint64_t sub_253A3F360()
{
  return sub_253B0A440();
}

uint64_t sub_253A3F380()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_253A3F398()
{
  return v0;
}

uint64_t _s30IntelligenceFlowPlannerSupport21RequestPrescribedPlanO10SearchToolV24isLowConfidenceKnowledgeSbvs_0(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t _s30IntelligenceFlowPlannerSupport21RequestPrescribedPlanO10SearchToolV24isLowConfidenceKnowledgeSbvg_0()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_253A3F3BC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 72);
  return sub_2539DF5B8(a1, v3);
}

uint64_t sub_253A3F3E0()
{
  return sub_253B0A390();
}

uint64_t sub_253A3F400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_2539DF660(a1, v3);
}

void sub_253A3F418()
{
  *(void *)(v1 - 152) = v0;
  *(unsigned char *)(v1 - 65) = 0;
}

uint64_t sub_253A3F42C(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v1, 1, a1);
}

uint64_t sub_253A3F44C()
{
  return sub_253B0A370();
}

uint64_t sub_253A3F46C()
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, v0);
}

uint64_t sub_253A3F4A0()
{
  return 0;
}

uint64_t sub_253A3F4B4(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(a1);
}

uint64_t sub_253A3F4D0()
{
  return sub_253B0A480();
}

uint64_t sub_253A3F4E8()
{
  return v0;
}

uint64_t sub_253A3F4F4()
{
  return sub_253B0A660();
}

uint64_t sub_253A3F514()
{
  return sub_253B055C0();
}

uint64_t sub_253A3F554()
{
  return sub_253B055C0();
}

uint64_t sub_253A3F5B4()
{
  return 0;
}

uint64_t sub_253A3F5D4@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 88) = v1;
  *(void *)(v2 - 160) = a1;
  return sub_253B059D0();
}

uint64_t sub_253A3F5F4()
{
  return _s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0();
}

uint64_t sub_253A3F60C()
{
  return sub_253B09860();
}

uint64_t sub_253A3F624()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_253A3F63C(uint64_t a1)
{
  *uint64_t v1 = a1;
  *(void *)(a1 + 16) = v2;
  return sub_253B059D0();
}

uint64_t sub_253A3F670@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v3 - 152) = a1;
  *(void *)(v3 - 144) = (v1 - 32) | 0x8000000000000000;
  return v2;
}

uint64_t sub_253A3F684()
{
  return v0;
}

uint64_t sub_253A3F698()
{
  uint64_t v3 = *(void *)(v1 - 136);
  return sub_2539DF660(v0, v3);
}

uint64_t sub_253A3F6D0()
{
  return 0;
}

uint64_t sub_253A3F6F0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_253A3F708()
{
  return v0;
}

uint64_t sub_253A3F750()
{
  return 15676;
}

uint64_t sub_253A3F75C()
{
  return 15678;
}

uint64_t sub_253A3F768()
{
  return 15649;
}

uint64_t sub_253A3F774()
{
  return swift_bridgeObjectRelease();
}

void *sub_253A3F78C()
{
  return malloc(0x30uLL);
}

uint64_t sub_253A3F7A4()
{
  return type metadata accessor for Request(0);
}

uint64_t sub_253A3F7BC()
{
  return type metadata accessor for RequestContent.SystemPromptResolution(0);
}

uint64_t sub_253A3F7D4()
{
  return type metadata accessor for StatementResult(0);
}

uint64_t sub_253A3F7EC()
{
  return type metadata accessor for UndoRedoRequest(0);
}

uint64_t sub_253A3F804()
{
  return _s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0();
}

uint64_t sub_253A3F81C()
{
  return sub_2539DF660(v0, v1);
}

uint64_t sub_253A3F834()
{
  return sub_2539DF660(v0, v1);
}

uint64_t sub_253A3F84C()
{
  return v0;
}

uint64_t sub_253A3F860()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_253A3F880()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_253A3F8A0(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_253A3F8B4()
{
  return type metadata accessor for SpeechRequestCandidate(0);
}

uint64_t sub_253A3F8D0(long long *a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDBEA0);
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  MEMORY[0x270FA5388](v2);
  v42 = (uint64_t *)((char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v45 = sub_253462A5C(&qword_269CE8488);
  MEMORY[0x270FA5388](v45);
  v44 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_253462A5C(&qword_269CDE4F0);
  uint64_t v5 = MEMORY[0x270FA5388](v46);
  uint64_t v7 = (uint64_t *)((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  unint64_t v10 = (char *)&v35 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v38 = (uint64_t)&v35 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v41 = (uint64_t)&v35 - v13;
  uint64_t v52 = MEMORY[0x263F8EE78];
  sub_2539E8AC4();
  long long v50 = *a1;
  uint64_t v14 = *((void *)a1 + 2);
  v43 = (uint64_t (*)(char *))*((void *)a1 + 3);
  uint64_t v51 = v14;
  long long v15 = v50;
  uint64_t v16 = *((void *)a1 + 4);
  char v49 = 0;
  sub_253A4490C((uint64_t)&v50);
  uint64_t v47 = v16;
  uint64_t result = swift_retain();
  unint64_t v18 = 0;
  uint64_t v48 = v15;
  do
  {
    uint64_t v19 = v48;
    if (v48 == *((void *)&v15 + 1)) {
      break;
    }
    while (1)
    {
      if (*((uint64_t *)&v15 + 1) < (uint64_t)v15)
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
        return result;
      }
      if (v48 < (uint64_t)v15) {
        goto LABEL_18;
      }
      if (v19 >= *((uint64_t *)&v15 + 1)) {
        goto LABEL_19;
      }
      unint64_t v20 = *(void *)(v14 + 16);
      if (v18 == v20) {
        goto LABEL_16;
      }
      if (v18 >= v20) {
        goto LABEL_20;
      }
      uint64_t v21 = *(void *)(type metadata accessor for Session.Event(0) - 8);
      uint64_t v22 = v14;
      uint64_t v23 = v14
          + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))
          + *(void *)(v21 + 72) * v18;
      uint64_t v24 = (uint64_t)&v44[*(int *)(v45 + 48)];
      sub_253A44814(v23, v24, (void (*)(void))type metadata accessor for Session.Event);
      uint64_t v25 = (uint64_t)v7 + *(int *)(v46 + 48);
      *uint64_t v7 = v19;
      sub_253A44868(v24, v25, (void (*)(void))type metadata accessor for Session.Event);
      sub_25351C1B0((uint64_t)v7, (uint64_t)v10, &qword_269CDE4F0);
      if (v43(v10)) {
        break;
      }
      ++v19;
      uint64_t result = sub_253472458((uint64_t)v10, &qword_269CDE4F0);
      ++v18;
      uint64_t v14 = v22;
      if (*((void *)&v15 + 1) == v19) {
        goto LABEL_16;
      }
    }
    uint64_t v26 = v38;
    sub_25351C1B0((uint64_t)v10, v38, &qword_269CDE4F0);
    uint64_t v27 = v26;
    uint64_t v28 = v41;
    sub_25351C1B0(v27, v41, &qword_269CDE4F0);
    v29 = (uint64_t *)v28;
    uint64_t v30 = v28 + *(int *)(v46 + 48);
    v36 = (char *)v42 + *(int *)(v40 + 48);
    uint64_t v37 = (uint64_t)v42 + *(int *)(v40 + 64);
    uint64_t v48 = *v29;
    uint64_t v31 = sub_253B055C0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v36, v30, v31);
    sub_253A44814(v30, v37, (void (*)(void))type metadata accessor for Session.Event);
    uint64_t *v42 = v48;
    sub_253472458(v41, &qword_269CDE4F0);
    uint64_t v32 = v52;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2539E8AC4();
      uint64_t v32 = v52;
    }
    unint64_t v33 = *(void *)(v32 + 16);
    uint64_t v34 = v33 + 1;
    if (v33 >= *(void *)(v32 + 24) >> 1)
    {
      uint64_t v48 = v33 + 1;
      sub_2539E8AC4();
      uint64_t v34 = v48;
      uint64_t v32 = v52;
    }
    uint64_t v48 = v19 + 1;
    ++v18;
    *(void *)(v32 + 16) = v34;
    uint64_t result = sub_25351C1B0((uint64_t)v42, v32+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v33, &qword_269CDBEA0);
    uint64_t v14 = v22;
  }
  while ((v49 & 1) == 0);
LABEL_16:
  swift_release();
  swift_bridgeObjectRelease();
  return v52;
}

uint64_t StatementID.asExprId.getter()
{
  return 101;
}

void StatementID.init(fromExprId:)()
{
  sub_2534B3258();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  v36[2] = v5;
  uint64_t v6 = sub_253462A5C(&qword_269CE8438);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_25348366C();
  uint64_t v8 = sub_253462A5C(&qword_269CE8440);
  sub_253465998();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_253462A5C(&qword_269CE8448);
  sub_253465998();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253462A5C(&qword_269CE8450);
  sub_253B07050();
  v36[4] = v4;
  v36[5] = v2;
  sub_25350D820();
  sub_253A40114();
  sub_253B09660();
  swift_bridgeObjectRelease();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v0, 1, v8) == 1)
  {
    sub_253472458(v0, &qword_269CE8438);
LABEL_11:
    sub_253B059B0();
    goto LABEL_12;
  }
  v36[1] = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, v0, v8);
  sub_253B07070();
  swift_bridgeObjectRelease();
  if (!((v36[9] ^ v36[8]) >> 14))
  {
    swift_bridgeObjectRelease();
LABEL_10:
    uint64_t v34 = sub_2539627B8();
    v35(v34);
    goto LABEL_11;
  }
  unint64_t v20 = sub_253A44EA4();
  uint64_t v25 = sub_253A44680(v20, v21, v22, v23, v24);
  if ((v25 & 0x10000000000) != 0)
  {
    uint64_t v26 = sub_253A44EA4();
    uint64_t v25 = sub_253A43F44(v26, v27, v28, v29, v30);
  }
  uint64_t v31 = v25;
  swift_bridgeObjectRelease();
  if ((v31 & 0x100000000) != 0) {
    goto LABEL_10;
  }
  if (v31 != -1)
  {
    sub_253B059B0();
    uint64_t v32 = sub_2539627B8();
    v33(v32);
LABEL_12:
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v14);
    sub_253465A14();
    return;
  }
  __break(1u);
}

unint64_t sub_253A40114()
{
  unint64_t result = qword_269CE8458;
  if (!qword_269CE8458)
  {
    sub_25347907C(&qword_269CE8448);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8458);
  }
  return result;
}

uint64_t Session.Transcript.latestQueryEvent()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = sub_253462A5C(&qword_269CE8460);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = *(void *)(v1 + *(int *)(sub_253A44E10() + 32));
  uint64_t v7 = *(void *)(v6 + 16);
  *(void *)&long long v15 = 0;
  *((void *)&v15 + 1) = v7;
  uint64_t v16 = v6;
  uint64_t v17 = sub_253A429E4;
  uint64_t v18 = 0;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_253A3F8D0(&v15);
  sub_2534B3D64(v8, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_253462A5C(&qword_269CDBEA0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v2, 1, v9) == 1)
  {
    sub_253472458(v2, &qword_269CE8460);
    uint64_t v10 = type metadata accessor for Session.Event(0);
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 1, 1, v10);
  }
  else
  {
    uint64_t v12 = v2 + *(int *)(v9 + 48);
    sub_253A44868(v2 + *(int *)(v9 + 64), a1, (void (*)(void))type metadata accessor for Session.Event);
    uint64_t v13 = type metadata accessor for Session.Event(0);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v13);
    sub_253B055C0();
    sub_25346CAF4();
    return (*(uint64_t (**)(uint64_t))(v14 + 8))(v12);
  }
}

Swift::String_optional __swiftcall Session.Transcript.latestQuery()()
{
  uint64_t v2 = sub_253462A5C(&qword_269CE8460);
  uint64_t v3 = sub_25346CB4C(v2);
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = *(void *)(v0 + *(int *)(sub_253A44E10() + 32));
  uint64_t v5 = *(void *)(v4 + 16);
  *(void *)&long long v14 = 0;
  *((void *)&v14 + 1) = v5;
  uint64_t v15 = v4;
  uint64_t v16 = sub_253A429E4;
  uint64_t v17 = 0;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_253A3F8D0(&v14);
  sub_2534B3D64(v6, v1);
  swift_bridgeObjectRelease();
  sub_253A43210(v1);
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  sub_253472458(v1, &qword_269CE8460);
  swift_bridgeObjectRelease();
  if (v10) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = 0;
  }
  uint64_t v12 = v10;
  result.value._object = v12;
  result.value._countAndFlagsBits = v11;
  return result;
}

uint64_t Session.Transcript.event(forId:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_253462A5C(&qword_269CE8468);
  uint64_t v4 = sub_25346CB4C(v3);
  MEMORY[0x270FA5388](v4);
  sub_253A44E10();
  sub_253A44E88();
  sub_253A4051C();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_253462A5C(&qword_269CE8470);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v1, 1, v5) == 1)
  {
    sub_253472458(v1, &qword_269CE8468);
    uint64_t v6 = 1;
  }
  else
  {
    sub_253A44868(v1 + *(int *)(v5 + 48), a1, (void (*)(void))type metadata accessor for Session.Event);
    uint64_t v6 = 0;
  }
  uint64_t v7 = type metadata accessor for Session.Event(0);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, v6, 1, v7);
}

void sub_253A40504()
{
}

void sub_253A4051C()
{
  sub_2534B3258();
  uint64_t v28 = v1;
  uint64_t v2 = type metadata accessor for Session.Event(0);
  uint64_t v3 = sub_25346CB4C(v2);
  MEMORY[0x270FA5388](v3);
  sub_25348366C();
  uint64_t v4 = sub_253462A5C(&qword_269CE8480);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_2534727F8();
  uint64_t v8 = v6 - v7;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t *)((char *)&v27 - v10);
  swift_bridgeObjectRetain();
  sub_253A43374();
  uint64_t v13 = v12;
  unint64_t v14 = 0;
  unint64_t v15 = *(void *)(v12 + 16);
  while (1)
  {
    if (v14 == v15)
    {
      uint64_t v16 = sub_253462A5C(&qword_269CDE4F0);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v8, 1, 1, v16);
      unint64_t v14 = v15;
      goto LABEL_6;
    }
    if (v14 >= *(void *)(v13 + 16)) {
      break;
    }
    uint64_t v17 = sub_253462A5C(&qword_269CDE4F0);
    sub_2534B45B0(v13+ ((*(unsigned __int8 *)(*(void *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v17 - 8) + 80))+ *(void *)(*(void *)(v17 - 8) + 72) * v14++, v8, &qword_269CDE4F0);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v8, 0, 1, v17);
LABEL_6:
    sub_25351C1B0(v8, (uint64_t)v11, &qword_269CE8480);
    uint64_t v18 = sub_253462A5C(&qword_269CDE4F0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v18) == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v21 = sub_253462A5C(&qword_269CE8470);
      uint64_t v22 = (uint64_t)v28;
      uint64_t v23 = 1;
LABEL_11:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v22, v23, 1, v21);
      sub_253465A14();
      return;
    }
    uint64_t v19 = (uint64_t)v11 + *(int *)(v18 + 48);
    uint64_t v20 = *v11;
    sub_253A44868(v19, v0, (void (*)(void))type metadata accessor for Session.Event);
    if (sub_253B055A0())
    {
      swift_bridgeObjectRelease();
      uint64_t v24 = sub_253462A5C(&qword_269CE8470);
      uint64_t v25 = v28;
      uint64_t v26 = (uint64_t)v28 + *(int *)(v24 + 48);
      *uint64_t v28 = v20;
      sub_253A44868(v0, v26, (void (*)(void))type metadata accessor for Session.Event);
      uint64_t v22 = (uint64_t)v25;
      uint64_t v23 = 0;
      uint64_t v21 = v24;
      goto LABEL_11;
    }
    sub_253A448BC();
  }
  __break(1u);
}

Swift::OpaquePointer_optional __swiftcall Session.Transcript.latestSpeechQuery()()
{
  uint64_t v0 = (void *)sub_253A40BC4();
  result.value._rawValue = v0;
  result.is_nil = v1;
  return result;
}

uint64_t sub_253A4080C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Session.Event.Payload(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (uint64_t *)((char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_253462A5C(&qword_269CDBEA0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (uint64_t *)((char *)&v30 - v9);
  uint64_t v11 = sub_253462A5C(&qword_269CE8460);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  unint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v30 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  *(void *)&long long v31 = 0;
  *((void *)&v31 + 1) = v17;
  uint64_t v32 = a1;
  unint64_t v33 = sub_253A429E4;
  uint64_t v34 = 0;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_253A3F8D0(&v31);
  swift_bridgeObjectRelease();
  sub_2534B3D64(v18, (uint64_t)v16);
  swift_bridgeObjectRelease();
  sub_2534B45B0((uint64_t)v16, (uint64_t)v14, &qword_269CE8460);
  uint64_t v19 = 0;
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v5) != 1)
  {
    sub_25351C1B0((uint64_t)v14, (uint64_t)v10, &qword_269CDBEA0);
    uint64_t v20 = *(int *)(v5 + 48);
    uint64_t v21 = (char *)v8 + v20;
    uint64_t v22 = *(int *)(v5 + 64);
    uint64_t v23 = (uint64_t)v8 + v22;
    uint64_t v24 = (char *)v10 + v20;
    uint64_t v25 = (uint64_t)v10 + v22;
    *uint64_t v8 = *v10;
    uint64_t v26 = sub_253B055C0();
    uint64_t v27 = *(void *)(v26 - 8);
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v21, v24, v26);
    sub_253A44814(v25, v23, (void (*)(void))type metadata accessor for Session.Event);
    uint64_t v28 = type metadata accessor for Session.Event(0);
    sub_253A44814(v23 + *(int *)(v28 + 28), (uint64_t)v4, (void (*)(void))type metadata accessor for Session.Event.Payload);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v19 = *v4;
      sub_253A448BC();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v21, v26);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_253A448BC();
      sub_253A448BC();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v21, v26);
      uint64_t v19 = 0;
    }
    sub_253472458((uint64_t)v10, &qword_269CDBEA0);
  }
  sub_253472458((uint64_t)v16, &qword_269CE8460);
  return v19;
}

Swift::Int __swiftcall Session.Transcript.countClientSentEvents()()
{
  return sub_253A40BC4();
}

uint64_t sub_253A40BC4()
{
  uint64_t v1 = sub_2534D9690();
  type metadata accessor for Session.Transcript(v1);
  uint64_t v2 = sub_253A44E88();
  uint64_t v3 = v0(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_253A40C04(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Session.Event(0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v29 - v7;
  unint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    return 0;
  }
  unint64_t v32 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = a1 + v32;
  uint64_t v11 = *(void *)(v6 + 72);
  uint64_t v29 = a1;
  swift_bridgeObjectRetain();
  unint64_t v12 = 0;
  while (1)
  {
    sub_253A44814(v10, (uint64_t)v8, (void (*)(void))type metadata accessor for Session.Event);
    uint64_t v13 = &v8[*(int *)(v2 + 52)];
    uint64_t v14 = *((void *)v13 + 1);
    if (v14) {
      break;
    }
    sub_253A448BC();
LABEL_11:
    ++v12;
    v10 += v11;
    if (v9 == v12) {
      goto LABEL_18;
    }
  }
  if (*(void *)v13 != 0x746E65696C63 || v14 != 0xE600000000000000)
  {
    char v16 = sub_253B0A4C0();
    uint64_t result = sub_253A448BC();
    if (v16) {
      goto LABEL_15;
    }
    goto LABEL_11;
  }
  uint64_t result = sub_253A448BC();
LABEL_15:
  if (v9 >= v12)
  {
    if (v9 == v12)
    {
LABEL_18:
      uint64_t v18 = 0;
LABEL_41:
      swift_bridgeObjectRelease();
      return v18;
    }
    uint64_t v19 = 1;
    unint64_t v20 = v9;
  }
  else
  {
    uint64_t v19 = -1;
    unint64_t v20 = v12;
    unint64_t v12 = v9;
  }
  uint64_t v18 = 0;
  uint64_t v31 = v19;
  v32 += v29;
  unint64_t v30 = v20;
  while (1)
  {
    BOOL v21 = __OFADD__(v18, v19);
    v18 += v19;
    if (v21) {
      break;
    }
    if (v12 == v9) {
      goto LABEL_46;
    }
    unint64_t v22 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_47;
    }
    unint64_t v12 = v9;
    if (v22 != v9)
    {
      uint64_t v23 = v32 + v11 * v22;
      unint64_t v12 = v22;
      while (v12 < v9)
      {
        sub_253A44814(v23, (uint64_t)v5, (void (*)(void))type metadata accessor for Session.Event);
        uint64_t v24 = &v5[*(int *)(v2 + 52)];
        uint64_t v25 = *((void *)v24 + 1);
        if (v25)
        {
          if (*(void *)v24 == 0x746E65696C63 && v25 == 0xE600000000000000)
          {
            uint64_t result = sub_253A448BC();
            goto LABEL_39;
          }
          char v27 = sub_253B0A4C0();
          uint64_t result = sub_253A448BC();
          if (v27) {
            goto LABEL_39;
          }
        }
        else
        {
          uint64_t result = sub_253A448BC();
        }
        unint64_t v28 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_44;
        }
        ++v12;
        v23 += v11;
        if (v28 == v9)
        {
          unint64_t v12 = v9;
LABEL_39:
          unint64_t v20 = v30;
          uint64_t v19 = v31;
          goto LABEL_40;
        }
      }
      __break(1u);
LABEL_44:
      __break(1u);
      break;
    }
LABEL_40:
    if (v12 == v20) {
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

Swift::String_optional __swiftcall Session.Transcript.latestClientIdentifier()()
{
  sub_2534B3258();
  type metadata accessor for Session.Event.Payload(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v2);
  sub_2534B340C();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v26 - v4;
  uint64_t v6 = type metadata accessor for Session.Event(0);
  sub_253465998();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  sub_2534727F8();
  uint64_t v12 = v10 - v11;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v16 = *(void *)(v0 + *(int *)(type metadata accessor for Session.Transcript(0) + 32));
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    char v27 = v5;
    unint64_t v18 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v19 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain_n();
    uint64_t v20 = v16 + v18 + v19 * (v17 - 1);
    uint64_t v21 = -v19;
    uint64_t v22 = v17;
    while (1)
    {
      sub_253A44814(v20, v12, (void (*)(void))type metadata accessor for Session.Event);
      sub_253A44814(v12 + *(int *)(v6 + 28), v1, (void (*)(void))type metadata accessor for Session.Event.Payload);
      if (swift_getEnumCaseMultiPayload() == 11) {
        break;
      }
      --v22;
      swift_bridgeObjectRetain();
      sub_253A448BC();
      sub_253A448BC();
      swift_bridgeObjectRelease();
      v20 += v21;
      if (!v22) {
        goto LABEL_10;
      }
    }
    sub_253A448BC();
    swift_bridgeObjectRelease();
    if (v22 > v17)
    {
      __break(1u);
    }
    else
    {
      sub_253A44814(v20, (uint64_t)v15, (void (*)(void))type metadata accessor for Session.Event);
      sub_253A44814((uint64_t)&v15[*(int *)(v6 + 28)], (uint64_t)v27, (void (*)(void))type metadata accessor for Session.Event.Payload);
      if (swift_getEnumCaseMultiPayload() == 11)
      {
        sub_253A448BC();
        goto LABEL_10;
      }
    }
    sub_253A448BC();
    uint64_t v23 = sub_253A448BC();
    __break(1u);
    goto LABEL_13;
  }
  swift_bridgeObjectRetain_n();
LABEL_10:
  swift_bridgeObjectRelease_n();
  sub_253465A14();
LABEL_13:
  result.value._object = v24;
  result.value._countAndFlagsBits = v23;
  return result;
}

void __swiftcall Session.Transcript.latestPlan()(IntelligenceFlowPlannerSupport::Session::Plan_optional *__return_ptr retstr)
{
  type metadata accessor for Session.Transcript(0);
  sub_253A44E88();
  sub_253A412D0((uint64_t)retstr);
  swift_bridgeObjectRelease();
}

double sub_253A412D0@<D0>(uint64_t a1@<X8>)
{
  sub_253A4354C((uint64_t)v7);
  uint64_t v2 = v9;
  if (v9)
  {
    uint64_t v3 = v10;
    char v4 = v13;
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v2;
    *(void *)(a1 + 16) = v3;
    double result = *(double *)&v11;
    long long v6 = v12;
    *(_OWORD *)(a1 + 24) = v11;
    *(_OWORD *)(a1 + 40) = v6;
    *(unsigned char *)(a1 + 56) = v4;
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 41) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

void Session.Transcript.clientActionStepExists(id:)()
{
  sub_2534B3258();
  uint64_t v3 = sub_2534D9690();
  type metadata accessor for Session.Event.Payload(v3);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v4);
  sub_25348366C();
  uint64_t v5 = type metadata accessor for Session.Event(0);
  sub_253465998();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_25348360C();
  uint64_t v10 = *(void *)(v0 + *(int *)(type metadata accessor for Session.Transcript(v9) + 32));
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v13 = *(void *)(v7 + 72);
    swift_bridgeObjectRetain();
    uint64_t v14 = v10 + v12 + v13 * (v11 - 1);
    uint64_t v15 = -v13;
    do
    {
      sub_253A44814(v14, v2, (void (*)(void))type metadata accessor for Session.Event);
      if (sub_253B055A0())
      {
        sub_253A44814(v2 + *(int *)(v5 + 28), v1, (void (*)(void))type metadata accessor for Session.Event.Payload);
        sub_253A448BC();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        sub_253A448BC();
        if (EnumCaseMultiPayload == 7) {
          break;
        }
      }
      else
      {
        sub_253A448BC();
      }
      v14 += v15;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  sub_253465A14();
}

void TypedValue.programTraceValue.getter()
{
  sub_2534B3258();
  sub_253B089F0();
  sub_253465998();
  uint64_t v129 = v1;
  uint64_t v130 = v0;
  MEMORY[0x270FA5388](v0);
  sub_25346CB04();
  uint64_t v128 = v2;
  sub_253483660();
  sub_253B08F70();
  sub_253465998();
  uint64_t v138 = v4;
  uint64_t v139 = v3;
  MEMORY[0x270FA5388](v3);
  sub_25346CB04();
  uint64_t v137 = v5;
  sub_253483660();
  uint64_t v124 = sub_253B051C0();
  sub_253465998();
  uint64_t v123 = v6;
  MEMORY[0x270FA5388](v7);
  sub_25346CB04();
  uint64_t v122 = v8;
  sub_253483660();
  uint64_t v136 = sub_253B054F0();
  sub_253465998();
  uint64_t v134 = v9;
  MEMORY[0x270FA5388](v10);
  sub_25346CB04();
  uint64_t v132 = v11;
  sub_253483660();
  uint64_t v135 = sub_253B05550();
  sub_253465998();
  uint64_t v133 = v12;
  MEMORY[0x270FA5388](v13);
  sub_25346CB04();
  uint64_t v131 = v14;
  sub_253483660();
  sub_253B05390();
  sub_253465998();
  uint64_t v126 = v16;
  uint64_t v127 = v15;
  MEMORY[0x270FA5388](v15);
  sub_25346CB04();
  uint64_t v125 = v17;
  sub_253483660();
  uint64_t v18 = sub_253B090B0();
  sub_253465998();
  uint64_t v20 = v19;
  MEMORY[0x270FA5388](v21);
  sub_2534659D8();
  v141 = v22;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v122 - v24;
  uint64_t v26 = sub_253B09120();
  sub_253465998();
  uint64_t v28 = v27;
  MEMORY[0x270FA5388](v29);
  sub_2534659D8();
  uint64_t v142 = v30;
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  uint64_t v34 = (uint64_t *)((char *)&v122 - v33);
  uint64_t v35 = MEMORY[0x270FA5388](v32);
  uint64_t v37 = (char *)&v122 - v36;
  MEMORY[0x270FA5388](v35);
  uint64_t v38 = *(void (**)(void))(v28 + 16);
  uint64_t v40 = (char *)&v122 - v39;
  sub_253962874();
  v38();
  int v41 = (*(uint64_t (**)(char *, uint64_t))(v28 + 88))(v40, v26);
  int v42 = *MEMORY[0x263F804E8];
  uint64_t v143 = v26;
  if (v41 == v42)
  {
    v140 = v40;
    sub_253962874();
    v38();
    (*(void (**)(char *, uint64_t))(v28 + 96))(v37, v26);
    swift_projectBox();
    uint64_t v43 = (*(uint64_t (**)(void))(v20 + 88))();
    if (v43 == *MEMORY[0x263F80458])
    {
      sub_2534AF234();
      v44();
      (*(void (**)(char *, uint64_t))(v20 + 96))(v25, v18);
      swift_release();
LABEL_25:
      uint64_t v45 = v143;
LABEL_26:
      char v49 = v140;
      goto LABEL_27;
    }
    uint64_t v50 = v43;
    if (v43 == *MEMORY[0x263F80478])
    {
      uint64_t v51 = sub_253A44DB8();
      v52(v51);
      uint64_t v53 = sub_253A44DF8();
      v54(v53);
      sub_253B09C30();
LABEL_24:
      swift_release();
      goto LABEL_25;
    }
    if (v43 == *MEMORY[0x263F80488])
    {
      uint64_t v56 = sub_253A44DB8();
      v57(v56);
      uint64_t v58 = sub_253A44DF8();
      v59(v58);
      String.quoted.getter();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    if (v43 == *MEMORY[0x263F80460])
    {
      uint64_t v80 = sub_253A44DB8();
      v81(v80);
      uint64_t v82 = sub_253A44DF8();
      v83(v82);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v133 + 32))(v131, v50, v135);
      sub_253A42164(v132);
      sub_253B05490();
      sub_2534659CC();
      v84();
      String.quoted.getter();
      swift_bridgeObjectRelease();
      uint64_t v85 = sub_2539627B8();
      v86(v85);
      goto LABEL_24;
    }
    if (v43 == *MEMORY[0x263F80428]) {
      goto LABEL_24;
    }
    if (v43 == *MEMORY[0x263F80450])
    {
      uint64_t v90 = sub_253A44DB8();
      v91(v90);
      uint64_t v92 = sub_253A44DF8();
      v93(v92);
      uint64_t v95 = v126;
      uint64_t v94 = v127;
      uint64_t v96 = v125;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v126 + 32))(v125, v50, v127);
      sub_253B05300();
      String.quoted.getter();
      sub_253A44E6C();
      (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v96, v94);
      goto LABEL_24;
    }
    if (v43 == *MEMORY[0x263F80438])
    {
      uint64_t v109 = sub_253A44DB8();
      v110(v109);
      uint64_t v111 = sub_253A44DF8();
      v112(v111);
      uint64_t v113 = v123;
      uint64_t v114 = v122;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v123 + 32))(v122, v50, v124);
      sub_253A4475C();
      sub_253B052E0();
      String.quoted.getter();
      sub_253A44E6C();
      (*(void (**)(uint64_t))(v113 + 8))(v114);
      goto LABEL_24;
    }
    int v115 = *MEMORY[0x263F80470];
    swift_release();
    BOOL v116 = v50 == v115;
    uint64_t v45 = v143;
    uint64_t v40 = v140;
    if (v116)
    {
      char v49 = v140;
      goto LABEL_27;
    }
LABEL_64:
    v117 = v40;
    sub_253B08370();
    v118 = sub_253B089D0();
    os_log_type_t v119 = sub_253B09D80();
    if (os_log_type_enabled(v118, v119))
    {
      v120 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v120 = 0;
      _os_log_impl(&dword_253460000, v118, v119, "Unknown default - returning null", v120, 2u);
      MEMORY[0x25A269E60](v120, -1, -1);
    }

    sub_2534659CC();
    v121();
    char v49 = v117;
    goto LABEL_27;
  }
  v141 = v38;
  if (v41 == *MEMORY[0x263F804A8])
  {
    uint64_t v45 = v143;
    sub_253962874();
    v46();
    uint64_t v47 = sub_253A44DDC();
    v48(v47);
    swift_release();
    char v49 = v40;
LABEL_27:
    (*(void (**)(char *, uint64_t))(v28 + 8))(v49, v45);
    sub_253465A14();
    return;
  }
  uint64_t v45 = v143;
  v55 = v141;
  if (v41 == *MEMORY[0x263F804C8])
  {
LABEL_33:
    uint64_t v87 = sub_253A44E38();
    ((void (*)(uint64_t))v55)(v87);
    uint64_t v88 = sub_253A44DDC();
    v89(v88);
    swift_release();
    char v49 = v40;
    goto LABEL_27;
  }
  if (v41 != *MEMORY[0x263F804A0])
  {
    if (v41 != *MEMORY[0x263F804C0] && v41 != *MEMORY[0x263F804F0]) {
      goto LABEL_64;
    }
    goto LABEL_33;
  }
  v140 = v40;
  sub_253962874();
  v55();
  uint64_t v60 = sub_253A44DDC();
  v61(v60);
  uint64_t v62 = *v34;
  swift_projectBox();
  uint64_t v63 = v137;
  uint64_t v64 = v138;
  uint64_t v65 = v139;
  sub_2534AF234();
  v66();
  uint64_t v67 = *(void *)(sub_253B08F60() + 16);
  swift_bridgeObjectRelease();
  if (!v67)
  {
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v65);
    swift_release();
    goto LABEL_26;
  }
  uint64_t v135 = v62;
  uint64_t v145 = 0x5B7473694C22;
  unint64_t v146 = 0xE600000000000000;
  uint64_t v68 = sub_253B08F60();
  uint64_t v69 = *(void *)(v68 + 16);
  if (v69)
  {
    uint64_t v144 = MEMORY[0x263F8EE78];
    sub_2539E6C84();
    uint64_t v70 = *(unsigned __int8 *)(v28 + 80);
    uint64_t v134 = v68;
    uint64_t v71 = v68 + ((v70 + 32) & ~v70);
    uint64_t v136 = *(void *)(v28 + 72);
    do
    {
      uint64_t v72 = v142;
      sub_253962874();
      uint64_t v73 = ((uint64_t (*)(void))v55)();
      uint64_t v74 = TypedValue.programTraceValue.getter(v73);
      uint64_t v76 = v75;
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v72, v45);
      uint64_t v77 = v144;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2539E6C84();
        uint64_t v77 = v144;
      }
      unint64_t v78 = *(void *)(v77 + 16);
      if (v78 >= *(void *)(v77 + 24) >> 1)
      {
        sub_2539E6C84();
        uint64_t v77 = v144;
      }
      *(void *)(v77 + 16) = v78 + 1;
      uint64_t v79 = v77 + 16 * v78;
      *(void *)(v79 + 32) = v74;
      *(void *)(v79 + 40) = v76;
      v71 += v136;
      --v69;
      uint64_t v45 = v143;
      v55 = v141;
    }
    while (v69);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v77 = MEMORY[0x263F8EE78];
  }
  uint64_t v97 = sub_25353CEDC(v77);
  int64_t v98 = 0;
  uint64_t v99 = v97 + 56;
  uint64_t v100 = 1 << *(unsigned char *)(v97 + 32);
  uint64_t v101 = -1;
  if (v100 < 64) {
    uint64_t v101 = ~(-1 << v100);
  }
  uint64_t v102 = v101 & *(void *)(v97 + 56);
  int64_t v103 = (unint64_t)(v100 + 63) >> 6;
  if (!v102) {
    goto LABEL_42;
  }
LABEL_41:
  for (v102 &= v102 - 1; ; uint64_t v102 = (v105 - 1) & v105)
  {
    swift_bridgeObjectRetain();
    sub_253B09860();
    swift_bridgeObjectRelease();
    sub_253B09860();
    if (v102) {
      goto LABEL_41;
    }
LABEL_42:
    int64_t v104 = v98 + 1;
    if (__OFADD__(v98, 1))
    {
      __break(1u);
      goto LABEL_68;
    }
    if (v104 >= v103) {
      goto LABEL_58;
    }
    uint64_t v105 = *(void *)(v99 + 8 * v104);
    ++v98;
    if (!v105)
    {
      int64_t v98 = v104 + 1;
      if (v104 + 1 >= v103) {
        goto LABEL_58;
      }
      uint64_t v105 = *(void *)(v99 + 8 * v98);
      if (!v105)
      {
        int64_t v98 = v104 + 2;
        if (v104 + 2 >= v103) {
          goto LABEL_58;
        }
        uint64_t v105 = *(void *)(v99 + 8 * v98);
        if (!v105) {
          break;
        }
      }
    }
LABEL_55:
    ;
  }
  int64_t v106 = v104 + 3;
  if (v106 >= v103)
  {
LABEL_58:
    uint64_t v107 = swift_release();
    sub_253A42584(v107);
    swift_bridgeObjectRelease();
    sub_253B09860();
    sub_2534659CC();
    v108();
    swift_release();
    goto LABEL_26;
  }
  uint64_t v105 = *(void *)(v99 + 8 * v106);
  if (v105)
  {
    int64_t v98 = v106;
    goto LABEL_55;
  }
  while (1)
  {
    int64_t v98 = v106 + 1;
    if (__OFADD__(v106, 1)) {
      break;
    }
    if (v98 >= v103) {
      goto LABEL_58;
    }
    uint64_t v105 = *(void *)(v99 + 8 * v98);
    ++v106;
    if (v105) {
      goto LABEL_55;
    }
  }
LABEL_68:
  __break(1u);
}

uint64_t sub_253A42164@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v1 = sub_253462A5C(&qword_269CE8490);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_253B05650();
  uint64_t v23 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v24 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_253B054E0();
  uint64_t v5 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253B054C0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_253B054A0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_253B054B0();
  MEMORY[0x270FA5388](v16);
  (*(void (**)(char *, void))(v18 + 104))((char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F072A0]);
  uint64_t v19 = v12;
  uint64_t v20 = v27;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F07288], v19);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F072B8], v8);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F072C8], v26);
  sub_253B05640();
  uint64_t result = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v3, 1, v20);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v24, v3, v20);
    return sub_253B054D0();
  }
  return result;
}

void sub_253A42548()
{
  if (*(void *)(*(void *)v0 + 16))
  {
    sub_253A442B8();
    if (!v1) {
      sub_253A438C8(*(void *)(*(void *)v0 + 16) - 1);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_253A42584(uint64_t a1)
{
  uint64_t v2 = v1[1];
  if ((v2 & 0x2000000000000000) == 0)
  {
    if ((*v1 & 0xFFFFFFFFFFFFLL) != 0) {
      goto LABEL_5;
    }
    __break(1u);
  }
  if ((v2 & 0xF00000000000000) == 0)
  {
    __break(1u);
    return MEMORY[0x270F9D7B8](a1);
  }
LABEL_5:
  a1 = sub_253B09820();
  return MEMORY[0x270F9D7B8](a1);
}

void TypedValue.length.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_2534B3258();
  a19 = v22;
  a20 = v23;
  uint64_t v24 = sub_253B089F0();
  sub_253465998();
  uint64_t v26 = v25;
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&a9 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_253B08F70();
  sub_253465998();
  uint64_t v32 = v31;
  MEMORY[0x270FA5388](v33);
  sub_25348360C();
  uint64_t v34 = sub_253B09120();
  sub_253465998();
  uint64_t v36 = v35;
  MEMORY[0x270FA5388](v37);
  sub_25348366C();
  sub_2534AF234();
  v38();
  int v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 88))(v20, v34);
  if (v39 == *MEMORY[0x263F804E8])
  {
    uint64_t v40 = sub_253A44E54();
    v41(v40);
    uint64_t v42 = sub_253B090B0();
    uint64_t v43 = swift_projectBox();
    (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 88))(v43, v42);
LABEL_3:
    swift_release();
    goto LABEL_11;
  }
  if (v39 == *MEMORY[0x263F804A8] || v39 == *MEMORY[0x263F804C8]) {
    goto LABEL_10;
  }
  if (v39 == *MEMORY[0x263F804A0])
  {
    uint64_t v44 = sub_253A44E54();
    v45(v44);
    swift_projectBox();
    sub_2534AF234();
    v46();
    sub_253B08F60();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v21, v30);
    goto LABEL_3;
  }
  if (v39 == *MEMORY[0x263F804C0] || v39 == *MEMORY[0x263F804F0])
  {
LABEL_10:
    uint64_t v47 = sub_253A44E54();
    v48(v47);
    swift_release();
    goto LABEL_11;
  }
  sub_253B08370();
  char v49 = sub_253B089D0();
  os_log_type_t v50 = sub_253B09D80();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v51 = 0;
    _os_log_impl(&dword_253460000, v49, v50, "Unknown default - returning null", v51, 2u);
    MEMORY[0x25A269E60](v51, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v24);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v20, v34);
LABEL_11:
  sub_253465A14();
}

uint64_t Array<A>.programTraceValue.getter(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return 1819047246;
  }
  sub_2534D9690();
  sub_253B09120();
  TypedValue.programTraceValue.getter();
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_253B09860();
  return 0x5B7473694CLL;
}

uint64_t sub_253A429E4(void *a1)
{
  uint64_t v2 = type metadata accessor for Session.Event.Payload(0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v19 - v6;
  uint64_t v8 = sub_253462A5C(&qword_269CDE4F0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(int *)(v9 + 56);
  uint64_t v13 = (char *)v11 + v12;
  void *v11 = *a1;
  sub_253A44814((uint64_t)a1 + v12, (uint64_t)v11 + v12, (void (*)(void))type metadata accessor for Session.Event);
  uint64_t v14 = type metadata accessor for Session.Event(0);
  sub_253A44814((uint64_t)&v13[*(int *)(v14 + 28)], (uint64_t)v7, (void (*)(void))type metadata accessor for Session.Event.Payload);
  sub_253A448BC();
  sub_253A44814((uint64_t)v7, (uint64_t)v5, (void (*)(void))type metadata accessor for Session.Event.Payload);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 1) < 3)
  {
    uint64_t v16 = 1;
LABEL_4:
    sub_253A448BC();
    uint64_t v17 = v16;
    goto LABEL_5;
  }
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  if (EnumCaseMultiPayload != 48) {
    goto LABEL_4;
  }
LABEL_5:
  sub_253A448BC();
  return v17;
}

uint64_t sub_253A42BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v37 = a1;
  uint64_t v4 = type metadata accessor for RequestContent.TextContent(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v35 = (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RequestContent(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (uint64_t *)((char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for Request(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v36 = (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_253462A5C(&qword_26B249348);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v34 - v15;
  uint64_t v17 = type metadata accessor for Session.Event.Payload(0);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (uint64_t *)((char *)&v34 - v22);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v34 - v24;
  uint64_t v26 = type metadata accessor for TextQuery(0);
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v28 = (char *)&v34 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a3 + *(int *)(type metadata accessor for Session.Event(0) + 28);
  sub_253A44814(v29, (uint64_t)v25, (void (*)(void))type metadata accessor for Session.Event.Payload);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_253A44868((uint64_t)v25, (uint64_t)v28, (void (*)(void))type metadata accessor for TextQuery);
    swift_bridgeObjectRetain();
LABEL_3:
    sub_253A448BC();
    return v37;
  }
  sub_253A448BC();
  sub_253A44814(v29, (uint64_t)v23, (void (*)(void))type metadata accessor for Session.Event.Payload);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2539814AC(*v23);
    uint64_t v30 = type metadata accessor for SpeechRequestCandidate(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v30) == 1)
    {
      sub_253472458((uint64_t)v16, &qword_26B249348);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_253A448BC();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v37;
  }
  sub_253A448BC();
  sub_253A44814(v29, (uint64_t)v20, (void (*)(void))type metadata accessor for Session.Event.Payload);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v31 = v36;
    sub_253A44868((uint64_t)v20, v36, (void (*)(void))type metadata accessor for Request);
    sub_253A44814(v31, (uint64_t)v8, (void (*)(void))type metadata accessor for RequestContent);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 3u:
        sub_253A448BC();
        goto LABEL_13;
      case 1u:
        sub_253A448BC();
        sub_253A44868((uint64_t)v8, v35, (void (*)(void))type metadata accessor for RequestContent.TextContent);
        swift_bridgeObjectRetain();
        goto LABEL_3;
      case 2u:
        sub_2539814AC(*v8);
        uint64_t v33 = type metadata accessor for SpeechRequestCandidate(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v33) == 1)
        {
          sub_253472458((uint64_t)v14, &qword_26B249348);
          swift_bridgeObjectRelease();
          sub_253A448BC();
          return v37;
        }
        swift_bridgeObjectRetain();
        sub_253A448BC();
        swift_bridgeObjectRelease();
        break;
      default:
        sub_253B0A4B0();
        __break(1u);
        JUMPOUT(0x253A43200);
    }
    goto LABEL_3;
  }
LABEL_13:
  sub_253A448BC();
  return 0;
}

uint64_t sub_253A43210(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDBEA0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_253462A5C(&qword_269CE8460);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B45B0(a1, (uint64_t)v7, &qword_269CE8460);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v2) == 1) {
    return 0;
  }
  sub_25351C1B0((uint64_t)v7, (uint64_t)v4, &qword_269CDBEA0);
  uint64_t v8 = sub_253A42BC8(*v4, (uint64_t)v4 + *(int *)(v2 + 48), (uint64_t)v4 + *(int *)(v2 + 64));
  sub_253472458((uint64_t)v4, &qword_269CDBEA0);
  return v8;
}

void sub_253A43374()
{
  sub_2534B3258();
  uint64_t v1 = v0;
  uint64_t v2 = sub_253462A5C(&qword_269CDE4F0);
  uint64_t v3 = sub_25346CB34(v2);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388](v3);
  sub_2534727F8();
  uint64_t v7 = v5 - v6;
  MEMORY[0x270FA5388](v8);
  uint64_t v26 = (uint64_t)&v23 - v9;
  sub_2539627B8();
  sub_253A44314();
  uint64_t v11 = v10;
  unint64_t v12 = *(void *)(v10 + 16);
  swift_bridgeObjectRelease();
  if (v12 < 2)
  {
LABEL_2:
    sub_253465A14();
    return;
  }
  unint64_t v13 = 0;
  unint64_t v14 = v12 >> 1;
  unint64_t v15 = v12 - 1;
  uint64_t v23 = v1;
  unint64_t v24 = v12 >> 1;
  while (1)
  {
    if (v13 == v15) {
      goto LABEL_12;
    }
    unint64_t v16 = *(void *)(v11 + 16);
    if (v13 >= v16) {
      break;
    }
    uint64_t v17 = v7;
    unint64_t v18 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    uint64_t v19 = *(void *)(v25 + 72);
    uint64_t v20 = v19 * v13;
    sub_2534B45B0(v11 + v18 + v19 * v13, v26, &qword_269CDE4F0);
    if (v15 >= v16) {
      goto LABEL_15;
    }
    unint64_t v21 = v19 * v15;
    uint64_t v22 = v11 + v18 + v19 * v15;
    uint64_t v7 = v17;
    sub_2534B45B0(v22, v17, &qword_269CDE4F0);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = v23(v11);
    }
    if (v13 >= *(void *)(v11 + 16)) {
      goto LABEL_16;
    }
    sub_253A447AC(v17, v11 + v18 + v20);
    if (v15 >= *(void *)(v11 + 16)) {
      goto LABEL_17;
    }
    sub_253A447AC(v26, v11 + v18 + v21);
    unint64_t v14 = v24;
LABEL_12:
    ++v13;
    --v15;
    if (v14 == v13) {
      goto LABEL_2;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
}

void sub_253A4354C(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v28 = type metadata accessor for Session.Event.Payload(0);
  MEMORY[0x270FA5388](v28);
  uint64_t v2 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Session.Event(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_253462A5C(&qword_269CE8480);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (uint64_t *)((char *)&v27 - v10);
  swift_bridgeObjectRetain();
  sub_253A43374();
  uint64_t v13 = v12;
  unint64_t v14 = 0;
  unint64_t v15 = *(void *)(v12 + 16);
  while (1)
  {
    if (v14 == v15)
    {
      uint64_t v16 = sub_253462A5C(&qword_269CDE4F0);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 1, 1, v16);
      unint64_t v14 = v15;
      goto LABEL_6;
    }
    if (v14 >= *(void *)(v13 + 16)) {
      break;
    }
    uint64_t v17 = sub_253462A5C(&qword_269CDE4F0);
    sub_2534B45B0(v13+ ((*(unsigned __int8 *)(*(void *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v17 - 8) + 80))+ *(void *)(*(void *)(v17 - 8) + 72) * v14++, (uint64_t)v9, &qword_269CDE4F0);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v17);
LABEL_6:
    sub_25351C1B0((uint64_t)v9, (uint64_t)v11, &qword_269CE8480);
    uint64_t v18 = sub_253462A5C(&qword_269CDE4F0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v18) == 1)
    {
      swift_bridgeObjectRelease();
      unint64_t v21 = (_OWORD *)v27;
      *(unsigned char *)(v27 + 64) = 0;
      v21[2] = 0u;
      v21[3] = 0u;
      *unint64_t v21 = 0u;
      v21[1] = 0u;
      return;
    }
    uint64_t v19 = (uint64_t)v11 + *(int *)(v18 + 48);
    uint64_t v20 = *v11;
    sub_253A44868(v19, (uint64_t)v5, (void (*)(void))type metadata accessor for Session.Event);
    sub_253A44814((uint64_t)&v5[*(int *)(v3 + 28)], (uint64_t)v2, (void (*)(void))type metadata accessor for Session.Event.Payload);
    sub_253A448BC();
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      swift_bridgeObjectRelease();
      long long v22 = *(_OWORD *)v2;
      uint64_t v23 = *((void *)v2 + 2);
      char v24 = v2[56];
      uint64_t v25 = v27;
      *(void *)uint64_t v27 = v20;
      *(_OWORD *)(v25 + 8) = v22;
      *(void *)(v25 + 24) = v23;
      long long v26 = *(_OWORD *)(v2 + 40);
      *(_OWORD *)(v25 + 32) = *(_OWORD *)(v2 + 24);
      *(_OWORD *)(v25 + 48) = v26;
      *(unsigned char *)(v25 + 64) = v24;
      return;
    }
    sub_253A448BC();
  }
  __break(1u);
}

void sub_253A438C8(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_253A43F1C();
    uint64_t v3 = v6;
  }
  unint64_t v4 = *(void *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    sub_253524F54((char *)(v3 + 16 * a1 + 48), v4 - 1 - a1, (char *)(v3 + 16 * a1 + 32));
    *(void *)(v3 + 16) = v5;
    *uint64_t v1 = v3;
  }
}

void *sub_253A43954(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_253462A5C(&qword_269CDB398);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_253A439BC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v6 = sub_253B098F0();
    sub_253A44EBC(v6);
    return v7 | 4;
  }
  else
  {
    uint64_t v3 = MEMORY[0x25A2688C0](15, a1 >> 16);
    sub_253A44EBC(v3);
    return v4 | 8;
  }
}

uint64_t sub_253A43A18()
{
  unint64_t v1 = sub_253A43A78();
  sub_253A43AAC(v1, v2, v3, v4);
  sub_253A44E6C();
  return v0;
}

uint64_t sub_253A43A78()
{
  return sub_253B09940();
}

uint64_t sub_253A43AAC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = sub_253A43C04(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = sub_253A43954(v9, 0);
      unint64_t v12 = sub_253A43D04((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_253B0A0A0();
LABEL_4:
        JUMPOUT(0x25A2687C0);
      }
    }
    else
    {
      uint64_t v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x25A2687C0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x25A2687C0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_253A43C04(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    uint64_t result = sub_253A439BC(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    uint64_t result = sub_253A439BC(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  return sub_253B098D0();
}

unint64_t sub_253A43D04(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_35;
  }
  if (a3 < 0) {
    goto LABEL_38;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_35:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    uint64_t result = v12;
    if ((v12 & 0xC) == v15) {
      uint64_t result = sub_253A439BC(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_253B098E0();
      char v19 = result;
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_253B0A0A0();
        }
        char v19 = *(unsigned char *)(result + v18);
      }
    }
    if ((v12 & 0xC) == v15)
    {
      uint64_t result = sub_253A439BC(v12, a6, a7);
      unint64_t v12 = result;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v23 <= v12 >> 16) {
      goto LABEL_37;
    }
    unint64_t v12 = sub_253B098B0();
LABEL_31:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_35;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

void sub_253A43F08()
{
}

void sub_253A43F1C()
{
}

uint64_t sub_253A43F30(uint64_t a1)
{
  return sub_253523B48(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_253A43F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_253A44938();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_253B09930();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_253A43A18();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (unsigned __int8 *)sub_253B0A0A0();
  }
LABEL_7:
  uint64_t v13 = sub_253A44038(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13 | ((((unint64_t)v13 >> 32) & 1) << 32);
}

unsigned __int8 *sub_253A44038(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            unint64_t v23 = v8 * (unint64_t)a3;
            if ((v23 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__CFADD__(v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned int v12 = 0;
      unsigned __int8 v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          unsigned int v28 = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            unint64_t v31 = v28 * (unint64_t)a3;
            if ((v31 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v32 = v29 + v30;
            unsigned int v28 = v31 + v32;
            if (__CFADD__(v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          unsigned __int8 v13 = 0;
          unsigned int v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            unint64_t v14 = v8 * (unint64_t)a3;
            if ((v14 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v15 = v10 + v11;
            unsigned int v8 = v14 - v15;
            if (v14 < v15) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned int v12 = 0;
        unsigned __int8 v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_253A442B8()
{
  uint64_t v1 = *v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_253A43F1C();
    uint64_t v1 = v3;
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    *(void *)(v1 + 16) = v2 - 1;
    *uint64_t v0 = v1;
  }
  else
  {
    __break(1u);
  }
}

void sub_253A44314()
{
  sub_2534B3258();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v48 = sub_253462A5C(&qword_269CE8488);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v7);
  sub_25346CB04();
  uint64_t v47 = v8;
  uint64_t v49 = sub_253462A5C(&qword_269CDE4F0);
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  sub_2534B340C();
  MEMORY[0x270FA5388](v10);
  uint64_t v50 = v12;
  uint64_t v51 = (uint64_t)v45 - v11;
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  swift_bridgeObjectRetain();
  unint64_t v14 = (void *)MEMORY[0x263F8EE78];
  uint64_t v15 = v6 - v4;
  if (v6 == v4)
  {
    uint64_t v16 = 0;
LABEL_32:
    swift_bridgeObjectRelease();
    unsigned __int8 v19 = v14;
LABEL_34:
    unint64_t v42 = v19[3];
    if (v42 < 2) {
      goto LABEL_37;
    }
    unint64_t v43 = v42 >> 1;
    BOOL v41 = __OFSUB__(v43, v16);
    unint64_t v44 = v43 - v16;
    if (!v41)
    {
      v19[2] = v44;
LABEL_37:
      sub_253465A14();
      return;
    }
  }
  else
  {
    if (v4 >= v6)
    {
      unint64_t v17 = 0;
      uint64_t v16 = 0;
      v45[1] = v13 | 7;
      uint64_t v46 = (v13 + 32) & ~v13;
      uint64_t v18 = MEMORY[0x263F8EE78] + v46;
      unsigned __int8 v19 = (void *)MEMORY[0x263F8EE78];
      v45[0] = v6;
      while (v15 + v17)
      {
        unint64_t v20 = *(void *)(v2 + 16);
        if (v17 == v20)
        {
          swift_bridgeObjectRelease();
          goto LABEL_34;
        }
        if (v17 >= v20) {
          goto LABEL_39;
        }
        uint64_t v21 = type metadata accessor for Session.Event(0);
        sub_25346CB34(v21);
        uint64_t v24 = v47 + *(int *)(v48 + 48);
        sub_253A44814(v2+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v23 + 72) * v17, v24, (void (*)(void))type metadata accessor for Session.Event);
        uint64_t v25 = (uint64_t)v0 + *(int *)(v49 + 48);
        *uint64_t v0 = v6 + v17;
        sub_253A44868(v24, v25, (void (*)(void))type metadata accessor for Session.Event);
        sub_25351C1B0((uint64_t)v0, v51, &qword_269CDE4F0);
        if (v16)
        {
          unint64_t v14 = v19;
        }
        else
        {
          unint64_t v26 = v19[3];
          if ((uint64_t)((v26 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_41;
          }
          int64_t v27 = v26 & 0xFFFFFFFFFFFFFFFELL;
          if (v27 <= 1) {
            uint64_t v28 = 1;
          }
          else {
            uint64_t v28 = v27;
          }
          sub_253462A5C(&qword_269CDE4E8);
          uint64_t v29 = *(void *)(v50 + 72);
          uint64_t v30 = v46;
          unint64_t v14 = (void *)swift_allocObject();
          size_t v31 = j__malloc_size(v14);
          if (!v29) {
            goto LABEL_42;
          }
          int64_t v32 = v31 - v30;
          if (v31 - v30 == 0x8000000000000000 && v29 == -1) {
            goto LABEL_43;
          }
          uint64_t v34 = v2;
          uint64_t v35 = v30;
          uint64_t v36 = v32 / v29;
          v14[2] = v28;
          void v14[3] = 2 * (v32 / v29);
          uint64_t v37 = (char *)v14 + v35;
          unint64_t v38 = v19[3];
          uint64_t v39 = (v38 >> 1) * v29;
          if (v19[2])
          {
            if (v14 < v19 || v37 >= (char *)v19 + v46 + v39)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v14 != v19)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v19[2] = 0;
          }
          uint64_t v18 = (uint64_t)&v37[v39];
          uint64_t v16 = (v36 & 0x7FFFFFFFFFFFFFFFLL) - (v38 >> 1);
          swift_release();
          uint64_t v2 = v34;
          uint64_t v6 = v45[0];
        }
        BOOL v41 = __OFSUB__(v16--, 1);
        if (v41) {
          goto LABEL_40;
        }
        ++v17;
        sub_25351C1B0(v51, v18, &qword_269CDE4F0);
        v18 += *(void *)(v50 + 72);
        unsigned __int8 v19 = v14;
        if (!(v15 + v17)) {
          goto LABEL_32;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_253A44680(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    LODWORD(result) = 0;
    unsigned __int8 v15 = 0;
    return result | ((unint64_t)v15 << 32) | (((a4 >> 60) & 1) << 40);
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    uint64_t v12 = HIBYTE(a4) & 0xF;
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    uint64_t v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v12 = a3 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v11 = (void *)sub_253B0A0A0();
  }
  uint64_t result = sub_253A44984((uint64_t)v11, v12, a1, a2, a3, a4, a5);
  if (!v5)
  {
    unsigned __int8 v15 = BYTE4(result) & 1;
    return result | ((unint64_t)v15 << 32) | (((a4 >> 60) & 1) << 40);
  }
  return result;
}

unint64_t sub_253A4475C()
{
  unint64_t result = qword_269CE8478;
  if (!qword_269CE8478)
  {
    sub_253B051C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8478);
  }
  return result;
}

uint64_t sub_253A447AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253462A5C(&qword_269CDE4F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_253A44814(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25346CAF4();
  uint64_t v4 = sub_2534B4668();
  v5(v4);
  return a2;
}

uint64_t sub_253A44868(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25346CAF4();
  uint64_t v4 = sub_25351CA1C();
  v5(v4);
  return a2;
}

uint64_t sub_253A448BC()
{
  uint64_t v1 = sub_2534D9690();
  v2(v1);
  sub_25346CAF4();
  sub_2534659CC();
  v3();
  return v0;
}

uint64_t sub_253A4490C(uint64_t a1)
{
  return a1;
}

unint64_t sub_253A44938()
{
  unint64_t result = qword_269CE8498;
  if (!qword_269CE8498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8498);
  }
  return result;
}

uint64_t sub_253A44984(uint64_t result, uint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7)
{
  unint64_t v11 = a3;
  uint64_t v12 = result;
  uint64_t v13 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0) {
    LOBYTE(v13) = 1;
  }
  uint64_t v14 = 4 << v13;
  unint64_t v15 = a3 & 0xC;
  unint64_t v16 = a3;
  if (v15 == 4 << v13)
  {
    unint64_t result = sub_253A439BC(a3, a5, a6);
    unint64_t v16 = result;
  }
  uint64_t v17 = HIBYTE(a6) & 0xF;
  if ((a6 & 0x1000000000000000) != 0)
  {
    unint64_t v19 = a5 & 0xFFFFFFFFFFFFLL;
    if ((a6 & 0x2000000000000000) != 0) {
      unint64_t v19 = HIBYTE(a6) & 0xF;
    }
    if (v19 < v16 >> 16) {
      goto LABEL_105;
    }
    unint64_t result = sub_253B098D0();
    uint64_t v18 = result;
    uint64_t v17 = HIBYTE(a6) & 0xF;
  }
  else
  {
    uint64_t v18 = v16 >> 16;
  }
  if (v15 == v14)
  {
    uint64_t v20 = v17;
    unint64_t result = sub_253A439BC(v11, a5, a6);
    uint64_t v17 = v20;
    unint64_t v11 = result;
  }
  if ((a4 & 0xC) == v14)
  {
    unint64_t v21 = a4;
    uint64_t v22 = v17;
    unint64_t result = sub_253A439BC(v21, a5, a6);
    uint64_t v17 = v22;
    a4 = result;
    if ((a6 & 0x1000000000000000) == 0) {
      goto LABEL_11;
    }
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
LABEL_11:
    unint64_t result = (a4 >> 16) - (v11 >> 16);
    goto LABEL_22;
  }
  unint64_t v23 = a5 & 0xFFFFFFFFFFFFLL;
  if ((a6 & 0x2000000000000000) != 0) {
    unint64_t v23 = v17;
  }
  if (v23 < v11 >> 16) {
    goto LABEL_101;
  }
  if (v23 < a4 >> 16)
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  unint64_t result = sub_253B098D0();
LABEL_22:
  uint64_t v24 = v18 + result;
  if (__OFADD__(v18, result))
  {
    __break(1u);
    goto LABEL_100;
  }
  if (v24 < v18)
  {
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  uint64_t v25 = (unsigned __int8 *)(v12 + v18);
  if (!v12) {
    uint64_t v25 = 0;
  }
  int v26 = *v25;
  if (v26 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v39 = a7 + 87;
        if (a7 > 10)
        {
          unsigned __int8 v40 = a7 + 55;
        }
        else
        {
          unsigned __int8 v39 = 97;
          unsigned __int8 v40 = 65;
        }
        if (a7 <= 10) {
          unsigned __int8 v41 = a7 + 48;
        }
        else {
          unsigned __int8 v41 = 58;
        }
        if (v25)
        {
          unsigned int v30 = 0;
          unint64_t v42 = v25 + 1;
          uint64_t v43 = result - 1;
          do
          {
            unsigned int v44 = *v42;
            if (v44 < 0x30 || v44 >= v41)
            {
              if (v44 < 0x41 || v44 >= v40)
              {
                unsigned int v35 = 0;
                unsigned __int8 v36 = 1;
                if (v44 < 0x61 || v44 >= v39) {
                  return v35 | ((unint64_t)v36 << 32);
                }
                char v45 = -87;
              }
              else
              {
                char v45 = -55;
              }
            }
            else
            {
              char v45 = -48;
            }
            unint64_t v46 = v30 * (unint64_t)a7;
            if ((v46 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_97;
            }
            unsigned __int8 v47 = v44 + v45;
            unsigned int v30 = v46 + v47;
            if (__CFADD__(v46, v47)) {
              goto LABEL_97;
            }
            ++v42;
            --v43;
          }
          while (v43);
LABEL_95:
          unsigned __int8 v36 = 0;
          unsigned int v35 = v30;
          return v35 | ((unint64_t)v36 << 32);
        }
        goto LABEL_96;
      }
      goto LABEL_97;
    }
    goto LABEL_104;
  }
  if (v26 != 45)
  {
    if (v24 != v18)
    {
      unsigned __int8 v48 = a7 + 87;
      if (a7 > 10)
      {
        unsigned __int8 v49 = a7 + 55;
      }
      else
      {
        unsigned __int8 v48 = 97;
        unsigned __int8 v49 = 65;
      }
      if (a7 <= 10) {
        unsigned __int8 v50 = a7 + 48;
      }
      else {
        unsigned __int8 v50 = 58;
      }
      if (v25)
      {
        unsigned int v30 = 0;
        while (1)
        {
          unsigned int v51 = *v25;
          if (v51 < 0x30 || v51 >= v50)
          {
            if (v51 < 0x41 || v51 >= v49)
            {
              unsigned int v35 = 0;
              unsigned __int8 v36 = 1;
              if (v51 < 0x61 || v51 >= v48) {
                return v35 | ((unint64_t)v36 << 32);
              }
              char v52 = -87;
            }
            else
            {
              char v52 = -55;
            }
          }
          else
          {
            char v52 = -48;
          }
          unint64_t v53 = v30 * (unint64_t)a7;
          if ((v53 & 0xFFFFFFFF00000000) != 0) {
            goto LABEL_97;
          }
          unsigned __int8 v54 = v51 + v52;
          unsigned int v30 = v53 + v54;
          if (__CFADD__(v53, v54)) {
            goto LABEL_97;
          }
          ++v25;
          if (!--result) {
            goto LABEL_95;
          }
        }
      }
      goto LABEL_96;
    }
LABEL_97:
    unsigned int v35 = 0;
    unsigned __int8 v36 = 1;
    return v35 | ((unint64_t)v36 << 32);
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v27 = a7 + 87;
      if (a7 > 10)
      {
        unsigned __int8 v28 = a7 + 55;
      }
      else
      {
        unsigned __int8 v27 = 97;
        unsigned __int8 v28 = 65;
      }
      if (a7 <= 10) {
        unsigned __int8 v29 = a7 + 48;
      }
      else {
        unsigned __int8 v29 = 58;
      }
      if (v25)
      {
        unsigned int v30 = 0;
        size_t v31 = v25 + 1;
        uint64_t v32 = result - 1;
        while (1)
        {
          unsigned int v33 = *v31;
          if (v33 < 0x30 || v33 >= v29)
          {
            if (v33 < 0x41 || v33 >= v28)
            {
              unsigned int v35 = 0;
              unsigned __int8 v36 = 1;
              if (v33 < 0x61 || v33 >= v27) {
                return v35 | ((unint64_t)v36 << 32);
              }
              char v34 = -87;
            }
            else
            {
              char v34 = -55;
            }
          }
          else
          {
            char v34 = -48;
          }
          unint64_t v37 = v30 * (unint64_t)a7;
          if ((v37 & 0xFFFFFFFF00000000) != 0) {
            goto LABEL_97;
          }
          unsigned __int8 v38 = v33 + v34;
          unsigned int v30 = v37 - v38;
          if (v37 < v38) {
            goto LABEL_97;
          }
          ++v31;
          if (!--v32) {
            goto LABEL_95;
          }
        }
      }
LABEL_96:
      unsigned int v35 = 0;
      unsigned __int8 v36 = 0;
      return v35 | ((unint64_t)v36 << 32);
    }
    goto LABEL_97;
  }
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
  return result;
}

uint64_t sub_253A44DB8()
{
  return *(void *)(v0 - 136);
}

uint64_t sub_253A44DDC()
{
  return v0;
}

uint64_t sub_253A44DF8()
{
  return v0;
}

uint64_t sub_253A44E10()
{
  return type metadata accessor for Session.Transcript(0);
}

uint64_t sub_253A44E38()
{
  return *(void *)(v0 - 128);
}

uint64_t sub_253A44E54()
{
  return v0;
}

uint64_t sub_253A44E6C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_253A44E88()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_253A44EA4()
{
  return v0;
}

unint64_t sub_253A44EBC(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

Swift::Void __swiftcall TranscriptProtoEvent.prepareForLogging()()
{
  sub_2534B3258();
  uint64_t v3 = v0;
  sub_253B08E50();
  sub_253465998();
  uint64_t v287 = v4;
  v288 = v5;
  MEMORY[0x270FA5388](v4);
  v285 = (char *)v244 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v7);
  v286 = (char *)v244 - v8;
  uint64_t v9 = sub_253462A5C(&qword_26B2497C0);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  sub_25346CB04();
  uint64_t v267 = v11;
  uint64_t v12 = sub_253483660();
  uint64_t v266 = type metadata accessor for TranscriptProtoParameterQuery(v12);
  sub_253465998();
  uint64_t v256 = v13;
  MEMORY[0x270FA5388](v14);
  sub_2534659D8();
  uint64_t v265 = v15;
  sub_2534B324C();
  MEMORY[0x270FA5388](v16);
  sub_2534B3318();
  v276 = v17;
  sub_2534B324C();
  MEMORY[0x270FA5388](v18);
  sub_2534B3318();
  uint64_t v264 = v19;
  sub_2534B324C();
  MEMORY[0x270FA5388](v20);
  sub_2534B35DC();
  uint64_t v268 = v21;
  uint64_t v22 = sub_253483660();
  uint64_t Step = type metadata accessor for TranscriptProtoQueryStep(v22);
  uint64_t v24 = sub_25346CB4C(Step);
  MEMORY[0x270FA5388](v24);
  sub_25346CB04();
  v260 = v25;
  uint64_t v26 = sub_253483660();
  uint64_t v281 = type metadata accessor for TranscriptProtoVariableSetter(v26);
  sub_253465998();
  uint64_t v255 = v27;
  MEMORY[0x270FA5388](v28);
  sub_2534659D8();
  v280 = (char *)v29;
  sub_2534B324C();
  MEMORY[0x270FA5388](v30);
  sub_2534B35DC();
  uint64_t v284 = v31;
  uint64_t v32 = sub_253483660();
  uint64_t v33 = type metadata accessor for TranscriptProtoVariableStep(v32);
  uint64_t v34 = sub_25346CB4C(v33);
  MEMORY[0x270FA5388](v34);
  sub_25346CB04();
  uint64_t v259 = v35;
  uint64_t v36 = sub_253483660();
  uint64_t v257 = type metadata accessor for TranscriptProtoStatementResult(v36);
  sub_253465998();
  uint64_t v254 = v37;
  MEMORY[0x270FA5388](v38);
  sub_2534659D8();
  v279 = (char *)v39;
  sub_2534B324C();
  MEMORY[0x270FA5388](v40);
  sub_2534B35DC();
  uint64_t v283 = v41;
  uint64_t v42 = sub_253483660();
  uint64_t v43 = type metadata accessor for TranscriptProtoResponseGenerationRequest(v42);
  uint64_t v44 = sub_25346CB4C(v43);
  MEMORY[0x270FA5388](v44);
  sub_25346CB04();
  uint64_t v258 = v45;
  uint64_t v46 = sub_253483660();
  uint64_t v277 = type metadata accessor for TranscriptProtoCandidate(v46);
  sub_253465998();
  uint64_t v272 = v47;
  MEMORY[0x270FA5388](v48);
  sub_2534727F8();
  uint64_t v51 = v49 - v50;
  MEMORY[0x270FA5388](v52);
  unsigned __int8 v54 = (char *)v244 - v53;
  uint64_t Results = type metadata accessor for TranscriptProtoQueryResults(0);
  uint64_t v253 = *(void *)(Results - 8);
  MEMORY[0x270FA5388](Results - 8);
  sub_2534659D8();
  uint64_t v274 = v56;
  sub_2534B324C();
  MEMORY[0x270FA5388](v57);
  sub_2534B3318();
  uint64_t v273 = v58;
  sub_2534B324C();
  MEMORY[0x270FA5388](v59);
  sub_2534B35DC();
  v282 = (void *)v60;
  uint64_t v61 = sub_253483660();
  Stepuint64_t Results = type metadata accessor for TranscriptProtoQueryStepResults(v61);
  uint64_t v63 = sub_25346CB4C(StepResults);
  MEMORY[0x270FA5388](v63);
  sub_25346CB04();
  v262 = (uint64_t *)v64;
  uint64_t v65 = sub_253483660();
  uint64_t v271 = type metadata accessor for TranscriptProtoParameter(v65);
  sub_253465998();
  uint64_t v252 = v66;
  MEMORY[0x270FA5388](v67);
  sub_2534659D8();
  uint64_t v270 = v68;
  sub_2534B324C();
  MEMORY[0x270FA5388](v69);
  sub_2534B3318();
  uint64_t v269 = v70;
  sub_2534B324C();
  MEMORY[0x270FA5388](v71);
  sub_2534B35DC();
  uint64_t v278 = v72;
  uint64_t v73 = sub_253462A5C(&qword_26B2495B8);
  uint64_t v74 = sub_25346CB4C(v73);
  MEMORY[0x270FA5388](v74);
  sub_25346CB04();
  uint64_t v275 = v75;
  uint64_t v76 = sub_253483660();
  uint64_t v261 = type metadata accessor for TranscriptProtoParameterSet(v76);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v77);
  uint64_t v78 = sub_2534D9B74();
  uint64_t v79 = type metadata accessor for TranscriptProtoActionResolverRequest(v78);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v80);
  uint64_t v81 = sub_25349888C();
  uint64_t v82 = type metadata accessor for TranscriptProtoAction(v81);
  uint64_t v83 = sub_25346CB4C(v82);
  MEMORY[0x270FA5388](v83);
  sub_25346CC44();
  uint64_t v86 = v85 - v84;
  uint64_t v87 = sub_253462A5C(&qword_26B2494F8);
  uint64_t v88 = sub_25346CB4C(v87);
  MEMORY[0x270FA5388](v88);
  sub_2534727F8();
  uint64_t v91 = v89 - v90;
  MEMORY[0x270FA5388](v92);
  uint64_t v94 = (char *)v244 - v93;
  uint64_t v95 = v3 + *(int *)(type metadata accessor for TranscriptProtoEvent(0) + 44);
  uint64_t v96 = type metadata accessor for TranscriptProtoPayload(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v95, 1, v96))
  {
    uint64_t v97 = type metadata accessor for TranscriptProtoPayloadEnum(0);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v94, 1, 1, v97);
LABEL_129:
    sub_253472458((uint64_t)v94, &qword_26B2494F8);
    sub_253465A14();
    return;
  }
  uint64_t v250 = v91;
  uint64_t v246 = v79;
  uint64_t v247 = v86;
  uint64_t v98 = v275;
  uint64_t v248 = v1;
  uint64_t v245 = v2;
  uint64_t v99 = v277;
  uint64_t v251 = v96;
  uint64_t v249 = v95;
  sub_2534B45B0(v95, (uint64_t)v94, &qword_26B2494F8);
  uint64_t v100 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v94, 1, v100) == 1) {
    goto LABEL_129;
  }
  uint64_t v101 = v250;
  sub_2534B45B0((uint64_t)v94, v250, &qword_26B2494F8);
  v244[1] = v100;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v263 = v94;
  if (EnumCaseMultiPayload == 23)
  {
    uint64_t v110 = v258;
    sub_253A47D48(v101, v258, (void (*)(void))type metadata accessor for TranscriptProtoResponseGenerationRequest);
    uint64_t v111 = *(void *)v110;
    uint64_t v112 = *(void *)(*(void *)v110 + 16);
    uint64_t v113 = MEMORY[0x263F8EE78];
    if (v112)
    {
      uint64_t v290 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_2539E7668();
      sub_253A47F38();
      uint64_t v116 = v115 & ~v114;
      uint64_t v117 = v111 + v116;
      uint64_t v119 = *(void *)(v118 + 72);
      uint64_t v120 = v257;
      uint64_t v121 = v283;
      do
      {
        uint64_t v122 = (uint64_t)v279;
        sub_253A47DA8(v117, (uint64_t)v279, (void (*)(void))type metadata accessor for TranscriptProtoStatementResult);
        sub_253A47DA8(v122, v121, (void (*)(void))type metadata accessor for TranscriptProtoStatementResult);
        uint64_t v113 = v121 + *(int *)(v120 + 24);
        uint64_t v123 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
        if (!sub_253A47E68(v123))
        {
          uint64_t v124 = type metadata accessor for TranscriptProtoStatementOutcome(0);
          if (!sub_253A47E68(v124))
          {
            uint64_t v125 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
            if (!sub_253A47E68(v125)) {
              sub_253A46F88();
            }
          }
        }
        sub_253A47DFC(v122, (void (*)(void))type metadata accessor for TranscriptProtoStatementResult);
        if ((sub_253A47F70() & 1) == 0)
        {
          sub_253A47E50();
          sub_2539E7668();
          uint64_t v113 = v290;
        }
        unint64_t v127 = *(void *)(v113 + 16);
        unint64_t v126 = *(void *)(v113 + 24);
        if (v127 >= v126 >> 1)
        {
          sub_253A47E84(v126);
          sub_2539E7668();
          uint64_t v113 = v290;
        }
        *(void *)(v113 + 16) = v127 + 1;
        uint64_t v128 = v113 + v116 + v127 * v119;
        uint64_t v121 = v283;
        sub_253A47D48(v283, v128, (void (*)(void))type metadata accessor for TranscriptProtoStatementResult);
        v117 += v119;
        --v112;
      }
      while (v112);
      swift_bridgeObjectRelease();
      uint64_t v111 = *(void *)v110;
    }
    swift_bridgeObjectRelease();
    *(void *)uint64_t v110 = v113;
    if (!sub_253A47EB4())
    {
      sub_253472458(v111, &qword_26B2494F8);
      sub_253A47DA8(v110, v111, (void (*)(void))type metadata accessor for TranscriptProtoResponseGenerationRequest);
      swift_storeEnumTagMultiPayload();
      sub_253945580();
    }
    v108 = type metadata accessor for TranscriptProtoResponseGenerationRequest;
    uint64_t v109 = v110;
    goto LABEL_103;
  }
  if (EnumCaseMultiPayload != 7)
  {
    if (EnumCaseMultiPayload == 8)
    {
      uint64_t v179 = v259;
      sub_253A47D48(v101, v259, (void (*)(void))type metadata accessor for TranscriptProtoVariableStep);
      uint64_t v180 = *(void *)v179;
      uint64_t v181 = *(void *)(*(void *)v179 + 16);
      uint64_t v182 = MEMORY[0x263F8EE78];
      if (v181)
      {
        uint64_t v290 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        sub_2539E738C();
        sub_253A47F38();
        uint64_t v185 = v184 & ~v183;
        uint64_t v186 = v180 + v185;
        uint64_t v188 = *(void *)(v187 + 72);
        uint64_t v189 = v287;
        uint64_t v190 = v284;
        do
        {
          uint64_t v191 = (uint64_t)v280;
          sub_253A47DA8(v186, (uint64_t)v280, (void (*)(void))type metadata accessor for TranscriptProtoVariableSetter);
          sub_253A47DA8(v191, v190, (void (*)(void))type metadata accessor for TranscriptProtoVariableSetter);
          uint64_t v182 = v190 + *(int *)(v281 + 20);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v182, 1, v189)) {
            sub_253A46758();
          }
          sub_253A47DFC(v191, (void (*)(void))type metadata accessor for TranscriptProtoVariableSetter);
          if ((sub_253A47F70() & 1) == 0)
          {
            sub_253A47E50();
            sub_2539E738C();
            uint64_t v182 = v290;
          }
          unint64_t v193 = *(void *)(v182 + 16);
          unint64_t v192 = *(void *)(v182 + 24);
          if (v193 >= v192 >> 1)
          {
            sub_253A47E84(v192);
            sub_2539E738C();
            uint64_t v182 = v290;
          }
          *(void *)(v182 + 16) = v193 + 1;
          uint64_t v190 = v284;
          sub_253A47D48(v284, v182 + v185 + v193 * v188, (void (*)(void))type metadata accessor for TranscriptProtoVariableSetter);
          v186 += v188;
          --v181;
        }
        while (v181);
        swift_bridgeObjectRelease();
        uint64_t v180 = *(void *)v179;
      }
      swift_bridgeObjectRelease();
      *(void *)uint64_t v179 = v182;
      if (!sub_253A47EB4())
      {
        sub_253472458(v180, &qword_26B2494F8);
        sub_253A47DA8(v179, v180, (void (*)(void))type metadata accessor for TranscriptProtoVariableStep);
        swift_storeEnumTagMultiPayload();
        sub_253945580();
      }
      v108 = type metadata accessor for TranscriptProtoVariableStep;
      uint64_t v109 = v179;
      goto LABEL_103;
    }
    if (EnumCaseMultiPayload != 15)
    {
      uint64_t v103 = v251;
      if (EnumCaseMultiPayload == 17)
      {
        uint64_t v221 = v99;
        uint64_t v222 = v248;
        sub_253A47D48(v101, v248, (void (*)(void))type metadata accessor for TranscriptProtoActionResolverRequest);
        uint64_t v223 = v222 + *(int *)(v246 + 36);
        sub_2534B45B0(v223, v98, &qword_26B2495B8);
        uint64_t v224 = v261;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v98, 1, v261) == 1)
        {
          sub_253472458(v98, &qword_26B2495B8);
        }
        else
        {
          uint64_t v227 = v98;
          uint64_t v228 = v245;
          sub_253A47D48(v227, v245, (void (*)(void))type metadata accessor for TranscriptProtoParameterSet);
          uint64_t v229 = *(void *)v228;
          uint64_t v230 = *(void *)(*(void *)v228 + 16);
          uint64_t v231 = MEMORY[0x263F8EE78];
          if (v230)
          {
            uint64_t v290 = MEMORY[0x263F8EE78];
            swift_bridgeObjectRetain();
            sub_2539E72C4();
            sub_253A47F38();
            uint64_t v234 = v233 & ~v232;
            uint64_t v235 = v229 + v234;
            uint64_t v237 = *(void *)(v236 + 72);
            do
            {
              uint64_t v238 = v269;
              sub_253A47DA8(v235, v269, (void (*)(void))type metadata accessor for TranscriptProtoParameter);
              uint64_t v239 = v270;
              sub_253A47DA8(v238, v270, (void (*)(void))type metadata accessor for TranscriptProtoParameter);
              uint64_t v231 = v239 + *(int *)(v271 + 24);
              if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v231, 1, v221))
              {
                v231 += *(int *)(v221 + 20);
                if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v231, 1, v287)) {
                  sub_253A46758();
                }
              }
              sub_253A47D48(v239, v278, (void (*)(void))type metadata accessor for TranscriptProtoParameter);
              sub_253A47DFC(v238, (void (*)(void))type metadata accessor for TranscriptProtoParameter);
              if ((sub_253A47F70() & 1) == 0)
              {
                sub_253A47E50();
                sub_2539E72C4();
                uint64_t v231 = v290;
              }
              unint64_t v241 = *(void *)(v231 + 16);
              unint64_t v240 = *(void *)(v231 + 24);
              if (v241 >= v240 >> 1)
              {
                sub_253A47E84(v240);
                sub_2539E72C4();
                uint64_t v231 = v290;
              }
              *(void *)(v231 + 16) = v241 + 1;
              sub_253A47D48(v278, v231 + v234 + v241 * v237, (void (*)(void))type metadata accessor for TranscriptProtoParameter);
              v235 += v237;
              --v230;
              uint64_t v94 = v263;
            }
            while (v230);
            swift_bridgeObjectRelease();
            uint64_t v228 = v245;
            uint64_t v222 = v248;
            uint64_t v224 = v261;
          }
          swift_bridgeObjectRelease();
          *(void *)uint64_t v228 = v231;
          sub_253472458(v223, &qword_26B2495B8);
          sub_253A47DA8(v228, v223, (void (*)(void))type metadata accessor for TranscriptProtoParameterSet);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v223, 0, 1, v224);
          uint64_t v243 = v249;
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v249, 1, v251))
          {
            sub_253472458(v243, &qword_26B2494F8);
            sub_253A47DA8(v222, v243, (void (*)(void))type metadata accessor for TranscriptProtoActionResolverRequest);
            swift_storeEnumTagMultiPayload();
            sub_253A47E94();
          }
          sub_253A47DFC(v228, (void (*)(void))type metadata accessor for TranscriptProtoParameterSet);
        }
        v225 = type metadata accessor for TranscriptProtoActionResolverRequest;
        uint64_t v226 = v222;
      }
      else
      {
        if (EnumCaseMultiPayload == 5)
        {
          uint64_t v104 = v247;
          sub_253A47D48(v101, v247, (void (*)(void))type metadata accessor for TranscriptProtoAction);
          uint64_t v105 = swift_bridgeObjectRetain();
          uint64_t v106 = sub_253A477B8(v105);
          swift_bridgeObjectRelease_n();
          *(void *)(v104 + 24) = v106;
          uint64_t v107 = v249;
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v249, 1, v103))
          {
            sub_253472458(v107, &qword_26B2494F8);
            sub_253A47DA8(v104, v107, (void (*)(void))type metadata accessor for TranscriptProtoAction);
            swift_storeEnumTagMultiPayload();
            sub_253945580();
          }
          v108 = type metadata accessor for TranscriptProtoAction;
          uint64_t v109 = v104;
LABEL_103:
          sub_253A47DFC(v109, (void (*)(void))v108);
          uint64_t v94 = v263;
          goto LABEL_129;
        }
        v225 = type metadata accessor for TranscriptProtoPayloadEnum;
        uint64_t v226 = v101;
      }
LABEL_128:
      sub_253A47DFC(v226, (void (*)(void))v225);
      goto LABEL_129;
    }
    uint64_t v194 = v101;
    uint64_t v195 = (uint64_t)v262;
    sub_253A47D48(v194, (uint64_t)v262, (void (*)(void))type metadata accessor for TranscriptProtoQueryStepResults);
    uint64_t v196 = *(void *)v195;
    v197 = *(char **)(*(void *)v195 + 16);
    uint64_t v198 = MEMORY[0x263F8EE78];
    if (v197)
    {
      uint64_t v199 = v99;
      uint64_t v290 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_253A47F48();
      sub_2539E751C();
      sub_2535786F4();
      uint64_t v284 = v201;
      v285 = v197;
      uint64_t v283 = v196 + v201;
      uint64_t v203 = *(void *)(v202 + 72);
      uint64_t v205 = v273;
      uint64_t v204 = v274;
      v280 = (char *)v196;
      uint64_t v281 = v203;
      do
      {
        v288 = v200;
        sub_253A47DA8(v283 + v203 * (void)v200, v205, (void (*)(void))type metadata accessor for TranscriptProtoQueryResults);
        sub_253A47DA8(v205, v204, (void (*)(void))type metadata accessor for TranscriptProtoQueryResults);
        v206 = *(char **)v204;
        uint64_t v207 = *(void *)(*(void *)v204 + 16);
        if (v207)
        {
          uint64_t v289 = MEMORY[0x263F8EE78];
          swift_bridgeObjectRetain();
          sub_253A47F48();
          sub_2539E7328();
          unint64_t v208 = (*(unsigned __int8 *)(v272 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v272 + 80);
          v286 = v206;
          uint64_t v209 = (uint64_t)&v206[v208];
          uint64_t v210 = *(void *)(v272 + 72);
          do
          {
            sub_253A47DA8(v209, v51, (void (*)(void))type metadata accessor for TranscriptProtoCandidate);
            sub_253A47DA8(v51, (uint64_t)v54, (void (*)(void))type metadata accessor for TranscriptProtoCandidate);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)&v54[*(int *)(v199 + 20)], 1, v287))sub_253A46758(); {
            sub_253A47DFC(v51, (void (*)(void))type metadata accessor for TranscriptProtoCandidate);
            }
            uint64_t v198 = v289;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_2539E7328();
              uint64_t v198 = v289;
            }
            unint64_t v212 = *(void *)(v198 + 16);
            unint64_t v211 = *(void *)(v198 + 24);
            if (v212 >= v211 >> 1)
            {
              sub_253526BBC(v211);
              sub_2539E7328();
              uint64_t v198 = v289;
            }
            *(void *)(v198 + 16) = v212 + 1;
            sub_253A47D48((uint64_t)v54, v198 + v208 + v212 * v210, (void (*)(void))type metadata accessor for TranscriptProtoCandidate);
            v209 += v210;
            --v207;
            uint64_t v199 = v99;
          }
          while (v207);
          swift_bridgeObjectRelease();
          uint64_t v205 = v273;
          uint64_t v204 = v274;
        }
        else
        {
          uint64_t v198 = MEMORY[0x263F8EE78];
        }
        swift_bridgeObjectRelease();
        *(void *)uint64_t v204 = v198;
        uint64_t v213 = (uint64_t)v282;
        sub_253A47D48(v204, (uint64_t)v282, (void (*)(void))type metadata accessor for TranscriptProtoQueryResults);
        sub_253A47DFC(v205, (void (*)(void))type metadata accessor for TranscriptProtoQueryResults);
        if ((sub_253A47F70() & 1) == 0)
        {
          sub_253A47E50();
          sub_2539E751C();
          uint64_t v198 = v290;
        }
        v214 = v288;
        unint64_t v216 = *(void *)(v198 + 16);
        unint64_t v215 = *(void *)(v198 + 24);
        if (v216 >= v215 >> 1)
        {
          sub_253A47E84(v215);
          sub_2539E751C();
          v214 = v288;
          uint64_t v198 = v290;
        }
        *(void *)(v198 + 16) = v216 + 1;
        uint64_t v217 = v281;
        uint64_t v218 = v198 + v284 + v216 * v281;
        v219 = v214 + 1;
        sub_253A47D48(v213, v218, (void (*)(void))type metadata accessor for TranscriptProtoQueryResults);
        uint64_t v203 = v217;
        v200 = v219;
        BOOL v220 = v219 == v285;
        uint64_t v94 = v263;
      }
      while (!v220);
      swift_bridgeObjectRelease();
      uint64_t v129 = v262;
    }
    else
    {
      uint64_t v129 = v262;
    }
    swift_bridgeObjectRelease();
    *uint64_t v129 = v198;
    if (!sub_253A47EE8())
    {
      sub_253472458(v198, &qword_26B2494F8);
      sub_253A47DA8((uint64_t)v129, v198, (void (*)(void))type metadata accessor for TranscriptProtoQueryStepResults);
      swift_storeEnumTagMultiPayload();
      sub_253A47E94();
    }
    v242 = type metadata accessor for TranscriptProtoQueryStepResults;
LABEL_127:
    v225 = v242;
    uint64_t v226 = (uint64_t)v129;
    goto LABEL_128;
  }
  uint64_t v129 = v260;
  sub_253A47D48(v101, (uint64_t)v260, (void (*)(void))type metadata accessor for TranscriptProtoQueryStep);
  uint64_t v130 = *v129;
  uint64_t v272 = *(void *)(*v129 + 16);
  if (!v272)
  {
    uint64_t v135 = MEMORY[0x263F8EE78];
LABEL_124:
    swift_bridgeObjectRelease();
    *uint64_t v129 = v135;
    if (!sub_253A47EE8())
    {
      sub_253472458(v130, &qword_26B2494F8);
      sub_253A47DA8((uint64_t)v129, v130, (void (*)(void))type metadata accessor for TranscriptProtoQueryStep);
      swift_storeEnumTagMultiPayload();
      sub_253A47E94();
    }
    v242 = type metadata accessor for TranscriptProtoQueryStep;
    goto LABEL_127;
  }
  uint64_t v271 = sub_253462A5C(&qword_269CE84A0);
  sub_2535786F4();
  uint64_t v269 = v131;
  uint64_t v270 = v130 + v131;
  uint64_t v273 = *(void *)(v132 + 72);
  uint64_t v133 = v288;
  v280 = v288 + 8;
  uint64_t v281 = (uint64_t)(v288 + 16);
  v279 = v288 + 32;
  v262 = (uint64_t *)v130;
  swift_bridgeObjectRetain_n();
  uint64_t v134 = 0;
  uint64_t v135 = MEMORY[0x263F8EE78];
  uint64_t v137 = v285;
  uint64_t v136 = v286;
  uint64_t v138 = v276;
  uint64_t v139 = v268;
  while (2)
  {
    uint64_t v275 = v135;
    uint64_t v274 = v134 + 1;
    sub_253A47DA8(v270 + v273 * v134, v139, (void (*)(void))type metadata accessor for TranscriptProtoParameterQuery);
    sub_253A47DA8(v139, (uint64_t)v138, (void (*)(void))type metadata accessor for TranscriptProtoParameterQuery);
    uint64_t v140 = *v138;
    uint64_t v141 = sub_253B0A230();
    uint64_t v142 = (void *)v141;
    uint64_t v143 = 0;
    uint64_t v144 = 1 << *(unsigned char *)(v140 + 32);
    uint64_t v284 = v140;
    uint64_t v145 = *(void *)(v140 + 64);
    uint64_t v277 = v140 + 64;
    if (v144 < 64) {
      uint64_t v146 = ~(-1 << v144);
    }
    else {
      uint64_t v146 = -1;
    }
    unint64_t v147 = v146 & v145;
    uint64_t v278 = (unint64_t)(v144 + 63) >> 6;
    v282 = (void *)v141;
    uint64_t v283 = v141 + 64;
    if ((v146 & v145) != 0)
    {
LABEL_31:
      unint64_t v148 = __clz(__rbit64(v147));
      v147 &= v147 - 1;
      uint64_t v149 = v143;
      unint64_t v150 = v148 | (v143 << 6);
      goto LABEL_52;
    }
    while (1)
    {
      uint64_t v151 = v143 + 1;
      if (__OFADD__(v143, 1)) {
        goto LABEL_131;
      }
      if (v151 >= v278) {
        goto LABEL_55;
      }
      unint64_t v152 = *(void *)(v277 + 8 * v151);
      uint64_t v153 = v143 + 1;
      if (!v152)
      {
        sub_253A47F64();
        if (v154 == v155) {
          goto LABEL_55;
        }
        sub_253A47F58();
        if (!v152)
        {
          sub_253A47F64();
          if (v154 == v155) {
            goto LABEL_55;
          }
          sub_253A47F58();
          if (!v152)
          {
            sub_253A47F64();
            if (v154 == v155) {
              goto LABEL_55;
            }
            sub_253A47F58();
            if (!v152) {
              break;
            }
          }
        }
      }
LABEL_51:
      unint64_t v147 = (v152 - 1) & v152;
      uint64_t v149 = v153;
      unint64_t v150 = __clz(__rbit64(v152)) + (v153 << 6);
LABEL_52:
      int v159 = *(_DWORD *)(*(void *)(v284 + 48) + 4 * v150);
      unint64_t v160 = *((void *)v133 + 9) * v150;
      v161 = (void (*)(char *, unint64_t, uint64_t))*((void *)v288 + 2);
      v162 = v136;
      v163 = v136;
      uint64_t v164 = v287;
      v161(v162, *(void *)(v284 + 56) + v160, v287);
      v161(v137, (unint64_t)v163, v164);
      sub_253A46758();
      sub_2534659CC();
      v165();
      uint64_t v142 = v282;
      *(void *)(v283 + ((v150 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v150;
      *(_DWORD *)(v142[6] + 4 * v150) = v159;
      unint64_t v166 = v142[7] + v160;
      uint64_t v133 = v288;
      (*((void (**)(unint64_t, char *, uint64_t))v288 + 4))(v166, v137, v164);
      uint64_t v167 = v142[2];
      BOOL v155 = __OFADD__(v167, 1);
      uint64_t v168 = v167 + 1;
      if (v155)
      {
        __break(1u);
LABEL_131:
        __break(1u);
        goto LABEL_132;
      }
      v142[2] = v168;
      uint64_t v136 = v286;
      uint64_t v143 = v149;
      if (v147) {
        goto LABEL_31;
      }
    }
    uint64_t v157 = v156 + 4;
    if (v157 >= v278)
    {
LABEL_55:
      uint64_t v138 = v276;
      swift_bridgeObjectRelease();
      *uint64_t v138 = (uint64_t)v142;
      uint64_t v169 = v267;
      sub_253A47D48((uint64_t)v138, v267, (void (*)(void))type metadata accessor for TranscriptProtoParameterQuery);
      uint64_t v170 = v266;
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v169, 0, 1, v266);
      uint64_t v139 = v268;
      sub_253A47DFC(v268, (void (*)(void))type metadata accessor for TranscriptProtoParameterQuery);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v169, 1, v170) == 1)
      {
        sub_253472458(v169, &qword_26B2497C0);
        uint64_t v135 = v275;
      }
      else
      {
        uint64_t v171 = v169;
        uint64_t v172 = v264;
        sub_253A47D48(v171, v264, (void (*)(void))type metadata accessor for TranscriptProtoParameterQuery);
        uint64_t v173 = v265;
        sub_253A47D48(v172, v265, (void (*)(void))type metadata accessor for TranscriptProtoParameterQuery);
        uint64_t v135 = v275;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_253523B5C(0, *(void *)(v135 + 16) + 1, 1, v135);
          uint64_t v135 = v176;
        }
        unint64_t v175 = *(void *)(v135 + 16);
        unint64_t v174 = *(void *)(v135 + 24);
        if (v175 >= v174 >> 1)
        {
          char v177 = sub_253526BBC(v174);
          sub_253523B5C(v177, v175 + 1, 1, v135);
          uint64_t v135 = v178;
        }
        *(void *)(v135 + 16) = v175 + 1;
        sub_253A47D48(v173, v135 + v269 + v175 * v273, (void (*)(void))type metadata accessor for TranscriptProtoParameterQuery);
        uint64_t v138 = v276;
      }
      uint64_t v134 = v274;
      if (v274 == v272)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v129 = v260;
        uint64_t v130 = *v260;
        uint64_t v94 = v263;
        goto LABEL_124;
      }
      continue;
    }
    break;
  }
  unint64_t v152 = *(void *)(v277 + 8 * v157);
  if (v152)
  {
    uint64_t v153 = v157;
    goto LABEL_51;
  }
  while (!__OFADD__(v157, 1))
  {
    sub_253A47F64();
    if (v154 == v155) {
      goto LABEL_55;
    }
    sub_253A47F58();
    uint64_t v157 = v158 + 1;
    if (v152) {
      goto LABEL_51;
    }
  }
LABEL_132:
  __break(1u);
}

void sub_253A46758()
{
  sub_2534B3258();
  uint64_t v1 = v0;
  uint64_t v2 = sub_253B08DF0();
  sub_253465998();
  uint64_t v95 = v3;
  MEMORY[0x270FA5388](v4);
  sub_25346CC44();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = sub_253462A5C(&qword_269CE84B0);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  sub_25346CB04();
  uint64_t v91 = v10;
  sub_253483660();
  sub_253B08E30();
  sub_253465998();
  uint64_t v93 = v11;
  uint64_t v94 = v12;
  MEMORY[0x270FA5388](v11);
  sub_25397F55C();
  uint64_t v13 = sub_253B08E50();
  sub_253465998();
  uint64_t v98 = v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v96 = (char *)v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v17);
  uint64_t v97 = (char *)v82 - v18;
  sub_253483660();
  uint64_t v19 = sub_253B08DD0();
  sub_253465998();
  uint64_t v90 = v20;
  MEMORY[0x270FA5388](v21);
  sub_25346CB04();
  uint64_t v89 = v22;
  uint64_t v23 = sub_253462A5C(&qword_269CE84B8);
  uint64_t v24 = sub_25346CB4C(v23);
  MEMORY[0x270FA5388](v24);
  sub_2534727F8();
  uint64_t v27 = (uint64_t *)(v25 - v26);
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  uint64_t v31 = (void *)((char *)v82 - v30);
  MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)v82 - v32;
  sub_253B08E00();
  uint64_t v34 = sub_253B08E90();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v33, 1, v34) != 1)
  {
    uint64_t v86 = v19;
    sub_2534B45B0((uint64_t)v33, (uint64_t)v31, &qword_269CE84B8);
    uint64_t v35 = *(void *)(v34 - 8);
    uint64_t v36 = (*(uint64_t (**)(uint64_t *, uint64_t))(v35 + 88))(v31, v34);
    int v37 = *MEMORY[0x263F80318];
    uint64_t v92 = v35;
    if (v36 == v37)
    {
      LODWORD(v93) = v36;
      uint64_t v85 = v27;
      uint64_t v87 = v33;
      uint64_t v88 = v1;
      uint64_t v38 = v34;
      (*(void (**)(uint64_t *, uint64_t))(v35 + 96))(v31, v34);
      swift_projectBox();
      uint64_t v39 = v95;
      uint64_t v40 = *(void (**)(void))(v95 + 16);
      sub_253A47F9C();
      v40();
      uint64_t v41 = (void (*)(void))sub_253B08DE0();
      uint64_t v42 = sub_253B08ED0();
      if (sub_253A47E68(v42))
      {
        ((void (*)(uint64_t *, void))v41)(&v99, 0);
      }
      else
      {
        uint64_t v72 = sub_253B08EB0();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v91, 1, 1, v72);
        sub_253B08EC0();
        uint64_t v73 = sub_253A47F88();
        v41(v73);
      }
      uint64_t v74 = swift_allocBox();
      sub_253A47F9C();
      v40();
      uint64_t v75 = (uint64_t)v85;
      *uint64_t v85 = v74;
      (*(void (**)(uint64_t, void, uint64_t))(v92 + 104))(v75, v93, v38);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v75, 0, 1, v38);
      sub_253B08E10();
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v7, v2);
LABEL_20:
      swift_release();
      uint64_t v33 = v87;
      goto LABEL_21;
    }
    if (v36 == *MEMORY[0x263F80320])
    {
      uint64_t v43 = v36;
      uint64_t v44 = v27;
      uint64_t v87 = v33;
      uint64_t v88 = v1;
      uint64_t v45 = v34;
      (*(void (**)(uint64_t *, uint64_t))(v92 + 96))(v31, v34);
      swift_projectBox();
      uint64_t v46 = *(void (**)(void))(v94 + 16);
      sub_253A47F9C();
      v46();
      uint64_t v47 = (void (*)(uint64_t))sub_253B08E20();
      uint64_t v48 = sub_253B08ED0();
      if (!sub_253A47E68(v48))
      {
        uint64_t v49 = sub_253B08EB0();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v91, 1, 1, v49);
        sub_253B08EC0();
      }
      uint64_t v50 = sub_253A47F88();
      v47(v50);
      uint64_t v51 = swift_allocBox();
      sub_253A47F9C();
      v46();
      uint64_t *v44 = v51;
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v92 + 104))(v44, v43, v45);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v44, 0, 1, v45);
      sub_253B08E10();
      sub_2534659CC();
      v52();
      goto LABEL_20;
    }
    uint64_t v53 = v92;
    if (v36 == *MEMORY[0x263F80310])
    {
      LODWORD(v93) = v36;
      unsigned __int8 v54 = *(void (**)(uint64_t *, uint64_t))(v92 + 96);
      uint64_t v91 = v34;
      v54(v31, v34);
      uint64_t v55 = *v31;
      uint64_t v56 = swift_projectBox();
      uint64_t v83 = *(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 16);
      uint64_t v84 = v90 + 16;
      v83(v89, v56, v86);
      uint64_t v57 = sub_253B08DB0();
      uint64_t v58 = *(void *)(v57 + 16);
      if (v58)
      {
        v82[2] = v55;
        uint64_t v85 = v27;
        uint64_t v87 = v33;
        uint64_t v88 = v1;
        uint64_t v99 = MEMORY[0x263F8EE78];
        sub_2539E6644();
        uint64_t v95 = *(void *)(v98 + 16);
        sub_2535786F4();
        v82[1] = v57;
        uint64_t v94 = v59;
        uint64_t v60 = v57 + v59;
        uint64_t v62 = *(void *)(v61 + 56);
        uint64_t v63 = (void (**)(char *, uint64_t))(v61 - 8);
        uint64_t v98 = v61;
        uint64_t v64 = (void (**)(unint64_t, char *, uint64_t))(v61 + 16);
        do
        {
          uint64_t v65 = (void (*)(void))v95;
          uint64_t v66 = v96;
          sub_253535668();
          v65();
          sub_253535668();
          uint64_t v67 = ((uint64_t (*)(void))v65)();
          sub_253A46758(v67);
          (*v63)(v66, v13);
          uint64_t v68 = v99;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2539E6644();
            uint64_t v68 = v99;
          }
          unint64_t v70 = *(void *)(v68 + 16);
          unint64_t v69 = *(void *)(v68 + 24);
          uint64_t v71 = v97;
          if (v70 >= v69 >> 1)
          {
            sub_253526BBC(v69);
            sub_2539E6644();
            uint64_t v71 = v97;
            uint64_t v68 = v99;
          }
          *(void *)(v68 + 16) = v70 + 1;
          (*v64)(v68 + v94 + v70 * v62, v71, v13);
          uint64_t v99 = v68;
          v60 += v62;
          --v58;
        }
        while (v58);
        swift_bridgeObjectRelease();
        uint64_t v33 = v87;
        uint64_t v27 = v85;
        uint64_t v53 = v92;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v76 = v89;
      sub_253B08DC0();
      uint64_t v77 = v86;
      uint64_t v78 = swift_allocBox();
      v83(v79, v76, v77);
      *uint64_t v27 = v78;
      uint64_t v80 = v91;
      (*(void (**)(uint64_t *, void, uint64_t))(v53 + 104))(v27, v93, v91);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v27, 0, 1, v80);
      sub_253B08E10();
      sub_2534659CC();
      v81();
      swift_release();
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t))(v92 + 8))(v31, v34);
    }
  }
LABEL_21:
  sub_253472458((uint64_t)v33, &qword_269CE84B8);
  sub_253465A14();
}

void sub_253A46F88()
{
  sub_2534B3258();
  uint64_t v4 = v1;
  type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_2534D9B74();
  type metadata accessor for TranscriptProtoParameterNotAllowed(v6);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v7);
  sub_25349888C();
  uint64_t v8 = sub_253B08E50();
  sub_253465998();
  uint64_t v48 = v9;
  MEMORY[0x270FA5388](v10);
  sub_2534659D8();
  uint64_t v46 = v11;
  sub_2534B324C();
  MEMORY[0x270FA5388](v12);
  sub_2534B35DC();
  uint64_t v47 = v13;
  uint64_t v14 = sub_253483660();
  uint64_t v15 = type metadata accessor for TranscriptProtoParameterDisambiguation(v14);
  uint64_t v16 = sub_25346CB4C(v15);
  MEMORY[0x270FA5388](v16);
  sub_25346CC44();
  uint64_t v19 = v18 - v17;
  type metadata accessor for TranscriptProtoParameterConfirmation(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v20);
  uint64_t v21 = sub_25397F55C();
  type metadata accessor for TranscriptProtoStatementOutcomeEnum(v21);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v22);
  sub_25346CC44();
  uint64_t v25 = v24 - v23;
  sub_253A47DA8(v1, v24 - v23, (void (*)(void))type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:
      sub_253A47DFC(v1, (void (*)(void))type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      sub_253A47D48(v25, v0, (void (*)(void))type metadata accessor for TranscriptProtoParameterConfirmation);
      if (!sub_253A47F1C()) {
        sub_253A46758();
      }
      sub_253A47DA8(v0, v1, (void (*)(void))type metadata accessor for TranscriptProtoParameterConfirmation);
      sub_253579334();
      swift_storeEnumTagMultiPayload();
      uint64_t v26 = type metadata accessor for TranscriptProtoParameterConfirmation;
      uint64_t v27 = v0;
      break;
    case 4u:
      sub_253A47D48(v25, v19, (void (*)(void))type metadata accessor for TranscriptProtoParameterDisambiguation);
      uint64_t v28 = *(void *)(v19 + 16);
      uint64_t v29 = *(void *)(v28 + 16);
      if (v29)
      {
        uint64_t v42 = v19;
        uint64_t v43 = v1;
        uint64_t v49 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        sub_253A47F48();
        sub_2539E6644();
        uint64_t v30 = *(void (**)(void))(v48 + 16);
        sub_2535786F4();
        uint64_t v44 = v31;
        uint64_t v45 = v8;
        uint64_t v32 = v28 + v31;
        uint64_t v34 = *(void *)(v33 + 56);
        uint64_t v35 = (void (**)(uint64_t, uint64_t))(v33 - 8);
        uint64_t v36 = (void (**)(unint64_t, uint64_t, uint64_t))(v33 + 16);
        do
        {
          sub_253535668();
          v30();
          sub_253535668();
          v30();
          sub_253A46758();
          (*v35)(v46, v8);
          uint64_t v37 = v49;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2539E6644();
            uint64_t v37 = v49;
          }
          unint64_t v39 = *(void *)(v37 + 16);
          unint64_t v38 = *(void *)(v37 + 24);
          uint64_t v40 = v47;
          if (v39 >= v38 >> 1)
          {
            sub_253526BBC(v38);
            sub_2539E6644();
            uint64_t v40 = v47;
            uint64_t v37 = v49;
          }
          *(void *)(v37 + 16) = v39 + 1;
          unint64_t v41 = v37 + v44 + v39 * v34;
          uint64_t v8 = v45;
          (*v36)(v41, v40, v45);
          uint64_t v49 = v37;
          v32 += v34;
          --v29;
        }
        while (v29);
        uint64_t v4 = v43;
        uint64_t v19 = v42;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v37 = MEMORY[0x263F8EE78];
      }
      sub_253A47DFC(v4, (void (*)(void))type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v19 + 16) = v37;
      sub_253A47DA8(v19, v4, (void (*)(void))type metadata accessor for TranscriptProtoParameterDisambiguation);
      sub_253579334();
      swift_storeEnumTagMultiPayload();
      uint64_t v26 = type metadata accessor for TranscriptProtoParameterDisambiguation;
      uint64_t v27 = v19;
      break;
    case 5u:
      sub_253A47DFC(v1, (void (*)(void))type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      sub_253A47D48(v25, v2, (void (*)(void))type metadata accessor for TranscriptProtoParameterNotAllowed);
      if (!sub_253A47F1C()) {
        sub_253A46758();
      }
      sub_253A47DA8(v2, v1, (void (*)(void))type metadata accessor for TranscriptProtoParameterNotAllowed);
      sub_253579334();
      swift_storeEnumTagMultiPayload();
      uint64_t v26 = type metadata accessor for TranscriptProtoParameterNotAllowed;
      uint64_t v27 = v2;
      break;
    case 6u:
      sub_253A47DFC(v1, (void (*)(void))type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      sub_253A47D48(v25, v3, (void (*)(void))type metadata accessor for TranscriptProtoParameterCandidatesNotFound);
      if (!sub_253A47F1C()) {
        sub_253A46758();
      }
      sub_253A47DA8(v3, v1, (void (*)(void))type metadata accessor for TranscriptProtoParameterCandidatesNotFound);
      sub_253579334();
      swift_storeEnumTagMultiPayload();
      uint64_t v26 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound;
      uint64_t v27 = v3;
      break;
    default:
      uint64_t v26 = type metadata accessor for TranscriptProtoStatementOutcomeEnum;
      uint64_t v27 = v25;
      break;
  }
  sub_253A47DFC(v27, (void (*)(void))v26);
  sub_253465A14();
}

Swift::Void __swiftcall Session.RecoverableError.logFailure()()
{
  sub_2534B3258();
  uint64_t v1 = sub_253B089F0();
  sub_253465998();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v0 + 32);
  unint64_t v8 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_253B08370();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_253B089D0();
  os_log_type_t v10 = sub_253B09D80();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v18 = v1;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v17 = v3;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v20 = v16;
    *(_DWORD *)uint64_t v12 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_253464DF8(v7, v8, &v20);
    sub_253B09E80();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_253460000, v9, v10, "ModelOutputError: %s", v12, 0xCu);
    uint64_t v13 = v16;
    swift_arrayDestroy();
    MEMORY[0x25A269E60](v13, -1, -1);
    MEMORY[0x25A269E60](v12, -1, -1);

    sub_2534659CC();
    v14();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
  }
  sub_253465A14();
}

uint64_t sub_253A477B8(uint64_t a1)
{
  uint64_t v51 = sub_253B08E50();
  uint64_t v2 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v49 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_253462A5C(&qword_269CE2490);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v54 = (uint64_t)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v55 = (uint64_t)&v48 - v7;
  uint64_t v8 = type metadata accessor for TranscriptProtoActionParameterValue(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v59 = (uint64_t)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v62 = (uint64_t)&v48 - v12;
  sub_253462A5C(&qword_269CE84A8);
  uint64_t result = sub_253B0A230();
  uint64_t v14 = (void *)result;
  int64_t v15 = 0;
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v56 = a1 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  uint64_t v50 = (void (**)(char *, uint64_t, uint64_t))(v2 + 32);
  int64_t v57 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v58 = result + 64;
  uint64_t v52 = v9;
  uint64_t v53 = a1;
  if ((v18 & v16) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v20 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  int64_t v60 = v15;
  for (unint64_t i = v20 | (v15 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v24 << 6))
  {
    uint64_t v26 = *(void *)(a1 + 56);
    uint64_t v27 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v28 = v27[1];
    uint64_t v61 = *v27;
    unint64_t v29 = *(void *)(v9 + 72) * i;
    uint64_t v30 = a1;
    uint64_t v31 = v9;
    uint64_t v32 = v62;
    sub_253A47DA8(v26 + v29, v62, (void (*)(void))type metadata accessor for TranscriptProtoActionParameterValue);
    uint64_t v33 = v59;
    sub_253A47DA8(v32, v59, (void (*)(void))type metadata accessor for TranscriptProtoActionParameterValue);
    uint64_t v34 = type metadata accessor for TranscriptProtoToolParameterValue(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v33, 1, v34))
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = v31;
      a1 = v30;
      goto LABEL_28;
    }
    uint64_t v35 = v55;
    sub_2534B45B0(v33, v55, &qword_269CE2490);
    uint64_t v36 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
    int v37 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v35, 1, v36);
    uint64_t v38 = v54;
    if (v37 == 1)
    {
      swift_bridgeObjectRetain();
      a1 = v53;
      uint64_t v39 = v35;
LABEL_26:
      uint64_t v9 = v52;
      uint64_t v33 = v59;
      goto LABEL_27;
    }
    sub_2534B45B0(v35, v54, &qword_269CE2490);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      swift_bridgeObjectRetain();
      sub_253A47DFC(v38, (void (*)(void))type metadata accessor for TranscriptProtoToolParameterValueEnum);
      a1 = v53;
      uint64_t v39 = v55;
      goto LABEL_26;
    }
    uint64_t v40 = v49;
    unint64_t v41 = *v50;
    (*v50)(v49, v54, v51);
    swift_bridgeObjectRetain();
    sub_253A46758();
    uint64_t v42 = v59;
    sub_253472458(v59, &qword_269CE2490);
    uint64_t v43 = v40;
    uint64_t v33 = v42;
    v41((char *)v42, (uint64_t)v43, v51);
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v42, 0, 1, v36);
    uint64_t v9 = v52;
    a1 = v53;
    uint64_t v39 = v55;
LABEL_27:
    sub_253472458(v39, &qword_269CE2490);
LABEL_28:
    sub_253A47DFC(v62, (void (*)(void))type metadata accessor for TranscriptProtoActionParameterValue);
    *(void *)(v58 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v44 = (void *)(v14[6] + 16 * i);
    void *v44 = v61;
    v44[1] = v28;
    uint64_t result = sub_253A47D48(v33, v14[7] + v29, (void (*)(void))type metadata accessor for TranscriptProtoActionParameterValue);
    uint64_t v45 = v14[2];
    BOOL v46 = __OFADD__(v45, 1);
    uint64_t v47 = v45 + 1;
    if (v46)
    {
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    void v14[2] = v47;
    int64_t v15 = v60;
    if (v19) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      goto LABEL_33;
    }
    if (v22 >= v57) {
      return (uint64_t)v14;
    }
    unint64_t v23 = *(void *)(v56 + 8 * v22);
    int64_t v24 = v15 + 1;
    if (!v23)
    {
      int64_t v24 = v15 + 2;
      if (v15 + 2 >= v57) {
        return (uint64_t)v14;
      }
      unint64_t v23 = *(void *)(v56 + 8 * v24);
      if (!v23)
      {
        int64_t v24 = v15 + 3;
        if (v15 + 3 >= v57) {
          return (uint64_t)v14;
        }
        unint64_t v23 = *(void *)(v56 + 8 * v24);
        if (!v23) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v19 = (v23 - 1) & v23;
    int64_t v60 = v24;
  }
  uint64_t v25 = v15 + 4;
  if (v15 + 4 >= v57) {
    return (uint64_t)v14;
  }
  unint64_t v23 = *(void *)(v56 + 8 * v25);
  if (v23)
  {
    int64_t v24 = v15 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v24 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v24 >= v57) {
      return (uint64_t)v14;
    }
    unint64_t v23 = *(void *)(v56 + 8 * v24);
    ++v25;
    if (v23) {
      goto LABEL_18;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_253A47D48(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25346CAF4();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_253A47DA8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25346CAF4();
  uint64_t v4 = sub_2534B4668();
  v5(v4);
  return a2;
}

uint64_t sub_253A47DFC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_25346CAF4();
  sub_2534659CC();
  v3();
  return a1;
}

uint64_t sub_253A47E50()
{
  return 0;
}

uint64_t sub_253A47E68(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v1, 1, a1);
}

BOOL sub_253A47E84@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_253A47E94()
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v0, 0, 1, v1);
}

uint64_t sub_253A47EB4()
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(*(void *)(v0 - 432), 1, *(void *)(v0 - 416));
}

uint64_t sub_253A47EE8()
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(*(void *)(v0 - 432), 1, *(void *)(v0 - 416));
}

uint64_t sub_253A47F1C()
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v0, 1, v1);
}

uint64_t sub_253A47F48()
{
  return 0;
}

uint64_t sub_253A47F70()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_253A47F88()
{
  return v0 - 120;
}

uint64_t sub_253A47FA8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_2539E8A24(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = *(void *)(sub_253B059D0() - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      int v7 = sub_253B059C0();
      unint64_t v9 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      if (v9 >= v8 >> 1) {
        sub_2539E8A24(v8 > 1, v9 + 1, 1);
      }
      *(void *)(v11 + 16) = v9 + 1;
      *(_DWORD *)(v11 + 4 * v9 + 32) = v7;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_253A480D4()
{
  sub_2534847F8();
  uint64_t v39 = v1;
  uint64_t v40 = v2;
  uint64_t v52 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v49 = v7;
  uint64_t v50 = v8;
  sub_2534727C4();
  uint64_t v38 = v9;
  MEMORY[0x270FA5388](v10);
  sub_25346CB04();
  uint64_t v51 = v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_2534727C4();
  uint64_t v44 = v12;
  sub_253963118();
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v17 = v6 - 8;
  MEMORY[0x270FA5388](v14);
  sub_2534835B0();
  sub_253A56CEC();
  swift_getAssociatedTypeWitness();
  sub_2534727C4();
  uint64_t v41 = v19;
  uint64_t v42 = v18;
  MEMORY[0x270FA5388](v18);
  sub_2534659D8();
  uint64_t v37 = v20;
  sub_2534B324C();
  MEMORY[0x270FA5388](v21);
  sub_2534D9EC0();
  uint64_t v22 = sub_253B09CA0();
  if (!v22)
  {
    sub_253B09B00();
LABEL_9:
    sub_2534847C8();
    return;
  }
  uint64_t v23 = v22;
  sub_253B0A130();
  uint64_t v43 = sub_253B0A140();
  sub_253B0A0E0();
  uint64_t v47 = v4;
  sub_253B09C80();
  if ((v23 & 0x8000000000000000) == 0)
  {
    uint64_t v45 = v44 + 16;
    uint64_t v46 = v17;
    v44 += 8;
    while (1)
    {
      int64_t v24 = (void (*)(uint64_t))sub_253B09D30();
      sub_2534B3428();
      v25();
      uint64_t v26 = sub_253A56734();
      v24(v26);
      uint64_t v27 = v52;
      v49(v16, v51);
      if (v27) {
        break;
      }
      uint64_t v52 = 0;
      sub_2534659CC();
      v28();
      sub_253B0A120();
      sub_253B09CD0();
      if (!--v23)
      {
        uint64_t v29 = v41;
        uint64_t v30 = v42;
        uint64_t v31 = v37;
        sub_25347FA84();
        v32();
        sub_253B09F90();
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v30);
        goto LABEL_9;
      }
    }
    sub_2534659CC();
    v33();
    sub_2534659CC();
    v34();
    swift_release();
    sub_2534D8E14();
    v35();
    goto LABEL_9;
  }
  __break(1u);
}

void TailTranscriptProtocol.firstUnusedStatementIdIndex.getter()
{
  sub_2534B3258();
  uint64_t v9 = v1;
  sub_253A5691C();
  sub_25346CAF4();
  sub_253963118();
  MEMORY[0x270FA5388](v2);
  sub_253A5674C();
  swift_getWitnessTable();
  sub_253A56CF8();
  sub_253B0A200();
  sub_2534727C4();
  sub_253963118();
  MEMORY[0x270FA5388](v3);
  sub_253A56BAC();
  sub_25347907C(&qword_269CE84C0);
  swift_getWitnessTable();
  sub_253A56A2C();
  sub_253B0A150();
  swift_getWitnessTable();
  sub_253B0A1E0();
  swift_getWitnessTable();
  sub_253A56998();
  sub_253B0A150();
  sub_2534727C4();
  sub_253963118();
  MEMORY[0x270FA5388](v4);
  sub_253A56BBC();
  MEMORY[0x25A268990](v9, v0);
  sub_253B09690();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_253B0A270();
  uint64_t v5 = sub_2534DA498();
  v6(v5);
  sub_2536D5500();
  swift_getWitnessTable();
  sub_253B099C0();
  sub_2534F85D4();
  v7();
  int v8 = v10;
  if (v11) {
    int v8 = 0;
  }
  if (v8 == -1) {
    __break(1u);
  }
  else {
    sub_253465A14();
  }
}

void TailTranscriptProtocol.latestQueryEvent()()
{
  sub_2534B3258();
  uint64_t v21 = v0;
  uint64_t v22 = v1;
  uint64_t v3 = v2;
  uint64_t v23 = v4;
  uint64_t v5 = *(void *)(*(void *)(*(void *)(v1 + 8) + 8) + 8);
  sub_253A56A2C();
  v19[1] = v5;
  sub_253B06760();
  swift_getWitnessTable();
  sub_253A56C74();
  sub_253B0A020();
  sub_25346CAF4();
  sub_253963118();
  MEMORY[0x270FA5388](v6);
  sub_253A56880();
  sub_2534727C4();
  sub_253963118();
  MEMORY[0x270FA5388](v7);
  sub_253A56D10();
  sub_253A56C74();
  sub_253B0A1E0();
  sub_2534727C4();
  uint64_t v20 = v8;
  MEMORY[0x270FA5388](v9);
  v19[0] = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v11);
  sub_2536D414C();
  sub_253B09C90();
  uint64_t v12 = sub_253A3D030();
  MEMORY[0x25A268990](v12);
  sub_253A56C4C();
  sub_2534DA4BC();
  v13();
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = v22;
  *(void *)(v14 + 16) = v3;
  *(void *)(v14 + 24) = v15;
  swift_getWitnessTable();
  sub_253B0A280();
  swift_release();
  swift_getWitnessTable();
  sub_253B0A290();
  uint64_t v16 = *(void (**)(void))(v20 + 8);
  sub_25351C384();
  v16();
  void v28[2] = v3;
  v28[3] = v15;
  uint64_t v24 = v3;
  uint64_t v25 = v15;
  uint64_t v26 = sub_253A4E1DC;
  uint64_t v27 = v28;
  swift_getAssociatedTypeWitness();
  sub_253B055C0();
  type metadata accessor for Session.Event(255);
  sub_253A56CF8();
  swift_getTupleTypeMetadata3();
  swift_getWitnessTable();
  sub_25394D850();
  uint64_t v18 = v17;
  sub_25351C384();
  v16();
  v28[4] = v18;
  sub_253A56CF8();
  sub_253B09B80();
  swift_getWitnessTable();
  sub_253B09680();
  swift_bridgeObjectRelease();
  sub_253465A14();
}

uint64_t TailTranscriptProtocol.latestQuery()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_253A56AB4();
  swift_getAssociatedTypeWitness();
  sub_253B055C0();
  type metadata accessor for Session.Event(255);
  swift_getTupleTypeMetadata3();
  sub_253B09E00();
  sub_2534727C4();
  sub_253963118();
  MEMORY[0x270FA5388](v6);
  sub_253A5674C();
  sub_2534D973C();
  TailTranscriptProtocol.latestQueryEvent()();
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  uint64_t v12 = a1;
  uint64_t v13 = a2;
  uint64_t v14 = sub_253A4E208;
  uint64_t v15 = &v16;
  sub_253A56CEC();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_253A4AB38((void (*)(char *, char *))sub_253A4E210, (uint64_t)v11, MEMORY[0x263F8E628], TupleTypeMetadata2, v8, a3);
  sub_2534F85D4();
  return v9();
}

void TailTranscriptProtocol.event(forId:)()
{
  sub_2534B3258();
  uint64_t v42 = v2;
  uint64_t v43 = v0;
  uint64_t v4 = v3;
  v38[1] = v5;
  uint64_t v6 = type metadata accessor for Session.Event(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v7);
  uint64_t v41 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_2534727C4();
  uint64_t v11 = v10;
  sub_253963118();
  MEMORY[0x270FA5388](v12);
  sub_253A56880();
  v38[0] = v6;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_253A56B6C();
  uint64_t v44 = sub_253B09E00();
  sub_2534727C4();
  uint64_t v39 = v14;
  MEMORY[0x270FA5388](v15);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v16);
  sub_2536D414C();
  sub_253B06760();
  sub_25346CAF4();
  sub_253963118();
  MEMORY[0x270FA5388](v17);
  sub_253A56D24();
  sub_253B09C90();
  swift_getWitnessTable();
  uint64_t v18 = AssociatedTypeWitness;
  uint64_t v19 = sub_253B099B0();
  uint64_t v20 = sub_253B09A70();
  uint64_t v46 = v20;
  uint64_t v40 = TupleTypeMetadata2 - 8;
  uint64_t v21 = (void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32);
  uint64_t v43 = (void (**)(void))(v11 + 32);
  while (1)
  {
    if (v20 == MEMORY[0x25A268B60](v19, TupleTypeMetadata2))
    {
      uint64_t v22 = sub_2535792A4();
      goto LABEL_7;
    }
    uint64_t v24 = v18;
    char v25 = sub_253B09B20();
    sub_253B09AC0();
    if ((v25 & 1) == 0) {
      break;
    }
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 16))(v1, v19+ ((*(unsigned __int8 *)(*(void *)(TupleTypeMetadata2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(TupleTypeMetadata2 - 8) + 80))+ *(void *)(*(void *)(TupleTypeMetadata2 - 8) + 72) * v20, TupleTypeMetadata2);
LABEL_6:
    uint64_t v18 = v24;
    swift_bridgeObjectRetain();
    sub_253A56C40();
    MEMORY[0x25A268B70]();
    swift_bridgeObjectRelease();
    uint64_t v22 = v1;
    uint64_t v23 = 0;
LABEL_7:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v22, v23, 1, TupleTypeMetadata2);
    (*v21)(v4, v1, v44);
    uint64_t v26 = sub_2539627D4();
    sub_2534D8B48(v26, v27, TupleTypeMetadata2);
    if (v28)
    {
      swift_bridgeObjectRelease();
      sub_253A56CCC();
      sub_253465A98();
LABEL_14:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v34, v35, v36, v37);
      sub_253465A14();
      return;
    }
    uint64_t v29 = *v43;
    sub_25347FA84();
    v29();
    uint64_t v30 = (uint64_t)v41;
    sub_253A565F8();
    if (sub_253B055A0())
    {
      swift_bridgeObjectRelease();
      sub_253A56CCC();
      sub_25347FA84();
      v29();
      sub_253A565F8();
      sub_253A56AE8();
      goto LABEL_14;
    }
    sub_253A5664C(v30, (void (*)(void))type metadata accessor for Session.Event);
    sub_2534DA4BC();
    v31();
    uint64_t v20 = v46;
  }
  sub_253A56C40();
  uint64_t v32 = sub_253B0A050();
  if (*(void *)(*(void *)(TupleTypeMetadata2 - 8) + 64) == 8)
  {
    uint64_t v45 = v32;
    sub_2534B3428();
    v33();
    swift_unknownObjectRelease();
    goto LABEL_6;
  }
  __break(1u);
}

Swift::OpaquePointer_optional __swiftcall TailTranscriptProtocol.latestSpeechQuery()()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  sub_253A56AB4();
  swift_getAssociatedTypeWitness();
  sub_253B055C0();
  type metadata accessor for Session.Event(255);
  swift_getTupleTypeMetadata3();
  sub_253B09E00();
  sub_2534727C4();
  sub_253963118();
  MEMORY[0x270FA5388](v4);
  sub_253A56D24();
  sub_25351C5CC();
  TailTranscriptProtocol.latestQueryEvent()();
  uint64_t v12 = v3;
  uint64_t v13 = v2;
  uint64_t v5 = sub_253462A5C(&qword_269CE5F30);
  sub_253A4AB38((void (*)(char *, char *))sub_253A561A4, (uint64_t)v11, MEMORY[0x263F8E628], v5, v6, (uint64_t)&v14);
  uint64_t v7 = sub_2534D9B10();
  v8(v7);
  uint64_t v10 = v14;
  result.value._rawValue = v10;
  result.is_nil = v9;
  return result;
}

Swift::Int __swiftcall TailTranscriptProtocol.countClientSentEvents()()
{
  sub_2534B3258();
  sub_253B0A020();
  sub_25346CAF4();
  sub_253963118();
  MEMORY[0x270FA5388](v0);
  sub_253A56A98();
  sub_253B0A1E0();
  sub_2534727C4();
  sub_253963118();
  MEMORY[0x270FA5388](v1);
  sub_253A5674C();
  uint64_t v2 = sub_2534D9718();
  MEMORY[0x25A268990](v2);
  swift_getWitnessTable();
  sub_253B0A280();
  swift_getWitnessTable();
  sub_253B09CF0();
  uint64_t v3 = sub_253578D38();
  v4(v3);
  sub_253465A14();
  return result;
}

Swift::String_optional __swiftcall TailTranscriptProtocol.latestClientIdentifier()()
{
  sub_2534B3258();
  uint64_t v23 = v0;
  uint64_t v2 = v1;
  v22[3] = *(void *)(*(void *)(v3 + 8) + 8);
  sub_253A56BF0();
  sub_253B0A200();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_253A56CF8();
  v22[0] = WitnessTable;
  v22[4] = sub_253B0A020();
  sub_2534727C4();
  uint64_t v24 = v5;
  sub_253963118();
  MEMORY[0x270FA5388](v6);
  sub_253A56BBC();
  sub_2534727C4();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534727C4();
  sub_253963118();
  MEMORY[0x270FA5388](v12);
  sub_253A5674C();
  sub_25347907C(&qword_269CE8418);
  v22[1] = sub_253B0A150();
  swift_getWitnessTable();
  sub_253B0A1E0();
  swift_getWitnessTable();
  sub_253B0A150();
  sub_2534727C4();
  v22[2] = v13;
  sub_253963118();
  MEMORY[0x270FA5388](v14);
  sub_253A56BAC();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v23, v2);
  sub_253B09690();
  uint64_t v15 = sub_253A56BE4();
  MEMORY[0x25A268990](v15, v22[0]);
  sub_253578D38();
  sub_25347FB18();
  v16();
  swift_getWitnessTable();
  sub_253B0A270();
  sub_2534659CC();
  v17();
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v25 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_253B09D00();
  sub_2534659CC();
  v18();
  sub_253465A14();
  result.value._object = v20;
  result.value._countAndFlagsBits = v19;
  return result;
}

void __swiftcall TailTranscriptProtocol.latestPlan()(IntelligenceFlowPlannerSupport::Session::Plan_optional *__return_ptr retstr)
{
  sub_2534B3258();
  uint64_t v3 = v2;
  sub_253A56AB4();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_253A56A2C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v6 = sub_253B09E00();
  sub_2534727C4();
  uint64_t v8 = v7;
  sub_253963118();
  MEMORY[0x270FA5388](v9);
  sub_253A56BBC();
  TailTranscriptProtocol.latestPlanAndIndex()();
  uint64_t v10 = sub_2536D3ACC();
  sub_2534D8B48(v10, v11, TupleTypeMetadata2);
  if (v12)
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v6);
    *(_OWORD *)(v3 + 41) = 0u;
    *(_OWORD *)(v3 + 16) = 0u;
    *(_OWORD *)(v3 + 32) = 0u;
    *(_OWORD *)uint64_t v3 = 0u;
  }
  else
  {
    uint64_t v13 = v1 + *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v14 = *(void *)(v13 + 16);
    char v15 = *(unsigned char *)(v13 + 56);
    *(_OWORD *)uint64_t v3 = *(_OWORD *)v13;
    *(void *)(v3 + 16) = v14;
    *(_OWORD *)(v3 + 24) = *(_OWORD *)(v13 + 24);
    *(_OWORD *)(v3 + 40) = *(_OWORD *)(v13 + 40);
    *(unsigned char *)(v3 + 56) = v15;
    sub_25347B88C();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v1, AssociatedTypeWitness);
  }
  sub_253465A14();
}

void TailTranscriptProtocol.clientActionStepExists(id:)()
{
  sub_2534B3258();
  uint64_t v60 = v2;
  uint64_t v61 = v0;
  uint64_t v4 = v3;
  uint64_t v57 = type metadata accessor for Session.Event.Payload(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  sub_25346CB04();
  uint64_t v56 = v6;
  uint64_t v55 = sub_253A569A4();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v7);
  uint64_t v58 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  sub_253A56C8C(v10, v11, v12, v13, v14, v15, v16, v17, v51);
  uint64_t v18 = *(void *)(*(void *)(v4 + 8) + 8);
  uint64_t v52 = *(void *)(v18 + 8);
  swift_getAssociatedTypeWitness();
  sub_2534727C4();
  uint64_t v63 = v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v62 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v22);
  sub_2534727C4();
  uint64_t v24 = v23;
  uint64_t v51 = v23;
  MEMORY[0x270FA5388](v25);
  sub_253A569BC();
  uint64_t v26 = sub_253B0A200();
  sub_25346CB4C(v26);
  sub_253963118();
  MEMORY[0x270FA5388](v27);
  sub_253A56804();
  sub_253B0A1F0();
  sub_2534727C4();
  uint64_t v53 = v29;
  uint64_t v54 = v28;
  MEMORY[0x270FA5388](v28);
  sub_2534727F8();
  MEMORY[0x270FA5388](v30);
  sub_2534D97C0();
  uint64_t v31 = *(void (**)(void))(v24 + 16);
  sub_253A56890();
  v31();
  uint64_t v59 = v18;
  uint64_t v32 = v52;
  sub_253B09690();
  sub_253A56890();
  v31();
  sub_2534D9AA0();
  sub_253B09CC0();
  sub_2534659CC();
  v33();
  sub_253A56A6C();
  sub_25347FA84();
  v34();
  sub_25347FA84();
  v35();
  sub_253A56D38();
  uint64_t v37 = (void (**)(void))(v36 - 8);
  while (1)
  {
    sub_2534AF234();
    v38();
    sub_2534D9AA0();
    sub_253B09C80();
    sub_25351C5C0();
    swift_getAssociatedConformanceWitness();
    char v39 = sub_253B096B0();
    uint64_t v40 = *v37;
    sub_2534D9A08();
    v40();
    sub_2534D9A08();
    v40();
    if (v39) {
      break;
    }
    sub_253B09670();
    uint64_t v41 = v32;
    uint64_t v42 = sub_253B09D30();
    sub_253A56A38(v42, v43);
    sub_253A566A0();
    uint64_t v44 = sub_253A56B94();
    v1(v44);
    uint64_t v45 = (uint64_t)v58;
    sub_253A565F8();
    if (sub_253B055A0())
    {
      uint64_t v46 = v56;
      sub_253A566A0();
      sub_253A5664C(v45, (void (*)(void))type metadata accessor for Session.Event);
      if (swift_getEnumCaseMultiPayload() == 7)
      {
        sub_2534659CC();
        v49();
        sub_253A5664C(v46, (void (*)(void))type metadata accessor for Session.Event.Payload);
        goto LABEL_9;
      }
      uint64_t v47 = type metadata accessor for Session.Event.Payload;
      uint64_t v48 = v46;
    }
    else
    {
      uint64_t v47 = type metadata accessor for Session.Event;
      uint64_t v48 = v45;
    }
    sub_253A5664C(v48, (void (*)(void))v47);
    uint64_t v32 = v41;
  }
  sub_2534659CC();
  v50();
LABEL_9:
  sub_253465A14();
}

uint64_t sub_253A49D70(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Session.Event.Payload(0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v19 - v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for Session.Event(255);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v10 = MEMORY[0x270FA5388](TupleTypeMetadata2 - 8);
  uint64_t v12 = (char *)&v19 - v11;
  uint64_t v13 = (char *)&v19 + *(int *)(v10 + 56) - v11;
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v19 - v11, a1, AssociatedTypeWitness);
  sub_253A566A0();
  sub_253A566A0();
  sub_253A5664C((uint64_t)v13, (void (*)(void))type metadata accessor for Session.Event);
  sub_253A566A0();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 1) < 3)
  {
    uint64_t v16 = 1;
LABEL_4:
    sub_253A5664C((uint64_t)v5, (void (*)(void))type metadata accessor for Session.Event.Payload);
    uint64_t v17 = v16;
    goto LABEL_5;
  }
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  if (EnumCaseMultiPayload != 48) {
    goto LABEL_4;
  }
LABEL_5:
  sub_253A5664C((uint64_t)v7, (void (*)(void))type metadata accessor for Session.Event.Payload);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v12, AssociatedTypeWitness);
  return v17;
}

uint64_t sub_253A4A008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a4, AssociatedTypeWitness);
  uint64_t v10 = sub_253B055C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a2, a5, v10);
  return sub_253A566A0();
}

uint64_t sub_253A4A100@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for Session.Event(255);
  uint64_t v6 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  sub_253B055C0();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  return a2(a3, a3 + *(int *)(TupleTypeMetadata3 + 48), a3 + *(int *)(TupleTypeMetadata3 + 64), a1, v6);
}

uint64_t sub_253A4A1F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v65 = a1;
  uint64_t v3 = type metadata accessor for RequestContent.TextContent(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v58 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for RequestContent(0);
  MEMORY[0x270FA5388](v60);
  uint64_t v61 = (uint64_t *)((char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v8 = sub_253B09E00();
  uint64_t v63 = *(void *)(v8 - 8);
  uint64_t v64 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v62 = (char *)&v56 - v9;
  uint64_t v10 = sub_253462A5C(&qword_26B249348);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v57 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (uint64_t *)((char *)&v56 - v13);
  uint64_t v15 = type metadata accessor for Request(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v59 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Session.Event.Payload(0);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (uint64_t *)((char *)&v56 - v22);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v56 - v24;
  uint64_t v26 = type metadata accessor for TextQuery(0);
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v28 = (uint64_t *)((char *)&v56 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for Session.Event(0);
  sub_253A566A0();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_253A565F8();
    uint64_t v29 = (void *)(a2 + *(int *)(TupleTypeMetadata2 + 48));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a2, v65, AssociatedTypeWitness);
    uint64_t v31 = *v28;
    uint64_t v30 = v28[1];
    swift_bridgeObjectRetain();
    sub_253A5664C((uint64_t)v28, (void (*)(void))type metadata accessor for TextQuery);
    void *v29 = v31;
    v29[1] = v30;
    uint64_t v32 = a2;
LABEL_11:
    uint64_t v44 = 0;
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v32, v44, 1, TupleTypeMetadata2);
  }
  uint64_t v33 = a2;
  sub_253A5664C((uint64_t)v25, (void (*)(void))type metadata accessor for Session.Event.Payload);
  sub_253A566A0();
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v34 = *v23;
    uint64_t v35 = (void *)(a2 + *(int *)(TupleTypeMetadata2 + 48));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v33, v65, AssociatedTypeWitness);
    sub_2539814AC(v34);
    uint64_t v36 = type metadata accessor for SpeechRequestCandidate(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v36) == 1)
    {
      sub_253472458((uint64_t)v14, &qword_26B249348);
      uint64_t v37 = 0;
      unint64_t v38 = 0xE000000000000000;
    }
    else
    {
      uint64_t v37 = *v14;
      unint64_t v38 = v14[1];
      swift_bridgeObjectRetain();
      sub_253A5664C((uint64_t)v14, (void (*)(void))type metadata accessor for SpeechRequestCandidate);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *uint64_t v35 = v37;
    v35[1] = v38;
    uint64_t v32 = v33;
    goto LABEL_11;
  }
  sub_253A5664C((uint64_t)v23, (void (*)(void))type metadata accessor for Session.Event.Payload);
  sub_253A566A0();
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    sub_253A5664C((uint64_t)v20, (void (*)(void))type metadata accessor for Session.Event.Payload);
    uint64_t v32 = a2;
    uint64_t v44 = 1;
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v32, v44, 1, TupleTypeMetadata2);
  }
  uint64_t v39 = (uint64_t)v59;
  sub_253A565F8();
  uint64_t v40 = v61;
  sub_253A566A0();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v42 = (uint64_t)v62;
  uint64_t v43 = v65;
  switch(EnumCaseMultiPayload)
  {
    case 0:
    case 3:
      sub_253A5664C(v39, (void (*)(void))type metadata accessor for Request);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v42, 1, 1, TupleTypeMetadata2);
      sub_253A5664C((uint64_t)v40, (void (*)(void))type metadata accessor for RequestContent);
      goto LABEL_21;
    case 1:
      sub_253A5664C(v39, (void (*)(void))type metadata accessor for Request);
      uint64_t v46 = (uint64_t *)v58;
      sub_253A565F8();
      uint64_t v47 = (void *)(v42 + *(int *)(TupleTypeMetadata2 + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v42, v43, AssociatedTypeWitness);
      uint64_t v49 = *v46;
      uint64_t v48 = v46[1];
      swift_bridgeObjectRetain();
      sub_253A5664C((uint64_t)v46, (void (*)(void))type metadata accessor for RequestContent.TextContent);
      *uint64_t v47 = v49;
      v47[1] = v48;
      goto LABEL_20;
    case 2:
      uint64_t v50 = *v40;
      uint64_t v51 = &v62[*(int *)(TupleTypeMetadata2 + 48)];
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v62, v65, AssociatedTypeWitness);
      uint64_t v52 = (uint64_t *)v57;
      sub_2539814AC(v50);
      uint64_t v53 = type metadata accessor for SpeechRequestCandidate(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v53) == 1)
      {
        sub_253472458((uint64_t)v52, &qword_26B249348);
        uint64_t v54 = 0;
        unint64_t v55 = 0xE000000000000000;
      }
      else
      {
        uint64_t v54 = *v52;
        unint64_t v55 = v52[1];
        swift_bridgeObjectRetain();
        sub_253A5664C((uint64_t)v52, (void (*)(void))type metadata accessor for SpeechRequestCandidate);
      }
      swift_bridgeObjectRelease();
      sub_253A5664C(v39, (void (*)(void))type metadata accessor for Request);
      *(void *)uint64_t v51 = v54;
      *((void *)v51 + 1) = v55;
LABEL_20:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v42, 0, 1, TupleTypeMetadata2);
LABEL_21:
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 32))(a2, v42, v64);
      break;
    default:
      sub_253B0A4B0();
      __break(1u);
      JUMPOUT(0x253A4AA58);
  }
  return result;
}

uint64_t sub_253A4AA68(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  swift_getAssociatedTypeWitness();
  sub_253B055C0();
  type metadata accessor for Session.Event(255);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata3 + 48), a1 + *(int *)(TupleTypeMetadata3 + 64));
}

uint64_t sub_253A4AB38@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a4;
  uint64_t v27 = a2;
  uint64_t v28 = a1;
  uint64_t v9 = *(void *)(a3 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](a1);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v10);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v22);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v14) == 1) {
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a6, 1, 1, v26);
  }
  uint64_t v26 = v9;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
  v28(v18, v12);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  if (v6) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v25, v12, a3);
  }
  return result;
}

uint64_t sub_253A4ADB0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v22 = type metadata accessor for Session.Event.Payload(0);
  MEMORY[0x270FA5388](v22);
  uint64_t v4 = (void *)((char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_253B055C0();
  v21[2] = type metadata accessor for Session.Event(255);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v8 = MEMORY[0x270FA5388](TupleTypeMetadata3 - 8);
  uint64_t v10 = (char *)v21 - v9;
  uint64_t v11 = *(int *)(v8 + 56);
  uint64_t v12 = &v10[v11];
  uint64_t v13 = *(int *)(v8 + 72);
  uint64_t v14 = (uint64_t)&v10[v13];
  uint64_t v15 = a1 + v11;
  v21[1] = a1 + v13;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v23 = AssociatedTypeWitness;
  v17(v10, a1, AssociatedTypeWitness);
  uint64_t v18 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v12, v15, v6);
  sub_253A566A0();
  sub_253A566A0();
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v19 = *v4;
    sub_253A5664C(v14, (void (*)(void))type metadata accessor for Session.Event);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v12, v6);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v23);
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    sub_253A5664C((uint64_t)v4, (void (*)(void))type metadata accessor for Session.Event.Payload);
    sub_253A5664C(v14, (void (*)(void))type metadata accessor for Session.Event);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v12, v6);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v10, v23);
    uint64_t v19 = 0;
  }
  *uint64_t v24 = v19;
  return result;
}

uint64_t sub_253A4B0E4(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + *(int *)(type metadata accessor for Session.Event(0) + 52));
  uint64_t v2 = v1[1];
  if (!v2) {
    return 0;
  }
  if (*v1 == 0x746E65696C63 && v2 == 0xE600000000000000) {
    return 1;
  }
  return sub_253B0A4C0();
}

uint64_t sub_253A4B178@<X0>(void *a1@<X8>)
{
  type metadata accessor for Session.Event.Payload(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (uint64_t *)((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for Session.Event(0);
  sub_253A566A0();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 11)
  {
    uint64_t v6 = *v4;
    uint64_t v7 = v4[1];
  }
  else
  {
    uint64_t result = sub_253A5664C((uint64_t)v4, (void (*)(void))type metadata accessor for Session.Event.Payload);
    uint64_t v6 = 0;
    uint64_t v7 = 0;
  }
  *a1 = v6;
  a1[1] = v7;
  return result;
}

void TailTranscriptProtocol.latestPlanAndIndex()()
{
  sub_2534B3258();
  uint64_t v52 = v0;
  uint64_t v45 = v1;
  *(void *)&long long v50 = type metadata accessor for Session.Event.Payload(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v2);
  *(void *)&long long v51 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_253A569A4();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  sub_2534D8F68(v6, v44);
  sub_253A56C40();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_2534727C4();
  uint64_t v9 = v8;
  sub_253963118();
  MEMORY[0x270FA5388](v10);
  sub_253A5674C();
  sub_253A56A2C();
  uint64_t v49 = v4;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v53 = sub_253B09E00();
  sub_2534727C4();
  uint64_t v47 = v12;
  MEMORY[0x270FA5388](v13);
  sub_2534727F8();
  uint64_t v16 = v14 - v15;
  MEMORY[0x270FA5388](v17);
  sub_2536D4170();
  sub_253A56B6C();
  sub_253B06760();
  sub_25346CAF4();
  sub_253963118();
  MEMORY[0x270FA5388](v18);
  sub_2534D9A78();
  sub_253B09C90();
  swift_getWitnessTable();
  uint64_t v19 = AssociatedTypeWitness;
  uint64_t v20 = sub_253B099B0();
  uint64_t v21 = sub_253B09A70();
  uint64_t v55 = v21;
  uint64_t v22 = v48;
  uint64_t v52 = (void (**)(void))(v9 + 32);
  uint64_t v46 = TupleTypeMetadata2 - 8;
  uint64_t v47 = v9 + 8;
  while (1)
  {
    if (v21 == MEMORY[0x25A268B60](v20, TupleTypeMetadata2))
    {
      uint64_t v23 = sub_2539627D4();
      goto LABEL_7;
    }
    uint64_t v25 = v19;
    char v26 = sub_253B09B20();
    sub_253B09AC0();
    if ((v26 & 1) == 0) {
      break;
    }
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 16))(v16, v20+ ((*(unsigned __int8 *)(*(void *)(TupleTypeMetadata2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(TupleTypeMetadata2 - 8) + 80))+ *(void *)(*(void *)(TupleTypeMetadata2 - 8) + 72) * v21, TupleTypeMetadata2);
LABEL_6:
    uint64_t v19 = v25;
    swift_bridgeObjectRetain();
    MEMORY[0x25A268B70](&v55, v20, TupleTypeMetadata2);
    swift_bridgeObjectRelease();
    uint64_t v23 = v16;
    uint64_t v24 = 0;
LABEL_7:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v23, v24, 1, TupleTypeMetadata2);
    uint64_t v27 = sub_25351C5C0();
    v28(v27);
    sub_2534D8B48(v4, 1, TupleTypeMetadata2);
    if (v29)
    {
      swift_bridgeObjectRelease();
      swift_getTupleTypeMetadata2();
      sub_253465A98();
LABEL_14:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v35, v36, v37, v38);
      sub_253465A14();
      return;
    }
    uint64_t v30 = *v52;
    sub_25347FA84();
    v30();
    sub_2534DA498();
    sub_253A565F8();
    uint64_t v31 = v51;
    sub_253A566A0();
    sub_253A5664C(v22, (void (*)(void))type metadata accessor for Session.Event);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      swift_bridgeObjectRelease();
      long long v50 = *(_OWORD *)v31;
      uint64_t v39 = *(void *)(v31 + 16);
      uint64_t v40 = *(void *)(v31 + 48);
      uint64_t v53 = *(void *)(v31 + 40);
      uint64_t v41 = v31;
      char v42 = *(unsigned char *)(v31 + 56);
      uint64_t v43 = v45 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      long long v51 = *(_OWORD *)(v41 + 24);
      sub_25347FA84();
      v30();
      *(_OWORD *)uint64_t v43 = v50;
      *(void *)(v43 + 16) = v39;
      *(_OWORD *)(v43 + 24) = v51;
      *(void *)(v43 + 40) = v53;
      *(void *)(v43 + 48) = v40;
      *(unsigned char *)(v43 + 56) = v42;
      sub_253A56AE8();
      goto LABEL_14;
    }
    sub_2534659CC();
    v32();
    sub_253A5664C(v31, (void (*)(void))type metadata accessor for Session.Event.Payload);
    uint64_t v21 = v55;
  }
  uint64_t v33 = sub_253B0A050();
  if (*(void *)(*(void *)(TupleTypeMetadata2 - 8) + 64) == 8)
  {
    uint64_t v54 = v33;
    sub_2534B3428();
    v34();
    swift_unknownObjectRelease();
    goto LABEL_6;
  }
  __break(1u);
}

Swift::Bool __swiftcall TailTranscriptProtocol.isSafetyModeEnabled()()
{
  sub_2534B3258();
  uint64_t v59 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v57 = type metadata accessor for Request(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v7);
  uint64_t v56 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253483660();
  uint64_t v10 = type metadata accessor for TextQuery(v9);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  uint64_t v55 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for Session.Event.Payload(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v13);
  uint64_t v65 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_253A569A4();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v15);
  sub_25346CB04();
  sub_253A56C34(v16);
  uint64_t v17 = *(void *)(*(void *)(v4 + 8) + 8);
  swift_getAssociatedTypeWitness();
  sub_2534727C4();
  uint64_t v68 = v18;
  MEMORY[0x270FA5388](v19);
  sub_2534727F8();
  MEMORY[0x270FA5388](v20);
  sub_2534727C4();
  uint64_t v22 = v21;
  uint64_t v58 = v21;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v55 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253A56998();
  uint64_t v67 = v17;
  uint64_t v26 = sub_253B0A200();
  sub_25346CB4C(v26);
  sub_253963118();
  MEMORY[0x270FA5388](v27);
  sub_253A56880();
  sub_253A56998();
  sub_253B0A1F0();
  sub_2534727C4();
  uint64_t v60 = v29;
  uint64_t v61 = v28;
  MEMORY[0x270FA5388](v28);
  uint64_t v66 = (char *)&v55 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v31);
  sub_2534D9EC0();
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v32(v25, v59, v6);
  sub_253B09690();
  v32(v66, v2, v6);
  sub_25351C5C0();
  sub_253B09CC0();
  sub_2534659CC();
  v33();
  sub_253A56A6C();
  sub_25347FA84();
  v34();
  sub_2535791D8();
  sub_25347FA84();
  v35();
  sub_253A56D38();
  uint64_t v37 = (void (**)(void))(v36 - 8);
  while (1)
  {
    sub_2534AF234();
    v38();
    sub_25351C5C0();
    sub_253B09C80();
    sub_2534D9AA0();
    swift_getAssociatedConformanceWitness();
    sub_2536D42A4();
    char v39 = sub_253B096B0();
    uint64_t v40 = *v37;
    sub_25351C384();
    v40();
    sub_25351C384();
    v40();
    if (v39) {
      break;
    }
    sub_253B09670();
    sub_253A56C74();
    uint64_t v41 = sub_253B09D30();
    sub_253A56A38(v41, v42);
    uint64_t v43 = v62;
    sub_253A566A0();
    uint64_t v44 = sub_253A56B94();
    v1(v44);
    uint64_t v45 = (uint64_t)v65;
    sub_253A566A0();
    sub_253A5664C(v43, (void (*)(void))type metadata accessor for Session.Event);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 1:
        sub_2534659CC();
        v47();
        uint64_t v48 = (uint64_t)v55;
        sub_253A565F8();
        uint64_t v49 = type metadata accessor for TextQuery;
LABEL_11:
        sub_253A5664C(v48, (void (*)(void))v49);
        goto LABEL_13;
      case 25:
        sub_2534659CC();
        v50();
        sub_253A5664C(v45, (void (*)(void))type metadata accessor for Session.Event.Payload);
        goto LABEL_13;
      case 3:
        sub_2534659CC();
        v51();
        uint64_t v48 = (uint64_t)v56;
        sub_253A565F8();
        uint64_t v49 = type metadata accessor for Request;
        goto LABEL_11;
      case 2:
        sub_2534659CC();
        v52();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_13;
    }
    sub_253A5664C(v45, (void (*)(void))type metadata accessor for Session.Event.Payload);
  }
  sub_2534659CC();
  v54();
LABEL_13:
  sub_253465A14();
  return result;
}

void TailTranscriptProtocol.latestToolRetrievalResponse()()
{
  sub_2534B3258();
  sub_253A567D4(v0, v1);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_253A56828(WitnessTable);
  sub_2534727C4();
  sub_253963118();
  MEMORY[0x270FA5388](v3);
  sub_2534727C4();
  MEMORY[0x270FA5388](v4);
  sub_2534727C4();
  sub_253963118();
  MEMORY[0x270FA5388](v5);
  sub_253A56804();
  sub_25347907C(&qword_269CE84C8);
  uint64_t v6 = sub_253A568FC();
  sub_253A56C28(v6);
  swift_getWitnessTable();
  sub_253A568E0();
  swift_getWitnessTable();
  sub_253B0A150();
  sub_2534727C4();
  sub_253963118();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_253A5675C();
  v9(v8);
  sub_253A56B04();
  sub_253A56A0C();
  sub_2534D9A08();
  v10();
  swift_getWitnessTable();
  sub_253A56A78();
  sub_253B0A270();
  sub_2534659CC();
  v11();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v12 = sub_253A56BCC();
  sub_253A568B4(v12);
  sub_253A5694C();
  sub_2534659CC();
  v13();
  sub_253465A14();
}

uint64_t sub_253A4C0C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDBB30);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_253B08270();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DecorationResult = type metadata accessor for QueryDecorationResult(0);
  MEMORY[0x270FA5388](DecorationResult);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Session.Event.Payload(0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Session.Event(0);
  sub_253A566A0();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 42)
  {
    sub_253A565F8();
    sub_2534D88A0((uint64_t)&v11[*(int *)(DecorationResult + 28)], (uint64_t)v4, &qword_269CDBB30);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v5) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      uint64_t v16 = sub_253B08220();
      uint64_t v17 = v23;
      uint64_t v18 = sub_253B08230();
      uint64_t v19 = v24;
      sub_253B08240();
      unsigned int v26 = v25;
      uint64_t v27 = sub_253B08250();
      uint64_t v30 = v5;
      uint64_t v28 = v6;
      uint64_t v21 = v27;
      uint64_t v22 = sub_253B08260();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v30);
      uint64_t result = sub_253A5664C((uint64_t)v11, (void (*)(void))type metadata accessor for QueryDecorationResult);
      unsigned int v20 = v26;
      goto LABEL_9;
    }
    sub_253A5664C((uint64_t)v11, (void (*)(void))type metadata accessor for QueryDecorationResult);
    uint64_t result = sub_253472458((uint64_t)v4, &qword_269CDBB30);
    goto LABEL_7;
  }
  if (result != 28)
  {
    uint64_t result = sub_253A5664C((uint64_t)v14, (void (*)(void))type metadata accessor for Session.Event.Payload);
LABEL_7:
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    unsigned int v20 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    goto LABEL_9;
  }
  uint64_t v16 = *(void *)v14;
  uint64_t v17 = *((void *)v14 + 1);
  uint64_t v18 = *((void *)v14 + 2);
  uint64_t v19 = *((void *)v14 + 3);
  unsigned int v20 = *((_DWORD *)v14 + 8);
  uint64_t v21 = *((void *)v14 + 5);
  uint64_t v22 = *((void *)v14 + 6);
LABEL_9:
  *a1 = v16;
  a1[1] = v17;
  a1[2] = v18;
  a1[3] = v19;
  a1[4] = v20;
  a1[5] = v21;
  a1[6] = v22;
  return result;
}

void TailTranscriptProtocol.latestToolResolution.getter()
{
}

uint64_t sub_253A4C460@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Session.Event.Payload(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Session.Event(0);
  sub_253A566A0();
  if (swift_getEnumCaseMultiPayload() == 37)
  {
    sub_253A565F8();
    uint64_t v5 = type metadata accessor for ToolResolution(0);
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v5);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ToolResolution(0);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 1, 1, v7);
    return sub_253A5664C((uint64_t)v4, (void (*)(void))type metadata accessor for Session.Event.Payload);
  }
}

void TailTranscriptProtocol.latestToolEvent.getter()
{
}

uint64_t sub_253A4C5C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Session.Event.Payload(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Session.Event(0);
  sub_253A566A0();
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload > 0x2A || ((1 << EnumCaseMultiPayload) & 0x42010000000) == 0)
  {
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 1, 1, v5);
    return sub_253A5664C((uint64_t)v4, (void (*)(void))type metadata accessor for Session.Event.Payload);
  }
  else
  {
    sub_253A5664C((uint64_t)v4, (void (*)(void))type metadata accessor for Session.Event.Payload);
    sub_253A566A0();
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v5);
  }
}

void TailTranscriptProtocol.latestEntitySpanMatchResult()()
{
  sub_2534B3258();
  sub_253A567D4(v0, v1);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_253A56828(WitnessTable);
  sub_2534727C4();
  sub_253963118();
  MEMORY[0x270FA5388](v3);
  sub_2534727C4();
  MEMORY[0x270FA5388](v4);
  sub_2534727C4();
  sub_253963118();
  MEMORY[0x270FA5388](v5);
  sub_253A56804();
  sub_25347907C(&qword_269CE84D8);
  uint64_t v6 = sub_253A568FC();
  sub_253A56C28(v6);
  swift_getWitnessTable();
  sub_253A568E0();
  swift_getWitnessTable();
  sub_253B0A150();
  sub_2534727C4();
  sub_253963118();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_253A5675C();
  v9(v8);
  sub_253A56B04();
  sub_253A56A0C();
  sub_2534D9A08();
  v10();
  swift_getWitnessTable();
  sub_253A56A78();
  sub_253B0A270();
  sub_2534659CC();
  v11();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v12 = sub_253A56BCC();
  sub_253A568B4(v12);
  sub_253A5694C();
  sub_2534659CC();
  v13();
  sub_253465A14();
}

uint64_t sub_253A4C9FC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Session.Event.Payload(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (uint64_t *)((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for Session.Event(0);
  sub_253A566A0();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 29)
  {
    uint64_t v6 = *v4;
  }
  else
  {
    uint64_t result = sub_253A5664C((uint64_t)v4, (void (*)(void))type metadata accessor for Session.Event.Payload);
    uint64_t v6 = 0;
  }
  *a1 = v6;
  return result;
}

void TailTranscriptProtocol.latestEntitySpanMatchedEvent()()
{
}

uint64_t sub_253A4CB18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Session.Event.Payload(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Session.Event(0);
  sub_253A566A0();
  if (swift_getEnumCaseMultiPayload() == 29)
  {
    sub_253A5664C((uint64_t)v4, (void (*)(void))type metadata accessor for Session.Event.Payload);
    sub_253A566A0();
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v5);
  }
  else
  {
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 1, 1, v5);
    return sub_253A5664C((uint64_t)v4, (void (*)(void))type metadata accessor for Session.Event.Payload);
  }
}

IntelligenceFlowPlannerSupport::ContextRetrieved_optional __swiftcall TailTranscriptProtocol.latestContextRetrieved()()
{
  sub_2534B3258();
  sub_253A567D4(v0, v1);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_253A56828(WitnessTable);
  sub_2534727C4();
  sub_253963118();
  MEMORY[0x270FA5388](v3);
  sub_2534727C4();
  MEMORY[0x270FA5388](v4);
  sub_2534727C4();
  sub_253963118();
  MEMORY[0x270FA5388](v5);
  sub_253A56804();
  sub_25347907C(&qword_269CE84E0);
  uint64_t v6 = sub_253A568FC();
  sub_253A56C28(v6);
  swift_getWitnessTable();
  sub_253A568E0();
  swift_getWitnessTable();
  sub_253B0A150();
  sub_2534727C4();
  sub_253963118();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_253A5675C();
  v9(v8);
  sub_253A56B04();
  sub_253A56A0C();
  sub_2534D9A08();
  v10();
  swift_getWitnessTable();
  sub_253A56A78();
  sub_253B0A270();
  sub_2534659CC();
  v11();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v12 = sub_253A56BCC();
  sub_253A568B4(v12);
  sub_253A5694C();
  sub_2534659CC();
  v13();
  sub_253465A14();
  result.value.utteranceContext._rawValue = v15;
  result.value.requiredContext._rawValue = v14;
  return result;
}

uint64_t sub_253A4CF30@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Session.Event.Payload(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (long long *)((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for Session.Event(0);
  sub_253A566A0();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 27)
  {
    long long v6 = *v4;
  }
  else
  {
    uint64_t result = sub_253A5664C((uint64_t)v4, (void (*)(void))type metadata accessor for Session.Event.Payload);
    long long v6 = 0uLL;
  }
  *a1 = v6;
  return result;
}

void TailTranscriptProtocol.latestContextRetrievedEvent()()
{
}

uint64_t sub_253A4D04C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Session.Event.Payload(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Session.Event(0);
  sub_253A566A0();
  if (swift_getEnumCaseMultiPayload() == 27)
  {
    sub_253A5664C((uint64_t)v4, (void (*)(void))type metadata accessor for Session.Event.Payload);
    sub_253A566A0();
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v5);
  }
  else
  {
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 1, 1, v5);
    return sub_253A5664C((uint64_t)v4, (void (*)(void))type metadata accessor for Session.Event.Payload);
  }
}

void TailTranscriptProtocol.latestQueryDecorationResultEvent()()
{
}

void sub_253A4D1CC()
{
  sub_2534B3258();
  uint64_t v33 = v1;
  uint64_t v34 = v2;
  uint64_t v4 = v3;
  long long v6 = v5;
  uint64_t v31 = v0;
  uint64_t v8 = v7;
  uint64_t v29 = *(void *)(*(void *)(v9 + 8) + 8);
  uint64_t v10 = sub_253B0A200();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v30 = sub_253B0A020();
  sub_2534727C4();
  uint64_t v32 = v11;
  sub_253963118();
  MEMORY[0x270FA5388](v12);
  sub_253A5674C();
  sub_2534727C4();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534727C4();
  sub_253963118();
  MEMORY[0x270FA5388](v18);
  sub_253A56880();
  sub_25347907C(v6);
  sub_253A56A2C();
  uint64_t v27 = sub_253B0A150();
  swift_getWitnessTable();
  sub_253A56BF0();
  uint64_t v26 = sub_253B0A1E0();
  v4(255);
  swift_getWitnessTable();
  sub_253A56B6C();
  sub_253B0A150();
  sub_2534727C4();
  uint64_t v28 = v19;
  sub_253963118();
  MEMORY[0x270FA5388](v20);
  sub_253A56804();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v31, v8);
  sub_253B09690();
  MEMORY[0x25A268990](v10, WitnessTable);
  sub_2534D91AC();
  v21();
  swift_getWitnessTable();
  sub_253B0A270();
  sub_2534659CC();
  v22();
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v35 = swift_getWitnessTable();
  sub_2534D9778();
  swift_getWitnessTable();
  sub_253B09D00();
  sub_2534659CC();
  v23();
  sub_253465A14();
}

uint64_t sub_253A4D538@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Session.Event.Payload(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Session.Event(0);
  sub_253A566A0();
  if (swift_getEnumCaseMultiPayload() == 42)
  {
    sub_253A566A0();
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = 1;
  }
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, v6, 1, v5);
  return sub_253A5664C((uint64_t)v4, (void (*)(void))type metadata accessor for Session.Event.Payload);
}

void TailTranscriptProtocol.getQueryDecorationLookback()()
{
  sub_2534B3258();
  uint64_t v98 = v6;
  uint64_t v85 = v7;
  uint64_t v87 = sub_253B089F0();
  sub_2534727C4();
  uint64_t v78 = v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v94 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  uint64_t v86 = sub_253B080C0();
  sub_2534727C4();
  uint64_t v80 = v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v91 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v14);
  sub_2534B35DC();
  uint64_t v90 = v15;
  sub_253483660();
  uint64_t v89 = sub_253B09120();
  sub_2534727C4();
  uint64_t v79 = v16;
  MEMORY[0x270FA5388](v17);
  sub_2534D9264(v18, v75);
  uint64_t v19 = sub_253462A5C(&qword_269CDB3F8);
  uint64_t v20 = sub_25346CB4C(v19);
  MEMORY[0x270FA5388](v20);
  uint64_t v93 = (char *)&v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  sub_253A56B20(v23, v24, v25, v26, v27, v28, v29, v30, v75);
  uint64_t v92 = sub_253B07680();
  sub_2534727C4();
  uint64_t v95 = v31;
  MEMORY[0x270FA5388](v32);
  sub_253465A3C();
  uint64_t v33 = type metadata accessor for RetrievedContextStatement(0);
  sub_2534727C4();
  uint64_t v97 = v34;
  MEMORY[0x270FA5388](v35);
  sub_2534B3294();
  type metadata accessor for Session.Event.Payload(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v36);
  uint64_t v37 = sub_25349888C();
  uint64_t DecorationResult = type metadata accessor for QueryDecorationResult(v37);
  uint64_t v39 = sub_25346CB4C(DecorationResult);
  MEMORY[0x270FA5388](v39);
  sub_2534835B0();
  uint64_t v40 = sub_253462A5C(&qword_26B241248);
  uint64_t v41 = sub_25346CB4C(v40);
  MEMORY[0x270FA5388](v41);
  uint64_t v42 = sub_253A567AC();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v43);
  sub_25348366C();
  uint64_t v100 = MEMORY[0x263F8EE88];
  TailTranscriptProtocol.latestQueryDecorationResultEvent()();
  sub_2534D8B48(v4, 1, v42);
  if (v44)
  {
    sub_253472458(v4, &qword_26B241248);
  }
  else
  {
    uint64_t v77 = v0;
    uint64_t v99 = v33;
    sub_2536D42A4();
    sub_253A565F8();
    sub_253A566A0();
    sub_253A3D518();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 42)
    {
      uint64_t v46 = v77;
      sub_253A565F8();
      uint64_t v47 = *(void *)(*(void *)(v46 + 16) + 16);
      if (v47)
      {
        uint64_t v76 = v1;
        sub_2535786F4();
        uint64_t v50 = v48 + v49;
        uint64_t v98 = *(void *)(v51 + 72);
        uint64_t v97 = (uint64_t (**)(uint64_t, uint64_t))(v95 + 88);
        int v96 = *MEMORY[0x263F4E2B8];
        v95 += 8;
        uint64_t v84 = v79 + 32;
        uint64_t v83 = v79 + 16;
        unsigned int v82 = *MEMORY[0x263F4E6A8];
        uint64_t v81 = (void (**)(char *, void, uint64_t))(v80 + 104);
        v80 += 8;
        v79 += 8;
        v78 += 8;
        uint64_t v75 = v48;
        swift_bridgeObjectRetain();
        uint64_t v52 = (uint64_t)v93;
        uint64_t v54 = v88;
        uint64_t v53 = v89;
        uint64_t v55 = v92;
        do
        {
          sub_253A566A0();
          sub_253B07A80();
          int v56 = (*v97)(v3, v55);
          if (v56 == v96)
          {
            sub_2534659CC();
            v57();
            sub_253B07A70();
            sub_2534D88A0(v54, v52, &qword_269CDB3F8);
            uint64_t v58 = sub_2535792A4();
            sub_2534D8B48(v58, v59, v53);
            uint64_t v60 = v54;
            uint64_t v61 = v91;
            if (v44)
            {
              sub_253472458(v52, &qword_269CDB3F8);
              sub_253B08310();
              uint64_t v62 = sub_253B089D0();
              os_log_type_t v63 = sub_253B09D80();
              if (os_log_type_enabled(v62, v63))
              {
                uint64_t v64 = (uint8_t *)sub_2534AF384();
                *(_WORD *)uint64_t v64 = 0;
                _os_log_impl(&dword_253460000, v62, v63, "getQueryDecorationLookback: typedValue is nil", v64, 2u);
                sub_2534659B4();
              }

              sub_2534DA678();
              sub_2534659CC();
              v65();
              uint64_t v54 = v88;
              uint64_t v66 = sub_253578D38();
              sub_253472458(v66, v67);
              sub_253A5664C(v2, (void (*)(void))type metadata accessor for RetrievedContextStatement);
            }
            else
            {
              sub_2534D8E14();
              v69();
              unint64_t v70 = (uint64_t *)&v61[*(int *)(sub_253462A5C(&qword_269CE84E8) + 48)];
              sub_2534B3428();
              v71();
              *unint64_t v70 = sub_253B07A60();
              v70[1] = v72;
              (*v81)(v61, v82, v86);
              uint64_t v53 = v89;
              sub_2539E1608();
              sub_2534DA678();
              sub_2534659CC();
              v73();
              uint64_t v52 = (uint64_t)v93;
              sub_2534659CC();
              v74();
              sub_253472458(v60, &qword_269CDB3F8);
              sub_253A5664C(v2, (void (*)(void))type metadata accessor for RetrievedContextStatement);
              uint64_t v54 = v60;
            }
            uint64_t v55 = v92;
          }
          else
          {
            sub_253A5664C(v2, (void (*)(void))type metadata accessor for RetrievedContextStatement);
            sub_2534659CC();
            v68();
          }
          v50 += v98;
          --v47;
        }
        while (v47);
        swift_bridgeObjectRelease();
        uint64_t v46 = v77;
        uint64_t v1 = v76;
      }
      sub_253A5664C(v46, (void (*)(void))type metadata accessor for QueryDecorationResult);
      sub_253A5664C(v1, (void (*)(void))type metadata accessor for Session.Event);
    }
    else
    {
      sub_253A5664C(v1, (void (*)(void))type metadata accessor for Session.Event);
      sub_253A5664C(v5, (void (*)(void))type metadata accessor for Session.Event.Payload);
    }
  }
  sub_253A56BE4();
  sub_253B08180();
  sub_253465A14();
}

void TailTranscriptProtocol.latestQueryDecorationResult()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_2534B3258();
  a19 = v22;
  a20 = v23;
  uint64_t v25 = v24;
  type metadata accessor for Session.Event.Payload(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v26);
  sub_25348366C();
  uint64_t v27 = sub_253462A5C(&qword_26B241248);
  uint64_t v28 = sub_25346CB4C(v27);
  MEMORY[0x270FA5388](v28);
  uint64_t v29 = sub_253A567AC();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&a9 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  TailTranscriptProtocol.latestQueryDecorationResultEvent()();
  sub_2534D8B48(v21, 1, v29);
  if (v33)
  {
    sub_253472458(v21, &qword_26B241248);
LABEL_7:
    uint64_t v35 = 1;
    goto LABEL_8;
  }
  sub_253A565F8();
  sub_253A566A0();
  sub_253A5664C((uint64_t)v32, (void (*)(void))type metadata accessor for Session.Event);
  sub_2534D9718();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 42)
  {
    sub_253A5664C(v20, (void (*)(void))type metadata accessor for Session.Event.Payload);
    goto LABEL_7;
  }
  sub_25351C5CC();
  sub_253A565F8();
  uint64_t v35 = 0;
LABEL_8:
  uint64_t DecorationResult = type metadata accessor for QueryDecorationResult(0);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v25, v35, 1, DecorationResult);
  sub_253465A14();
}

uint64_t sub_253A4E038@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Session.Event(0);
  Session.Event.Payload.statementIds.getter(v2, v3, v4, v5, v6, v7, v8, v9, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31,
    v32);
  uint64_t v11 = sub_253A47FA8(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v13 = (int *)(v11 + 32);
    uint64_t v14 = MEMORY[0x263F8EE78];
    do
    {
      int v16 = *v13++;
      int v15 = v16;
      if (v16)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_2539E8A24(0, *(void *)(v14 + 16) + 1, 1);
        }
        unint64_t v18 = *(void *)(v14 + 16);
        unint64_t v17 = *(void *)(v14 + 24);
        if (v18 >= v17 >> 1) {
          sub_2539E8A24(v17 > 1, v18 + 1, 1);
        }
        *(void *)(v14 + 16) = v18 + 1;
        *(_DWORD *)(v14 + 4 * v18 + 32) = v15;
      }
      --v12;
    }
    while (v12);
  }
  else
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  unint64_t v19 = sub_253A4E16C(v14);
  uint64_t result = swift_release();
  *(_DWORD *)a1 = v19;
  *(unsigned char *)(a1 + 4) = BYTE4(v19) & 1;
  return result;
}

unint64_t sub_253A4E16C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    unsigned int v2 = *(_DWORD *)(a1 + 32);
    uint64_t v3 = v1 - 1;
    if (v1 != 1)
    {
      uint64_t v4 = (unsigned int *)(a1 + 36);
      do
      {
        unsigned int v6 = *v4++;
        unsigned int v5 = v6;
        if (v2 <= v6) {
          unsigned int v2 = v5;
        }
        --v3;
      }
      while (v3);
    }
  }
  else
  {
    unsigned int v2 = 0;
  }
  return v2 | ((unint64_t)(v1 == 0) << 32);
}

uint64_t sub_253A4E1C4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_253A4E1D4(uint64_t a1)
{
  return sub_253A49D70(a1);
}

uint64_t sub_253A4E1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_253A4A008(a1, a2, a3, a4, a5);
}

uint64_t sub_253A4E1E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_253A4A100(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 32), a2);
}

uint64_t sub_253A4E208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_253A4A1F8(a1, a2);
}

uint64_t sub_253A4E210(uint64_t a1)
{
  return sub_253A4AA68(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
}

void TailTranscriptProtocol.toolForLatestIncompleteAction.getter()
{
  sub_2534B3258();
  uint64_t v184 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  v152[2] = sub_253B089F0();
  sub_2534727C4();
  v152[1] = v6;
  MEMORY[0x270FA5388](v7);
  sub_25346CB04();
  sub_2534D8F5C(v8);
  uint64_t v9 = sub_253462A5C(&qword_269CE84F0);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  sub_25346CB04();
  uint64_t v12 = sub_2534F8208(v11);
  v152[4] = type metadata accessor for ActionResolverRequest(v12);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v13);
  sub_25346CB04();
  uint64_t v15 = sub_2534F8208(v14);
  v152[6] = type metadata accessor for Action(v15);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v16);
  sub_25346CB04();
  sub_2534F8208(v17);
  uint64_t v172 = sub_253B06850();
  sub_2534727C4();
  uint64_t v167 = v18;
  MEMORY[0x270FA5388](v19);
  sub_2534659D8();
  uint64_t v155 = v20;
  sub_2534B324C();
  MEMORY[0x270FA5388](v21);
  sub_2534B3318();
  uint64_t v154 = v22;
  sub_2534B324C();
  MEMORY[0x270FA5388](v23);
  sub_2534B35DC();
  sub_2534D8F5C(v24);
  uint64_t v25 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v26 = sub_25346CB4C(v25);
  MEMORY[0x270FA5388](v26);
  sub_25346CB04();
  sub_2534F8208(v27);
  uint64_t v175 = sub_253B055C0();
  sub_2534727C4();
  uint64_t v160 = v28;
  MEMORY[0x270FA5388](v29);
  sub_2534659D8();
  uint64_t v173 = v30;
  sub_2534B324C();
  MEMORY[0x270FA5388](v31);
  sub_2534B35DC();
  uint64_t v188 = sub_253A56B50(v32);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v33);
  uint64_t v178 = (char *)v152 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v35);
  sub_2534B3318();
  uint64_t v177 = v36;
  sub_2534B324C();
  uint64_t v38 = MEMORY[0x270FA5388](v37);
  uint64_t v46 = sub_253A56B20(v38, v39, v40, v41, v42, v43, v44, v45, v152[0]);
  uint64_t v164 = type metadata accessor for StatementResult(v46);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v47);
  uint64_t v174 = (uint64_t)v152 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = sub_253A569A4();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v49);
  uint64_t v189 = (char *)v152 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v51);
  sub_2534B35DC();
  uint64_t v180 = v52;
  uint64_t v53 = *(void *)(*(void *)(v3 + 8) + 8);
  uint64_t v171 = *(void *)(v53 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_2534727C4();
  uint64_t v187 = v54;
  MEMORY[0x270FA5388](v55);
  uint64_t v185 = (char *)v152 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v58 = MEMORY[0x270FA5388](v57);
  sub_253A56C8C(v58, v59, v60, v61, v62, v63, v64, v65, v152[0]);
  sub_2534727C4();
  uint64_t v67 = v66;
  MEMORY[0x270FA5388](v68);
  sub_25348366C();
  uint64_t v69 = sub_253B0A200();
  sub_25346CB4C(v69);
  sub_253963118();
  MEMORY[0x270FA5388](v70);
  sub_253A56A98();
  uint64_t v71 = sub_253B0A1F0();
  sub_2534727C4();
  uint64_t v157 = v72;
  MEMORY[0x270FA5388](v73);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v74);
  sub_2534D9EC0();
  uint64_t v75 = *(void (**)(void))(v67 + 16);
  sub_253A568D4();
  v75();
  uint64_t v179 = v53;
  sub_253B09690();
  sub_253A568D4();
  v75();
  sub_253B09CC0();
  sub_253A56A88();
  v76();
  uint64_t v77 = v187;
  sub_25347FA84();
  v78();
  sub_253A56D04();
  sub_25347FA84();
  v79();
  uint64_t v156 = v71;
  uint64_t v80 = v1 + *(int *)(v71 + 36);
  uint64_t v81 = *(void *)(v77 + 16);
  uint64_t v187 = v77 + 16;
  uint64_t v183 = (void (**)(void))(v77 + 8);
  uint64_t v184 = v81;
  uint64_t v163 = v160 + 32;
  uint64_t v168 = (void (**)(void))(v160 + 16);
  uint64_t v166 = v167 + 16;
  uint64_t v159 = v167 + 32;
  uint64_t v158 = v167 + 40;
  v161 = (void (**)(void))(v160 + 8);
  uint64_t v170 = MEMORY[0x263F8EE80];
  uint64_t v162 = v5;
  uint64_t v176 = v1;
  while (1)
  {
    sub_2534AF234();
    v82();
    sub_253B09C80();
    sub_253A3D030();
    swift_getAssociatedConformanceWitness();
    char v83 = sub_253B096B0();
    uint64_t v84 = *v183;
    sub_2534DA4BC();
    v84();
    sub_2534DA4BC();
    v84();
    if (v83)
    {
      sub_253A569FC();
      sub_2534659CC();
      v151();
      goto LABEL_51;
    }
    sub_253B09670();
    uint64_t v85 = (void (*)(uint64_t))sub_253B09D30();
    sub_253A566A0();
    uint64_t v86 = sub_253A56734();
    v85(v86);
    uint64_t v87 = (uint64_t)v189;
    sub_253A565F8();
    uint64_t v88 = v182;
    sub_253A566A0();
    if (swift_getEnumCaseMultiPayload() != 31)
    {
      sub_253A5664C(v88, (void (*)(void))type metadata accessor for Session.Event.Payload);
      uint64_t v96 = v177;
      uint64_t v95 = (uint64_t)v178;
      goto LABEL_17;
    }
    uint64_t v89 = v80;
    uint64_t v90 = v178;
    uint64_t v91 = v174;
    sub_253A565F8();
    uint64_t v92 = v169;
    sub_2534D88A0(v91, v169, (uint64_t *)&unk_26B248CB0);
    sub_2534D8B48(v92, 1, v175);
    if (v135)
    {
      sub_253A5664C(v91, (void (*)(void))type metadata accessor for StatementResult);
      uint64_t v93 = sub_2534D9778();
      sub_253472458(v93, v94);
      uint64_t v95 = (uint64_t)v90;
      uint64_t v96 = v177;
      goto LABEL_17;
    }
    sub_2534DA678();
    sub_2534D8E14();
    v97();
    uint64_t v98 = *v168;
    sub_2534D9778();
    sub_2534AF234();
    v98();
    sub_2534DA678();
    uint64_t v99 = v165;
    sub_2534B3428();
    v100();
    uint64_t v101 = v170;
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v190 = v101;
    sub_25396E690();
    if (__OFADD__(*(void *)(v101 + 16), (v103 & 1) == 0)) {
      break;
    }
    unint64_t v104 = v102;
    char v105 = v103;
    sub_253462A5C(&qword_269CE84F8);
    char v106 = sub_253B0A190();
    uint64_t v107 = v90;
    uint64_t v96 = v177;
    uint64_t v80 = v89;
    if (v106)
    {
      sub_25396E690();
      if ((v105 & 1) != (v109 & 1)) {
        goto LABEL_59;
      }
      unint64_t v104 = v108;
    }
    uint64_t v110 = (uint64_t)v107;
    uint64_t v111 = v190;
    if (v105)
    {
      uint64_t v112 = sub_253A56B38();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 40))(v112, v99, v172);
    }
    else
    {
      *(void *)(v190 + 8 * (v104 >> 6) + 64) |= 1 << v104;
      sub_2534AF234();
      v98();
      sub_253A56B38();
      sub_2534D8E14();
      v114();
      uint64_t v115 = *(void *)(v111 + 16);
      BOOL v116 = __OFADD__(v115, 1);
      uint64_t v117 = v115 + 1;
      if (v116) {
        goto LABEL_58;
      }
      *(void *)(v111 + 16) = v117;
    }
    uint64_t v170 = v190;
    swift_bridgeObjectRelease();
    uint64_t v118 = *v161;
    sub_2534D91AC();
    v118();
    sub_2534D91AC();
    v118();
    sub_253A5664C(v174, (void (*)(void))type metadata accessor for StatementResult);
    uint64_t v87 = (uint64_t)v189;
    uint64_t v95 = v110;
LABEL_17:
    sub_253A566A0();
    sub_2535791D8();
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      uint64_t v119 = v152[7];
      sub_253A565F8();
      swift_bridgeObjectRetain();
      uint64_t v120 = type metadata accessor for Action;
      goto LABEL_22;
    }
    sub_253A5664C(v96, (void (*)(void))type metadata accessor for Session.Event.Payload);
    sub_253A566A0();
    if (swift_getEnumCaseMultiPayload() == 20)
    {
      uint64_t v119 = v152[5];
      sub_253A565F8();
      swift_bridgeObjectRetain();
      uint64_t v120 = type metadata accessor for ActionResolverRequest;
LABEL_22:
      sub_253A5664C(v119, (void (*)(void))v120);
      uint64_t v121 = v153;
      sub_253466B58(v170, v153);
      uint64_t v122 = sub_2536D3ACC();
      sub_2534D8B48(v122, v123, v172);
      if (v135)
      {
        sub_253A5664C(v87, (void (*)(void))type metadata accessor for Session.Event);
        sub_2534659CC();
        v124();
        sub_253472458(v121, &qword_269CE84F0);
LABEL_51:
        swift_bridgeObjectRelease();
        sub_2534D9778();
        sub_253465A14();
        return;
      }
      uint64_t v125 = v167;
      sub_2534D9B10();
      uint64_t v126 = v172;
      sub_2534D8E14();
      v127();
      uint64_t v128 = v155;
      sub_2534B3428();
      v129();
      int v130 = (*(uint64_t (**)(uint64_t, uint64_t))(v125 + 88))(v128, v126);
      if (v130 == *MEMORY[0x263F4C7D8]) {
        goto LABEL_26;
      }
      int v134 = v130;
      BOOL v135 = v130 == *MEMORY[0x263F4C790] || v130 == *MEMORY[0x263F4C798];
      if (!v135 && v130 != *MEMORY[0x263F4C7A0] && v130 != *MEMORY[0x263F4C7B8] && v130 != *MEMORY[0x263F4C7C0])
      {
        if (v130 == *MEMORY[0x263F4C7A8] || v130 == *MEMORY[0x263F4C7C8])
        {
LABEL_26:
          swift_bridgeObjectRelease();
LABEL_27:
          uint64_t v131 = *(void (**)(uint64_t, uint64_t))(v167 + 8);
          uint64_t v132 = v172;
          v131(v154, v172);
          sub_253A5664C(v87, (void (*)(void))type metadata accessor for Session.Event);
          sub_2534659CC();
          v133();
          v131(v155, v132);
          goto LABEL_51;
        }
        if (v130 != *MEMORY[0x263F4C788] && v130 != *MEMORY[0x263F4C7B0])
        {
          int v144 = *MEMORY[0x263F4C7D0];
          swift_bridgeObjectRelease();
          if (v134 != v144)
          {
            sub_253A56C80();
            sub_253B08360();
            uint64_t v145 = (void *)sub_253B089D0();
            os_log_type_t v146 = sub_253B09D80();
            if (sub_2534AF330(v146))
            {
              unint64_t v147 = (_WORD *)sub_2534AF384();
              sub_253A56AA8(v147);
              sub_2534AF240(&dword_253460000, v148, v149, "Unknown outcome ignored when finding latest incomplete action");
              sub_2534659B4();
            }

            sub_253A569FC();
            sub_2534659CC();
            v150();
          }
          goto LABEL_27;
        }
      }
      uint64_t v141 = *(void (**)(void))(v167 + 8);
      uint64_t v142 = v172;
      sub_2534D91AC();
      v141();
      sub_253A5664C(v87, (void (*)(void))type metadata accessor for Session.Event);
      sub_2534659CC();
      v143();
      ((void (*)(uint64_t, uint64_t))v141)(v155, v142);
      goto LABEL_51;
    }
    sub_253A5664C(v95, (void (*)(void))type metadata accessor for Session.Event.Payload);
    sub_253A5664C(v87, (void (*)(void))type metadata accessor for Session.Event);
  }
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  sub_253B0A550();
  __break(1u);
}

void TailTranscriptProtocol.latestStatementEvaluatedEvent(for:)()
{
  sub_2534B3258();
  uint64_t v47 = v0;
  uint64_t v48 = v2;
  uint64_t v4 = v3;
  uint64_t v54 = v5;
  uint64_t v57 = type metadata accessor for Session.Event.Payload(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v6);
  sub_2534AF2BC(v7, v46);
  uint64_t v53 = type metadata accessor for StatementResult(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v8);
  sub_25346CB04();
  uint64_t v52 = v9;
  uint64_t v60 = sub_253A569A4();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v10);
  uint64_t v62 = (uint64_t)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v12);
  sub_2534B35DC();
  uint64_t v55 = v13;
  uint64_t v14 = *(void *)(*(void *)(v4 + 8) + 8);
  sub_253A56B6C();
  swift_getAssociatedTypeWitness();
  sub_2534727C4();
  uint64_t v61 = v15;
  MEMORY[0x270FA5388](v16);
  sub_2534B340C();
  MEMORY[0x270FA5388](v17);
  sub_2536D4170();
  sub_2534727C4();
  uint64_t v58 = v18;
  MEMORY[0x270FA5388](v19);
  sub_253A569DC();
  uint64_t v59 = v14;
  uint64_t v20 = sub_253B0A200();
  sub_25346CB4C(v20);
  sub_253963118();
  MEMORY[0x270FA5388](v21);
  sub_253A5696C();
  sub_253B0A1F0();
  sub_2534727C4();
  uint64_t v50 = v23;
  uint64_t v51 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v49 = (char *)&v46 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v25);
  sub_2534D97C0();
  uint64_t v26 = *(void (**)(void))(v58 + 16);
  sub_253944AE4();
  v26();
  sub_253B09690();
  sub_253944AE4();
  v26();
  sub_253B09CC0();
  sub_2534659CC();
  v27();
  uint64_t v28 = v61;
  sub_25347FA84();
  v29();
  sub_25347FA84();
  v30();
  uint64_t v58 = *(void *)(v28 + 16);
  uint64_t v61 = v28 + 16;
  uint64_t v31 = (void (**)(void))(v28 + 8);
  while (1)
  {
    sub_25351C5C0();
    sub_2534AF234();
    v32();
    sub_253B09C80();
    swift_getAssociatedConformanceWitness();
    char v33 = sub_253B096B0();
    uint64_t v34 = *v31;
    sub_2534DA4BC();
    v34();
    sub_2534DA4BC();
    v34();
    if (v33) {
      break;
    }
    sub_253B09670();
    uint64_t v35 = sub_253B09D30();
    sub_253A56A38(v35, v36);
    sub_253A566A0();
    uint64_t v37 = sub_253A56734();
    v1(v37);
    uint64_t v38 = v62;
    sub_253A565F8();
    sub_253A56CB4(v60);
    uint64_t v39 = v56;
    sub_253A566A0();
    if (swift_getEnumCaseMultiPayload() == 31)
    {
      uint64_t v40 = v52;
      sub_253A565F8();
      sub_253A56CB4(v53);
      char v41 = _s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0();
      sub_253A5664C(v40, (void (*)(void))type metadata accessor for StatementResult);
      if (v41)
      {
        sub_2534659CC();
        v42();
        uint64_t v43 = v48;
        sub_253A565F8();
        uint64_t v44 = 0;
        goto LABEL_8;
      }
      sub_253A5664C(v62, (void (*)(void))type metadata accessor for Session.Event);
    }
    else
    {
      sub_253A5664C(v38, (void (*)(void))type metadata accessor for Session.Event);
      sub_253A5664C(v39, (void (*)(void))type metadata accessor for Session.Event.Payload);
    }
  }
  sub_2534659CC();
  v45();
  uint64_t v44 = 1;
  uint64_t v43 = v48;
LABEL_8:
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v43, v44, 1, v60);
  sub_253465A14();
}

void TailTranscriptProtocol.latestActionCreated(for:)()
{
  sub_2534B3258();
  uint64_t v1 = v0;
  uint64_t v61 = v2;
  type metadata accessor for Session.Event.Payload(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v3);
  sub_2534D8F68(v4, v58);
  uint64_t v60 = type metadata accessor for Action(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  sub_25346CB04();
  uint64_t v62 = v6;
  uint64_t v64 = sub_253A569A4();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v7);
  sub_2534AF2BC(v8, v59);
  uint64_t v9 = *(void (**)(uint64_t))(*(void *)(v1 + 8) + 8);
  swift_getAssociatedTypeWitness();
  sub_2534727C4();
  uint64_t v66 = v10;
  MEMORY[0x270FA5388](v11);
  sub_2534B340C();
  MEMORY[0x270FA5388](v12);
  sub_2534D97C0();
  sub_2534727C4();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  sub_253A56998();
  uint64_t v16 = sub_253B0A200();
  sub_25346CB4C(v16);
  sub_253963118();
  MEMORY[0x270FA5388](v17);
  sub_253A5696C();
  sub_253B0A1F0();
  sub_2534727C4();
  MEMORY[0x270FA5388](v18);
  sub_2534659D8();
  sub_2534B324C();
  MEMORY[0x270FA5388](v19);
  sub_2536D414C();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v14 + 16);
  sub_253944AE4();
  v20(v21, v22);
  sub_253B09690();
  sub_253A56C74();
  sub_253944AE4();
  v20(v23, v24);
  sub_2534D973C();
  sub_253B09CC0();
  sub_2534659CC();
  v27(v25, v26);
  sub_253A56A6C();
  sub_25347FA84();
  v30(v28, v29);
  sub_25347FA84();
  v33(v31, v32);
  while (1)
  {
    sub_2534AF234();
    v36(v34, v35);
    sub_2534D973C();
    sub_253B09C80();
    sub_2534D9718();
    swift_getAssociatedConformanceWitness();
    sub_253A3D518();
    char v37 = sub_253B096B0();
    uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
    sub_2534DA4BC();
    v38(v39, v40);
    sub_2534DA4BC();
    v38(v41, v42);
    if (v37) {
      break;
    }
    sub_253B09670();
    uint64_t v43 = sub_253B09D30();
    sub_253A56A38(v43, v44);
    sub_253A566A0();
    uint64_t v45 = sub_253A56734();
    v9(v45);
    uint64_t v46 = v65;
    sub_253A56CB4(v64);
    sub_253A566A0();
    sub_253A5664C(v63, (void (*)(void))type metadata accessor for Session.Event);
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      uint64_t v46 = v62;
      sub_253A565F8();
      if (_s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0())
      {
        sub_2534659CC();
        v51(v48, v49, v50);
        uint64_t v52 = v61;
        sub_253A565F8();
        uint64_t v53 = 0;
        goto LABEL_9;
      }
      uint64_t v47 = type metadata accessor for Action;
    }
    else
    {
      uint64_t v47 = type metadata accessor for Session.Event.Payload;
    }
    sub_253A5664C(v46, (void (*)(void))v47);
  }
  sub_2534659CC();
  v57(v54, v55, v56);
  uint64_t v53 = 1;
  uint64_t v52 = v61;
LABEL_9:
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v52, v53, 1, v60);
  sub_253465A14();
}

void TailTranscriptProtocol.inFocusAppBundleIDs(queryEventId:)()
{
  sub_2534B3258();
  uint64_t v116 = v6;
  uint64_t v117 = v1;
  uint64_t v113 = v7;
  uint64_t v102 = sub_253B09050();
  sub_2534727C4();
  uint64_t v100 = v8;
  MEMORY[0x270FA5388](v9);
  sub_25346CB04();
  uint64_t v101 = v10;
  uint64_t v11 = sub_253462A5C(&qword_269CDB3F8);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  unint64_t v104 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  uint64_t v109 = sub_253B090B0();
  sub_2534727C4();
  uint64_t v99 = v14;
  MEMORY[0x270FA5388](v15);
  sub_2534659D8();
  uint64_t v108 = v16;
  sub_2534B324C();
  MEMORY[0x270FA5388](v17);
  sub_2534B35DC();
  sub_253A56C34(v18);
  uint64_t v110 = sub_253B07680();
  sub_2534727C4();
  uint64_t v98 = v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v114 = (char *)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_253483660();
  uint64_t v115 = type metadata accessor for RetrievedContextStatement(v22);
  sub_2534727C4();
  uint64_t v97 = v23;
  MEMORY[0x270FA5388](v24);
  uint64_t v25 = sub_25397F55C();
  char v106 = (void (**)(uint64_t, uint64_t))type metadata accessor for Session.Event.Payload(v25);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v26);
  sub_25346CB04();
  uint64_t v107 = v27;
  uint64_t v28 = sub_253483660();
  uint64_t DecorationResult = type metadata accessor for QueryDecorationResult(v28);
  uint64_t v30 = sub_25346CB4C(DecorationResult);
  MEMORY[0x270FA5388](v30);
  uint64_t v105 = (uint64_t)&v94 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_253B055C0();
  sub_2534727C4();
  uint64_t v112 = v33;
  MEMORY[0x270FA5388](v34);
  sub_25346CB04();
  uint64_t v103 = v35;
  uint64_t v36 = sub_253462A5C(&qword_269CDDCC0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v37);
  sub_25348366C();
  uint64_t v38 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v39 = sub_25346CB4C(v38);
  MEMORY[0x270FA5388](v39);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v40);
  sub_2536D4170();
  uint64_t v41 = sub_253462A5C(&qword_26B241248);
  uint64_t v42 = sub_25346CB4C(v41);
  MEMORY[0x270FA5388](v42);
  uint64_t v43 = sub_253A567AC();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v44);
  uint64_t v46 = (char *)&v94 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118[2] = MEMORY[0x263F8EE88];
  TailTranscriptProtocol.latestQueryDecorationResultEvent()();
  sub_2534D8B48(v4, 1, v43);
  if (!v55)
  {
    sub_253A565F8();
    uint64_t v96 = v46;
    uint64_t v47 = v112;
    sub_2534AF234();
    v48();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v3, 0, 1, v32);
    uint64_t v49 = v2 + *(int *)(v36 + 48);
    uint64_t v50 = sub_2536D42A4();
    sub_2534D88A0(v50, v51, (uint64_t *)&unk_26B248CB0);
    sub_253A56C40();
    sub_2534D88A0(v52, v53, v54);
    sub_2534D8B48(v2, 1, v32);
    if (v55)
    {
      sub_253472458(v3, (uint64_t *)&unk_26B248CB0);
      sub_2534D8B48(v49, 1, v32);
      uint64_t v56 = v114;
      if (v55)
      {
        sub_253472458(v2, (uint64_t *)&unk_26B248CB0);
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v57 = v47;
      sub_2534D88A0(v2, v5, (uint64_t *)&unk_26B248CB0);
      sub_2534D8B48(v49, 1, v32);
      uint64_t v56 = v114;
      if (!v58)
      {
        sub_2534D9A78();
        sub_25347FA84();
        v59();
        sub_253A561C4();
        sub_253A56AF8();
        LODWORD(v117) = sub_253B096B0();
        uint64_t v60 = (void (*)(void))v57[1];
        sub_2535791D8();
        sub_2534DA4BC();
        v60();
        sub_253472458(v3, (uint64_t *)&unk_26B248CB0);
        sub_2534DA4BC();
        v60();
        sub_253472458(v2, (uint64_t *)&unk_26B248CB0);
        if (v117)
        {
LABEL_14:
          uint64_t v61 = (uint64_t)v96;
          uint64_t v62 = v107;
          sub_253A566A0();
          if (swift_getEnumCaseMultiPayload() == 42)
          {
            uint64_t v63 = v105;
            sub_253A565F8();
            uint64_t v64 = *(void *)(*(void *)(v63 + 8) + 16);
            if (v64)
            {
              sub_2535786F4();
              uint64_t v67 = v65 + v66;
              uint64_t v117 = *(void *)(v68 + 72);
              uint64_t v69 = v98 + 88;
              LODWORD(v116) = *MEMORY[0x263F4E258];
              uint64_t v70 = (void (**)(char *, uint64_t))(v98 + 8);
              LODWORD(v114) = *MEMORY[0x263F804E8];
              uint64_t v113 = (void (**)(void))(v99 + 2);
              uint64_t v112 = v99 + 11;
              LODWORD(v107) = *MEMORY[0x263F80440];
              char v106 = v99 + 1;
              v99 += 12;
              uint64_t v98 = v100 + 32;
              v100 += 8;
              uint64_t v97 = v65;
              swift_bridgeObjectRetain();
              uint64_t v71 = (uint64_t)v104;
              uint64_t v72 = v110;
              uint64_t v95 = v0;
              uint64_t v103 = v69;
              do
              {
                sub_253A566A0();
                sub_253B07A80();
                uint64_t v73 = sub_2536D5500();
                int v75 = v74(v73);
                if (v75 == v116)
                {
                  sub_25347FB18();
                  v76();
                  sub_253B07A70();
                  uint64_t v77 = sub_253B09120();
                  sub_2534D8B48(v71, 1, v77);
                  if (v55)
                  {
                    sub_253A5664C(v0, (void (*)(void))type metadata accessor for RetrievedContextStatement);
                    sub_253472458(v71, &qword_269CDB3F8);
                  }
                  else
                  {
                    sub_2534727C4();
                    uint64_t v79 = v78;
                    sub_253A5684C();
                    if (v80() == v114)
                    {
                      (*(void (**)(uint64_t, uint64_t))(v79 + 96))(v71, v77);
                      swift_projectBox();
                      uint64_t v81 = *v113;
                      uint64_t v82 = v109;
                      sub_253A5693C();
                      v81();
                      swift_release();
                      uint64_t v83 = v108;
                      sub_253A56AF8();
                      sub_253A5693C();
                      v81();
                      sub_253A5684C();
                      if (v84() == v107)
                      {
                        (*v99)(v83, v82);
                        sub_2534DA678();
                        sub_2534D8E14();
                        v85();
                        uint64_t v86 = sub_253B09040();
                        sub_2539E09A0((uint64_t)v118, v86, v87);
                        swift_bridgeObjectRelease();
                        uint64_t v71 = (uint64_t)v104;
                        sub_2534659CC();
                        v88();
                        sub_2534659CC();
                        v89();
                        uint64_t v0 = v95;
                        sub_253A5664C(v95, (void (*)(void))type metadata accessor for RetrievedContextStatement);
                      }
                      else
                      {
                        uint64_t v91 = *v106;
                        (*v106)(v111, v82);
                        uint64_t v0 = v95;
                        sub_253A5664C(v95, (void (*)(void))type metadata accessor for RetrievedContextStatement);
                        v91(v83, v82);
                      }
                      uint64_t v72 = v110;
                    }
                    else
                    {
                      sub_253A5664C(v0, (void (*)(void))type metadata accessor for RetrievedContextStatement);
                      sub_2536D2A7C();
                      v90();
                    }
                  }
                }
                else
                {
                  sub_253A5664C(v0, (void (*)(void))type metadata accessor for RetrievedContextStatement);
                  (*v70)(v56, v72);
                }
                v67 += v117;
                --v64;
              }
              while (v64);
              swift_bridgeObjectRelease();
              uint64_t v61 = (uint64_t)v96;
            }
            sub_253A5664C(v105, (void (*)(void))type metadata accessor for QueryDecorationResult);
            uint64_t v92 = type metadata accessor for Session.Event;
            uint64_t v93 = v61;
          }
          else
          {
            sub_253A5664C(v61, (void (*)(void))type metadata accessor for Session.Event);
            uint64_t v92 = type metadata accessor for Session.Event.Payload;
            uint64_t v93 = v62;
          }
          goto LABEL_33;
        }
LABEL_30:
        uint64_t v92 = type metadata accessor for Session.Event;
        uint64_t v93 = (uint64_t)v96;
LABEL_33:
        sub_253A5664C(v93, (void (*)(void))v92);
        goto LABEL_34;
      }
      sub_253472458(v3, (uint64_t *)&unk_26B248CB0);
      v57[1](v5, v32);
    }
    sub_253472458(v2, &qword_269CDDCC0);
    goto LABEL_30;
  }
  sub_253472458(v4, &qword_26B241248);
LABEL_34:
  sub_253465A14();
}

#error "253A507A0: call analysis failed (funcsize=48)"

void QueryDecorationResult.currentLocation.getter()
{
  sub_2534B3258();
  uint64_t v2 = v0;
  uint64_t v3 = sub_253B090A0();
  sub_2534727C4();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253462A5C(&qword_269CDB3F8);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  sub_25349888C();
  uint64_t v61 = sub_253B090B0();
  sub_2534727C4();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  uint64_t v59 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v15);
  uint64_t v60 = (char *)&v46 - v16;
  uint64_t v63 = sub_253B07680();
  sub_2534727C4();
  uint64_t v18 = v17;
  MEMORY[0x270FA5388](v19);
  uint64_t v20 = sub_253A5696C();
  uint64_t v66 = type metadata accessor for RetrievedContextStatement(v20);
  MEMORY[0x270FA5388](v66);
  uint64_t v23 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(void *)(v2 + 8);
  uint64_t v25 = *(void *)(v24 + 16);
  if (v25)
  {
    uint64_t v48 = v8;
    uint64_t v49 = v5;
    uint64_t v50 = v3;
    uint64_t v26 = v24 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    int v65 = *MEMORY[0x263F4E230];
    int v62 = *MEMORY[0x263F804E8];
    uint64_t v56 = v12 + 88;
    uint64_t v57 = (void (**)(void))(v12 + 16);
    int v55 = *MEMORY[0x263F80498];
    char v58 = (void (**)(void))(v12 + 8);
    uint64_t v64 = *(void *)(v21 + 72);
    uint64_t v51 = v24;
    swift_bridgeObjectRetain();
    uint64_t v47 = v12;
    uint64_t v53 = v18 + 88;
    uint64_t v54 = v1;
    uint64_t v52 = v18 + 8;
    while (1)
    {
      sub_253A566A0();
      sub_253B07A80();
      uint64_t v27 = sub_253A3D030();
      int v29 = v28(v27);
      if (v29 == v65)
      {
        sub_253A56A88();
        v30();
        sub_253B07A70();
        uint64_t v31 = sub_253B09120();
        sub_2534D8B48(v1, 1, v31);
        if (v32)
        {
          sub_253A5664C((uint64_t)v23, (void (*)(void))type metadata accessor for RetrievedContextStatement);
          sub_253472458(v1, &qword_269CDB3F8);
        }
        else
        {
          sub_2534727C4();
          uint64_t v35 = v34;
          sub_253A5684C();
          if (v36() == v62)
          {
            (*(void (**)(uint64_t, uint64_t))(v35 + 96))(v1, v31);
            swift_projectBox();
            uint64_t v37 = *v57;
            uint64_t v38 = v61;
            sub_253A5693C();
            v37();
            swift_release();
            uint64_t v39 = v59;
            sub_253A3D518();
            sub_253A5693C();
            v37();
            sub_253A5684C();
            if (v40() == v55)
            {
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v47 + 96))(v39, v38);
              sub_25347FA84();
              v43();
              sub_253B09090();
              sub_2534D91AC();
              v44();
              sub_2534659CC();
              v45();
              sub_253A5664C((uint64_t)v23, (void (*)(void))type metadata accessor for RetrievedContextStatement);
              break;
            }
            uint64_t v41 = *v58;
            sub_2534DA4BC();
            v41();
            sub_253A5664C((uint64_t)v23, (void (*)(void))type metadata accessor for RetrievedContextStatement);
            sub_2534DA4BC();
            v41();
            uint64_t v1 = v54;
          }
          else
          {
            sub_253A5664C((uint64_t)v23, (void (*)(void))type metadata accessor for RetrievedContextStatement);
            sub_2534D91AC();
            v42();
          }
        }
      }
      else
      {
        sub_253A5664C((uint64_t)v23, (void (*)(void))type metadata accessor for RetrievedContextStatement);
        sub_253A56A88();
        v33();
      }
      v26 += v64;
      if (!--v25)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  sub_253465A14();
}

void TailTranscriptProtocol.actionCreatedEvents(queryEventId:)()
{
  sub_2534B3258();
  uint64_t v3 = v2;
  sub_2534727C4();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  sub_253465A3C();
  sub_253B0A200();
  sub_2534727C4();
  sub_253963118();
  MEMORY[0x270FA5388](v7);
  sub_253A5674C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v0, v3);
  sub_253B09690();
  type metadata accessor for Action(0);
  swift_getWitnessTable();
  sub_253B09980();
  sub_253578D38();
  sub_2534F85D4();
  v8();
  sub_253465A14();
}

uint64_t sub_253A50EF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v42 = a3;
  uint64_t v39 = a2;
  uint64_t v43 = sub_253B055C0();
  uint64_t v40 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v37 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_253462A5C(&qword_269CDDCC0);
  MEMORY[0x270FA5388](v38);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v36 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v36 - v14;
  uint64_t v16 = type metadata accessor for Session.Event.Payload(0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for Action(0);
  MEMORY[0x270FA5388](v41);
  uint64_t v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for Session.Event(0);
  sub_253A566A0();
  if (swift_getEnumCaseMultiPayload() != 5)
  {
    uint64_t v27 = type metadata accessor for Session.Event.Payload;
    uint64_t v28 = (uint64_t)v18;
LABEL_12:
    sub_253A5664C(v28, (void (*)(void))v27);
    uint64_t v34 = 1;
    uint64_t v33 = v42;
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v33, v34, 1, v41);
  }
  sub_253A565F8();
  sub_2534D88A0(a1 + *(int *)(v21 + 24), (uint64_t)v15, (uint64_t *)&unk_26B248CB0);
  uint64_t v22 = v40;
  uint64_t v23 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v13, v39, v43);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v13, 0, 1, v23);
  uint64_t v24 = (uint64_t)&v6[*(int *)(v38 + 48)];
  sub_2534D88A0((uint64_t)v15, (uint64_t)v6, (uint64_t *)&unk_26B248CB0);
  sub_2534D88A0((uint64_t)v13, v24, (uint64_t *)&unk_26B248CB0);
  int v25 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v6, 1, v23);
  uint64_t v26 = v20;
  if (v25 != 1)
  {
    int v29 = v10;
    sub_2534D88A0((uint64_t)v6, (uint64_t)v10, (uint64_t *)&unk_26B248CB0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v24, 1, v43) != 1)
    {
      uint64_t v30 = v37;
      uint64_t v31 = v43;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v37, v24, v43);
      sub_253A561C4();
      LODWORD(v39) = sub_253B096B0();
      char v32 = *(void (**)(char *, uint64_t))(v22 + 8);
      v32(v30, v31);
      sub_253472458((uint64_t)v13, (uint64_t *)&unk_26B248CB0);
      sub_253472458((uint64_t)v15, (uint64_t *)&unk_26B248CB0);
      v32(v29, v31);
      sub_253472458((uint64_t)v6, (uint64_t *)&unk_26B248CB0);
      if (v39) {
        goto LABEL_10;
      }
      goto LABEL_11;
    }
    sub_253472458((uint64_t)v13, (uint64_t *)&unk_26B248CB0);
    sub_253472458((uint64_t)v15, (uint64_t *)&unk_26B248CB0);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v43);
LABEL_8:
    sub_253472458((uint64_t)v6, &qword_269CDDCC0);
LABEL_11:
    uint64_t v27 = type metadata accessor for Action;
    uint64_t v28 = (uint64_t)v26;
    goto LABEL_12;
  }
  sub_253472458((uint64_t)v13, (uint64_t *)&unk_26B248CB0);
  sub_253472458((uint64_t)v15, (uint64_t *)&unk_26B248CB0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v24, 1, v43) != 1) {
    goto LABEL_8;
  }
  sub_253472458((uint64_t)v6, (uint64_t *)&unk_26B248CB0);
LABEL_10:
  uint64_t v33 = v42;
  sub_253A565F8();
  uint64_t v34 = 0;
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v33, v34, 1, v41);
}

#error "253A51550: call analysis failed (funcsize=259)"

void TailTranscriptProtocol.latestRequiredContext.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_2534B3258();
  a19 = v23;
  a20 = v24;
  type metadata accessor for Session.Event.Payload(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v25);
  uint64_t v26 = sub_25397F55C();
  uint64_t DecorationResult = type metadata accessor for QueryDecorationResult(v26);
  uint64_t v28 = sub_25346CB4C(DecorationResult);
  MEMORY[0x270FA5388](v28);
  sub_2534B3294();
  uint64_t v29 = sub_253462A5C(&qword_26B241248);
  uint64_t v30 = sub_25346CB4C(v29);
  MEMORY[0x270FA5388](v30);
  uint64_t v31 = sub_253A567AC();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)&a9 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  TailTranscriptProtocol.latestQueryDecorationResultEvent()();
  sub_2534D8B48(v22, 1, v31);
  if (v35)
  {
    sub_253472458(v22, &qword_26B241248);
  }
  else
  {
    sub_253A565F8();
    sub_253A566A0();
    sub_253A5664C((uint64_t)v34, (void (*)(void))type metadata accessor for Session.Event);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 42)
    {
      sub_2534D9AA0();
      sub_253A565F8();
      swift_bridgeObjectRetain();
      sub_253A5664C(v21, (void (*)(void))type metadata accessor for QueryDecorationResult);
    }
    else
    {
      sub_253A5664C(v20, (void (*)(void))type metadata accessor for Session.Event.Payload);
    }
  }
  sub_253465A14();
}

void TailTranscriptProtocol.originatingDeviceWasLocal.getter()
{
  sub_2534B3258();
  uint64_t v10 = v1;
  sub_253A5691C();
  sub_25346CAF4();
  sub_253963118();
  MEMORY[0x270FA5388](v2);
  sub_253A56880();
  swift_getWitnessTable();
  sub_253B0A200();
  sub_2534727C4();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  sub_2534727F8();
  MEMORY[0x270FA5388](v6);
  sub_2534D90F4();
  sub_25347907C(&qword_269CDDE88);
  swift_getWitnessTable();
  sub_253B0A150();
  swift_getWitnessTable();
  sub_253B0A1E0();
  swift_getWitnessTable();
  sub_253B0A150();
  sub_2534727C4();
  sub_253963118();
  MEMORY[0x270FA5388](v7);
  sub_253A56BAC();
  MEMORY[0x25A268990](v10, v0);
  sub_253B09690();
  swift_getWitnessTable();
  sub_253A56BCC();
  sub_253A56BE4();
  sub_253B0A290();
  uint64_t v8 = *(void (**)(void))(v4 + 8);
  sub_2534F85D4();
  v8();
  sub_253B0A270();
  sub_25351C5C0();
  sub_2534F85D4();
  v8();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_253B09D00();
  sub_2534659CC();
  v9();
  sub_253465A14();
}

uint64_t sub_253A51DD8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_253462A5C(&qword_26B248CD0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SessionStart(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Session.Event.Payload(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Session.Event(0);
  sub_253A566A0();
  if (swift_getEnumCaseMultiPayload())
  {
    uint64_t result = sub_253A5664C((uint64_t)v10, (void (*)(void))type metadata accessor for Session.Event.Payload);
    char v12 = 2;
  }
  else
  {
    sub_253A565F8();
    sub_2534D88A0((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v4, &qword_26B248CD0);
    sub_253A5664C((uint64_t)v7, (void (*)(void))type metadata accessor for SessionStart);
    uint64_t v13 = sub_253B05CB0();
    char v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v4, 1, v13) == 1;
    uint64_t result = sub_253472458((uint64_t)v4, &qword_26B248CD0);
  }
  *a1 = v12;
  return result;
}

void TailTranscriptProtocol.latestSuccessfulResponseEventFromLatestRequest.getter()
{
  sub_2534B3258();
  uint64_t v142 = v0;
  uint64_t v3 = v2;
  uint64_t v129 = v4;
  uint64_t v133 = sub_253B06850();
  sub_2534727C4();
  uint64_t v118 = v5;
  MEMORY[0x270FA5388](v6);
  uint64_t v132 = (char *)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  uint64_t v128 = sub_253B06F40();
  sub_2534727C4();
  uint64_t v119 = v8;
  MEMORY[0x270FA5388](v9);
  sub_2534D8F5C((uint64_t)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_253462A5C(&qword_269CE8518);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  sub_25346CB04();
  sub_2534F8208(v13);
  uint64_t v124 = sub_253B06720();
  sub_2534727C4();
  uint64_t v123 = v14;
  MEMORY[0x270FA5388](v15);
  sub_25346CB04();
  sub_2534F8208(v16);
  uint64_t v126 = sub_253B089F0();
  sub_2534727C4();
  uint64_t v125 = v17;
  MEMORY[0x270FA5388](v18);
  sub_2534659D8();
  uint64_t v117 = v19;
  sub_2534B324C();
  MEMORY[0x270FA5388](v20);
  sub_2534B3318();
  uint64_t v121 = v21;
  sub_2534B324C();
  MEMORY[0x270FA5388](v22);
  sub_2534B3318();
  uint64_t v122 = v23;
  sub_2534B324C();
  MEMORY[0x270FA5388](v24);
  sub_2534B35DC();
  uint64_t v148 = sub_253A56B50(v25);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v26);
  BOOL v135 = (char *)&v117 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v28);
  sub_2534B3318();
  uint64_t v136 = v29;
  sub_2534B324C();
  MEMORY[0x270FA5388](v30);
  sub_2534B3318();
  uint64_t v137 = v31;
  sub_2534B324C();
  MEMORY[0x270FA5388](v32);
  uint64_t v146 = (uint64_t)&v117 - v33;
  uint64_t v140 = sub_253A569A4();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v34);
  uint64_t v147 = (uint64_t)&v117 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v36);
  sub_2534B35DC();
  uint64_t v139 = v37;
  uint64_t v38 = *(void *)(*(void *)(v3 + 8) + 8);
  uint64_t v130 = *(void *)(v38 + 8);
  swift_getAssociatedTypeWitness();
  sub_2534727C4();
  uint64_t v145 = v39;
  MEMORY[0x270FA5388](v40);
  uint64_t v143 = (char *)&v117 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v42);
  sub_2534B35DC();
  uint64_t v144 = v43;
  sub_2534727C4();
  uint64_t v45 = v44;
  uint64_t v141 = v44;
  MEMORY[0x270FA5388](v46);
  sub_253A569DC();
  uint64_t v47 = sub_253B0A200();
  sub_25346CB4C(v47);
  sub_253963118();
  MEMORY[0x270FA5388](v48);
  sub_253A5674C();
  uint64_t v49 = sub_253B0A1F0();
  sub_2534727C4();
  uint64_t v131 = v50;
  MEMORY[0x270FA5388](v51);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v52);
  sub_2534D90F4();
  uint64_t v53 = v45[2];
  sub_253A568D4();
  v53();
  uint64_t v138 = v38;
  uint64_t v54 = v130;
  sub_253B09690();
  sub_253A568D4();
  v53();
  int v55 = v1;
  sub_25351C5CC();
  sub_253B09CC0();
  sub_2536D42A4();
  sub_2534659CC();
  v56();
  uint64_t v57 = v145;
  sub_25347FA84();
  v58();
  sub_253A56D04();
  sub_253A56C4C();
  sub_25347FA84();
  v59();
  uint64_t v127 = v49;
  uint64_t v60 = (uint64_t)v1 + *(int *)(v49 + 36);
  uint64_t v61 = v57[2];
  uint64_t v145 = v57 + 2;
  uint64_t v141 = (void (**)(void))(v57 + 1);
  uint64_t v142 = (uint64_t)v61;
  uint64_t v134 = v60;
  while (1)
  {
    sub_2534AF234();
    v62();
    sub_25351C5CC();
    sub_253B09C80();
    swift_getAssociatedConformanceWitness();
    char v63 = sub_253B096B0();
    uint64_t v64 = v55;
    int v65 = *v141;
    sub_2534D9A08();
    v65();
    sub_2534D9A08();
    v65();
    if (v63) {
      goto LABEL_18;
    }
    sub_253B09670();
    uint64_t v66 = v54;
    uint64_t v67 = sub_253B09D30();
    sub_253A56A38(v67, v68);
    sub_253A566A0();
    uint64_t v69 = sub_253A56734();
    v64(v69);
    sub_253A565F8();
    sub_253A566A0();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 48)
    {
      if ((EnumCaseMultiPayload - 1) <= 2)
      {
        sub_253A5664C(v146, (void (*)(void))type metadata accessor for Session.Event.Payload);
        sub_253B082D0();
        uint64_t v76 = (void *)sub_253B089D0();
        os_log_type_t v77 = sub_253B09D80();
        if (!sub_2534AF330(v77)) {
          goto LABEL_17;
        }
        uint64_t v78 = (_WORD *)sub_2534AF384();
        sub_253A56AA8(v78);
        uint64_t v81 = "latestSuccessfulResponseEventFromLatestRequest: No system response following the request";
LABEL_16:
        sub_2534AF240(&dword_253460000, v79, v80, v81);
        sub_2534659B4();
        goto LABEL_17;
      }
      sub_253A5664C(v146, (void (*)(void))type metadata accessor for Session.Event.Payload);
    }
    uint64_t v71 = v137;
    sub_253A566A0();
    int v72 = swift_getEnumCaseMultiPayload();
    sub_253A5664C(v71, (void (*)(void))type metadata accessor for Session.Event.Payload);
    if (v72 == 34)
    {
      sub_253B082D0();
      uint64_t v76 = (void *)sub_253B089D0();
      os_log_type_t v82 = sub_253B09D80();
      if (!sub_2534AF330(v82)) {
        goto LABEL_17;
      }
      uint64_t v83 = (_WORD *)sub_2534AF384();
      sub_253A56AA8(v83);
      uint64_t v81 = "latestSuccessfulResponseEventFromLatestRequest: No system response following the external agent request";
      goto LABEL_16;
    }
    uint64_t v73 = v136;
    sub_253A566A0();
    int v74 = swift_getEnumCaseMultiPayload();
    sub_253A5664C(v73, (void (*)(void))type metadata accessor for Session.Event.Payload);
    if (v74 == 35)
    {
      sub_253B082D0();
      uint64_t v76 = (void *)sub_253B089D0();
      os_log_type_t v84 = sub_253B09D80();
      if (sub_2534AF330(v84))
      {
        uint64_t v85 = (_WORD *)sub_2534AF384();
        sub_253A56AA8(v85);
        uint64_t v81 = "latestSuccessfulResponseEventFromLatestRequest: Latest system response is an external agent outcome";
        goto LABEL_16;
      }
LABEL_17:

      sub_2534659CC();
      v86();
      sub_253A5664C(v147, (void (*)(void))type metadata accessor for Session.Event);
      sub_2535794C4();
LABEL_18:
      sub_2534659CC();
      v87();
      sub_253465A98();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v88, v89, v90, v128);
      goto LABEL_32;
    }
    uint64_t v75 = (uint64_t)v135;
    sub_253A566A0();
    if (swift_getEnumCaseMultiPayload() == 30) {
      break;
    }
    int v55 = v64;
    sub_253A5664C(v147, (void (*)(void))type metadata accessor for Session.Event);
    sub_253A5664C(v75, (void (*)(void))type metadata accessor for Session.Event.Payload);
    uint64_t v54 = v66;
  }
  sub_253A56D04();
  sub_25347FA84();
  v91();
  uint64_t v92 = sub_253B066E0();
  uint64_t v93 = *(void *)(v92 + 16);
  if (v93)
  {
    uint64_t v146 = *(void *)(v119 + 16);
    sub_2535786F4();
    uint64_t v142 = v92;
    uint64_t v95 = v92 + v94;
    uint64_t v145 = (uint64_t (**)(char *, uint64_t))(v118 + 88);
    LODWORD(v144) = *MEMORY[0x263F4C7D8];
    uint64_t v96 = (void (**)(char *, uint64_t))(v118 + 8);
    uint64_t v148 = v97;
    uint64_t v143 = *(char **)(v97 + 56);
    uint64_t v98 = v128;
    uint64_t v100 = v132;
    uint64_t v99 = v133;
    while (1)
    {
      sub_2534AF234();
      v101();
      sub_253B06F30();
      int v102 = (*v145)(v100, v99);
      (*v96)(v100, v99);
      if (v102 == v144) {
        break;
      }
      sub_2534D9A08();
      v103();
      v95 += (uint64_t)v143;
      if (!--v93)
      {
        sub_253A56A44();
        uint64_t v105 = v120;
        goto LABEL_26;
      }
    }
    uint64_t v105 = v120;
    sub_2534D9A78();
    sub_2534D8E14();
    v106();
    sub_253A56A44();
  }
  else
  {
    uint64_t v104 = 1;
    uint64_t v93 = v129;
    uint64_t v98 = v128;
    uint64_t v105 = v120;
  }
LABEL_26:
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v105, v104, 1, v98);
  swift_bridgeObjectRelease();
  sub_2534D8B48(v105, 1, v98);
  if (v107)
  {
    uint64_t v108 = v117;
    sub_253B082D0();
    uint64_t v109 = (void *)sub_253B089D0();
    os_log_type_t v110 = sub_253B09D80();
    if (sub_2534AF330(v110))
    {
      uint64_t v111 = (_WORD *)sub_2534AF384();
      sub_253A56AA8(v111);
      sub_2534AF240(&dword_253460000, v112, v113, "latestSuccessfulResponseEventFromLatestRequest: No success outcome in latest system response");
      sub_2534659B4();
    }

    sub_2535794C4();
    v114(v108, v126);
  }
  sub_2535794C4();
  sub_2534659CC();
  v115();
  sub_253A5664C(v147, (void (*)(void))type metadata accessor for Session.Event);
  sub_2534DA4BC();
  v116();
  sub_253A56230(v105, v93);
LABEL_32:
  sub_253465A14();
}

void FullTranscriptProtocol.nextValidUnexecutedActionsOrQueries()()
{
  sub_2534B3258();
  uint64_t v180 = v1;
  uint64_t v2 = sub_2534D8D00();
  uint64_t v3 = type metadata accessor for TypeConversionResult(v2);
  uint64_t v4 = sub_25346CB4C(v3);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = sub_2534F8208((uint64_t)v163 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  Stepuint64_t Results = type metadata accessor for QueryStepResults(v6);
  uint64_t v8 = sub_25346CB4C(StepResults);
  MEMORY[0x270FA5388](v8);
  sub_25346CB04();
  uint64_t v10 = sub_2534F8208(v9);
  uint64_t v11 = type metadata accessor for StatementResult(v10);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  sub_25346CB04();
  uint64_t v14 = sub_2534F8208(v13);
  uint64_t v15 = type metadata accessor for ActionStepResult(v14);
  uint64_t v16 = sub_25346CB4C(v15);
  MEMORY[0x270FA5388](v16);
  sub_25346CB04();
  sub_2534D8F5C(v17);
  uint64_t v172 = v0;
  uint64_t v181 = *(void *)(v0 + 8);
  uint64_t v18 = *(void *)(*(void *)(*(void *)(v181 + 8) + 8) + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v20 = sub_253B055C0();
  uint64_t v21 = type metadata accessor for Session.Event(255);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  sub_25346CAF4();
  sub_253963118();
  MEMORY[0x270FA5388](v22);
  sub_253A56A60();
  uint64_t v183 = sub_253A56B50(v23);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v24);
  sub_25346CB04();
  sub_2534D8F5C(v25);
  sub_25347B88C();
  MEMORY[0x270FA5388](v26);
  sub_25346CB04();
  sub_2534D8F5C(v27);
  sub_253A56BF0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v187 = sub_253B09E00();
  sub_2534727C4();
  uint64_t v189 = v28;
  MEMORY[0x270FA5388](v29);
  sub_2534659D8();
  uint64_t v186 = v30;
  sub_2534B324C();
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  sub_253A56CA0(v32, v33, v34, v35, v36, v37, v38, v39, v163[0]);
  sub_253A56998();
  uint64_t v40 = swift_getAssociatedTypeWitness();
  sub_2534727C4();
  v163[9] = v41;
  sub_253963118();
  MEMORY[0x270FA5388](v42);
  sub_253A56A60();
  sub_2534D8F5C(v43);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v163[7] = sub_253B0A180();
  sub_2534727C4();
  v163[6] = v44;
  sub_253963118();
  MEMORY[0x270FA5388](v45);
  sub_253A56A60();
  sub_2534D8F5C(v46);
  uint64_t v47 = swift_getAssociatedConformanceWitness();
  sub_253A56CEC();
  v163[5] = sub_253B06760();
  sub_2534727C4();
  v163[4] = v48;
  sub_253963118();
  MEMORY[0x270FA5388](v49);
  sub_253A56A60();
  sub_2534F8208(v50);
  v163[10] = v40;
  v163[2] = v47;
  uint64_t v171 = sub_253B06750();
  sub_2534727C4();
  v163[11] = v51;
  sub_253963118();
  MEMORY[0x270FA5388](v52);
  sub_253A56C34((uint64_t)v163 - v53);
  sub_2534727C4();
  uint64_t v167 = v54;
  MEMORY[0x270FA5388](v55);
  sub_2534659D8();
  uint64_t v179 = v56;
  sub_2534B324C();
  MEMORY[0x270FA5388](v57);
  sub_2534B35DC();
  sub_2534D8F5C(v58);
  uint64_t v173 = v18;
  uint64_t v169 = swift_getAssociatedTypeWitness();
  sub_2534727C4();
  uint64_t v168 = v59;
  sub_253963118();
  MEMORY[0x270FA5388](v60);
  sub_253A56A60();
  sub_2534D8F5C(v61);
  sub_2534727C4();
  uint64_t v178 = v62;
  MEMORY[0x270FA5388](v63);
  sub_2534D9264(v64, v163[0]);
  sub_253A56BF0();
  uint64_t v65 = v20;
  uint64_t v190 = v21;
  uint64_t v66 = swift_getTupleTypeMetadata3();
  uint64_t v67 = sub_253B09E00();
  sub_2534727C4();
  uint64_t v69 = v68;
  sub_253963118();
  MEMORY[0x270FA5388](v70);
  int v72 = (char *)v163 - v71;
  uint64_t v191 = AssociatedTypeWitness;
  uint64_t v165 = sub_253B09E00();
  sub_2534727C4();
  uint64_t v164 = v73;
  MEMORY[0x270FA5388](v74);
  sub_2534659D8();
  uint64_t v177 = v75;
  sub_2534B324C();
  uint64_t v77 = MEMORY[0x270FA5388](v76);
  uint64_t v79 = (char *)v163 - v78;
  MEMORY[0x270FA5388](v77);
  sub_2534D90F4();
  uint64_t v175 = v1;
  TailTranscriptProtocol.latestQueryEvent()();
  uint64_t v80 = sub_2539627D4();
  sub_2534D8B48(v80, v81, v66);
  if (v122)
  {
    (*(void (**)(char *, uint64_t))(v69 + 8))(v72, v67);
    sub_253465A98();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v82, v83, v84, v191);
  }
  else
  {
    uint64_t v85 = &v72[*(int *)(v66 + 48)];
    uint64_t v86 = (uint64_t)&v72[*(int *)(v66 + 64)];
    sub_253A56D04();
    sub_25351C5C0();
    uint64_t v87 = v191;
    sub_25347FA84();
    v88();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v79, 0, 1, v87);
    sub_253A5664C(v86, (void (*)(void))type metadata accessor for Session.Event);
    sub_25347B88C();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v85, v65);
  }
  sub_2534AF234();
  v90();
  uint64_t v91 = sub_2536D3ACC();
  sub_2534D8B48(v91, v92, v191);
  uint64_t v93 = v174;
  uint64_t v94 = TupleTypeMetadata2;
  if (v122)
  {
    sub_253A56C80();
    sub_253B09CB0();
    swift_getAssociatedConformanceWitness();
    sub_253B09D00();
    sub_253A569FC();
    sub_2534659CC();
    v95();
    sub_2534DA4BC();
    v96();
    sub_253A56C80();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v79, v165);
  }
  else
  {
    sub_2534DA4BC();
    v98();
    sub_253A56A6C();
    sub_2534D9B10();
    uint64_t v99 = v191;
    sub_25347FA84();
    v100();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(AssociatedTypeWitness, 0, 1, v99);
    uint64_t v21 = v164;
  }
  sub_2534AF234();
  v101();
  uint64_t v102 = sub_2539627D4();
  sub_2534D8B48(v102, v103, v191);
  if (v122)
  {
    uint64_t v104 = *(void (**)(void))(v21 + 8);
    sub_2534D9AA0();
    sub_25347FB18();
    v104();
    swift_getTupleTypeMetadata2();
    sub_253B09B00();
    sub_2534D9B10();
    sub_25347FB18();
    v104();
LABEL_45:
    sub_253465A14();
    return;
  }
  v163[12] = AssociatedTypeWitness;
  sub_253A56A6C();
  sub_25351C5C0();
  uint64_t v181 = v106;
  uint64_t v182 = v105;
  sub_25347FA84();
  v107();
  uint64_t v193 = sub_253B09B00();
  char v108 = sub_253B096B0();
  if (v108)
  {
    sub_253A3D030();
    uint64_t AssociatedConformanceWitness = v109;
    uint64_t v169 = v110;
    sub_2534AF234();
    v111();
    swift_getWitnessTable();
    sub_253A56C80();
    sub_253B09D20();
    sub_2535794C4();
    sub_2534659CC();
    v112();
    sub_253B09C90();
    sub_253A569FC();
    sub_2534659CC();
    v113();
    uint64_t v114 = v188;
    sub_253B06730();
    sub_25351C5C0();
    sub_2534659CC();
    v115();
    sub_253B06740();
    sub_253A56BFC();
    uint64_t v189 = v116;
    uint64_t v180 = v117;
    sub_25347FA84();
    v118();
    sub_2534D8B48(v114, 1, v94);
    if (!v122)
    {
      uint64_t v177 = 0;
      uint64_t v178 = (void (**)(void))(v167 + 8);
      uint64_t v173 = v65 - 8;
      uint64_t v168 = v65;
      uint64_t v119 = v163[0];
      while (1)
      {
        sub_25347FA84();
        v120();
        sub_253A565F8();
        sub_253A56CB4(v190);
        sub_253A566A0();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        BOOL v122 = EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 8;
        if (v122) {
          goto LABEL_24;
        }
        uint64_t v123 = v176;
        switch(EnumCaseMultiPayload)
        {
          case 17:
            uint64_t v127 = v163[13];
            sub_253A565F8();
            sub_253A56814();
            MEMORY[0x270FA5388](v128);
            sub_253A56710();
            *(void *)(v129 - 16) = v127;
            sub_253A56B78();
            sub_253A56C10();
            swift_getWitnessTable();
            sub_253A5685C();
            sub_253A5697C();
            sub_253A56CC0();
            if (!v122)
            {
              sub_253A56784();
              sub_253A5664C(v119, (void (*)(void))type metadata accessor for Session.Event);
              uint64_t v146 = *v178;
              sub_2534D91AC();
              v146();
              uint64_t v147 = type metadata accessor for ActionStepResult;
              uint64_t v148 = v127;
              goto LABEL_39;
            }
            sub_253A5664C(v119, (void (*)(void))type metadata accessor for Session.Event);
            sub_2534659CC();
            v130();
            uint64_t v131 = type metadata accessor for ActionStepResult;
            uint64_t v132 = v127;
            goto LABEL_34;
          case 18:
            sub_253A565F8();
            sub_253A56814();
            MEMORY[0x270FA5388](v133);
            sub_253A56710();
            *(void *)(v134 - 16) = v123;
            sub_253A56B78();
            sub_253A56C10();
            swift_getWitnessTable();
            sub_253B09CE0();
            sub_253A5697C();
            sub_253A56CC0();
            if (!v122)
            {
              sub_253A56784();
              sub_253A5664C(v119, (void (*)(void))type metadata accessor for Session.Event);
              uint64_t v149 = *v178;
              sub_2534D91AC();
              v149();
              sub_253A5664C(v123, (void (*)(void))type metadata accessor for QueryStepResults);
              sub_253A56AC4();
              sub_253A568A0();
              sub_2534659CC();
              v150();
              sub_2534D91AC();
              v149();
              goto LABEL_41;
            }
            sub_253A5664C(v119, (void (*)(void))type metadata accessor for Session.Event);
            sub_2534659CC();
            v135();
            uint64_t v131 = type metadata accessor for QueryStepResults;
            uint64_t v132 = v123;
LABEL_34:
            sub_253A5664C(v132, (void (*)(void))v131);
            goto LABEL_41;
          case 31:
            uint64_t v136 = v166;
            sub_253A565F8();
            sub_253A56814();
            MEMORY[0x270FA5388](v137);
            sub_253A56710();
            *(void *)(v138 - 16) = v136;
            sub_253A56B78();
            sub_253A56C10();
            swift_getWitnessTable();
            sub_253A5685C();
            sub_253A5697C();
            sub_253A56CC0();
            if (!v122)
            {
              sub_253A56784();
              sub_253A5664C(v119, (void (*)(void))type metadata accessor for Session.Event);
              uint64_t v151 = *v178;
              sub_2534D91AC();
              v151();
              uint64_t v146 = v151;
              uint64_t v147 = type metadata accessor for StatementResult;
              uint64_t v148 = v166;
LABEL_39:
              sub_253A5664C(v148, (void (*)(void))v147);
              sub_253A56AC4();
              sub_253A568A0();
              sub_2534659CC();
              v152();
              sub_2534D91AC();
              v146();
LABEL_41:
              uint64_t v94 = TupleTypeMetadata2;
              break;
            }
            sub_253A5664C(v119, (void (*)(void))type metadata accessor for Session.Event);
            sub_2534659CC();
            v139();
            uint64_t v131 = type metadata accessor for StatementResult;
            uint64_t v132 = v166;
            goto LABEL_34;
          case 38:
            goto LABEL_24;
          case 41:
            uint64_t v140 = v163[14];
            sub_253A565F8();
            sub_253A56814();
            MEMORY[0x270FA5388](v141);
            sub_253A56710();
            *(void *)(v142 - 16) = v140;
            uint64_t v143 = TupleTypeMetadata3;
            sub_253B09B80();
            sub_253A56C10();
            swift_getWitnessTable();
            sub_253A5685C();
            sub_253A5697C();
            sub_253A56CC0();
            if (v122)
            {
              sub_253A5664C(v119, (void (*)(void))type metadata accessor for Session.Event);
              sub_2534659CC();
              v144();
              sub_253A5664C(v140, (void (*)(void))type metadata accessor for TypeConversionResult);
            }
            else
            {
              sub_253A56784();
              sub_253A5664C(v119, (void (*)(void))type metadata accessor for Session.Event);
              uint64_t v153 = *v178;
              uint64_t v154 = v191;
              sub_2534D91AC();
              v153();
              sub_253A5664C(v140, (void (*)(void))type metadata accessor for TypeConversionResult);
              sub_253A5664C(v94 + *(int *)(v143 + 64), (void (*)(void))type metadata accessor for Session.Event);
              sub_253A568A0();
              sub_2534659CC();
              v155();
              ((void (*)(uint64_t, uint64_t))v153)(v94, v154);
            }
            uint64_t v93 = v174;
            goto LABEL_41;
          case 40:
LABEL_24:
            sub_253A5664C(v93, (void (*)(void))type metadata accessor for Session.Event.Payload);
            sub_2534DA498();
            sub_2534AF234();
            v124();
            sub_2534B3428();
            v125();
            sub_253A566A0();
            sub_253A56B6C();
            uint64_t v93 = v174;
            sub_253B09B80();
            uint64_t v94 = TupleTypeMetadata2;
            sub_253B09B40();
            sub_253A5664C(v119, (void (*)(void))type metadata accessor for Session.Event);
            sub_2534659CC();
            v126();
            break;
          default:
            sub_253A5664C(v119, (void (*)(void))type metadata accessor for Session.Event);
            sub_2534659CC();
            v145();
            sub_253A5664C(v93, (void (*)(void))type metadata accessor for Session.Event.Payload);
            break;
        }
        uint64_t v156 = v188;
        sub_253B06740();
        sub_253A56BFC();
        sub_25347FA84();
        v157();
        sub_2534D8B48(v156, 1, v94);
        if (v122) {
          goto LABEL_44;
        }
      }
    }
    uint64_t v177 = 0;
LABEL_44:
    sub_2535794C4();
    sub_2534659CC();
    uint64_t v159 = v158();
    uint64_t v192 = v193;
    MEMORY[0x270FA5388](v159);
    uint64_t v160 = v172;
    v163[-2] = v175;
    v163[-1] = v160;
    sub_253B09B80();
    swift_bridgeObjectRetain();
    swift_getTupleTypeMetadata2();
    swift_getWitnessTable();
    sub_253A480D4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2535794C4();
    sub_2534659CC();
    v161();
    sub_2535794C4();
    sub_2534659CC();
    v162();
    goto LABEL_45;
  }
  __break(1u);
}

void sub_253A54124()
{
  sub_2534847F8();
  uint64_t v45 = v2;
  uint64_t v3 = sub_253B055C0();
  sub_2534727C4();
  uint64_t v43 = v4;
  MEMORY[0x270FA5388](v5);
  sub_2534D8F68(v6, v41);
  uint64_t v44 = sub_253462A5C(&qword_269CDDCC0) - 8;
  MEMORY[0x270FA5388](v44);
  sub_25346CB04();
  uint64_t v42 = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for Session.Event(255);
  sub_253A56CEC();
  uint64_t v9 = swift_getTupleTypeMetadata3() - 8;
  sub_253963118();
  MEMORY[0x270FA5388](v10);
  sub_253A56804();
  uint64_t v11 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  sub_2534659D8();
  uint64_t v46 = v13;
  sub_2534B324C();
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v41 - v16;
  MEMORY[0x270FA5388](v15);
  sub_2534D97C0();
  uint64_t v18 = v0 + *(int *)(v9 + 56);
  uint64_t v19 = v0 + *(int *)(v9 + 72);
  uint64_t v48 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v49 = v0;
  uint64_t v50 = AssociatedTypeWitness;
  uint64_t v20 = v43;
  sub_2534AF234();
  v21();
  sub_253A56C4C();
  uint64_t v22 = v42;
  sub_2534AF234();
  v23();
  uint64_t v47 = v19;
  sub_253A566A0();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32);
  uint64_t v25 = v18;
  uint64_t v26 = (uint64_t *)&unk_26B248CB0;
  v24(v1, v25, v3);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 0, 1, v3);
  sub_2534D88A0(v45, (uint64_t)v17, (uint64_t *)&unk_26B248CB0);
  uint64_t v27 = v22 + *(int *)(v44 + 56);
  uint64_t v28 = sub_2536D5500();
  sub_2534D88A0(v28, v29, (uint64_t *)&unk_26B248CB0);
  uint64_t v30 = sub_253578D38();
  sub_2534D88A0(v30, v31, (uint64_t *)&unk_26B248CB0);
  uint64_t v32 = sub_2535792A4();
  sub_253A56C58(v32, v33);
  if (v34)
  {
    sub_253472458((uint64_t)v17, (uint64_t *)&unk_26B248CB0);
    sub_253472458(v1, (uint64_t *)&unk_26B248CB0);
    sub_253A56C58(v27, 1);
    if (!v34) {
      uint64_t v26 = &qword_269CDDCC0;
    }
  }
  else
  {
    sub_2534D88A0(v22, v46, (uint64_t *)&unk_26B248CB0);
    sub_253A56C58(v27, 1);
    if (v34)
    {
      uint64_t v35 = sub_253578D38();
      sub_253472458(v35, v36);
      sub_253472458(v1, (uint64_t *)&unk_26B248CB0);
      sub_2536D2A7C();
      v37();
      uint64_t v26 = &qword_269CDDCC0;
    }
    else
    {
      v24(v41, v27, v3);
      sub_253A561C4();
      sub_2535791D8();
      sub_253B096B0();
      uint64_t v38 = *(void (**)(void))(v20 + 8);
      sub_2536D2A7C();
      v38();
      uint64_t v26 = (uint64_t *)&unk_26B248CB0;
      sub_253472458((uint64_t)v17, (uint64_t *)&unk_26B248CB0);
      sub_253472458(v1, (uint64_t *)&unk_26B248CB0);
      uint64_t v39 = sub_2534D9A78();
      ((void (*)(uint64_t))v38)(v39);
    }
  }
  sub_253472458(v22, v26);
  sub_253A5664C(v47, (void (*)(void))type metadata accessor for Session.Event);
  sub_2534659CC();
  v40();
  sub_2534847C8();
}

uint64_t sub_253A54560()
{
  return sub_253B055A0() & 1;
}

uint64_t sub_253A5462C(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a2;
  uint64_t v34 = type metadata accessor for Session.Event.Payload(0);
  MEMORY[0x270FA5388](v34);
  uint64_t v33 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_253B055C0();
  uint64_t v31 = type metadata accessor for Session.Event(255);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v7 = TupleTypeMetadata3 - 8;
  MEMORY[0x270FA5388](TupleTypeMetadata3);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v28 = type metadata accessor for TypeConversionRequest(0);
  MEMORY[0x270FA5388](v28);
  uint64_t v29 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(int *)(v7 + 56);
  uint64_t v12 = &v9[v11];
  uint64_t v13 = (uint64_t)&v9[*(int *)(v7 + 72)];
  uint64_t v14 = a1 + v11;
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v17 = v15 + 16;
  uint64_t v35 = AssociatedTypeWitness;
  uint64_t v18 = AssociatedTypeWitness;
  uint64_t v19 = (uint64_t)v33;
  v16(v9, a1, v18);
  uint64_t v20 = *(void *)(v5 - 8);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v22 = v20 + 16;
  uint64_t v32 = v12;
  v21(v12, v14, v5);
  sub_253A566A0();
  sub_253A566A0();
  sub_253A5664C(v13, (void (*)(void))type metadata accessor for Session.Event);
  uint64_t v23 = (void (**)(char *, uint64_t))(v22 - 8);
  uint64_t v24 = (void (**)(char *, uint64_t))(v17 - 8);
  if (swift_getEnumCaseMultiPayload() == 40)
  {
    uint64_t v25 = (uint64_t)v29;
    sub_253A565F8();
    (*v23)(v32, v5);
    (*v24)(v9, v35);
    type metadata accessor for TypeConversionResult(0);
    char v26 = _s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0();
    sub_253A5664C(v25, (void (*)(void))type metadata accessor for TypeConversionRequest);
  }
  else
  {
    sub_253A5664C(v19, (void (*)(void))type metadata accessor for Session.Event.Payload);
    (*v23)(v32, v5);
    (*v24)(v9, v35);
    char v26 = 0;
  }
  return v26 & 1;
}

uint64_t sub_253A549CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_253B055C0();
  type metadata accessor for Session.Event(255);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v7 = TupleTypeMetadata3 - 8;
  uint64_t v8 = MEMORY[0x270FA5388](TupleTypeMetadata3);
  uint64_t v38 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v35 = a2 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  uint64_t v12 = *(int *)(v7 + 56);
  uint64_t v13 = &v11[v12];
  uint64_t v34 = &v11[v12];
  uint64_t v14 = *(int *)(v7 + 72);
  uint64_t v15 = a1 + v12;
  uint64_t v36 = a1 + v14;
  uint64_t v37 = &v11[v14];
  uint64_t v32 = a1;
  uint64_t v16 = AssociatedTypeWitness;
  uint64_t v28 = AssociatedTypeWitness;
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v18 = *(void (**)(void))(v17 + 16);
  uint64_t v30 = v15;
  uint64_t v31 = v18;
  ((void (*)(char *, uint64_t, uint64_t))v18)(v11, a1, v16);
  uint64_t v19 = v5;
  uint64_t v29 = v5;
  uint64_t v20 = *(void *)(v5 - 8);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v21(v13, v15, v19);
  sub_253A566A0();
  uint64_t v22 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v33, v11, v28);
  uint64_t v23 = &v38[*(int *)(v7 + 56)];
  v31();
  uint64_t v24 = v29;
  v21(v23, v30, v29);
  sub_253A566A0();
  sub_253A565F8();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v20 + 8);
  v25(v23, v24);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v38, v22);
  sub_253A5664C((uint64_t)v37, (void (*)(void))type metadata accessor for Session.Event);
  return ((uint64_t (*)(char *, uint64_t))v25)(v34, v24);
}

void FullTranscriptProtocol.latestLocaleSettings()()
{
  sub_2534B3258();
  uint64_t v17 = v1;
  uint64_t v18 = v0;
  uint64_t v19 = v2;
  uint64_t v4 = *(void *)(*(void *)(*(void *)(v3 + 8) + 8) + 8);
  sub_253A5691C();
  sub_25346CAF4();
  sub_253963118();
  MEMORY[0x270FA5388](v5);
  sub_253A56C34((uint64_t)v16 - v6);
  uint64_t v24 = v4;
  v16[1] = swift_getWitnessTable();
  sub_253A56998();
  sub_253B0A200();
  sub_2534727C4();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  sub_2534B340C();
  MEMORY[0x270FA5388](v10);
  sub_2534D90F4();
  sub_25347907C(&qword_26B248CE8);
  swift_getWitnessTable();
  sub_253A56A2C();
  uint64_t v11 = sub_253B0A150();
  sub_253A56C28(v11);
  swift_getWitnessTable();
  v16[2] = sub_253A568E0();
  sub_253B05D70();
  swift_getWitnessTable();
  sub_253B0A150();
  sub_2534727C4();
  v16[5] = v12;
  sub_253963118();
  MEMORY[0x270FA5388](v13);
  sub_253A5674C();
  MEMORY[0x25A268990](v17, v0);
  sub_253B09690();
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_2534D9718();
  sub_253B0A290();
  uint64_t v14 = *(void (**)(void))(v8 + 8);
  sub_2534D9A08();
  v14();
  sub_253B0A270();
  sub_2534DA498();
  sub_2534D9A08();
  v14();
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v20 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_253B09D00();
  sub_2534659CC();
  v15();
  sub_253465A14();
}

uint64_t sub_253A5505C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SessionStart(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Session.Event.Payload(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Session.Event(0);
  sub_253A566A0();
  if (swift_getEnumCaseMultiPayload())
  {
    uint64_t v8 = sub_253B05D70();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 1, 1, v8);
    return sub_253A5664C((uint64_t)v7, (void (*)(void))type metadata accessor for Session.Event.Payload);
  }
  else
  {
    sub_253A565F8();
    uint64_t v10 = sub_253B05D70();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, v4, v10);
    sub_253A5664C((uint64_t)v4, (void (*)(void))type metadata accessor for SessionStart);
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v10);
  }
}

void FullTranscriptProtocol.lastMap<A>(_:)()
{
  sub_2534847F8();
  uint64_t v57 = v0;
  uint64_t v52 = v2;
  uint64_t v53 = v3;
  sub_253B09E00();
  sub_2534727C4();
  sub_253963118();
  MEMORY[0x270FA5388](v4);
  sub_253A56A60();
  uint64_t v5 = type metadata accessor for Session.Event(0);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_2534659D8();
  uint64_t v54 = v7;
  sub_2534B324C();
  MEMORY[0x270FA5388](v8);
  sub_2534B35DC();
  swift_getAssociatedTypeWitness();
  sub_2534727C4();
  uint64_t v55 = v9;
  MEMORY[0x270FA5388](v10);
  sub_2534659D8();
  sub_2534B324C();
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  sub_253A56CA0(v12, v13, v14, v15, v16, v17, v18, v19, v51);
  sub_2534727C4();
  uint64_t v21 = v20;
  MEMORY[0x270FA5388](v22);
  sub_253A569BC();
  uint64_t v23 = sub_253B0A200();
  sub_25346CB4C(v23);
  sub_253963118();
  MEMORY[0x270FA5388](v24);
  sub_253A56D10();
  sub_253B0A1F0();
  sub_2534727C4();
  MEMORY[0x270FA5388](v25);
  sub_2534B340C();
  MEMORY[0x270FA5388](v26);
  sub_2536D4170();
  uint64_t v27 = *(void (**)(void))(v21 + 16);
  sub_253A56890();
  v27();
  sub_253B09690();
  sub_253A56890();
  v27();
  sub_253A56AF8();
  sub_253B09CC0();
  sub_253A56C4C();
  sub_2534659CC();
  v28();
  sub_253A56A6C();
  sub_25347FA84();
  v29();
  sub_25347FA84();
  v30();
  while (1)
  {
    sub_2534AF234();
    v31();
    sub_253A56AF8();
    sub_253B09C80();
    swift_getAssociatedConformanceWitness();
    char v56 = sub_253B096B0();
    uint64_t v32 = v1;
    uint64_t v33 = *(void (**)(void))(v55 + 8);
    sub_2534D9A08();
    v33();
    sub_253A3D518();
    sub_2534D9A08();
    v33();
    if (v56) {
      break;
    }
    sub_253B09670();
    uint64_t v34 = v32;
    uint64_t v35 = sub_253B09D30();
    sub_253A56A38(v35, v36);
    sub_253A566A0();
    uint64_t v37 = sub_253A56734();
    v32(v37);
    sub_253A565F8();
    uint64_t v38 = sub_253A56BE4();
    v39(v38);
    if (v57)
    {
      sub_253A5664C(v54, (void (*)(void))type metadata accessor for Session.Event);
      sub_2534659CC();
      v45();
      goto LABEL_9;
    }
    uint64_t v57 = 0;
    sub_253A5664C(v54, (void (*)(void))type metadata accessor for Session.Event);
    uint64_t v40 = sub_2536D3ACC();
    uint64_t v41 = v53;
    sub_253A56C58(v40, v42);
    if (!v43)
    {
      sub_2534659CC();
      v46();
      sub_25347B88C();
      uint64_t v47 = v52;
      sub_2534D8E14();
      v48();
      uint64_t v49 = 0;
      goto LABEL_8;
    }
    sub_2534659CC();
    v44();
    uint64_t v1 = v34;
  }
  sub_2534659CC();
  v50();
  uint64_t v49 = 1;
  uint64_t v41 = v53;
  uint64_t v47 = v52;
LABEL_8:
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v47, v49, 1, v41);
LABEL_9:
  sub_2534847C8();
}

void Session.SessionState.retrieveSessionStart()()
{
  sub_2534847F8();
  v21[1] = v4;
  uint64_t v22 = sub_253B089F0();
  sub_2534727C4();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_2534966B0();
  type metadata accessor for Session.Event.Payload(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_253462A5C(&qword_26B241248);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_25349888C();
  uint64_t v14 = type metadata accessor for Session.Event(v13);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_253A5696C();
  uint64_t v17 = type metadata accessor for Session.Transcript(v16);
  sub_2534B3CC0(*(void *)(v0 + *(int *)(v17 + 32)), v2);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v2, 1, v14) == 1)
  {
    sub_253472458(v2, &qword_26B241248);
  }
  else
  {
    sub_2536D5500();
    sub_253A565F8();
    sub_253A566A0();
    sub_253A5664C(v3, (void (*)(void))type metadata accessor for Session.Event);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_253A565F8();
      goto LABEL_9;
    }
    sub_253A5664C((uint64_t)v10, (void (*)(void))type metadata accessor for Session.Event.Payload);
  }
  sub_253B08370();
  uint64_t v18 = sub_253B089D0();
  os_log_type_t v19 = sub_253B09D80();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_253460000, v18, v19, "Error! setup(sessionState:) called on non-SessionStart event", v20, 2u);
    MEMORY[0x25A269E60](v20, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v22);
  sub_253A56324();
  swift_allocError();
  swift_willThrow();
LABEL_9:
  sub_2534847C8();
}

void Session.SessionState.latestSessionStart()()
{
  sub_2534847F8();
  v36[0] = v4;
  uint64_t v5 = sub_253B089F0();
  sub_2534727C4();
  uint64_t v40 = v6;
  MEMORY[0x270FA5388](v7);
  sub_25346CB04();
  uint64_t v39 = v8;
  uint64_t v9 = sub_253483660();
  uint64_t v42 = type metadata accessor for Session.Event.Payload(v9);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v10);
  uint64_t v38 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v12);
  sub_2536D4170();
  uint64_t v13 = sub_253462A5C(&qword_26B241248);
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = sub_25394437C(v15, v36[0]);
  uint64_t v17 = type metadata accessor for Session.Event(v16);
  sub_2534727C4();
  MEMORY[0x270FA5388](v18);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v19);
  sub_2534B35DC();
  uint64_t v37 = v20;
  uint64_t v21 = sub_253483660();
  uint64_t v22 = *(void *)(v0 + *(int *)(type metadata accessor for Session.Transcript(v21) + 32));
  uint64_t v23 = *(void *)(v22 + 16);
  if (!v23)
  {
    uint64_t v26 = swift_bridgeObjectRetain();
    char v25 = 1;
LABEL_8:
    MEMORY[0x270FA5388](v26);
    uint64_t v27 = v41;
    sub_253A560F0((void *(*)(void *__return_ptr, uint64_t *))sub_253A563D0, v23, v25, (void (*)(void))type metadata accessor for Session.Event, v41);
    swift_bridgeObjectRelease();
    uint64_t v28 = sub_2535792A4();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v28, v29, v17) == 1)
    {
      sub_253472458((uint64_t)v27, &qword_26B241248);
    }
    else
    {
      uint64_t v30 = v37;
      sub_253A565F8();
      uint64_t v31 = (uint64_t)v38;
      sub_253A566A0();
      sub_253A5664C(v30, (void (*)(void))type metadata accessor for Session.Event);
      if (!swift_getEnumCaseMultiPayload())
      {
        sub_253A565F8();
LABEL_15:
        sub_2534847C8();
        return;
      }
      sub_253A5664C(v31, (void (*)(void))type metadata accessor for Session.Event.Payload);
    }
    sub_253B08370();
    uint64_t v32 = sub_253B089D0();
    os_log_type_t v33 = sub_253B09D80();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl(&dword_253460000, v32, v33, "Error! lastSessionStart() called on non-SessionStart event", v34, 2u);
      MEMORY[0x25A269E60](v34, -1, -1);
    }

    sub_25351C384();
    v35();
    sub_253A56324();
    swift_allocError();
    swift_willThrow();
    goto LABEL_15;
  }
  v36[1] = v1;
  v36[2] = v5;
  sub_2535786F4();
  swift_bridgeObjectRetain();
  while (v23 <= *(void *)(v22 + 16))
  {
    --v23;
    sub_253A566A0();
    sub_253A566A0();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    char v25 = EnumCaseMultiPayload != 0;
    sub_253A5664C(v2, (void (*)(void))type metadata accessor for Session.Event.Payload);
    uint64_t v26 = sub_253A5664C(v3, (void (*)(void))type metadata accessor for Session.Event);
    if (!EnumCaseMultiPayload || !v23) {
      goto LABEL_8;
    }
  }
  __break(1u);
}

uint64_t static Session.SessionState.SessionStateError.== infix(_:_:)()
{
  return 1;
}

uint64_t Session.SessionState.SessionStateError.hash(into:)()
{
  return sub_253B0A600();
}

uint64_t Session.SessionState.SessionStateError.hashValue.getter()
{
  return sub_253B0A630();
}

uint64_t sub_253A55F8C()
{
  return Session.SessionState.SessionStateError.hashValue.getter();
}

uint64_t sub_253A55FA4()
{
  return Session.SessionState.SessionStateError.hash(into:)();
}

unint64_t sub_253A55FBC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253A55FFC(a1, a2, a3, (void (*)(void))type metadata accessor for ProgramStatement);
}

unint64_t sub_253A55FFC(unint64_t result, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a2 + 16) > result)
  {
    a4(0);
    return sub_253A566A0();
  }
  __break(1u);
  return result;
}

void *sub_253A560C4@<X0>(void *(*a1)(void *__return_ptr, uint64_t *)@<X0>, uint64_t a2@<X2>, char a3@<W3>, void *a4@<X8>)
{
  return sub_253A560F0(a1, a2, a3, (void (*)(void))type metadata accessor for ProgramStatement, a4);
}

void *sub_253A560F0@<X0>(void *(*a1)(void *__return_ptr, uint64_t *)@<X0>, uint64_t a2@<X2>, char a3@<W3>, void (*a4)(void)@<X5>, void *a5@<X8>)
{
  if (a3)
  {
    a4(0);
    sub_253465A98();
    return (void *)_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v9, v10, v11, v12);
  }
  else
  {
    uint64_t v14 = a2;
    uint64_t result = a1(a5, &v14);
    if (!v5)
    {
      uint64_t v13 = ((uint64_t (*)(void))a4)(0);
      return (void *)_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a5, 0, 1, v13);
    }
  }
  return result;
}

uint64_t sub_253A561A4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_253A4ADB0(a1, a2);
}

unint64_t sub_253A561C4()
{
  unint64_t result = qword_269CDCCE8;
  if (!qword_269CDCCE8)
  {
    sub_253B055C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDCCE8);
  }
  return result;
}

uint64_t sub_253A56214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_253A50EF8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_253A56230(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253462A5C(&qword_269CE8518);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_253A56298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_253A549CC(a1, a2);
}

uint64_t sub_253A562B8(uint64_t a1)
{
  return sub_253A5462C(a1, *(void *)(v1 + 32)) & 1;
}

uint64_t sub_253A562DC()
{
  return sub_253A54560() & 1;
}

uint64_t sub_253A56300()
{
  sub_253A54124();
  return v0 & 1;
}

unint64_t sub_253A56324()
{
  unint64_t result = qword_269CE8520;
  if (!qword_269CE8520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8520);
  }
  return result;
}

unint64_t sub_253A56370(unint64_t *a1, uint64_t *a2)
{
  return sub_253A55FFC(*a1, *a2, (uint64_t)v3, (void (*)(void))type metadata accessor for Session.Event);
}

unint64_t sub_253A563D0(unint64_t *a1)
{
  return sub_253A56370(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_253A563F0(uint64_t a1)
{
  uint64_t result = sub_25350D86C(&qword_269CE8528, &qword_269CE5640);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253A5643C(uint64_t a1)
{
  uint64_t result = sub_25350D86C(&qword_269CE8530, &qword_269CE5640);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253A56488(uint64_t a1)
{
  uint64_t result = sub_25350D86C(&qword_269CE8538, &qword_269CE8540);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253A564D8()
{
  unint64_t result = qword_269CE8548;
  if (!qword_269CE8548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8548);
  }
  return result;
}

unsigned char *_s17SessionStateErrorOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x253A565C0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Session.SessionState.SessionStateError()
{
  return &type metadata for Session.SessionState.SessionStateError;
}

uint64_t sub_253A565F8()
{
  uint64_t v1 = sub_2534D8D00();
  v2(v1);
  sub_25346CAF4();
  sub_2534D8E14();
  v3();
  return v0;
}

uint64_t sub_253A5664C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_25346CAF4();
  sub_2534659CC();
  v3();
  return a1;
}

uint64_t sub_253A566A0()
{
  uint64_t v1 = sub_2534D8D00();
  v2(v1);
  sub_25346CAF4();
  sub_2534B3428();
  v3();
  return v0;
}

uint64_t sub_253A566F4()
{
  return sub_253A56300() & 1;
}

uint64_t sub_253A56734()
{
  return v0 - 120;
}

uint64_t sub_253A5675C()
{
  return v0;
}

uint64_t sub_253A56784()
{
  uint64_t v3 = *(void *)(v1 - 120);
  return MEMORY[0x270F9DC98](v3, v0);
}

uint64_t sub_253A567AC()
{
  return type metadata accessor for Session.Event(0);
}

uint64_t sub_253A567D4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)(v3 - 128) = v2;
  *(void *)(v3 - 112) = a2;
  *(void *)(v3 - 144) = *(void *)(*(void *)(a1 + 8) + 8);
  return sub_253B0A200();
}

void sub_253A56814()
{
  *(void *)(v0 - 128) = *(void *)(v0 - 96);
}

uint64_t sub_253A56828(uint64_t a1)
{
  *(void *)(v1 - 168) = a1;
  return sub_253B0A020();
}

uint64_t sub_253A5685C()
{
  return sub_253B09CE0();
}

uint64_t sub_253A568B4(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return swift_getWitnessTable();
}

uint64_t sub_253A568E0()
{
  return sub_253B0A1E0();
}

uint64_t sub_253A568FC()
{
  return sub_253B0A150();
}

uint64_t sub_253A5691C()
{
  return sub_253B0A020();
}

uint64_t sub_253A5694C()
{
  return sub_253B09D00();
}

uint64_t sub_253A5696C()
{
  return 0;
}

uint64_t sub_253A5697C()
{
  *(void *)(v1 - 256) = v0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_253A56998()
{
  return 0;
}

uint64_t sub_253A569A4()
{
  return type metadata accessor for Session.Event(0);
}

uint64_t sub_253A569BC()
{
  return 0;
}

uint64_t sub_253A569DC()
{
  return 0;
}

uint64_t sub_253A569FC()
{
  return v0;
}

void sub_253A56A0C()
{
  JUMPOUT(0x25A268990);
}

uint64_t sub_253A56A2C()
{
  return 255;
}

uint64_t sub_253A56A38(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_253A56A98()
{
  return 0;
}

_WORD *sub_253A56AA8(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

uint64_t sub_253A56AC4()
{
  uint64_t v4 = v1 + *(int *)(v2 + 64);
  return sub_253A5664C(v4, v0);
}

uint64_t sub_253A56AF8()
{
  return v0;
}

uint64_t sub_253A56B04()
{
  return sub_253B09690();
}

uint64_t sub_253A56B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 192) = (char *)&a9 - v9;
  return 0;
}

uint64_t sub_253A56B38()
{
  return *(void *)(v0 + 56) + *(void *)(*(void *)(v2 - 320) + 72) * v1;
}

uint64_t sub_253A56B50@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return type metadata accessor for Session.Event.Payload(0);
}

uint64_t sub_253A56B6C()
{
  return 0;
}

uint64_t sub_253A56B78()
{
  return sub_253B09B80();
}

uint64_t sub_253A56B94()
{
  return v0 - 112;
}

uint64_t sub_253A56BCC()
{
  return swift_getWitnessTable();
}

uint64_t sub_253A56BE4()
{
  return v0;
}

uint64_t sub_253A56BF0()
{
  return 255;
}

uint64_t sub_253A56BFC()
{
  return *(void *)(v0 - 144);
}

uint64_t sub_253A56C10()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_253A56C28(uint64_t result)
{
  *(void *)(v1 - 160) = result;
  return result;
}

void sub_253A56C34(uint64_t a1@<X8>)
{
  *(void *)(v1 - 168) = a1;
}

uint64_t sub_253A56C4C()
{
  return v0;
}

uint64_t sub_253A56C58(uint64_t a1, uint64_t a2)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, a2, v2);
}

void sub_253A56C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 152) = (char *)&a9 - v9;
}

void sub_253A56CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 144) = (char *)&a9 - v9;
}

uint64_t sub_253A56CB4@<X0>(uint64_t a1@<X8>)
{
  return v1 + *(int *)(a1 + 28);
}

uint64_t sub_253A56CCC()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t sub_253A56CEC()
{
  return 0;
}

uint64_t sub_253A56CF8()
{
  return 0;
}

uint64_t sub_253A56D10()
{
  return 0;
}

void sub_253A56D38()
{
  *(void *)(v1 - 136) = *(void *)(v0 + 16);
  *(void *)(v1 - 120) = v0 + 16;
}

uint64_t StreamRedactable.streamRedacted()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_25346CAF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a3, v3, a1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
}

Swift::Void __swiftcall Session.Event.streamRedact()()
{
}

Swift::Void __swiftcall Session.Event.Payload.streamRedact()()
{
  uint64_t DecorationResult = type metadata accessor for QueryDecorationResult(0);
  MEMORY[0x270FA5388](DecorationResult - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Session.Event.Payload(0);
  sub_25346CAF4();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (uint64_t *)((char *)&v13 - v8);
  sub_253A57200((uint64_t)v0, (uint64_t)&v13 - v8, (void (*)(void))type metadata accessor for Session.Event.Payload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 0x16u:
    case 0x24u:
      goto LABEL_8;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    case 0xAu:
    case 0xBu:
    case 0x15u:
    case 0x17u:
    case 0x18u:
    case 0x1Au:
    case 0x1Du:
      goto LABEL_9;
    case 0xCu:
      goto LABEL_7;
    case 0xEu:
      uint64_t v10 = v9[2];
      unint64_t v11 = v9[3];
      sub_253487D84(*v9, v9[1]);
      sub_253487D84(v10, v11);
      goto LABEL_9;
    case 0x19u:
    case 0x2Bu:
    case 0x2Du:
    case 0x2Eu:
    case 0x2Fu:
    case 0x30u:
      return;
    case 0x1Bu:
      sub_253A57260((uint64_t)v0, (void (*)(void))type metadata accessor for Session.Event.Payload);
      uint64_t v12 = v9[1];
      swift_bridgeObjectRelease();
      *uint64_t v0 = MEMORY[0x263F8EE78];
      v0[1] = v12;
      swift_storeEnumTagMultiPayload();
      return;
    case 0x1Cu:
      swift_bridgeObjectRelease();
LABEL_7:
      swift_bridgeObjectRelease();
LABEL_8:
      swift_bridgeObjectRelease();
LABEL_9:
      swift_bridgeObjectRelease();
      break;
    case 0x2Au:
      sub_253A57260((uint64_t)v0, (void (*)(void))type metadata accessor for Session.Event.Payload);
      sub_253A572B8((uint64_t)v9, (uint64_t)v3, (void (*)(void))type metadata accessor for QueryDecorationResult);
      sub_253A57200((uint64_t)v3, (uint64_t)v7, (void (*)(void))type metadata accessor for QueryDecorationResult);
      swift_bridgeObjectRelease();
      *((void *)v7 + 1) = MEMORY[0x263F8EE78];
      sub_253A57260((uint64_t)v3, (void (*)(void))type metadata accessor for QueryDecorationResult);
      swift_storeEnumTagMultiPayload();
      sub_253A572B8((uint64_t)v7, (uint64_t)v0, (void (*)(void))type metadata accessor for Session.Event.Payload);
      break;
    default:
      sub_253A57260((uint64_t)v9, (void (*)(void))type metadata accessor for Session.Event.Payload);
      break;
  }
}

Swift::Void __swiftcall QueryDecorationResult.streamRedact()()
{
  swift_bridgeObjectRelease();
  *(void *)(v0 + 8) = MEMORY[0x263F8EE78];
}

Swift::Void __swiftcall ContextRetrieved.streamRedact()()
{
  swift_bridgeObjectRelease();
  *uint64_t v0 = MEMORY[0x263F8EE78];
}

uint64_t sub_253A57200(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25346CAF4();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_253A57260(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_25346CAF4();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_253A572B8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25346CAF4();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t dispatch thunk of StreamRedactable.streamRedact()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_253A5732C(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a1;
  uint64_t v5 = sub_253462A5C(&qword_269CE85B0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v6);
  uint64_t v28 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v8);
  sub_2536D415C();
  uint64_t v9 = sub_253B075C0();
  sub_253465998();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v24 - v14;
  uint64_t v27 = v3;
  sub_253A73E58();
  char v25 = v16;
  sub_253A735A8();
  v17();
  uint64_t v18 = (void (*)(uint64_t))MEMORY[0x263F4E1A0];
  v24[1] = sub_253A72C8C(&qword_269CE85B8, MEMORY[0x263F4E1A0]);
  sub_253B09F20();
  sub_253A72C8C(&qword_269CE85C0, v18);
  uint64_t v26 = a2;
  char v19 = sub_253B096B0() ^ 1;
  uint64_t v29 = v5;
  uint64_t v20 = &v2[*(int *)(v5 + 48)];
  *uint64_t v2 = v19 & 1;
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v9);
    uint64_t v22 = v25;
    sub_253A735A8();
    v22();
    sub_253578D38();
    sub_253A735A8();
    v22();
    sub_253B09F30();
    uint64_t v21 = *(void (**)(void))(v11 + 32);
  }
  else
  {
    uint64_t v21 = *(void (**)(void))(v11 + 32);
    ((void (*)(unsigned char *, char *, uint64_t))v21)(v20, v15, v9);
  }
  ((void (*)(char *, unsigned char *, uint64_t))v21)(&v28[*(int *)(v29 + 48)], v20, v9);
  sub_253A73E58();
  v21();
  return v19 & 1;
}

BOOL sub_253A575B8(unsigned __int8 *a1, unsigned __int8 a2)
{
  int v3 = (*v2 & a2);
  if (v3 != a2) {
    *v2 |= a2;
  }
  *a1 = a2;
  return v3 != a2;
}

uint64_t sub_253A575E8()
{
  uint64_t v2 = sub_253B07AB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ContextProtoRetrievedContext(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  ContextProtoRetrievedContext.init(context:)((uint64_t)v5, v7, v8, v9, v10, v11, v12, v13, v15, v16, v17, v18, v19);
  if (!v1)
  {
    sub_253A72C8C(&qword_269CDF9E0, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedContext);
    uint64_t v6 = sub_253B073D0();
    sub_253A72E68();
  }
  return v6;
}

#error "253A578B0: call analysis failed (funcsize=106)"

#error "253A57A68: call analysis failed (funcsize=106)"

char *sub_253A57B10()
{
  uint64_t v0 = sub_253B07A30();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v23 - v5;
  uint64_t v7 = sub_253B07600();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ContextProtoConfidence(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v15 = v24;
  uint64_t v24 = v7;
  v14(v10, v15, v7);
  sub_253B075E0();
  int v17 = v16;
  sub_253B075F0();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v4, v0);
  if (v18 == *MEMORY[0x263F4E4D8])
  {
    char v19 = 0;
  }
  else if (v18 == *MEMORY[0x263F4E4E8])
  {
    char v19 = 1;
  }
  else
  {
    if (v18 != *MEMORY[0x263F4E4E0])
    {
      sub_25394EA00();
      swift_allocError();
      *uint64_t v21 = 0;
      swift_willThrow();
      uint64_t v22 = *(void (**)(char *, uint64_t))(v1 + 8);
      v22(v6, v0);
      v22(v4, v0);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v24);
      return v10;
    }
    char v19 = 2;
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v13 = v17;
  v13[4] = v19;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v24);
  sub_253A72C8C(&qword_269CDFC40, (void (*)(uint64_t))type metadata accessor for ContextProtoConfidence);
  uint64_t v10 = (char *)sub_253B073D0();
  sub_253A72E68();
  return v10;
}

uint64_t sub_253A57EB8()
{
  uint64_t v1 = sub_253B082B0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  uint64_t v8 = sub_253B08290();
  uint64_t v10 = v9;
  uint64_t v11 = sub_253B082A0();
  uint64_t v13 = v12;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v7 = v8;
  v7[1] = v10;
  v7[2] = v11;
  v7[3] = v13;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_253A72C8C(&qword_269CDFC00, (void (*)(uint64_t))type metadata accessor for ContextProtoContextualEntityDisplayRepresentation);
  uint64_t v14 = sub_253B073D0();
  sub_253A72E68();
  return v14;
}

uint64_t sub_253A580A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_253B07670();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ContextProtoBoundingBox(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  sub_253B07630();
  int v10 = v9;
  sub_253B07640();
  int v12 = v11;
  sub_253B07650();
  int v14 = v13;
  sub_253B07660();
  int v16 = v15;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v8 = v10;
  v8[4] = 0;
  *((_DWORD *)v8 + 2) = v12;
  v8[12] = 0;
  *((_DWORD *)v8 + 4) = v14;
  v8[20] = 0;
  *((_DWORD *)v8 + 6) = v16;
  v8[28] = 0;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_253A72C8C(&qword_269CDFC18, (void (*)(uint64_t))type metadata accessor for ContextProtoBoundingBox);
  uint64_t v17 = sub_253B073D0();
  sub_253A72E68();
  return v17;
}

uint64_t sub_253A582C0()
{
  uint64_t v2 = sub_253B07A20();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ContextProtoSurroundingText(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  ContextProtoSurroundingText.init(context:)();
  if (!v1)
  {
    sub_253A72C8C(&qword_269CDF910, (void (*)(uint64_t))type metadata accessor for ContextProtoSurroundingText);
    uint64_t v6 = sub_253B073D0();
    sub_253A72E68();
  }
  return v6;
}

void TranscriptContextBidirectionalConvertibleProtocol.protoBytes()()
{
  sub_2534847F8();
  uint64_t v4 = v3;
  sub_253465998();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_2534B34A4();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, v0, v4);
  sub_2534D99FC();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(v2, AssociatedTypeWitness, AssociatedConformanceWitness);
  if (!v1)
  {
    swift_getAssociatedConformanceWitness();
    _s30IntelligenceFlowPlannerSupport16SearchExpressionV5query24isLowConfidenceKnowledge7pickOne28shouldOpenResultIfApplicableACSS_S3btcfcfA1__0();
    sub_253B073D0();
    sub_2534F85D4();
    v11();
  }
  sub_2534D99FC();
  sub_253A3C6AC();
  sub_2534847C8();
}

uint64_t sub_253A5864C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v3 = sub_253B07A30();
  uint64_t v47 = *(void *)(v3 - 8);
  uint64_t v48 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v42 - v7;
  uint64_t v49 = type metadata accessor for ContextProtoConfidence(0);
  MEMORY[0x270FA5388](v49);
  uint64_t v46 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_253462A5C(&qword_269CE8558);
  MEMORY[0x270FA5388](v10 - 8);
  int v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_253B07600();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v42 - v18;
  uint64_t v20 = a1;
  sub_253961F60(a1, (uint64_t)v12, &qword_269CE8558);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13) == 1)
  {
    sub_253472458(a1, &qword_269CE8558);
    sub_253472458((uint64_t)v12, &qword_269CE8558);
    uint64_t v21 = 1;
    uint64_t v23 = v49;
    uint64_t v22 = v50;
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v22, v21, 1, v23);
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
  uint64_t v43 = v14;
  uint64_t v44 = v19;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
  sub_253B075E0();
  int v25 = v24;
  sub_253B075F0();
  uint64_t v26 = v47;
  uint64_t v27 = v48;
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  uint64_t v45 = v8;
  v28(v6, v8, v48);
  int v29 = (*(uint64_t (**)(char *, uint64_t))(v26 + 88))(v6, v27);
  int v30 = *MEMORY[0x263F4E4D8];
  uint64_t v42 = v20;
  if (v29 == v30)
  {
    char v31 = 0;
LABEL_7:
    os_log_type_t v33 = v44;
    uint64_t v32 = v45;
    uint64_t v34 = v43;
LABEL_8:
    (*(void (**)(char *, uint64_t))(v26 + 8))(v32, v27);
    uint64_t v23 = v49;
    uint64_t v35 = v46;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_DWORD *)uint64_t v35 = v25;
    v35[4] = v31;
    uint64_t v36 = *(void (**)(char *, uint64_t))(v34 + 8);
    v36(v17, v13);
    sub_253472458(v42, &qword_269CE8558);
    v36(v33, v13);
    uint64_t v37 = (uint64_t)v35;
    uint64_t v22 = v50;
    sub_253A72EB8(v37, v50);
    uint64_t v21 = 0;
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v22, v21, 1, v23);
  }
  if (v29 == *MEMORY[0x263F4E4E8])
  {
    char v31 = 1;
    goto LABEL_7;
  }
  uint64_t v34 = v43;
  os_log_type_t v33 = v44;
  if (v29 == *MEMORY[0x263F4E4E0])
  {
    char v31 = 2;
    uint64_t v32 = v45;
    goto LABEL_8;
  }
  sub_25394EA00();
  swift_allocError();
  *uint64_t v39 = 0;
  swift_willThrow();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v26 + 8);
  v40(v45, v27);
  v40(v6, v27);
  uint64_t v41 = *(void (**)(char *, uint64_t))(v34 + 8);
  v41(v17, v13);
  sub_253472458(v42, &qword_269CE8558);
  return ((uint64_t (*)(char *, uint64_t))v41)(v33, v13);
}

uint64_t sub_253A58B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = type metadata accessor for ContextProtoBoundingBox(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_253462A5C(&qword_269CE8570);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253B07670();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v29 - v14;
  sub_253961F60(a1, (uint64_t)v8, &qword_269CE8570);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9) == 1)
  {
    sub_253472458(a1, &qword_269CE8570);
    sub_253472458((uint64_t)v8, &qword_269CE8570);
    uint64_t v16 = 1;
    uint64_t v17 = v30;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    sub_253B07630();
    int v19 = v18;
    sub_253B07640();
    int v21 = v20;
    sub_253B07650();
    int v23 = v22;
    sub_253B07660();
    int v25 = v24;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_DWORD *)uint64_t v5 = v19;
    v5[4] = 0;
    *((_DWORD *)v5 + 2) = v21;
    v5[12] = 0;
    *((_DWORD *)v5 + 4) = v23;
    v5[20] = 0;
    *((_DWORD *)v5 + 6) = v25;
    v5[28] = 0;
    uint64_t v26 = *(void (**)(char *, uint64_t))(v10 + 8);
    v26(v13, v9);
    sub_253472458(a1, &qword_269CE8570);
    v26(v15, v9);
    uint64_t v27 = v30;
    sub_253A72EB8((uint64_t)v5, v30);
    uint64_t v16 = 0;
    uint64_t v17 = v27;
  }
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v17, v16, 1, v3);
}

uint64_t sub_253A58DE0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_253462A5C(&qword_269CE8568);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_253B07B00();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v24 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v24 - v15;
  sub_253961F60(a1, (uint64_t)v6, &qword_269CE8568);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v6, 1, v7) == 1)
  {
    sub_253472458(a1, &qword_269CE8568);
    uint64_t result = sub_253472458((uint64_t)v6, &qword_269CE8568);
    char v18 = 6;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v6, v7);
    int v19 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v19(v14, v16, v7);
    v19(v11, v14, v7);
    int v20 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
    if (v20 == *MEMORY[0x263F4E560])
    {
      char v18 = 0;
    }
    else if (v20 == *MEMORY[0x263F4E548])
    {
      char v18 = 1;
    }
    else if (v20 == *MEMORY[0x263F4E558])
    {
      char v18 = 5;
    }
    else if (v20 == *MEMORY[0x263F4E538])
    {
      char v18 = 2;
    }
    else if (v20 == *MEMORY[0x263F4E540])
    {
      char v18 = 3;
    }
    else
    {
      if (v20 != *MEMORY[0x263F4E550])
      {
        sub_253A5E080();
        swift_allocError();
        *int v22 = 0;
        swift_willThrow();
        int v23 = *(void (**)(char *, uint64_t))(v8 + 8);
        v23(v14, v7);
        v23(v11, v7);
        sub_253472458(a1, &qword_269CE8568);
        return ((uint64_t (*)(char *, uint64_t))v23)(v16, v7);
      }
      char v18 = 4;
    }
    int v21 = *(void (**)(char *, uint64_t))(v8 + 8);
    v21(v14, v7);
    sub_253472458(a1, &qword_269CE8568);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v21)(v16, v7);
  }
  *a2 = v18;
  return result;
}

uint64_t sub_253A59160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
  MEMORY[0x270FA5388](v29);
  uint64_t v5 = (uint64_t *)((char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_253462A5C(&qword_269CE8560);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253B082B0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v28 = a1;
  sub_253961F60(a1, (uint64_t)v8, &qword_269CE8560);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9) == 1)
  {
    sub_253472458(v28, &qword_269CE8560);
    sub_253472458((uint64_t)v8, &qword_269CE8560);
    uint64_t v16 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    uint64_t v17 = sub_253B08290();
    uint64_t v27 = v18;
    uint64_t v19 = sub_253B082A0();
    uint64_t v20 = a2;
    uint64_t v22 = v21;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    uint64_t v23 = v27;
    *uint64_t v5 = v17;
    v5[1] = v23;
    v5[2] = v19;
    v5[3] = v22;
    a2 = v20;
    uint64_t v24 = *(void (**)(char *, uint64_t))(v10 + 8);
    v24(v13, v9);
    sub_253472458(v28, &qword_269CE8560);
    v24(v15, v9);
    sub_253A72EB8((uint64_t)v5, v20);
    uint64_t v16 = 0;
  }
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a2, v16, 1, v29);
}

uint64_t sub_253A5941C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v27 = type metadata accessor for ContextProtoContextMetadata(0);
  MEMORY[0x270FA5388](v27);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_253462A5C(&qword_269CE8550);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253B07990();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v26 - v14;
  sub_253961F60(a1, (uint64_t)v8, &qword_269CE8550);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9) == 1)
  {
    sub_253472458(a1, &qword_269CE8550);
    sub_253472458((uint64_t)v8, &qword_269CE8550);
    uint64_t v16 = 1;
    uint64_t v17 = v29;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    ContextProtoContextMetadata.init(context:)((uint64_t)v13, v18, v19, v20, v21, v22, v23, v24, v26, v27, SWORD1(v27), SWORD2(v27), SBYTE6(v27), SHIBYTE(v27), v28, v29, v30, v31, v32,
      v33,
      v34,
      v35,
      v36,
      v37);
    if (v2)
    {
      sub_253472458(a1, &qword_269CE8550);
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    }
    sub_253472458(a1, &qword_269CE8550);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    uint64_t v17 = v29;
    sub_253A72EB8((uint64_t)v5, v29);
    uint64_t v16 = 0;
  }
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v17, v16, 1, v27);
}

uint64_t sub_253A596C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v27 = type metadata accessor for ContextProtoStructuredContext(0);
  MEMORY[0x270FA5388](v27);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_253462A5C(&qword_269CE8508);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253B07FD0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v26 - v14;
  sub_253961F60(a1, (uint64_t)v8, &qword_269CE8508);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9) == 1)
  {
    sub_253472458(a1, &qword_269CE8508);
    sub_253472458((uint64_t)v8, &qword_269CE8508);
    uint64_t v16 = 1;
    uint64_t v17 = v29;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    ContextProtoStructuredContext.init(context:)((uint64_t)v13, v18, v19, v20, v21, v22, v23, v24, v26, v27, SWORD1(v27), SWORD2(v27), BYTE6(v27), SHIBYTE(v27), v28, v29, v30, v31, v32,
      v33,
      v34,
      v35,
      v36,
      v37);
    if (v2)
    {
      sub_253472458(a1, &qword_269CE8508);
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    }
    sub_253472458(a1, &qword_269CE8508);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    uint64_t v17 = v29;
    sub_253A72EB8((uint64_t)v5, v29);
    uint64_t v16 = 0;
  }
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v17, v16, 1, v27);
}

void ConvertibleFromContextProtocol.init(context:)()
{
  sub_2534847F8();
  uint64_t v2 = v1;
  uint64_t v32 = v3;
  sub_2534727C4();
  v31[2] = v4;
  MEMORY[0x270FA5388](v5);
  sub_2536D2C5C(v6, v31[0]);
  v31[3] = v7;
  uint64_t v33 = v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_253B09E00();
  sub_253465998();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v31 - v13;
  sub_2534727C4();
  MEMORY[0x270FA5388](v15);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v16);
  sub_2534AF234();
  v17();
  sub_2534D8B48((uint64_t)v14, 1, AssociatedTypeWitness);
  if (v18)
  {
    uint64_t v19 = *(void (**)(void))(v11 + 8);
    sub_2534D91A0();
    v19();
    sub_2534D91A0();
    v19();
    uint64_t v20 = 1;
    uint64_t v21 = v32;
    uint64_t v24 = v33;
LABEL_7:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v21, v20, 1, v24);
    goto LABEL_8;
  }
  v31[1] = v2;
  sub_2535787F4();
  sub_25347FA84();
  v22();
  sub_2534AF234();
  v23();
  uint64_t v24 = v33;
  sub_253A73E24();
  v25();
  if (!v0)
  {
    sub_2534D91A0();
    v28();
    sub_2534D97B4();
    v29();
    uint64_t v21 = v32;
    sub_2534D8E14();
    v30();
    uint64_t v20 = 0;
    goto LABEL_7;
  }
  sub_2534D91A0();
  v26();
  sub_2534D97B4();
  v27();
LABEL_8:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_253A59C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  uint64_t v14 = sub_2539626F0();
  uint64_t v15 = type metadata accessor for ContextProtoRetrievedContext(v14);
  uint64_t v16 = sub_25346CB34(v15);
  uint64_t v76 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v77 = (uint64_t)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v19);
  uint64_t v75 = (char *)&v68 - v20;
  sub_253483660();
  sub_253B07AB0();
  sub_253465998();
  MEMORY[0x270FA5388](v21);
  uint64_t v74 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v23);
  sub_2534F8600();
  MEMORY[0x270FA5388](v24);
  uint64_t v73 = (char *)&v68 - v25;
  sub_2534B324C();
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  sub_253A73510(v27, v28, v29, v30, v31, v32, v33, v34, v68);
  sub_2539622E0(MEMORY[0x263F8EE78]);
  sub_2539E66A8();
  sub_253A73764();
  if (v13)
  {
    sub_253A73194();
    uint64_t v35 = 0;
    while (1)
    {
      sub_253A73FD0();
      if (v36) {
        break;
      }
      uint64_t v37 = sub_253A73258();
      v12(v37);
      uint64_t v38 = sub_253A7346C();
      v12(v38);
      uint64_t v39 = sub_25396239C();
      ContextProtoRetrievedContext.init(context:)(v39, v40, v41, v42, v43, v44, v45, v46, v68, v69, v70, v71, v72);
      if (v11)
      {
        swift_release();
        sub_253A73F50();
        sub_2534659CC();
        v66();
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      sub_2534659CC();
      v47();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73CA0();
        uint64_t v10 = a10;
      }
      sub_253A73754();
      if (v49)
      {
        sub_2539625A0(v48);
        sub_2539E66A8();
        uint64_t v10 = a10;
      }
      ++v35;
      *(void *)(v10 + 16) = v12;
      sub_253A73178();
      sub_253A72EB8(v77, v50);
      sub_253A73F7C();
      if (v36) {
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
LABEL_13:
  sub_253A736B4();
  if (!v36)
  {
    sub_253A7370C();
    while (v13 < v51)
    {
      uint64_t v52 = sub_253A73140();
      ((void (*)(uint64_t))v10)(v52);
      uint64_t v53 = sub_253A73434();
      ((void (*)(uint64_t))v10)(v53);
      uint64_t v54 = sub_253A73604();
      ContextProtoRetrievedContext.init(context:)(v54, v55, v56, v57, v58, v59, v60, v61, v68, v69, v70, v71, v72);
      if (v11)
      {
        sub_25351C3E8();
        v67();
        swift_bridgeObjectRelease();
        sub_253A73FDC();
        swift_release();
        goto LABEL_27;
      }
      sub_25351C3E8();
      v62();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73CA0();
        uint64_t v10 = a10;
      }
      sub_253A736FC();
      if (v49)
      {
        sub_253962194(v63);
        sub_2539E66A8();
        uint64_t v10 = a10;
      }
      uint64_t v64 = sub_253A731E8();
      sub_253A72EB8(v64, v65);
      sub_253A736B4();
      if (v36) {
        goto LABEL_15;
      }
    }
LABEL_29:
    __break(1u);
    return;
  }
LABEL_15:
  sub_253A7382C();
LABEL_27:
  sub_253578800();
  sub_2534847C8();
}

uint64_t sub_253A59F20(uint64_t a1)
{
  uint64_t v89 = sub_253B07670();
  uint64_t v2 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v84 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_253462A5C(&qword_269CDCCC0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ContextProtoSurroundingText(0);
  uint64_t v87 = *(void *)(v7 - 8);
  uint64_t v88 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v91 = (uint64_t)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v86 = (uint64_t *)((char *)&v72 - v11);
  MEMORY[0x270FA5388](v10);
  uint64_t v83 = (uint64_t)&v72 - v12;
  uint64_t v85 = sub_253B07A20();
  uint64_t v13 = *(void *)(v85 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v85);
  uint64_t v82 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v93 = (char *)&v72 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v74 = (char *)&v72 - v18;
  unint64_t v19 = *(void *)(a1 + 16);
  uint64_t v94 = MEMORY[0x263F8EE78];
  sub_2539E7730();
  uint64_t v75 = a1;
  uint64_t v73 = v2;
  if (v19)
  {
    uint64_t v20 = *(void (***)(char *, uint64_t))(a1 + 16);
    uint64_t v80 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v81 = v20;
    uint64_t v78 = (void (**)(char *, uint64_t))(v2 + 8);
    uint64_t v79 = v13 + 16;
    uint64_t v77 = v13 + 8;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v22 = 0;
    uint64_t v92 = (void (**)(char *, uint64_t))v19;
    uint64_t v76 = v13;
    uint64_t v23 = v85;
    uint64_t v24 = v86;
    uint64_t v25 = v82;
    while (v81 != v22)
    {
      uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
      uint64_t v27 = v93;
      v26(v93, v80 + *(void *)(v13 + 72) * (void)v22, v23);
      v26(v25, (uint64_t)v27, v23);
      uint64_t v90 = sub_253B07A10();
      uint64_t v29 = v28;
      uint64_t v30 = v84;
      sub_253B079F0();
      sub_253B07630();
      int v32 = v31;
      sub_253B07640();
      int v34 = v33;
      sub_253B07650();
      int v36 = v35;
      sub_253B07660();
      int v38 = v37;
      uint64_t v39 = type metadata accessor for ContextProtoBoundingBox(0);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_DWORD *)uint64_t v6 = v32;
      v6[4] = 0;
      *((_DWORD *)v6 + 2) = v34;
      v6[12] = 0;
      *((_DWORD *)v6 + 4) = v36;
      v6[20] = 0;
      *((_DWORD *)v6 + 6) = v38;
      v6[28] = 0;
      (*v78)(v30, v89);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v6, 0, 1, v39);
      uint64_t v40 = (uint64_t)v24 + *(int *)(v88 + 20);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v40, 1, 1, v39);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *uint64_t v24 = v90;
      v24[1] = v29;
      sub_253961BF0((uint64_t)v6, v40, &qword_269CDCCC0);
      sub_253A72EB8((uint64_t)v24, v91);
      uint64_t v13 = v76;
      uint64_t v41 = *(void (**)(char *, uint64_t))(v76 + 8);
      v41(v25, v23);
      v41(v93, v23);
      uint64_t v42 = v94;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2539E7730();
        uint64_t v42 = v94;
      }
      unint64_t v43 = *(void *)(v42 + 16);
      if (v43 >= *(void *)(v42 + 24) >> 1)
      {
        sub_2539E7730();
        uint64_t v42 = v94;
      }
      uint64_t v22 = (void (**)(char *, uint64_t))((char *)v22 + 1);
      *(void *)(v42 + 16) = v43 + 1;
      uint64_t result = sub_253A72EB8(v91, v42+ ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80))+ *(void *)(v87 + 72) * v43);
      unint64_t v19 = (unint64_t)v92;
      if (v92 == v22) {
        goto LABEL_11;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v42 = v94;
    uint64_t result = swift_bridgeObjectRetain();
LABEL_11:
    uint64_t v44 = v75;
    unint64_t v45 = *(void *)(v75 + 16);
    if (v19 == v45)
    {
LABEL_12:
      swift_bridgeObjectRelease_n();
      return v42;
    }
    uint64_t v82 = (char *)(v13 + 16);
    uint64_t v80 = v13 + 8;
    uint64_t v81 = (void (**)(char *, uint64_t))(v73 + 8);
    uint64_t v46 = v74;
    uint64_t v47 = v85;
    while (v19 < v45)
    {
      uint64_t v48 = v44 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
      uint64_t v49 = *(void *)(v13 + 72);
      uint64_t v92 = (void (**)(char *, uint64_t))v19;
      uint64_t v50 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
      v50(v46, v48 + v49 * v19, v47);
      unint64_t v51 = v93;
      v50(v93, (unint64_t)v46, v47);
      uint64_t v52 = sub_253B07A10();
      uint64_t v90 = v53;
      uint64_t v91 = v52;
      uint64_t v54 = v84;
      sub_253B079F0();
      sub_253B07630();
      int v56 = v55;
      sub_253B07640();
      int v58 = v57;
      sub_253B07650();
      int v60 = v59;
      sub_253B07660();
      int v62 = v61;
      uint64_t v63 = type metadata accessor for ContextProtoBoundingBox(0);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_DWORD *)uint64_t v6 = v56;
      v6[4] = 0;
      *((_DWORD *)v6 + 2) = v58;
      v6[12] = 0;
      *((_DWORD *)v6 + 4) = v60;
      v6[20] = 0;
      *((_DWORD *)v6 + 6) = v62;
      v6[28] = 0;
      (*v81)(v54, v89);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v6, 0, 1, v63);
      uint64_t v64 = v13;
      uint64_t v65 = v86;
      uint64_t v66 = (uint64_t)v86 + *(int *)(v88 + 20);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v66, 1, 1, v63);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      uint64_t v67 = v90;
      *uint64_t v65 = v91;
      v65[1] = v67;
      sub_253961BF0((uint64_t)v6, v66, &qword_269CDCCC0);
      uint64_t v68 = (uint64_t)v65;
      uint64_t v13 = v64;
      sub_253A72EB8(v68, v83);
      int v69 = *(void (**)(char *, uint64_t))(v64 + 8);
      v69(v51, v47);
      v69(v46, v47);
      uint64_t v42 = v94;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2539E7730();
        uint64_t v42 = v94;
      }
      unint64_t v70 = *(void *)(v42 + 16);
      uint64_t v44 = v75;
      char v71 = v92;
      if (v70 >= *(void *)(v42 + 24) >> 1)
      {
        sub_2539E7730();
        uint64_t v42 = v94;
      }
      unint64_t v19 = (unint64_t)v71 + 1;
      *(void *)(v42 + 16) = v70 + 1;
      uint64_t result = sub_253A72EB8(v83, v42+ ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80))+ *(void *)(v87 + 72) * v70);
      unint64_t v45 = *(void *)(v44 + 16);
      if (v19 == v45) {
        goto LABEL_12;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t Array<A>.init<A>(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_253462A5C(&qword_26B24A590);
  sub_25394D850();
  if (v3)
  {
    sub_25347B88C();
    sub_2534659CC();
    v7();
  }
  else
  {
    sub_253B09B80();
    swift_getWitnessTable();
    a2 = sub_253B09B90();
    sub_25347B88C();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, a3);
  }
  return a2;
}

uint64_t sub_253A5A8AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v14 = (char *)&v17 - v13;
  (*(void (**)(char *, uint64_t))(v15 + 16))((char *)&v17 - v13, a1);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a5 + 16))(v14, a3, a5);
  if (v7) {
    *a7 = v7;
  }
  return result;
}

uint64_t sub_253A5A9D4(uint64_t a1, void *a2)
{
  return sub_253A5A8AC(a1, v2[6], v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t Set<>.init(context:)()
{
  swift_getAssociatedTypeWitness();
  sub_253B09B80();
  sub_253462A5C(&qword_26B24A590);
  swift_getWitnessTable();
  sub_253A480D4();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0)
  {
    sub_253B09B80();
    swift_getWitnessTable();
    return sub_253B09C70();
  }
  return result;
}

uint64_t sub_253A5AB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v13 = (char *)&v16 - v12;
  (*(void (**)(char *, uint64_t))(v14 + 16))((char *)&v16 - v12, a1);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a4 + 16))(v13, a3, a4);
  if (v6) {
    *a6 = v6;
  }
  return result;
}

uint64_t sub_253A5AC7C(uint64_t a1, void *a2)
{
  return sub_253A5AB54(a1, v2[5], v2[2], v2[3], v2[4], a2);
}

uint64_t Dictionary<>.init(context:)()
{
  swift_getAssociatedTypeWitness();
  uint64_t v0 = sub_253B095B0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_253A5AD5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v11 = (char *)v14 - v10;
  (*(void (**)(char *, uint64_t))(v12 + 16))((char *)v14 - v10, a1);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(a6 + 16))(v11, a4, a6);
}

uint64_t sub_253A5AE78(uint64_t a1)
{
  return sub_253A5AD5C(a1, v1[6], v1[2], v1[3], v1[4], v1[5]);
}

BOOL static ContextConversion.Error.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ContextConversion.Error.hash(into:)()
{
  return sub_253B0A600();
}

uint64_t ContextConversion.Error.hashValue.getter()
{
  return sub_253B0A630();
}

void RetrievedContext.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v49 = v1;
  uint64_t v5 = v4;
  uint64_t v43 = v6;
  uint64_t v7 = sub_253462A5C(&qword_269CDF8F0);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_2534B33C8(v9, v42);
  uint64_t v10 = sub_253462A5C(&qword_269CE8550);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  uint64_t v47 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  sub_253B07680();
  sub_253465998();
  uint64_t v44 = v14;
  uint64_t v45 = v13;
  MEMORY[0x270FA5388](v13);
  sub_2534D92D4(v15, v42);
  uint64_t v16 = sub_253462A5C(&qword_269CDF900);
  uint64_t v17 = sub_25346CB4C(v16);
  MEMORY[0x270FA5388](v17);
  sub_2536D2C5C(v18, v42);
  uint64_t v19 = sub_253462A5C(&qword_269CE8558);
  uint64_t v20 = sub_25346CB4C(v19);
  MEMORY[0x270FA5388](v20);
  sub_2534AF2A0(v21, v42);
  uint64_t v22 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v23 = sub_25346CB4C(v22);
  MEMORY[0x270FA5388](v23);
  sub_2534B3294();
  uint64_t v24 = sub_253462A5C(&qword_269CDB3F8);
  uint64_t v25 = sub_25346CB4C(v24);
  MEMORY[0x270FA5388](v25);
  sub_2534835B0();
  uint64_t v26 = sub_253462A5C(&qword_269CDF8E0);
  uint64_t v27 = sub_25346CB4C(v26);
  MEMORY[0x270FA5388](v27);
  sub_25347FAAC();
  uint64_t v28 = sub_253462A5C(&qword_269CE8508);
  uint64_t v29 = sub_25346CB4C(v28);
  MEMORY[0x270FA5388](v29);
  uint64_t v30 = sub_2534B464C();
  int v31 = (int *)type metadata accessor for ContextProtoRetrievedContext(v30);
  uint64_t v32 = *(void *)(v5 + v31[10]);
  sub_253961F60(v5 + v31[9], v3, &qword_269CDF8E0);
  swift_bridgeObjectRetain();
  uint64_t v33 = v49;
  sub_25395BEAC();
  if (v33)
  {
    sub_253A72E68();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v42 = v32;
    uint64_t v49 = v0;
    uint64_t v34 = v48;
    sub_253961F60(v5 + v31[8], v2, &qword_269CDCBC8);
    sub_25395A48C();
    sub_253961F60(v5 + v31[6], v34, &qword_269CDF900);
    sub_25395C044(v34, v35, v36, v37, v38, v39, v40, v41, v42, v43);
    ContextType.init(transcript:)();
    sub_253961F60(v5 + v31[7], v46, &qword_269CDF8F0);
    sub_25395C288();
    sub_253B07A50();
    sub_253A72E68();
  }
  sub_2534847C8();
}

uint64_t ContextType.init(transcript:)()
{
  sub_253A736C0();
  sub_253B07680();
  sub_25346CAF4();
  uint64_t v0 = sub_253A7327C();
  return v1(v0);
}

void sub_253A5B5D8()
{
}

uint64_t sub_253A5B5F0()
{
  return sub_253A575E8();
}

void ContextProtoRetrievedContext.init(context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, unsigned __int8 a13)
{
  sub_2534847F8();
  uint64_t v78 = v17;
  uint64_t v77 = type metadata accessor for ContextProtoRetrievedContext(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v18);
  sub_2536D2C5C(v19, (uint64_t)v72);
  uint64_t v20 = sub_253462A5C(&qword_269CE8508);
  uint64_t v21 = sub_25346CB4C(v20);
  MEMORY[0x270FA5388](v21);
  sub_2534D8F84(v22, (uint64_t)v72);
  uint64_t v23 = sub_253462A5C(&qword_269CDF8E0);
  uint64_t v24 = sub_25346CB4C(v23);
  MEMORY[0x270FA5388](v24);
  sub_2534D92D4(v25, (uint64_t)v72);
  uint64_t v26 = sub_253462A5C(&qword_269CE8550);
  uint64_t v27 = sub_25346CB4C(v26);
  MEMORY[0x270FA5388](v27);
  sub_2534AF2A0(v28, (uint64_t)v72);
  uint64_t v29 = sub_253462A5C(&qword_269CDF8F0);
  uint64_t v30 = sub_25346CB4C(v29);
  MEMORY[0x270FA5388](v30);
  sub_2534D9B74();
  uint64_t v31 = sub_253B07680();
  uint64_t v32 = sub_25346CB4C(v31);
  MEMORY[0x270FA5388](v32);
  sub_2534966B0();
  uint64_t v33 = sub_253462A5C(&qword_269CE8558);
  uint64_t v34 = sub_25346CB4C(v33);
  MEMORY[0x270FA5388](v34);
  sub_2534B34A4();
  uint64_t v35 = sub_253462A5C(&qword_269CDF900);
  uint64_t v36 = sub_25346CB4C(v35);
  MEMORY[0x270FA5388](v36);
  sub_2534B3294();
  uint64_t v37 = sub_253462A5C(&qword_269CDB3F8);
  uint64_t v38 = sub_25346CB4C(v37);
  MEMORY[0x270FA5388](v38);
  sub_2534B340C();
  MEMORY[0x270FA5388](v39);
  uint64_t v40 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v41 = sub_25346CB4C(v40);
  MEMORY[0x270FA5388](v41);
  sub_253578D44();
  MEMORY[0x270FA5388](v42);
  uint64_t v44 = (char *)&v72 - v43;
  sub_253B07A70();
  sub_25395F124();
  if (!v13)
  {
    uint64_t v83 = v15;
    uint64_t v76 = v44;
    uint64_t v46 = v81;
    sub_253B07AA0();
    uint64_t v47 = sub_25396239C();
    sub_253A5864C(v47, v48);
    uint64_t v75 = v14;
    sub_253B07A80();
    sub_253A74078();
    ContextProtoContextType.init(context:)();
    sub_253B07A90();
    uint64_t v49 = sub_253A73604();
    sub_253A5941C(v49, v50);
    int v80 = a13;
    sub_253B07A70();
    sub_25395F124();
    sub_253B07A40();
    uint64_t v51 = sub_253A73604();
    sub_253A596C4(v51, v52);
    uint64_t v53 = sub_253B07A60();
    uint64_t v79 = v54;
    int v55 = (int *)v77;
    int v56 = v46;
    uint64_t v73 = &v46[*(int *)(v77 + 20)];
    uint64_t v57 = (uint64_t)v73;
    uint64_t v74 = v53;
    sub_253B08E50();
    sub_253A7388C(v57, 1);
    uint64_t v72 = &v46[v55[6]];
    uint64_t v58 = (uint64_t)v72;
    uint64_t v59 = type metadata accessor for ContextProtoConfidence(0);
    sub_25346CC08(v58, v60, v61, v59);
    uint64_t v62 = (uint64_t)&v46[v55[7]];
    uint64_t v63 = type metadata accessor for ContextProtoContextMetadata(0);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v62, 1, 1, v63);
    uint64_t v64 = (uint64_t)&v46[v55[8]];
    sub_253A7388C(v64, 1);
    uint64_t v65 = (uint64_t)&v56[v55[9]];
    uint64_t v66 = type metadata accessor for ContextProtoStructuredContext(0);
    sub_25346CC08(v65, v67, v68, v66);
    int v69 = (uint64_t *)&v56[v55[10]];
    *int v69 = 0;
    v69[1] = 0;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    sub_253961BF0((uint64_t)v76, (uint64_t)v73, &qword_269CDCBC8);
    sub_253961BF0(v75, (uint64_t)v72, &qword_269CDF900);
    *int v56 = v80;
    sub_253961BF0(v16, v62, &qword_269CDF8F0);
    sub_253961BF0(v83, v64, &qword_269CDCBC8);
    sub_253961BF0(v82, v65, &qword_269CDF8E0);
    swift_bridgeObjectRelease();
    uint64_t v70 = v78;
    uint64_t v71 = v79;
    *int v69 = v74;
    v69[1] = v71;
    sub_253A72EB8((uint64_t)v56, v70);
  }
  sub_253B07AB0();
  sub_25346CAF4();
  sub_2534659CC();
  v45();
  sub_2536D3D5C();
  sub_2534847C8();
}

void ContextProtoContextType.init(context:)()
{
  sub_253A733C8();
  sub_253B07680();
  sub_253465998();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = sub_253A730DC(v4, v15);
  v6(v5);
  uint64_t v7 = sub_253A731CC();
  int v9 = v8(v7);
  if (v9 == *MEMORY[0x263F4E258])
  {
    char v10 = 0;
  }
  else if (v9 == *MEMORY[0x263F4E208])
  {
    char v10 = 1;
  }
  else if (v9 == *MEMORY[0x263F4E220])
  {
    char v10 = 2;
  }
  else if (v9 == *MEMORY[0x263F4E230])
  {
    char v10 = 25;
  }
  else if (v9 == *MEMORY[0x263F4E210])
  {
    char v10 = 3;
  }
  else if (v9 == *MEMORY[0x263F4E2B0])
  {
    char v10 = 4;
  }
  else if (v9 == *MEMORY[0x263F4E238])
  {
    char v10 = 5;
  }
  else if (v9 == *MEMORY[0x263F4E248])
  {
    char v10 = 6;
  }
  else if (v9 == *MEMORY[0x263F4E250])
  {
    char v10 = 7;
  }
  else if (v9 == *MEMORY[0x263F4E2D8])
  {
    char v10 = 8;
  }
  else if (v9 == *MEMORY[0x263F4E2C8])
  {
    char v10 = 9;
  }
  else if (v9 == *MEMORY[0x263F4E2E0])
  {
    char v10 = 10;
  }
  else if (v9 == *MEMORY[0x263F4E2A0])
  {
    char v10 = 11;
  }
  else if (v9 == *MEMORY[0x263F4E2B8])
  {
    char v10 = 23;
  }
  else if (v9 == *MEMORY[0x263F4E228])
  {
    char v10 = 12;
  }
  else if (v9 == *MEMORY[0x263F4E218])
  {
    char v10 = 13;
  }
  else if (v9 == *MEMORY[0x263F4E290])
  {
    char v10 = 14;
  }
  else if (v9 == *MEMORY[0x263F4E240])
  {
    char v10 = 15;
  }
  else if (v9 == *MEMORY[0x263F4E298])
  {
    char v10 = 16;
  }
  else if (v9 == *MEMORY[0x263F4E2D0])
  {
    char v10 = 17;
  }
  else if (v9 == *MEMORY[0x263F4E280])
  {
    char v10 = 18;
  }
  else if (v9 == *MEMORY[0x263F4E288])
  {
    char v10 = 19;
  }
  else if (v9 == *MEMORY[0x263F4E260])
  {
    char v10 = 20;
  }
  else if (v9 == *MEMORY[0x263F4E268])
  {
    char v10 = 21;
  }
  else if (v9 == *MEMORY[0x263F4E278])
  {
    char v10 = 22;
  }
  else if (v9 == *MEMORY[0x263F4E200])
  {
    char v10 = 24;
  }
  else if (v9 == *MEMORY[0x263F4E270])
  {
    char v10 = 26;
  }
  else if (v9 == *MEMORY[0x263F4E2C0])
  {
    char v10 = 27;
  }
  else
  {
    if (v9 != *MEMORY[0x263F4E2A8])
    {
      sub_25394EA00();
      uint64_t v12 = sub_2534D969C();
      sub_253A73408(v12, v13);
      uint64_t v14 = *(void (**)(void))(v2 + 8);
      sub_2535B3940();
      v14();
      sub_2535B3940();
      v14();
      goto LABEL_60;
    }
    char v10 = 28;
  }
  sub_2535B3940();
  v11();
  *uint64_t v0 = v10;
LABEL_60:
  sub_253A73850();
}

void sub_253A5C008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  ContextProtoRetrievedContext.init(context:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), HIBYTE(vars8));
}

void ContextMetadata.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  uint64_t v4 = sub_253462A5C(&qword_269CE8560);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_2534AF2A0(v6, v46);
  uint64_t v7 = sub_253462A5C(&qword_269CE8568);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_2534D8F84(v9, v47);
  uint64_t v10 = sub_253462A5C(&qword_269CDCCC0);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  sub_2534D92D4(v12, v48);
  uint64_t v13 = sub_253462A5C(&qword_269CE8570);
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v15);
  sub_2534B35DC();
  uint64_t v56 = v16;
  uint64_t v17 = sub_253462A5C(&qword_269CDF900);
  uint64_t v18 = sub_25346CB4C(v17);
  MEMORY[0x270FA5388](v18);
  sub_253465A3C();
  uint64_t v19 = sub_253462A5C(&qword_269CE8558);
  uint64_t v20 = sub_25346CB4C(v19);
  MEMORY[0x270FA5388](v20);
  sub_2534B34A4();
  uint64_t v21 = type metadata accessor for ContextProtoContextMetadata(0);
  sub_253961F60(v3 + *(int *)(v21 + 28), v1, &qword_269CDF900);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25395C044(v1, v22, v23, v24, v25, v26, v27, v28, v49, v51);
  if (v0)
  {
    sub_253A72E68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = sub_253B07670();
    sub_25346CC08(v56, v30, v31, v29);
    uint64_t v32 = swift_bridgeObjectRetain();
    sub_2539587B0(v32, v33, v34, v35, v36, v37, v38, v39, v50, v52);
    sub_253961F60(v3 + *(int *)(v21 + 32), v55, &qword_269CDCCC0);
    sub_25395C420(v55);
    uint64_t v40 = sub_253B07B00();
    sub_25346CC08(v53, v41, v42, v40);
    uint64_t v43 = sub_253B082B0();
    sub_25346CC08(v54, v44, v45, v43);
    swift_bridgeObjectRetain();
    sub_253B07950();
    sub_253A72E68();
  }
  sub_2534847C8();
}

void sub_253A5C3C4()
{
}

uint64_t sub_253A5C3DC()
{
  return sub_253A577A0();
}

void ContextProtoContextMetadata.init(context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, __int16 a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_2534847F8();
  a23 = v28;
  a24 = v29;
  uint64_t v95 = v24;
  uint64_t v89 = v30;
  uint64_t v31 = sub_253462A5C(&qword_269CE8560);
  uint64_t v32 = sub_25346CB4C(v31);
  MEMORY[0x270FA5388](v32);
  sub_2534D92D4(v33, v79);
  uint64_t v34 = sub_253462A5C(&qword_269CDF920);
  uint64_t v35 = sub_25346CB4C(v34);
  MEMORY[0x270FA5388](v35);
  sub_2534B33C8(v36, v79);
  uint64_t v37 = sub_253462A5C(&qword_269CE8568);
  uint64_t v38 = sub_25346CB4C(v37);
  MEMORY[0x270FA5388](v38);
  sub_2536D2C5C(v39, v79);
  uint64_t v40 = sub_253462A5C(&qword_269CE8570);
  uint64_t v41 = sub_25346CB4C(v40);
  MEMORY[0x270FA5388](v41);
  uint64_t v92 = (char *)&v79 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v44 = MEMORY[0x270FA5388](v43);
  sub_253A737FC(v44, v45, v46, v47, v48, v49, v50, v51, v79);
  uint64_t v52 = sub_253462A5C(&qword_269CDCCC0);
  uint64_t v53 = sub_25346CB4C(v52);
  MEMORY[0x270FA5388](v53);
  sub_2534B340C();
  MEMORY[0x270FA5388](v54);
  uint64_t v56 = (char *)&v79 - v55;
  uint64_t v57 = sub_253462A5C(&qword_269CE8558);
  uint64_t v58 = sub_25346CB4C(v57);
  MEMORY[0x270FA5388](v58);
  sub_2534966B0();
  uint64_t v59 = sub_253462A5C(&qword_269CDF900);
  uint64_t v60 = sub_25346CB4C(v59);
  MEMORY[0x270FA5388](v60);
  sub_253465A3C();
  uint64_t v61 = sub_253B07960();
  uint64_t v63 = v62;
  uint64_t v64 = sub_253B078E0();
  uint64_t v66 = v65;
  sub_253B07970();
  uint64_t v67 = v95;
  sub_253A5864C(v27, v25);
  if (v67)
  {
    sub_253B07990();
    sub_25346CAF4();
    sub_2534659CC();
    v68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v86 = v64;
    uint64_t v87 = v61;
    uint64_t v70 = (uint64_t)v92;
    uint64_t v69 = v93;
    uint64_t v95 = v66;
    uint64_t v71 = v94;
    uint64_t v88 = v26;
    uint64_t v72 = sub_253B07920();
    uint64_t v85 = sub_253A59F20(v72);
    uint64_t v73 = v91;
    sub_253B07900();
    sub_253A58B00(v73, (uint64_t)v56);
    uint64_t v84 = v63;
    uint64_t v83 = sub_253B07930();
    a10 = v74;
    uint64_t v82 = sub_253B07940();
    uint64_t v91 = v75;
    int v81 = sub_253B078D0();
    LODWORD(v73) = sub_253B07980();
    sub_253B078F0();
    sub_253A58B00(v70, v88);
    int v80 = v73;
    uint64_t v76 = v91;
    uint64_t v92 = v56;
    sub_253B078C0();
    sub_253A58DE0(v69, &a14);
    a13 = a14;
    sub_253B07910();
    uint64_t v77 = v90;
    sub_253A59160(v71, v90);
    ContextProtoContextMetadata.init(entityID:appBundleID:saliency:onScreenSurroundingText:onScreenBoundingBox:seq:groupID:isSelected:isPrimary:screenDimensions:dataSource:displayRepresentation:)(v87, v63, v86, v95, v25, v85, (uint64_t)v92, v83, v89, a10 & 1, v82, v76, v81 & 1, v80 & 1, v88, &a13, v77);
    sub_253B07990();
    sub_25346CAF4();
    sub_2534659CC();
    v78();
  }
  sub_2534847C8();
}

#error "253A5C998: call analysis failed (funcsize=6)"

void StructuredContext.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v220 = v1;
  uint64_t v6 = v5;
  uint64_t v218 = v7;
  uint64_t v8 = sub_253B07BC0();
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v216 = (uint64_t)v164 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_253483660();
  uint64_t v12 = type metadata accessor for ContextProtoStructedContextAppInFocusContext(v11);
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  sub_2534D8CAC();
  uint64_t v14 = sub_253B07FA0();
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  sub_25346CB04();
  uint64_t v215 = v16;
  uint64_t v17 = sub_253483660();
  uint64_t v18 = type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(v17);
  uint64_t v19 = sub_25346CB4C(v18);
  MEMORY[0x270FA5388](v19);
  sub_2534835B0();
  uint64_t v20 = sub_253462A5C(&qword_269CE8578);
  uint64_t v21 = sub_25346CB4C(v20);
  MEMORY[0x270FA5388](v21);
  sub_25346CB04();
  uint64_t v207 = v22;
  uint64_t v23 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(0);
  uint64_t v24 = sub_25346CB34(v23);
  uint64_t v198 = v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v223 = (uint64_t *)((char *)v164 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v222 = sub_253B07E60();
  sub_253465998();
  uint64_t v224 = v27;
  MEMORY[0x270FA5388](v28);
  sub_25346CB04();
  sub_2534D8F5C(v29);
  uint64_t v30 = sub_253462A5C(&qword_269CDF978);
  uint64_t v31 = sub_25346CB4C(v30);
  MEMORY[0x270FA5388](v31);
  uint64_t v213 = (uint64_t *)((char *)v164 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2534B324C();
  MEMORY[0x270FA5388](v33);
  unint64_t v212 = (char *)v164 - v34;
  sub_2534B324C();
  MEMORY[0x270FA5388](v35);
  uint64_t v211 = (uint64_t)v164 - v36;
  sub_2534B324C();
  MEMORY[0x270FA5388](v37);
  uint64_t v210 = (char *)v164 - v38;
  sub_2534B324C();
  MEMORY[0x270FA5388](v39);
  uint64_t v205 = (uint64_t)v164 - v40;
  sub_2534B324C();
  MEMORY[0x270FA5388](v41);
  sub_2534D8F5C((uint64_t)v164 - v42);
  uint64_t v43 = sub_253462A5C(&qword_269CE8580);
  uint64_t v44 = sub_25346CB4C(v43);
  MEMORY[0x270FA5388](v44);
  sub_25346CB04();
  uint64_t v206 = v45;
  uint64_t v46 = sub_253462A5C(&qword_269CDF988);
  uint64_t v47 = sub_25346CB4C(v46);
  MEMORY[0x270FA5388](v47);
  uint64_t v203 = (uint64_t)v164 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v49);
  uint64_t v202 = (uint64_t)v164 - v50;
  sub_2534B324C();
  MEMORY[0x270FA5388](v51);
  uint64_t v201 = (uint64_t)v164 - v52;
  sub_2534B324C();
  MEMORY[0x270FA5388](v53);
  sub_2534D8F5C((uint64_t)v164 - v54);
  uint64_t v55 = sub_253462A5C(&qword_269CE8588);
  uint64_t v56 = sub_25346CB4C(v55);
  MEMORY[0x270FA5388](v56);
  sub_2534D9BE4(v57, v164[0]);
  uint64_t v58 = sub_253462A5C(&qword_269CE8590);
  uint64_t v59 = sub_25346CB4C(v58);
  MEMORY[0x270FA5388](v59);
  sub_25346CB04();
  uint64_t v214 = v60;
  uint64_t v61 = sub_253462A5C(&qword_269CDF998);
  uint64_t v62 = sub_25346CB4C(v61);
  MEMORY[0x270FA5388](v62);
  sub_2534F8600();
  MEMORY[0x270FA5388](v63);
  sub_25351C988();
  MEMORY[0x270FA5388](v64);
  uint64_t v66 = (uint64_t *)((char *)v164 - v65);
  uint64_t v67 = sub_253462A5C(&qword_269CE8598);
  uint64_t v68 = sub_25346CB4C(v67);
  MEMORY[0x270FA5388](v68);
  sub_25346CB04();
  uint64_t v208 = v69;
  sub_253483660();
  uint64_t v70 = sub_253B07F20();
  uint64_t v71 = sub_25346CB4C(v70);
  MEMORY[0x270FA5388](v71);
  sub_25346CB04();
  uint64_t v199 = v72;
  uint64_t v73 = sub_253483660();
  uint64_t v217 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(v73);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v74);
  uint64_t v219 = (uint64_t)v164 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_253462A5C(&qword_269CDF958);
  uint64_t v77 = sub_25346CB4C(v76);
  uint64_t v78 = MEMORY[0x270FA5388](v77);
  int v80 = (char *)v164 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v78);
  sub_2534D97C0();
  sub_253961F60(v6, v3, &qword_269CDF958);
  uint64_t v81 = type metadata accessor for ContextProtoStructuredContextKind(0);
  sub_2534D8B48(v3, 1, v81);
  if (v82)
  {
    sub_253A5E080();
    uint64_t v83 = sub_2534D969C();
    sub_253A73498(v83, v84);
    sub_253A72E68();
    uint64_t v85 = v3;
  }
  else
  {
    uint64_t v221 = v6;
    uint64_t v197 = v3;
    sub_253961F60(v3, (uint64_t)v80, &qword_269CDF958);
    sub_253578EEC();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        sub_253A72EB8((uint64_t)v80, (uint64_t)v0);
        uint64_t v224 = *v0;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_253B07F30();
        sub_253B08000();
      }
      else
      {
        uint64_t v95 = sub_253578EE0();
        sub_253A72EB8(v95, v96);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_253B07B90();
        sub_253B07FE0();
      }
      sub_253A72E68();
      sub_253A72E68();
    }
    else
    {
      uint64_t v87 = v219;
      sub_253A72EB8((uint64_t)v80, v219);
      uint64_t v88 = *(void *)(v87 + 24);
      uint64_t v189 = *(void *)(v87 + 16);
      uint64_t v89 = *(void *)(v87 + 40);
      uint64_t v188 = *(void *)(v87 + 32);
      uint64_t v90 = *(void *)(v87 + 56);
      uint64_t v187 = *(void *)(v87 + 48);
      uint64_t v91 = *(void *)(v87 + 72);
      uint64_t v186 = *(void *)(v87 + 64);
      int v185 = *(unsigned __int8 *)(v87 + 80);
      int v184 = *(unsigned __int8 *)(v87 + 81);
      int v183 = *(unsigned __int8 *)(v87 + 82);
      int v182 = *(unsigned __int8 *)(v87 + 83);
      int v181 = *(unsigned __int8 *)(v87 + 84);
      uint64_t v92 = v87 + v217[15];
      uint64_t v94 = *(void *)v87;
      uint64_t v93 = *(void *)(v87 + 8);
      uint64_t v216 = v92;
      sub_253961F60(v92, (uint64_t)v66, &qword_269CDF998);
      uint64_t v215 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
      sub_2534D8B48((uint64_t)v66, 1, v215);
      uint64_t v196 = v91;
      uint64_t v194 = v88;
      uint64_t v193 = v90;
      uint64_t v192 = v93;
      if (v82)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_253472458((uint64_t)v66, &qword_269CDF998);
        uint64_t v190 = 0;
      }
      else
      {
        uint64_t v190 = *v66;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_253A72E68();
      }
      uint64_t v97 = v89;
      sub_253961F60(v216, v4, &qword_269CDF998);
      uint64_t v98 = v215;
      sub_2534D8B48(v4, 1, v215);
      if (v82) {
        sub_253472458(v4, &qword_269CDF998);
      }
      else {
        sub_253A72E68();
      }
      uint64_t v191 = v94;
      uint64_t v99 = sub_2534D99FC();
      sub_253961F60(v99, v100, v101);
      sub_2534D8B48(v2, 1, v98);
      uint64_t v102 = v220;
      if (v82) {
        sub_253472458(v2, &qword_269CDF998);
      }
      else {
        sub_253A72E68();
      }
      sub_25395BBC0();
      uint64_t v103 = v102;
      if (v102)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_253A72E68();
      }
      else
      {
        uint64_t v195 = v97;
        sub_253B07DA0();
        uint64_t v104 = sub_253B07DC0();
        sub_253A74084(v104);
        uint64_t v105 = (uint64_t *)(v219 + v217[16]);
        uint64_t v106 = *v105;
        unint64_t v107 = v105[1];
        char v108 = (uint64_t *)(v219 + v217[17]);
        uint64_t v109 = v108[1];
        uint64_t v171 = *v108;
        uint64_t v110 = v217[19];
        uint64_t v111 = (uint64_t *)(v219 + v217[18]);
        uint64_t v112 = v111[1];
        uint64_t v170 = *v111;
        uint64_t v113 = v219 + v110;
        uint64_t v114 = v200;
        sub_253961F60(v219 + v110, v200, &qword_269CDF988);
        uint64_t v115 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
        sub_2534D8B48(v114, 1, v115);
        uint64_t v190 = v109;
        uint64_t v180 = v112;
        if (v82)
        {
          sub_2535342E8(v106, v107);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_253472458(v114, &qword_269CDF988);
          LODWORD(v220) = 0;
          LODWORD(v216) = 1;
        }
        else
        {
          LODWORD(v220) = *(_DWORD *)v114;
          LODWORD(v216) = *(unsigned __int8 *)(v114 + 4);
          sub_2535342E8(v106, v107);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_253A72E68();
        }
        uint64_t v116 = v201;
        sub_253961F60(v113, v201, &qword_269CDF988);
        sub_2534D8B48(v116, 1, v115);
        if (v82)
        {
          sub_253472458(v116, &qword_269CDF988);
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_253A72E68();
        }
        unint64_t v200 = v107;
        uint64_t v201 = v106;
        uint64_t v117 = v202;
        sub_253961F60(v113, v202, &qword_269CDF988);
        sub_2534D8B48(v117, 1, v115);
        if (v82) {
          sub_253472458(v117, &qword_269CDF988);
        }
        else {
          sub_253A72E68();
        }
        uint64_t v118 = v203;
        sub_253961F60(v113, v203, &qword_269CDF988);
        sub_2534D8B48(v118, 1, v115);
        if (v82)
        {
          sub_253472458(v118, &qword_269CDF988);
          char v119 = 1;
        }
        else
        {
          char v119 = *(unsigned char *)(v118 + 36);
          sub_253A72E68();
        }
        char v226 = v119;
        uint64_t v120 = v209;
        sub_253B07CC0();
        uint64_t v121 = sub_253B07D00();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v120, 0, 1, v121);
        uint64_t v122 = v217[21];
        uint64_t v123 = (uint64_t *)(v219 + v217[20]);
        uint64_t v169 = *v123;
        int v168 = *((unsigned __int8 *)v123 + 8);
        uint64_t v124 = *(void *)(v219 + v122 + 8);
        uint64_t v167 = *(void *)(v219 + v122);
        uint64_t v125 = v217[23];
        int v166 = *(unsigned __int8 *)(v219 + v217[22]);
        int v165 = *(unsigned __int8 *)(v219 + v125);
        uint64_t v126 = v219 + v217[24];
        uint64_t v127 = v204;
        sub_253961F60(v126, v204, &qword_269CDF978);
        uint64_t v128 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
        sub_2534D8B48(v127, 1, v128);
        uint64_t v203 = v124;
        if (v82)
        {
          swift_bridgeObjectRetain();
          sub_253472458(v127, &qword_269CDF978);
          uint64_t v202 = 0;
          uint64_t v179 = 0;
        }
        else
        {
          uint64_t v129 = *(void *)(v127 + 16);
          uint64_t v202 = *(void *)(v127 + 8);
          uint64_t v179 = v129;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_253A72E68();
        }
        uint64_t v130 = (uint64_t)v212;
        uint64_t v131 = (uint64_t)v210;
        uint64_t v132 = v205;
        sub_253961F60(v126, v205, &qword_269CDF978);
        sub_2534D8B48(v132, 1, v128);
        if (v82)
        {
          sub_253472458(v132, &qword_269CDF978);
          uint64_t v134 = 0;
          uint64_t v178 = 0;
        }
        else
        {
          uint64_t v133 = *(void *)(v132 + 24);
          uint64_t v178 = *(void *)(v132 + 32);
          swift_bridgeObjectRetain();
          uint64_t v134 = v133;
          sub_253A72E68();
        }
        uint64_t v135 = sub_253578EE0();
        sub_253961F60(v135, v136, v137);
        sub_2534D8B48(v131, 1, v128);
        if (v82)
        {
          sub_253472458(v131, &qword_269CDF978);
          uint64_t v177 = 0;
          uint64_t v176 = 0;
        }
        else
        {
          uint64_t v138 = *(void *)(v131 + 48);
          uint64_t v177 = *(void *)(v131 + 40);
          uint64_t v176 = v138;
          swift_bridgeObjectRetain();
          sub_253A72E68();
        }
        uint64_t v139 = v211;
        sub_253961F60(v126, v211, &qword_269CDF978);
        sub_2534D8B48(v139, 1, v128);
        if (v82)
        {
          sub_253472458(v139, &qword_269CDF978);
          uint64_t v175 = 0;
          uint64_t v174 = 0;
        }
        else
        {
          uint64_t v140 = *(void *)(v139 + 64);
          uint64_t v175 = *(void *)(v139 + 56);
          uint64_t v174 = v140;
          swift_bridgeObjectRetain();
          sub_253A72E68();
        }
        uint64_t v141 = sub_253578828();
        sub_253961F60(v141, v142, v143);
        uint64_t v144 = sub_253A73F2C();
        sub_2534D8B48(v144, v145, v128);
        if (v82)
        {
          sub_253472458(v130, &qword_269CDF978);
          uint64_t v173 = 0;
          uint64_t v172 = 0;
        }
        else
        {
          uint64_t v146 = *(void *)(v130 + 80);
          uint64_t v173 = *(void *)(v130 + 72);
          uint64_t v172 = v146;
          swift_bridgeObjectRetain();
          sub_253A72E68();
        }
        uint64_t v147 = v126;
        uint64_t v148 = v213;
        sub_253961F60(v147, (uint64_t)v213, &qword_269CDF978);
        sub_2534D8B48((uint64_t)v148, 1, v128);
        if (v82)
        {
          sub_253472458((uint64_t)v148, &qword_269CDF978);
        }
        else
        {
          uint64_t v149 = *v148;
          swift_bridgeObjectRetain();
          sub_253A72E68();
          uint64_t v150 = *(void *)(v149 + 16);
          if (v150)
          {
            v164[2] = v134;
            uint64_t v220 = 0;
            uint64_t v225 = MEMORY[0x263F8EE78];
            uint64_t v216 = v150;
            sub_2539E87CC();
            sub_2535786F4();
            v164[1] = v149;
            uint64_t v152 = v149 + v151;
            sub_253A73924(*(void *)(v153 + 72));
            uint64_t v154 = v225;
            uint64_t v204 = v224 + 32;
            do
            {
              uint64_t v155 = v223;
              sub_253A72E10(v152, (uint64_t)v223);
              uint64_t v156 = *v155;
              uint64_t v214 = v155[2];
              uint64_t v215 = v156;
              uint64_t v157 = v155[4];
              unint64_t v212 = (char *)v155[6];
              uint64_t v213 = (uint64_t *)v157;
              uint64_t v158 = v155[8];
              uint64_t v210 = (char *)v155[10];
              uint64_t v211 = v158;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_253B07E20();
              sub_253A72E68();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_2539E87CC();
                uint64_t v154 = v225;
              }
              unint64_t v159 = *(void *)(v154 + 16);
              if (v159 >= *(void *)(v154 + 24) >> 1)
              {
                sub_2539E87CC();
                uint64_t v154 = v225;
              }
              *(void *)(v154 + 16) = v159 + 1;
              sub_253962314();
              sub_2534D8E14();
              v160();
              uint64_t v225 = v154;
              sub_253A741BC();
              v152 += v161;
              --v216;
            }
            while (v216);
            swift_bridgeObjectRelease();
            uint64_t v103 = v220;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v162 = v206;
        sub_253B07EA0();
        uint64_t v163 = sub_253B07EC0();
        sub_253A74084(v163);
        sub_25395BD04();
        if (v103)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_25352C314(v201, v200);
          sub_253A72E68();
          sub_253472458(v162, &qword_269CE8580);
          sub_253472458(v209, &qword_269CE8588);
          sub_253472458(v208, &qword_269CE8598);
        }
        else
        {
          sub_253A738BC();
          sub_253A73960();
          sub_253B07F00();
          sub_253B07FF0();
          sub_253A72E68();
        }
      }
      sub_253A72E68();
    }
    uint64_t v85 = v197;
  }
  sub_253472458(v85, &qword_269CDF958);
  sub_2534847C8();
}

unint64_t sub_253A5E080()
{
  unint64_t result = qword_269CE85A0;
  if (!qword_269CE85A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE85A0);
  }
  return result;
}

void sub_253A5E0CC()
{
}

uint64_t sub_253A5E0E4()
{
  return sub_253A57958();
}

void ContextProtoStructuredContext.init(context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, __int16 a11, __int16 a12, unsigned __int8 a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_2534847F8();
  a23 = v30;
  a24 = v31;
  uint64_t v33 = v32;
  sub_253A73924(v34);
  uint64_t v367 = type metadata accessor for ContextProtoStructuredContext(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v35);
  sub_25346CB04();
  uint64_t v368 = v36;
  sub_253483660();
  uint64_t v349 = sub_253B07BC0();
  sub_253465998();
  uint64_t v348 = v37;
  MEMORY[0x270FA5388](v38);
  uint64_t v347 = (uint64_t)&v321 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  uint64_t v387 = sub_253B07FA0();
  sub_253465998();
  uint64_t v352 = v40;
  MEMORY[0x270FA5388](v41);
  sub_25346CB04();
  sub_2534F8208(v42);
  uint64_t v389 = sub_253B07E60();
  sub_253465998();
  uint64_t v381 = v43;
  MEMORY[0x270FA5388](v44);
  v380 = (char *)&v321 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(0);
  sub_253465998();
  uint64_t v378 = v47;
  uint64_t v379 = v46;
  MEMORY[0x270FA5388](v46);
  sub_25346CB04();
  sub_2534D8F5C(v48);
  uint64_t v49 = sub_253462A5C(&qword_269CE8580);
  uint64_t v50 = sub_25346CB4C(v49);
  MEMORY[0x270FA5388](v50);
  v374 = (char *)&v321 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v52);
  sub_2534B3318();
  uint64_t v355 = v53;
  sub_2534B324C();
  MEMORY[0x270FA5388](v54);
  v363 = (char *)&v321 - v55;
  sub_2534B324C();
  MEMORY[0x270FA5388](v56);
  v362 = (char *)&v321 - v57;
  sub_2534B324C();
  MEMORY[0x270FA5388](v58);
  v361 = (char *)&v321 - v59;
  sub_2534B324C();
  MEMORY[0x270FA5388](v60);
  sub_2534B35DC();
  sub_2534D8F5C(v61);
  uint64_t v62 = sub_253462A5C(&qword_269CDF978);
  uint64_t v63 = sub_25346CB4C(v62);
  MEMORY[0x270FA5388](v63);
  sub_25346CB04();
  sub_2534D8F5C(v64);
  uint64_t v65 = sub_253462A5C(&qword_269CE8588);
  uint64_t v66 = sub_25346CB4C(v65);
  MEMORY[0x270FA5388](v66);
  sub_2534659D8();
  uint64_t v360 = v67;
  sub_2534B324C();
  MEMORY[0x270FA5388](v68);
  v359 = (char *)&v321 - v69;
  sub_2534B324C();
  MEMORY[0x270FA5388](v70);
  v358 = (char *)&v321 - v71;
  sub_2534B324C();
  MEMORY[0x270FA5388](v72);
  sub_2534B35DC();
  sub_2534D8F5C(v73);
  uint64_t v74 = sub_253462A5C(&qword_269CDF988);
  uint64_t v75 = sub_25346CB4C(v74);
  MEMORY[0x270FA5388](v75);
  sub_25346CB04();
  sub_2534D8F5C(v76);
  uint64_t v77 = sub_253462A5C(&qword_269CE8590);
  uint64_t v78 = sub_25346CB4C(v77);
  MEMORY[0x270FA5388](v78);
  v383 = (char *)&v321 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  uint64_t v388 = sub_253B07D80();
  sub_253465998();
  uint64_t v385 = v80;
  MEMORY[0x270FA5388](v81);
  sub_2534659D8();
  uint64_t v386 = v82;
  sub_2534B324C();
  uint64_t v84 = MEMORY[0x270FA5388](v83);
  sub_253A56CA0(v84, v85, v86, v87, v88, v89, v90, v91, v321);
  uint64_t v92 = sub_253462A5C(&qword_269CE8598);
  uint64_t v93 = sub_25346CB4C(v92);
  MEMORY[0x270FA5388](v93);
  v382 = (char *)&v321 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v95);
  v376 = (char *)&v321 - v96;
  sub_2534B324C();
  MEMORY[0x270FA5388](v97);
  uint64_t v375 = (uint64_t)&v321 - v98;
  uint64_t v99 = sub_253462A5C(&qword_269CDF998);
  uint64_t v100 = sub_25346CB4C(v99);
  MEMORY[0x270FA5388](v100);
  sub_25346CB04();
  sub_2534D8F5C(v101);
  uint64_t v102 = sub_253462A5C(&qword_269CE8578);
  uint64_t v103 = sub_25346CB4C(v102);
  MEMORY[0x270FA5388](v103);
  sub_2534D9B74();
  uint64_t v104 = sub_253B07C00();
  sub_253465998();
  uint64_t v350 = v105;
  MEMORY[0x270FA5388](v106);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v107);
  sub_253971BBC();
  sub_253B07F20();
  sub_253465998();
  uint64_t v371 = v109;
  uint64_t v372 = v108;
  MEMORY[0x270FA5388](v108);
  sub_25346CB04();
  uint64_t v377 = v110;
  uint64_t v111 = sub_253462A5C(&qword_269CE8510);
  uint64_t v112 = sub_25346CB4C(v111);
  MEMORY[0x270FA5388](v112);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v113);
  uint64_t v114 = sub_253A737E8();
  uint64_t v370 = type metadata accessor for ContextProtoStructuredContextKind(v114);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v115);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v116);
  uint64_t v356 = (uint64_t)&v321 - v117;
  sub_2534B324C();
  MEMORY[0x270FA5388](v118);
  sub_2534D8F5C((uint64_t)&v321 - v119);
  uint64_t v120 = v33;
  sub_253B07FC0();
  uint64_t v121 = sub_253B07FB0();
  uint64_t v122 = sub_253A73F2C();
  sub_2534D8B48(v122, v123, v121);
  if (!v124)
  {
    uint64_t v345 = v120;
    uint64_t v344 = v26;
    sub_253961F60(v26, v27, &qword_269CE8510);
    sub_2535782A8();
    sub_253A73424();
    int v130 = v129();
    if (v130 == *MEMORY[0x263F4E670])
    {
      uint64_t v131 = sub_253A73654();
      v132(v131);
      sub_25347FA84();
      v133();
      sub_253B07C20();
      sub_2534D8B48(v29, 1, v104);
      if (v124)
      {
        sub_253472458(v29, &qword_269CE8578);
        int v134 = 12;
      }
      else
      {
        uint64_t v151 = v350;
        sub_253A74038();
        sub_25347FA84();
        v152();
        sub_2534AF234();
        v153();
        ContextProtoStructuredContextSiriRequestContextDeviceIdiom.init(context:)();
        if (v24)
        {
          sub_253B07FD0();
          sub_25346CAF4();
          sub_2534659CC();
          v154();
          (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v25, v104);
LABEL_13:
          sub_2534659CC();
          v155();
          uint64_t v128 = v344;
          goto LABEL_4;
        }
        uint64_t v373 = 0;
        sub_2534D91A0();
        v169();
        int v134 = a13;
      }
      int v336 = v134;
      uint64_t v170 = (uint64_t)v382;
      uint64_t v171 = v383;
      uint64_t v172 = v375;
      uint64_t v173 = (uint64_t)v376;
      uint64_t v347 = sub_253B07F10();
      uint64_t v175 = v174;
      uint64_t v343 = sub_253B07EF0();
      uint64_t v352 = v176;
      uint64_t v342 = sub_253B07C30();
      uint64_t v351 = v177;
      uint64_t v341 = sub_253B07C70();
      uint64_t v350 = v178;
      a10 = sub_253B07BE0();
      int v340 = sub_253B07C40();
      int v339 = sub_253B07D50();
      int v338 = sub_253B07D30();
      int v337 = sub_253B07D40();
      uint64_t v349 = sub_253B07D10();
      uint64_t v348 = MEMORY[0x25A266C50]();
      sub_253B07C80();
      uint64_t v179 = sub_253B07DC0();
      sub_2534D8B48(v172, 1, v179);
      if (v124)
      {
        sub_253472458(v172, &qword_269CE8598);
        v383 = 0;
        uint64_t v387 = 0;
      }
      else
      {
        v383 = (char *)sub_253B07DB0();
        uint64_t v387 = v180;
        sub_25347B88C();
        uint64_t v181 = sub_2535787F4();
        v182(v181);
      }
      sub_253B07C80();
      sub_2534D8B48(v173, 1, v179);
      if (v124)
      {
        sub_253472458(v173, &qword_269CE8598);
        uint64_t v183 = 2;
      }
      else
      {
        uint64_t v183 = sub_253B07D70();
        sub_25347B88C();
        uint64_t v184 = sub_253578D38();
        v185(v184);
      }
      sub_253B07C80();
      int v186 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v170, 1, v179);
      uint64_t v187 = (unsigned int *)MEMORY[0x263F4E638];
      if (v186 == 1)
      {
        sub_253472458(v170, &qword_269CE8598);
        uint64_t v188 = sub_253A3D714();
        uint64_t v189 = v388;
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v188, v190, v191, v388);
        uint64_t v192 = (uint64_t)v171;
      }
      else
      {
        sub_253B07D90();
        sub_25347B88C();
        sub_2534659CC();
        v193();
        uint64_t v194 = sub_253A73F2C();
        uint64_t v189 = v388;
        sub_2534D8B48(v194, v195, v388);
        uint64_t v192 = (uint64_t)v171;
        if (!v124)
        {
          uint64_t v196 = v385;
          sub_253A74038();
          sub_25347FA84();
          v197();
          int v198 = *v187;
          goto LABEL_30;
        }
      }
      int v198 = *v187;
      uint64_t v196 = v385;
      (*(void (**)(uint64_t, void, uint64_t))(v385 + 104))(v384, *v187, v189);
      sub_253472458(v192, &qword_269CE8590);
LABEL_30:
      sub_253A3D524();
      sub_2534AF234();
      v199();
      sub_253A73424();
      int v201 = v200();
      if (v201 == v198)
      {
        char v202 = 0;
      }
      else if (v201 == *MEMORY[0x263F4E640])
      {
        char v202 = 1;
      }
      else if (v201 == *MEMORY[0x263F4E648])
      {
        char v202 = 2;
      }
      else if (v201 == *MEMORY[0x263F4E630])
      {
        char v202 = 3;
      }
      else
      {
        if (v201 != *MEMORY[0x263F4E650])
        {
          sub_25394EA00();
          uint64_t v303 = sub_2534D969C();
          sub_253A73498(v303, v304);
          v305 = *(void (**)(void))(v196 + 8);
          sub_2539627B8();
          sub_2534D91A0();
          v305();
          sub_2534D91A0();
          v305();
          swift_bridgeObjectRelease();
          sub_253A74014();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_253B07FD0();
          sub_25346CAF4();
          sub_2534659CC();
          v306();
          goto LABEL_13;
        }
        char v202 = 4;
      }
      uint64_t v203 = v175;
      uint64_t v204 = v387;
      uint64_t v205 = v383;
      sub_2534D91A0();
      v206();
      type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
      uint64_t v207 = v364;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(void *)uint64_t v207 = v205;
      *(void *)(v207 + 8) = v204;
      *(unsigned char *)(v207 + 16) = v183;
      *(unsigned char *)(v207 + 17) = v202;
      sub_253A73620(v207);
      uint64_t v335 = sub_253B07C90();
      uint64_t v334 = v208;
      uint64_t v333 = sub_253B07C10();
      uint64_t v332 = v209;
      uint64_t v331 = sub_253B07BF0();
      uint64_t v330 = v210;
      sub_253A73EF4();
      sub_253B07D20();
      uint64_t v211 = sub_253B07D00();
      sub_2534D8B48(v183, 1, v211);
      if (v124)
      {
        sub_253472458(v183, &qword_269CE8588);
        int v213 = 0;
        uint64_t v388 = 1;
      }
      else
      {
        unint64_t v212 = sub_253B07CD0();
        int v213 = v212;
        uint64_t v388 = HIDWORD(v212) & 1;
        sub_25347B88C();
        uint64_t v214 = sub_2534D9B10();
        v215(v214);
      }
      uint64_t v216 = v360;
      uint64_t v217 = (uint64_t)v359;
      sub_253A73EF4();
      sub_253B07D20();
      sub_2534D8B48(v183, 1, v211);
      if (v124)
      {
        sub_253472458(v183, &qword_269CE8588);
        uint64_t v218 = 0;
        uint64_t v220 = 0;
      }
      else
      {
        uint64_t v218 = sub_253B07CF0();
        uint64_t v220 = v219;
        sub_25347B88C();
        sub_253A73E24();
        v221();
      }
      uint64_t v360 = v203;
      sub_253B07D20();
      sub_2534D8B48(v217, 1, v211);
      if (v124)
      {
        sub_253472458(v217, &qword_269CE8588);
        int v223 = 0;
        LOBYTE(v224) = 1;
      }
      else
      {
        unint64_t v222 = sub_253B07CE0();
        int v223 = v222;
        uint64_t v224 = HIDWORD(v222) & 1;
        sub_25347B88C();
        sub_253A73E24();
        v225();
      }
      sub_253B07D20();
      uint64_t v226 = sub_253A73F2C();
      sub_2534D8B48(v226, v227, v211);
      if (v124)
      {
        sub_253472458(v216, &qword_269CE8588);
        int v229 = 0;
        uint64_t v230 = 1;
      }
      else
      {
        unint64_t v228 = sub_253B07CB0();
        int v229 = v228;
        uint64_t v230 = HIDWORD(v228) & 1;
        sub_25347B88C();
        sub_253A73E24();
        v231();
      }
      uint64_t v232 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
      uint64_t v233 = v365;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_DWORD *)uint64_t v233 = v213;
      *(unsigned char *)(v233 + 4) = v388;
      *(void *)(v233 + 8) = v218;
      *(void *)(v233 + 16) = v220;
      *(_DWORD *)(v233 + 24) = v223;
      *(unsigned char *)(v233 + 28) = v224;
      *(_DWORD *)(v233 + 32) = v229;
      *(unsigned char *)(v233 + 36) = v230;
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v233, 0, 1, v232);
      v359 = (char *)sub_253B07EE0();
      char v235 = v234;
      v358 = (char *)sub_253B07CA0();
      uint64_t v353 = v236;
      int v329 = sub_253B07D60();
      int v328 = sub_253B07C60();
      uint64_t v237 = v354;
      sub_253B07ED0();
      uint64_t v238 = sub_253B07EC0();
      sub_2534D8B48(v237, 1, v238);
      if (v124)
      {
        sub_253472458(v237, &qword_269CE8580);
        uint64_t v327 = 0;
        uint64_t v326 = 0;
      }
      else
      {
        uint64_t v327 = sub_253B07EB0();
        uint64_t v326 = v239;
        sub_25347B88C();
        sub_253A73918();
        v240();
      }
      uint64_t v241 = (uint64_t)v363;
      uint64_t v242 = (uint64_t)v362;
      sub_253A73844();
      sub_253B07ED0();
      sub_2534D8B48(v230, 1, v238);
      if (v124)
      {
        sub_253472458(v230, &qword_269CE8580);
        v363 = 0;
        v362 = 0;
      }
      else
      {
        v363 = (char *)sub_253B07DE0();
        v362 = v243;
        sub_25347B88C();
        sub_253A73918();
        v244();
      }
      sub_253B07ED0();
      sub_2534D8B48(v242, 1, v238);
      if (v124)
      {
        sub_253472458(v242, &qword_269CE8580);
        uint64_t v247 = 0;
        v361 = 0;
      }
      else
      {
        sub_253B07DD0();
        v361 = v245;
        sub_25347B88C();
        uint64_t v247 = v246;
        sub_253A73918();
        v248();
      }
      sub_253B07ED0();
      sub_2534D8B48(v241, 1, v238);
      if (v124)
      {
        sub_253472458(v241, &qword_269CE8580);
        uint64_t v325 = 0;
        uint64_t v324 = 0;
      }
      else
      {
        uint64_t v325 = sub_253B07E80();
        uint64_t v324 = v249;
        sub_25347B88C();
        sub_253A73918();
        v250();
      }
      LODWORD(v354) = v235 & 1;
      uint64_t v251 = v355;
      sub_253B07ED0();
      sub_2534D8B48(v251, 1, v238);
      if (v124)
      {
        sub_253472458(v251, &qword_269CE8580);
        uint64_t v323 = 0;
        uint64_t v322 = 0;
      }
      else
      {
        uint64_t v323 = sub_253B07E70();
        uint64_t v322 = v252;
        sub_25347B88C();
        sub_253A73918();
        v253();
      }
      uint64_t v254 = (uint64_t)v374;
      sub_253B07ED0();
      uint64_t v255 = sub_2534D8B48(v254, 1, v238);
      if (v124)
      {
        sub_253472458(v254, &qword_269CE8580);
      }
      else
      {
        uint64_t v256 = MEMORY[0x25A266E90](v255);
        sub_25347B88C();
        sub_2534659CC();
        v257();
        uint64_t v258 = *(void *)(v256 + 16);
        if (v258)
        {
          uint64_t v355 = v247;
          uint64_t v390 = MEMORY[0x263F8EE78];
          sub_2539E76CC();
          v376 = *(char **)(v381 + 16);
          sub_2535786F4();
          uint64_t v321 = v256;
          uint64_t v260 = v256 + v259;
          v262 = *(char **)(v261 + 56);
          uint64_t v381 = v261;
          v374 = (char *)(v261 - 8);
          uint64_t v375 = (uint64_t)v262;
          v263 = v346;
          do
          {
            uint64_t v388 = v258;
            sub_2534D99FC();
            sub_2534AF234();
            v265(v264);
            uint64_t v266 = sub_253B07E30();
            uint64_t v386 = v267;
            uint64_t v387 = v266;
            uint64_t v268 = sub_253B07E50();
            uint64_t v384 = v269;
            uint64_t v385 = v268;
            uint64_t v270 = sub_253B07E10();
            v382 = v271;
            v383 = (char *)v270;
            uint64_t v272 = sub_253B07E40();
            uint64_t v274 = v273;
            uint64_t v275 = sub_253B07DF0();
            uint64_t v277 = v276;
            uint64_t v278 = sub_253B07E00();
            uint64_t v280 = v279;
            _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
            uint64_t v281 = v386;
            uint64_t *v263 = v387;
            v263[1] = v281;
            uint64_t v282 = v384;
            v263[2] = v385;
            v263[3] = v282;
            uint64_t v283 = v382;
            v263[4] = (uint64_t)v383;
            v263[5] = (uint64_t)v283;
            v263[6] = v272;
            v263[7] = v274;
            v263[8] = v275;
            v263[9] = v277;
            v263[10] = v278;
            v263[11] = v280;
            sub_2534659CC();
            v285(v284);
            uint64_t v286 = v390;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_253A73F88();
              sub_2539E76CC();
              uint64_t v286 = v390;
            }
            sub_253A7367C();
            if (v287)
            {
              sub_2539E76CC();
              uint64_t v286 = v390;
            }
            *(void *)(v286 + 16) = v275;
            sub_253A73110();
            sub_253A72EB8((uint64_t)v263, v288);
            v260 += v375;
            uint64_t v258 = v388 - 1;
          }
          while (v388 != 1);
          swift_bridgeObjectRelease();
          uint64_t v247 = v355;
          goto LABEL_80;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v286 = MEMORY[0x263F8EE78];
LABEL_80:
      type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
      uint64_t v289 = v357;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      uint64_t v290 = v363;
      v289[2] = v326;
      v289[3] = v290;
      sub_253A7410C();
      v289[4] = v291;
      v289[5] = v247;
      uint64_t v292 = v325;
      v289[6] = v361;
      v289[7] = v292;
      uint64_t v293 = v323;
      v289[8] = v324;
      v289[9] = v293;
      v289[10] = v322;
      uint64_t v294 = v327;
      *uint64_t v289 = v286;
      v289[1] = v294;
      sub_253A73620((uint64_t)v289);
      a14 = v336;
      char v320 = sub_253B07BD0();
      sub_253A738BC();
      uint64_t v318 = v353;
      uint64_t v317 = (uint64_t)v358;
      char v316 = v354;
      uint64_t v315 = (uint64_t)v359;
      uint64_t v314 = v365;
      uint64_t v313 = v330;
      uint64_t v312 = v331;
      uint64_t v311 = v332;
      uint64_t v310 = v333;
      uint64_t v309 = v334;
      uint64_t v308 = v335;
      sub_253A73960();
      BYTE4(v307) = v337;
      BYTE3(v307) = v338;
      BYTE2(v307) = v339;
      BYTE1(v307) = v340;
      LOBYTE(v307) = a10;
      uint64_t v28 = v356;
      ContextProtoStructuredContextSiriRequestContext.init(sessionID:requestID:inputOrigin:responseMode:isEyesFree:isMultiUser:isVoiceTriggerEnabled:isTextToSpeechEnabled:isTriggerlessFollowup:deviceRestrictions:bargeInModes:identifiedUser:encodedLocation:countryCode:siriLocale:contentRestrictions:uiScale:temperatureUnit:allowUserGeneratedContent:censorSpeech:meCard:deviceIdiom:didPscfire:)(v347, v360, v343, v352, v342, v351, v341, v350, v356, v307, v349, v348, v295, v308, v309, v310, v311, v312, v313,
        v314,
        v315,
        v316,
        v317,
        v318,
        v319,
        SHIBYTE(v319),
        (uint64_t)v289,
        &a14,
        v320);
      sub_2534659CC();
      v297(v296);
      swift_storeEnumTagMultiPayload();
      goto LABEL_81;
    }
    if (v130 == *MEMORY[0x263F4E678])
    {
      uint64_t v135 = sub_253A73654();
      v136(v135);
      sub_253A74038();
      sub_2536D500C();
      sub_25347FA84();
      v137();
      uint64_t v388 = sub_253B07F40();
      uint64_t v386 = v138;
      uint64_t v389 = sub_253B07F90();
      uint64_t v385 = v139;
      uint64_t v140 = sub_253B07F60();
      uint64_t v142 = v141;
      uint64_t v143 = sub_253B07F70();
      uint64_t v145 = v144;
      char v146 = sub_253B07F50();
      sub_253B07F80();
      uint64_t v147 = sub_253A74174();
      type metadata accessor for ContextProtoStructuredContextIntelligenceCommandContext(v147);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      uint64_t v148 = v386;
      *(void *)uint64_t v28 = v388;
      *(void *)(v28 + 8) = v148;
      *(void *)(v28 + 40) = v385;
      *(void *)(v28 + 48) = v140;
      *(void *)(v28 + 56) = v142;
      *(void *)(v28 + 64) = v143;
      *(void *)(v28 + 72) = v145;
      *(unsigned char *)(v28 + 16) = v146 & 1;
      uint64_t v149 = v389;
      *(void *)(v28 + 24) = v104;
      *(void *)(v28 + 32) = v149;
      sub_2534D91A0();
      v150();
LABEL_16:
      swift_storeEnumTagMultiPayload();
LABEL_81:
      uint64_t v298 = v366;
      sub_253A72EB8(v28, v366);
      sub_253472458(v344, &qword_269CE8510);
      uint64_t v299 = v368;
      sub_253A73874(v368, 1);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      sub_253B07FD0();
      sub_25346CAF4();
      sub_2534659CC();
      v301(v300);
      uint64_t v302 = v369;
      sub_253A72EB8(v299, v369);
      sub_253472458(v302, &qword_269CDF958);
      sub_253A7368C(v298);
      sub_253A73874(v302, 0);
      goto LABEL_82;
    }
    if (v130 == *MEMORY[0x263F4E668])
    {
      uint64_t v156 = sub_253A73654();
      v157(v156);
      sub_253A73844();
      sub_2536D500C();
      sub_25347FA84();
      v158();
      uint64_t v389 = sub_253B07BA0();
      uint64_t v160 = v159;
      uint64_t v161 = sub_253B07B80();
      uint64_t v163 = v162;
      uint64_t v164 = sub_253B07BB0();
      uint64_t v166 = v165;
      type metadata accessor for ContextProtoStructedContextAppInFocusContext(0);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(void *)uint64_t v28 = v389;
      *(void *)(v28 + 8) = v160;
      *(void *)(v28 + 16) = v161;
      *(void *)(v28 + 24) = v163;
      *(void *)(v28 + 32) = v164;
      *(void *)(v28 + 40) = v166;
      sub_2536D500C();
      sub_2534D9A08();
      v167();
      goto LABEL_16;
    }
    sub_2534D91A0();
    v168();
    uint64_t v26 = v344;
  }
  sub_253A5E080();
  uint64_t v125 = sub_2534D969C();
  sub_253A73498(v125, v126);
  sub_253B07FD0();
  sub_25346CAF4();
  sub_2534659CC();
  v127();
  uint64_t v128 = v26;
LABEL_4:
  sub_253472458(v128, &qword_269CE8510);
LABEL_82:
  sub_2534F8A10();
  sub_2534847C8();
}

void ContextProtoStructuredContextSiriRequestContextDeviceIdiom.init(context:)()
{
  sub_253A733C8();
  sub_253B07C00();
  sub_253465998();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = sub_253A730DC(v4, v15);
  v6(v5);
  uint64_t v7 = sub_253A731CC();
  int v9 = v8(v7);
  if (v9 == *MEMORY[0x263F4E620])
  {
    char v10 = 0;
  }
  else if (v9 == *MEMORY[0x263F4E610])
  {
    char v10 = 1;
  }
  else if (v9 == *MEMORY[0x263F4E628])
  {
    char v10 = 2;
  }
  else if (v9 == *MEMORY[0x263F4E618])
  {
    char v10 = 3;
  }
  else if (v9 == *MEMORY[0x263F4E5E0])
  {
    char v10 = 4;
  }
  else if (v9 == *MEMORY[0x263F4E608])
  {
    char v10 = 5;
  }
  else if (v9 == *MEMORY[0x263F4E5F8])
  {
    char v10 = 6;
  }
  else if (v9 == *MEMORY[0x263F4E5E8])
  {
    char v10 = 7;
  }
  else if (v9 == *MEMORY[0x263F4E5F0])
  {
    char v10 = 8;
  }
  else if (v9 == *MEMORY[0x263F4E5D8])
  {
    char v10 = 9;
  }
  else
  {
    if (v9 != *MEMORY[0x263F4E600])
    {
      sub_25394EA00();
      uint64_t v12 = sub_2534D969C();
      sub_253A73408(v12, v13);
      uint64_t v14 = *(void (**)(void))(v2 + 8);
      sub_2535B3940();
      v14();
      sub_2535B3940();
      v14();
      goto LABEL_24;
    }
    char v10 = 10;
  }
  sub_2535B3940();
  v11();
  *uint64_t v0 = v10;
LABEL_24:
  sub_253A73850();
}

void ContextProtoStructuredContextSiriRequestContextUserClassification.init(context:)()
{
  sub_253A733C8();
  sub_253B07D80();
  sub_253465998();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = sub_253A730DC(v4, v15);
  v6(v5);
  uint64_t v7 = sub_253A731CC();
  int v9 = v8(v7);
  if (v9 == *MEMORY[0x263F4E638])
  {
    char v10 = 0;
  }
  else if (v9 == *MEMORY[0x263F4E640])
  {
    char v10 = 1;
  }
  else if (v9 == *MEMORY[0x263F4E648])
  {
    char v10 = 2;
  }
  else if (v9 == *MEMORY[0x263F4E630])
  {
    char v10 = 3;
  }
  else
  {
    if (v9 != *MEMORY[0x263F4E650])
    {
      sub_25394EA00();
      uint64_t v12 = sub_2534D969C();
      sub_253A73408(v12, v13);
      uint64_t v14 = *(void (**)(void))(v2 + 8);
      sub_2535B3940();
      v14();
      sub_2535B3940();
      v14();
      goto LABEL_12;
    }
    char v10 = 4;
  }
  sub_2535B3940();
  v11();
  *uint64_t v0 = v10;
LABEL_12:
  sub_253A73850();
}

#error "253A5FE08: call analysis failed (funcsize=6)"

uint64_t Confidence.init(transcript:)()
{
  return sub_253A72E68();
}

uint64_t sub_253A5FE60()
{
  return Confidence.init(transcript:)();
}

char *sub_253A5FE78()
{
  return sub_253A57B10();
}

uint64_t ContextProtoConfidence.init(context:)()
{
  sub_253A73DCC();
  sub_253B07A30();
  sub_253465998();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v4);
  sub_2534B347C();
  sub_253B075E0();
  int v6 = v5;
  sub_253B075F0();
  sub_2534AF234();
  v7();
  sub_253578368();
  int v9 = v8();
  if (v9 == *MEMORY[0x263F4E4D8])
  {
    char v10 = 0;
  }
  else if (v9 == *MEMORY[0x263F4E4E8])
  {
    char v10 = 1;
  }
  else
  {
    if (v9 != *MEMORY[0x263F4E4E0])
    {
      sub_25394EA00();
      uint64_t v14 = sub_2534D969C();
      sub_253A73408(v14, v15);
      uint64_t v16 = *(void (**)(void))(v2 + 8);
      sub_2534F85D4();
      v16();
      sub_2534F85D4();
      v16();
      goto LABEL_8;
    }
    char v10 = 2;
  }
  sub_2534F85D4();
  v11();
  type metadata accessor for ContextProtoConfidence(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v0 = v6;
  *(unsigned char *)(v0 + 4) = v10;
LABEL_8:
  sub_253B07600();
  sub_25346CAF4();
  sub_2534659CC();
  return v12();
}

void ContextProtoConfidenceBucket.init(context:)()
{
}

uint64_t sub_253A600A0()
{
  return ContextProtoConfidence.init(context:)();
}

uint64_t ContextDataSource.init(transcript:)()
{
  sub_253A736C0();
  sub_253B07B00();
  sub_25346CAF4();
  uint64_t v0 = sub_253A7327C();
  return v1(v0);
}

uint64_t sub_253A60190(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_253A71534(a1, a2, a3, (uint64_t (*)(char *))ContextDataSource.init(transcript:));
}

void ContextProtoContextDataSource.init(context:)()
{
  sub_253A733C8();
  sub_253B07B00();
  sub_253465998();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  int v5 = sub_253A730DC(v4, v15);
  v6(v5);
  uint64_t v7 = sub_253A731CC();
  int v9 = v8(v7);
  if (v9 == *MEMORY[0x263F4E560])
  {
    char v10 = 0;
  }
  else if (v9 == *MEMORY[0x263F4E548])
  {
    char v10 = 1;
  }
  else if (v9 == *MEMORY[0x263F4E558])
  {
    char v10 = 5;
  }
  else if (v9 == *MEMORY[0x263F4E538])
  {
    char v10 = 2;
  }
  else if (v9 == *MEMORY[0x263F4E540])
  {
    char v10 = 3;
  }
  else
  {
    if (v9 != *MEMORY[0x263F4E550])
    {
      sub_253A5E080();
      uint64_t v12 = sub_2534D969C();
      sub_253A73408(v12, v13);
      uint64_t v14 = *(void (**)(void))(v2 + 8);
      sub_2535B3940();
      v14();
      sub_2535B3940();
      v14();
      goto LABEL_14;
    }
    char v10 = 4;
  }
  sub_2535B3940();
  v11();
  *uint64_t v0 = v10;
LABEL_14:
  sub_253A73850();
}

void sub_253A60328()
{
}

uint64_t ContextualEntityDisplayRepresentation.init(transcript:)(uint64_t a1)
{
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_253B08280();
  }
  else
  {
    sub_253462A5C(&qword_269CE5218);
    sub_253B09730();
    sub_253961DC0();
    uint64_t v1 = sub_2534D969C();
    sub_253A73E98(v1, v2);
  }
  return sub_253A72E68();
}

uint64_t sub_253A60424(uint64_t a1)
{
  return ContextualEntityDisplayRepresentation.init(transcript:)(a1);
}

uint64_t sub_253A6043C()
{
  return sub_253A57EB8();
}

uint64_t ContextProtoContextualEntityDisplayRepresentation.init(context:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_253B08290();
  uint64_t v4 = v3;
  uint64_t v5 = sub_253B082A0();
  uint64_t v7 = v6;
  type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *a1 = v2;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v7;
  sub_253B082B0();
  sub_25346CAF4();
  sub_2534659CC();
  return v8();
}

uint64_t sub_253A604F8@<X0>(uint64_t *a1@<X8>)
{
  return ContextProtoContextualEntityDisplayRepresentation.init(context:)(a1);
}

uint64_t ConfidenceBucket.init(transcript:)()
{
  sub_253A736C0();
  sub_253B07A30();
  sub_25346CAF4();
  uint64_t v0 = sub_253A7327C();
  return v1(v0);
}

uint64_t sub_253A60598(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_253A71534(a1, a2, a3, (uint64_t (*)(char *))ConfidenceBucket.init(transcript:));
}

void sub_253A605C4()
{
}

uint64_t BoundingBox.init(transcript:)()
{
  sub_253A7402C();
  sub_25395DE64(*v2 | ((unint64_t)*((unsigned __int8 *)v2 + 4) << 32));
  if (!v1)
  {
    sub_253A73E7C(v0[2]);
    sub_253A73E7C(v0[4]);
    sub_253A73E7C(v0[6]);
    sub_253B07620();
  }
  return sub_253A72E68();
}

uint64_t sub_253A606D0()
{
  return BoundingBox.init(transcript:)();
}

uint64_t sub_253A606E8()
{
  return sub_253A580A8();
}

uint64_t ContextProtoBoundingBox.init(context:)@<X0>(uint64_t a1@<X8>)
{
  sub_253B07630();
  int v3 = v2;
  sub_253B07640();
  int v5 = v4;
  sub_253B07650();
  int v7 = v6;
  sub_253B07660();
  int v9 = v8;
  type metadata accessor for ContextProtoBoundingBox(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)a1 = v3;
  *(unsigned char *)(a1 + 4) = 0;
  *(_DWORD *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 12) = 0;
  *(_DWORD *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 20) = 0;
  *(_DWORD *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 28) = 0;
  sub_253B07670();
  sub_25346CAF4();
  sub_2534659CC();
  return v10();
}

uint64_t sub_253A607C4@<X0>(uint64_t a1@<X8>)
{
  return ContextProtoBoundingBox.init(context:)(a1);
}

uint64_t SurroundingText.init(transcript:)(uint64_t *a1)
{
  uint64_t v6 = v1;
  uint64_t v8 = sub_253462A5C(&qword_269CDCCC0);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v10);
  sub_25351C738();
  MEMORY[0x270FA5388](v11);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v12);
  sub_253971BBC();
  uint64_t v13 = sub_253B07670();
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  sub_2534847E0();
  uint64_t v15 = *a1;
  uint64_t v16 = a1[1];
  swift_bridgeObjectRetain();
  sub_25395DEE0(v15, v16);
  if (v6)
  {
    sub_253A72E68();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v33 = (uint64_t)a1 + *(int *)(type metadata accessor for ContextProtoSurroundingText(0) + 20);
    sub_253961F60(v33, (uint64_t)v2, &qword_269CDCCC0);
    uint64_t v34 = type metadata accessor for ContextProtoBoundingBox(0);
    sub_2534D8B48((uint64_t)v2, 1, v34);
    if (v17)
    {
      sub_253472458((uint64_t)v2, &qword_269CDCCC0);
      uint64_t v18 = 0;
      unsigned __int8 v19 = 1;
    }
    else
    {
      uint64_t v18 = *v2;
      unsigned __int8 v19 = *((unsigned char *)v2 + 4);
      sub_253A72E68();
    }
    sub_25395DE64(v18 | ((unint64_t)v19 << 32));
    uint64_t v20 = sub_253A56AF8();
    sub_253961F60(v20, v21, v22);
    sub_2534D8B48(v4, 1, v34);
    if (v17)
    {
      sub_253472458(v4, &qword_269CDCCC0);
      uint64_t v23 = 0;
      unsigned __int8 v24 = 1;
    }
    else
    {
      uint64_t v23 = *(unsigned int *)(v4 + 8);
      unsigned __int8 v24 = *(unsigned char *)(v4 + 12);
      sub_253A72E68();
    }
    sub_25395DE64(v23 | ((unint64_t)v24 << 32));
    sub_253961F60(v33, v5, &qword_269CDCCC0);
    sub_2534D8B48(v5, 1, v34);
    if (v17)
    {
      sub_253472458(v5, &qword_269CDCCC0);
      uint64_t v25 = 0;
      unsigned __int8 v26 = 1;
    }
    else
    {
      uint64_t v25 = *(unsigned int *)(v5 + 16);
      unsigned __int8 v26 = *(unsigned char *)(v5 + 20);
      sub_253A72E68();
    }
    sub_25395DE64(v25 | ((unint64_t)v26 << 32));
    uint64_t v27 = sub_253A3D03C();
    sub_253961F60(v27, v28, v29);
    sub_2534D8B48(v3, 1, v34);
    if (v17)
    {
      sub_253472458(v3, &qword_269CDCCC0);
      uint64_t v30 = 0;
      unsigned __int8 v31 = 1;
    }
    else
    {
      uint64_t v30 = *(unsigned int *)(v3 + 24);
      unsigned __int8 v31 = *(unsigned char *)(v3 + 28);
      sub_253A72E68();
    }
    sub_25395DE64(v30 | ((unint64_t)v31 << 32));
    sub_253B07620();
    sub_253B07A00();
    return sub_253A72E68();
  }
}

uint64_t sub_253A60BEC(uint64_t *a1)
{
  return SurroundingText.init(transcript:)(a1);
}

uint64_t sub_253A60C04()
{
  return sub_253A582C0();
}

void ContextProtoSurroundingText.init(context:)()
{
  sub_2534847F8();
  uint64_t v4 = sub_253971B04();
  uint64_t v5 = type metadata accessor for ContextProtoSurroundingText(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v6);
  sub_2534AF2D8();
  uint64_t v7 = sub_253B07670();
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_25347FAAC();
  uint64_t v9 = sub_253462A5C(&qword_269CDCCC0);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  sub_2534966B0();
  uint64_t v11 = sub_253B07A10();
  uint64_t v13 = v12;
  sub_253B079F0();
  ContextProtoBoundingBox.init(context:)(v3);
  if (v1)
  {
    sub_253B07A20();
    sub_25346CAF4();
    sub_2534659CC();
    v14();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = type metadata accessor for ContextProtoBoundingBox(0);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v3, 0, 1, v15);
    uint64_t v22 = v0;
    uint64_t v16 = (uint64_t)v2 + *(int *)(v5 + 20);
    uint64_t v17 = sub_2535787C4();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v17, v18, v19, v15);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *int v2 = v11;
    v2[1] = v13;
    sub_253961BF0(v3, v16, &qword_269CDCCC0);
    sub_253A72EB8((uint64_t)v2, v22);
    sub_253B07A20();
    sub_25346CAF4();
    uint64_t v20 = sub_253A738D8();
    v21(v20);
  }
  sub_253A3C6AC();
  sub_2534847C8();
}

void sub_253A60DEC()
{
}

uint64_t sub_253A60E04(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_253A71534(a1, a2, a3, (uint64_t (*)(char *))ContextType.init(transcript:));
}

void sub_253A60E30()
{
}

void RetrievedTool.Definition.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v6 = v5;
  uint64_t v58 = (void (*)(void))v7;
  uint64_t v8 = type metadata accessor for ContextProtoUIControlTool(0);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v62 = (char *)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v11);
  uint64_t v61 = (char *)v55 - v12;
  sub_253483660();
  uint64_t v60 = sub_253B08EF0();
  sub_253465998();
  uint64_t v56 = v13;
  MEMORY[0x270FA5388](v14);
  v55[5] = (uint64_t)v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v16);
  sub_2534B3318();
  v55[4] = v17;
  sub_2534B324C();
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  sub_253A56CA0(v19, v20, v21, v22, v23, v24, v25, v26, v55[0]);
  uint64_t v59 = sub_253B08F30();
  sub_253465998();
  uint64_t v57 = v27;
  MEMORY[0x270FA5388](v28);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v29);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v30);
  sub_25351C738();
  MEMORY[0x270FA5388](v31);
  sub_253578D44();
  MEMORY[0x270FA5388](v32);
  sub_2534F89FC();
  MEMORY[0x270FA5388](v33);
  uint64_t v34 = sub_2536D3970();
  uint64_t v35 = (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(v34);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v36);
  sub_2534835B0();
  sub_25395E90C(v0);
  if (v1)
  {
    sub_253A72E68();
  }
  else
  {
    v55[0] = v2;
    v55[1] = v4;
    v55[2] = v3;
    v55[3] = v6;
    uint64_t v37 = (uint64_t)v61;
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v39 = (uint64_t)v62;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        uint64_t v42 = v56;
        sub_253A74038();
        sub_25347FA84();
        v43();
        uint64_t v35 = *(void (**)(void))(v42 + 16);
        sub_253535668();
        v35();
        sub_2536D500C();
        sub_253535668();
        v35();
        sub_253A740D8();
        sub_253B09430();
        uint64_t v50 = *(void (**)(void))(v42 + 8);
        sub_2534D91A0();
        v50();
        sub_253A72E68();
        sub_2534D91A0();
        v50();
        uint64_t v49 = (unsigned int *)MEMORY[0x263F4E438];
        break;
      case 2:
        sub_2535787F4();
        sub_25347FA84();
        v44();
        sub_253578EEC();
        sub_2534AF234();
        v45();
        sub_253A740EC();
        sub_253A72E68();
        sub_2534DA4BC();
        v51();
        uint64_t v49 = (unsigned int *)MEMORY[0x263F4E428];
        break;
      case 3:
        sub_25347FA84();
        v46();
        sub_253A74020();
        sub_253A56AF8();
        sub_2534AF234();
        v47();
        uint64_t v35 = v58;
        ToolDefinition.init(transcript:)((uint64_t)v58);
        sub_253A72E68();
        sub_25351C3E8();
        v52();
        uint64_t v49 = (unsigned int *)MEMORY[0x263F4E420];
        break;
      case 4:
        sub_253A72EB8(v0, v37);
        sub_253A72E10(v37, v39);
        sub_253A740D8();
        UIControlTool.init(transcript:)();
        sub_253A72E68();
        sub_253A72E68();
        uint64_t v49 = (unsigned int *)MEMORY[0x263F4E440];
        break;
      default:
        sub_253578D38();
        sub_25347FA84();
        v40();
        sub_253A74020();
        sub_253578EE0();
        sub_2534AF234();
        v41();
        sub_253A740EC();
        sub_253A72E68();
        sub_25351C3E8();
        v48();
        uint64_t v49 = (unsigned int *)MEMORY[0x263F4E430];
        break;
    }
    uint64_t v53 = *v49;
    sub_253B077E0();
    sub_25346CAF4();
    (*(void (**)(void (*)(void), uint64_t))(v54 + 104))(v35, v53);
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void UIControlTool.init(transcript:)()
{
  sub_2534847F8();
  sub_253A73DCC();
  uint64_t v5 = sub_253462A5C(&qword_269CDFA70);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_2534B340C();
  MEMORY[0x270FA5388](v7);
  sub_2534D97C0();
  uint64_t v8 = sub_253462A5C(&qword_26B241270);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_2534AF2D8();
  uint64_t v11 = (uint64_t)v1 + *(int *)(type metadata accessor for ContextProtoUIControlTool(v10) + 28);
  sub_253961F60(v11, v4, &qword_269CDFA70);
  uint64_t v12 = sub_253B08F30();
  int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v12);
  uint64_t v14 = sub_253A3D524();
  sub_253472458(v14, v15);
  if (v13 == 1)
  {
    uint64_t v16 = sub_253B08B30();
    sub_25346CC08(v2, v17, v18, v16);
  }
  else
  {
    sub_253961F60(v11, v3, &qword_269CDFA70);
    sub_25395AB34();
    if (v0) {
      goto LABEL_4;
    }
  }
  uint64_t v19 = *v1;
  uint64_t v20 = v1[1];
  swift_bridgeObjectRetain();
  sub_25395DEE0(v19, v20);
  if (v0)
  {
    sub_253A72E68();
    swift_bridgeObjectRelease();
    sub_253472458(v2, &qword_26B241270);
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = v1[2];
  uint64_t v22 = v1[3];
  swift_bridgeObjectRetain();
  sub_25395DEE0(v21, v22);
  swift_bridgeObjectRelease();
  uint64_t v23 = v1[4];
  uint64_t v24 = v1[5];
  swift_bridgeObjectRetain();
  sub_25395DEE0(v23, v24);
  swift_bridgeObjectRelease();
  sub_253B07890();
LABEL_4:
  sub_253A72E68();
LABEL_8:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_253A6173C()
{
}

void ContextProtoRetrievedTool.Definition.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v134 = v0;
  uint64_t v130 = v5;
  uint64_t v128 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v6);
  uint64_t v129 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  uint64_t v114 = sub_253B078B0();
  sub_253465998();
  uint64_t v113 = v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v111 = (char *)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v11);
  uint64_t v112 = (char *)&v108 - v12;
  sub_253483660();
  sub_253B09440();
  sub_253465998();
  uint64_t v123 = v14;
  uint64_t v124 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v122 = (char *)&v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v16);
  uint64_t v121 = (char *)&v108 - v17;
  sub_253B08F30();
  sub_253465998();
  uint64_t v125 = v19;
  uint64_t v126 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v117 = (char *)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v21);
  uint64_t v120 = (char *)&v108 - v22;
  sub_2534B324C();
  MEMORY[0x270FA5388](v23);
  uint64_t v132 = (char *)&v108 - v24;
  sub_253483660();
  sub_253B08B30();
  sub_253465998();
  uint64_t v133 = v25;
  MEMORY[0x270FA5388](v26);
  uint64_t v115 = (char *)&v108 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v28);
  uint64_t v116 = (char *)&v108 - v29;
  sub_2534B324C();
  MEMORY[0x270FA5388](v30);
  uint64_t v118 = (char *)&v108 - v31;
  sub_2534B324C();
  MEMORY[0x270FA5388](v32);
  uint64_t v119 = (char *)&v108 - v33;
  sub_2534B324C();
  uint64_t v35 = MEMORY[0x270FA5388](v34);
  MEMORY[0x270FA5388](v35);
  sub_2536D415C();
  uint64_t v36 = sub_253B077E0();
  sub_253465998();
  uint64_t v38 = v37;
  MEMORY[0x270FA5388](v39);
  uint64_t v40 = sub_25349888C();
  uint64_t v127 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(v40);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v41);
  uint64_t v110 = (char *)&v108 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v43);
  uint64_t v109 = (char *)&v108 - v44;
  sub_2534B324C();
  MEMORY[0x270FA5388](v45);
  sub_2534F8600();
  MEMORY[0x270FA5388](v46);
  sub_253578D44();
  MEMORY[0x270FA5388](v47);
  sub_25351C988();
  uint64_t v49 = MEMORY[0x270FA5388](v48);
  sub_253A737FC(v49, v50, v51, v52, v53, v54, v55, v56, v108);
  sub_2534AF234();
  v57();
  sub_253578368();
  int v59 = v58();
  if (v59 != *MEMORY[0x263F4E430])
  {
    uint64_t v66 = v133;
    uint64_t v67 = v134;
    if (v59 != *MEMORY[0x263F4E438])
    {
      if (v59 == *MEMORY[0x263F4E428])
      {
        uint64_t v76 = sub_253A736CC();
        v77(v76);
        sub_25347FA84();
        v78();
        sub_253A73EE8();
        sub_2534AF234();
        v79();
        sub_253B08B10();
        if (!v67)
        {
          uint64_t v99 = *(void (**)(void))(v66 + 8);
          sub_2534D91A0();
          v99();
          sub_2534DA154();
          sub_2534D8E14();
          v100();
          sub_253A56AF8();
          sub_2534D91A0();
          v99();
          uint64_t v84 = v127;
          swift_storeEnumTagMultiPayload();
          uint64_t v75 = v2;
          goto LABEL_11;
        }
        uint64_t v80 = *(void (**)(void))(v66 + 8);
        sub_2534D91A0();
        v80();
        sub_2534D91AC();
        v81();
      }
      else
      {
        if (v59 != *MEMORY[0x263F4E420])
        {
          if (v59 != *MEMORY[0x263F4E440])
          {
            sub_25394EA00();
            uint64_t v101 = sub_2534D969C();
            sub_253A73498(v101, v102);
            uint64_t v103 = *(void (**)(void))(v38 + 8);
            sub_25351C3E8();
            v103();
            sub_25351C3E8();
            v103();
            goto LABEL_13;
          }
          (*(void (**)(uint64_t, uint64_t))(v38 + 96))(v3, v36);
          sub_25347FA84();
          v95();
          sub_253A73EE8();
          sub_2534D9B10();
          sub_2534AF234();
          v96();
          uint64_t v75 = v110;
          ContextProtoUIControlTool.init(handwritten:)();
          if (v67)
          {
            sub_2534D91A0();
            v97();
            sub_2534D9220();
            v98();
            goto LABEL_13;
          }
          sub_2534D9220();
          v107();
          uint64_t v84 = v127;
          swift_storeEnumTagMultiPayload();
          uint64_t v86 = (uint64_t)v129;
          uint64_t v85 = v130;
          uint64_t v132 = (char *)v36;
          goto LABEL_12;
        }
        (*(void (**)(uint64_t, uint64_t))(v38 + 96))(v3, v36);
        sub_25347FA84();
        v92();
        sub_253A73EE8();
        sub_2534AF234();
        v93();
        sub_253B08B10();
        if (!v67)
        {
          uint64_t v104 = *(void (**)(void))(v66 + 8);
          sub_2534D91A0();
          v104();
          uint64_t v105 = v109;
          sub_2536D500C();
          sub_2534D8E14();
          v106();
          sub_253A3D03C();
          sub_2534D91A0();
          v104();
          uint64_t v84 = v127;
          swift_storeEnumTagMultiPayload();
          uint64_t v132 = (char *)v36;
          uint64_t v75 = v105;
          goto LABEL_11;
        }
        uint64_t v80 = *(void (**)(void))(v66 + 8);
        sub_2534D91A0();
        v80();
        sub_25351C3E8();
        v94();
      }
      sub_2534D91A0();
      v80();
      goto LABEL_13;
    }
    uint64_t v68 = sub_253A736CC();
    v69(v68);
    uint64_t v70 = v123;
    sub_25347FA84();
    v71();
    sub_2536D500C();
    sub_2534AF234();
    v72();
    sub_253B09420();
    uint64_t v73 = *(void (**)(void))(v70 + 8);
    sub_253578EEC();
    sub_2534DA4BC();
    v73();
    sub_2534DA4BC();
    v73();
    uint64_t v74 = v127;
    swift_storeEnumTagMultiPayload();
    uint64_t v75 = v1;
LABEL_10:
    uint64_t v84 = v74;
LABEL_11:
    uint64_t v86 = (uint64_t)v129;
    uint64_t v85 = v130;
LABEL_12:
    uint64_t v87 = (uint64_t)v75;
    uint64_t v88 = v131;
    sub_253A72EB8(v87, v131);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v86, 1, 1, v84);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    sub_2534D91A0();
    v89();
    uint64_t v90 = sub_2534D9B10();
    sub_253A72EB8(v90, v91);
    sub_253472458(v85, &qword_269CDCB70);
    sub_253A7368C(v88);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v85, 0, 1, v84);
    goto LABEL_13;
  }
  (*(void (**)(uint64_t, uint64_t))(v38 + 96))(v3, v36);
  uint64_t v60 = v133;
  sub_25347FA84();
  v61();
  sub_253A74020();
  sub_2534AF234();
  v62();
  uint64_t v63 = v134;
  sub_253B08B10();
  if (!v63)
  {
    uint64_t v82 = *(void (**)(void))(v60 + 8);
    sub_25351C3E8();
    v82();
    sub_2534D8E14();
    v83();
    sub_25351C3E8();
    v82();
    uint64_t v74 = v127;
    swift_storeEnumTagMultiPayload();
    uint64_t v132 = (char *)v36;
    uint64_t v75 = v4;
    goto LABEL_10;
  }
  uint64_t v64 = *(void (**)(void))(v60 + 8);
  sub_25351C3E8();
  v64();
  sub_2534F85D4();
  v65();
  sub_25351C3E8();
  v64();
LABEL_13:
  sub_253A73FF4();
  sub_2534847C8();
}

void ContextProtoUIControlTool.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  uint64_t v4 = sub_253462A5C(&qword_26B241270);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_25347FAAC();
  uint64_t v6 = sub_253462A5C(&qword_269CDFA70);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_2534966B0();
  uint64_t v8 = sub_253B07860();
  uint64_t v10 = v9;
  uint64_t v22 = sub_253B07870();
  uint64_t v12 = v11;
  uint64_t v21 = sub_253B078A0();
  uint64_t v14 = v13;
  sub_253B07880();
  sub_25395F444();
  if (v0)
  {
    sub_253B078B0();
    sub_25346CAF4();
    sub_2534659CC();
    v15();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = v8;
    uint64_t v16 = (uint64_t)v3 + *(int *)(type metadata accessor for ContextProtoUIControlTool(0) + 28);
    uint64_t v17 = sub_253B08F30();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v16, 1, 1, v17);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *uint64_t v3 = v20;
    v3[1] = v10;
    v3[2] = v22;
    v3[3] = v12;
    v3[4] = v21;
    v3[5] = v14;
    sub_253961BF0(v1, v16, &qword_269CDFA70);
    sub_253B078B0();
    sub_25346CAF4();
    uint64_t v18 = sub_253A738D8();
    v19(v18);
  }
  sub_253579494();
  sub_2534847C8();
}

void sub_253A62344()
{
}

void ContextProtoToolQueryOutput.init(handwritten:)()
{
  sub_2534847F8();
  sub_253A7402C();
  type metadata accessor for ContextProtoToolQueryOutput(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v6);
  sub_2534AF2D8();
  uint64_t v7 = sub_253B077E0();
  sub_253465998();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_2534B34A4();
  uint64_t v11 = sub_253462A5C(&qword_269CDCB80);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  sub_25346CC6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v5, v0, v7);
  ContextProtoRetrievedTool.Definition.init(handwritten:)();
  if (!v2)
  {
    uint64_t v13 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
    sub_253A7388C(v4, 0);
    uint64_t v14 = sub_253A3CD60();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v14, v15, v16, v13);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    sub_253961BF0(v4, v3, &qword_269CDCB80);
    sub_253A72EB8(v3, v1);
  }
  sub_253A72E68();
  sub_253A3C6AC();
  sub_2534847C8();
}

void sub_253A624EC()
{
}

void sub_253A62504()
{
}

void sub_253A6251C()
{
}

uint64_t RetrievedTool.Stage.init(transcript:)()
{
  sub_253A736C0();
  sub_253B07830();
  sub_25346CAF4();
  uint64_t v0 = sub_253A7327C();
  return v1(v0);
}

uint64_t sub_253A625EC(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_253A71534(a1, a2, a3, (uint64_t (*)(char *))RetrievedTool.Stage.init(transcript:));
}

uint64_t StructuredContext.SiriRequestContext.User.Classification.init(transcript:)()
{
  sub_253A736C0();
  sub_253B07D80();
  sub_25346CAF4();
  uint64_t v0 = sub_253A7327C();
  return v1(v0);
}

uint64_t sub_253A626E0(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_253A71534(a1, a2, a3, (uint64_t (*)(char *))StructuredContext.SiriRequestContext.User.Classification.init(transcript:));
}

uint64_t StructuredContext.SiriRequestContext.DeviceIdiom.init(transcript:)()
{
  sub_253A736C0();
  sub_253B07C00();
  sub_25346CAF4();
  uint64_t v0 = sub_253A7327C();
  return v1(v0);
}

uint64_t sub_253A62838(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_253A71534(a1, a2, a3, (uint64_t (*)(char *))StructuredContext.SiriRequestContext.DeviceIdiom.init(transcript:));
}

void RetrievedTool.init(transcript:)()
{
  sub_253A7312C();
  uint64_t v4 = sub_253B07830();
  sub_253465998();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_253A737E8();
  uint64_t v10 = type metadata accessor for ContextProtoRetrievedTool.Definition(v9);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  sub_2534D9B74();
  uint64_t v12 = sub_253B077E0();
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_2534B33AC();
  type metadata accessor for ContextProtoRetrievedTool(v14);
  sub_25395E024(v3);
  if (!v0)
  {
    RetrievedTool.Definition.init(transcript:)();
    uint64_t v15 = swift_bridgeObjectRetain();
    sub_253958B2C(v15);
    uint64_t v16 = sub_253A74160();
    v17(v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v1, v2, v4);
    sub_253B077F0();
  }
  sub_253A72E68();
  sub_2534F8A10();
  sub_25354725C();
}

void sub_253A62A20()
{
}

uint64_t ToolQuery.Output.init(transcript:)()
{
  uint64_t v3 = sub_253971B04();
  uint64_t v4 = type metadata accessor for ContextProtoRetrievedTool.Definition(v3);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_2534D8CAC();
  uint64_t v6 = sub_253B077E0();
  sub_253465998();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25395E024(v2);
  if (v1) {
    return sub_253A72E68();
  }
  RetrievedTool.Definition.init(transcript:)();
  sub_253A72E68();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v0, v11, v6);
}

uint64_t sub_253A62B78()
{
  return ToolQuery.Output.init(transcript:)();
}

void ContextProtoRetrievedTool.Stage.init(handwritten:)()
{
  sub_253A733C8();
  sub_253B07830();
  sub_253465998();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = sub_253A730DC(v4, v15);
  v6(v5);
  uint64_t v7 = sub_253A731CC();
  int v9 = v8(v7);
  if (v9 == *MEMORY[0x263F4E470])
  {
    char v10 = 0;
  }
  else if (v9 == *MEMORY[0x263F4E478])
  {
    char v10 = 1;
  }
  else if (v9 == *MEMORY[0x263F4E488])
  {
    char v10 = 2;
  }
  else
  {
    if (v9 != *MEMORY[0x263F4E480])
    {
      sub_25394EA00();
      uint64_t v12 = sub_2534D969C();
      sub_253A73408(v12, v13);
      uint64_t v14 = *(void (**)(void))(v2 + 8);
      sub_2535B3940();
      v14();
      sub_2535B3940();
      v14();
      goto LABEL_10;
    }
    char v10 = 3;
  }
  sub_2535B3940();
  v11();
  *uint64_t v0 = v10;
LABEL_10:
  sub_253A73850();
}

void sub_253A62CC4()
{
}

void ContextProtoRetrievedTool.init(handwritten:)()
{
  sub_253A7312C();
  uint64_t v36 = v3;
  uint64_t v4 = sub_253578A1C();
  uint64_t v5 = type metadata accessor for ContextProtoRetrievedTool(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v6);
  sub_25397F55C();
  sub_253B07830();
  sub_253465998();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v10);
  sub_2536D4118();
  uint64_t v11 = sub_253B077E0();
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  sub_2534B3294();
  uint64_t v13 = sub_253462A5C(&qword_269CDCB80);
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  sub_253465A3C();
  sub_253B07800();
  ContextProtoRetrievedTool.Definition.init(handwritten:)();
  if (!v1)
  {
    uint64_t v35 = v0;
    uint64_t v15 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
    sub_253A73620(v2);
    sub_253B07810();
    int v17 = v16;
    uint64_t v18 = sub_253B07820();
    uint64_t v37 = sub_253A66AAC(v18);
    sub_253B07840();
    sub_2534AF234();
    v19();
    sub_2536D5500();
    sub_253578368();
    int v21 = v20();
    char v22 = 0;
    if (v21 != *MEMORY[0x263F4E470])
    {
      if (v21 == *MEMORY[0x263F4E478])
      {
        char v22 = 1;
      }
      else if (v21 == *MEMORY[0x263F4E488])
      {
        char v22 = 2;
      }
      else
      {
        if (v21 != *MEMORY[0x263F4E480])
        {
          sub_25394EA00();
          uint64_t v31 = sub_2534D969C();
          sub_253A73498(v31, v32);
          uint64_t v33 = *(void (**)(void))(v8 + 8);
          sub_2534D91A0();
          v33();
          sub_2536D5500();
          sub_2534D91A0();
          v33();
          swift_bridgeObjectRelease();
          sub_253B07850();
          sub_25346CAF4();
          sub_2534659CC();
          v34();
          sub_253472458(v2, &qword_269CDCB80);
          goto LABEL_11;
        }
        char v22 = 3;
      }
    }
    char v23 = v22;
    sub_2534D91A0();
    v24();
    uint64_t v25 = v35 + *(int *)(v5 + 28);
    uint64_t v26 = sub_253A3D714();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v26, v27, v28, v15);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    sub_253961BF0(v2, v25, &qword_269CDCB80);
    *(_DWORD *)uint64_t v35 = v17;
    *(void *)(v35 + 8) = v37;
    *(unsigned char *)(v35 + 16) = v23;
    sub_253A72EB8(v35, v36);
  }
  sub_253B07850();
  sub_25346CAF4();
  uint64_t v29 = sub_253A738D8();
  v30(v29);
LABEL_11:
  sub_253579494();
  sub_25354725C();
}

void sub_253A6302C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  sub_2534847F8();
  uint64_t v13 = v12;
  uint64_t v14 = sub_253462A5C(&qword_269CDB3F8);
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  uint64_t v105 = (char *)v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v17);
  sub_2534D8F5C((uint64_t)v91 - v18);
  uint64_t v19 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v20 = sub_25346CB4C(v19);
  MEMORY[0x270FA5388](v20);
  uint64_t v111 = (uint64_t)v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v22);
  uint64_t v96 = (uint64_t)v91 - v23;
  uint64_t v24 = sub_253483660();
  type metadata accessor for ContextProtoSpanMatchedEntity(v24);
  sub_253465998();
  uint64_t v107 = v26;
  uint64_t v108 = v25;
  MEMORY[0x270FA5388](v25);
  uint64_t v100 = (uint64_t)v91 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v28);
  uint64_t v99 = (uint64_t)v91 - v29;
  sub_2534B324C();
  MEMORY[0x270FA5388](v30);
  uint64_t v110 = (uint64_t)v91 - v31;
  sub_2534B324C();
  MEMORY[0x270FA5388](v32);
  uint64_t v106 = (uint64_t *)((char *)v91 - v33);
  sub_2534B324C();
  MEMORY[0x270FA5388](v34);
  uint64_t v93 = (uint64_t)v91 - v35;
  sub_253483660();
  uint64_t v36 = sub_253B07B60();
  sub_253465998();
  uint64_t v38 = v37;
  MEMORY[0x270FA5388](v39);
  sub_2534B340C();
  MEMORY[0x270FA5388](v40);
  uint64_t v112 = (void (**)(void))((char *)v91 - v41);
  sub_2534B324C();
  MEMORY[0x270FA5388](v42);
  uint64_t v97 = (char *)v91 - v43;
  sub_2534B324C();
  uint64_t v45 = MEMORY[0x270FA5388](v44);
  sub_25396314C(v45, v46, v47, v48, v49, v50, v51, v52, v91[0]);
  unint64_t v53 = *(void *)(v13 + 16);
  sub_253962284(MEMORY[0x263F8EE78]);
  sub_2539E670C();
  uint64_t v92 = v13;
  uint64_t v109 = v36;
  if (v53)
  {
    sub_2539626C0();
    uint64_t v103 = v13 + v54;
    uint64_t v104 = v55;
    uint64_t v101 = (void (**)(void))(v38 + 8);
    uint64_t v102 = v38 + 16;
    swift_bridgeObjectRetain();
    uint64_t v56 = 0;
    uint64_t v94 = v11;
    uint64_t v95 = v38;
    while (v104 != v56)
    {
      uint64_t v57 = *(void (**)(void))(v38 + 16);
      sub_253962874();
      v57();
      sub_253962874();
      v57();
      sub_253B07B40();
      sub_253A73604();
      sub_25395F124();
      if (v10)
      {
        uint64_t v89 = *v101;
        sub_253A736A4();
        v89();
        swift_bridgeObjectRelease();
        swift_release();
        ((void (*)(void (**)(void), uint64_t))v89)(v112, v36);
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      uint64_t v58 = sub_253B07B50();
      uint64_t v59 = sub_253A63764(v58);
      uint64_t v60 = v106;
      uint64_t v61 = (uint64_t)v106 + *(int *)(v108 + 20);
      uint64_t v62 = sub_253B08E50();
      sub_25346CC08(v61, v63, v64, v62);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      sub_253961BF0(v111, v61, &qword_269CDCBC8);
      *uint64_t v60 = v59;
      uint64_t v65 = type metadata accessor for ContextProtoSpanMatchedEntity;
      uint64_t v66 = (uint64_t)v60;
      uint64_t v67 = v100;
      sub_253A72EB8(v66, v100);
      uint64_t v68 = *v101;
      sub_2534D9A08();
      v68();
      uint64_t v69 = v67;
      uint64_t v70 = v99;
      sub_253A72EB8(v69, v99);
      sub_253A72EB8(v70, v110);
      sub_2534D9A08();
      v68();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73D30();
        uint64_t v65 = a10;
      }
      unint64_t v71 = *((void *)v65 + 2);
      uint64_t v38 = v95;
      if (v71 >= *((void *)v65 + 3) >> 1)
      {
        sub_253A73AB0();
        uint64_t v65 = a10;
      }
      ++v56;
      *((void *)v65 + 2) = v71 + 1;
      sub_253A73178();
      sub_253A72EB8(v110, v72);
      uint64_t v36 = v109;
      if (v53 == v56) {
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
LABEL_12:
  unint64_t v73 = *(void *)(v92 + 16);
  if (v53 != v73)
  {
    uint64_t v111 = v38 + 16;
    uint64_t v112 = (void (**)(void))(v38 + 8);
    while (v53 < v73)
    {
      sub_2539626C0();
      uint64_t v76 = *(void (**)(uint64_t, unint64_t, uint64_t))(v38 + 16);
      unint64_t v77 = v98;
      v76(v98, v74 + v75 + *(void *)(v38 + 72) * v53, v36);
      v76((uint64_t)v97, v77, v36);
      sub_253B07B40();
      sub_253A74078();
      sub_25395F124();
      if (v10)
      {
        uint64_t v90 = *v112;
        sub_253A736A4();
        v90();
        ((void (*)(unint64_t, uint64_t))v90)(v98, v36);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_25;
      }
      uint64_t v78 = sub_253B07B50();
      uint64_t v79 = sub_253A63764(v78);
      unint64_t v80 = v53;
      uint64_t v81 = v106;
      uint64_t v82 = (uint64_t)v106 + *(int *)(v108 + 20);
      uint64_t v83 = sub_253B08E50();
      sub_25346CC08(v82, v84, v85, v83);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      sub_253961BF0(v96, v82, &qword_269CDCBC8);
      *uint64_t v81 = v79;
      sub_253A72EB8((uint64_t)v81, v93);
      uint64_t v86 = *v112;
      sub_2534D91AC();
      v86();
      sub_2534D91AC();
      v86();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73D30();
        uint64_t v86 = (void (*)(void))a10;
      }
      unint64_t v87 = *((void *)v86 + 2);
      if (v87 >= *((void *)v86 + 3) >> 1)
      {
        sub_253A73AB0();
        uint64_t v86 = (void (*)(void))a10;
      }
      unint64_t v53 = v80 + 1;
      *((void *)v86 + 2) = v87 + 1;
      sub_253A73178();
      sub_253A72EB8(v93, v88);
      unint64_t v73 = *(void *)(v92 + 16);
      uint64_t v36 = v109;
      if (v80 + 1 == v73) {
        goto LABEL_13;
      }
    }
LABEL_27:
    __break(1u);
    return;
  }
LABEL_13:
  swift_bridgeObjectRelease_n();
LABEL_25:
  sub_253578800();
  sub_2534847C8();
}

uint64_t sub_253A63764(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ContextProtoEntityMatch(0);
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v41 = (uint64_t)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v38 = (uint64_t)&v30 - v6;
  uint64_t v7 = sub_253B07770();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v37 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v30 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v33 = (char *)&v30 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v32 = (char *)&v30 - v16;
  unint64_t v17 = *(void *)(a1 + 16);
  uint64_t v42 = MEMORY[0x263F8EE78];
  sub_2539E6770();
  uint64_t v18 = v42;
  uint64_t v40 = v8;
  uint64_t v31 = a1;
  if (v17)
  {
    uint64_t v19 = *(void *)(a1 + 16);
    uint64_t v35 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v36 = v19;
    uint64_t v34 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v21 = 0;
    while (v36 != v21)
    {
      uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      v22(v13, v35 + *(void *)(v8 + 72) * v21, v7);
      v22(v37, (uint64_t)v13, v7);
      ContextProtoEntityMatch.init(handwritten:)();
      if (v1)
      {
        swift_release();
        uint64_t v18 = v31;
        swift_bridgeObjectRelease();
        (*v34)(v13, v7);
        swift_bridgeObjectRelease();
        return v18;
      }
      (*v34)(v13, v7);
      uint64_t v18 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2539E6770();
        uint64_t v18 = v42;
      }
      unint64_t v23 = *(void *)(v18 + 16);
      if (v23 >= *(void *)(v18 + 24) >> 1)
      {
        sub_2539E6770();
        uint64_t v18 = v42;
      }
      ++v21;
      *(void *)(v18 + 16) = v23 + 1;
      uint64_t result = sub_253A72EB8(v41, v18+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v23);
      uint64_t v8 = v40;
      if (v17 == v21) {
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
  uint64_t result = swift_bridgeObjectRetain();
LABEL_12:
  uint64_t v24 = v31;
  unint64_t v25 = *(void *)(v31 + 16);
  if (v17 != v25)
  {
    uint64_t v26 = (void (**)(char *, uint64_t))(v8 + 8);
    while (v17 < v25)
    {
      uint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
      uint64_t v28 = v32;
      v27(v32, v24+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v17, v7);
      v27(v33, (unint64_t)v28, v7);
      ContextProtoEntityMatch.init(handwritten:)();
      if (v1)
      {
        (*v26)(v28, v7);
        swift_bridgeObjectRelease();
        uint64_t v18 = v42;
        swift_bridgeObjectRelease();
        swift_release();
        return v18;
      }
      (*v26)(v28, v7);
      uint64_t v18 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2539E6770();
        uint64_t v18 = v42;
      }
      unint64_t v29 = *(void *)(v18 + 16);
      if (v29 >= *(void *)(v18 + 24) >> 1)
      {
        sub_2539E6770();
        uint64_t v18 = v42;
      }
      ++v17;
      *(void *)(v18 + 16) = v29 + 1;
      uint64_t result = sub_253A72EB8(v38, v18+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v29);
      unint64_t v25 = *(void *)(v24 + 16);
      if (v17 == v25) {
        goto LABEL_13;
      }
    }
LABEL_27:
    __break(1u);
    return result;
  }
LABEL_13:
  swift_bridgeObjectRelease_n();
  return v18;
}

void sub_253A63CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  uint64_t v14 = sub_2539626F0();
  uint64_t v15 = type metadata accessor for ContextProtoRetrievedTool(v14);
  uint64_t v16 = sub_25346CB34(v15);
  v52[9] = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v53 = (uint64_t)v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v19);
  v52[8] = (uint64_t)v52 - v20;
  sub_253483660();
  sub_253B07850();
  sub_253465998();
  MEMORY[0x270FA5388](v21);
  v52[7] = (uint64_t)v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v23);
  sub_2534F8600();
  MEMORY[0x270FA5388](v24);
  v52[3] = (uint64_t)v52 - v25;
  sub_2534B324C();
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  sub_253A73510(v27, v28, v29, v30, v31, v32, v33, v34, v52[0]);
  sub_2539622E0(MEMORY[0x263F8EE78]);
  sub_2539E67D4();
  sub_253A73764();
  if (v13)
  {
    sub_253A73194();
    uint64_t v35 = 0;
    while (1)
    {
      sub_253A73FD0();
      if (v36) {
        break;
      }
      uint64_t v37 = sub_253A73258();
      v12(v37);
      uint64_t v38 = sub_253A7346C();
      v12(v38);
      sub_25396239C();
      ContextProtoRetrievedTool.init(handwritten:)();
      if (v11)
      {
        swift_release();
        sub_253A73F50();
        sub_2534659CC();
        v50();
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      sub_2534659CC();
      v39();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73D0C();
        uint64_t v10 = a10;
      }
      sub_253A73754();
      if (v41)
      {
        sub_2539625A0(v40);
        sub_2539E67D4();
        uint64_t v10 = a10;
      }
      ++v35;
      *(void *)(v10 + 16) = v12;
      sub_253A73178();
      sub_253A72EB8(v53, v42);
      sub_253A73F7C();
      if (v36) {
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
LABEL_13:
  sub_253A736B4();
  if (!v36)
  {
    sub_253A7370C();
    while (v13 < v43)
    {
      uint64_t v44 = sub_253A73140();
      ((void (*)(uint64_t))v10)(v44);
      uint64_t v45 = sub_253A73434();
      ((void (*)(uint64_t))v10)(v45);
      sub_253A73604();
      ContextProtoRetrievedTool.init(handwritten:)();
      if (v11)
      {
        sub_25351C3E8();
        v51();
        swift_bridgeObjectRelease();
        sub_253A73FDC();
        swift_release();
        goto LABEL_27;
      }
      sub_25351C3E8();
      v46();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73D0C();
        uint64_t v10 = a10;
      }
      sub_253A736FC();
      if (v41)
      {
        sub_253962194(v47);
        sub_2539E67D4();
        uint64_t v10 = a10;
      }
      uint64_t v48 = sub_253A731E8();
      sub_253A72EB8(v48, v49);
      sub_253A736B4();
      if (v36) {
        goto LABEL_15;
      }
    }
LABEL_29:
    __break(1u);
    return;
  }
LABEL_15:
  sub_253A7382C();
LABEL_27:
  sub_253578800();
  sub_2534847C8();
}

void sub_253A63FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  sub_2534847F8();
  uint64_t v14 = v10;
  sub_253A74174();
  uint64_t v101 = sub_253B077E0();
  sub_253465998();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  uint64_t v96 = (char *)v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v19);
  unint64_t v87 = (char *)v82 - v20;
  uint64_t v21 = sub_253462A5C(&qword_269CDCB80);
  uint64_t v22 = sub_25346CB4C(v21);
  MEMORY[0x270FA5388](v22);
  uint64_t v95 = (char *)v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v24);
  uint64_t v86 = (char *)v82 - v25;
  uint64_t v26 = sub_253483660();
  type metadata accessor for ContextProtoToolQueryOutput(v26);
  sub_253465998();
  uint64_t v99 = v28;
  uint64_t v100 = v27;
  MEMORY[0x270FA5388](v27);
  sub_2534659D8();
  uint64_t v94 = v29;
  sub_2534B324C();
  MEMORY[0x270FA5388](v30);
  uint64_t v93 = (uint64_t)v82 - v31;
  sub_2534B324C();
  MEMORY[0x270FA5388](v32);
  uint64_t v103 = (uint64_t)v82 - v33;
  sub_2534B324C();
  MEMORY[0x270FA5388](v34);
  sub_25351C988();
  MEMORY[0x270FA5388](v35);
  uint64_t v84 = (uint64_t)v82 - v36;
  sub_2534B324C();
  MEMORY[0x270FA5388](v37);
  uint64_t v83 = (uint64_t)v82 - v38;
  sub_2534B324C();
  MEMORY[0x270FA5388](v39);
  uint64_t v98 = (uint64_t)v82 - v40;
  sub_253483660();
  uint64_t v41 = type metadata accessor for ToolQuery.Output();
  uint64_t v42 = sub_25346CB34(v41);
  uint64_t v44 = v43;
  MEMORY[0x270FA5388](v42);
  sub_253578D44();
  MEMORY[0x270FA5388](v45);
  sub_25351C99C();
  MEMORY[0x270FA5388](v46);
  uint64_t v85 = (char *)v82 - v47;
  sub_2534B324C();
  MEMORY[0x270FA5388](v48);
  sub_2534D8F5C((uint64_t)v82 - v49);
  unint64_t v50 = *(void *)(v11 + 16);
  sub_253962624(MEMORY[0x263F8EE78]);
  sub_2539E6838();
  uint64_t v88 = v11;
  unint64_t v97 = v50;
  if (v50)
  {
    sub_2539625E8();
    uint64_t v91 = v51;
    uint64_t v92 = v52;
    uint64_t v90 = v16 + 16;
    swift_bridgeObjectRetain();
    uint64_t v53 = 0;
    uint64_t v89 = v44;
    while (v92 != v53)
    {
      sub_253A72E10(v91 + *(void *)(v44 + 72) * v53, v12);
      uint64_t v54 = sub_2539627B8();
      sub_253A72E10(v54, v55);
      sub_253578EEC();
      sub_2534B3428();
      v56();
      uint64_t v57 = (uint64_t)v95;
      ContextProtoRetrievedTool.Definition.init(handwritten:)();
      if (v14)
      {
        sub_253A72E68();
        swift_bridgeObjectRelease();
        swift_release();
        sub_253A72E68();
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      uint64_t v102 = 0;
      type metadata accessor for ContextProtoRetrievedTool.Definition(0);
      sub_253A735B4(v57);
      sub_253472458(v13, &qword_269CDCB80);
      uint64_t v58 = sub_2536D5500();
      sub_253961F14(v58, v59, &qword_269CDCB80);
      uint64_t v60 = type metadata accessor for ContextProtoToolQueryOutput;
      uint64_t v61 = v94;
      sub_253A72EB8(v13, v94);
      sub_253A72E68();
      uint64_t v62 = v61;
      uint64_t v63 = v93;
      sub_253A72EB8(v62, v93);
      sub_253A72EB8(v63, v103);
      sub_253A72E68();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73CC4();
        uint64_t v60 = a10;
      }
      unint64_t v65 = *((void *)v60 + 2);
      unint64_t v64 = *((void *)v60 + 3);
      if (v65 >= v64 >> 1)
      {
        sub_253962434(v64);
        sub_2539E6838();
        uint64_t v60 = a10;
      }
      ++v53;
      *((void *)v60 + 2) = v65 + 1;
      sub_253A73178();
      sub_253A72EB8(v103, v66);
      uint64_t v44 = v89;
      uint64_t v14 = v102;
      if (v97 == v53) {
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
LABEL_12:
  uint64_t v67 = v88;
  unint64_t v68 = *(void *)(v88 + 16);
  unint64_t v69 = v97;
  if (v97 != v68)
  {
    uint64_t v103 = v16 + 16;
    uint64_t v70 = v82[1];
    uint64_t v71 = (uint64_t)v85;
    while (v69 < v68)
    {
      sub_253A72E10(v67+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v69, v70);
      sub_253A72E10(v70, v71);
      sub_2534D99FC();
      sub_2534B3428();
      v72();
      uint64_t v73 = (uint64_t)v86;
      ContextProtoRetrievedTool.Definition.init(handwritten:)();
      if (v14)
      {
        sub_253A72E68();
        sub_253A73F38();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_25;
      }
      type metadata accessor for ContextProtoRetrievedTool.Definition(0);
      sub_253A735B4(v73);
      sub_253472458(v13, &qword_269CDCB80);
      sub_253961F14(v73, v13, &qword_269CDCB80);
      uint64_t v74 = type metadata accessor for ContextProtoToolQueryOutput;
      uint64_t v75 = v84;
      sub_253A72EB8(v13, v84);
      sub_253A72E68();
      uint64_t v76 = v75;
      uint64_t v77 = v83;
      sub_253A72EB8(v76, v83);
      sub_253A72EB8(v77, v98);
      sub_2534D9A44();
      sub_253A72E68();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73CC4();
        uint64_t v74 = a10;
      }
      unint64_t v79 = *((void *)v74 + 2);
      unint64_t v78 = *((void *)v74 + 3);
      if (v79 >= v78 >> 1)
      {
        sub_2539625A0(v78);
        sub_2539E6838();
        uint64_t v74 = a10;
      }
      ++v69;
      *((void *)v74 + 2) = v79 + 1;
      sub_253A7357C();
      sub_253A72EB8(v80, v81);
      uint64_t v67 = v88;
      unint64_t v68 = *(void *)(v88 + 16);
      if (v69 == v68) {
        goto LABEL_13;
      }
    }
LABEL_27:
    __break(1u);
    return;
  }
LABEL_13:
  swift_bridgeObjectRelease_n();
LABEL_25:
  sub_253578800();
  sub_2534847C8();
}

void sub_253A646D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  sub_2534847F8();
  sub_2534D9690();
  uint64_t v110 = sub_253B059D0();
  sub_253465998();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  sub_25347FA68(v15, v92);
  uint64_t v16 = sub_253462A5C(&qword_26B249528);
  uint64_t v17 = sub_25346CB4C(v16);
  MEMORY[0x270FA5388](v17);
  uint64_t v109 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_253483660();
  type metadata accessor for TranscriptProtoSpeechRequestCandidate(v19);
  sub_253465998();
  uint64_t v107 = v21;
  uint64_t v108 = v20;
  MEMORY[0x270FA5388](v20);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v22);
  uint64_t v106 = (char *)&v92 - v23;
  sub_2534B324C();
  MEMORY[0x270FA5388](v24);
  uint64_t v105 = (uint64_t)&v92 - v25;
  sub_2534B324C();
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v92 - v27;
  uint64_t v104 = type metadata accessor for SpeechRequestCandidate(0);
  sub_253465998();
  uint64_t v30 = v29;
  MEMORY[0x270FA5388](v31);
  uint64_t v101 = (uint64_t *)((char *)&v92 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2534B324C();
  MEMORY[0x270FA5388](v33);
  uint64_t v114 = (uint64_t *)((char *)&v92 - v34);
  sub_2534B324C();
  uint64_t v36 = MEMORY[0x270FA5388](v35);
  sub_253A741A8(v36, v37, v38, v39, v40, v41, v42, v43, v92);
  unint64_t v44 = *(void *)(v10 + 16);
  sub_253962E50(MEMORY[0x263F8EE78]);
  sub_2539E689C();
  uint64_t v103 = v30;
  uint64_t v95 = v10;
  uint64_t v94 = v28;
  uint64_t v93 = v13;
  if (v44)
  {
    uint64_t v100 = *(void *)(v10 + 16);
    sub_2539625D8();
    uint64_t v98 = v45;
    uint64_t v96 = v13 + 8;
    uint64_t v97 = v13 + 16;
    swift_bridgeObjectRetain();
    uint64_t v46 = 0;
    uint64_t v113 = v44;
    uint64_t v99 = v11;
    while (v100 != v46)
    {
      uint64_t v47 = (uint64_t)v114;
      sub_253A72E10(v98 + *(void *)(v30 + 72) * v46, (uint64_t)v114);
      uint64_t v48 = v101;
      sub_253A72E10(v47, (uint64_t)v101);
      uint64_t v49 = *v48;
      uint64_t v111 = v48[1];
      uint64_t v112 = v49;
      sub_2534B3428();
      v50();
      swift_bridgeObjectRetain();
      int v51 = sub_253B059C0();
      uint64_t v52 = sub_253B059A0();
      uint64_t v54 = v53;
      uint64_t v55 = type metadata accessor for TranscriptProtoStatementID(0);
      uint64_t v56 = (uint64_t)v109;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_DWORD *)uint64_t v56 = v51;
      *(void *)(v56 + 8) = v52;
      *(void *)(v56 + 16) = v54;
      sub_2536D500C();
      uint64_t v57 = v99;
      sub_2534659CC();
      v58();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v56, 0, 1, v55);
      uint64_t v59 = v106;
      uint64_t v60 = (uint64_t)&v106[*(int *)(v108 + 20)];
      uint64_t v61 = sub_2535787C4();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v61, v62, v63, v55);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      uint64_t v64 = v111;
      *uint64_t v59 = v112;
      v59[1] = v64;
      sub_253472458(v60, &qword_26B249528);
      sub_253A738E4(v56);
      uint64_t v65 = v105;
      sub_253A72EB8((uint64_t)v59, v105);
      uint64_t v66 = type metadata accessor for SpeechRequestCandidate;
      sub_253A72E68();
      sub_253A72EB8(v65, v57);
      sub_253A72E68();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73BA4();
        uint64_t v66 = a10;
      }
      unint64_t v44 = v113;
      unint64_t v67 = *((void *)v66 + 2);
      uint64_t v30 = v103;
      if (v67 >= *((void *)v66 + 3) >> 1)
      {
        sub_253A739FC();
        uint64_t v66 = a10;
      }
      ++v46;
      *((void *)v66 + 2) = v67 + 1;
      sub_253A73110();
      sub_253A72EB8(v57, v68);
      if (v44 == v46) {
        goto LABEL_11;
      }
    }
    __break(1u);
  }
  else
  {
    sub_253962DB4();
LABEL_11:
    unint64_t v69 = *(void *)(v95 + 16);
    if (v44 == v69)
    {
LABEL_12:
      swift_bridgeObjectRelease_n();
      sub_2534847C8();
      return;
    }
    uint64_t v111 = v93 + 16;
    uint64_t v101 = (uint64_t *)(v93 + 8);
    uint64_t v70 = (uint64_t)v109;
    while (v44 < v69)
    {
      sub_253A73948();
      uint64_t v113 = v44;
      uint64_t v73 = v102;
      sub_253A72E10(v71 + v72 * v44, v102);
      uint64_t v74 = v114;
      sub_253A72E10(v73, (uint64_t)v114);
      uint64_t v75 = v74[1];
      uint64_t v112 = *v74;
      sub_2534B3428();
      v76();
      swift_bridgeObjectRetain();
      int v77 = sub_253B059C0();
      uint64_t v78 = sub_253B059A0();
      uint64_t v80 = v79;
      type metadata accessor for TranscriptProtoStatementID(0);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_DWORD *)uint64_t v70 = v77;
      *(void *)(v70 + 8) = v78;
      *(void *)(v70 + 16) = v80;
      sub_2534659CC();
      v81();
      sub_253A73874(v70, 0);
      uint64_t v82 = v106;
      uint64_t v83 = (uint64_t)&v106[*(int *)(v108 + 20)];
      sub_253A73874(v83, 1);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *uint64_t v82 = v112;
      v82[1] = v75;
      sub_253472458(v83, &qword_26B249528);
      sub_253A738E4(v70);
      uint64_t v84 = (uint64_t)v82;
      uint64_t v85 = v105;
      sub_253A72EB8(v84, v105);
      uint64_t v86 = type metadata accessor for SpeechRequestCandidate;
      sub_253A72E68();
      uint64_t v87 = v85;
      uint64_t v88 = (uint64_t)v94;
      sub_253A7368C(v87);
      sub_253A72E68();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73BA4();
        uint64_t v86 = a10;
      }
      unint64_t v89 = *((void *)v86 + 2);
      uint64_t v90 = v113;
      if (v89 >= *((void *)v86 + 3) >> 1)
      {
        sub_253A739FC();
        uint64_t v86 = a10;
      }
      unint64_t v44 = v90 + 1;
      *((void *)v86 + 2) = v89 + 1;
      sub_253A73110();
      sub_253A72EB8(v88, v91);
      unint64_t v69 = *(void *)(v95 + 16);
      if (v44 == v69) {
        goto LABEL_12;
      }
    }
  }
  __break(1u);
}

void sub_253A64D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  sub_2534847F8();
  uint64_t v205 = v10;
  uint64_t v15 = v14;
  uint64_t v16 = sub_253462A5C(&qword_269CDCB30);
  uint64_t v17 = sub_25346CB4C(v16);
  MEMORY[0x270FA5388](v17);
  uint64_t v190 = (uint64_t)&v173 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v19);
  sub_2534D8F5C((uint64_t)&v173 - v20);
  uint64_t v21 = sub_253462A5C(&qword_269CDFA30);
  uint64_t v22 = sub_25346CB4C(v21);
  MEMORY[0x270FA5388](v22);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v23);
  uint64_t v24 = sub_253971BBC();
  uint64_t v25 = type metadata accessor for Expression(v24);
  uint64_t v26 = sub_25346CB4C(v25);
  MEMORY[0x270FA5388](v26);
  uint64_t v200 = (uint64_t)&v173 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_253462A5C(&qword_269CE24E8);
  uint64_t v29 = sub_25346CB4C(v28);
  MEMORY[0x270FA5388](v29);
  uint64_t v203 = (char *)&v173 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v31);
  sub_2534B35DC();
  uint64_t v199 = sub_253962E98(v32);
  sub_253465998();
  uint64_t v34 = v33;
  MEMORY[0x270FA5388](v35);
  sub_25346CB04();
  uint64_t v198 = v36;
  uint64_t v37 = sub_253462A5C(&qword_26B249528);
  uint64_t v38 = sub_25346CB4C(v37);
  MEMORY[0x270FA5388](v38);
  uint64_t v189 = (char *)&v173 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v40);
  uint64_t v206 = (uint64_t)&v173 - v41;
  uint64_t v42 = sub_253483660();
  type metadata accessor for TranscriptProtoProgramStatement(v42);
  sub_253465998();
  uint64_t v195 = v44;
  uint64_t v196 = v43;
  MEMORY[0x270FA5388](v43);
  uint64_t v187 = (uint64_t)&v173 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v46);
  int v186 = (char *)&v173 - v47;
  sub_2534B324C();
  MEMORY[0x270FA5388](v48);
  sub_25351C988();
  MEMORY[0x270FA5388](v49);
  uint64_t v194 = (uint64_t)&v173 - v50;
  sub_2534B324C();
  MEMORY[0x270FA5388](v51);
  sub_2534B3318();
  uint64_t v174 = v52;
  sub_2534B324C();
  MEMORY[0x270FA5388](v53);
  uint64_t v173 = (uint64_t)&v173 - v54;
  sub_2534B324C();
  MEMORY[0x270FA5388](v55);
  uint64_t v191 = (uint64_t)&v173 - v56;
  uint64_t v57 = sub_253483660();
  uint64_t v197 = type metadata accessor for ProgramStatement(v57);
  sub_253465998();
  uint64_t v59 = v58;
  MEMORY[0x270FA5388](v60);
  sub_2534659D8();
  uint64_t v188 = v61;
  sub_2534B324C();
  MEMORY[0x270FA5388](v62);
  sub_2534B3318();
  uint64_t v64 = v63;
  sub_2534B324C();
  MEMORY[0x270FA5388](v65);
  uint64_t v175 = (uint64_t)&v173 - v66;
  sub_2534B324C();
  uint64_t v68 = MEMORY[0x270FA5388](v67);
  sub_25396314C(v68, v69, v70, v71, v72, v73, v74, v75, v173);
  unint64_t v76 = *(void *)(v15 + 16);
  sub_253962624(MEMORY[0x263F8EE78]);
  sub_2539E6900();
  uint64_t v179 = v15;
  uint64_t v193 = v59;
  uint64_t v176 = v11;
  if (v76)
  {
    sub_253A73924(*(void *)(v15 + 16));
    sub_2539625D8();
    uint64_t v185 = v77;
    uint64_t v184 = v34 + 16;
    uint64_t v183 = v34 + 8;
    swift_bridgeObjectRetain();
    uint64_t v78 = 0;
    uint64_t v79 = v64;
    uint64_t v204 = v76;
    uint64_t v180 = v34;
    uint64_t v181 = v13;
    uint64_t v202 = v12;
    uint64_t v182 = v64;
    while (1)
    {
      sub_253A741BC();
      if (v80 == v78) {
        break;
      }
      uint64_t v81 = *(void *)(v59 + 72);
      uint64_t v201 = v78;
      sub_253A72E10(v185 + v81 * v78, v79);
      uint64_t v82 = v188;
      sub_253A72E10(v79, v188);
      sub_2534DA678();
      sub_253578EE0();
      sub_2534B3428();
      v83();
      int v84 = sub_253B059C0();
      uint64_t v85 = sub_253B059A0();
      uint64_t v87 = v86;
      type metadata accessor for TranscriptProtoStatementID(0);
      uint64_t v88 = (uint64_t)v189;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_DWORD *)uint64_t v88 = v84;
      *(void *)(v88 + 8) = v85;
      *(void *)(v88 + 16) = v87;
      sub_2534659CC();
      v89();
      sub_253A7385C(v88, 0);
      uint64_t v90 = v197;
      uint64_t v91 = v200;
      sub_253A72E10(v82 + *(int *)(v197 + 20), v200);
      uint64_t v92 = (uint64_t)v203;
      TranscriptProtoExpression.init(handwritten:)(v91, v93, v94, v95, v96, v97, v98, v99, v173, v174, v175, v176, v177, v178, v179, v180, v181, v182, v183,
        v184);
      uint64_t v100 = type metadata accessor for TranscriptProtoExpression(0);
      sub_253A73620(v92);
      char v101 = *(unsigned char *)(v82 + *(int *)(v90 + 24));
      sub_253961F60(v82 + *(int *)(v90 + 28), v190, &qword_269CDCB30);
      uint64_t v102 = v205;
      sub_25395F180();
      uint64_t v205 = v102;
      if (v102)
      {
        sub_253A72E68();
        sub_253472458(v92, &qword_269CE24E8);
        sub_253472458(v88, &qword_26B249528);
        sub_253A739A4();
        swift_release();
        sub_253A72E68();
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
      uint64_t v103 = v194;
      sub_253A7385C(v194, 1);
      uint64_t v104 = v196;
      uint64_t v105 = v103 + *(int *)(v196 + 20);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v105, 1, 1, v100);
      uint64_t v106 = *(int *)(v104 + 24);
      *(unsigned char *)(v103 + v106) = 2;
      uint64_t v107 = v103 + *(int *)(v104 + 28);
      sub_253B08E60();
      uint64_t v108 = sub_2535787C4();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v108, v109, v110, v111);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      sub_253472458(v103, &qword_26B249528);
      sub_253961F14(v88, v103, &qword_26B249528);
      sub_253472458(v105, &qword_269CE24E8);
      sub_253A73E58();
      sub_253961F14(v112, v113, v114);
      *(unsigned char *)(v103 + v106) = v101;
      uint64_t v115 = v202;
      sub_253472458(v107, &qword_269CDFA30);
      sub_253A738E4(v115);
      uint64_t v116 = v187;
      sub_253A72EB8(v103, v187);
      uint64_t v117 = type metadata accessor for ProgramStatement;
      sub_253A72E68();
      uint64_t v118 = v116;
      uint64_t v119 = (uint64_t)v186;
      sub_253A7368C(v118);
      uint64_t v120 = v181;
      sub_253A72EB8(v119, v181);
      uint64_t v79 = v182;
      sub_253A72E68();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73B80();
        uint64_t v117 = a10;
      }
      uint64_t v59 = v193;
      unint64_t v76 = v204;
      uint64_t v34 = v180;
      unint64_t v121 = *((void *)v117 + 2);
      if (v121 >= *((void *)v117 + 3) >> 1)
      {
        sub_253A73A20();
        uint64_t v117 = a10;
      }
      uint64_t v122 = v201 + 1;
      *((void *)v117 + 2) = v121 + 1;
      uint64_t v78 = v122;
      sub_253962314();
      sub_253A72EB8(v120, v123 + v124 * v121);
      if (v76 == v78) {
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_28;
  }
  sub_253962DB4();
LABEL_12:
  sub_253A74118();
  if (!v126)
  {
    uint64_t v202 = v34 + 8;
    uint64_t v203 = (char *)(v34 + 16);
    uint64_t v127 = v178;
    while (v76 < v125)
    {
      sub_253A73E64();
      uint64_t v204 = v76;
      uint64_t v130 = v192;
      sub_253A72E10(v128 + v129 * v76, v192);
      uint64_t v131 = v175;
      sub_253A72E10(v130, v175);
      sub_2534B3428();
      v132();
      int v133 = sub_253B059C0();
      uint64_t v134 = sub_253B059A0();
      uint64_t v136 = v135;
      type metadata accessor for TranscriptProtoStatementID(0);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_DWORD *)uint64_t v206 = v133;
      *(void *)(v206 + 8) = v134;
      *(void *)(v206 + 16) = v136;
      uint64_t v137 = v206;
      sub_2534659CC();
      v138();
      sub_2534AF368(v137);
      uint64_t v139 = v197;
      uint64_t v140 = v200;
      sub_253A72E10(v131 + *(int *)(v197 + 20), v200);
      TranscriptProtoExpression.init(handwritten:)(v140, v141, v142, v143, v144, v145, v146, v147, v173, v174, v175, v176, v177, v178, v179, v180, v181, v182, v183,
        v184);
      uint64_t v148 = type metadata accessor for TranscriptProtoExpression(0);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v127, 0, 1, v148);
      char v149 = *(unsigned char *)(v131 + *(int *)(v139 + 24));
      sub_253961F60(v131 + *(int *)(v139 + 28), v177, &qword_269CDCB30);
      uint64_t v150 = v127;
      uint64_t v151 = v176;
      uint64_t v152 = v205;
      sub_25395F180();
      uint64_t v205 = v152;
      if (v152)
      {
        sub_253A72E68();
        sub_253472458(v150, &qword_269CE24E8);
        sub_253472458(v137, &qword_26B249528);
        sub_253A72E68();
        sub_253A739A4();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_26;
      }
      uint64_t v153 = v194;
      sub_253A73FB0();
      uint64_t v154 = v196;
      uint64_t v155 = v153 + *(int *)(v196 + 20);
      uint64_t v156 = sub_2535787C4();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v156, v157, v158, v148);
      uint64_t v159 = *(int *)(v154 + 24);
      *(unsigned char *)(v153 + v159) = 2;
      uint64_t v160 = v153 + *(int *)(v154 + 28);
      sub_253B08E60();
      uint64_t v161 = sub_253A73E04();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v161, v162, v163, v164);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      sub_253472458(v153, &qword_26B249528);
      sub_253961F14(v206, v153, &qword_26B249528);
      sub_253472458(v155, &qword_269CE24E8);
      sub_253961F14(v150, v155, &qword_269CE24E8);
      *(unsigned char *)(v153 + v159) = v149;
      sub_253472458(v160, &qword_269CDFA30);
      sub_253961F14(v151, v160, &qword_269CDFA30);
      uint64_t v165 = v153;
      uint64_t v166 = v174;
      sub_253A72EB8(v165, v174);
      uint64_t v167 = type metadata accessor for ProgramStatement;
      sub_253A72E68();
      uint64_t v168 = v166;
      uint64_t v169 = v173;
      sub_253A7368C(v168);
      sub_253A72EB8(v169, v191);
      sub_253A72E68();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73B80();
        uint64_t v167 = a10;
      }
      uint64_t v170 = v204;
      unint64_t v171 = *((void *)v167 + 2);
      uint64_t v127 = v178;
      if (v171 >= *((void *)v167 + 3) >> 1)
      {
        sub_253A73A20();
        uint64_t v167 = a10;
      }
      unint64_t v76 = v170 + 1;
      *((void *)v167 + 2) = v171 + 1;
      sub_253A7357C();
      sub_253A72EB8(v191, v172);
      sub_253A74118();
      if (v126) {
        goto LABEL_14;
      }
    }
LABEL_28:
    __break(1u);
    return;
  }
LABEL_14:
  swift_bridgeObjectRelease_n();
LABEL_26:
  sub_2534847C8();
}

void sub_253A6593C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  sub_2534847F8();
  uint64_t v14 = v11;
  sub_2534D9690();
  uint64_t v224 = sub_253B08E50();
  sub_253465998();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  char v234 = (char *)&v189 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v19);
  int v223 = (char *)&v189 - v20;
  sub_2534B324C();
  MEMORY[0x270FA5388](v21);
  uint64_t v233 = (char *)&v189 - v22;
  uint64_t v241 = sub_253462A5C(&qword_269CDCAA8);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v23);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v24);
  unint64_t v222 = (char *)&v189 - v25;
  sub_2534B324C();
  MEMORY[0x270FA5388](v26);
  uint64_t v240 = (uint64_t)&v189 - v27;
  sub_2534B324C();
  MEMORY[0x270FA5388](v28);
  uint64_t v221 = (char *)&v189 - v29;
  uint64_t v30 = sub_253483660();
  uint64_t Data = type metadata accessor for QueryData(v30);
  uint64_t v32 = sub_25346CB4C(Data);
  MEMORY[0x270FA5388](v32);
  sub_2534659D8();
  uint64_t v200 = v33;
  sub_2534B324C();
  MEMORY[0x270FA5388](v34);
  sub_2534D8F5C((uint64_t)&v189 - v35);
  uint64_t v36 = sub_253462A5C(&qword_269CE1F98);
  uint64_t v37 = sub_25346CB4C(v36);
  MEMORY[0x270FA5388](v37);
  sub_2534659D8();
  uint64_t v225 = v38;
  sub_2534B324C();
  MEMORY[0x270FA5388](v39);
  uint64_t v40 = sub_253A74194();
  uint64_t v41 = type metadata accessor for ActionParameterContext(v40);
  uint64_t v42 = sub_25346CB4C(v41);
  MEMORY[0x270FA5388](v42);
  sub_2534D8F5C((uint64_t)&v189 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v44 = sub_253462A5C(&qword_269CE1FA8);
  uint64_t v45 = sub_25346CB4C(v44);
  MEMORY[0x270FA5388](v45);
  sub_2534659D8();
  uint64_t v202 = v46;
  sub_2534B324C();
  MEMORY[0x270FA5388](v47);
  sub_2534B35DC();
  uint64_t v212 = v48;
  uint64_t v49 = sub_253483660();
  uint64_t v206 = type metadata accessor for TranscriptProtoParameterQuery(v49);
  sub_253465998();
  uint64_t v205 = v50;
  MEMORY[0x270FA5388](v51);
  sub_2534659D8();
  uint64_t v197 = v52;
  sub_2534B324C();
  MEMORY[0x270FA5388](v53);
  sub_2534B3318();
  uint64_t v196 = v54;
  sub_2534B324C();
  MEMORY[0x270FA5388](v55);
  sub_2534B3318();
  uint64_t v195 = v56;
  sub_2534B324C();
  MEMORY[0x270FA5388](v57);
  sub_2534B3318();
  uint64_t v198 = v58;
  sub_2534B324C();
  MEMORY[0x270FA5388](v59);
  sub_2534B35DC();
  uint64_t v209 = v60;
  uint64_t v61 = sub_253483660();
  uint64_t v62 = (int *)type metadata accessor for ParameterQuery(v61);
  sub_253465998();
  uint64_t v64 = v63;
  MEMORY[0x270FA5388](v65);
  uint64_t v227 = (char *)&v189 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v67);
  sub_2534B3318();
  uint64_t v201 = v68;
  sub_2534B324C();
  MEMORY[0x270FA5388](v69);
  sub_2534B3318();
  uint64_t v210 = v70;
  sub_2534B324C();
  MEMORY[0x270FA5388](v71);
  sub_2534B35DC();
  sub_2534D8F5C(v72);
  uint64_t v73 = *(void *)(v10 + 16);
  sub_253962E50(MEMORY[0x263F8EE78]);
  sub_2539E69C8();
  uint64_t v228 = v13;
  int v229 = v62;
  uint64_t v213 = v73;
  if (!v73)
  {
    uint64_t v158 = sub_253962DB4();
    unint64_t v157 = v213;
    goto LABEL_52;
  }
  sub_2535786F4();
  uint64_t v75 = v10 + v74;
  uint64_t v76 = v12;
  uint64_t v77 = *(void *)(v10 + 16);
  uint64_t v230 = (void (**)(void))((char *)v16 + 32);
  uint64_t v219 = (char *)v16 + 16;
  uint64_t v214 = (char *)v16 + 40;
  uint64_t v217 = (char *)v16 + 8;
  swift_bridgeObjectRetain();
  uint64_t v218 = v16;
  uint64_t v220 = v76;
  sub_253A73F00();
  uint64_t v207 = v10;
  uint64_t v204 = v64;
  uint64_t v191 = v75;
  uint64_t v190 = v77;
  do
  {
    if (v78 == v77) {
      goto LABEL_70;
    }
    uint64_t v79 = v75 + *(void *)(v64 + 72) * v78;
    uint64_t v80 = v201;
    uint64_t v81 = v78;
    sub_253A72E10(v79, v201);
    sub_253A72E10(v80, v73);
    sub_253A72E10(v73, v208);
    uint64_t v82 = v202;
    TranscriptProtoActionParameterContext.init(handwritten:)();
    uint64_t v194 = type metadata accessor for TranscriptProtoActionParameterContext(0);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v82, 0, 1, v194);
    uint64_t v83 = v200;
    sub_253A72E10(v73 + v62[5], v200);
    uint64_t v84 = v14;
    TranscriptProtoQueryData.init(handwritten:)(v83);
    if (v14)
    {
      sub_253A72E68();
LABEL_50:
      sub_253472458(v202, &qword_269CE1FA8);
      sub_253A73ED0();
      swift_release();
      sub_253A72E68();
      swift_bridgeObjectRelease();
LABEL_54:
      sub_2534847C8();
      return;
    }
    uint64_t v193 = v81 + 1;
    uint64_t v192 = type metadata accessor for TranscriptProtoQueryData(0);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v192);
    uint64_t v85 = *(void *)(v73 + v62[6]);
    swift_bridgeObjectRetain();
    uint64_t v86 = sub_253B095A0();
    sub_25397174C(v85, v246);
    uint64_t v226 = v246[0];
    uint64_t v215 = v246[1];
    sub_253A73F68();
    uint64_t v216 = v87;
    uint64_t v199 = v85;
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v239 = v86;
      if (v84)
      {
        uint64_t v238 = 0;
        sub_2534DA484();
        uint64_t v231 = v84;
        goto LABEL_25;
      }
      sub_253A741BC();
      if (__OFADD__(v88, 1)) {
        goto LABEL_68;
      }
      sub_253A73598();
      if (v89 == v90) {
        goto LABEL_43;
      }
      sub_253A73788();
      if (!v91)
      {
        sub_253A734B0();
        if (v89 == v90) {
          goto LABEL_43;
        }
        sub_253A73488();
        if (!v92)
        {
          sub_253A734B0();
          if (v89 == v90) {
            goto LABEL_43;
          }
          sub_253A73488();
          if (!v93)
          {
            sub_253A734B0();
            if (v89 == v90) {
              goto LABEL_43;
            }
            sub_253A73488();
            if (!v94)
            {
              sub_253A734B0();
              if (v89 == v90) {
                goto LABEL_43;
              }
              sub_253A73488();
              if (!v95)
              {
                sub_253A73598();
                if (v89 == v90) {
                  goto LABEL_43;
                }
                sub_253A73788();
                if (!v135) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_24:
      uint64_t v238 = 0;
      sub_2534D9174();
      uint64_t v231 = v96;
      sub_253A73924(v97);
LABEL_25:
      uint64_t v242 = sub_253A73988();
      sub_2534727C4();
      uint64_t v99 = v98;
      uint64_t v102 = v100 + 16;
      uint64_t v101 = *(void *)(v100 + 16);
      uint64_t v243 = v102;
      uint64_t v244 = v101;
      uint64_t v103 = v221;
      sub_2534B3428();
      v104();
      sub_253B09120();
      sub_253465998();
      uint64_t v106 = v105;
      uint64_t v107 = v241;
      uint64_t v108 = *(void (**)(void))(v105 + 16);
      sub_253A73E48();
      v108();
      uint64_t v236 = v108;
      uint64_t v109 = (uint64_t)v103;
      uint64_t v110 = v240;
      sub_253961F14(v109, v240, &qword_269CDCAA8);
      uint64_t v235 = v110 + *(int *)(v107 + 48);
      sub_253578828();
      sub_2534B3428();
      v111();
      sub_2536D5500();
      sub_253A73E48();
      v108();
      unsigned int v232 = sub_253B059C0();
      uint64_t v237 = *(void *)(v99 + 8);
      sub_25351C3E8();
      v112();
      uint64_t v113 = *(void (**)(void))(v106 + 8);
      sub_2534F85D4();
      v113();
      sub_253A73DDC();
      sub_2534B3428();
      v114();
      sub_253A73E48();
      v115();
      uint64_t v116 = v238;
      sub_253B09100();
      uint64_t v14 = v116;
      sub_2534D99FC();
      if (v116)
      {
        sub_2534F85D4();
        v113();
        sub_25351C3E8();
        v159();
        sub_253472458(v240, &qword_269CDCAA8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_253A72E68();
        sub_253472458(v225, &qword_269CE1F98);
        goto LABEL_50;
      }
      sub_2534F85D4();
      v113();
      uint64_t v16 = *v230;
      sub_25347FA84();
      v16();
      sub_25351C3E8();
      v117();
      sub_2534DA678();
      sub_2534B3428();
      v118();
      uint64_t v119 = v239;
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v245 = v119;
      unsigned int v120 = v232;
      unint64_t v121 = sub_25396E10C(v232);
      if (__OFADD__(*(void *)(v119 + 16), (v122 & 1) == 0))
      {
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      unint64_t v123 = v121;
      char v124 = v122;
      sub_253462A5C(&qword_269CE8680);
      char v125 = sub_253B0A190();
      uint64_t v73 = (uint64_t)v218;
      if (v125)
      {
        unint64_t v126 = sub_25396E10C(v120);
        if ((v124 & 1) != (v127 & 1)) {
          goto LABEL_71;
        }
        unint64_t v123 = v126;
      }
      uint64_t v128 = v245;
      if (v124)
      {
        sub_253A73798();
        v129();
      }
      else
      {
        sub_253A73774(v245 + 8 * (v123 >> 6));
        *(_DWORD *)(v130 + 4 * v123) = v131;
        sub_25347FA84();
        v16();
        uint64_t v132 = *(void *)(v128 + 16);
        BOOL v90 = __OFADD__(v132, 1);
        uint64_t v133 = v132 + 1;
        if (v90) {
          goto LABEL_67;
        }
        *(void *)(v128 + 16) = v133;
      }
      uint64_t v86 = v245;
      swift_bridgeObjectRelease();
      sub_2534DA678();
      sub_2534659CC();
      v134();
      sub_253472458(v240, &qword_269CDCAA8);
      uint64_t v13 = v228;
      uint64_t v62 = v229;
      sub_253A73F00();
      uint64_t v84 = v231;
    }
    sub_253A741BC();
    while (1)
    {
      sub_253A73598();
      if (v89 == v90) {
        break;
      }
      sub_253A74000();
      if (v136) {
        goto LABEL_24;
      }
    }
LABEL_43:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v137 = (uint64_t *)(v73 + v62[7]);
    uint64_t v138 = v137[1];
    uint64_t v244 = *v137;
    uint64_t v139 = v206;
    uint64_t v140 = v197;
    uint64_t v141 = (uint64_t)v197 + *(int *)(v206 + 20);
    uint64_t v142 = sub_253A3CD60();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v142, v143, v144, v194);
    uint64_t v145 = (uint64_t)v140 + *(int *)(v139 + 24);
    uint64_t v146 = sub_253A3D714();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v146, v147, v148, v192);
    char v149 = (uint64_t *)((char *)v140 + *(int *)(v139 + 28));
    *char v149 = 0;
    v149[1] = 0;
    swift_bridgeObjectRetain();
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    sub_253472458(v141, &qword_269CE1FA8);
    sub_253961F14(v202, v141, &qword_269CE1FA8);
    sub_253472458(v145, &qword_269CE1F98);
    uint64_t v150 = v145;
    uint64_t v73 = (uint64_t)v227;
    sub_253961F14((uint64_t)v16, v150, &qword_269CE1F98);
    uint64_t *v140 = v239;
    swift_bridgeObjectRelease();
    *char v149 = v244;
    v149[1] = v138;
    uint64_t v151 = type metadata accessor for TranscriptProtoParameterQuery;
    uint64_t v152 = (uint64_t)v140;
    uint64_t v153 = v196;
    sub_253A72EB8(v152, v196);
    sub_253A72E68();
    sub_253A73EB4(v153, (uint64_t)&v227);
    sub_253A72EB8(v153, v198);
    sub_253A72E68();
    if ((sub_2539621FC() & 1) == 0)
    {
      sub_253A73C10();
      uint64_t v151 = a10;
    }
    unint64_t v155 = *((void *)v151 + 2);
    unint64_t v154 = *((void *)v151 + 3);
    if (v155 >= v154 >> 1)
    {
      sub_253962194(v154);
      sub_2539E69C8();
      uint64_t v151 = a10;
    }
    *((void *)v151 + 2) = v155 + 1;
    sub_253A73110();
    sub_253A72EB8(v198, v156);
    unint64_t v157 = v213;
    uint64_t v78 = v193;
    uint64_t v158 = v207;
    uint64_t v62 = v229;
    uint64_t v64 = v204;
    uint64_t v75 = v191;
    uint64_t v77 = v190;
  }
  while (v193 != v213);
LABEL_52:
  unint64_t v160 = *(void *)(v158 + 16);
  if (v157 == v160)
  {
LABEL_53:
    swift_bridgeObjectRelease_n();
    goto LABEL_54;
  }
  uint64_t v207 = v158;
  uint64_t v204 = v64;
  while (v157 < v160)
  {
    sub_253A73948();
    uint64_t v213 = v157;
    uint64_t v163 = v161 + v162 * v157;
    uint64_t v164 = v211;
    sub_253A72E10(v163, v211);
    uint64_t v165 = v210;
    sub_253A72E10(v164, v210);
    sub_253A72E10(v165, v208);
    uint64_t v166 = v212;
    TranscriptProtoActionParameterContext.init(handwritten:)();
    type metadata accessor for TranscriptProtoActionParameterContext(0);
    sub_2534AF368(v166);
    uint64_t v167 = v203;
    sub_253A72E10(v165 + v62[5], v203);
    TranscriptProtoQueryData.init(handwritten:)(v167);
    if (v14)
    {
      sub_253A72E68();
      sub_253472458(v212, &qword_269CE1FA8);
      sub_253A72E68();
      sub_253A73ED0();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_54;
    }
    uint64_t v168 = type metadata accessor for TranscriptProtoQueryData(0);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v13, 0, 1, v168);
    swift_bridgeObjectRetain();
    Dictionary<>.init(handwritten:)();
    uint64_t v170 = v169;
    unint64_t v171 = (uint64_t *)(v165 + v62[7]);
    uint64_t v172 = *v171;
    uint64_t v173 = v171[1];
    uint64_t v174 = v206;
    uint64_t v175 = v209;
    uint64_t v176 = (uint64_t)v209 + *(int *)(v206 + 20);
    sub_253A74044();
    uint64_t v177 = (uint64_t)v175 + *(int *)(v174 + 24);
    uint64_t v178 = sub_253A73E04();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v178, v179, v180, v168);
    uint64_t v181 = (void *)((char *)v175 + *(int *)(v174 + 28));
    *uint64_t v181 = 0;
    v181[1] = 0;
    swift_bridgeObjectRetain();
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    uint64_t v182 = v176;
    uint64_t v13 = v228;
    sub_253961BF0(v212, v182, &qword_269CE1FA8);
    sub_253961BF0(v13, v177, &qword_269CE1F98);
    *uint64_t v175 = v170;
    swift_bridgeObjectRelease();
    *uint64_t v181 = v172;
    v181[1] = v173;
    uint64_t v183 = type metadata accessor for ParameterQuery;
    sub_253A72E68();
    sub_253A72E68();
    if ((sub_2539621FC() & 1) == 0)
    {
      sub_253A73C10();
      uint64_t v183 = a10;
    }
    uint64_t v14 = 0;
    unint64_t v185 = *((void *)v183 + 2);
    unint64_t v184 = *((void *)v183 + 3);
    uint64_t v62 = v229;
    if (v185 >= v184 >> 1)
    {
      sub_253962434(v184);
      sub_2539E69C8();
      uint64_t v183 = a10;
    }
    *((void *)v183 + 2) = v185 + 1;
    sub_253A73110();
    unint64_t v157 = v186;
    uint64_t v187 = sub_253A74014();
    sub_253A72EB8(v187, v188);
    unint64_t v160 = *(void *)(v207 + 16);
    if (v157 == v160) {
      goto LABEL_53;
    }
  }
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  sub_253B0A550();
  __break(1u);
}

uint64_t sub_253A66AAC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContextProtoSampleInvocation(0);
  uint64_t v59 = *(void *)(v2 - 8);
  uint64_t v60 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v56 = (char *)&v46 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v55 = (uint64_t)&v46 - v8;
  uint64_t v57 = sub_253B07AF0();
  uint64_t v9 = *(void *)(v57 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v57);
  uint64_t v54 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v58 = (char *)&v46 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v47 = (char *)&v46 - v14;
  unint64_t v15 = *(void *)(a1 + 16);
  uint64_t v62 = MEMORY[0x263F8EE78];
  sub_2539E6A2C();
  uint64_t v61 = v9;
  uint64_t v48 = a1;
  if (v15)
  {
    uint64_t v53 = *(void *)(a1 + 16);
    unint64_t v51 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v49 = v9 + 8;
    uint64_t v50 = v9 + 16;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v17 = 0;
    unint64_t v52 = v15;
    uint64_t v18 = (void *)v61;
    uint64_t v19 = v57;
    uint64_t v20 = v58;
    while (v53 != v17)
    {
      uint64_t v21 = (void (*)(char *, unint64_t, uint64_t))v18[2];
      v21(v20, v51 + v18[9] * v17, v19);
      uint64_t v22 = v54;
      v21(v54, (unint64_t)v20, v19);
      uint64_t v23 = sub_253B07AD0();
      uint64_t v25 = v24;
      sub_253B07AE0();
      int v27 = v26;
      uint64_t v28 = (uint64_t)v56;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(void *)uint64_t v28 = v23;
      *(void *)(v28 + 8) = v25;
      *(_DWORD *)(v28 + 16) = v27;
      uint64_t v29 = (void (*)(char *, uint64_t))v18[1];
      v29(v22, v19);
      sub_253A72EB8(v28, (uint64_t)v5);
      v29(v20, v19);
      uint64_t v30 = v62;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2539E6A2C();
        uint64_t v30 = v62;
      }
      unint64_t v15 = v52;
      unint64_t v31 = *(void *)(v30 + 16);
      if (v31 >= *(void *)(v30 + 24) >> 1)
      {
        sub_2539E6A2C();
        uint64_t v30 = v62;
      }
      ++v17;
      *(void *)(v30 + 16) = v31 + 1;
      uint64_t result = sub_253A72EB8((uint64_t)v5, v30+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(void *)(v59 + 72) * v31);
      if (v15 == v17) {
        goto LABEL_11;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v30 = v62;
    swift_bridgeObjectRetain();
LABEL_11:
    uint64_t result = v48;
    unint64_t v32 = *(void *)(v48 + 16);
    if (v15 == v32)
    {
LABEL_12:
      swift_bridgeObjectRelease_n();
      return v30;
    }
    uint64_t v53 = v61 + 8;
    uint64_t v54 = (char *)(v61 + 16);
    uint64_t v33 = v61;
    uint64_t v34 = v47;
    uint64_t v35 = (uint64_t)v56;
    uint64_t v36 = v57;
    while (v15 < v32)
    {
      uint64_t v37 = *(void (**)(char *, unint64_t, uint64_t))(v33 + 16);
      v37(v34, result+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v15, v36);
      uint64_t v38 = v58;
      v37(v58, (unint64_t)v34, v36);
      uint64_t v39 = sub_253B07AD0();
      uint64_t v41 = v40;
      sub_253B07AE0();
      int v43 = v42;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(void *)uint64_t v35 = v39;
      *(void *)(v35 + 8) = v41;
      *(_DWORD *)(v35 + 16) = v43;
      uint64_t v44 = *(void (**)(char *, uint64_t))(v33 + 8);
      v44(v38, v36);
      sub_253A72EB8(v35, v55);
      v44(v34, v36);
      uint64_t v30 = v62;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2539E6A2C();
        uint64_t v30 = v62;
      }
      unint64_t v45 = *(void *)(v30 + 16);
      if (v45 >= *(void *)(v30 + 24) >> 1)
      {
        sub_2539E6A2C();
        uint64_t v30 = v62;
      }
      ++v15;
      *(void *)(v30 + 16) = v45 + 1;
      sub_253A72EB8(v55, v30+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(void *)(v59 + 72) * v45);
      uint64_t result = v48;
      unint64_t v32 = *(void *)(v48 + 16);
      if (v15 == v32) {
        goto LABEL_12;
      }
    }
  }
  __break(1u);
  return result;
}

void sub_253A67040()
{
  sub_2534847F8();
  uint64_t v3 = sub_2534D9690();
  type metadata accessor for TranscriptProtoGlobalToolIdentifier(v3);
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v5);
  sub_2534B347C();
  unint64_t v6 = *(void *)(v0 + 16);
  uint64_t v28 = MEMORY[0x263F8EE78];
  sub_2539E6B58();
  unint64_t v25 = v6;
  uint64_t v26 = v0;
  if (v6)
  {
    uint64_t v7 = *(void *)(v0 + 16);
    swift_bridgeObjectRetain();
    uint64_t v8 = (uint64_t *)(v0 + 56);
    int v27 = v1;
    while (v7)
    {
      uint64_t v9 = *(v8 - 3);
      uint64_t v10 = *(v8 - 2);
      uint64_t v12 = *(v8 - 1);
      uint64_t v11 = *v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *uint64_t v2 = v9;
      v2[1] = v10;
      v2[2] = v12;
      v2[3] = v11;
      unint64_t v14 = *(void *)(v28 + 16);
      unint64_t v13 = *(void *)(v28 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_253962254(v13);
        sub_2539E6B58();
      }
      *(void *)(v28 + 16) = v14 + 1;
      sub_253A73110();
      sub_253A72EB8((uint64_t)v2, v15);
      v8 += 4;
      --v7;
      --v6;
      uint64_t v1 = v27;
      if (!v6) {
        goto LABEL_9;
      }
    }
    __break(1u);
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
LABEL_9:
  unint64_t v16 = *(void *)(v26 + 16);
  unint64_t v17 = v16 - v25;
  if (v16 == v25)
  {
LABEL_10:
    swift_bridgeObjectRelease_n();
    sub_2534847C8();
    return;
  }
  if (v16 > v25)
  {
    uint64_t v18 = (uint64_t *)(v26 + 32 * v25 + 56);
    do
    {
      uint64_t v19 = *(v18 - 3);
      uint64_t v20 = *(v18 - 2);
      uint64_t v22 = *(v18 - 1);
      uint64_t v21 = *v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *uint64_t v1 = v19;
      v1[1] = v20;
      v1[2] = v22;
      v1[3] = v21;
      unint64_t v23 = *(void *)(v28 + 16);
      if (v23 >= *(void *)(v28 + 24) >> 1) {
        sub_2539E6B58();
      }
      *(void *)(v28 + 16) = v23 + 1;
      sub_25394D7F8();
      sub_253A72EB8((uint64_t)v1, v24);
      v18 += 4;
      --v17;
    }
    while (v17);
    goto LABEL_10;
  }
LABEL_18:
  __break(1u);
}

void sub_253A67288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  sub_2534847F8();
  uint64_t v15 = sub_253A74174();
  uint64_t v16 = type metadata accessor for TranscriptProtoASTFlatValue(v15);
  uint64_t v17 = sub_25346CB34(v16);
  MEMORY[0x270FA5388](v17);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = sub_2536D3970();
  uint64_t v20 = type metadata accessor for AST.FlatValue(v19);
  uint64_t v21 = sub_25346CB34(v20);
  uint64_t v23 = v22;
  MEMORY[0x270FA5388](v21);
  sub_2534B340C();
  MEMORY[0x270FA5388](v24);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v25);
  uint64_t v47 = (uint64_t)&v44 - v26;
  unint64_t v27 = *(void *)(v11 + 16);
  sub_253962284(MEMORY[0x263F8EE78]);
  sub_2539E6BBC();
  uint64_t v45 = v13;
  unint64_t v46 = v11;
  if (v27)
  {
    uint64_t v50 = *(void *)(v11 + 16);
    sub_2539625E8();
    uint64_t v48 = v28;
    swift_bridgeObjectRetain();
    uint64_t v29 = 0;
    uint64_t v49 = v23;
    while (v50 != v29)
    {
      uint64_t v30 = type metadata accessor for AST.FlatValue;
      sub_253A72E10(v48 + *(void *)(v23 + 72) * v29, v14);
      sub_253A72E10(v14, v12);
      TranscriptProtoASTFlatValue.init(handwritten:)();
      sub_253A72E68();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73C58();
        uint64_t v30 = a10;
      }
      unint64_t v32 = *((void *)v30 + 2);
      unint64_t v31 = *((void *)v30 + 3);
      unint64_t v11 = v32 + 1;
      if (v32 >= v31 >> 1)
      {
        sub_253962194(v31);
        sub_2539E6BBC();
        uint64_t v30 = a10;
      }
      ++v29;
      *((void *)v30 + 2) = v11;
      sub_253A73930();
      sub_253A72EB8(v10, v33 + v34 * v32);
      uint64_t v23 = v49;
      if (v27 == v29) {
        goto LABEL_11;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_11:
    uint64_t v35 = v45;
    sub_253962548();
    if (v37)
    {
LABEL_13:
      swift_bridgeObjectRelease_n();
      sub_2534847C8();
      return;
    }
    while (v27 < v36)
    {
      unint64_t v38 = sub_2539622A8();
      uint64_t v39 = v47;
      sub_253A72E10(v38, v47);
      sub_253A72E10(v39, v14);
      TranscriptProtoASTFlatValue.init(handwritten:)();
      sub_253A72E68();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73C58();
        uint64_t v39 = (uint64_t)a10;
      }
      sub_253A736EC();
      if (v41)
      {
        sub_253A7363C(v40);
        sub_2539E6BBC();
        uint64_t v39 = (uint64_t)a10;
      }
      ++v27;
      *(void *)(v39 + 16) = type metadata accessor for AST.FlatValue;
      sub_253A73930();
      sub_253A72EB8(v35, v42 + v43 * v11);
      sub_253962548();
      if (v37) {
        goto LABEL_13;
      }
    }
  }
  __break(1u);
}

void sub_253A67598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1), uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_2534847F8();
  a19 = v23;
  a20 = v24;
  uint64_t v25 = v21;
  uint64_t v26 = sub_2534D9690();
  uint64_t v27 = type metadata accessor for AST.FlatValue(v26);
  uint64_t v28 = sub_25346CB4C(v27);
  MEMORY[0x270FA5388](v28);
  sub_25347FA68(v29, v128);
  uint64_t v30 = sub_253462A5C(&qword_269CE22E0);
  uint64_t v31 = sub_25346CB4C(v30);
  MEMORY[0x270FA5388](v31);
  uint64_t v141 = (char *)&v128 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v33);
  uint64_t v140 = (char *)&v128 - v34;
  sub_2534B324C();
  MEMORY[0x270FA5388](v35);
  uint64_t v132 = (char *)&v128 - v36;
  sub_2534B324C();
  MEMORY[0x270FA5388](v37);
  int v131 = (char *)&v128 - v38;
  uint64_t v39 = sub_253483660();
  type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(v39);
  sub_253465998();
  uint64_t v147 = v41;
  uint64_t v148 = v40;
  MEMORY[0x270FA5388](v40);
  uint64_t v139 = (uint64_t)&v128 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v43);
  uint64_t v138 = (char *)&v128 - v44;
  sub_2534B324C();
  MEMORY[0x270FA5388](v45);
  sub_2534F8600();
  MEMORY[0x270FA5388](v46);
  uint64_t v144 = (char *)&v128 - v47;
  sub_2534B324C();
  MEMORY[0x270FA5388](v48);
  uint64_t v130 = (uint64_t)&v128 - v49;
  sub_2534B324C();
  MEMORY[0x270FA5388](v50);
  uint64_t v129 = (uint64_t (*)(uint64_t))((char *)&v128 - v51);
  sub_2534B324C();
  MEMORY[0x270FA5388](v52);
  sub_2534B35DC();
  uint64_t v143 = v53;
  uint64_t v54 = sub_253483660();
  uint64_t v146 = type metadata accessor for AST.Update(v54);
  sub_253465998();
  uint64_t v56 = v55;
  MEMORY[0x270FA5388](v57);
  uint64_t v137 = (uint64_t)&v128 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v59);
  uint64_t v152 = (uint64_t)&v128 - v60;
  sub_2534B324C();
  MEMORY[0x270FA5388](v61);
  uint64_t v128 = (uint64_t)&v128 - v62;
  sub_2534B324C();
  MEMORY[0x270FA5388](v63);
  uint64_t v142 = (uint64_t)&v128 - v64;
  unint64_t v65 = *(void *)(v20 + 16);
  sub_2539622E0(MEMORY[0x263F8EE78]);
  sub_2539E6C20();
  uint64_t v133 = v20;
  uint64_t v145 = v56;
  if (v65)
  {
    uint64_t v136 = *(void *)(v20 + 16);
    sub_2539625D8();
    uint64_t v134 = v66;
    swift_bridgeObjectRetain();
    uint64_t v67 = 0;
    uint64_t v153 = v65;
    uint64_t v135 = v22;
    uint64_t v68 = (uint64_t)v144;
    while (v136 != v67)
    {
      uint64_t v69 = *(void *)(v56 + 72);
      uint64_t v151 = v67;
      uint64_t v70 = v152;
      sub_253A72E10(v134 + v69 * v67, v152);
      uint64_t v71 = v137;
      sub_253A72E10(v70, v137);
      uint64_t v72 = v149;
      sub_253A72E10(v71, v149);
      uint64_t v73 = (uint64_t)v140;
      TranscriptProtoASTFlatValue.init(handwritten:)();
      uint64_t v74 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      sub_2534AF368(v73);
      uint64_t v75 = v146;
      uint64_t v76 = swift_bridgeObjectRetain();
      sub_253A67288(v76, v77, v78, v79, v80, v81, v82, v83, v128, v129);
      uint64_t v150 = v84;
      uint64_t v154 = v25;
      sub_253A72E10(v71 + *(int *)(v75 + 28), v72);
      uint64_t v85 = (uint64_t)v141;
      TranscriptProtoASTFlatValue.init(handwritten:)();
      sub_2534AF368(v85);
      LOBYTE(v75) = *(unsigned char *)(v71 + *(int *)(v75 + 24));
      uint64_t v86 = v148;
      uint64_t v87 = v68 + *(int *)(v148 + 24);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v87, 1, 1, v74);
      uint64_t v88 = v68 + *(int *)(v86 + 28);
      uint64_t v89 = sub_2535787C4();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v89, v90, v91, v74);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      sub_253472458(v87, &qword_269CE22E0);
      sub_253961F14(v73, v87, &qword_269CE22E0);
      *(void *)uint64_t v68 = v150;
      sub_253472458(v88, &qword_269CE22E0);
      sub_253A738E4(v85);
      *(unsigned char *)(v68 + 8) = v75;
      uint64_t v92 = v139;
      sub_253A72EB8(v68, v139);
      uint64_t v93 = type metadata accessor for AST.Update;
      sub_253A72E68();
      uint64_t v94 = v92;
      uint64_t v95 = v138;
      sub_253A7368C(v94);
      uint64_t v96 = (uint64_t)v95;
      uint64_t v97 = v135;
      sub_253A7368C(v96);
      sub_253A72E68();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73BEC();
        uint64_t v93 = a10;
      }
      unint64_t v65 = v153;
      uint64_t v25 = v154;
      sub_253A7367C();
      uint64_t v56 = v145;
      uint64_t v98 = v151;
      if (v99)
      {
        sub_253A73A8C();
        uint64_t v93 = a10;
      }
      uint64_t v67 = v98 + 1;
      *((void *)v93 + 2) = v73;
      sub_253A73110();
      sub_253A72EB8(v97, v100);
      if (v65 == v67) {
        goto LABEL_11;
      }
    }
    __break(1u);
  }
  else
  {
    sub_253962DB4();
LABEL_11:
    unint64_t v101 = *(void *)(v133 + 16);
    if (v65 == v101)
    {
LABEL_12:
      swift_bridgeObjectRelease_n();
      sub_253A3C6AC();
      sub_2534847C8();
      return;
    }
    uint64_t v102 = v128;
    while (v65 < v101)
    {
      sub_2539625E8();
      uint64_t v103 = *(void *)(v56 + 72);
      uint64_t v153 = v65;
      uint64_t v105 = v142;
      sub_253A72E10(v104 + v103 * v65, v142);
      sub_253A72E10(v105, v102);
      uint64_t v106 = v149;
      sub_253A72E10(v102, v149);
      uint64_t v107 = (uint64_t)v131;
      TranscriptProtoASTFlatValue.init(handwritten:)();
      type metadata accessor for TranscriptProtoASTFlatValue(0);
      sub_2534AF368(v107);
      uint64_t v108 = v146;
      uint64_t v109 = swift_bridgeObjectRetain();
      sub_253A67288(v109, v110, v111, v112, v113, v114, v115, v116, v128, v129);
      uint64_t v152 = v117;
      uint64_t v154 = v25;
      sub_253A72E10(v102 + *(int *)(v108 + 28), v106);
      uint64_t v118 = (uint64_t)v132;
      TranscriptProtoASTFlatValue.init(handwritten:)();
      sub_2534AF368(v118);
      LOBYTE(v106) = *(unsigned char *)(v102 + *(int *)(v108 + 24));
      uint64_t v119 = v148;
      uint64_t v120 = (uint64_t)v144;
      uint64_t v121 = (uint64_t)&v144[*(int *)(v148 + 24)];
      sub_253A74044();
      uint64_t v122 = v120 + *(int *)(v119 + 28);
      sub_253A73FB0();
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      sub_253472458(v121, &qword_269CE22E0);
      sub_253961F14(v107, v121, &qword_269CE22E0);
      *(void *)uint64_t v120 = v152;
      sub_253472458(v122, &qword_269CE22E0);
      sub_253961F14(v118, v122, &qword_269CE22E0);
      *(unsigned char *)(v120 + 8) = v106;
      unint64_t v123 = type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant;
      uint64_t v124 = v130;
      sub_253A72EB8(v120, v130);
      sub_253A72E68();
      sub_253A73EB4(v124, (uint64_t)&a14);
      sub_253A72EB8(v124, v143);
      sub_253A72E68();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73BEC();
        unint64_t v123 = a10;
      }
      sub_253A7367C();
      uint64_t v125 = v133;
      uint64_t v126 = v153;
      uint64_t v25 = v154;
      uint64_t v56 = v145;
      if (v99)
      {
        sub_253A73A8C();
        unint64_t v123 = a10;
      }
      unint64_t v65 = v126 + 1;
      *((void *)v123 + 2) = v120;
      sub_253A73110();
      sub_253A72EB8(v143, v127);
      unint64_t v101 = *(void *)(v125 + 16);
      if (v65 == v101) {
        goto LABEL_12;
      }
    }
  }
  __break(1u);
}

void sub_253A67D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  sub_2534847F8();
  uint64_t v16 = sub_2539626F0();
  uint64_t v17 = type metadata accessor for TranscriptProtoCandidate(v16);
  uint64_t v18 = sub_25346CB34(v17);
  uint64_t v59 = v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v60 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v21);
  uint64_t v22 = sub_2536D3970();
  uint64_t v23 = type metadata accessor for Candidate(v22);
  uint64_t v24 = sub_25346CB34(v23);
  MEMORY[0x270FA5388](v24);
  sub_2534F8600();
  MEMORY[0x270FA5388](v25);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v26);
  uint64_t v54 = (uint64_t)&v54 - v27;
  sub_2534B324C();
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  sub_2539624BC(v29, v30, v31, v32, v33, v34, v35, v36, v54);
  sub_253962284(MEMORY[0x263F8EE78]);
  sub_2539E7328();
  uint64_t v37 = a10;
  uint64_t v55 = v13;
  uint64_t v56 = v12;
  if (v15)
  {
    sub_253962370();
    uint64_t v38 = 0;
    while (v58 != v38)
    {
      uint64_t v39 = sub_253962554();
      sub_253A72E10(v39, v14);
      sub_253A72E10(v14, v11);
      sub_253A73604();
      TranscriptProtoCandidate.init(handwritten:)();
      if (v10)
      {
        swift_release();
        swift_bridgeObjectRelease();
        sub_253A72E68();
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
      sub_253A72E68();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253A73B5C();
        uint64_t v37 = a10;
      }
      unint64_t v41 = *((void *)v37 + 2);
      unint64_t v40 = *((void *)v37 + 3);
      if (v41 >= v40 >> 1)
      {
        sub_25396226C(v40);
        sub_2539E7328();
        uint64_t v37 = a10;
      }
      ++v38;
      *((void *)v37 + 2) = v41 + 1;
      sub_25394D7F8();
      sub_253A72EB8(v42, v43);
      if (v15 == v38) {
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
LABEL_12:
  sub_253962548();
  if (!v45)
  {
    uint64_t v47 = v54;
    uint64_t v46 = v55;
    while (v15 < v44)
    {
      unint64_t v48 = sub_2539622A8();
      uint64_t v49 = type metadata accessor for Candidate;
      uint64_t v50 = v57;
      sub_253A72E10(v48, v57);
      sub_253A72E10(v50, v47);
      sub_253A74078();
      TranscriptProtoCandidate.init(handwritten:)();
      sub_253A72E68();
      if (v10)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_26;
      }
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73B5C();
        uint64_t v49 = a10;
      }
      unint64_t v52 = *((void *)v49 + 2);
      unint64_t v51 = *((void *)v49 + 3);
      if (v52 >= v51 >> 1)
      {
        sub_253962194(v51);
        sub_2539E7328();
        uint64_t v49 = a10;
      }
      ++v15;
      *((void *)v49 + 2) = v52 + 1;
      sub_25394D7F8();
      sub_253A72EB8(v46, v53);
      sub_253962548();
      if (v45) {
        goto LABEL_14;
      }
    }
LABEL_28:
    __break(1u);
    return;
  }
LABEL_14:
  swift_bridgeObjectRelease_n();
LABEL_26:
  sub_253578800();
  sub_2534847C8();
}

void sub_253A6811C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  sub_2534847F8();
  uint64_t v283 = v10;
  uint64_t v13 = v12;
  uint64_t v282 = sub_253462A5C(&qword_269CDCAA8);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v14);
  sub_2534659D8();
  unint64_t v262 = v15;
  sub_2534B324C();
  MEMORY[0x270FA5388](v16);
  uint64_t v279 = (uint64_t)&v222 - v17;
  sub_2534B324C();
  MEMORY[0x270FA5388](v18);
  sub_2534B3318();
  uint64_t v261 = v19;
  sub_2534B324C();
  MEMORY[0x270FA5388](v20);
  sub_2534B3318();
  uint64_t v249 = v21;
  sub_2534B324C();
  MEMORY[0x270FA5388](v22);
  uint64_t v268 = (char *)&v222 - v23;
  sub_2534B324C();
  MEMORY[0x270FA5388](v24);
  sub_2534B3318();
  uint64_t v255 = v25;
  sub_2534B324C();
  MEMORY[0x270FA5388](v26);
  sub_2534B35DC();
  sub_2534F8208(v27);
  uint64_t v28 = sub_253B08E50();
  sub_253465998();
  uint64_t v30 = v29;
  MEMORY[0x270FA5388](v31);
  sub_2534659D8();
  uint64_t v276 = v32;
  sub_2534B324C();
  MEMORY[0x270FA5388](v33);
  sub_2534B3318();
  uint64_t v260 = v34;
  sub_2534B324C();
  MEMORY[0x270FA5388](v35);
  uint64_t v275 = (char *)&v222 - v36;
  sub_2534B324C();
  MEMORY[0x270FA5388](v37);
  sub_25351C988();
  MEMORY[0x270FA5388](v38);
  sub_2534B3318();
  uint64_t v253 = v39;
  sub_2534B324C();
  MEMORY[0x270FA5388](v40);
  sub_2534B3318();
  uint64_t v247 = v41;
  sub_2534B324C();
  MEMORY[0x270FA5388](v42);
  sub_2534B3318();
  uint64_t v252 = v43;
  sub_2534B324C();
  MEMORY[0x270FA5388](v44);
  sub_2534F8208((uint64_t)&v222 - v45);
  uint64_t v46 = sub_253B09120();
  sub_253465998();
  uint64_t v48 = v47;
  MEMORY[0x270FA5388](v49);
  sub_2534659D8();
  uint64_t v242 = v50;
  sub_2534B324C();
  MEMORY[0x270FA5388](v51);
  sub_2534B35DC();
  sub_2534D8F5C(v52);
  uint64_t v53 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v54 = sub_25346CB4C(v53);
  MEMORY[0x270FA5388](v54);
  sub_2534659D8();
  uint64_t v245 = v55;
  sub_2534B324C();
  MEMORY[0x270FA5388](v56);
  sub_2534B35DC();
  uint64_t v236 = v57;
  uint64_t v58 = sub_253483660();
  uint64_t v235 = type metadata accessor for TranscriptProtoVariableSetter(v58);
  sub_253465998();
  uint64_t v234 = v59;
  MEMORY[0x270FA5388](v60);
  sub_2534659D8();
  uint64_t v231 = v61;
  sub_2534B324C();
  MEMORY[0x270FA5388](v62);
  sub_2534B3318();
  uint64_t v230 = v63;
  sub_2534B324C();
  MEMORY[0x270FA5388](v64);
  sub_2534B3318();
  uint64_t v240 = v65;
  sub_2534B324C();
  MEMORY[0x270FA5388](v66);
  sub_2534B3318();
  uint64_t v233 = v67;
  sub_2534B324C();
  MEMORY[0x270FA5388](v68);
  sub_2534B3318();
  uint64_t v225 = v69;
  sub_2534B324C();
  MEMORY[0x270FA5388](v70);
  sub_2534B3318();
  uint64_t v224 = v71;
  sub_2534B324C();
  MEMORY[0x270FA5388](v72);
  sub_2534B35DC();
  uint64_t v226 = v73;
  uint64_t v74 = sub_253483660();
  uint64_t v244 = type metadata accessor for VariableSetter(v74);
  sub_253465998();
  uint64_t v76 = v75;
  MEMORY[0x270FA5388](v77);
  sub_2534659D8();
  uint64_t v265 = v78;
  sub_2534B324C();
  MEMORY[0x270FA5388](v79);
  sub_2534B3318();
  uint64_t v246 = v80;
  sub_2534B324C();
  MEMORY[0x270FA5388](v81);
  sub_2534B3318();
  uint64_t v237 = (uint64_t *)v82;
  sub_2534B324C();
  MEMORY[0x270FA5388](v83);
  sub_2534B35DC();
  sub_2534D8F5C(v84);
  unint64_t v85 = *(void *)(v13 + 16);
  sub_2539622E0(MEMORY[0x263F8EE78]);
  sub_2539E738C();
  uint64_t v272 = v28;
  uint64_t v267 = (uint64_t *)v30;
  uint64_t v281 = v46;
  uint64_t v266 = v48;
  if (!v85)
  {
    uint64_t v286 = a10;
    uint64_t v157 = v13;
    swift_bridgeObjectRetain();
    goto LABEL_52;
  }
  sub_2539625D8();
  uint64_t v238 = v86;
  uint64_t v280 = (uint64_t (**)(uint64_t))(v48 + 16);
  uint64_t v87 = *(uint64_t **)(v13 + 16);
  uint64_t v271 = v30 + 32;
  uint64_t v258 = v30 + 16;
  uint64_t v250 = v30 + 40;
  uint64_t v256 = v30 + 8;
  uint64_t v88 = swift_bridgeObjectRetain();
  uint64_t v89 = 0;
  uint64_t v257 = v11;
  uint64_t v243 = v88;
  uint64_t v227 = v76;
  unsigned int v232 = (uint64_t *)v85;
  v263 = (void (**)(void))(v48 + 8);
  int v223 = v87;
LABEL_3:
  if (v89 == v87) {
    goto LABEL_112;
  }
  uint64_t v90 = v238 + *(void *)(v76 + 72) * (void)v89;
  uint64_t v91 = v246;
  uint64_t v92 = v89;
  sub_253A72E10(v90, v246);
  uint64_t v93 = v265;
  sub_253A72E10(v91, (uint64_t)v265);
  uint64_t v286 = *v280;
  sub_2534AF234();
  v94();
  uint64_t v95 = v283;
  sub_253B09100();
  uint64_t v283 = v95;
  if (v95)
  {
    sub_2534659CC();
    v220();
    sub_253A72E68();
    goto LABEL_50;
  }
  uint64_t v96 = v48;
  uint64_t v97 = (uint64_t *)((char *)v92 + 1);
  uint64_t v228 = v97;
  uint64_t v259 = *v263;
  sub_253A736A4();
  v98();
  sub_253A73960();
  char v99 = v93;
  uint64_t v100 = v245;
  uint64_t v270 = *v101;
  sub_25347FA84();
  v102();
  sub_253A7388C(v100, 0);
  uint64_t v103 = *v99;
  swift_bridgeObjectRetain();
  uint64_t v104 = sub_253B095A0();
  sub_25397174C(v103, v289);
  uint64_t v264 = v289[0];
  uint64_t v251 = v289[1];
  sub_253A73F68();
  uint64_t v254 = v105;
  uint64_t v241 = v103;
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v278 = v104;
    if (v95)
    {
      sub_2534DA484();
      uint64_t v273 = v95;
      goto LABEL_25;
    }
    sub_253A7410C();
    if (__OFADD__(v106, 1)) {
      goto LABEL_108;
    }
    sub_253A739BC();
    if (v107 == v108) {
      goto LABEL_43;
    }
    sub_253A73E14();
    if (!v109)
    {
      sub_253962654();
      if (v107 == v108) {
        goto LABEL_43;
      }
      sub_253962660();
      if (!v110)
      {
        sub_253962654();
        if (v107 == v108) {
          goto LABEL_43;
        }
        sub_253962660();
        if (!v111)
        {
          sub_253962654();
          if (v107 == v108) {
            goto LABEL_43;
          }
          sub_253962660();
          if (!v112)
          {
            sub_253962654();
            if (v107 == v108) {
              goto LABEL_43;
            }
            sub_253962660();
            if (!v113)
            {
              sub_253A739BC();
              if (v107 == v108) {
                goto LABEL_43;
              }
              sub_253A73E14();
              if (!v147)
              {
                sub_253A7410C();
                while (1)
                {
                  sub_253A739BC();
                  if (v107 == v108) {
                    break;
                  }
                  sub_253A73E14();
                  if (v148) {
                    goto LABEL_24;
                  }
                }
LABEL_43:
                swift_release();
                swift_bridgeObjectRelease();
                sub_253A73528();
                sub_253472458(v103, &qword_269CDCBC8);
                sub_253A738E4(v245);
                *uint64_t v97 = v278;
                uint64_t v149 = (uint64_t)v97;
                uint64_t v150 = v231;
                sub_253A72EB8(v149, v231);
                uint64_t v151 = type metadata accessor for VariableSetter;
                sub_253A72E68();
                uint64_t v152 = v150;
                uint64_t v153 = v230;
                sub_253A7368C(v152);
                sub_253A72EB8(v153, v240);
                sub_253A72E68();
                if ((sub_2539621FC() & 1) == 0)
                {
                  sub_253A73C34();
                  uint64_t v151 = a10;
                }
                uint64_t v48 = v96;
                sub_253A736EC();
                if (v154)
                {
                  sub_253A73A44();
                  uint64_t v151 = a10;
                }
                *((void *)v151 + 2) = type metadata accessor for TranscriptProtoVariableSetter;
                sub_2535786F4();
                uint64_t v286 = v151;
                sub_253A72EB8(v240, (uint64_t)v151 + v155 + *(void *)(v156 + 72) * v153);
                unint64_t v85 = (unint64_t)v232;
                uint64_t v89 = v228;
                uint64_t v157 = v243;
                uint64_t v76 = v227;
                uint64_t v87 = v223;
                if (v228 == v232)
                {
LABEL_52:
                  uint64_t v158 = *(uint64_t **)(v157 + 16);
                  if ((uint64_t *)v85 == v158) {
                    goto LABEL_53;
                  }
                  v285 = (void (**)(void))(v48 + 16);
                  uint64_t v269 = v48 + 8;
                  uint64_t v274 = (uint64_t *)(v30 + 32);
                  uint64_t v264 = v30 + 16;
                  uint64_t v260 = v30 + 40;
                  v263 = (void (**)(void))(v30 + 8);
                  uint64_t v243 = v157;
                  uint64_t v227 = v76;
                  while (1)
                  {
                    if (v85 >= (unint64_t)v158) {
                      goto LABEL_113;
                    }
                    sub_253A73E64();
                    uint64_t v161 = v239;
                    sub_253A72E10(v159 + v160 * v85, v239);
                    uint64_t v162 = v237;
                    sub_253A72E10(v161, (uint64_t)v237);
                    uint64_t v163 = v229;
                    uint64_t v284 = *v285;
                    sub_2534AF234();
                    v164();
                    uint64_t v165 = v283;
                    sub_253B09100();
                    uint64_t v283 = v165;
                    if (v165)
                    {
                      sub_2534659CC();
                      v221();
                      sub_253A72E68();
LABEL_102:
                      sub_253A72E68();
                      sub_253A739A4();
                      swift_bridgeObjectRelease();
                      swift_release();
LABEL_103:
                      sub_2534847C8();
                      return;
                    }
                    unsigned int v232 = (uint64_t *)(v85 + 1);
                    sub_253A7410C();
                    uint64_t v265 = *v166;
                    ((void (*)(uint64_t, uint64_t))v265)(v163, v46);
                    uint64_t v167 = v236;
                    uint64_t v273 = *v274;
                    sub_25347FA84();
                    v168();
                    sub_253A7388C(v167, 0);
                    uint64_t v169 = *v162;
                    swift_bridgeObjectRetain();
                    uint64_t v170 = sub_253B095A0();
                    sub_25397174C(v169, v288);
                    uint64_t v270 = v288[0];
                    uint64_t v261 = v288[1];
                    uint64_t v271 = v288[3];
                    unint64_t v171 = (char *)v288[4];
                    unint64_t v262 = (unint64_t)(v288[2] + 64) >> 6;
                    uint64_t v259 = (void (*)(void))v169;
                    swift_bridgeObjectRetain();
                    while (1)
                    {
                      uint64_t v280 = (uint64_t (**)(uint64_t))v170;
                      if (v171)
                      {
                        sub_2534DA484();
                        uint64_t v275 = v171;
                        goto LABEL_77;
                      }
                      sub_253A73960();
                      if (__OFADD__(v172, 1)) {
                        goto LABEL_111;
                      }
                      sub_253A73598();
                      if (v107 == v108) {
                        goto LABEL_95;
                      }
                      sub_253A73788();
                      if (!v173)
                      {
                        sub_253A734B0();
                        if (v107 == v108) {
                          goto LABEL_95;
                        }
                        sub_253A73488();
                        if (!v174)
                        {
                          sub_253A734B0();
                          if (v107 == v108) {
                            goto LABEL_95;
                          }
                          sub_253A73488();
                          if (!v175)
                          {
                            sub_253A734B0();
                            if (v107 == v108) {
                              goto LABEL_95;
                            }
                            sub_253A73488();
                            if (!v176)
                            {
                              sub_253A734B0();
                              if (v107 == v108) {
                                goto LABEL_95;
                              }
                              sub_253A73488();
                              if (!v177)
                              {
                                sub_253A73598();
                                if (v107 == v108) {
                                  goto LABEL_95;
                                }
                                sub_253A73788();
                                if (!v209) {
                                  break;
                                }
                              }
                            }
                          }
                        }
                      }
LABEL_76:
                      sub_2534D9174();
                      uint64_t v275 = v178;
                      uint64_t v271 = v179;
LABEL_77:
                      uint64_t v277 = sub_253A73988();
                      sub_2534727C4();
                      uint64_t v181 = *(void (**)(void))(v180 + 16);
                      uint64_t v286 = (uint64_t (*)(uint64_t))(v180 + 16);
                      uint64_t v182 = v248;
                      sub_2534AF234();
                      v181();
                      uint64_t v278 = (uint64_t)v181;
                      uint64_t v183 = v284;
                      sub_253535668();
                      v183();
                      sub_253961F14(v182, v255, &qword_269CDCAA8);
                      sub_253578EEC();
                      sub_2534AF234();
                      v181();
                      sub_253535668();
                      v183();
                      LODWORD(v276) = sub_253B059C0();
                      sub_253578828();
                      uint64_t v279 = v184;
                      sub_2534D9A08();
                      v185();
                      unint64_t v186 = (void (*)(void))v265;
                      sub_2534D97B4();
                      v186();
                      sub_253A73DDC();
                      sub_2534AF234();
                      v187();
                      sub_2534D99FC();
                      sub_2534AF234();
                      v188();
                      uint64_t v189 = v283;
                      sub_253B09100();
                      uint64_t v283 = v189;
                      sub_253578EEC();
                      if (v189)
                      {
                        sub_2534D97B4();
                        v186();
                        sub_2534D9A08();
                        v217();
                        uint64_t v218 = sub_253A74014();
                        sub_253472458(v218, v219);
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_release();
                        sub_253A72E68();
                        sub_253472458(v236, &qword_269CDCBC8);
                        goto LABEL_102;
                      }
                      sub_2534D97B4();
                      v186();
                      sub_2534D9B10();
                      sub_25347FA84();
                      v190();
                      sub_2534D9A08();
                      v191();
                      sub_2534DA678();
                      sub_2534B3428();
                      v192();
                      uint64_t v193 = v280;
                      swift_isUniquelyReferenced_nonNull_native();
                      uint64_t v287 = (uint64_t)v193;
                      unsigned int v194 = v276;
                      unint64_t v195 = sub_25396E10C(v276);
                      if (__OFADD__(v193[2], (v196 & 1) == 0)) {
                        goto LABEL_109;
                      }
                      unint64_t v197 = v195;
                      char v198 = v196;
                      sub_253462A5C(&qword_269CE8680);
                      char v199 = sub_253B0A190();
                      uint64_t v162 = v267;
                      uint64_t v46 = v281;
                      if (v199)
                      {
                        unint64_t v200 = sub_25396E10C(v194);
                        if ((v198 & 1) != (v201 & 1)) {
                          goto LABEL_114;
                        }
                        unint64_t v197 = v200;
                      }
                      uint64_t v169 = v287;
                      if (v198)
                      {
                        sub_253A73798();
                        v202();
                      }
                      else
                      {
                        sub_253A73774(v287 + 8 * (v197 >> 6));
                        *(_DWORD *)(v203 + 4 * v197) = v194;
                        sub_25347FA84();
                        v204();
                        uint64_t v205 = *(void *)(v169 + 16);
                        BOOL v108 = __OFADD__(v205, 1);
                        uint64_t v206 = v205 + 1;
                        if (v108) {
                          goto LABEL_110;
                        }
                        *(void *)(v169 + 16) = v206;
                      }
                      uint64_t v170 = v287;
                      swift_bridgeObjectRelease();
                      sub_2534DA678();
                      sub_2534659CC();
                      v207();
                      uint64_t v208 = sub_253A74014();
                      sub_253472458(v208, &qword_269CDCAA8);
                      unint64_t v171 = v275;
                    }
                    sub_253A73960();
                    while (1)
                    {
                      sub_253A73598();
                      if (v107 == v108) {
                        break;
                      }
                      sub_253A74000();
                      if (v210) {
                        goto LABEL_76;
                      }
                    }
LABEL_95:
                    swift_release();
                    swift_bridgeObjectRelease();
                    sub_253A73528();
                    sub_253472458(v169, &qword_269CDCBC8);
                    sub_253A738E4(v236);
                    uint64_t *v162 = v170;
                    uint64_t v211 = (uint64_t)v162;
                    uint64_t v212 = v225;
                    sub_253A72EB8(v211, v225);
                    uint64_t v213 = type metadata accessor for VariableSetter;
                    sub_253A72E68();
                    uint64_t v214 = v212;
                    uint64_t v215 = v224;
                    sub_253A7368C(v214);
                    sub_253A72EB8(v215, v226);
                    sub_253A72E68();
                    if ((sub_2539621FC() & 1) == 0)
                    {
                      sub_253A73C34();
                      uint64_t v213 = a10;
                    }
                    sub_253A736EC();
                    if (v154)
                    {
                      sub_253A73A44();
                      uint64_t v213 = a10;
                    }
                    *((void *)v213 + 2) = type metadata accessor for TranscriptProtoVariableSetter;
                    sub_253A73450();
                    sub_253A72EB8(v226, v216);
                    uint64_t v158 = *(uint64_t **)(v243 + 16);
                    unint64_t v85 = (unint64_t)v232;
                    if (v232 == v158)
                    {
LABEL_53:
                      swift_bridgeObjectRelease_n();
                      goto LABEL_103;
                    }
                  }
                }
                goto LABEL_3;
              }
            }
          }
        }
      }
    }
LABEL_24:
    sub_2534D9174();
    uint64_t v273 = v114;
    uint64_t v269 = v115;
LABEL_25:
    sub_253A73988();
    sub_2534727C4();
    uint64_t v117 = v116;
    uint64_t v284 = *(void (**)(void))(v118 + 16);
    v285 = (void (**)(void))(v118 + 16);
    uint64_t v119 = v261;
    sub_2534AF234();
    v120();
    uint64_t v46 = v281;
    uint64_t v121 = v282;
    sub_253A735A8();
    v122();
    uint64_t v123 = v279;
    sub_253961F14(v119, v279, &qword_269CDCAA8);
    uint64_t v277 = v123 + *(int *)(v121 + 48);
    sub_2534D99FC();
    sub_2534AF234();
    v124();
    sub_253A735A8();
    v125();
    LODWORD(v274) = sub_253B059C0();
    uint64_t v126 = *(void (**)(void))(v117 + 8);
    sub_2534DA4BC();
    v126();
    uint64_t v127 = v259;
    sub_25351C3E8();
    v127();
    sub_253A73DDC();
    sub_2534AF234();
    v128();
    sub_2534AF234();
    v129();
    uint64_t v130 = v283;
    sub_253B09100();
    uint64_t v283 = v130;
    if (v130)
    {
      sub_25351C3E8();
      v127();
      sub_2534DA4BC();
      v126();
      sub_253472458(v279, &qword_269CDCAA8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_253A72E68();
      sub_253472458(v245, &qword_269CDCBC8);
LABEL_50:
      sub_253A73ED0();
      swift_release();
      sub_253A72E68();
      swift_bridgeObjectRelease();
      goto LABEL_103;
    }
    sub_25351C3E8();
    v127();
    sub_2534D99FC();
    sub_25347FA84();
    v131();
    sub_2534DA4BC();
    v126();
    sub_2534DA678();
    sub_2534B3428();
    v132();
    uint64_t v133 = v278;
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v287 = v133;
    unint64_t v134 = v274;
    sub_25396E10C(v274);
    sub_253A73F9C();
    if (v108) {
      break;
    }
    unint64_t v137 = v135;
    uint64_t v30 = v136;
    sub_253462A5C(&qword_269CE8680);
    char v138 = sub_253B0A190();
    uint64_t v96 = v266;
    uint64_t v97 = (uint64_t *)v134;
    if (v138)
    {
      unint64_t v139 = sub_25396E10C(v134);
      if ((v30 & 1) != (v140 & 1)) {
        goto LABEL_114;
      }
      unint64_t v137 = v139;
    }
    uint64_t v103 = v287;
    if (v30)
    {
      sub_253A73DB4();
      sub_253A73798();
      v141();
    }
    else
    {
      sub_253A73774(v287 + 8 * (v137 >> 6));
      *(_DWORD *)(v142 + 4 * v137) = v134;
      sub_253A73DB4();
      sub_25347FA84();
      v143();
      uint64_t v144 = *(void *)(v103 + 16);
      BOOL v108 = __OFADD__(v144, 1);
      uint64_t v145 = v144 + 1;
      if (v108) {
        goto LABEL_107;
      }
      *(void *)(v103 + 16) = v145;
    }
    uint64_t v104 = v287;
    swift_bridgeObjectRelease();
    sub_2534DA678();
    sub_2534659CC();
    v146();
    sub_253472458(v279, &qword_269CDCAA8);
    uint64_t v95 = v273;
  }
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  sub_253B0A550();
  __break(1u);
}

void sub_253A697F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  sub_2534847F8();
  uint64_t v16 = v11;
  sub_2534D9690();
  uint64_t v146 = sub_253B07AB0();
  sub_253465998();
  uint64_t v139 = v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v136 = (char *)&v121 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v20);
  sub_2534B35DC();
  sub_2534D8F5C(v21);
  uint64_t v22 = sub_253462A5C(&qword_269CE21A0);
  uint64_t v23 = sub_25346CB4C(v22);
  MEMORY[0x270FA5388](v23);
  unint64_t v135 = (char *)&v121 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v25);
  uint64_t v145 = sub_253962E98((uint64_t)&v121 - v26);
  sub_253465998();
  uint64_t v28 = v27;
  MEMORY[0x270FA5388](v29);
  sub_25347FA68(v30, v121);
  uint64_t v31 = sub_253462A5C(&qword_26B249528);
  uint64_t v32 = sub_25346CB4C(v31);
  MEMORY[0x270FA5388](v32);
  uint64_t v147 = (char *)&v121 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v34);
  uint64_t v35 = sub_253971BBC();
  type metadata accessor for TranscriptProtoRetrievedContextStatement(v35);
  sub_253465998();
  uint64_t v142 = v37;
  uint64_t v143 = v36;
  MEMORY[0x270FA5388](v36);
  uint64_t v133 = (uint64_t)&v121 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v39);
  uint64_t v132 = (uint64_t)&v121 - v40;
  sub_2534B324C();
  MEMORY[0x270FA5388](v41);
  sub_2534B3318();
  uint64_t v148 = v42;
  sub_2534B324C();
  MEMORY[0x270FA5388](v43);
  uint64_t v141 = (char *)&v121 - v44;
  sub_2534B324C();
  MEMORY[0x270FA5388](v45);
  sub_2534B3318();
  uint64_t v123 = v46;
  sub_2534B324C();
  MEMORY[0x270FA5388](v47);
  uint64_t v122 = (char *)&v121 - v48;
  sub_2534B324C();
  MEMORY[0x270FA5388](v49);
  uint64_t v137 = (uint64_t)&v121 - v50;
  uint64_t v51 = sub_253483660();
  uint64_t v144 = type metadata accessor for RetrievedContextStatement(v51);
  sub_253465998();
  uint64_t v53 = v52;
  MEMORY[0x270FA5388](v54);
  unint64_t v134 = (char *)&v121 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v56);
  char v138 = (char *)&v121 - v57;
  sub_2534B324C();
  MEMORY[0x270FA5388](v58);
  sub_25351C988();
  MEMORY[0x270FA5388](v59);
  sub_253A74180();
  sub_2539622E0(MEMORY[0x263F8EE78]);
  sub_2539E74B8();
  uint64_t v127 = v10;
  uint64_t v140 = v53;
  unint64_t v149 = v14;
  uint64_t v126 = v12;
  uint64_t v125 = v13;
  uint64_t v124 = v15;
  uint64_t v121 = v28;
  if (v14)
  {
    sub_253A73E30();
    uint64_t v130 = v60;
    int v131 = v61;
    sub_253A73924(v28 + 16);
    uint64_t v129 = v28 + 8;
    uint64_t v128 = v139 + 16;
    swift_bridgeObjectRetain();
    uint64_t v62 = 0;
    uint64_t v63 = (uint64_t)v147;
    uint64_t v64 = (uint64_t)v138;
    while (v131 != v62)
    {
      uint64_t v65 = *(void *)(v53 + 72);
      uint64_t v147 = v62;
      sub_253A72E10(v130 + v65 * (void)v62, v64);
      sub_253A74140();
      sub_2534DA678();
      sub_2534B3428();
      v66();
      uint64_t v67 = sub_253B059C0();
      sub_253B059A0();
      sub_253A740A4();
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_DWORD *)uint64_t v63 = v67;
      *(void *)(v63 + 8) = v16;
      *(void *)(v63 + 16) = v10;
      sub_2534659CC();
      v68();
      sub_253A739CC();
      sub_2534B3428();
      v69();
      uint64_t v70 = sub_253A74064();
      ContextProtoRetrievedContext.init(context:)(v70, v71, v72, v73, v74, v75, v76, v77, v121, (int)v122, SWORD2(v122), SBYTE6(v122), HIBYTE(v122));
      uint64_t v16 = v11;
      if (v11)
      {
        sub_253A72E68();
        sub_253472458(v63, &qword_26B249528);
        sub_253A739A4();
        swift_release();
        sub_253A72E68();
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      uint64_t v78 = type metadata accessor for ContextProtoRetrievedContext(0);
      sub_253A732D8(v78);
      uint64_t v79 = sub_253A3D03C();
      sub_253961BF0(v79, v80, &qword_26B249528);
      uint64_t v81 = sub_2534D9A78();
      sub_253961BF0(v81, v82, &qword_269CE21A0);
      uint64_t v10 = type metadata accessor for TranscriptProtoRetrievedContextStatement;
      uint64_t v83 = v133;
      sub_253A72EB8(v64, v133);
      uint64_t v84 = type metadata accessor for RetrievedContextStatement;
      sub_253A72E68();
      uint64_t v85 = v83;
      uint64_t v86 = v132;
      sub_253A72EB8(v85, v132);
      sub_253A72EB8(v86, v148);
      uint64_t v64 = (uint64_t)v138;
      sub_253A72E68();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73D78();
        uint64_t v84 = a10;
      }
      unint64_t v87 = v149;
      uint64_t v88 = v147;
      sub_253A7367C();
      if (v89)
      {
        sub_253A73AD4();
        uint64_t v84 = a10;
      }
      uint64_t v62 = v88 + 1;
      *((void *)v84 + 2) = v67;
      sub_253A73110();
      sub_253A72EB8(v148, v90);
      uint64_t v53 = v140;
      if ((char *)v87 == v62) {
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
  sub_253962DB4();
  unint64_t v87 = v149;
LABEL_12:
  uint64_t v91 = *((void *)v127 + 2);
  uint64_t v148 = v16;
  if (v87 != v91)
  {
    sub_253A738FC();
    uint64_t v93 = v125;
    uint64_t v94 = v124;
    while (v87 < v92)
    {
      uint64_t v95 = sub_253A737A8();
      sub_253A72E10(v95, v93);
      sub_253A72E10(v93, v94);
      sub_2534B3428();
      v96();
      uint64_t v97 = sub_253B059C0();
      uint64_t v98 = sub_253B059A0();
      uint64_t v100 = v99;
      uint64_t v101 = type metadata accessor for TranscriptProtoStatementID(0);
      uint64_t v102 = v126;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_DWORD *)uint64_t v102 = v97;
      *(void *)(v102 + 8) = v98;
      *(void *)(v102 + 16) = v100;
      sub_2534659CC();
      v103();
      sub_253A7371C();
      sub_2534B3428();
      v104();
      uint64_t v105 = sub_253A740C4();
      ContextProtoRetrievedContext.init(context:)(v105, v106, v107, v108, v109, v110, v111, v112, v121, (int)v122, SWORD2(v122), SBYTE6(v122), HIBYTE(v122));
      uint64_t v148 = v11;
      if (v11)
      {
        sub_253A72E68();
        sub_253472458(v102, &qword_26B249528);
        sub_253A73F38();
        sub_253A73ED0();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_25;
      }
      uint64_t v113 = type metadata accessor for ContextProtoRetrievedContext(0);
      sub_253A73350(v113);
      uint64_t v114 = sub_253A3D03C();
      sub_253961BF0(v114, v115, &qword_26B249528);
      uint64_t v116 = sub_2534D9A78();
      sub_253961BF0(v116, v117, &qword_269CE21A0);
      uint64_t v118 = type metadata accessor for TranscriptProtoRetrievedContextStatement;
      uint64_t v119 = v123;
      sub_253A72EB8(v98, v123);
      sub_253A72E68();
      sub_253A73EB4(v119, (uint64_t)&v150);
      sub_253A72EB8(v119, v137);
      sub_253A72E68();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73D78();
        uint64_t v118 = a10;
      }
      sub_253A73D9C();
      if (v89)
      {
        sub_253A73AD4();
        uint64_t v118 = a10;
      }
      unint64_t v87 = v101 + 1;
      *((void *)v118 + 2) = v97;
      sub_253A73450();
      sub_253A72EB8(v137, v120);
      unint64_t v92 = *(void *)(v102 + 16);
      if (v87 == v92) {
        goto LABEL_13;
      }
    }
LABEL_27:
    __break(1u);
    return;
  }
LABEL_13:
  sub_253A7382C();
LABEL_25:
  sub_253A73FF4();
  sub_2534847C8();
}

void sub_253A6A090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  uint64_t v13 = v10;
  uint64_t v14 = sub_253A74174();
  type metadata accessor for TranscriptProtoQueryResults(v14);
  sub_253465998();
  MEMORY[0x270FA5388](v15);
  sub_2535B39C8();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  sub_2536D533C(v17, v18, v19, v20, v21, v22, v23, v24, v59);
  unint64_t v25 = *(void *)(v11 + 16);
  sub_253962624(MEMORY[0x263F8EE78]);
  sub_2539E751C();
  uint64_t v62 = v11;
  if (v25)
  {
    uint64_t v26 = *(void *)(v11 + 16);
    swift_bridgeObjectRetain();
    uint64_t v27 = 0;
    while (v26 != v27)
    {
      uint64_t v28 = *(void *)(v62 + 8 * v27 + 32);
      swift_bridgeObjectRetain_n();
      uint64_t v10 = v13;
      sub_253A67D94(v28, v29, v30, v31, v32, v33, v34, v35, v60, v61);
      if (v13)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease_n();
        goto LABEL_21;
      }
      uint64_t v37 = v36;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      swift_bridgeObjectRelease();
      *uint64_t v12 = v37;
      unint64_t v39 = *(void *)(a10 + 16);
      unint64_t v38 = *(void *)(a10 + 24);
      if (v39 >= v38 >> 1)
      {
        sub_253962254(v38);
        sub_2539E751C();
      }
      ++v27;
      *(void *)(a10 + 16) = v39 + 1;
      sub_253A73DEC();
      sub_253A72EB8((uint64_t)v12, v40 + v41 * v39);
      if (v25 == v27) {
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
LABEL_10:
  uint64_t v42 = *(void *)(v62 + 16);
  if (v25 != v42)
  {
    uint64_t v43 = v61;
    while (v25 < *(void *)(v62 + 16))
    {
      swift_bridgeObjectRetain_n();
      uint64_t v44 = sub_25396239C();
      sub_253A67D94(v44, v45, v46, v47, v48, v49, v50, v51, v60, v61);
      if (v10)
      {
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
      uint64_t v53 = v52;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      swift_bridgeObjectRelease();
      *uint64_t v43 = v53;
      uint64_t v54 = (uint64_t)v43;
      unint64_t v56 = *(void *)(a10 + 16);
      unint64_t v55 = *(void *)(a10 + 24);
      if (v56 >= v55 >> 1)
      {
        sub_25396226C(v55);
        sub_2539E751C();
      }
      ++v25;
      *(void *)(a10 + 16) = v56 + 1;
      sub_253A73DEC();
      sub_253A72EB8(v54, v57 + v58 * v56);
      uint64_t v43 = (void *)v54;
      if (v42 == v25) {
        goto LABEL_11;
      }
    }
LABEL_23:
    __break(1u);
    return;
  }
LABEL_11:
  swift_bridgeObjectRelease_n();
LABEL_21:
  sub_253578800();
  sub_2534847C8();
}

uint64_t sub_253A6A320(uint64_t a1)
{
  uint64_t v2 = sub_253B08200();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v61 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v45 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v45 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v51 = (char *)&v45 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v62 = (char *)&v45 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v63 = (char *)&v45 - v16;
  unint64_t v17 = *(void *)(a1 + 16);
  uint64_t v64 = MEMORY[0x263F8EE78];
  sub_2539E7580(0, v17, 0);
  uint64_t v52 = a1;
  if (v17)
  {
    uint64_t v60 = *(void *)(a1 + 16);
    unint64_t v58 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v57 = v3 + 88;
    int v56 = *MEMORY[0x263F4E730];
    int v18 = *MEMORY[0x263F4E748];
    int v49 = *MEMORY[0x263F4E740];
    int v50 = v18;
    int v48 = *MEMORY[0x263F4E750];
    int v19 = *MEMORY[0x263F4E738];
    int v46 = *MEMORY[0x263F4E758];
    int v47 = v19;
    uint64_t v59 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v21 = 0;
    uint64_t v54 = v8;
    unint64_t v55 = v11;
    uint64_t v53 = v3;
    while (v60 != v21)
    {
      uint64_t v22 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
      v22(v11, v58 + *(void *)(v3 + 72) * v21, v2);
      v22(v8, (unint64_t)v11, v2);
      uint64_t v23 = v61;
      v22(v61, (unint64_t)v8, v2);
      int v24 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v23, v2);
      if (v24 == v56)
      {
        char v25 = 0;
      }
      else if (v24 == v50)
      {
        char v25 = 1;
      }
      else if (v24 == v49)
      {
        char v25 = 2;
      }
      else if (v24 == v48)
      {
        char v25 = 3;
      }
      else if (v24 == v47)
      {
        char v25 = 4;
      }
      else
      {
        if (v24 != v46)
        {
          sub_25394EA00();
          swift_allocError();
          *uint64_t v41 = 0;
          swift_willThrow();
          uint64_t v42 = *v59;
          (*v59)(v8, v2);
          v42(v61, v2);
          uint64_t v27 = v52;
          swift_bridgeObjectRelease();
          swift_release();
          v42(v11, v2);
          swift_bridgeObjectRelease();
          return v27;
        }
        char v25 = 5;
      }
      uint64_t v26 = *v59;
      (*v59)(v8, v2);
      v26(v11, v2);
      uint64_t v27 = v64;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_2539E7580(0, *(void *)(v27 + 16) + 1, 1);
        uint64_t v27 = v64;
      }
      uint64_t v3 = v53;
      unint64_t v29 = *(void *)(v27 + 16);
      unint64_t v28 = *(void *)(v27 + 24);
      if (v29 >= v28 >> 1)
      {
        uint64_t result = (uint64_t)sub_2539E7580((void *)(v28 > 1), v29 + 1, 1);
        uint64_t v27 = v64;
      }
      ++v21;
      *(void *)(v27 + 16) = v29 + 1;
      *(unsigned char *)(v27 + v29 + 32) = v25;
      uint64_t v8 = v54;
      uint64_t v11 = v55;
      if (v17 == v21) {
        goto LABEL_23;
      }
    }
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v27 = v64;
  swift_bridgeObjectRetain();
LABEL_23:
  uint64_t result = v52;
  unint64_t v30 = *(void *)(v52 + 16);
  if (v17 != v30)
  {
    uint64_t v61 = (char *)(v3 + 88);
    LODWORD(v60) = *MEMORY[0x263F4E730];
    LODWORD(v59) = *MEMORY[0x263F4E748];
    LODWORD(v58) = *MEMORY[0x263F4E740];
    LODWORD(v57) = *MEMORY[0x263F4E750];
    int v56 = *MEMORY[0x263F4E738];
    uint64_t v31 = (void (**)(char *, uint64_t))(v3 + 8);
    LODWORD(v55) = *MEMORY[0x263F4E758];
    while (v17 < v30)
    {
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
      uint64_t v33 = v63;
      v32(v63, result+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v17, v2);
      uint64_t v34 = v62;
      v32(v62, (unint64_t)v33, v2);
      uint64_t v35 = v51;
      v32(v51, (unint64_t)v34, v2);
      int v36 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v35, v2);
      if (v36 == v60)
      {
        char v37 = 0;
      }
      else if (v36 == v59)
      {
        char v37 = 1;
      }
      else if (v36 == v58)
      {
        char v37 = 2;
      }
      else if (v36 == v57)
      {
        char v37 = 3;
      }
      else if (v36 == v56)
      {
        char v37 = 4;
      }
      else
      {
        if (v36 != v55)
        {
          sub_25394EA00();
          swift_allocError();
          *uint64_t v43 = 0;
          swift_willThrow();
          uint64_t v44 = *v31;
          (*v31)(v62, v2);
          v44(v51, v2);
          v44(v63, v2);
          uint64_t v27 = v52;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          return v27;
        }
        char v37 = 5;
      }
      unint64_t v38 = *v31;
      (*v31)(v62, v2);
      v38(v63, v2);
      uint64_t v27 = v64;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2539E7580(0, *(void *)(v27 + 16) + 1, 1);
        uint64_t v27 = v64;
      }
      unint64_t v40 = *(void *)(v27 + 16);
      unint64_t v39 = *(void *)(v27 + 24);
      if (v40 >= v39 >> 1)
      {
        sub_2539E7580((void *)(v39 > 1), v40 + 1, 1);
        uint64_t v27 = v64;
      }
      ++v17;
      *(void *)(v27 + 16) = v40 + 1;
      *(unsigned char *)(v27 + v40 + 32) = v37;
      uint64_t result = v52;
      unint64_t v30 = *(void *)(v52 + 16);
      if (v17 == v30) {
        goto LABEL_24;
      }
    }
LABEL_49:
    __break(1u);
    return result;
  }
LABEL_24:
  swift_bridgeObjectRelease_n();
  return v27;
}

void sub_253A6AA78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  sub_2534847F8();
  uint64_t v16 = sub_2539626F0();
  uint64_t v17 = type metadata accessor for TranscriptProtoStatementResult(v16);
  uint64_t v18 = sub_25346CB34(v17);
  uint64_t v59 = v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v60 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v21);
  uint64_t v22 = sub_2536D3970();
  uint64_t v23 = type metadata accessor for StatementResult(v22);
  uint64_t v24 = sub_25346CB34(v23);
  MEMORY[0x270FA5388](v24);
  sub_2534F8600();
  MEMORY[0x270FA5388](v25);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v26);
  uint64_t v54 = (uint64_t)&v54 - v27;
  sub_2534B324C();
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  sub_2539624BC(v29, v30, v31, v32, v33, v34, v35, v36, v54);
  sub_253962284(MEMORY[0x263F8EE78]);
  sub_2539E7668();
  char v37 = a10;
  uint64_t v55 = v13;
  uint64_t v56 = v12;
  if (v15)
  {
    sub_253962370();
    uint64_t v38 = 0;
    while (v58 != v38)
    {
      uint64_t v39 = sub_253962554();
      sub_253A72E10(v39, v14);
      sub_253A72E10(v14, v11);
      sub_253A73604();
      TranscriptProtoStatementResult.init(handwritten:)();
      if (v10)
      {
        swift_release();
        swift_bridgeObjectRelease();
        sub_253A72E68();
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
      sub_253A72E68();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253A73CE8();
        char v37 = a10;
      }
      unint64_t v41 = *((void *)v37 + 2);
      unint64_t v40 = *((void *)v37 + 3);
      if (v41 >= v40 >> 1)
      {
        sub_25396226C(v40);
        sub_2539E7668();
        char v37 = a10;
      }
      ++v38;
      *((void *)v37 + 2) = v41 + 1;
      sub_25394D7F8();
      sub_253A72EB8(v42, v43);
      if (v15 == v38) {
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
LABEL_12:
  sub_253962548();
  if (!v45)
  {
    uint64_t v47 = v54;
    uint64_t v46 = v55;
    while (v15 < v44)
    {
      unint64_t v48 = sub_2539622A8();
      int v49 = type metadata accessor for StatementResult;
      uint64_t v50 = v57;
      sub_253A72E10(v48, v57);
      sub_253A72E10(v50, v47);
      sub_253A74078();
      TranscriptProtoStatementResult.init(handwritten:)();
      sub_253A72E68();
      if (v10)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_26;
      }
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73CE8();
        int v49 = a10;
      }
      unint64_t v52 = *((void *)v49 + 2);
      unint64_t v51 = *((void *)v49 + 3);
      if (v52 >= v51 >> 1)
      {
        sub_253962194(v51);
        sub_2539E7668();
        int v49 = a10;
      }
      ++v15;
      *((void *)v49 + 2) = v52 + 1;
      sub_25394D7F8();
      sub_253A72EB8(v46, v53);
      sub_253962548();
      if (v45) {
        goto LABEL_14;
      }
    }
LABEL_28:
    __break(1u);
    return;
  }
LABEL_14:
  swift_bridgeObjectRelease_n();
LABEL_26:
  sub_253578800();
  sub_2534847C8();
}

void sub_253A6AE00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  sub_2534847F8();
  uint64_t v16 = v11;
  sub_2534D9690();
  uint64_t v121 = sub_253B081D0();
  sub_253465998();
  uint64_t v113 = v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v110 = (char *)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v20);
  sub_2534D8F5C((uint64_t)&v99 - v21);
  uint64_t v22 = sub_253462A5C(&qword_269CE21B8);
  uint64_t v23 = sub_25346CB4C(v22);
  MEMORY[0x270FA5388](v23);
  uint64_t v109 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v25);
  uint64_t v120 = sub_253962E98((uint64_t)&v99 - v26);
  sub_253465998();
  uint64_t v28 = v27;
  MEMORY[0x270FA5388](v29);
  sub_25347FA68(v30, v99);
  uint64_t v31 = sub_253462A5C(&qword_26B249528);
  uint64_t v32 = sub_25346CB4C(v31);
  MEMORY[0x270FA5388](v32);
  uint64_t v122 = (char *)&v99 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v34);
  uint64_t v35 = sub_253971BBC();
  type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement(v35);
  sub_253465998();
  uint64_t v116 = v37;
  uint64_t v117 = v36;
  MEMORY[0x270FA5388](v36);
  uint64_t v123 = (uint64_t)&v99 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v39);
  uint64_t v115 = (char *)&v99 - v40;
  sub_2534B324C();
  MEMORY[0x270FA5388](v41);
  uint64_t v111 = (uint64_t)&v99 - v42;
  uint64_t v43 = sub_253483660();
  uint64_t v118 = type metadata accessor for DynamicEnumerationEntityStatement(v43);
  sub_253465998();
  uint64_t v45 = v44;
  MEMORY[0x270FA5388](v46);
  uint64_t v108 = (char *)&v99 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v48);
  uint64_t v112 = (char *)&v99 - v49;
  sub_2534B324C();
  MEMORY[0x270FA5388](v50);
  sub_25351C988();
  MEMORY[0x270FA5388](v51);
  sub_253A74180();
  sub_2539622E0(MEMORY[0x263F8EE78]);
  sub_2539E7794();
  uint64_t v103 = v10;
  uint64_t v114 = v45;
  unint64_t v124 = v14;
  uint64_t v102 = v12;
  uint64_t v101 = v13;
  uint64_t v100 = v15;
  uint64_t v99 = v28;
  if (v14)
  {
    sub_253A73E30();
    uint64_t v106 = v52;
    uint64_t v107 = v53;
    uint64_t v104 = v28 + 8;
    uint64_t v105 = v28 + 16;
    sub_253A73924(v113 + 16);
    swift_bridgeObjectRetain();
    uint64_t v54 = 0;
    uint64_t v55 = (uint64_t)v122;
    uint64_t v56 = (uint64_t)v112;
    while (v107 != v54)
    {
      uint64_t v57 = *(void *)(v45 + 72);
      uint64_t v122 = v54;
      sub_253A72E10(v106 + v57 * (void)v54, v56);
      sub_253A74140();
      uint64_t v58 = v119;
      sub_2534B3428();
      v60(v59);
      uint64_t v61 = sub_253B059C0();
      sub_253B059A0();
      sub_253A740A4();
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_DWORD *)uint64_t v55 = v61;
      *(void *)(v55 + 8) = v16;
      *(void *)(v55 + 16) = v10;
      sub_2534659CC();
      v63(v62);
      sub_253A739CC();
      sub_2534B3428();
      v65(v64);
      sub_253A74064();
      ContextProtoDynamicEnumerationEntity.init(handwritten:)();
      uint64_t v16 = v11;
      if (v11)
      {
        sub_253A72E68();
        sub_253472458(v55, &qword_26B249528);
        sub_253A739A4();
        swift_release();
        sub_253A72E68();
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      uint64_t v66 = type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
      sub_253A732D8(v66);
      uint64_t v67 = sub_253A3D03C();
      sub_253961BF0(v67, v68, &qword_26B249528);
      uint64_t v69 = sub_2534D9A78();
      sub_253961BF0(v69, v70, &qword_269CE21B8);
      sub_253A72EB8(v56, v123);
      uint64_t v10 = type metadata accessor for DynamicEnumerationEntityStatement;
      sub_253A72E68();
      uint64_t v56 = (uint64_t)v112;
      sub_253578D38();
      sub_253A72E68();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73BC8();
        uint64_t v58 = a10;
      }
      unint64_t v71 = v124;
      uint64_t v72 = v122;
      sub_253A7367C();
      if (v73)
      {
        sub_253A73A68();
        uint64_t v58 = a10;
      }
      uint64_t v54 = v72 + 1;
      *((void *)v58 + 2) = v61;
      sub_253A73110();
      sub_253A72EB8(v123, v74);
      uint64_t v45 = v114;
      if ((char *)v71 == v54) {
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
  sub_253962DB4();
  unint64_t v71 = v124;
LABEL_12:
  uint64_t v75 = *((void *)v103 + 2);
  uint64_t v123 = v16;
  if (v71 != v75)
  {
    sub_253A738FC();
    uint64_t v77 = v101;
    uint64_t v78 = v100;
    while (v71 < v76)
    {
      uint64_t v79 = sub_253A737A8();
      sub_253A72E10(v79, v77);
      sub_253A72E10(v77, v78);
      sub_2534B3428();
      v81(v80);
      uint64_t v82 = sub_253B059C0();
      uint64_t v83 = sub_253B059A0();
      uint64_t v85 = v84;
      uint64_t v86 = type metadata accessor for TranscriptProtoStatementID(0);
      uint64_t v87 = v102;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_DWORD *)uint64_t v87 = v82;
      *(void *)(v87 + 8) = v83;
      *(void *)(v87 + 16) = v85;
      sub_2534659CC();
      v89(v88);
      sub_253A7371C();
      sub_2534B3428();
      v91(v90);
      sub_253A740C4();
      ContextProtoDynamicEnumerationEntity.init(handwritten:)();
      uint64_t v123 = v11;
      if (v11)
      {
        sub_253A72E68();
        sub_253472458(v87, &qword_26B249528);
        sub_253A73F38();
        sub_253A73ED0();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_25;
      }
      uint64_t v92 = type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
      sub_253A73350(v92);
      uint64_t v93 = sub_253A3D03C();
      sub_253961BF0(v93, v94, &qword_26B249528);
      uint64_t v95 = sub_2534D9A78();
      sub_253961BF0(v95, v96, &qword_269CE21B8);
      sub_253A72EB8(v83, v111);
      uint64_t v97 = type metadata accessor for DynamicEnumerationEntityStatement;
      sub_253A72E68();
      sub_253A73F38();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73BC8();
        uint64_t v97 = a10;
      }
      sub_253A73D9C();
      if (v73)
      {
        sub_253A73A68();
        uint64_t v97 = a10;
      }
      unint64_t v71 = v86 + 1;
      *((void *)v97 + 2) = v82;
      sub_253A73450();
      sub_253A72EB8(v111, v98);
      unint64_t v76 = *(void *)(v87 + 16);
      if (v71 == v76) {
        goto LABEL_13;
      }
    }
LABEL_27:
    __break(1u);
    return;
  }
LABEL_13:
  sub_253A7382C();
LABEL_25:
  sub_253A73FF4();
  sub_2534847C8();
}

uint64_t sub_253A6B5B4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v41 = (uint64_t)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v38 = (uint64_t)&v30 - v6;
  uint64_t v7 = sub_253B081D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v37 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v30 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v33 = (char *)&v30 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v32 = (char *)&v30 - v16;
  unint64_t v17 = *(void *)(a1 + 16);
  uint64_t v42 = MEMORY[0x263F8EE78];
  sub_2539E77F8();
  uint64_t v18 = v42;
  uint64_t v40 = v8;
  uint64_t v31 = a1;
  if (v17)
  {
    uint64_t v19 = *(void *)(a1 + 16);
    uint64_t v35 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v36 = v19;
    uint64_t v34 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v21 = 0;
    while (v36 != v21)
    {
      uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      v22(v13, v35 + *(void *)(v8 + 72) * v21, v7);
      v22(v37, (uint64_t)v13, v7);
      ContextProtoDynamicEnumerationEntity.init(handwritten:)();
      if (v1)
      {
        swift_release();
        uint64_t v18 = v31;
        swift_bridgeObjectRelease();
        (*v34)(v13, v7);
        swift_bridgeObjectRelease();
        return v18;
      }
      (*v34)(v13, v7);
      uint64_t v18 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2539E77F8();
        uint64_t v18 = v42;
      }
      unint64_t v23 = *(void *)(v18 + 16);
      if (v23 >= *(void *)(v18 + 24) >> 1)
      {
        sub_2539E77F8();
        uint64_t v18 = v42;
      }
      ++v21;
      *(void *)(v18 + 16) = v23 + 1;
      uint64_t result = sub_253A72EB8(v41, v18+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v23);
      uint64_t v8 = v40;
      if (v17 == v21) {
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
  uint64_t result = swift_bridgeObjectRetain();
LABEL_12:
  uint64_t v24 = v31;
  unint64_t v25 = *(void *)(v31 + 16);
  if (v17 != v25)
  {
    uint64_t v26 = (void (**)(char *, uint64_t))(v8 + 8);
    while (v17 < v25)
    {
      uint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
      uint64_t v28 = v32;
      v27(v32, v24+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v17, v7);
      v27(v33, (unint64_t)v28, v7);
      ContextProtoDynamicEnumerationEntity.init(handwritten:)();
      if (v1)
      {
        (*v26)(v28, v7);
        swift_bridgeObjectRelease();
        uint64_t v18 = v42;
        swift_bridgeObjectRelease();
        swift_release();
        return v18;
      }
      (*v26)(v28, v7);
      uint64_t v18 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2539E77F8();
        uint64_t v18 = v42;
      }
      unint64_t v29 = *(void *)(v18 + 16);
      if (v29 >= *(void *)(v18 + 24) >> 1)
      {
        sub_2539E77F8();
        uint64_t v18 = v42;
      }
      ++v17;
      *(void *)(v18 + 16) = v29 + 1;
      uint64_t result = sub_253A72EB8(v38, v18+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v29);
      unint64_t v25 = *(void *)(v24 + 16);
      if (v17 == v25) {
        goto LABEL_13;
      }
    }
LABEL_27:
    __break(1u);
    return result;
  }
LABEL_13:
  swift_bridgeObjectRelease_n();
  return v18;
}

void sub_253A6BAF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
  sub_2534847F8();
  uint64_t v12 = sub_2534D9690();
  type metadata accessor for TranscriptProtoResponseParameter(v12);
  sub_253465998();
  uint64_t v83 = v14;
  uint64_t v84 = v13;
  MEMORY[0x270FA5388](v13);
  sub_253578D44();
  MEMORY[0x270FA5388](v15);
  uint64_t v79 = (uint64_t)v72 - v16;
  sub_253483660();
  uint64_t v82 = sub_253B069C0();
  sub_253465998();
  uint64_t v18 = v17;
  MEMORY[0x270FA5388](v19);
  uint64_t v78 = (char *)v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v21);
  uint64_t v80 = (char *)v72 - v22;
  sub_2534B324C();
  MEMORY[0x270FA5388](v23);
  v72[1] = (char *)v72 - v24;
  unint64_t v25 = *(void *)(v10 + 16);
  sub_253962E50(MEMORY[0x263F8EE78]);
  sub_2539E785C();
  uint64_t v73 = v10;
  uint64_t v26 = v18;
  uint64_t v81 = v18;
  if (v25)
  {
    sub_2539625D8();
    uint64_t v76 = v27;
    uint64_t v77 = v28;
    uint64_t v74 = (char *)(v18 + 8);
    uint64_t v75 = v18 + 16;
    swift_bridgeObjectRetain();
    uint64_t v29 = 0;
    uint64_t v91 = v25;
    while (v77 != v29)
    {
      uint64_t v30 = *(void (**)(void))(v26 + 16);
      sub_253A568D4();
      v30();
      sub_253A568D4();
      v30();
      uint64_t v31 = sub_253B06970();
      uint64_t v89 = v32;
      uint64_t v90 = v31;
      uint64_t v33 = sub_253B06990();
      uint64_t v87 = v34;
      uint64_t v88 = v33;
      uint64_t v35 = sub_253B06980();
      uint64_t v85 = v36;
      uint64_t v86 = v35;
      char v37 = sub_253B069B0();
      uint64_t v38 = sub_253B069A0();
      uint64_t v40 = v39;
      char v41 = sub_253B06950();
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      sub_253A73810();
      uint64_t v42 = v85;
      *(void *)(v11 + 32) = v86;
      *(void *)(v11 + 40) = v42;
      uint64_t v43 = v81;
      *(unsigned char *)(v11 + 48) = v37;
      *(void *)(v11 + 56) = v38;
      *(void *)(v11 + 64) = v40;
      *(unsigned char *)(v11 + 72) = v41;
      uint64_t v26 = v43;
      uint64_t v44 = *(void (**)(void))(v43 + 8);
      sub_2536D500C();
      uint64_t v45 = v74;
      sub_2534D9220();
      v44();
      sub_2534D9220();
      v44();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73B38();
        uint64_t v45 = a10;
      }
      unint64_t v47 = *((void *)v45 + 2);
      unint64_t v46 = *((void *)v45 + 3);
      if (v47 >= v46 >> 1)
      {
        sub_253962434(v46);
        sub_2539E785C();
        uint64_t v45 = a10;
      }
      ++v29;
      *((void *)v45 + 2) = v47 + 1;
      sub_253A73110();
      sub_253A72EB8(v11, v48);
      unint64_t v25 = v91;
      if (v91 == v29) {
        goto LABEL_11;
      }
    }
    __break(1u);
  }
  else
  {
    sub_253962DB4();
LABEL_11:
    unint64_t v49 = *(void *)(v73 + 16);
    if (v25 == v49)
    {
LABEL_12:
      swift_bridgeObjectRelease_n();
      sub_2534847C8();
      return;
    }
    uint64_t v85 = v26 + 16;
    uint64_t v78 = (char *)(v26 + 8);
    while (v25 < v49)
    {
      uint64_t v91 = v25;
      uint64_t v50 = *(void (**)(void))(v26 + 16);
      sub_253A735A8();
      v50();
      sub_2534D99FC();
      sub_253A735A8();
      v50();
      uint64_t v51 = sub_253B06970();
      uint64_t v89 = v52;
      uint64_t v90 = v51;
      uint64_t v53 = sub_253B06990();
      uint64_t v87 = v54;
      uint64_t v88 = v53;
      uint64_t v55 = sub_253B06980();
      uint64_t v86 = v56;
      char v57 = sub_253B069B0();
      uint64_t v58 = sub_253B069A0();
      uint64_t v60 = v59;
      char v61 = sub_253B06950();
      uint64_t v62 = v79;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      sub_253A73810();
      uint64_t v63 = v81;
      uint64_t v64 = v86;
      *(void *)(v62 + 32) = v55;
      *(void *)(v62 + 40) = v64;
      *(unsigned char *)(v62 + 48) = v57;
      *(void *)(v62 + 56) = v58;
      *(void *)(v62 + 64) = v60;
      *(unsigned char *)(v62 + 72) = v61;
      uint64_t v26 = v63;
      uint64_t v65 = *(void (**)(void))(v63 + 8);
      sub_253578828();
      uint64_t v66 = v78;
      sub_2534D9220();
      v65();
      sub_2534D9220();
      v65();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73B38();
        uint64_t v66 = a10;
      }
      sub_253A736EC();
      uint64_t v68 = v73;
      uint64_t v69 = v91;
      if (v70)
      {
        sub_253A7363C(v67);
        sub_2539E785C();
        uint64_t v66 = a10;
      }
      unint64_t v25 = v69 + 1;
      *((void *)v66 + 2) = v65;
      sub_253A73450();
      sub_253A72EB8(v79, v71);
      unint64_t v49 = *(void *)(v68 + 16);
      if (v25 == v49) {
        goto LABEL_12;
      }
    }
  }
  __break(1u);
}

void sub_253A6BF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  uint64_t v14 = sub_2539626F0();
  uint64_t v15 = type metadata accessor for TranscriptProtoInterpretedStatementResult(v14);
  uint64_t v16 = sub_25346CB34(v15);
  v52[9] = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v53 = (uint64_t)v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v19);
  v52[8] = (uint64_t)v52 - v20;
  sub_253483660();
  sub_253B06F40();
  sub_253465998();
  MEMORY[0x270FA5388](v21);
  v52[7] = (uint64_t)v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v23);
  sub_2534F8600();
  MEMORY[0x270FA5388](v24);
  v52[3] = (uint64_t)v52 - v25;
  sub_2534B324C();
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  sub_253A73510(v27, v28, v29, v30, v31, v32, v33, v34, v52[0]);
  sub_2539622E0(MEMORY[0x263F8EE78]);
  sub_2539E7924();
  sub_253A73764();
  if (v13)
  {
    sub_253A73194();
    uint64_t v35 = 0;
    while (1)
    {
      sub_253A73FD0();
      if (v36) {
        break;
      }
      uint64_t v37 = sub_253A73258();
      v12(v37);
      uint64_t v38 = sub_253A7346C();
      v12(v38);
      sub_25396239C();
      TranscriptProtoInterpretedStatementResult.init(handwritten:)();
      if (v11)
      {
        swift_release();
        sub_253A73F50();
        sub_2534659CC();
        v50();
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      sub_2534659CC();
      v39();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73B14();
        uint64_t v10 = a10;
      }
      sub_253A73754();
      if (v41)
      {
        sub_2539625A0(v40);
        sub_2539E7924();
        uint64_t v10 = a10;
      }
      ++v35;
      *(void *)(v10 + 16) = v12;
      sub_253A73178();
      sub_253A72EB8(v53, v42);
      sub_253A73F7C();
      if (v36) {
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
LABEL_13:
  sub_253A736B4();
  if (!v36)
  {
    sub_253A7370C();
    while (v13 < v43)
    {
      uint64_t v44 = sub_253A73140();
      ((void (*)(uint64_t))v10)(v44);
      uint64_t v45 = sub_253A73434();
      ((void (*)(uint64_t))v10)(v45);
      sub_253A73604();
      TranscriptProtoInterpretedStatementResult.init(handwritten:)();
      if (v11)
      {
        sub_25351C3E8();
        v51();
        swift_bridgeObjectRelease();
        sub_253A73FDC();
        swift_release();
        goto LABEL_27;
      }
      sub_25351C3E8();
      v46();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73B14();
        uint64_t v10 = a10;
      }
      sub_253A736FC();
      if (v41)
      {
        sub_253962194(v47);
        sub_2539E7924();
        uint64_t v10 = a10;
      }
      uint64_t v48 = sub_253A731E8();
      sub_253A72EB8(v48, v49);
      sub_253A736B4();
      if (v36) {
        goto LABEL_15;
      }
    }
LABEL_29:
    __break(1u);
    return;
  }
LABEL_15:
  sub_253A7382C();
LABEL_27:
  sub_253578800();
  sub_2534847C8();
}

void sub_253A6C260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  uint64_t v14 = sub_2539626F0();
  uint64_t v15 = type metadata accessor for TranscriptProtoVisualOutput(v14);
  uint64_t v16 = sub_25346CB34(v15);
  v52[9] = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v53 = (uint64_t)v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v19);
  v52[8] = (uint64_t)v52 - v20;
  sub_253483660();
  sub_253B063E0();
  sub_253465998();
  MEMORY[0x270FA5388](v21);
  v52[7] = (uint64_t)v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v23);
  sub_2534F8600();
  MEMORY[0x270FA5388](v24);
  v52[3] = (uint64_t)v52 - v25;
  sub_2534B324C();
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  sub_253A73510(v27, v28, v29, v30, v31, v32, v33, v34, v52[0]);
  sub_2539622E0(MEMORY[0x263F8EE78]);
  sub_2539E7988();
  sub_253A73764();
  if (v13)
  {
    sub_253A73194();
    uint64_t v35 = 0;
    while (1)
    {
      sub_253A73FD0();
      if (v36) {
        break;
      }
      uint64_t v37 = sub_253A73258();
      v12(v37);
      uint64_t v38 = sub_253A7346C();
      v12(v38);
      sub_25396239C();
      TranscriptProtoVisualOutput.init(handwritten:)();
      if (v11)
      {
        swift_release();
        sub_253A73F50();
        sub_2534659CC();
        v50();
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      sub_2534659CC();
      v39();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73C7C();
        uint64_t v10 = a10;
      }
      sub_253A73754();
      if (v41)
      {
        sub_2539625A0(v40);
        sub_2539E7988();
        uint64_t v10 = a10;
      }
      ++v35;
      *(void *)(v10 + 16) = v12;
      sub_253A73178();
      sub_253A72EB8(v53, v42);
      sub_253A73F7C();
      if (v36) {
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
LABEL_13:
  sub_253A736B4();
  if (!v36)
  {
    sub_253A7370C();
    while (v13 < v43)
    {
      uint64_t v44 = sub_253A73140();
      ((void (*)(uint64_t))v10)(v44);
      uint64_t v45 = sub_253A73434();
      ((void (*)(uint64_t))v10)(v45);
      sub_253A73604();
      TranscriptProtoVisualOutput.init(handwritten:)();
      if (v11)
      {
        sub_25351C3E8();
        v51();
        swift_bridgeObjectRelease();
        sub_253A73FDC();
        swift_release();
        goto LABEL_27;
      }
      sub_25351C3E8();
      v46();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73C7C();
        uint64_t v10 = a10;
      }
      sub_253A736FC();
      if (v41)
      {
        sub_253962194(v47);
        sub_2539E7988();
        uint64_t v10 = a10;
      }
      uint64_t v48 = sub_253A731E8();
      sub_253A72EB8(v48, v49);
      sub_253A736B4();
      if (v36) {
        goto LABEL_15;
      }
    }
LABEL_29:
    __break(1u);
    return;
  }
LABEL_15:
  sub_253A7382C();
LABEL_27:
  sub_253578800();
  sub_2534847C8();
}

void sub_253A6C574()
{
  sub_2534847F8();
  uint64_t v1 = v0;
  type metadata accessor for TranscriptProtoStatementID(0);
  sub_253465998();
  uint64_t v64 = v3;
  uint64_t v65 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v67 = (uint64_t)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v5);
  uint64_t v61 = (uint64_t)v53 - v6;
  uint64_t v62 = sub_253B059D0();
  sub_253465998();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  uint64_t v60 = (char *)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v11);
  sub_2534B3318();
  uint64_t v63 = v12;
  sub_2534B324C();
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  sub_253A741A8(v14, v15, v16, v17, v18, v19, v20, v21, v53[0]);
  unint64_t v22 = *(void *)(v1 + 16);
  uint64_t v68 = (char *)MEMORY[0x263F8EE78];
  sub_2539E6A90();
  uint64_t v66 = v8;
  uint64_t v54 = v1;
  if (v22)
  {
    uint64_t v59 = *(void *)(v1 + 16);
    sub_2539626C0();
    uint64_t v57 = v1 + v23;
    uint64_t v55 = (char *)(v8 + 8);
    uint64_t v56 = v8 + 16;
    swift_bridgeObjectRetain();
    uint64_t v24 = 0;
    unint64_t v58 = v22;
    uint64_t v25 = v66;
    while (v59 != v24)
    {
      uint64_t v26 = *(void (**)(void))(v25 + 16);
      sub_253A568D4();
      v26();
      sub_253A568D4();
      v26();
      int v27 = sub_253B059C0();
      uint64_t v28 = sub_253B059A0();
      uint64_t v30 = v29;
      uint64_t v31 = v67;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_DWORD *)uint64_t v31 = v27;
      *(void *)(v31 + 8) = v28;
      *(void *)(v31 + 16) = v30;
      uint64_t v32 = *(void (**)(void))(v25 + 8);
      uint64_t v33 = v55;
      sub_2534D9220();
      v32();
      sub_2534D9220();
      v32();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73D54();
        uint64_t v33 = v68;
      }
      unint64_t v22 = v58;
      unint64_t v35 = *((void *)v33 + 2);
      unint64_t v34 = *((void *)v33 + 3);
      if (v35 >= v34 >> 1)
      {
        sub_253962434(v34);
        sub_2539E6A90();
        uint64_t v33 = v68;
      }
      ++v24;
      *((void *)v33 + 2) = v35 + 1;
      sub_253A7357C();
      sub_253A72EB8(v67, v36);
      if (v22 == v24) {
        goto LABEL_11;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_11:
    uint64_t v37 = v54;
    unint64_t v38 = *(void *)(v54 + 16);
    if (v22 == v38)
    {
LABEL_12:
      swift_bridgeObjectRelease_n();
      sub_2534847C8();
      return;
    }
    uint64_t v67 = v66 + 16;
    uint64_t v60 = (char *)(v66 + 8);
    uint64_t v39 = v66;
    uint64_t v40 = v53[1];
    uint64_t v41 = v62;
    uint64_t v42 = v61;
    while (v22 < v38)
    {
      unint64_t v43 = *(void (**)(uint64_t, unint64_t, uint64_t))(v39 + 16);
      v43(v40, v37+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v22, v41);
      uint64_t v44 = sub_253A3D03C();
      ((void (*)(uint64_t))v43)(v44);
      LODWORD(v43) = sub_253B059C0();
      uint64_t v45 = sub_253B059A0();
      uint64_t v47 = v46;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_DWORD *)uint64_t v42 = v43;
      *(void *)(v42 + 8) = v45;
      *(void *)(v42 + 16) = v47;
      uint64_t v48 = *(void (**)(void))(v39 + 8);
      sub_253A56AF8();
      uint64_t v49 = v60;
      sub_2534D9220();
      v48();
      sub_2534D9220();
      v48();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A73D54();
        uint64_t v49 = v68;
      }
      unint64_t v51 = *((void *)v49 + 2);
      unint64_t v50 = *((void *)v49 + 3);
      if (v51 >= v50 >> 1)
      {
        sub_253A7363C(v50);
        sub_2539E6A90();
        uint64_t v49 = v68;
      }
      ++v22;
      *((void *)v49 + 2) = v51 + 1;
      sub_25394D7F8();
      sub_253A72EB8(v61, v52);
      uint64_t v37 = v54;
      unint64_t v38 = *(void *)(v54 + 16);
      if (v22 == v38) {
        goto LABEL_12;
      }
    }
  }
  __break(1u);
}

void sub_253A6C980()
{
}

void QueryDecorationToolRetrievalResponse.init(transcript:)()
{
  sub_253A7312C();
  uint64_t v97 = v2;
  uint64_t v98 = v3;
  uint64_t v4 = v0;
  uint64_t v65 = v5;
  v64[0] = v6;
  uint64_t v7 = sub_253462A5C(&qword_269CDFA90);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_2534D9BE4(v9, v64[0]);
  uint64_t v10 = sub_253B08E70();
  sub_253465998();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  uint64_t v80 = (char *)v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v64 - v16;
  uint64_t v92 = sub_253B09190();
  sub_253465998();
  uint64_t v86 = v18;
  MEMORY[0x270FA5388](v19);
  sub_2534659D8();
  uint64_t v91 = v20;
  sub_2534B324C();
  MEMORY[0x270FA5388](v21);
  sub_253578D44();
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  sub_253A56CA0(v23, v24, v25, v26, v27, v28, v29, v30, v64[0]);
  uint64_t v31 = sub_253462A5C(&qword_269CDFAA0);
  uint64_t v32 = sub_25346CB4C(v31);
  MEMORY[0x270FA5388](v32);
  sub_25346CB04();
  uint64_t v84 = v33;
  sub_253483660();
  uint64_t v34 = sub_253B08E80();
  sub_253465998();
  uint64_t v36 = v35;
  MEMORY[0x270FA5388](v37);
  uint64_t v83 = (char *)v64 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v39);
  uint64_t v82 = (char *)v64 - v40;
  uint64_t v95 = sub_253B091F0();
  sub_253465998();
  uint64_t v42 = v41;
  MEMORY[0x270FA5388](v43);
  uint64_t v93 = (char *)v64 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v45);
  uint64_t v85 = (char *)v64 - v46;
  sub_2534B324C();
  MEMORY[0x270FA5388](v47);
  uint64_t v94 = (char *)v64 - v48;
  uint64_t v49 = sub_253483660();
  uint64_t v81 = type metadata accessor for ContextProtoToolRetrievalType(v49);
  MEMORY[0x270FA5388](v81);
  uint64_t v52 = (char *)v64 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = *(void *)(v65 + 48);
  uint64_t v54 = *(void *)(v53 + 16);
  if (v54)
  {
    uint64_t v74 = v1;
    uint64_t v55 = v53 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
    uint64_t v78 = v36 + 32;
    uint64_t v77 = v36 + 16;
    uint64_t v79 = v36 + 8;
    uint64_t v76 = v42 + 32;
    uint64_t v72 = v12 + 32;
    uint64_t v71 = v12 + 16;
    uint64_t v73 = v12 + 8;
    uint64_t v87 = v42 + 16;
    uint64_t v88 = v86 + 32;
    uint64_t v70 = v86 + 16;
    v64[2] = v86 + 40;
    v64[3] = v42;
    uint64_t v75 = v42 + 8;
    uint64_t v67 = v86 + 8;
    uint64_t v56 = v55;
    uint64_t v66 = *(void *)(v50 + 72);
    v64[1] = v53;
    swift_bridgeObjectRetain();
    uint64_t v69 = v10;
    uint64_t v68 = v17;
    uint64_t v90 = v54;
    sub_253A72E10(v56, (uint64_t)v52);
    uint64_t v57 = v84;
    sub_253961F60((uint64_t)v52, v84, &qword_269CDFAA0);
    sub_2534D8B48(v57, 1, v34);
    if (v58)
    {
      sub_253472458(v57, &qword_269CDFAA0);
      uint64_t v96 = v34;
      sub_253462A5C(&qword_269CE5200);
      sub_253B09730();
      sub_253961DC0();
      uint64_t v61 = sub_2534D969C();
      sub_253A73E98(v61, v62);
    }
    else
    {
      uint64_t v89 = v56;
      sub_2534DA678();
      sub_2534D8E14();
      v59();
      sub_2534DA678();
      sub_2534B3428();
      v60();
      sub_253A73604();
      sub_253B091E0();
      sub_253A73918();
      v63();
    }
    sub_253A73F14();
    sub_253A72E68();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25394FB40();
  if (v4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_253A72E68();
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_2534D9A44();
  sub_253B08210();
  sub_253A72E68();
LABEL_10:
  sub_2536D3D5C();
  sub_25354725C();
}

void sub_253A6D3F8()
{
}

void ContextProtoQueryDecorationToolRetrievalResponse.init(handwritten:)()
{
  sub_253A7312C();
  uint64_t v116 = v5;
  uint64_t v117 = v6;
  uint64_t v114 = v0;
  uint64_t v8 = v7;
  uint64_t v91 = v9;
  uint64_t v10 = sub_253B08040();
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  sub_25346CB04();
  uint64_t v100 = v12;
  uint64_t v112 = sub_253462A5C(&qword_269CDCAC0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v13);
  uint64_t v99 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v15);
  sub_2534B3318();
  uint64_t v98 = v16;
  sub_2534B324C();
  MEMORY[0x270FA5388](v17);
  sub_25351C738();
  MEMORY[0x270FA5388](v18);
  sub_25351C99C();
  MEMORY[0x270FA5388](v19);
  uint64_t v20 = sub_253A737E8();
  uint64_t v21 = type metadata accessor for ContextProtoToolRetrievalType(v20);
  uint64_t v22 = sub_25346CB34(v21);
  uint64_t v97 = v23;
  MEMORY[0x270FA5388](v22);
  sub_2534B3294();
  uint64_t v24 = sub_253B08220();
  uint64_t v26 = v25;
  uint64_t v27 = sub_253B08230();
  uint64_t v29 = v28;
  sub_253B08240();
  int v31 = v30;
  uint64_t v32 = sub_253B08250();
  uint64_t v33 = v114;
  sub_253A63CA4(v32, v34, v35, v36, v37, v38, v39, v40, v85, v86);
  uint64_t v113 = v33;
  if (v33)
  {
    sub_253B08270();
    sub_25346CAF4();
    sub_2534659CC();
    v42();
    swift_bridgeObjectRelease();
LABEL_3:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v89 = v29;
  uint64_t v88 = v26;
  uint64_t v43 = v91;
  uint64_t v93 = v1;
  uint64_t v94 = v2;
  uint64_t v96 = v3;
  uint64_t v86 = v27;
  uint64_t v90 = v41;
  uint64_t v87 = v24;
  uint64_t v95 = v4;
  uint64_t v44 = sub_253B08260();
  uint64_t v45 = *(void *)(v44 + 16);
  if (v45)
  {
    uint64_t v85 = v8;
    uint64_t v115 = MEMORY[0x263F8EE78];
    sub_2539E7604();
    uint64_t v46 = sub_253A3B424(v44);
    uint64_t v48 = v47;
    char v50 = v49 & 1;
    uint64_t v51 = v96;
    uint64_t v92 = v44;
    while (1)
    {
      uint64_t v101 = v45;
      uint64_t v109 = v94 + *(int *)(v112 + 48);
      uint64_t v103 = v48;
      uint64_t v104 = v46;
      unsigned int v102 = v50 & 1;
      sub_253A72FD0(v94, v109, v46, v48, v50 & 1, v44, MEMORY[0x263F80768], MEMORY[0x263F805E8]);
      uint64_t v52 = sub_253B091F0();
      sub_2535782A8();
      uint64_t v111 = v53;
      uint64_t v108 = *(void (**)(void))(v53 + 16);
      sub_253578828();
      sub_253962874();
      v54();
      uint64_t v114 = sub_253B09190();
      sub_2535782A8();
      uint64_t v110 = v55;
      uint64_t v107 = *(void (**)(void))(v55 + 16);
      sub_253535668();
      v56();
      uint64_t v57 = v51;
      uint64_t v58 = v95;
      sub_253961F14(v57, v95, &qword_269CDCAC0);
      uint64_t v59 = sub_2534D9A44();
      sub_253472458(v59, v60);
      uint64_t v61 = *(int *)(v112 + 48);
      uint64_t v109 = v98 + v61;
      uint64_t v105 = v58 + v61;
      uint64_t v106 = v52;
      sub_253A73E58();
      uint64_t v62 = v108;
      sub_253962874();
      v62();
      sub_2535791E4();
      uint64_t v63 = v107;
      sub_253535668();
      v63();
      uint64_t v64 = (uint64_t)v99;
      sub_253A73E58();
      sub_253962874();
      v62();
      sub_253535668();
      v63();
      sub_253B08030();
      sub_2534659CC();
      v65();
      sub_2534659CC();
      v66();
      sub_253A73EF4();
      uint64_t v67 = v113;
      ContextProtoToolRetrievalType.init(handwritten:)();
      uint64_t v113 = v67;
      if (v67) {
        break;
      }
      sub_253472458(v58, &qword_269CDCAC0);
      uint64_t v68 = v115;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253A73F88();
        sub_2539E7604();
        uint64_t v68 = v115;
      }
      uint64_t v51 = v96;
      uint64_t v69 = v97;
      unint64_t v70 = *(void *)(v68 + 16);
      if (v70 >= *(void *)(v68 + 24) >> 1)
      {
        sub_2539E7604();
        uint64_t v51 = v96;
        uint64_t v68 = v115;
      }
      *(void *)(v68 + 16) = v70 + 1;
      sub_2539626C0();
      sub_253A72EB8(v64, v68 + v71 + *(void *)(v69 + 72) * v70);
      uint64_t v72 = sub_2539627B8();
      uint64_t v1 = v102;
      uint64_t v44 = v92;
      uint64_t v74 = sub_253A71D74(v72, v73, v102, v92);
      uint64_t v76 = v75;
      char v50 = v77 & 1;
      uint64_t v78 = sub_2539627B8();
      sub_253535310(v78, v79, v1);
      uint64_t v46 = v74;
      uint64_t v48 = v76;
      uint64_t v45 = v101 - 1;
      if (v101 == 1)
      {
        sub_253535310(v74, v76, v50);
        swift_bridgeObjectRelease();
        uint64_t v43 = v91;
        uint64_t v81 = v89;
        uint64_t v82 = v88;
        sub_253A7412C();
        goto LABEL_15;
      }
    }
    sub_253472458(v58, &qword_269CDCAC0);
    sub_253535310(v104, v103, v102);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_253B08270();
    sub_25346CAF4();
    sub_2534659CC();
    v80();
    goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  uint64_t v68 = MEMORY[0x263F8EE78];
  sub_253A7412C();
  uint64_t v82 = v88;
  uint64_t v81 = v89;
LABEL_15:
  type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)uint64_t v43 = v44;
  *(void *)(v43 + 8) = v82;
  *(void *)(v43 + 16) = v1;
  *(void *)(v43 + 24) = v81;
  *(_DWORD *)(v43 + 32) = v31;
  *(void *)(v43 + 40) = v90;
  *(void *)(v43 + 48) = v68;
  sub_253B08270();
  sub_25346CAF4();
  uint64_t v83 = sub_253A738D8();
  v84(v83);
LABEL_16:
  sub_25354725C();
}

void ContextProtoToolRetrievalType.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  uint64_t v34 = v4;
  uint64_t v32 = type metadata accessor for ContextProtoToolRetrievalType(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  sub_2536D2C5C(v6, v28);
  sub_253B08E70();
  sub_253465998();
  uint64_t v30 = v8;
  uint64_t v31 = v7;
  MEMORY[0x270FA5388](v7);
  sub_2534D9B74();
  uint64_t v35 = sub_253B09190();
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  sub_2534847E0();
  uint64_t v10 = sub_253462A5C(&qword_269CDFA90);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  uint64_t v29 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253B091F0();
  sub_253465998();
  MEMORY[0x270FA5388](v13);
  sub_25346CC6C();
  uint64_t v14 = sub_253462A5C(&qword_269CDFAA0);
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  sub_2534966B0();
  sub_253B08020();
  sub_253B091D0();
  sub_253578D38();
  sub_2534D91AC();
  v16();
  uint64_t v17 = sub_253B08E80();
  sub_253A73620(v1);
  sub_253B08010();
  sub_253B09170();
  sub_25351C3E8();
  v18();
  if (v0)
  {
    sub_253B08040();
    sub_25346CAF4();
    sub_2534659CC();
    v19();
    sub_253472458(v1, &qword_269CDFAA0);
  }
  else
  {
    uint64_t v20 = (uint64_t)v29;
    sub_2534D8E14();
    v21();
    sub_253A73874(v20, 0);
    uint64_t v22 = v33;
    uint64_t v23 = sub_253A3CD60();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v23, v24, v25, v17);
    uint64_t v26 = v22 + *(int *)(v32 + 20);
    sub_253A73874(v26, 1);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    sub_253961BF0(v1, v22, &qword_269CDFAA0);
    sub_253961BF0(v20, v26, &qword_269CDFA90);
    sub_253A72EB8(v22, v34);
    sub_253B08040();
    sub_25346CAF4();
    (*(void (**)(uint64_t))(v27 + 8))(v3);
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void sub_253A6DDDC()
{
}

void DynamicEnumerationEntity.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  v24[3] = v4;
  sub_253B08E50();
  sub_253465998();
  v24[5] = v6;
  v24[6] = v5;
  MEMORY[0x270FA5388](v5);
  v24[4] = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v8);
  v24[9] = (char *)v24 - v9;
  uint64_t v10 = sub_253B09120();
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  v24[8] = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  sub_253B08E60();
  sub_253465998();
  v24[10] = v13;
  uint64_t v25 = v14;
  MEMORY[0x270FA5388](v13);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v15);
  sub_253A74194();
  uint64_t v16 = sub_253B09150();
  sub_253465998();
  v24[7] = v17;
  MEMORY[0x270FA5388](v18);
  sub_2534847E0();
  uint64_t v19 = *v3;
  type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  swift_bridgeObjectRetain();
  sub_25395DFE8();
  if (v0)
  {
    sub_253A72E68();
    swift_bridgeObjectRelease();
  }
  else
  {
    v24[1] = v19;
    void v24[2] = v16;
    sub_2535791E4();
    sub_2534AF234();
    v20();
    sub_253B09140();
    sub_2534659CC();
    v21();
    sub_25395DCE8();
    uint64_t v25 = v1;
    sub_2534DA154();
    sub_2534AF234();
    v22();
    sub_253B09110();
    sub_2534D91AC();
    v23();
    sub_253B08190();
    sub_253A72E68();
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void sub_253A6E1A4()
{
}

void ContextProtoDynamicEnumerationEntity.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  uint64_t v52 = v4;
  uint64_t v50 = type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  uint64_t v51 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253B08E50();
  sub_253465998();
  uint64_t v48 = v8;
  uint64_t v49 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v57 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253B09120();
  sub_253465998();
  uint64_t v55 = v11;
  uint64_t v56 = v10;
  MEMORY[0x270FA5388](v10);
  sub_2534D8F84(v12, v46);
  uint64_t v13 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  sub_2534D9C00();
  uint64_t v58 = sub_253B08E60();
  sub_253465998();
  uint64_t v53 = v15;
  MEMORY[0x270FA5388](v16);
  sub_25349888C();
  sub_253B09150();
  sub_253465998();
  MEMORY[0x270FA5388](v17);
  sub_25347FAAC();
  uint64_t v18 = sub_253462A5C(&qword_269CDFA30);
  uint64_t v19 = sub_25346CB4C(v18);
  MEMORY[0x270FA5388](v19);
  sub_2534B33C8(v20, v46);
  uint64_t v21 = sub_253B07860();
  uint64_t v23 = v22;
  uint64_t v24 = v3;
  sub_253B081C0();
  sub_253B09130();
  if (v0)
  {
    sub_2534DA4BC();
    v25();
    sub_253B081D0();
    sub_25346CAF4();
    sub_2534659CC();
    v26();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v47 = v21;
    sub_2534DA4BC();
    v27();
    uint64_t v28 = v54;
    sub_2535791E4();
    sub_2534D8E14();
    v29();
    sub_2534AF368(v28);
    sub_253B081B0();
    sub_253B09100();
    sub_2534659CC();
    v30();
    uint64_t v31 = v49;
    uint64_t v32 = v1;
    sub_2534D8E14();
    v33();
    sub_253A7385C(v1, 0);
    uint64_t v34 = v28;
    uint64_t v36 = v50;
    uint64_t v35 = (uint64_t *)v51;
    uint64_t v37 = (uint64_t)&v51[*(int *)(v50 + 20)];
    uint64_t v38 = sub_253A73E04();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v38, v39, v40, v58);
    uint64_t v41 = (uint64_t)v35 + *(int *)(v36 + 24);
    uint64_t v42 = sub_253A3CD60();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v42, v43, v44, v31);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *uint64_t v35 = v47;
    v35[1] = v23;
    sub_253961BF0(v34, v37, &qword_269CDFA30);
    sub_253961BF0(v32, v41, &qword_269CDCBC8);
    sub_253A72EB8((uint64_t)v35, v52);
    sub_253B081D0();
    sub_25346CAF4();
    (*(void (**)(uint64_t))(v45 + 8))(v24);
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void sub_253A6E600()
{
}

void ToolRetrievalType.init(transcript:)()
{
  sub_2534847F8();
  v20[3] = v2;
  v20[7] = sub_253B08E70();
  sub_253465998();
  v20[4] = v3;
  MEMORY[0x270FA5388](v4);
  sub_2534659D8();
  v20[6] = v5;
  sub_2534B324C();
  MEMORY[0x270FA5388](v6);
  v20[5] = (char *)v20 - v7;
  sub_253483660();
  uint64_t v8 = sub_253B09190();
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  sub_25397F55C();
  sub_253B08E80();
  sub_253465998();
  MEMORY[0x270FA5388](v10);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v11);
  sub_2536D4118();
  uint64_t v12 = sub_253B091F0();
  sub_253465998();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  sub_2534B3294();
  sub_25395DF70();
  if (!v1)
  {
    v20[1] = v14;
    v20[2] = v12;
    v20[0] = v0;
    sub_2534AF234();
    v16();
    sub_253B091E0();
    sub_2534659CC();
    v17();
    type metadata accessor for ContextProtoToolRetrievalType(0);
    sub_25395DFAC();
    sub_253A73EE8();
    sub_253A3D524();
    sub_2534AF234();
    v18();
    sub_253B09180();
    sub_2534D9220();
    v19();
    sub_2534D9B10();
    sub_253B08030();
  }
  sub_253A72E68();
  sub_253A3C6AC();
  sub_2534847C8();
}

void sub_253A6E944()
{
}

void sub_253A6E95C()
{
}

uint64_t SampleInvocation.init(transcript:)()
{
  return sub_253A72E68();
}

uint64_t sub_253A6E9E4()
{
  return SampleInvocation.init(transcript:)();
}

uint64_t ContextProtoSampleInvocation.init(handwritten:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_253B07AD0();
  uint64_t v6 = v5;
  sub_253B07AE0();
  int v8 = v7;
  type metadata accessor for ContextProtoSampleInvocation(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v6;
  *(_DWORD *)(a2 + 16) = v8;
  sub_253B07AF0();
  sub_25346CAF4();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  return v11(a1, v9);
}

uint64_t sub_253A6EAAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return ContextProtoSampleInvocation.init(handwritten:)(a1, a2);
}

uint64_t SpanMatchedEntity.init(transcript:)()
{
  sub_253A7402C();
  uint64_t v3 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v4 = sub_25346CB4C(v3);
  MEMORY[0x270FA5388](v4);
  sub_25346CC6C();
  uint64_t v5 = sub_253462A5C(&qword_269CDB3F8);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_2534D9C00();
  uint64_t v8 = type metadata accessor for ContextProtoSpanMatchedEntity(v7);
  sub_253961F60(v0 + *(int *)(v8 + 20), v2, &qword_269CDCBC8);
  sub_25395A48C();
  if (!v1)
  {
    uint64_t v10 = swift_bridgeObjectRetain();
    sub_25395178C(v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
    sub_253B07B30();
  }
  return sub_253A72E68();
}

uint64_t sub_253A6EC24()
{
  return SpanMatchedEntity.init(transcript:)();
}

uint64_t ContextProtoSpanMatchedEntity.init(handwritten:)()
{
  uint64_t v2 = sub_253971B04();
  uint64_t v3 = type metadata accessor for ContextProtoSpanMatchedEntity(v2);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v4);
  sub_253465A3C();
  uint64_t v5 = sub_253462A5C(&qword_269CDB3F8);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_2534966B0();
  uint64_t v7 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_25346CC6C();
  sub_253B07B40();
  sub_25395F124();
  if (!v0)
  {
    uint64_t v11 = sub_253B07B50();
    uint64_t v12 = sub_253A63764(v11);
    uint64_t v13 = (uint64_t)v1 + *(int *)(v3 + 20);
    uint64_t v14 = sub_253B08E50();
    sub_25346CC08(v13, v15, v16, v14);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    uint64_t v17 = sub_2535791E4();
    sub_253961BF0(v17, v18, v19);
    *uint64_t v1 = v12;
    uint64_t v20 = sub_2535787F4();
    sub_253A72EB8(v20, v21);
  }
  sub_253B07B60();
  sub_25346CAF4();
  sub_2534659CC();
  return v9();
}

uint64_t sub_253A6EE18()
{
  return ContextProtoSpanMatchedEntity.init(handwritten:)();
}

void EntityMatch.init(transcript:)()
{
  sub_253A7312C();
  uint64_t v54 = v2;
  uint64_t v55 = v3;
  uint64_t v53 = v0;
  uint64_t v5 = v4;
  uint64_t v49 = v6;
  sub_253B07B20();
  sub_253465998();
  uint64_t v47 = v8;
  uint64_t v48 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v45 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  sub_253A56CA0(v11, v12, v13, v14, v15, v16, v17, v18, v44[0]);
  uint64_t v19 = sub_253462A5C(&qword_269CDFB20);
  uint64_t v20 = sub_25346CB4C(v19);
  MEMORY[0x270FA5388](v20);
  sub_2536D2C5C(v21, v44[0]);
  uint64_t v22 = sub_253462A5C((uint64_t *)&unk_269CDB4D0);
  uint64_t v23 = sub_25346CB4C(v22);
  MEMORY[0x270FA5388](v23);
  uint64_t v52 = (char *)v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_253483660();
  uint64_t matched = type metadata accessor for ContextProtoMatchProperties(v25);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v26);
  sub_2534847E0();
  uint64_t v27 = sub_253B079E0();
  uint64_t v28 = sub_25346CB4C(v27);
  MEMORY[0x270FA5388](v28);
  uint64_t v29 = sub_2534B33AC();
  uint64_t v30 = (uint64_t *)((char *)v5 + *(int *)(type metadata accessor for ContextProtoEntityMatch(v29) + 52));
  uint64_t v31 = *v30;
  uint64_t v32 = v30[1];
  uint64_t v33 = v5[1];
  v44[9] = *v5;
  v44[10] = v31;
  uint64_t v35 = v5[3];
  uint64_t v34 = v5[4];
  v44[7] = v5[5];
  v44[8] = v34;
  uint64_t v36 = v5[10];
  v44[6] = v5[9];
  uint64_t v37 = v5[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v38 = v53;
  sub_25395E95C(v1);
  if (v38)
  {
    sub_253A72E68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v44[2] = v37;
    v44[3] = v35;
    v44[4] = v32;
    v44[5] = v33;
    uint64_t v53 = v36;
    v44[1] = *(void *)(v1 + 16);
    sub_253961F60(v1 + *(int *)(matched + 24), v51, &qword_269CDFB20);
    sub_25395C700();
    sub_253B079A0();
    sub_253A72E68();
    uint64_t v40 = v47;
    uint64_t v39 = v48;
    uint64_t v41 = v45;
    uint64_t v42 = sub_253A74160();
    v43(v42);
    (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v46, v41, v39);
    swift_bridgeObjectRetain();
    sub_253B076A0();
    sub_253A72E68();
  }
  sub_2534F8A10();
  sub_25354725C();
}

void MatchProperties.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  uint64_t v4 = sub_253462A5C(&qword_269CDFB20);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_2534B34A4();
  uint64_t v6 = sub_253462A5C((uint64_t *)&unk_269CDB4D0);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_253465A3C();
  uint64_t matched = type metadata accessor for ContextProtoMatchProperties(0);
  sub_253961F60(v3 + *(int *)(matched + 24), v1, &qword_269CDFB20);
  sub_25395C700();
  if (!v0) {
    sub_253B079A0();
  }
  sub_253A72E68();
  sub_253579494();
  sub_2534847C8();
}

uint64_t EntityMatcherType.init(transcript:)()
{
  sub_253A736C0();
  sub_253B07B20();
  sub_25346CAF4();
  uint64_t v0 = sub_253A7327C();
  return v1(v0);
}

void sub_253A6F38C()
{
}

void ContextProtoEntityMatch.init(handwritten:)()
{
  sub_253A7312C();
  uint64_t v70 = v3;
  uint64_t v71 = v4;
  uint64_t v63 = v5;
  uint64_t v64 = type metadata accessor for ContextProtoEntityMatch(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v6);
  sub_2534AF2D8();
  sub_253B07B20();
  sub_253465998();
  uint64_t v67 = v8;
  uint64_t v68 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v66 = (char *)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v10);
  uint64_t v65 = (char *)v57 - v11;
  sub_253483660();
  uint64_t v12 = sub_253B079E0();
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  sub_2534B34A4();
  uint64_t v14 = sub_253462A5C(&qword_269CDFB08);
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  sub_25347FAAC();
  uint64_t v62 = sub_253B07750();
  uint64_t v17 = v16;
  uint64_t v18 = sub_253B07690();
  uint64_t v20 = v19;
  uint64_t v21 = sub_253B076E0();
  uint64_t v22 = sub_253B07760();
  sub_253B076D0();
  int v24 = v23;
  sub_253B07720();
  ContextProtoMatchProperties.init(handwritten:)();
  if (v0)
  {
    sub_253B07770();
    sub_25346CAF4();
    sub_2534659CC();
    v25();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v57[1] = 0;
    uint64_t v58 = v22;
    uint64_t v59 = v21;
    uint64_t v60 = v18;
    uint64_t v61 = v17;
    uint64_t v69 = v20;
    uint64_t v26 = v64;
    uint64_t matched = type metadata accessor for ContextProtoMatchProperties(0);
    sub_253A7385C(v2, 0);
    sub_253B07700();
    uint64_t v28 = v67;
    sub_253A74020();
    sub_2534AF234();
    v29();
    sub_253578368();
    int v31 = v30();
    int v32 = 0;
    if (v31 != *MEMORY[0x263F4E578])
    {
      if (v31 == *MEMORY[0x263F4E568])
      {
        int v32 = 1;
      }
      else
      {
        if (v31 != *MEMORY[0x263F4E570])
        {
          sub_25394EA00();
          uint64_t v53 = sub_2534D969C();
          sub_253A73498(v53, v54);
          uint64_t v55 = *(void (**)(void))(v28 + 8);
          sub_25351C3E8();
          v55();
          sub_25351C3E8();
          v55();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_253B07770();
          sub_25346CAF4();
          sub_2534659CC();
          v56();
          sub_253472458(v2, &qword_269CDFB08);
          goto LABEL_9;
        }
        int v32 = 2;
      }
    }
    LODWORD(v66) = v32;
    sub_25351C3E8();
    v33();
    uint64_t v34 = sub_253B07730();
    uint64_t v67 = v35;
    uint64_t v68 = v34;
    uint64_t v36 = v2;
    uint64_t v37 = sub_253B07710();
    uint64_t v39 = v38;
    uint64_t v65 = (char *)sub_253B076C0();
    v57[0] = v40;
    uint64_t v41 = v26;
    uint64_t v42 = v1 + *(int *)(v26 + 48);
    uint64_t v43 = sub_2535787C4();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v43, v44, v45, matched);
    uint64_t v46 = (void *)(v1 + *(int *)(v41 + 52));
    *uint64_t v46 = 0;
    v46[1] = 0;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    uint64_t v47 = v61;
    *(void *)uint64_t v1 = v62;
    *(void *)(v1 + 8) = v47;
    uint64_t v48 = v69;
    *(void *)(v1 + 16) = v60;
    *(void *)(v1 + 24) = v48;
    uint64_t v49 = v58;
    *(void *)(v1 + 32) = v59;
    *(void *)(v1 + 40) = v49;
    *(_DWORD *)(v1 + 48) = v24;
    sub_253961BF0(v36, v42, &qword_269CDFB08);
    *(unsigned char *)(v1 + 52) = (_BYTE)v66;
    uint64_t v50 = v67;
    *(void *)(v1 + 56) = v68;
    *(void *)(v1 + 64) = v50;
    *(void *)(v1 + 72) = v37;
    *(void *)(v1 + 80) = v39;
    swift_bridgeObjectRelease();
    uint64_t v51 = v57[0];
    *uint64_t v46 = v65;
    v46[1] = v51;
    sub_253A72EB8(v1, v63);
    sub_253B07770();
    sub_25346CAF4();
    sub_2534659CC();
    v52();
  }
LABEL_9:
  sub_253A73FF4();
  sub_25354725C();
}

void ContextProtoMatchProperties.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v2 = v1;
  uint64_t v3 = sub_253462A5C((uint64_t *)&unk_269CDB4D0);
  uint64_t v4 = sub_25346CB4C(v3);
  MEMORY[0x270FA5388](v4);
  sub_25347FAAC();
  uint64_t v5 = sub_253462A5C(&qword_269CDFB20);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_253465A3C();
  uint64_t v7 = sub_253B079B0();
  char v9 = v8;
  uint64_t v10 = sub_253B079D0();
  char v12 = v11;
  sub_253B079C0();
  sub_2539613F0();
  if (!v0)
  {
    char v23 = v12 & 1;
    if (v12) {
      uint64_t v10 = 0;
    }
    char v13 = v9 & 1;
    if (v9) {
      uint64_t v14 = 0;
    }
    else {
      uint64_t v14 = v7;
    }
    uint64_t v15 = v2 + *(int *)(type metadata accessor for ContextProtoMatchProperties(0) + 24);
    uint64_t v16 = type metadata accessor for ContextProtoAliasTypes(0);
    sub_25346CC08(v15, v17, v18, v16);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(void *)uint64_t v2 = v14;
    *(unsigned char *)(v2 + 8) = v13;
    *(void *)(v2 + 16) = v10;
    *(unsigned char *)(v2 + 24) = v23;
    uint64_t v19 = sub_2534DA154();
    sub_253961BF0(v19, v20, v21);
  }
  sub_253B079E0();
  sub_25346CAF4();
  sub_2534659CC();
  v22();
  sub_253579494();
  sub_2534847C8();
}

void ContextProtoEntityMatcherType.init(handwritten:)()
{
}

void sub_253A6F9A4()
{
  sub_2534847F8();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = sub_253A733C8();
  v8(v7);
  sub_253465998();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  sub_2534AF234();
  v12();
  sub_253A73424();
  int v14 = v13();
  if (v14 == *v6)
  {
    char v15 = 0;
  }
  else if (v14 == *v4)
  {
    char v15 = 1;
  }
  else
  {
    if (v14 != *v2)
    {
      sub_25394EA00();
      uint64_t v17 = sub_2534D969C();
      sub_253A73408(v17, v18);
      uint64_t v19 = *(void (**)(void))(v10 + 8);
      sub_2534D9A08();
      v19();
      sub_2534D9A08();
      v19();
      goto LABEL_8;
    }
    char v15 = 2;
  }
  sub_2534D9A08();
  v16();
  *uint64_t v0 = v15;
LABEL_8:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_253A6FAF0()
{
}

void sub_253A6FB08()
{
}

void sub_253A6FB20()
{
}

void AliasTypes.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v142 = sub_253462A5C(&qword_269CE85B0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v7);
  uint64_t v127 = (char *)v120 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v9);
  uint64_t v126 = (char *)v120 - v10;
  sub_2534B324C();
  MEMORY[0x270FA5388](v11);
  uint64_t v125 = (char *)v120 - v12;
  sub_2534B324C();
  MEMORY[0x270FA5388](v13);
  unint64_t v124 = (char *)v120 - v14;
  sub_2534B324C();
  MEMORY[0x270FA5388](v15);
  uint64_t v123 = (char *)v120 - v16;
  sub_2534B324C();
  MEMORY[0x270FA5388](v17);
  uint64_t v122 = (char *)v120 - v18;
  sub_2534B324C();
  MEMORY[0x270FA5388](v19);
  uint64_t v136 = (char *)v120 - v20;
  sub_2534B324C();
  MEMORY[0x270FA5388](v21);
  uint64_t v121 = (char *)v120 - v22;
  sub_253483660();
  uint64_t v23 = sub_253B075C0();
  sub_253465998();
  unint64_t v141 = (unint64_t)v24;
  MEMORY[0x270FA5388](v25);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v26);
  int v131 = (char *)v120 - v27;
  sub_2534B324C();
  MEMORY[0x270FA5388](v28);
  sub_2534F89FC();
  MEMORY[0x270FA5388](v29);
  sub_25351C988();
  MEMORY[0x270FA5388](v30);
  sub_253578D44();
  MEMORY[0x270FA5388](v31);
  uint64_t v132 = (char *)v120 - v32;
  sub_2534B324C();
  MEMORY[0x270FA5388](v33);
  sub_25351C738();
  MEMORY[0x270FA5388](v34);
  v120[12] = (char *)v120 - v35;
  sub_2534B324C();
  MEMORY[0x270FA5388](v36);
  v120[11] = (char *)v120 - v37;
  sub_2534B324C();
  MEMORY[0x270FA5388](v38);
  v120[10] = (char *)v120 - v39;
  sub_2534B324C();
  MEMORY[0x270FA5388](v40);
  v120[9] = (char *)v120 - v41;
  sub_2534B324C();
  MEMORY[0x270FA5388](v42);
  v120[8] = (char *)v120 - v43;
  sub_2534B324C();
  MEMORY[0x270FA5388](v44);
  sub_2534B3318();
  uint64_t v137 = v45;
  sub_2534B324C();
  MEMORY[0x270FA5388](v46);
  v120[7] = (char *)v120 - v47;
  sub_2534B324C();
  MEMORY[0x270FA5388](v48);
  sub_2534D8F5C((uint64_t)v120 - v49);
  sub_253A72C8C(&qword_269CDB500, MEMORY[0x263F4E1A0]);
  sub_253B0A6F0();
  v120[2] = v4;
  uint64_t v50 = *v4;
  uint64_t v51 = *(void *)(*v4 + 16);
  v120[1] = v50;
  if (v51)
  {
    v120[4] = v2;
    v120[5] = v0;
    uint64_t v52 = (unsigned __int8 *)(v50 + 32);
    uint64_t v53 = (void (*)(void))(v141 + 16);
    unint64_t v135 = (void (**)(void))(v141 + 8);
    v141 += 32;
    swift_bridgeObjectRetain();
    uint64_t v138 = v6;
    uint64_t v134 = v1;
    uint64_t v133 = v53;
    do
    {
      uint64_t v54 = *v52;
      uint64_t v139 = v141 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      uint64_t v140 = v52 + 1;
      switch(v54)
      {
        case 1:
          sub_253A73844();
          sub_253B075B0();
          uint64_t v63 = sub_253A73238();
          v64(v63);
          uint64_t v65 = (void (*)(uint64_t))MEMORY[0x263F4E1A0];
          uint64_t v66 = sub_253A72C8C(&qword_269CE85B8, MEMORY[0x263F4E1A0]);
          sub_253A733DC(v66, v67, v66);
          sub_253A72C8C(&qword_269CE85C0, v65);
          sub_253A734D0();
          sub_253A734C0();
          goto LABEL_10;
        case 2:
          sub_253A73844();
          sub_253B07580();
          uint64_t v69 = sub_253A73238();
          v70(v69);
          uint64_t v71 = (void (*)(uint64_t))MEMORY[0x263F4E1A0];
          uint64_t v72 = sub_253A72C8C(&qword_269CE85B8, MEMORY[0x263F4E1A0]);
          sub_253A733DC(v72, v73, v72);
          sub_253A72C8C(&qword_269CE85C0, v71);
          sub_253A734D0();
          sub_253A734C0();
          goto LABEL_10;
        case 3:
          sub_253A73844();
          sub_253B07570();
          uint64_t v74 = sub_253A73238();
          v75(v74);
          uint64_t v76 = (void (*)(uint64_t))MEMORY[0x263F4E1A0];
          uint64_t v77 = sub_253A72C8C(&qword_269CE85B8, MEMORY[0x263F4E1A0]);
          sub_253A733DC(v77, v78, v77);
          sub_253A72C8C(&qword_269CE85C0, v76);
          sub_253A734D0();
          sub_253A734C0();
LABEL_10:
          sub_253A73610(v68);
          if (v79)
          {
            uint64_t v80 = v135;
            sub_2534659CC();
            v81();
            uint64_t v82 = (void (*)(void))v130;
            sub_253A735A8();
            v82();
            sub_253A735A8();
            v82();
            sub_253A7396C();
            sub_253A738A4();
          }
          else
          {
            uint64_t v53 = *(void (**)(void))v141;
            sub_25347FA84();
            v53();
            uint64_t v80 = v135;
          }
          uint64_t v83 = sub_253A73210();
          ((void (*)(unsigned char *))v53)(v83);
          uint64_t v84 = *v80;
          sub_2534D97B4();
          v84();
          sub_253A3D03C();
          sub_2534D97B4();
          v84();
          LOBYTE(v1) = v134;
          goto LABEL_24;
        case 4:
          sub_253B075A0();
          uint64_t v85 = sub_253A73238();
          v86(v85);
          uint64_t v87 = (void (*)(uint64_t))MEMORY[0x263F4E1A0];
          uint64_t v129 = sub_253A72C8C(&qword_269CE85B8, MEMORY[0x263F4E1A0]);
          sub_253B09F20();
          sub_253A72C8C(&qword_269CE85C0, v87);
          sub_253B096B0();
          sub_253A734C0();
          sub_253A73610(v88);
          if (v89)
          {
            uint64_t v90 = v135;
            sub_25351C3E8();
            v108();
            uint64_t v109 = (void (*)(void))v130;
            sub_253535668();
            v109();
            sub_253535668();
            v109();
            sub_253A7396C();
            sub_253A738A4();
          }
          else
          {
            uint64_t v53 = *(void (**)(void))v141;
            sub_25347FA84();
            v53();
            uint64_t v90 = v135;
          }
          uint64_t v110 = sub_253A73210();
          ((void (*)(unsigned char *))v53)(v110);
          uint64_t v111 = *v90;
          sub_25351C3E8();
          v111();
          sub_253A3D524();
          sub_25351C3E8();
          v111();
          LOBYTE(v1) = v134;
LABEL_24:
          uint64_t v53 = v133;
          goto LABEL_30;
        case 5:
          sub_253B07590();
          uint64_t v91 = *(void (**)(void))v53;
          sub_253535668();
          v91();
          uint64_t v92 = (void (*)(uint64_t))MEMORY[0x263F4E1A0];
          uint64_t v130 = sub_253A72C8C(&qword_269CE85B8, MEMORY[0x263F4E1A0]);
          sub_253B09F20();
          sub_253A72C8C(&qword_269CE85C0, v92);
          sub_253B096B0();
          sub_253A734C0();
          sub_253A73610(v93);
          if (v94)
          {
            uint64_t v112 = v91;
            uint64_t v95 = v135;
            sub_25351C3E8();
            v113();
            sub_253535668();
            v112();
            sub_2536D5500();
            sub_253535668();
            v112();
            sub_253B09F30();
            sub_253A738A4();
          }
          else
          {
            uint64_t v53 = *(void (**)(void))v141;
            sub_25347FA84();
            v53();
            uint64_t v95 = v135;
          }
          uint64_t v114 = sub_253A73210();
          ((void (*)(unsigned char *))v53)(v114);
          uint64_t v115 = *v95;
          sub_25351C3E8();
          v115();
          sub_253A3D03C();
          sub_25351C3E8();
          v115();
          LOBYTE(v1) = v134;
          goto LABEL_29;
        case 6:
          sub_253B07560();
          uint64_t v96 = sub_253A73238();
          v97(v96);
          uint64_t v98 = (void (*)(uint64_t))MEMORY[0x263F4E1A0];
          uint64_t v99 = sub_253A72C8C(&qword_269CE85B8, MEMORY[0x263F4E1A0]);
          sub_253A733DC(v99, v100, v99);
          sub_253A72C8C(&qword_269CE85C0, v98);
          sub_253A734D0();
          sub_253A734C0();
          sub_253A73610(v101);
          if (v102)
          {
            uint64_t v103 = v135;
            sub_2534659CC();
            v116();
            uint64_t v117 = (void (*)(void))v130;
            sub_253A735A8();
            v117();
            sub_253A735A8();
            v117();
            sub_253A7396C();
            sub_253A738A4();
          }
          else
          {
            uint64_t v53 = *(void (**)(void))v141;
            sub_25347FA84();
            v53();
            uint64_t v103 = v135;
          }
          uint64_t v118 = sub_253A73210();
          ((void (*)(unsigned char *))v53)(v118);
          uint64_t v119 = *v103;
          sub_2534D97B4();
          v119();
          sub_2534D97B4();
          v119();
          LOBYTE(v1) = v134;
LABEL_29:
          uint64_t v53 = v133;
LABEL_30:
          uint64_t v52 = v140;
          break;
        default:
          sub_253A73EF4();
          sub_253B07550();
          uint64_t v129 = *(void *)v53;
          sub_253535668();
          v55();
          uint64_t v56 = (void (*)(uint64_t))MEMORY[0x263F4E1A0];
          sub_253A72C8C(&qword_269CE85B8, MEMORY[0x263F4E1A0]);
          sub_253A73844();
          uint64_t v128 = v57;
          sub_253B09F20();
          sub_253A72C8C(&qword_269CE85C0, v56);
          sub_253B096B0();
          sub_253A734C0();
          uint64_t v59 = &v121[v58];
          sub_253A73610(v60);
          uint64_t v130 = (uint64_t)v59;
          if (v61)
          {
            uint64_t v62 = v135;
            sub_253A3D03C();
            sub_2534D91AC();
            v104();
            sub_253578EEC();
            uint64_t v105 = (void (*)(void))v129;
            sub_253535668();
            v105();
            sub_253535668();
            v105();
            sub_253B09F30();
            sub_253A738A4();
          }
          else
          {
            sub_253A738A4();
            sub_25347FA84();
            v53();
            uint64_t v62 = v135;
          }
          uint64_t v106 = &v136[*(int *)(v142 + 48)];
          *uint64_t v136 = v1;
          ((void (*)(unsigned char *, uint64_t, uint64_t))v53)(v106, v130, v23);
          uint64_t v107 = *v62;
          sub_253578EE0();
          sub_2534D91AC();
          v107();
          sub_2534DA154();
          sub_2534D91AC();
          v107();
          LOBYTE(v1) = v134;
          uint64_t v52 = v140;
          uint64_t v53 = v133;
          break;
      }
      --v51;
    }
    while (v51);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_253A73F14();
  swift_bridgeObjectRelease();
  sub_2534847C8();
}

void sub_253A70810()
{
}

void ContextProtoAliasTypes.init(handwritten:)()
{
  sub_2534847F8();
  sub_253971B04();
  sub_253B075C0();
  sub_253465998();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = sub_2534D8CAC();
  type metadata accessor for ContextProtoAliasTypes(v4);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v36 = v0;
  *uint64_t v0 = MEMORY[0x263F8EE78];
  sub_253B07550();
  sub_253A72C8C(&qword_269CE85B8, MEMORY[0x263F4E1A0]);
  char v6 = sub_253A734F4();
  uint64_t v7 = *(void (**)(void))(v2 + 8);
  sub_2534D9A08();
  v7();
  if (v6)
  {
    sub_253522C08();
    uint64_t v5 = v8;
    if (*(void *)(v8 + 16) >= *(void *)(v8 + 24) >> 1)
    {
      sub_253A732B4();
      uint64_t v5 = v23;
    }
    sub_253A738B0();
    *(unsigned char *)(v9 + 32) = 0;
  }
  sub_253B075B0();
  char v10 = sub_253A734F4();
  sub_2534D9A08();
  v7();
  if (v10)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_253A73290();
      uint64_t v5 = v24;
    }
    sub_253A7366C();
    if (v11)
    {
      sub_253A732B4();
      uint64_t v5 = v25;
    }
    sub_253A738B0();
    *(unsigned char *)(v12 + 32) = 1;
  }
  sub_253B07580();
  char v13 = sub_253A734F4();
  sub_2534D9A08();
  v7();
  if (v13)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_253A73290();
      uint64_t v5 = v26;
    }
    sub_253A7366C();
    if (v11)
    {
      sub_253A732B4();
      uint64_t v5 = v27;
    }
    sub_253A738B0();
    *(unsigned char *)(v14 + 32) = 2;
  }
  sub_253B07570();
  char v15 = sub_253A734F4();
  sub_2534D9A08();
  v7();
  if (v15)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_253A73290();
      uint64_t v5 = v28;
    }
    sub_253A7366C();
    if (v11)
    {
      sub_253A732B4();
      uint64_t v5 = v29;
    }
    sub_253A738B0();
    *(unsigned char *)(v16 + 32) = 3;
  }
  sub_253B075A0();
  char v17 = sub_253A734F4();
  sub_2534D9A08();
  v7();
  if (v17)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_253A73290();
      uint64_t v5 = v30;
    }
    sub_253A7366C();
    if (v11)
    {
      sub_253A732B4();
      uint64_t v5 = v31;
    }
    sub_253A738B0();
    *(unsigned char *)(v18 + 32) = 4;
  }
  sub_253B07590();
  char v19 = sub_253A734F4();
  sub_2534D9A08();
  v7();
  if (v19)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_253A73290();
      uint64_t v5 = v32;
    }
    sub_253A7366C();
    if (v11)
    {
      sub_253A732B4();
      uint64_t v5 = v33;
    }
    sub_253A738B0();
    *(unsigned char *)(v20 + 32) = 5;
  }
  sub_253B07560();
  char v21 = sub_253A734F4();
  sub_2534D9A08();
  v7();
  if (v21)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_253A73290();
      uint64_t v5 = v34;
    }
    unint64_t v22 = *(void *)(v5 + 16);
    if (v22 >= *(void *)(v5 + 24) >> 1)
    {
      sub_253522C08();
      uint64_t v5 = v35;
    }
    *(void *)(v5 + 16) = v22 + 1;
    *(unsigned char *)(v5 + v22 + 32) = 6;
  }
  sub_253578EEC();
  sub_2534D9A08();
  v7();
  swift_bridgeObjectRelease();
  void *v36 = v5;
  sub_2534847C8();
}

void sub_253A70BC8()
{
}

uint64_t sub_253A70BE0(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_253A71534(a1, a2, a3, (uint64_t (*)(char *))EntityMatcherType.init(transcript:));
}

void sub_253A70C0C()
{
}

void QueryDecorationInput.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v4 = v2;
  uint64_t v35 = v1;
  uint64_t v6 = v5;
  sub_253B08100();
  sub_253465998();
  uint64_t v37 = v8;
  uint64_t v38 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v36 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  sub_2536D533C(v11, v12, v13, v14, v15, v16, v17, v18, v34[0]);
  uint64_t v19 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v20 = sub_25346CB4C(v19);
  MEMORY[0x270FA5388](v20);
  sub_2534B464C();
  uint64_t v21 = sub_253B055C0();
  sub_253465998();
  MEMORY[0x270FA5388](v22);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v23);
  sub_2534D97C0();
  uint64_t v24 = *(void *)(v6 + 48);
  uint64_t v25 = *(void *)(v6 + 56);
  swift_bridgeObjectRetain();
  sub_25395DEE0(v24, v25);
  if (v4)
  {
    sub_253A72E68();
    swift_bridgeObjectRelease();
  }
  else
  {
    v34[5] = v0;
    v34[6] = v21;
    swift_bridgeObjectRelease();
    sub_253B05560();
    swift_bridgeObjectRelease();
    sub_25395D974();
    sub_253472458(v1, (uint64_t *)&unk_26B248CB0);
    uint64_t v27 = *(void *)(v6 + 64);
    uint64_t v26 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_25395DEE0(v27, v26);
    v34[2] = v29;
    v34[3] = v28;
    swift_bridgeObjectRelease();
    uint64_t v30 = *(void *)v6;
    v34[0] = *(void *)(v6 + 32);
    v34[1] = v30;
    v34[4] = v3;
    sub_2534AF234();
    v31();
    if (*(unsigned char *)(v6 + 16))
    {
      if (*(unsigned char *)(v6 + 16) == 1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_253B075B0();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_253B07580();
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_253B07550();
    }
    sub_2534D8E14();
    v32();
    sub_253B08070();
    sub_253A72E68();
    sub_2534D91A0();
    v33();
  }
  sub_2534847C8();
}

uint64_t QueryDecorationCaller.init(transcript:)(unsigned char *a1)
{
  if (!*a1) {
    return sub_253B07550();
  }
  if (*a1 == 1) {
    return sub_253B075B0();
  }
  return sub_253B07580();
}

void sub_253A7100C(void *a1@<X8>)
{
  QueryDecorationInput.init(transcript:)();
  if (!v1) {
    *a1 = v3;
  }
}

void ContextProtoQueryDecorationInput.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_2534847F8();
  uint64_t v15 = v14;
  uint64_t v33 = v16;
  sub_253B055C0();
  sub_253465998();
  MEMORY[0x270FA5388](v17);
  sub_2534B33AC();
  uint64_t v18 = sub_253B08100();
  uint64_t v19 = sub_25346CB4C(v18);
  MEMORY[0x270FA5388](v19);
  sub_2534B34A4();
  uint64_t v20 = sub_253B08080();
  uint64_t v34 = v21;
  uint64_t v22 = sub_253B080B0();
  uint64_t v35 = v23;
  sub_253B08090();
  ContextProtoQueryDecorationCaller.init(handwritten:)();
  if (v13)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_253B080A0();
    uint64_t v31 = sub_253B05570();
    uint64_t v32 = v24;
    sub_25351C3E8();
    v25();
    uint64_t v26 = sub_253B08050();
    uint64_t v28 = v27;
    uint64_t v29 = sub_253B08060();
    sub_253A6A320(v29);
    uint64_t v30 = sub_253578A1C();
    type metadata accessor for ContextProtoQueryDecorationInput(v30);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();

    *(void *)uint64_t v33 = v20;
    *(void *)(v33 + 8) = v34;
    *(unsigned char *)(v33 + 16) = a13;
    *(void *)(v33 + 40) = v35;
    *(void *)(v33 + 48) = v31;
    *(void *)(v33 + 56) = v32;
    *(void *)(v33 + 64) = v26;
    *(void *)(v33 + 72) = v28;
    *(void *)(v33 + 24) = v15;
    *(void *)(v33 + 32) = v22;
  }
  sub_253A3C6AC();
  sub_2534847C8();
}

void ContextProtoQueryDecorationCaller.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v13 = v0;
  sub_253B08100();
  sub_253465998();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v4);
  sub_2534B347C();
  sub_2534D9A44();
  sub_2534AF234();
  v5();
  sub_253B07550();
  sub_253A72C8C(&qword_269CE85C8, MEMORY[0x263F4E6D0]);
  char v6 = sub_253A737C8();
  uint64_t v7 = *(void (**)(void))(v2 + 8);
  sub_2534D9A08();
  v7();
  if (v6)
  {
    sub_2534D9A08();
    v7();
    sub_2534D9A08();
    v7();
    char v8 = 0;
  }
  else
  {
    sub_253B075B0();
    char v9 = sub_253A737C8();
    sub_2534D9A08();
    v7();
    if (v9)
    {
      sub_2534D9A08();
      v7();
      sub_2534D9A08();
      v7();
      char v8 = 1;
    }
    else
    {
      sub_253B07580();
      char v10 = sub_253A737C8();
      sub_2534D9A08();
      v7();
      sub_2534D9A08();
      v7();
      if ((v10 & 1) == 0)
      {
        sub_25394EA00();
        uint64_t v11 = sub_2534D969C();
        sub_253A73408(v11, v12);
        sub_2534D9A08();
        v7();
        goto LABEL_8;
      }
      sub_2534D9A08();
      v7();
      char v8 = 2;
    }
  }
  *uint64_t v13 = v8;
LABEL_8:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_253A713E8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  ContextProtoQueryDecorationInput.init(handwritten:)(*a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

uint64_t QueryDecorationCoreService.init(transcript:)()
{
  sub_253A736C0();
  sub_253B08200();
  sub_25346CAF4();
  uint64_t v0 = sub_253A7327C();
  return v1(v0);
}

uint64_t sub_253A714DC(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_253A71534(a1, a2, a3, (uint64_t (*)(char *))QueryDecorationCoreService.init(transcript:));
}

uint64_t sub_253A71508(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_253A71534(a1, a2, a3, QueryDecorationCaller.init(transcript:));
}

uint64_t sub_253A71534(char *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  char v5 = *a1;
  return a4(&v5);
}

void sub_253A7156C()
{
}

void ContextProtoQueryDecorationCoreService.init(handwritten:)()
{
  sub_253A733C8();
  sub_253B08200();
  sub_253465998();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  char v5 = sub_253A730DC(v4, v15);
  v6(v5);
  uint64_t v7 = sub_253A731CC();
  int v9 = v8(v7);
  if (v9 == *MEMORY[0x263F4E730])
  {
    char v10 = 0;
  }
  else if (v9 == *MEMORY[0x263F4E748])
  {
    char v10 = 1;
  }
  else if (v9 == *MEMORY[0x263F4E740])
  {
    char v10 = 2;
  }
  else if (v9 == *MEMORY[0x263F4E750])
  {
    char v10 = 3;
  }
  else if (v9 == *MEMORY[0x263F4E738])
  {
    char v10 = 4;
  }
  else
  {
    if (v9 != *MEMORY[0x263F4E758])
    {
      sub_25394EA00();
      uint64_t v12 = sub_2534D969C();
      sub_253A73408(v12, v13);
      uint64_t v14 = *(void (**)(void))(v2 + 8);
      sub_2535B3940();
      v14();
      sub_2535B3940();
      v14();
      goto LABEL_14;
    }
    char v10 = 5;
  }
  sub_2535B3940();
  v11();
  *uint64_t v0 = v10;
LABEL_14:
  sub_253A73850();
}

void sub_253A716F0()
{
}

uint64_t QueryDecorationOutput.init(transcript:)(unsigned char *a1)
{
  uint64_t v5 = sub_253462A5C(&qword_269CDFA00);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_2534B34A4();
  uint64_t v7 = sub_253462A5C(&qword_269CDBB30);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_253465A3C();
  if (a1[8] == 1)
  {
    uint64_t v9 = swift_bridgeObjectRetain();
    sub_2539507F4(v9, v10, v11, v12, v13, v14, v15, v16, v51, v52);
    if (v2)
    {
      sub_253A72E68();
      return v1;
    }
  }
  if (a1[24] == 1)
  {
    uint64_t v17 = swift_bridgeObjectRetain();
    sub_253950474(v17, v18, v19, v20, v21, v22, v23, v24, v51, (uint64_t)v52);
    if (v2)
    {
      sub_253A72E68();
LABEL_12:
      swift_bridgeObjectRelease();
      return v1;
    }
  }
  if (a1[40] == 1)
  {
    uint64_t v25 = swift_bridgeObjectRetain();
    sub_253950474(v25, v26, v27, v28, v29, v30, v31, v32, v51, (uint64_t)v52);
    if (v2)
    {
      sub_253A72E68();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
  }
  uint64_t DecorationOutput = type metadata accessor for ContextProtoQueryDecorationOutput(0);
  sub_253961F60((uint64_t)&a1[*(int *)(DecorationOutput + 104)], v3, &qword_269CDFA00);
  sub_25396239C();
  sub_25395B33C();
  if (v2)
  {
    sub_253A72E68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (a1[152] == 1)
  {
    uint64_t v35 = swift_bridgeObjectRetain();
    sub_253957884(v35, v36, v37, v38, v39, v40, v41, v42, v51, v52);
  }
  if (a1[168] == 1)
  {
    uint64_t v43 = swift_bridgeObjectRetain();
    sub_253950474(v43, v44, v45, v46, v47, v48, v49, v50, v51, (uint64_t)v52);
  }
  uint64_t v1 = sub_253B08150();
  sub_253A72E68();
  return v1;
}

uint64_t sub_253A71A24@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = QueryDecorationOutput.init(transcript:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void ContextProtoQueryDecorationOutput.init(handwritten:)()
{
  sub_2534847F8();
  sub_253A73DCC();
  uint64_t v4 = sub_253462A5C(&qword_269CDBB30);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_2534B34A4();
  uint64_t v6 = sub_253462A5C(&qword_269CDFA00);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v55 - v9;
  uint64_t v11 = sub_253B08160();
  uint64_t v19 = MEMORY[0x263F8EE78];
  if (!v11) {
    uint64_t v11 = MEMORY[0x263F8EE78];
  }
  sub_253A6302C(v11, v12, v13, v14, v15, v16, v17, v18, v55, v56);
  if (v0)
  {
  }
  else
  {
    uint64_t v21 = v20;
    uint64_t v22 = sub_253B08160();
    if (v22) {
      swift_bridgeObjectRelease();
    }
    uint64_t v23 = sub_253B08120();
    sub_253A73AF8(v23, v24, v25, v26, v27, v28, v29, v30, v55, (uint64_t)v56);
    uint64_t v62 = v2;
    uint64_t v63 = v31;
    uint64_t v32 = sub_253B08120();
    if (v32) {
      swift_bridgeObjectRelease();
    }
    uint64_t v33 = sub_253B08130();
    sub_253A73AF8(v33, v34, v35, v36, v37, v38, v39, v40, v55, (uint64_t)v56);
    uint64_t v60 = v21;
    uint64_t v61 = v41;
    uint64_t v42 = sub_253B08130();
    if (v42) {
      swift_bridgeObjectRelease();
    }
    sub_253B08110();
    sub_25396239C();
    sub_25395F808();
    uint64_t v43 = sub_253B08140();
    if (!v43) {
      uint64_t v43 = v19;
    }
    uint64_t v59 = sub_253A6B5B4(v43);
    uint64_t v44 = sub_253B08140();
    if (v44) {
      swift_bridgeObjectRelease();
    }
    uint64_t v45 = sub_253B08170();
    sub_253A73AF8(v45, v46, v47, v48, v49, v50, v51, v52, v55, (uint64_t)v56);
    uint64_t v58 = v53;
    uint64_t v54 = sub_253B08170();
    if (v54)
    {
      uint64_t v57 = v54;
      swift_bridgeObjectRelease();
      uint64_t v54 = v57;
    }
    HIDWORD(v56) = v54 != 0;
    LODWORD(v57) = v32 != 0;
    sub_253961F60((uint64_t)v10, v3, &qword_269CDFA00);
    ContextProtoQueryDecorationOutput.init(spans:spansIsPresent:requiredContext:requiredContextIsPresent:utteranceContext:utteranceContextIsPresent:originalRankedTools:originalRankedToolsIsPresent:adjustedRankedTools:adjustedRankedToolsIsPresent:originalRankedSpans:originalRankedSpansIsPresent:adjustedRankedSpans:adjustedRankedSpansIsPresent:originalRankedUtteranceContext:originalRankedUtteranceContextIsPresent:adjustedRankedUtteranceContext:adjustedRankedUtteranceContextIsPresent:toolRetrievalResponse:dynamicEnumerationEntities:dynamicEnumerationEntitiesIsPresent:context:contextIsPresent:)(v60, v22 != 0, v63, v57, v61, v42 != 0, v19, 0, v62, v19, 0, v19, 0, v19, 0, v19, 0, v19, 0,
      v3,
      v59,
      v44 != 0,
      v58,
      SBYTE4(v56));

    sub_253472458((uint64_t)v10, &qword_269CDFA00);
  }
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_253A71D50()
{
}

uint64_t sub_253A71D74(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || -(-1 << *(unsigned char *)(a4 + 32)) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 64 + (((unint64_t)result >> 3) & 0x1FFFFFFFFFFFFFF8)) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return sub_253B09F70();
  }
LABEL_8:
  __break(1u);
  return result;
}

void sub_253A71DF4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
}

unint64_t sub_253A71E24()
{
  unint64_t result = qword_269CE85D0;
  if (!qword_269CE85D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE85D0);
  }
  return result;
}

_UNKNOWN **sub_253A71E70()
{
  return &protocol witness table for ContextProtoRetrievedContext;
}

uint64_t sub_253A71E7C(uint64_t a1)
{
  uint64_t result = sub_253A72C8C(&qword_269CE85D8, MEMORY[0x263F4E500]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253A71ED4()
{
  return sub_253A72C8C(&qword_269CDF9E0, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedContext);
}

_UNKNOWN **sub_253A71F1C()
{
  return &protocol witness table for ContextProtoContextMetadata;
}

uint64_t sub_253A71F28(uint64_t a1)
{
  uint64_t result = sub_253A72C8C(&qword_269CE85E0, MEMORY[0x263F4E4C0]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253A71F80()
{
  return sub_253A72C8C(&qword_269CDFBE8, (void (*)(uint64_t))type metadata accessor for ContextProtoContextMetadata);
}

_UNKNOWN **sub_253A71FC8()
{
  return &protocol witness table for ContextProtoStructuredContext;
}

uint64_t sub_253A71FD4(uint64_t a1)
{
  uint64_t result = sub_253A72C8C(&qword_269CE85E8, MEMORY[0x263F4E680]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253A7202C()
{
  return sub_253A72C8C(&qword_269CDFC58, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContext);
}

_UNKNOWN **sub_253A72074()
{
  return &protocol witness table for ContextProtoConfidence;
}

uint64_t sub_253A72080(uint64_t a1)
{
  uint64_t result = sub_253A72C8C(&qword_269CE85F0, MEMORY[0x263F4E1C0]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253A720D8()
{
  return sub_253A72C8C(&qword_269CDFC40, (void (*)(uint64_t))type metadata accessor for ContextProtoConfidence);
}

_UNKNOWN **sub_253A72120()
{
  return &protocol witness table for ContextProtoContextualEntityDisplayRepresentation;
}

uint64_t sub_253A7212C(uint64_t a1)
{
  uint64_t result = sub_253A72C8C(&qword_269CE85F8, MEMORY[0x263F4E798]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253A72184()
{
  return sub_253A72C8C(&qword_269CDFC00, (void (*)(uint64_t))type metadata accessor for ContextProtoContextualEntityDisplayRepresentation);
}

_UNKNOWN **sub_253A721CC()
{
  return &protocol witness table for ContextProtoBoundingBox;
}

uint64_t sub_253A721D8(uint64_t a1)
{
  uint64_t result = sub_253A72C8C(&qword_269CE8600, MEMORY[0x263F4E1F8]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253A72230()
{
  return sub_253A72C8C(&qword_269CDFC18, (void (*)(uint64_t))type metadata accessor for ContextProtoBoundingBox);
}

_UNKNOWN **sub_253A72278()
{
  return &protocol witness table for ContextProtoSurroundingText;
}

uint64_t sub_253A72284(uint64_t a1)
{
  uint64_t result = sub_253A72C8C(&qword_269CE8608, MEMORY[0x263F4E4D0]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253A722DC()
{
  return sub_253A72C8C(&qword_269CDF910, (void (*)(uint64_t))type metadata accessor for ContextProtoSurroundingText);
}

_UNKNOWN **sub_253A72324()
{
  return &protocol witness table for ContextProtoRetrievedTool.Definition;
}

uint64_t sub_253A72330(uint64_t a1)
{
  uint64_t result = sub_253A72C8C(&qword_269CE8610, MEMORY[0x263F4E448]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253A72388()
{
  return sub_253A72C8C(&qword_269CDFD70, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool.Definition);
}

_UNKNOWN **sub_253A723D0()
{
  return &protocol witness table for ContextProtoUIControlTool;
}

uint64_t sub_253A723DC(uint64_t a1)
{
  uint64_t result = sub_253A72C8C(&qword_269CE8618, MEMORY[0x263F4E4B8]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253A72434()
{
  return sub_253A72C8C(&qword_269CDFD88, (void (*)(uint64_t))type metadata accessor for ContextProtoUIControlTool);
}

_UNKNOWN **sub_253A7247C()
{
  return &protocol witness table for ContextProtoRetrievedTool;
}

uint64_t sub_253A72488(uint64_t a1)
{
  uint64_t result = sub_253A72C8C(&qword_269CE8620, MEMORY[0x263F4E490]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253A724E0()
{
  return sub_253A72C8C(&qword_269CDFAD0, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool);
}

_UNKNOWN **sub_253A72528()
{
  return &protocol witness table for ContextProtoToolQueryOutput;
}

uint64_t sub_253A72534(uint64_t a1)
{
  uint64_t result = sub_253A72C8C(&qword_269CE8628, (void (*)(uint64_t))type metadata accessor for ToolQuery.Output);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253A7258C()
{
  return sub_253A72C8C(&qword_269CDFDD8, (void (*)(uint64_t))type metadata accessor for ContextProtoToolQueryOutput);
}

_UNKNOWN **sub_253A725D4()
{
  return &protocol witness table for ContextProtoQueryDecorationToolRetrievalResponse;
}

uint64_t sub_253A725E0(uint64_t a1)
{
  uint64_t result = sub_253A72C8C(&qword_269CE8630, MEMORY[0x263F4E778]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253A72638()
{
  return sub_253A72C8C(&qword_269CDFDF0, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
}

_UNKNOWN **sub_253A72680()
{
  return &protocol witness table for ContextProtoDynamicEnumerationEntity;
}

uint64_t sub_253A7268C(uint64_t a1)
{
  uint64_t result = sub_253A72C8C(&qword_269CE8638, MEMORY[0x263F4E710]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253A726E4()
{
  return sub_253A72C8C(&qword_269CDF9F0, (void (*)(uint64_t))type metadata accessor for ContextProtoDynamicEnumerationEntity);
}

_UNKNOWN **sub_253A7272C()
{
  return &protocol witness table for ContextProtoToolRetrievalType;
}

uint64_t sub_253A72738(uint64_t a1)
{
  uint64_t result = sub_253A72C8C(&qword_269CE8640, MEMORY[0x263F4E688]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253A72790()
{
  return sub_253A72C8C(&qword_269CDFAD8, (void (*)(uint64_t))type metadata accessor for ContextProtoToolRetrievalType);
}

_UNKNOWN **sub_253A727D8()
{
  return &protocol witness table for ContextProtoSampleInvocation;
}

uint64_t sub_253A727E4(uint64_t a1)
{
  uint64_t result = sub_253A72C8C(&qword_269CE8648, MEMORY[0x263F4E520]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253A7283C()
{
  return sub_253A72C8C(&qword_269CDFA48, (void (*)(uint64_t))type metadata accessor for ContextProtoSampleInvocation);
}

_UNKNOWN **sub_253A72884()
{
  return &protocol witness table for ContextProtoSpanMatchedEntity;
}

uint64_t sub_253A72890(uint64_t a1)
{
  uint64_t result = sub_253A72C8C(&qword_269CE8650, MEMORY[0x263F4E598]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253A728E8()
{
  return sub_253A72C8C(&qword_269CDF9E8, (void (*)(uint64_t))type metadata accessor for ContextProtoSpanMatchedEntity);
}

_UNKNOWN **sub_253A72930()
{
  return &protocol witness table for ContextProtoEntityMatch;
}

uint64_t sub_253A7293C(uint64_t a1)
{
  uint64_t result = sub_253A72C8C(&qword_269CE8658, MEMORY[0x263F4E318]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253A72994()
{
  return sub_253A72C8C(&qword_269CDFAE8, (void (*)(uint64_t))type metadata accessor for ContextProtoEntityMatch);
}

_UNKNOWN **sub_253A729DC()
{
  return &protocol witness table for ContextProtoMatchProperties;
}

uint64_t sub_253A729E8(uint64_t a1)
{
  uint64_t result = sub_253A72C8C(&qword_269CE8660, MEMORY[0x263F4E4C8]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253A72A40()
{
  return sub_253A72C8C(&qword_269CDFE28, (void (*)(uint64_t))type metadata accessor for ContextProtoMatchProperties);
}

_UNKNOWN **sub_253A72A88()
{
  return &protocol witness table for ContextProtoAliasTypes;
}

uint64_t sub_253A72A94(uint64_t a1)
{
  uint64_t result = sub_253A72C8C(&qword_269CE8668, MEMORY[0x263F4E1A0]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253A72AEC()
{
  return sub_253A72C8C(&qword_269CDFE40, (void (*)(uint64_t))type metadata accessor for ContextProtoAliasTypes);
}

_UNKNOWN **sub_253A72B34()
{
  return &protocol witness table for ContextProtoQueryDecorationInput;
}

uint64_t sub_253A72B40(uint64_t a1)
{
  uint64_t result = sub_253A72C8C(&qword_269CE8670, MEMORY[0x263F4E690]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253A72B98()
{
  return sub_253A72C8C(&qword_269CDFD28, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationInput);
}

_UNKNOWN **sub_253A72BE0()
{
  return &protocol witness table for ContextProtoQueryDecorationOutput;
}

uint64_t sub_253A72BEC(uint64_t a1)
{
  uint64_t result = sub_253A72C8C(&qword_269CE8678, MEMORY[0x263F4E6E8]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253A72C44()
{
  return sub_253A72C8C(&qword_269CDFD10, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationOutput);
}

uint64_t sub_253A72C8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of ConvertibleFromContextProtocol.init(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for ContextConversion()
{
  return &type metadata for ContextConversion;
}

unsigned char *storeEnumTagSinglePayload for ContextConversion.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253A72DD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContextConversion.Error()
{
  return &type metadata for ContextConversion.Error;
}

uint64_t sub_253A72E10(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_253578A1C();
  v4(v3);
  sub_25346CAF4();
  sub_2534B3428();
  v5();
  return a2;
}

uint64_t sub_253A72E68()
{
  uint64_t v1 = sub_2534D9690();
  v2(v1);
  sub_25346CAF4();
  sub_2534659CC();
  v3();
  return v0;
}

uint64_t sub_253A72EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_253578A1C();
  v4(v3);
  sub_25346CAF4();
  sub_2534D8E14();
  v5();
  return a2;
}

unint64_t *sub_253A72F10(unint64_t *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v5 = *(void *)(*(void *)(a5 + 48) + 16 * a2);
    unint64_t v6 = *(void *)(*(void *)(a5 + 56) + 8 * a2);
    *uint64_t result = v6;
    swift_bridgeObjectRetain();
    sub_2534C1C84(v6);
    return (unint64_t *)v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

void sub_253A72FA4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
}

void sub_253A72FD0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, void (*a7)(void), void (*a8)(void))
{
  if (a3 < 0 || 1 << *(unsigned char *)(a6 + 32) <= a3)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(void *)(a6 + 8 * ((unint64_t)a3 >> 6) + 64) >> a3) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(a6 + 36) != a4)
  {
LABEL_10:
    __break(1u);
    return;
  }
  a7(0);
  sub_25346CAF4();
  sub_2534B3428();
  v12();
  uint64_t v13 = *(void *)(a6 + 56);
  a8(0);
  sub_25346CAF4();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  uint64_t v17 = v13 + *(void *)(v15 + 72) * a3;
  v16(a2, v17, v14);
}

char *sub_253A730DC@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_253A73140()
{
  return *(void *)(v0 - 160);
}

uint64_t sub_253A73194()
{
  uint64_t v4 = *(void *)(v0 + 16);
  *(void *)(v2 - 136) = v0
                        + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  *(void *)(v2 - 128) = v4;
  *(void *)(v2 - 144) = v1 + 8;
  return swift_bridgeObjectRetain();
}

uint64_t sub_253A731CC()
{
  return v0;
}

uint64_t sub_253A731E8()
{
  *(void *)(v0 + 16) = v1;
  return *(void *)(v2 - 112);
}

unsigned char *sub_253A73210()
{
  uint64_t v2 = *(unsigned char **)(v1 - 144);
  uint64_t v3 = &v2[*(int *)(*(void *)(v1 - 96) + 48)];
  *uint64_t v2 = v0;
  return v3;
}

uint64_t sub_253A73238()
{
  uint64_t result = v1;
  *(void *)(v2 - 208) = *v0;
  return result;
}

uint64_t sub_253A73258()
{
  return v0;
}

uint64_t sub_253A7327C()
{
  return v0;
}

void sub_253A73290()
{
  sub_253522C08();
}

void sub_253A732B4()
{
  sub_253522C08();
}

uint64_t sub_253A732D8(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, 0, 1, a1);
  uint64_t v5 = *(void *)(v3 - 168);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v5, 1, 1, v1);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v5 + *(int *)(*(void *)(v3 - 152) + 20), 1, 1, a1);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253A73350(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, 0, 1, a1);
  uint64_t v5 = *(void *)(v3 - 168);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v5, 1, 1, v1);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v5 + *(int *)(*(void *)(v3 - 152) + 20), 1, 1, a1);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253A733C8()
{
  return 0;
}

uint64_t sub_253A733DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 - 216) = a3;
  return sub_253B09F20();
}

uint64_t sub_253A73408(uint64_t a1, unsigned char *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

uint64_t sub_253A73434()
{
  return *(void *)(v0 - 152);
}

uint64_t sub_253A7346C()
{
  return *(void *)(v0 - 120);
}

uint64_t sub_253A73498(uint64_t a1, unsigned char *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

uint64_t sub_253A734D0()
{
  return sub_253B096B0();
}

uint64_t sub_253A734F4()
{
  return MEMORY[0x270F9E730](v1, v0, v2);
}

void sub_253A73510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 160) = (char *)&a9 - v9;
}

uint64_t sub_253A73528()
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(*(void *)(v1 - 616) + *(int *)(*(void *)(v1 - 600) + 20), 1, 1, v0);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253A735B4(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v1);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, 1, 1, v1);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253A73604()
{
  return v0;
}

uint64_t sub_253A73610(uint64_t result)
{
  *uint64_t v1 = (result & 1) == 0;
  return result;
}

uint64_t sub_253A73620(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v1);
}

BOOL sub_253A7363C@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_253A73654()
{
  return v0;
}

uint64_t sub_253A7368C(uint64_t a1)
{
  return sub_253A72EB8(a1, v1);
}

uint64_t sub_253A736C0()
{
  return 0;
}

uint64_t sub_253A736CC()
{
  uint64_t result = v1;
  *(void *)(v2 - 112) = v0;
  return result;
}

uint64_t sub_253A7371C()
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 0, 1, v0);
}

void sub_253A73764()
{
  *(void *)(v2 - 96) = v1;
  *(void *)(v2 - 168) = v0;
}

void sub_253A73774(uint64_t a1@<X8>)
{
  *(void *)(a1 + 64) |= v1;
}

uint64_t sub_253A737A8()
{
  uint64_t v4 = v2 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  uint64_t v5 = *(void *)(v1 + 72);
  *(void *)(v3 - 96) = v0;
  return v4 + v5 * v0;
}

uint64_t sub_253A737C8()
{
  return sub_253B096B0();
}

uint64_t sub_253A737E8()
{
  return 0;
}

void sub_253A737FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 120) = (char *)&a9 - v9;
}

void sub_253A73810()
{
  uint64_t v2 = *(void *)(v1 - 112);
  *uint64_t v0 = *(void *)(v1 - 104);
  v0[1] = v2;
  uint64_t v3 = *(void *)(v1 - 128);
  v0[2] = *(void *)(v1 - 120);
  v0[3] = v3;
}

uint64_t sub_253A7382C()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_253A7385C(uint64_t a1, uint64_t a2)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, a2, 1, v2);
}

uint64_t sub_253A73874(uint64_t a1, uint64_t a2)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, a2, 1, v2);
}

uint64_t sub_253A7388C(uint64_t a1, uint64_t a2)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, a2, 1, v2);
}

void sub_253A738B0()
{
  *(void *)(v0 + 16) = v1;
}

uint64_t sub_253A738D8()
{
  return v0;
}

uint64_t sub_253A738E4(uint64_t a1)
{
  return sub_253961F14(a1, v1, v2);
}

void sub_253A738FC()
{
  uint64_t v3 = *(void *)(v0 - 256);
  *(void *)(v2 - 112) = v3 + 16;
  *(void *)(v2 - 192) = v3 + 8;
  *(void *)(v2 - 184) = v1 + 16;
}

void sub_253A73924(uint64_t a1@<X8>)
{
  *(void *)(v1 - 264) = a1;
}

uint64_t sub_253A7396C()
{
  return sub_253B09F30();
}

uint64_t sub_253A73988()
{
  return sub_253B059D0();
}

uint64_t sub_253A739A4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_253A739CC()
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 0, 1, v0);
}

void sub_253A739FC()
{
  sub_2539E689C();
}

void sub_253A73A20()
{
  sub_2539E6900();
}

void sub_253A73A44()
{
  sub_2539E738C();
}

void sub_253A73A68()
{
  sub_2539E7794();
}

void sub_253A73A8C()
{
  sub_2539E6C20();
}

void sub_253A73AB0()
{
  sub_2539E670C();
}

void sub_253A73AD4()
{
  sub_2539E74B8();
}

void sub_253A73AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (!a1) {
    a1 = v10;
  }
  sub_253A59C0C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void sub_253A73B14()
{
  sub_2539E7924();
}

void sub_253A73B38()
{
  sub_2539E785C();
}

void sub_253A73B5C()
{
  sub_2539E7328();
}

void sub_253A73B80()
{
  sub_2539E6900();
}

void sub_253A73BA4()
{
  sub_2539E689C();
}

void sub_253A73BC8()
{
  sub_2539E7794();
}

void sub_253A73BEC()
{
  sub_2539E6C20();
}

void sub_253A73C10()
{
  sub_2539E69C8();
}

void sub_253A73C34()
{
  sub_2539E738C();
}

void sub_253A73C58()
{
  sub_2539E6BBC();
}

void sub_253A73C7C()
{
  sub_2539E7988();
}

void sub_253A73CA0()
{
  sub_2539E66A8();
}

void sub_253A73CC4()
{
  sub_2539E6838();
}

void sub_253A73CE8()
{
  sub_2539E7668();
}

void sub_253A73D0C()
{
  sub_2539E67D4();
}

void sub_253A73D30()
{
  sub_2539E670C();
}

void sub_253A73D54()
{
  sub_2539E6A90();
}

void sub_253A73D78()
{
  sub_2539E74B8();
}

uint64_t sub_253A73DB4()
{
  return *(void *)(v0 + 56) + *(void *)(*(void *)(v2 - 336) + 72) * v1;
}

uint64_t sub_253A73DDC()
{
  return *(void *)(v0 - 256);
}

uint64_t sub_253A73E04()
{
  return v0;
}

uint64_t sub_253A73E7C@<X0>(uint64_t a1@<X8>)
{
  return sub_25395DE64(a1 | ((unint64_t)v1 << 32));
}

uint64_t sub_253A73E98(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = v2;
  *(void *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 16) = 0;
  return swift_willThrow();
}

uint64_t sub_253A73EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_253A72EB8(a1, v3);
}

uint64_t sub_253A73ED0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_253A73F14()
{
  return sub_253A72E68();
}

uint64_t sub_253A73F2C()
{
  return v0;
}

uint64_t sub_253A73F38()
{
  return sub_253A72E68();
}

uint64_t sub_253A73F50()
{
  return swift_bridgeObjectRelease();
}

void sub_253A73F68()
{
  *(void *)(v1 - 256) = v0;
}

uint64_t sub_253A73F88()
{
  return 0;
}

uint64_t sub_253A73FB0()
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, v0);
}

uint64_t sub_253A73FDC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_253A74014()
{
  return *(void *)(v0 - 432);
}

uint64_t sub_253A74044()
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, v0);
}

uint64_t sub_253A74064()
{
  return v0;
}

uint64_t sub_253A74078()
{
  return v0;
}

uint64_t sub_253A74084(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 0, 1, a1);
}

uint64_t sub_253A740A4()
{
  return type metadata accessor for TranscriptProtoStatementID(0);
}

uint64_t sub_253A740C4()
{
  return v0;
}

uint64_t sub_253A740D8()
{
  return v0;
}

uint64_t sub_253A740EC()
{
  uint64_t v2 = *(void *)(v0 - 120);
  return ToolDefinition.init(transcript:)(v2);
}

uint64_t sub_253A74118()
{
  return *(void *)(v0 - 320);
}

uint64_t sub_253A74140()
{
  uint64_t v3 = *(void *)(v1 - 224);
  return sub_253A72E10(v0, v3);
}

uint64_t sub_253A74160()
{
  return v0;
}

uint64_t sub_253A74174()
{
  return 0;
}

uint64_t sub_253A74194()
{
  return 0;
}

void sub_253A741A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 200) = (char *)&a9 - v9;
}

uint64_t Array<A>.init<A>(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_253462A5C(&qword_26B24A590);
  sub_25394D850();
  if (!v3)
  {
    sub_253B09B80();
    swift_getWitnessTable();
    a2 = sub_253B09B90();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
  return a2;
}

uint64_t sub_253A74324(uint64_t a1, unint64_t a2)
{
  return sub_253A7433C(a1, a2);
}

uint64_t sub_253A7433C(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for ResponseGenerationProtoResponseGenerationInput(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718((unint64_t *)&qword_269CE03C8, (void (*)(uint64_t))type metadata accessor for ResponseGenerationProtoResponseGenerationInput);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for ResponseGenerationProtoResponseGenerationInput);
  ResponseGenerationInput.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for ResponseGenerationProtoResponseGenerationInput);
}

uint64_t sub_253A74530(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE0350, (void (*)(uint64_t))type metadata accessor for ResponseGenerationProtoStatementResultDigest);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for ResponseGenerationProtoStatementResultDigest);
  StatementResultDigest.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for ResponseGenerationProtoStatementResultDigest);
}

uint64_t sub_253A74724(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for ContextProtoRetrievedContext(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CDF9E0, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedContext);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoRetrievedContext);
  RetrievedContext.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for ContextProtoRetrievedContext);
}

uint64_t sub_253A74918(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for ContextProtoContextMetadata(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CDFBE8, (void (*)(uint64_t))type metadata accessor for ContextProtoContextMetadata);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoContextMetadata);
  ContextMetadata.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for ContextProtoContextMetadata);
}

uint64_t sub_253A74B0C(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for ContextProtoStructuredContext(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CDFC58, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContext);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoStructuredContext);
  StructuredContext.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for ContextProtoStructuredContext);
}

uint64_t sub_253A74D00@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v24 = a3;
  uint64_t v6 = sub_253B07600();
  uint64_t v20 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253B071D0();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = type metadata accessor for ContextProtoConfidence(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v19 - v14;
  uint64_t v23 = 0;
  long long v21 = 0u;
  long long v22 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CDFC40, (void (*)(uint64_t))type metadata accessor for ContextProtoConfidence);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  uint64_t v17 = v20;
  uint64_t v18 = v24;
  sub_253A8E760((uint64_t)v15, (uint64_t)v13, (void (*)(void))type metadata accessor for ContextProtoConfidence);
  sub_253B075D0();
  sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for ContextProtoConfidence);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v18, v8, v6);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v15, (void (*)(void))type metadata accessor for ContextProtoConfidence);
}

uint64_t sub_253A74FB4(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for ContextProtoContextualEntityDisplayRepresentation(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v15 - v10;
  uint64_t v16 = 0;
  memset(v15, 0, sizeof(v15));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CDFC00, (void (*)(uint64_t))type metadata accessor for ContextProtoContextualEntityDisplayRepresentation);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoContextualEntityDisplayRepresentation);
  uint64_t v13 = *v9;
  uint64_t v14 = v9[1];
  swift_bridgeObjectRetain();
  sub_25395DEE0(v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_253B08280();
  sub_253A8E7B4((uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoContextualEntityDisplayRepresentation);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for ContextProtoContextualEntityDisplayRepresentation);
}

uint64_t sub_253A75230(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for ContextProtoBoundingBox(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (unsigned int *)((char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v17 - v10;
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CDFC18, (void (*)(uint64_t))type metadata accessor for ContextProtoBoundingBox);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoBoundingBox);
  uint64_t v13 = *v9;
  LOBYTE(v17[0]) = *((unsigned char *)v9 + 4);
  sub_25395DE64(v13 | ((unint64_t)LOBYTE(v17[0]) << 32));
  uint64_t v14 = v9[2];
  LOBYTE(v17[0]) = *((unsigned char *)v9 + 12);
  sub_25395DE64(v14 | ((unint64_t)LOBYTE(v17[0]) << 32));
  uint64_t v15 = v9[4];
  LOBYTE(v17[0]) = *((unsigned char *)v9 + 20);
  sub_25395DE64(v15 | ((unint64_t)LOBYTE(v17[0]) << 32));
  uint64_t v16 = v9[6];
  LOBYTE(v17[0]) = *((unsigned char *)v9 + 28);
  sub_25395DE64(v16 | ((unint64_t)LOBYTE(v17[0]) << 32));
  sub_253B07620();
  sub_253A8E7B4((uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoBoundingBox);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for ContextProtoBoundingBox);
}

uint64_t sub_253A754EC(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for ContextProtoSurroundingText(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CDF910, (void (*)(uint64_t))type metadata accessor for ContextProtoSurroundingText);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoSurroundingText);
  SurroundingText.init(transcript:)(v9);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for ContextProtoSurroundingText);
}

uint64_t sub_253A756E0(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CDFD70, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool.Definition);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.Definition);
  RetrievedTool.Definition.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.Definition);
}

uint64_t sub_253A758D4(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for ContextProtoUIControlTool(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CDFD88, (void (*)(uint64_t))type metadata accessor for ContextProtoUIControlTool);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoUIControlTool);
  UIControlTool.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for ContextProtoUIControlTool);
}

uint64_t sub_253A75AC8(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for ContextProtoRetrievedTool(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CDFAD0, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool);
  RetrievedTool.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool);
}

uint64_t sub_253A75CBC(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t Output = type metadata accessor for ContextProtoToolQueryOutput(0);
  uint64_t v7 = MEMORY[0x270FA5388](Output);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CDFDD8, (void (*)(uint64_t))type metadata accessor for ContextProtoToolQueryOutput);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoToolQueryOutput);
  ToolQuery.Output.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for ContextProtoToolQueryOutput);
}

uint64_t sub_253A75EB0(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  uint64_t v7 = MEMORY[0x270FA5388](DecorationToolRetrievalResponse);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CDFDF0, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
  QueryDecorationToolRetrievalResponse.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
}

uint64_t sub_253A760A4(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CDF9F0, (void (*)(uint64_t))type metadata accessor for ContextProtoDynamicEnumerationEntity);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoDynamicEnumerationEntity);
  DynamicEnumerationEntity.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for ContextProtoDynamicEnumerationEntity);
}

uint64_t sub_253A76298(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for ContextProtoToolRetrievalType(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CDFAD8, (void (*)(uint64_t))type metadata accessor for ContextProtoToolRetrievalType);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoToolRetrievalType);
  ToolRetrievalType.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for ContextProtoToolRetrievalType);
}

uint64_t sub_253A7648C(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for ContextProtoSampleInvocation(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CDFA48, (void (*)(uint64_t))type metadata accessor for ContextProtoSampleInvocation);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoSampleInvocation);
  swift_bridgeObjectRetain();
  sub_253B07AC0();
  sub_253A8E7B4((uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoSampleInvocation);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for ContextProtoSampleInvocation);
}

uint64_t sub_253A766A8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v6 = sub_253462A5C(&qword_269CDCBC8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253462A5C(&qword_269CDB3F8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = sub_253B071D0();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = type metadata accessor for ContextProtoSpanMatchedEntity(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v26 - v15;
  uint64_t v27 = 0;
  memset(v26, 0, sizeof(v26));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CDF9E8, (void (*)(uint64_t))type metadata accessor for ContextProtoSpanMatchedEntity);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v16, (uint64_t)v14, (void (*)(void))type metadata accessor for ContextProtoSpanMatchedEntity);
  sub_2534B45B0((uint64_t)&v14[*(int *)(v11 + 20)], (uint64_t)v8, &qword_269CDCBC8);
  sub_25395A48C();
  uint64_t v18 = swift_bridgeObjectRetain();
  sub_25395178C(v18, v19, v20, v21, v22, v23, v24, v25, *(uint64_t *)&v26[0], *((uint64_t *)&v26[0] + 1));
  sub_253B07B30();
  sub_253A8E7B4((uint64_t)v14, (void (*)(void))type metadata accessor for ContextProtoSpanMatchedEntity);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v16, (void (*)(void))type metadata accessor for ContextProtoSpanMatchedEntity);
}

uint64_t sub_253A769FC(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for ContextProtoEntityMatch(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CDFAE8, (void (*)(uint64_t))type metadata accessor for ContextProtoEntityMatch);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoEntityMatch);
  EntityMatch.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for ContextProtoEntityMatch);
}

uint64_t sub_253A76BF0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v24 = a3;
  uint64_t v6 = sub_253462A5C(&qword_269CDFB20);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253462A5C((uint64_t *)&unk_269CDB4D0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = sub_253B071D0();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t matched = type metadata accessor for ContextProtoMatchProperties(0);
  uint64_t v12 = MEMORY[0x270FA5388](matched);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v19 - v15;
  uint64_t v23 = 0;
  long long v21 = 0u;
  long long v22 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CDFE28, (void (*)(uint64_t))type metadata accessor for ContextProtoMatchProperties);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v16, (uint64_t)v14, (void (*)(void))type metadata accessor for ContextProtoMatchProperties);
  uint64_t v18 = *(void *)v14;
  v19[1] = *((void *)v14 + 2);
  void v19[2] = v18;
  int v20 = v14[24];
  sub_2534B45B0((uint64_t)&v14[*(int *)(matched + 24)], (uint64_t)v8, &qword_269CDFB20);
  sub_25395C700();
  sub_253B079A0();
  sub_253A8E7B4((uint64_t)v14, (void (*)(void))type metadata accessor for ContextProtoMatchProperties);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v16, (void (*)(void))type metadata accessor for ContextProtoMatchProperties);
}

uint64_t sub_253A76EE8(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for ContextProtoAliasTypes(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CDFE40, (void (*)(uint64_t))type metadata accessor for ContextProtoAliasTypes);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoAliasTypes);
  AliasTypes.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for ContextProtoAliasTypes);
}

uint64_t sub_253A770DC(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t DecorationInput = type metadata accessor for ContextProtoQueryDecorationInput(0);
  uint64_t v7 = MEMORY[0x270FA5388](DecorationInput);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v15 - v10;
  uint64_t v16 = 0;
  memset(v15, 0, sizeof(v15));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CDFD28, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationInput);
  uint64_t v12 = DecorationInput;
  sub_253B073C0();
  if (v2)
  {
    sub_253487D84(a1, a2);
  }
  else
  {
    sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoQueryDecorationInput);
    QueryDecorationInput.init(transcript:)();
    uint64_t v12 = v13;
    sub_253487D84(a1, a2);
    sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for ContextProtoQueryDecorationInput);
  }
  return v12;
}

uint64_t sub_253A772DC(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t DecorationOutput = type metadata accessor for ContextProtoQueryDecorationOutput(0);
  uint64_t v7 = MEMORY[0x270FA5388](DecorationOutput);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v14 - v10;
  uint64_t v15 = 0;
  memset(v14, 0, sizeof(v14));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CDFD10, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationOutput);
  uint64_t v12 = DecorationOutput;
  sub_253B073C0();
  if (v2)
  {
    sub_253487D84(a1, a2);
  }
  else
  {
    sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for ContextProtoQueryDecorationOutput);
    uint64_t v12 = QueryDecorationOutput.init(transcript:)(v9);
    sub_253487D84(a1, a2);
    sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for ContextProtoQueryDecorationOutput);
  }
  return v12;
}

uint64_t sub_253A774DC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v33 = (_DWORD *)((char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_253B059D0();
  uint64_t v28 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_253B071D0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v12 = type metadata accessor for TranscriptProtoSpeechRequestCandidate(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (uint64_t *)((char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v24 - v16;
  uint64_t v32 = 0;
  long long v30 = 0u;
  long long v31 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE1B28, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSpeechRequestCandidate);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  uint64_t v26 = v8;
  unint64_t v27 = a2;
  sub_253A8E760((uint64_t)v17, (uint64_t)v15, (void (*)(void))type metadata accessor for TranscriptProtoSpeechRequestCandidate);
  uint64_t v20 = *v15;
  uint64_t v19 = v15[1];
  swift_bridgeObjectRetain();
  sub_25395E074((uint64_t)v33);
  long long v21 = v33;
  v24[1] = *v33;
  swift_bridgeObjectRetain();
  uint64_t v25 = v20;
  sub_253B059B0();
  sub_253A8E7B4((uint64_t)v21, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
  sub_253A8E7B4((uint64_t)v15, (void (*)(void))type metadata accessor for TranscriptProtoSpeechRequestCandidate);
  long long v22 = v29;
  *(void *)uint64_t v29 = v25;
  *((void *)v22 + 1) = v19;
  uint64_t v23 = type metadata accessor for SpeechRequestCandidate(0);
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v22[*(int *)(v23 + 20)], v10, v26);
  sub_253487D84(a1, v27);
  return sub_253A8E7B4((uint64_t)v17, (void (*)(void))type metadata accessor for TranscriptProtoSpeechRequestCandidate);
}

uint64_t sub_253A7786C(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoEvent(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_26B2491D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoEvent);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoEvent);
  Session.Event.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoEvent);
}

uint64_t sub_253A77A60(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoTranscript(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE26C8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTranscript);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoTranscript);
  Session.Transcript.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoTranscript);
}

uint64_t sub_253A77C54(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoTimepoint(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_26B249490, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTimepoint);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoTimepoint);
  Timepoint.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoTimepoint);
}

uint64_t sub_253A77E48(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_253B071D0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = type metadata accessor for TranscriptProtoParticipantID(0);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v14 - v11;
  uint64_t v15 = 0;
  memset(v14, 0, sizeof(v14));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_26B2496D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParticipantID);
  sub_253B073C0();
  if (v2)
  {
    sub_253487D84(a1, a2);
  }
  else
  {
    sub_253A8E760((uint64_t)v12, (uint64_t)v10, (void (*)(void))type metadata accessor for TranscriptProtoParticipantID);
    uint64_t v3 = *v10;
    swift_bridgeObjectRetain();
    sub_253A8E7B4((uint64_t)v10, (void (*)(void))type metadata accessor for TranscriptProtoParticipantID);
    sub_253487D84(a1, a2);
    sub_253A8E7B4((uint64_t)v12, (void (*)(void))type metadata accessor for TranscriptProtoParticipantID);
  }
  return v3;
}

uint64_t sub_253A78048(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_253B071D0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = type metadata accessor for TranscriptProtoSpanID(0);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v14 - v11;
  uint64_t v15 = 0;
  memset(v14, 0, sizeof(v14));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_26B2492A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSpanID);
  sub_253B073C0();
  if (v2)
  {
    sub_253487D84(a1, a2);
  }
  else
  {
    sub_253A8E760((uint64_t)v12, (uint64_t)v10, (void (*)(void))type metadata accessor for TranscriptProtoSpanID);
    uint64_t v3 = *v10;
    sub_253A8E7B4((uint64_t)v10, (void (*)(void))type metadata accessor for TranscriptProtoSpanID);
    sub_253487D84(a1, a2);
    sub_253A8E7B4((uint64_t)v12, (void (*)(void))type metadata accessor for TranscriptProtoSpanID);
  }
  return v3;
}

uint64_t sub_253A7823C(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoPayload(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v22 = 0;
  long long v20 = 0u;
  long long v21 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_26B249380, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPayload);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoPayload);
  Session.Event.Payload.init(transcript:)((uint64_t)v9, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, v23, v24, v25, v26, v27, v28,
    v29);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoPayload);
}

uint64_t sub_253A78430(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoSessionStart(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_26B249608, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSessionStart);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoSessionStart);
  SessionStart.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoSessionStart);
}

uint64_t sub_253A78624@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v6 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253B05C60();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = sub_253B071D0();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = type metadata accessor for TranscriptProtoDeviceDetails(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (void *)((char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v18 - v15;
  uint64_t v21 = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3830, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDeviceDetails);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v16, (uint64_t)v14, (void (*)(void))type metadata accessor for TranscriptProtoDeviceDetails);
  v18[1] = *v14;
  swift_bridgeObjectRetain();
  sub_25395D9B0((uint64_t)v8);
  sub_253B05C40();
  sub_253A8E7B4((uint64_t)v8, (void (*)(void))type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
  sub_253B05C70();
  sub_253A8E7B4((uint64_t)v14, (void (*)(void))type metadata accessor for TranscriptProtoDeviceDetails);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoDeviceDetails);
}

uint64_t sub_253A78934(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3818, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
  sub_253B05C40();
  sub_253A8E7B4((uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
}

uint64_t sub_253A78B30@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[1] = a3;
  uint64_t v5 = sub_253B05630();
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_253B071D0();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = type metadata accessor for TranscriptProtoLocaleSettings(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v17 - v13;
  uint64_t v20 = 0;
  long long v18 = 0u;
  long long v19 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_26B249780, (void (*)(uint64_t))type metadata accessor for TranscriptProtoLocaleSettings);
  uint64_t v15 = v21;
  sub_253B073C0();
  if (v15) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v14, (uint64_t)v12, (void (*)(void))type metadata accessor for TranscriptProtoLocaleSettings);
  swift_bridgeObjectRetain();
  sub_253B055D0();
  swift_bridgeObjectRetain();
  sub_253B055D0();
  swift_bridgeObjectRetain();
  sub_253B055D0();
  sub_253B05D20();
  sub_253A8E7B4((uint64_t)v12, (void (*)(void))type metadata accessor for TranscriptProtoLocaleSettings);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v14, (void (*)(void))type metadata accessor for TranscriptProtoLocaleSettings);
}

void sub_253A78E10()
{
  sub_2534847F8();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  unint64_t v8 = v7;
  uint64_t v10 = v9;
  long long v18 = v11;
  uint64_t v12 = sub_253B071D0();
  MEMORY[0x270FA5388](v12 - 8);
  sub_25346CC44();
  v6(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = &v16[-v14];
  uint64_t v17 = 0;
  memset(v16, 0, sizeof(v16));
  sub_25348A9C8(v10, v8);
  sub_253B071C0();
  sub_253A8E718(v4, v2);
  sub_253B073C0();
  sub_253487D84(v10, v8);
  if (!v0)
  {
    sub_253A8E7B4((uint64_t)v15, v2);
    *long long v18 = 0;
    v18[1] = 0xE000000000000000;
  }
  sub_2534847C8();
}

uint64_t sub_253A78F74@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoSpeechQuery(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v26 - v12;
  uint64_t v30 = 0;
  long long v28 = 0u;
  long long v29 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE39D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSpeechQuery);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoSpeechQuery);
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_253951DEC(v15, v16, v17, v18, v19, v20, v21, v22, v26, v27);
  uint64_t v24 = v23;
  int v31 = v11[8];
  uint64_t v25 = *((void *)v11 + 3);
  uint64_t v27 = (uint64_t (*)(uint64_t))*((void *)v11 + 2);
  swift_bridgeObjectRetain();
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoSpeechQuery);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoSpeechQuery);
  *(void *)a3 = v24;
  *(unsigned char *)(a3 + 8) = v31;
  *(void *)(a3 + 16) = v27;
  *(void *)(a3 + 24) = v25;
  return result;
}

uint64_t sub_253A791F0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v37 = a3;
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v41 = (_DWORD *)((char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_253B059D0();
  uint64_t v36 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_253B071D0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v12 = type metadata accessor for TranscriptProtoTextQuery(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v30 - v16;
  uint64_t v40 = 0;
  long long v38 = 0u;
  long long v39 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE39A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTextQuery);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  uint64_t v34 = v8;
  unint64_t v35 = a2;
  sub_253A8E760((uint64_t)v17, (uint64_t)v15, (void (*)(void))type metadata accessor for TranscriptProtoTextQuery);
  uint64_t v20 = *(void *)v15;
  uint64_t v19 = *((void *)v15 + 1);
  int v33 = v15[16];
  swift_bridgeObjectRetain();
  sub_25395E074((uint64_t)v41);
  uint64_t v32 = v19;
  uint64_t v21 = v41;
  v30[1] = *v41;
  swift_bridgeObjectRetain();
  uint64_t v31 = v20;
  uint64_t v22 = v10;
  sub_253B059B0();
  sub_253A8E7B4((uint64_t)v21, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
  uint64_t v23 = &v15[*(int *)(v12 + 28)];
  uint64_t v24 = *(void *)v23;
  uint64_t v25 = *((void *)v23 + 1);
  swift_bridgeObjectRetain();
  sub_253A8E7B4((uint64_t)v15, (void (*)(void))type metadata accessor for TranscriptProtoTextQuery);
  uint64_t v26 = type metadata accessor for TextQuery(0);
  uint64_t v27 = v37;
  long long v28 = (void *)((char *)v37 + *(int *)(v26 + 28));
  uint64_t v29 = v32;
  *uint64_t v37 = v31;
  v27[1] = v29;
  *((unsigned char *)v27 + 16) = v33;
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))((char *)v27 + *(int *)(v26 + 24), v22, v34);
  sub_253487D84(a1, v35);
  *long long v28 = v24;
  v28[1] = v25;
  return sub_253A8E7B4((uint64_t)v17, (void (*)(void))type metadata accessor for TranscriptProtoTextQuery);
}

uint64_t sub_253A795D4(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoRequest(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE26F0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequest);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoRequest);
  Request.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoRequest);
}

uint64_t sub_253A797C8(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoRequestContent(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2708, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestContent);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoRequestContent);
  RequestContent.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoRequestContent);
}

uint64_t sub_253A799BC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x270FA5388](v6 - 8);
  int v33 = (_DWORD *)((char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_253B059D0();
  uint64_t v28 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_253B071D0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v12 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (uint64_t *)((char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v24 - v16;
  uint64_t v32 = 0;
  long long v30 = 0u;
  long long v31 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2738, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestContentTextContent);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  uint64_t v26 = v8;
  unint64_t v27 = a2;
  sub_253A8E760((uint64_t)v17, (uint64_t)v15, (void (*)(void))type metadata accessor for TranscriptProtoRequestContentTextContent);
  uint64_t v20 = *v15;
  uint64_t v19 = v15[1];
  swift_bridgeObjectRetain();
  sub_25395E074((uint64_t)v33);
  uint64_t v21 = v33;
  v24[1] = *v33;
  swift_bridgeObjectRetain();
  uint64_t v25 = v20;
  sub_253B059B0();
  sub_253A8E7B4((uint64_t)v21, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
  sub_253A8E7B4((uint64_t)v15, (void (*)(void))type metadata accessor for TranscriptProtoRequestContentTextContent);
  uint64_t v22 = v29;
  *(void *)uint64_t v29 = v25;
  *((void *)v22 + 1) = v19;
  uint64_t v23 = type metadata accessor for RequestContent.TextContent(0);
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v22[*(int *)(v23 + 20)], v10, v26);
  sub_253487D84(a1, v27);
  return sub_253A8E7B4((uint64_t)v17, (void (*)(void))type metadata accessor for TranscriptProtoRequestContentTextContent);
}

uint64_t sub_253A79D4C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoRequestContentSpeechContent(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v25 - v12;
  uint64_t v26 = 0;
  memset(v25, 0, sizeof(v25));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2750, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestContentSpeechContent);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoRequestContentSpeechContent);
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_253951DEC(v15, v16, v17, v18, v19, v20, v21, v22, *(uint64_t *)&v25[0], *((uint64_t (**)(uint64_t))&v25[0] + 1));
  uint64_t v24 = v23;
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoRequestContentSpeechContent);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoRequestContentSpeechContent);
  *a3 = v24;
  return result;
}

uint64_t sub_253A79F5C(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoExternalAgentRequest(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v20 - v10;
  uint64_t v21 = 0;
  memset(v20, 0, sizeof(v20));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2778, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentRequest);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentRequest);
  ExternalAgentRequest.init(transcript:)((uint64_t)v9, v13, v14, v15, v16, v17, v18, v19, *(uint64_t *)&v20[0], *((uint64_t *)&v20[0] + 1));
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentRequest);
}

uint64_t sub_253A7A150(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE27A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlan);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlan);
  RequestPrescribedPlan.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlan);
}

uint64_t sub_253A7A344@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v17 - v12;
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE27C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
  uint64_t v16 = *(void *)v11;
  uint64_t v15 = *((void *)v11 + 1);
  int v19 = v11[16];
  swift_bridgeObjectRetain();
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
  *(void *)a3 = v16;
  *(void *)(a3 + 8) = v15;
  *(_WORD *)(a3 + 16) = v19;
  return result;
}

uint64_t sub_253A7A560@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v17 - v12;
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE27D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
  uint64_t v16 = *v11;
  uint64_t v15 = v11[1];
  swift_bridgeObjectRetain();
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
  *a3 = v16;
  a3[1] = v15;
  return result;
}

uint64_t sub_253A7A768@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v17 - v12;
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE27F0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool);
  uint64_t v16 = *(void *)v11;
  uint64_t v15 = *((void *)v11 + 1);
  int v19 = v11[16];
  swift_bridgeObjectRetain();
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool);
  *(void *)a3 = v16;
  *(void *)(a3 + 8) = v15;
  *(unsigned char *)(a3 + 16) = v19;
  return result;
}

uint64_t sub_253A7A980@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v17 - v12;
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2808, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool);
  uint64_t v16 = *(void *)v11;
  uint64_t v15 = *((void *)v11 + 1);
  int v19 = v11[16];
  swift_bridgeObjectRetain();
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool);
  *(void *)a3 = v16;
  *(void *)(a3 + 8) = v15;
  *(unsigned char *)(a3 + 16) = v19;
  return result;
}

uint64_t sub_253A7AB98@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v17 - v12;
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2820, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool);
  uint64_t v16 = *(void *)v11;
  uint64_t v15 = *((void *)v11 + 1);
  int v19 = v11[16];
  swift_bridgeObjectRetain();
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool);
  *(void *)a3 = v16;
  *(void *)(a3 + 8) = v15;
  *(unsigned char *)(a3 + 16) = v19;
  return result;
}

uint64_t sub_253A7ADB0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v17 - v12;
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2838, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
  uint64_t v16 = *(void *)v11;
  uint64_t v15 = *((void *)v11 + 1);
  int v19 = v11[16];
  swift_bridgeObjectRetain();
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
  *(void *)a3 = v16;
  *(void *)(a3 + 8) = v15;
  *(unsigned char *)(a3 + 16) = v19;
  return result;
}

uint64_t sub_253A7AFC8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v26 = a3;
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x270FA5388](v6 - 8);
  long long v30 = (_DWORD *)((char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_253B059D0();
  uint64_t v25 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_253B071D0();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v22 - v14;
  uint64_t v29 = 0;
  long long v27 = 0u;
  long long v28 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2850, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  uint64_t v23 = v8;
  unint64_t v24 = a2;
  sub_253A8E760((uint64_t)v15, (uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool);
  sub_25395E074((uint64_t)v30);
  uint64_t v17 = v30;
  v22[3] = *v30;
  swift_bridgeObjectRetain();
  sub_253B059B0();
  sub_253A8E7B4((uint64_t)v17, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
  uint64_t v18 = &v13[*(int *)(v10 + 20)];
  char v19 = v18[8];
  if (v19) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *(void *)v18;
  }
  sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool);
  uint64_t v21 = v26 + *(int *)(type metadata accessor for RequestPrescribedPlan.OpenTool(0) + 20);
  (*(void (**)(void))(v25 + 32))();
  sub_253487D84(a1, v24);
  *(void *)uint64_t v21 = v20;
  *(unsigned char *)(v21 + 8) = v19;
  return sub_253A8E7B4((uint64_t)v15, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool);
}

uint64_t sub_253A7B364@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v17 - v12;
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2868, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool);
  char v15 = v11[8];
  if (v15) {
    uint64_t v16 = 0;
  }
  else {
    uint64_t v16 = *(void *)v11;
  }
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool);
  *(void *)a3 = v16;
  *(unsigned char *)(a3 + 8) = v15;
  return result;
}

uint64_t sub_253A7B574(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoAction(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE0418, (void (*)(uint64_t))type metadata accessor for TranscriptProtoAction);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoAction);
  Action.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoAction);
}

uint64_t sub_253A7B768(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoActionCancellation(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE28A0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionCancellation);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoActionCancellation);
  ActionCancellation.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoActionCancellation);
}

uint64_t sub_253A7B95C(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoClientAction(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2A38, (void (*)(uint64_t))type metadata accessor for TranscriptProtoClientAction);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoClientAction);
  ClientAction.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoClientAction);
}

uint64_t sub_253A7BB50(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoShimParameter(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE1CE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoShimParameter);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoShimParameter);
  ClientAction.ShimParameter.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoShimParameter);
}

uint64_t sub_253A7BD44@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_253462A5C(&qword_269CE1D00);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_253B071D0();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = type metadata accessor for TranscriptProtoPersonQuery(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = &v21[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = &v21[-v15];
  uint64_t v27 = 0;
  long long v25 = 0u;
  long long v26 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2A70, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPersonQuery);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v16, (uint64_t)v14, (void (*)(void))type metadata accessor for TranscriptProtoPersonQuery);
  uint64_t v18 = *((void *)v14 + 2);
  uint64_t v28 = *((void *)v14 + 1);
  sub_2534B45B0((uint64_t)&v14[*(int *)(v11 + 24)], (uint64_t)v9, &qword_269CE1D00);
  swift_bridgeObjectRetain();
  sub_25395B9F8();
  long long v23 = v26;
  long long v24 = v25;
  uint64_t v19 = v27;
  int v22 = *v14;
  sub_253A8E7B4((uint64_t)v14, (void (*)(void))type metadata accessor for TranscriptProtoPersonQuery);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoPersonQuery);
  *(void *)a3 = v28;
  *(void *)(a3 + 8) = v18;
  long long v20 = v23;
  *(_OWORD *)(a3 + 16) = v24;
  *(_OWORD *)(a3 + 32) = v20;
  *(void *)(a3 + 48) = v19;
  *(unsigned char *)(a3 + 56) = v22;
  return result;
}

uint64_t sub_253A7C040@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoHandle(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v18 - v12;
  uint64_t v22 = 0;
  long long v20 = 0u;
  long long v21 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2A88, (void (*)(uint64_t))type metadata accessor for TranscriptProtoHandle);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoHandle);
  int v23 = *(unsigned __int8 *)v11;
  uint64_t v15 = v11[1];
  uint64_t v16 = v11[2];
  uint64_t v17 = v11[4];
  uint64_t v18 = v11[3];
  uint64_t v19 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoHandle);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoHandle);
  *(unsigned char *)a3 = v23;
  *(void *)(a3 + 8) = v19;
  *(void *)(a3 + 16) = v16;
  *(void *)(a3 + 24) = v18;
  *(void *)(a3 + 32) = v17;
  return result;
}

uint64_t sub_253A7C274@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v33 = a3;
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v38 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253B059D0();
  uint64_t v34 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_253B071D0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t Step = type metadata accessor for TranscriptProtoQueryStep(0);
  uint64_t v13 = MEMORY[0x270FA5388](Step);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v31 - v16;
  uint64_t v37 = 0;
  long long v35 = 0u;
  long long v36 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2ED8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryStep);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  uint64_t v32 = v8;
  sub_253A8E760((uint64_t)v17, (uint64_t)v15, (void (*)(void))type metadata accessor for TranscriptProtoQueryStep);
  sub_25395E074(v38);
  uint64_t v19 = v38;
  swift_bridgeObjectRetain();
  sub_253B059B0();
  sub_253A8E7B4(v19, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
  uint64_t v20 = swift_bridgeObjectRetain();
  sub_253955854(v20, v21, v22, v23, v24, v25, v26, v27, v31, v32);
  uint64_t v29 = v28;
  sub_253A8E7B4((uint64_t)v15, (void (*)(void))type metadata accessor for TranscriptProtoQueryStep);
  uint64_t v30 = v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v33, v10, v32);
  sub_253487D84(a1, a2);
  *(void *)(v30 + *(int *)(type metadata accessor for QueryStep(0) + 20)) = v29;
  return sub_253A8E7B4((uint64_t)v17, (void (*)(void))type metadata accessor for TranscriptProtoQueryStep);
}

uint64_t sub_253A7C658@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v30 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253B059D0();
  uint64_t v26 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_253B071D0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v12 = type metadata accessor for TranscriptProtoVariableStep(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v23 - v16;
  uint64_t v29 = 0;
  long long v27 = 0u;
  long long v28 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE32D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVariableStep);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  uint64_t v24 = v8;
  sub_253A8E760((uint64_t)v17, (uint64_t)v15, (void (*)(void))type metadata accessor for TranscriptProtoVariableStep);
  sub_25395E074(v30);
  uint64_t v19 = v30;
  swift_bridgeObjectRetain();
  sub_253B059B0();
  sub_253A8E7B4(v19, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
  swift_bridgeObjectRetain();
  sub_2539529D8();
  uint64_t v21 = v20;
  sub_253A8E7B4((uint64_t)v15, (void (*)(void))type metadata accessor for TranscriptProtoVariableStep);
  uint64_t v22 = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v25, v10, v24);
  sub_253487D84(a1, a2);
  *(void *)(v22 + *(int *)(type metadata accessor for VariableStep(0) + 20)) = v21;
  return sub_253A8E7B4((uint64_t)v17, (void (*)(void))type metadata accessor for TranscriptProtoVariableStep);
}

uint64_t sub_253A7CA3C(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v16 - v10;
  uint64_t v17 = 0;
  memset(v16, 0, sizeof(v16));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2B10, (void (*)(uint64_t))type metadata accessor for TranscriptProtoIntelligenceFlowError);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoIntelligenceFlowError);
  uint64_t v13 = *v9;
  uint64_t v14 = v9[1];
  uint64_t v15 = v9[2];
  objc_allocWithZone(MEMORY[0x263F087E8]);
  swift_bridgeObjectRetain();
  sub_253AE436C(v13, v14, v15, 0);
  sub_253B05950();
  sub_253A8E7B4((uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoIntelligenceFlowError);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoIntelligenceFlowError);
}

uint64_t sub_253A7CC74(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3160, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolution);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoSystemPromptResolution);
  RequestContent.SystemPromptResolution.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoSystemPromptResolution);
}

uint64_t sub_253A7CE68@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v43 = a3;
  uint64_t v5 = sub_253462A5C(&qword_269CDBB28);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v42 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_253B05A00();
  uint64_t v7 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_253B05AB0();
  uint64_t v10 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for ActionResult(0);
  uint64_t v13 = MEMORY[0x270FA5388](v37);
  long long v39 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v40 = (uint64_t)&v35 - v15;
  uint64_t v16 = sub_253B071D0();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v17 = type metadata accessor for TranscriptProtoActionStepResult(0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = 0;
  long long v45 = 0u;
  long long v46 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE29B8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionStepResult);
  uint64_t v48 = a1;
  unint64_t v20 = v44;
  sub_253B073C0();
  if (v20) {
    return sub_253487D84(v48, a2);
  }
  uint64_t v22 = sub_253B055C0();
  unint64_t v44 = a2;
  uint64_t v23 = v43;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v43, 1, 1, v22);
  uint64_t v24 = type metadata accessor for ActionStepResult(0);
  uint64_t v36 = v24;
  uint64_t v25 = (void *)(v23 + *(int *)(v24 + 28));
  *uint64_t v25 = 0;
  v25[1] = 0xE000000000000000;
  uint64_t v26 = (void *)(v23 + *(int *)(v24 + 20));
  *uint64_t v26 = 0;
  v26[1] = 0xE000000000000000;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F4C010], v38);
  long long v27 = v12;
  sub_253B05A60();
  long long v28 = v12;
  uint64_t v29 = v41;
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v28, *MEMORY[0x263F4C0F8], v41);
  uint64_t v30 = sub_253B06820();
  uint64_t v31 = v42;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v42, 1, 1, v30);
  uint64_t v32 = (uint64_t)v39;
  uint64_t v33 = (uint64_t)&v39[*(int *)(v37 + 20)];
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v33, 1, 1, v30);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v32, v27, v29);
  sub_253A8E650(v31, v33);
  uint64_t v34 = v40;
  sub_253A8E6B8(v32, v40, (void (*)(void))type metadata accessor for ActionResult);
  sub_253A8E6B8(v34, v43 + *(int *)(v36 + 24), (void (*)(void))type metadata accessor for ActionResult);
  sub_253487D84(v48, v44);
  return sub_253A8E7B4((uint64_t)v19, (void (*)(void))type metadata accessor for TranscriptProtoActionStepResult);
}

uint64_t sub_253A7D324(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementResult(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE1C90, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementResult);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoStatementResult);
  StatementResult.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoStatementResult);
}

uint64_t sub_253A7D518(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  Stepuint64_t Results = type metadata accessor for TranscriptProtoQueryStepResults(0);
  uint64_t v7 = MEMORY[0x270FA5388](StepResults);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v20 - v10;
  uint64_t v21 = 0;
  memset(v20, 0, sizeof(v20));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2F00, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryStepResults);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoQueryStepResults);
  QueryStepResults.init(transcript:)((uint64_t)v9, v13, v14, v15, v16, v17, v18, v19, *(uint64_t *)&v20[0], *((void **)&v20[0] + 1));
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoQueryStepResults);
}

uint64_t sub_253A7D70C(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoActionResponse(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3190, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionResponse);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoActionResponse);
  ActionResponse.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoActionResponse);
}

uint64_t sub_253A7D900(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoSystemResponse(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE37D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemResponse);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoSystemResponse);
  SystemResponse.init(transcript:)(v9);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoSystemResponse);
}

uint64_t sub_253A7DAF4(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE24B8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoInterpretedStatementResult);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoInterpretedStatementResult);
  InterpretedStatementResult.init(transcript:)(v9);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoInterpretedStatementResult);
}

uint64_t sub_253A7DCE8(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE31A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionResolverRequest);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoActionResolverRequest);
  ActionResolverRequest.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoActionResolverRequest);
}

uint64_t sub_253A7DEDC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoResponseGenerationRequest(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v25 - v12;
  uint64_t v26 = 0;
  memset(v25, 0, sizeof(v25));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE29F8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseGenerationRequest);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoResponseGenerationRequest);
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_2539551EC(v15, v16, v17, v18, v19, v20, v21, v22, *(uint64_t *)&v25[0], *((uint64_t (**)(uint64_t))&v25[0] + 1));
  uint64_t v24 = v23;
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoResponseGenerationRequest);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoResponseGenerationRequest);
  *a3 = v24;
  return result;
}

uint64_t sub_253A7E0EC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoClientInitiatedClientAction(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v26 - v12;
  uint64_t v27 = 0;
  memset(v26, 0, sizeof(v26));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3248, (void (*)(uint64_t))type metadata accessor for TranscriptProtoClientInitiatedClientAction);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoClientInitiatedClientAction);
  uint64_t v15 = v11[1];
  uint64_t v28 = *v11;
  swift_bridgeObjectRetain();
  uint64_t v16 = swift_bridgeObjectRetain();
  sub_253AE8864(v16, v17, v18, v19, v20, v21, v22, v23, *(uint64_t *)&v26[0], *((uint64_t *)&v26[0] + 1));
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoClientInitiatedClientAction);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoClientInitiatedClientAction);
  *a3 = v28;
  a3[1] = v15;
  a3[2] = v25;
  return result;
}

void sub_253A7E368()
{
  sub_2534847F8();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  unint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = sub_253B071D0();
  MEMORY[0x270FA5388](v11 - 8);
  sub_25346CC44();
  v6(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = &v15[-v13];
  uint64_t v16 = 0;
  memset(v15, 0, sizeof(v15));
  sub_25348A9C8(v10, v8);
  sub_253B071C0();
  sub_253A8E718(v4, v2);
  sub_253B073C0();
  sub_253487D84(v10, v8);
  if (!v0) {
    sub_253A8E7B4((uint64_t)v14, v2);
  }
  sub_2534847C8();
}

uint64_t sub_253A7E4B8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoSafetyModeException(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v17 - v12;
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3210, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSafetyModeException);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoSafetyModeException);
  uint64_t v16 = *v11;
  uint64_t v15 = v11[1];
  swift_bridgeObjectRetain();
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoSafetyModeException);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoSafetyModeException);
  *a3 = v16;
  a3[1] = v15;
  return result;
}

uint64_t sub_253A7E6C0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v32 = a3;
  uint64_t v39 = sub_253B08E50();
  uint64_t v35 = *(void *)(v39 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v39);
  uint64_t v33 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v34 = (char *)&v26 - v8;
  uint64_t v9 = sub_253B09120();
  uint64_t v31 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_253B071D0();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v13 = type metadata accessor for TranscriptProtoVariableSetter(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v26 - v17;
  uint64_t v38 = 0;
  long long v36 = 0u;
  long long v37 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2230, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVariableSetter);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  uint64_t v29 = a1;
  unint64_t v30 = a2;
  uint64_t v20 = v34;
  uint64_t v21 = v35;
  uint64_t v28 = v9;
  uint64_t v22 = v39;
  sub_253A8E760((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoVariableSetter);
  swift_bridgeObjectRetain();
  Dictionary<>.init(transcript:)();
  uint64_t v27 = v23;
  sub_25395DCE8();
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v33, v20, v22);
  sub_253B09110();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v22);
  sub_253A8E7B4((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoVariableSetter);
  uint64_t v24 = v32;
  *(void *)uint64_t v32 = v27;
  uint64_t v25 = type metadata accessor for VariableSetter(0);
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v24[*(int *)(v25 + 20)], v11, v28);
  sub_253487D84(v29, v30);
  return sub_253A8E7B4((uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoVariableSetter);
}

uint64_t sub_253A7EB20(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3278, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
  RequestContent.SystemPromptResolution.UserAction.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
}

uint64_t sub_253A7ED14(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoActionResult(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2988, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionResult);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoActionResult);
  ActionResult.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoActionResult);
}

uint64_t sub_253A7EF08(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE29D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementResultPayload);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoStatementResultPayload);
  StatementResultPayload.init(transcript:)(v9);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoStatementResultPayload);
}

uint64_t sub_253A7F0FC(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoResponseOutput(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2F30, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseOutput);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoResponseOutput);
  ResponseOutput.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoResponseOutput);
}

uint64_t sub_253A7F2F0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t Results = type metadata accessor for TranscriptProtoQueryResults(0);
  uint64_t v9 = MEMORY[0x270FA5388](Results);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v25 - v12;
  uint64_t v26 = 0;
  memset(v25, 0, sizeof(v25));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE1FB8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryResults);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoQueryResults);
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_2539526A4(v15, v16, v17, v18, v19, v20, v21, v22, *(uint64_t *)&v25[0], *((uint64_t (**)(uint64_t))&v25[0] + 1));
  uint64_t v24 = v23;
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoQueryResults);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoQueryResults);
  *a3 = v24;
  return result;
}

uint64_t sub_253A7F500(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoParameterQuery(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE1F80, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterQuery);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoParameterQuery);
  ParameterQuery.init(transcript:)(v9);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoParameterQuery);
}

uint64_t sub_253A7F6F4(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoActionParameterContext(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v20 - v10;
  uint64_t v21 = 0;
  memset(v20, 0, sizeof(v20));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2AF8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionParameterContext);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoActionParameterContext);
  ActionParameterContext.init(transcript:)((uint64_t)v9, v13, v14, v15, v16, v17, v18, v19, *(uint64_t *)&v20[0], *((uint64_t *)&v20[0] + 1));
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoActionParameterContext);
}

uint64_t sub_253A7F8E8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v33 = a3;
  uint64_t v6 = sub_253462A5C(&qword_269CE0480);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (ValueMetadata *)((char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_253462A5C(&qword_269CE50F8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = sub_253B071D0();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = type metadata accessor for TranscriptProtoActionConfirmation(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v26 - v15;
  uint64_t v30 = 0;
  long long v28 = 0u;
  long long v29 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE28D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionConfirmation);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  uint64_t v27 = v8;
  sub_253A8E760((uint64_t)v16, (uint64_t)v14, (void (*)(void))type metadata accessor for TranscriptProtoActionConfirmation);
  uint64_t v18 = swift_bridgeObjectRetain();
  sub_253AE9ED0(v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, *((uint64_t *)&v28 + 1), v29, *((uint64_t *)&v29 + 1), v30, v31, v32, v33, v34,
    v35);
  swift_bridgeObjectRelease();
  sub_2534B45B0((uint64_t)&v14[*(int *)(v11 + 20)], (uint64_t)v27, &qword_269CE0480);
  sub_25395C898();
  sub_253B06AD0();
  sub_253A8E7B4((uint64_t)v14, (void (*)(void))type metadata accessor for TranscriptProtoActionConfirmation);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoActionConfirmation);
}

uint64_t sub_253A7FC48(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE28E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionConfirmationSystemStyle);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoActionConfirmationSystemStyle);
  ActionConfirmation.SystemStyle.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoActionConfirmationSystemStyle);
}

uint64_t sub_253A7FE3C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v6 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v32 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253B06A80();
  uint64_t v27 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_253B071D0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v12 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v25 - v16;
  uint64_t v31 = 0;
  long long v29 = 0u;
  long long v30 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2900, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  uint64_t v26 = v8;
  sub_253A8E760((uint64_t)v17, (uint64_t)v15, (void (*)(void))type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement);
  uint64_t v19 = *((void *)v15 + 1);
  swift_bridgeObjectRetain();
  sub_25395DD24((uint64_t)v32);
  uint64_t v25 = v19;
  uint64_t v20 = *v32;
  if (v20 == 4)
  {
    *(void *)&long long v29 = &type metadata for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSourceEnum;
    sub_253462A5C(&qword_269CE86A0);
    uint64_t v21 = sub_253B09730();
    uint64_t v23 = v22;
    sub_253961DC0();
    swift_allocError();
    *(void *)uint64_t v24 = v21;
    *(void *)(v24 + 8) = v23;
    *(unsigned char *)(v24 + 16) = 0;
    swift_willThrow();
    sub_253A8E7B4((uint64_t)v32, (void (*)(void))type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource);
    sub_253A8E7B4((uint64_t)v15, (void (*)(void))type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_253A8E7B4((uint64_t)v32, (void (*)(void))type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource);
    (*(void (**)(char *, void, uint64_t))(v27 + 104))(v10, **((unsigned int **)&unk_265398098 + v20), v26);
    sub_253B06A50();
    sub_253A8E7B4((uint64_t)v15, (void (*)(void))type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement);
  }
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v17, (void (*)(void))type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement);
}

uint64_t sub_253A80234@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (unsigned __int8 *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v24 - v12;
  uint64_t v25 = 0;
  memset(v24, 0, sizeof(v24));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2918, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource);
  int v15 = *v11;
  if (v15 == 4)
  {
    *(void *)&v24[0] = &type metadata for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSourceEnum;
    sub_253462A5C(&qword_269CE86A0);
    uint64_t v16 = sub_253B09730();
    uint64_t v18 = v17;
    sub_253961DC0();
    swift_allocError();
    *(void *)uint64_t v19 = v16;
    *(void *)(v19 + 8) = v18;
    *(unsigned char *)(v19 + 16) = 0;
    swift_willThrow();
    sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource);
    sub_253487D84(a1, a2);
    uint64_t v20 = (uint64_t)v13;
  }
  else
  {
    sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource);
    switch(v15)
    {
      case 1:
        uint64_t v21 = (unsigned int *)MEMORY[0x263F4C920];
        break;
      case 2:
        uint64_t v21 = (unsigned int *)MEMORY[0x263F4C918];
        break;
      case 3:
        uint64_t v21 = (unsigned int *)MEMORY[0x263F4C910];
        break;
      default:
        uint64_t v21 = (unsigned int *)MEMORY[0x263F4C928];
        break;
    }
    uint64_t v22 = *v21;
    uint64_t v23 = sub_253B06A80();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(a3, v22, v23);
    sub_253487D84(a1, a2);
    uint64_t v20 = (uint64_t)v13;
  }
  return sub_253A8E7B4(v20, (void (*)(void))type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource);
}

uint64_t sub_253A80570(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoParameterValue(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE1BF8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterValue);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoParameterValue);
  ParameterValue.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoParameterValue);
}

uint64_t sub_253A80764@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPromptSelection(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v15 - v12;
  uint64_t v16 = 0;
  memset(v15, 0, sizeof(v15));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE28B8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPromptSelection);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoPromptSelection);
  PromptSelection.init(transcript:)(v11, a3);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoPromptSelection);
}

uint64_t sub_253A80958(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2D60, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterNeedsValue);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoParameterNeedsValue);
  swift_bridgeObjectRetain();
  sub_253B06B40();
  sub_253A8E7B4((uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoParameterNeedsValue);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoParameterNeedsValue);
}

uint64_t sub_253A80B64@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v37 = a3;
  uint64_t v6 = sub_253B08E50();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v43 = (char *)v29 - v11;
  uint64_t v12 = sub_253B09120();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_253B071D0();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v16 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)v29 - v20;
  uint64_t v42 = 0;
  long long v40 = 0u;
  long long v41 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2D08, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterConfirmation);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  unint64_t v35 = a2;
  uint64_t v36 = a1;
  uint64_t v33 = v10;
  uint64_t v34 = v14;
  uint64_t v23 = v39;
  sub_253A8E760((uint64_t)v21, (uint64_t)v19, (void (*)(void))type metadata accessor for TranscriptProtoParameterConfirmation);
  uint64_t v25 = *(void *)v19;
  uint64_t v24 = *((void *)v19 + 1);
  int v26 = v19[24];
  if (v19[24]) {
    uint64_t v27 = 0;
  }
  else {
    uint64_t v27 = *((void *)v19 + 2);
  }
  swift_bridgeObjectRetain();
  sub_25395DCE8();
  v29[1] = v27;
  int v30 = v26;
  uint64_t v31 = v25;
  uint64_t v32 = v24;
  uint64_t v28 = v38;
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v33, v43, v38);
  sub_253B09110();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v43, v28);
  sub_253B06D20();
  sub_253A8E7B4((uint64_t)v19, (void (*)(void))type metadata accessor for TranscriptProtoParameterConfirmation);
  sub_253487D84(v36, v35);
  return sub_253A8E7B4((uint64_t)v21, (void (*)(void))type metadata accessor for TranscriptProtoParameterConfirmation);
}

uint64_t sub_253A80F40@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoParameterDisambiguation(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v23 - v12;
  uint64_t v24 = 0;
  memset(v23, 0, sizeof(v23));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2D20, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterDisambiguation);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  uint64_t v25 = a3;
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoParameterDisambiguation);
  swift_bridgeObjectRetain();
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_25394F2C0(v15, v16, v17, v18, v19, v20, v21, v22, *(uint64_t *)&v23[0], *((uint64_t *)&v23[0] + 1));
  sub_253B06E80();
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoParameterDisambiguation);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoParameterDisambiguation);
}

uint64_t sub_253A811B4(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2D78, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterNotAllowed);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoParameterNotAllowed);
  ParameterNotAllowed.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoParameterNotAllowed);
}

uint64_t sub_253A813A8(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoCandidate(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE1F70, (void (*)(uint64_t))type metadata accessor for TranscriptProtoCandidate);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoCandidate);
  Candidate.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoCandidate);
}

uint64_t sub_253A8159C(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
  uint64_t v7 = MEMORY[0x270FA5388](Predicate);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE1F48, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryPredicate);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoQueryPredicate);
  QueryPredicate.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoQueryPredicate);
}

uint64_t sub_253A81790@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v17 - v12;
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2A20, (void (*)(uint64_t))type metadata accessor for TranscriptProtoCandidatePromptStatus);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoCandidatePromptStatus);
  if (v11[9])
  {
    uint64_t v15 = 0;
    BOOL v16 = 1;
  }
  else
  {
    if (v11[8]) {
      uint64_t v15 = *(void *)v11 != 0;
    }
    else {
      uint64_t v15 = *(void *)v11;
    }
    BOOL v16 = (v11[8] & 1) != 0;
  }
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoCandidatePromptStatus);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoCandidatePromptStatus);
  *(void *)a3 = v15;
  *(unsigned char *)(a3 + 8) = v16;
  return result;
}

uint64_t sub_253A819C4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPlan(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (void *)((char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v17 - v12;
  memset(v17, 0, 40);
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2DC8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPlan);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoPlan);
  Session.Plan.init(transcript:)(v11, (uint64_t)v17);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoPlan);
  uint64_t v15 = v17[2];
  char v16 = v18;
  *(_OWORD *)a3 = *(_OWORD *)v17;
  *(void *)(a3 + 16) = v15;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[3];
  *(_OWORD *)(a3 + 40) = *(_OWORD *)&v17[5];
  *(unsigned char *)(a3 + 56) = v16;
  return result;
}

uint64_t sub_253A81BE4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoRecoverableError(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v25 - v12;
  uint64_t v27 = 0;
  long long v25 = 0u;
  long long v26 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2DE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRecoverableError);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoRecoverableError);
  Session.RecoverableError.init(transcript:)((uint64_t)v11, v15, v16, v17, v18, v19, v20, v21, v25, *((void **)&v25 + 1));
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoRecoverableError);
  long long v22 = v26;
  uint64_t v23 = v27;
  uint64_t v24 = v28;
  *(_OWORD *)a3 = v25;
  *(_OWORD *)(a3 + 16) = v22;
  *(void *)(a3 + 32) = v23;
  *(void *)(a3 + 40) = v24;
  return result;
}

uint64_t sub_253A81DEC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  long long v40 = a3;
  uint64_t v6 = type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  unint64_t v44 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v35 - v9;
  uint64_t v11 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_253B071D0();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v15 = type metadata accessor for TranscriptProtoPlanGenerationError(0);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v43 = 0;
  long long v41 = 0u;
  long long v42 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2DF8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPlanGenerationError);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  uint64_t v22 = a1;
  unint64_t v39 = a2;
  uint64_t v23 = (uint64_t *)v44;
  sub_253A8E760((uint64_t)v20, (uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPlanGenerationError);
  sub_25395E5B0((uint64_t)v13);
  uint64_t v24 = (uint64_t)v10;
  sub_253A8E6B8((uint64_t)v13, (uint64_t)v10, (void (*)(void))type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
  uint64_t v25 = (uint64_t)v10;
  uint64_t v26 = (uint64_t)v23;
  sub_253A8E760(v25, (uint64_t)v23, (void (*)(void))type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
  uint64_t v28 = *v23;
  uint64_t v27 = v23[1];
  uint64_t v29 = v23[2];
  uint64_t v30 = v23[3];
  uint64_t v37 = v29;
  uint64_t v38 = v28;
  uint64_t v31 = *(void *)(v26 + 32);
  uint64_t v32 = *(void *)(v26 + 40);
  uint64_t v35 = v27;
  uint64_t v36 = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_253A8E7B4(v26, (void (*)(void))type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
  sub_253A8E7B4((uint64_t)v18, (void (*)(void))type metadata accessor for TranscriptProtoPlanGenerationError);
  sub_253A8E7B4(v24, (void (*)(void))type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
  sub_253487D84(v22, v39);
  uint64_t result = sub_253A8E7B4((uint64_t)v20, (void (*)(void))type metadata accessor for TranscriptProtoPlanGenerationError);
  uint64_t v33 = v40;
  uint64_t v34 = v35;
  *long long v40 = v38;
  v33[1] = v34;
  v33[2] = v37;
  v33[3] = v30;
  v33[4] = v36;
  v33[5] = v32;
  return result;
}

uint64_t sub_253A821A8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v20 - v12;
  uint64_t v26 = 0;
  long long v24 = 0u;
  long long v25 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2E10, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
  uint64_t v15 = v11[1];
  uint64_t v27 = *v11;
  uint64_t v16 = v11[3];
  uint64_t v23 = v11[2];
  uint64_t v17 = v11[4];
  uint64_t v18 = v11[5];
  uint64_t v21 = v15;
  uint64_t v22 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
  uint64_t v19 = v21;
  *a3 = v27;
  a3[1] = v19;
  a3[2] = v23;
  a3[3] = v16;
  a3[4] = v22;
  a3[5] = v18;
  return result;
}

uint64_t sub_253A823E8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoDecompositionResult(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v17 - v12;
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2AE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDecompositionResult);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoDecompositionResult);
  uint64_t v15 = v11[2];
  uint64_t v19 = v11[1];
  uint64_t v16 = *v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoDecompositionResult);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoDecompositionResult);
  *a3 = v19;
  a3[1] = v15;
  a3[2] = v16;
  return result;
}

uint64_t sub_253A82608(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoExpression(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v22 = 0;
  long long v20 = 0u;
  long long v21 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3518, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExpression);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoExpression);
  Expression.init(transcript:)((uint64_t)v9, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, v23, v24, v25, v26, v27, v28,
    v29);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoExpression);
}

uint64_t sub_253A827FC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoValueExpression(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v16 - v12;
  uint64_t v18 = 0;
  long long v16 = 0u;
  long long v17 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3530, (void (*)(uint64_t))type metadata accessor for TranscriptProtoValueExpression);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoValueExpression);
  ValueExpression.init(transcript:)();
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoValueExpression);
  char v15 = v17;
  *(_OWORD *)a3 = v16;
  *(unsigned char *)(a3 + 16) = v15;
  return result;
}

uint64_t sub_253A82A04@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v31 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_253B059D0();
  uint64_t v26 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_253B071D0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v12 = type metadata accessor for TranscriptProtoPrefixExpression(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  char v15 = &v23[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v13);
  long long v17 = &v23[-v16];
  uint64_t v30 = 0;
  long long v28 = 0u;
  long long v29 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3560, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPrefixExpression);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  uint64_t v25 = v8;
  sub_253A8E760((uint64_t)v17, (uint64_t)v15, (void (*)(void))type metadata accessor for TranscriptProtoPrefixExpression);
  int v19 = *v15;
  sub_25395E074((uint64_t)v31);
  long long v20 = v31;
  int v24 = v19;
  swift_bridgeObjectRetain();
  sub_253B059B0();
  sub_253A8E7B4((uint64_t)v20, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
  sub_253A8E7B4((uint64_t)v15, (void (*)(void))type metadata accessor for TranscriptProtoPrefixExpression);
  long long v21 = v27;
  *uint64_t v27 = v24;
  uint64_t v22 = type metadata accessor for PrefixExpression(0);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v26 + 32))(&v21[*(int *)(v22 + 20)], v10, v25);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v17, (void (*)(void))type metadata accessor for TranscriptProtoPrefixExpression);
}

uint64_t sub_253A82D7C(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoInfixExpression(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3578, (void (*)(uint64_t))type metadata accessor for TranscriptProtoInfixExpression);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoInfixExpression);
  InfixExpression.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoInfixExpression);
}

uint64_t sub_253A82F70(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoIndexExpression(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE35A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoIndexExpression);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoIndexExpression);
  IndexExpression.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoIndexExpression);
}

uint64_t sub_253A83164(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
  uint64_t v7 = MEMORY[0x270FA5388](updated);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE35C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUpdateParametersExpression);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoUpdateParametersExpression);
  UpdateParametersExpression.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoUpdateParametersExpression);
}

uint64_t sub_253A83358@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v31 = a3;
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v35 = (int *)((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_253B059D0();
  uint64_t v30 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_253B071D0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t updated = type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(0);
  uint64_t v13 = MEMORY[0x270FA5388](updated);
  char v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  long long v17 = (char *)&v25 - v16;
  uint64_t v34 = 0;
  long long v32 = 0u;
  long long v33 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE23D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  uint64_t v28 = a1;
  unint64_t v29 = a2;
  uint64_t v27 = v8;
  sub_253A8E760((uint64_t)v17, (uint64_t)v15, (void (*)(void))type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
  uint64_t v20 = *(void *)v15;
  uint64_t v19 = *((void *)v15 + 1);
  int v21 = v15[16];
  swift_bridgeObjectRetain();
  sub_25395E074((uint64_t)v35);
  int v26 = v21;
  uint64_t v22 = v35;
  int v25 = *v35;
  swift_bridgeObjectRetain();
  sub_253B059B0();
  sub_253A8E7B4((uint64_t)v22, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
  sub_253A8E7B4((uint64_t)v15, (void (*)(void))type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
  uint64_t v23 = v31;
  *uint64_t v31 = v20;
  v23[1] = v19;
  _OWORD v23[2] = 0;
  *((unsigned char *)v23 + 24) = 1;
  *((unsigned char *)v23 + 25) = v26;
  uint64_t v24 = type metadata accessor for UpdateParametersExpression.UpdateParameter(0);
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))((char *)v23 + *(int *)(v24 + 28), v10, v27);
  sub_253487D84(v28, v29);
  return sub_253A8E7B4((uint64_t)v17, (void (*)(void))type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
}

uint64_t sub_253A836FC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v17 - v12;
  uint64_t v21 = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2438, (void (*)(uint64_t))type metadata accessor for TranscriptProtoGlobalToolIdentifier);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoGlobalToolIdentifier);
  uint64_t v15 = v11[1];
  uint64_t v22 = *v11;
  uint64_t v16 = v11[3];
  uint64_t v18 = v11[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoGlobalToolIdentifier);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoGlobalToolIdentifier);
  *a3 = v22;
  a3[1] = v15;
  a3[2] = v18;
  a3[3] = v16;
  return result;
}

uint64_t sub_253A83924@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_253B071D0();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = type metadata accessor for TranscriptProtoCallExpression(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v21 - v15;
  uint64_t v25 = 0;
  long long v23 = 0u;
  long long v24 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE35F8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoCallExpression);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v16, (uint64_t)v14, (void (*)(void))type metadata accessor for TranscriptProtoCallExpression);
  sub_25395E114((uint64_t)v9);
  uint64_t v18 = v9[1];
  uint64_t v26 = *v9;
  uint64_t v19 = v9[3];
  uint64_t v22 = v9[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_253A8E7B4((uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoGlobalToolIdentifier);
  sub_253AE8BF4();
  uint64_t v21 = v20;
  sub_253A8E7B4((uint64_t)v14, (void (*)(void))type metadata accessor for TranscriptProtoCallExpression);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoCallExpression);
  *a3 = v26;
  a3[1] = v18;
  a3[2] = v22;
  a3[3] = v19;
  a3[4] = v21;
  return result;
}

uint64_t sub_253A83C1C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoSayExpression(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v15 - v12;
  uint64_t v16 = 0;
  memset(v15, 0, sizeof(v15));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3610, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSayExpression);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoSayExpression);
  SayExpression.init(transcript:)();
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoSayExpression);
  *a3 = *(void *)&v15[0];
  return result;
}

uint64_t sub_253A83E10@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v26 = a3;
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v30 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253B059D0();
  uint64_t v25 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_253B071D0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v12 = type metadata accessor for TranscriptProtoPickExpression(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (uint64_t *)((char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v23 - v16;
  uint64_t v29 = 0;
  long long v27 = 0u;
  long long v28 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3628, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPickExpression);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  long long v23 = v10;
  uint64_t v24 = v8;
  sub_253A8E760((uint64_t)v17, (uint64_t)v15, (void (*)(void))type metadata accessor for TranscriptProtoPickExpression);
  sub_25395E074(v30);
  uint64_t v19 = v30;
  swift_bridgeObjectRetain();
  uint64_t v20 = v23;
  sub_253B059B0();
  sub_253A8E7B4(v19, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
  uint64_t v21 = *v15;
  sub_253A8E7B4((uint64_t)v15, (void (*)(void))type metadata accessor for TranscriptProtoPickExpression);
  uint64_t v22 = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v26, v20, v24);
  sub_253487D84(a1, a2);
  *(void *)(v22 + *(int *)(type metadata accessor for PickExpression(0) + 20)) = v21;
  return sub_253A8E7B4((uint64_t)v17, (void (*)(void))type metadata accessor for TranscriptProtoPickExpression);
}

uint64_t sub_253A84190(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoConfirmExpression(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3640, (void (*)(uint64_t))type metadata accessor for TranscriptProtoConfirmExpression);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoConfirmExpression);
  ConfirmExpression.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoConfirmExpression);
}

uint64_t sub_253A84384@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoSearchExpression(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = &v18[-v12];
  uint64_t v22 = 0;
  long long v20 = 0u;
  long long v21 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3658, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSearchExpression);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoSearchExpression);
  uint64_t v16 = *(void *)v11;
  uint64_t v15 = *((void *)v11 + 1);
  int v17 = v11[16];
  int v23 = v11[17];
  int v24 = v17;
  int v19 = v11[18];
  swift_bridgeObjectRetain();
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoSearchExpression);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoSearchExpression);
  *(void *)a3 = v16;
  *(void *)(a3 + 8) = v15;
  *(unsigned char *)(a3 + 16) = v24;
  *(unsigned char *)(a3 + 17) = v23;
  *(unsigned char *)(a3 + 18) = v19;
  return result;
}

uint64_t sub_253A845B8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoStructuredSearchExpression(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v17 - v12;
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3670, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStructuredSearchExpression);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoStructuredSearchExpression);
  swift_bridgeObjectRetain();
  sub_253AE8BF4();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoStructuredSearchExpression);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoStructuredSearchExpression);
  *a3 = v16;
  return result;
}

uint64_t sub_253A847D0(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoPickOneExpression(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3688, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPickOneExpression);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoPickOneExpression);
  PickOneExpression.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoPickOneExpression);
}

uint64_t sub_253A849C4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoResolveToolExpression(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v25 - v12;
  uint64_t v26 = 0;
  memset(v25, 0, sizeof(v25));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE36A0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResolveToolExpression);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoResolveToolExpression);
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_253951B08(v15, v16, v17, v18, v19, v20, v21, v22, *(uint64_t *)&v25[0], *((uint64_t (**)(uint64_t))&v25[0] + 1));
  uint64_t v24 = v23;
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoResolveToolExpression);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoResolveToolExpression);
  *a3 = v24;
  return result;
}

uint64_t sub_253A84BD0(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoUndoExpression(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE36B8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUndoExpression);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoUndoExpression);
  UndoExpression.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoUndoExpression);
}

uint64_t sub_253A84DC4(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoRejectExpression(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE36D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRejectExpression);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoRejectExpression);
  RejectExpression.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoRejectExpression);
}

uint64_t sub_253A84FB8(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoCancelExpression(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE36E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoCancelExpression);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoCancelExpression);
  CancelExpression.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoCancelExpression);
}

uint64_t sub_253A851AC(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoOpenExpression(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3760, (void (*)(uint64_t))type metadata accessor for TranscriptProtoOpenExpression);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoOpenExpression);
  OpenExpression.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoOpenExpression);
}

uint64_t sub_253A853A0(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoProgramStatement(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE1EC0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoProgramStatement);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoProgramStatement);
  ProgramStatement.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoProgramStatement);
}

uint64_t sub_253A85594(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE1FE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
  swift_bridgeObjectRetain();
  sub_253B059B0();
  sub_253A8E7B4((uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
}

uint64_t sub_253A857A8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a3;
  uint64_t v6 = sub_253B05A00();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_253B071D0();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = type metadata accessor for TranscriptProtoActionOutcome(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = 0;
  memset(v18, 0, sizeof(v18));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2B88, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionOutcome);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F4C010], v6);
  uint64_t v15 = v20;
  sub_253B05A60();
  uint64_t v16 = *MEMORY[0x263F4C0F8];
  uint64_t v17 = sub_253B05AB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v15, v16, v17);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoActionOutcome);
}

uint64_t sub_253A85A44(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoActionRequirement(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2BA0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionRequirement);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoActionRequirement);
  ActionRequirement.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoActionRequirement);
}

uint64_t sub_253A85C38(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v22 = 0;
  long long v20 = 0u;
  long long v21 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE0410, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementOutcome);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoStatementOutcome);
  StatementOutcome.init(transcript:)((uint64_t)v9, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, v23, v24, v25, v26, v27, v28,
    v29);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoStatementOutcome);
}

uint64_t sub_253A85E2C(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoActionSuccess(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2C90, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionSuccess);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoActionSuccess);
  ActionSuccess.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoActionSuccess);
}

uint64_t sub_253A86020(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoResponseManifest(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE0400, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseManifest);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoResponseManifest);
  ResponseManifest.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoResponseManifest);
}

uint64_t sub_253A86214@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoResponseParameter(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v18 - v12;
  uint64_t v26 = 0;
  long long v24 = 0u;
  long long v25 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2098, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseParameter);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoResponseParameter);
  uint64_t v15 = *(void *)v11;
  uint64_t v17 = *((void *)v11 + 2);
  unint64_t v18 = *((void *)v11 + 3);
  unint64_t v16 = v18;
  uint64_t v22 = *((void *)v11 + 4);
  uint64_t v23 = v15;
  uint64_t v27 = *((void *)v11 + 7);
  uint64_t v20 = a3;
  int v19 = v11[72];
  int v21 = v11[48];
  swift_bridgeObjectRetain();
  sub_2535342E8(v17, v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_253B06960();
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoResponseParameter);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoResponseParameter);
}

uint64_t sub_253A8649C(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoResponseDialog(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (void *)((char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v14 - v10;
  uint64_t v17 = 0;
  long long v15 = 0u;
  long long v16 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2F18, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseDialog);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoResponseDialog);
  uint64_t v18 = *v9;
  uint64_t v13 = v9[2];
  _OWORD v14[2] = v9[4];
  void v14[3] = v13;
  v14[1] = v9[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_253B062B0();
  sub_253A8E7B4((uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoResponseDialog);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoResponseDialog);
}

uint64_t sub_253A866FC(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoResponseVisual(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3098, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseVisual);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoResponseVisual);
  ResponseVisual.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoResponseVisual);
}

uint64_t sub_253A868F0(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoUIType(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE20C8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUIType);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoUIType);
  ResponseVisual.UIType.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoUIType);
}

uint64_t sub_253A86AE4(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoUILabel(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE20D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUILabel);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoUILabel);
  ResponseVisual.UILabel.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoUILabel);
}

uint64_t sub_253A86CD8(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE30B0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseVisualOptions);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoResponseVisualOptions);
  sub_253B064C0();
  sub_253A8E7B4((uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoResponseVisualOptions);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoResponseVisualOptions);
}

uint64_t sub_253A86ED4(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v17 - v10;
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE30E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUIConfirmationLabel);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoUIConfirmationLabel);
  uint64_t v13 = *v9;
  uint64_t v14 = v9[1];
  uint64_t v15 = v9[2];
  uint64_t v16 = v9[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x25A265620](v13, v14, v15, v16);
  sub_253A8E7B4((uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoUIConfirmationLabel);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoUIConfirmationLabel);
}

uint64_t sub_253A870FC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoArchiveViewPayload(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (void *)((char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v17 - v12;
  uint64_t v20 = 0;
  long long v18 = 0u;
  long long v19 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3100, (void (*)(uint64_t))type metadata accessor for TranscriptProtoArchiveViewPayload);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoArchiveViewPayload);
  uint64_t v15 = *v11;
  unint64_t v16 = v11[1];
  uint64_t v21 = v11[2];
  v17[0] = a3;
  v17[1] = v11[4];
  sub_25348A9C8(v15, v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_253B06570();
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoArchiveViewPayload);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoArchiveViewPayload);
}

uint64_t sub_253A87348(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3118, (void (*)(uint64_t))type metadata accessor for TranscriptProtoLiveActivityPayload);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoLiveActivityPayload);
  swift_bridgeObjectRetain();
  sub_253B06590();
  sub_253A8E7B4((uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoLiveActivityPayload);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoLiveActivityPayload);
}

uint64_t sub_253A87554(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoPluginSnippetPayload(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v16 - v10;
  uint64_t v17 = 0;
  memset(v16, 0, sizeof(v16));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3130, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPluginSnippetPayload);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoPluginSnippetPayload);
  uint64_t v13 = *v9;
  unint64_t v14 = v9[1];
  uint64_t v15 = v9[3];
  uint64_t v18 = v9[2];
  sub_25348A9C8(v13, v14);
  swift_bridgeObjectRetain();
  MEMORY[0x25A2655D0](v13, v14, v18, v15);
  sub_253A8E7B4((uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoPluginSnippetPayload);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoPluginSnippetPayload);
}

uint64_t sub_253A87784@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a3;
  uint64_t v6 = sub_253B09220();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = sub_253462A5C(&qword_269CE5070);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_253B071D0();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = type metadata accessor for TranscriptProtoControlPayload(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  unint64_t v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unint64_t v16 = (char *)v18 - v15;
  uint64_t v19 = 0;
  memset(v18, 0, sizeof(v18));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3148, (void (*)(uint64_t))type metadata accessor for TranscriptProtoControlPayload);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v16, (uint64_t)v14, (void (*)(void))type metadata accessor for TranscriptProtoControlPayload);
  sub_25348A9C8(*(void *)v14, *((void *)v14 + 1));
  sub_253B09210();
  sub_25395DAF0();
  sub_2534B2064((uint64_t)v9, &qword_269CE5070);
  sub_253B06520();
  sub_253A8E7B4((uint64_t)v14, (void (*)(void))type metadata accessor for TranscriptProtoControlPayload);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoControlPayload);
}

uint64_t sub_253A87A8C(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoVisualOutput(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE1FD0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVisualOutput);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoVisualOutput);
  ResponseOutput.VisualOutput.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoVisualOutput);
}

uint64_t sub_253A87C80(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2F70, (void (*)(uint64_t))type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
  swift_bridgeObjectRetain();
  sub_253B06310();
  sub_253A8E7B4((uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
}

uint64_t sub_253A87E8C(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2F88, (void (*)(uint64_t))type metadata accessor for TranscriptProtoInAppResponseOutputPayload);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoInAppResponseOutputPayload);
  swift_bridgeObjectRetain();
  sub_253B06310();
  sub_253A8E7B4((uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoInAppResponseOutputPayload);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoInAppResponseOutputPayload);
}

uint64_t sub_253A88098(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v15 - v10;
  uint64_t v16 = 0;
  memset(v15, 0, sizeof(v15));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2FB8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPluginSnippetOutputPayload);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoPluginSnippetOutputPayload);
  uint64_t v13 = *v9;
  unint64_t v14 = v9[1];
  uint64_t v17 = v9[2];
  sub_25348A9C8(v13, v14);
  swift_bridgeObjectRetain();
  sub_253B06350();
  sub_253A8E7B4((uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoPluginSnippetOutputPayload);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoPluginSnippetOutputPayload);
}

uint64_t sub_253A882C8(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoDialogType(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2FD0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDialogType);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoDialogType);
  ResponseOutput.DialogType.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoDialogType);
}

uint64_t sub_253A884BC(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v22 = 0;
  long long v20 = 0u;
  long long v21 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3490, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatExpr);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoASTFlatExpr);
  AST.FlatExpr.init(transcript:)((uint64_t)v9, v13, v14, v15, v16, v17, v18, v19, v20, *((ValueMetadata **)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, v23, v24, v25, v26, v27, v28,
    v29);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoASTFlatExpr);
}

uint64_t sub_253A886B0(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(0);
  uint64_t v7 = MEMORY[0x270FA5388](updated);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE22B8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant);
  AST.Update.init(transcript:)(v9);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant);
}

uint64_t sub_253A888A4(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoASTPickType(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v17 - v10;
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE33A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTPickType);
  sub_253B073C0();
  if (v2)
  {
    sub_253487D84(a1, a2);
  }
  else
  {
    sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoASTPickType);
    int v12 = v9[8];
    if (v12 == 255)
    {
      *(void *)&v17[0] = &type metadata for TranscriptProtoAstpickTypeEnum;
      sub_253462A5C(&qword_269CE8698);
      uint64_t v14 = sub_253B09730();
      uint64_t v6 = v15;
      sub_253961DC0();
      swift_allocError();
      *(void *)uint64_t v16 = v14;
      *(void *)(v16 + 8) = v6;
      *(unsigned char *)(v16 + 16) = 0;
      swift_willThrow();
      sub_253A8E7B4((uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoASTPickType);
      sub_253487D84(a1, a2);
      sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoASTPickType);
    }
    else
    {
      if (v12) {
        uint64_t v6 = 0;
      }
      else {
        uint64_t v6 = *(void *)v9;
      }
      sub_253A8E7B4((uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoASTPickType);
      sub_253487D84(a1, a2);
      sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoASTPickType);
    }
  }
  return v6;
}

uint64_t sub_253A88B48(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2240, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatValue);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoASTFlatValue);
  AST.FlatValue.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoASTFlatValue);
}

uint64_t sub_253A88D3C(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoActionParameterValue(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE1BA8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionParameterValue);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoActionParameterValue);
  Action.ParameterValue.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoActionParameterValue);
}

uint64_t sub_253A88F30@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoContextRetrieved(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v35 - v12;
  uint64_t v36 = 0;
  memset(v35, 0, sizeof(v35));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE31C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoContextRetrieved);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoContextRetrieved);
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_2539542B0(v15, v16, v17, v18, v19, v20, v21, v22, *(uint64_t *)&v35[0], *((uint64_t (**)(uint64_t))&v35[0] + 1));
  uint64_t v24 = v23;
  uint64_t v25 = swift_bridgeObjectRetain();
  sub_2539542B0(v25, v26, v27, v28, v29, v30, v31, v32, *(uint64_t *)&v35[0], *((uint64_t (**)(uint64_t))&v35[0] + 1));
  uint64_t v34 = v33;
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoContextRetrieved);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoContextRetrieved);
  *a3 = v24;
  a3[1] = v34;
  return result;
}

uint64_t sub_253A891BC(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoRetrievedContextStatement(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2188, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRetrievedContextStatement);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoRetrievedContextStatement);
  RetrievedContextStatement.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoRetrievedContextStatement);
}

uint64_t sub_253A893B0(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2548, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement);
  DynamicEnumerationEntityStatement.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement);
}

uint64_t sub_253A895A4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t matched = type metadata accessor for TranscriptProtoEntitySpanMatchResult(0);
  uint64_t v9 = MEMORY[0x270FA5388](matched);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v25 - v12;
  uint64_t v26 = 0;
  memset(v25, 0, sizeof(v25));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE37A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoEntitySpanMatchResult);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoEntitySpanMatchResult);
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_2539507F4(v15, v16, v17, v18, v19, v20, v21, v22, *(uint64_t *)&v25[0], *((uint64_t (**)(uint64_t))&v25[0] + 1));
  uint64_t v24 = v23;
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoEntitySpanMatchResult);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoEntitySpanMatchResult);
  *a3 = v24;
  return result;
}

uint64_t sub_253A897B4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoToolRetrievalResponse(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v17 - v12;
  uint64_t v19 = 0;
  long long v17 = 0u;
  long long v18 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE37C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoToolRetrievalResponse);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoToolRetrievalResponse);
  ToolRetrievalResponse.init(transcript:)(v11, (uint64_t)&v17);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoToolRetrievalResponse);
  long long v15 = v18;
  int v16 = v19;
  *(_OWORD *)a3 = v17;
  *(_OWORD *)(a3 + 16) = v15;
  *(_DWORD *)(a3 + 32) = v16;
  *(_OWORD *)(a3 + 40) = v20;
  return result;
}

uint64_t sub_253A899CC(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoToolParameterValue(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3790, (void (*)(uint64_t))type metadata accessor for TranscriptProtoToolParameterValue);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoToolParameterValue);
  ToolParameterValue.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoToolParameterValue);
}

uint64_t sub_253A89BC0(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v20 - v10;
  uint64_t v21 = 0;
  memset(v20, 0, sizeof(v20));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE39C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentTextQuery);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentTextQuery);
  ExternalAgentTextQuery.init(transcript:)((uint64_t)v9, v13, v14, v15, v16, v17, v18, v19, *(uint64_t *)&v20[0], *((uint64_t *)&v20[0] + 1));
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentTextQuery);
}

uint64_t sub_253A89DB4(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE39F0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
  ExternalAgentSpeechQuery.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
}

uint64_t sub_253A89FA8(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE29A0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentOutcome);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentOutcome);
  ExternalAgentOutcome.init(transcript:)(v9);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentOutcome);
}

uint64_t sub_253A8A19C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v17 - v12;
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2790, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  uint64_t v15 = v11[1];
  uint64_t v19 = *v11;
  uint64_t v16 = v11[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  *a3 = v19;
  a3[1] = v15;
  a3[2] = v16;
  return result;
}

uint64_t sub_253A8A3BC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a3;
  uint64_t v6 = sub_253B055C0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_253B071D0();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = type metadata accessor for TranscriptProtoUndoContext(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v18 - v15;
  uint64_t v19 = 0;
  memset(v18, 0, sizeof(v18));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2CA8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUndoContext);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v16, (uint64_t)v14, (void (*)(void))type metadata accessor for TranscriptProtoUndoContext);
  sub_253B05560();
  sub_25395D974();
  sub_2534B2064((uint64_t)v9, (uint64_t *)&unk_26B248CB0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_253B05BA0();
  sub_253A8E7B4((uint64_t)v14, (void (*)(void))type metadata accessor for TranscriptProtoUndoContext);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoUndoContext);
}

uint64_t sub_253A8A6A4(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoFollowUpAction(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2CC0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoFollowUpAction);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoFollowUpAction);
  ActionSuccess.FollowUpAction.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoFollowUpAction);
}

uint64_t sub_253A8A898(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2CD8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoFollowUpActionExecutableAction);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoFollowUpActionExecutableAction);
  ActionSuccess.FollowUpAction.ExecutableAction.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoFollowUpActionExecutableAction);
}

uint64_t sub_253A8AA8C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v6 = sub_253462A5C(&qword_269CE8688);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (void *)((char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v18 - v12;
  uint64_t v21 = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2CF0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  v18[3] = v6;
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction);
  uint64_t v15 = v11[1];
  v18[1] = *v11;
  _OWORD v18[2] = v15;
  uint64_t v16 = v11[2];
  unint64_t v17 = v11[3];
  swift_bridgeObjectRetain();
  sub_25348A9C8(v16, v17);
  if (qword_269CDB0A8 != -1) {
    swift_once();
  }
  sub_253A8E5FC();
  sub_253B05000();
  sub_253487D84(v16, v17);
  sub_253B05AE0();
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction);
}

uint64_t sub_253A8ADA4(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoShimParameterResolution(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE1CD0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoShimParameterResolution);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoShimParameterResolution);
  ClientAction.ShimParameterResolution.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoShimParameterResolution);
}

uint64_t sub_253A8AF98@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v41 = a3;
  uint64_t v6 = sub_253B08E50();
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v40 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v38 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  long long v45 = (char *)&v34 - v9;
  uint64_t v10 = sub_253B09120();
  uint64_t v37 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_253B071D0();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v14 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  unint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  long long v19 = (char *)&v34 - v18;
  uint64_t v44 = 0;
  long long v42 = 0u;
  long long v43 = 0u;
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2AB0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUnresolvedParameterValue);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  uint64_t v34 = v10;
  uint64_t v35 = v12;
  uint64_t v22 = v39;
  uint64_t v21 = v40;
  uint64_t v23 = v41;
  uint64_t v36 = v19;
  sub_253A8E760((uint64_t)v19, (uint64_t)v17, (void (*)(void))type metadata accessor for TranscriptProtoUnresolvedParameterValue);
  sub_25395DCE8();
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v38, v45, v21);
  sub_253B09110();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v45, v21);
  uint64_t v24 = swift_bridgeObjectRetain();
  sub_25394F2C0(v24, v25, v26, v27, v28, v29, v30, v31, v34, (uint64_t)v35);
  uint64_t v33 = v32;
  sub_253A8E7B4((uint64_t)v17, (void (*)(void))type metadata accessor for TranscriptProtoUnresolvedParameterValue);
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v23, v35, v34);
  sub_253487D84(a1, a2);
  *(void *)(v23 + *(int *)(type metadata accessor for ClientAction.UnresolvedParameterValue(0) + 20)) = v33;
  return sub_253A8E7B4((uint64_t)v36, (void (*)(void))type metadata accessor for TranscriptProtoUnresolvedParameterValue);
}

uint64_t sub_253A8B404(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v21 - v10;
  uint64_t v22 = 0;
  memset(v21, 0, sizeof(v21));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2D38, (void (*)(uint64_t))type metadata accessor for TranscriptProtoValueDisambiguation);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoValueDisambiguation);
  uint64_t v13 = swift_bridgeObjectRetain();
  sub_25394F2C0(v13, v14, v15, v16, v17, v18, v19, v20, *(uint64_t *)&v21[0], *((uint64_t *)&v21[0] + 1));
  sub_253B05DE0();
  sub_253A8E7B4((uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoValueDisambiguation);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoValueDisambiguation);
}

uint64_t sub_253A8B614(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoActionFailure(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2C48, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionFailure);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoActionFailure);
  ActionFailure.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoActionFailure);
}

uint64_t sub_253A8B808@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v16 - v12;
  uint64_t v17 = 0;
  memset(v16, 0, sizeof(v16));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE32A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
  char v15 = *v11;
  sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
  *a3 = v15;
  return result;
}

uint64_t sub_253A8BA00(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoTypeConversionRequest(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE38A0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTypeConversionRequest);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoTypeConversionRequest);
  TypeConversionRequest.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoTypeConversionRequest);
}

uint64_t sub_253A8BBF4(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoTypeConversionResult(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE38B8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTypeConversionResult);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoTypeConversionResult);
  TypeConversionResult.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoTypeConversionResult);
}

uint64_t sub_253A8BDE8(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t DecorationResult = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
  uint64_t v7 = MEMORY[0x270FA5388](DecorationResult);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE38D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationResult);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoQueryDecorationResult);
  QueryDecorationResult.init(transcript:)();
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoQueryDecorationResult);
}

uint64_t sub_253A8BFDC(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t DecorationPrePlannerResult = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
  uint64_t v7 = MEMORY[0x270FA5388](DecorationPrePlannerResult);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v20 - v10;
  uint64_t v21 = 0;
  memset(v20, 0, sizeof(v20));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE38E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
  QueryDecorationPrePlannerResult.init(transcript:)((uint64_t)v9, v13, v14, v15, v16, v17, v18, v19, *(uint64_t *)&v20[0], *((uint64_t *)&v20[0] + 1));
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
}

uint64_t sub_253A8C1D0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_253B071D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  uint64_t v9 = MEMORY[0x270FA5388](DecorationPrePlannerResultPayload);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v16 - v12;
  uint64_t v17 = 0;
  memset(v16, 0, sizeof(v16));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE3990, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
  sub_253B073C0();
  if (v3) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
  QueryDecorationPrePlannerResultPayload.init(transcript:)();
  sub_253487D84(a1, a2);
  uint64_t result = sub_253A8E7B4((uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
  char v15 = BYTE8(v16[0]);
  *(void *)a3 = *(void *)&v16[0];
  *(unsigned char *)(a3 + 8) = v15;
  return result;
}

uint64_t sub_253A8C3D8(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v17 - v10;
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_25348A9C8(a1, a2);
  sub_253B071C0();
  sub_253A8E718(&qword_269CE2C78, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
  sub_253B073C0();
  if (v2) {
    return sub_253487D84(a1, a2);
  }
  sub_253A8E760((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
  uint64_t v13 = *v9;
  uint64_t v14 = v9[1];
  uint64_t v15 = v9[2];
  uint64_t v16 = v9[3];
  uint64_t v19 = v9[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x25A264A10](v13, v14, v15, v16, v19);
  sub_253A8E7B4((uint64_t)v9, (void (*)(void))type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
  sub_253487D84(a1, a2);
  return sub_253A8E7B4((uint64_t)v11, (void (*)(void))type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
}

void TranscriptBidirectionalConvertibleProtocol.init(protoBytes:)()
{
  sub_2534847F8();
  v21[1] = v2;
  uint64_t v22 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  unint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = sub_253B071D0();
  MEMORY[0x270FA5388](v11 - 8);
  sub_25346CC44();
  uint64_t v12 = *(void *)(v4 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_2534727C4();
  uint64_t v23 = v14;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v21 - v19;
  swift_getAssociatedConformanceWitness();
  long long v24 = 0u;
  long long v25 = 0u;
  uint64_t v26 = 0;
  sub_25348A9C8(v10, v8);
  sub_253B071C0();
  sub_253B073C0();
  if (v1)
  {
    sub_253487D84(v10, v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v18, v20, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v18, v6, v12);
    sub_253487D84(v10, v8);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, AssociatedTypeWitness);
  }
  sub_2534847C8();
}

void ConvertibleFromTranscriptTypeProtocol.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v2 = v1;
  uint64_t v39 = v3;
  sub_2534727C4();
  uint64_t v36 = v4;
  MEMORY[0x270FA5388](v5);
  sub_25346CC44();
  uint64_t v38 = v7 - v6;
  uint64_t v37 = v8;
  uint64_t v40 = v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_253B09E00();
  sub_2534727C4();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v35 - v15;
  sub_2534727C4();
  uint64_t v18 = v17;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  long long v24 = (char *)v35 - v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v2, v11);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, AssociatedTypeWitness) == 1)
  {
    long long v25 = *(void (**)(void))(v13 + 8);
    sub_253A8E80C();
    v25();
    sub_253A8E80C();
    v25();
    uint64_t v26 = 1;
    uint64_t v27 = v39;
    uint64_t v28 = v40;
LABEL_6:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v27, v26, 1, v28);
    goto LABEL_7;
  }
  v35[1] = v2;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v24, v16, AssociatedTypeWitness);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v22, v24, AssociatedTypeWitness);
  uint64_t v28 = v40;
  (*(void (**)(char *, uint64_t))(v37 + 16))(v22, v40);
  if (!v0)
  {
    sub_253A8E80C();
    v32();
    uint64_t v33 = sub_253A8E81C();
    v34(v33);
    uint64_t v27 = v39;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v39, v38, v28);
    uint64_t v26 = 0;
    goto LABEL_6;
  }
  sub_253A8E80C();
  v29();
  uint64_t v30 = sub_253A8E81C();
  v31(v30);
LABEL_7:
  sub_2534847C8();
}

uint64_t sub_253A8CAD8(uint64_t a1, unint64_t a2)
{
  return sub_253A74530(a1, a2);
}

uint64_t sub_253A8CAF0(uint64_t a1, unint64_t a2)
{
  return sub_253A74724(a1, a2);
}

uint64_t sub_253A8CB08(uint64_t a1, unint64_t a2)
{
  return sub_253A74918(a1, a2);
}

uint64_t sub_253A8CB20(uint64_t a1, unint64_t a2)
{
  return sub_253A74B0C(a1, a2);
}

uint64_t sub_253A8CB38@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A74D00(a1, a2, a3);
}

uint64_t sub_253A8CB50(uint64_t a1, unint64_t a2)
{
  return sub_253A74FB4(a1, a2);
}

uint64_t sub_253A8CB68(uint64_t a1, unint64_t a2)
{
  return sub_253A75230(a1, a2);
}

uint64_t sub_253A8CB80(uint64_t a1, unint64_t a2)
{
  return sub_253A754EC(a1, a2);
}

uint64_t sub_253A8CB98(uint64_t a1, unint64_t a2)
{
  return sub_253A756E0(a1, a2);
}

uint64_t sub_253A8CBB0(uint64_t a1, unint64_t a2)
{
  return sub_253A758D4(a1, a2);
}

uint64_t sub_253A8CBC8(uint64_t a1, unint64_t a2)
{
  return sub_253A75AC8(a1, a2);
}

uint64_t sub_253A8CBE0(uint64_t a1, unint64_t a2)
{
  return sub_253A75CBC(a1, a2);
}

uint64_t sub_253A8CBF8(uint64_t a1, unint64_t a2)
{
  return sub_253A75EB0(a1, a2);
}

uint64_t sub_253A8CC10(uint64_t a1, unint64_t a2)
{
  return sub_253A760A4(a1, a2);
}

uint64_t sub_253A8CC28(uint64_t a1, unint64_t a2)
{
  return sub_253A76298(a1, a2);
}

uint64_t sub_253A8CC40(uint64_t a1, unint64_t a2)
{
  return sub_253A7648C(a1, a2);
}

uint64_t sub_253A8CC58@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A766A8(a1, a2, a3);
}

uint64_t sub_253A8CC70(uint64_t a1, unint64_t a2)
{
  return sub_253A769FC(a1, a2);
}

uint64_t sub_253A8CC88@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A76BF0(a1, a2, a3);
}

uint64_t sub_253A8CCA0(uint64_t a1, unint64_t a2)
{
  return sub_253A76EE8(a1, a2);
}

uint64_t sub_253A8CCB8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_253A770DC(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_253A8CCE4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_253A772DC(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_253A8CD10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v14 = (char *)&v17 - v13;
  (*(void (**)(char *, uint64_t))(v15 + 16))((char *)&v17 - v13, a1);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a5 + 16))(v14, a3, a5);
  if (v7) {
    *a7 = v7;
  }
  return result;
}

uint64_t sub_253A8CE38(uint64_t a1, void *a2)
{
  return sub_253A8CD10(a1, v2[6], v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t Set<>.init(transcript:)()
{
  swift_getAssociatedTypeWitness();
  sub_253B09B80();
  sub_253462A5C(&qword_26B24A590);
  swift_getWitnessTable();
  sub_253A480D4();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0)
  {
    sub_253B09B80();
    swift_getWitnessTable();
    return sub_253B09C70();
  }
  return result;
}

uint64_t sub_253A8CFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v13 = (char *)&v16 - v12;
  (*(void (**)(char *, uint64_t))(v14 + 16))((char *)&v16 - v12, a1);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a4 + 16))(v13, a3, a4);
  if (v6) {
    *a6 = v6;
  }
  return result;
}

uint64_t Dictionary<>.init(transcript:)()
{
  swift_getAssociatedTypeWitness();
  uint64_t v0 = sub_253B095B0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_253A8D19C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v11 = (char *)v14 - v10;
  (*(void (**)(char *, uint64_t))(v12 + 16))((char *)v14 - v10, a1);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(a6 + 16))(v11, a4, a6);
}

uint64_t sub_253A8D2BC(uint64_t a1, void *a2)
{
  return sub_253A8CFB8(a1, v2[5], v2[2], v2[3], v2[4], a2);
}

uint64_t sub_253A8D2E0(uint64_t a1)
{
  return sub_253A8D19C(a1, v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_253A8D304(uint64_t a1)
{
  return sub_253A8D36C(a1, MEMORY[0x263F061E0], MEMORY[0x263F061D8], &qword_269D7B678);
}

uint64_t sub_253A8D338(uint64_t a1)
{
  return sub_253A8D36C(a1, MEMORY[0x263F06128], MEMORY[0x263F06120], &qword_269D7B680);
}

uint64_t sub_253A8D36C(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void), uint64_t *a4)
{
  a2(0);
  swift_allocObject();
  uint64_t result = a3();
  *a4 = result;
  return result;
}

uint64_t sub_253A8D3C0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  return sub_253A774DC(a1, a2, a3);
}

uint64_t sub_253A8D3D8(uint64_t a1, unint64_t a2)
{
  return sub_253A7786C(a1, a2);
}

uint64_t sub_253A8D3F0(uint64_t a1, unint64_t a2)
{
  return sub_253A77A60(a1, a2);
}

uint64_t sub_253A8D408(uint64_t a1, unint64_t a2)
{
  return sub_253A77C54(a1, a2);
}

uint64_t protocol witness for ProtoBytesConvertible.init(protoBytes:) in conformance ParticipantID@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_253A77E48(a1, a2);
  if (!v3)
  {
    *a3 = result;
    a3[1] = v6;
  }
  return result;
}

uint64_t protocol witness for ProtoBytesConvertible.init(protoBytes:) in conformance SpanID@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_253A78048(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t dispatch thunk of ProtoBytesConvertible.init(protoBytes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ProtoBytesConvertible.protoBytes()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ConvertibleFromTranscriptTypeProtocol.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for TranscriptConversion()
{
  return &type metadata for TranscriptConversion;
}

uint64_t sub_253A8D504(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for TranscriptConversion.Error(uint64_t a1)
{
  return sub_253A8D52C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_253A8D52C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s30IntelligenceFlowPlannerSupport20TranscriptConversionO5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_253A8D504(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for TranscriptConversion.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_253A8D504(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_253A8D52C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for TranscriptConversion.Error(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_253A8D52C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptConversion.Error(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptConversion.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_253A8D6B4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_253A8D6CC(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptConversion.Error()
{
  return &type metadata for TranscriptConversion.Error;
}

uint64_t sub_253A8D6F4(uint64_t a1, unint64_t a2)
{
  return sub_253A7823C(a1, a2);
}

uint64_t sub_253A8D70C(uint64_t a1, unint64_t a2)
{
  return sub_253A78430(a1, a2);
}

uint64_t sub_253A8D724@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A78624(a1, a2, a3);
}

uint64_t sub_253A8D73C(uint64_t a1, unint64_t a2)
{
  return sub_253A78934(a1, a2);
}

uint64_t sub_253A8D754@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A78B30(a1, a2, a3);
}

void sub_253A8D76C()
{
}

void sub_253A8D7C8()
{
}

uint64_t sub_253A8D824@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A78F74(a1, a2, a3);
}

uint64_t sub_253A8D83C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_253A791F0(a1, a2, a3);
}

uint64_t sub_253A8D854(uint64_t a1, unint64_t a2)
{
  return sub_253A795D4(a1, a2);
}

uint64_t sub_253A8D86C(uint64_t a1, unint64_t a2)
{
  return sub_253A797C8(a1, a2);
}

void sub_253A8D884()
{
}

uint64_t sub_253A8D8E0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  return sub_253A799BC(a1, a2, a3);
}

uint64_t sub_253A8D8F8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_253A79D4C(a1, a2, a3);
}

uint64_t sub_253A8D910(uint64_t a1, unint64_t a2)
{
  return sub_253A79F5C(a1, a2);
}

uint64_t sub_253A8D928(uint64_t a1, unint64_t a2)
{
  return sub_253A7A150(a1, a2);
}

uint64_t sub_253A8D940@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A7A344(a1, a2, a3);
}

uint64_t sub_253A8D958@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_253A7A560(a1, a2, a3);
}

uint64_t sub_253A8D970@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A7A768(a1, a2, a3);
}

uint64_t sub_253A8D988@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A7A980(a1, a2, a3);
}

uint64_t sub_253A8D9A0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A7AB98(a1, a2, a3);
}

uint64_t sub_253A8D9B8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A7ADB0(a1, a2, a3);
}

uint64_t sub_253A8D9D0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A7AFC8(a1, a2, a3);
}

uint64_t sub_253A8D9E8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A7B364(a1, a2, a3);
}

uint64_t sub_253A8DA00(uint64_t a1, unint64_t a2)
{
  return sub_253A7B574(a1, a2);
}

uint64_t sub_253A8DA18(uint64_t a1, unint64_t a2)
{
  return sub_253A7B768(a1, a2);
}

uint64_t sub_253A8DA30(uint64_t a1, unint64_t a2)
{
  return sub_253A7B95C(a1, a2);
}

uint64_t sub_253A8DA48(uint64_t a1, unint64_t a2)
{
  return sub_253A7BB50(a1, a2);
}

uint64_t sub_253A8DA60@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A7BD44(a1, a2, a3);
}

uint64_t sub_253A8DA78@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A7C040(a1, a2, a3);
}

uint64_t sub_253A8DA90@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A7C274(a1, a2, a3);
}

uint64_t sub_253A8DAA8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A7C658(a1, a2, a3);
}

uint64_t sub_253A8DAC0(uint64_t a1, unint64_t a2)
{
  return sub_253A7CA3C(a1, a2);
}

uint64_t sub_253A8DAD8(uint64_t a1, unint64_t a2)
{
  return sub_253A7CC74(a1, a2);
}

uint64_t sub_253A8DAF0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A7CE68(a1, a2, a3);
}

uint64_t sub_253A8DB08(uint64_t a1, unint64_t a2)
{
  return sub_253A7D324(a1, a2);
}

uint64_t sub_253A8DB20(uint64_t a1, unint64_t a2)
{
  return sub_253A7D518(a1, a2);
}

uint64_t sub_253A8DB38(uint64_t a1, unint64_t a2)
{
  return sub_253A7D70C(a1, a2);
}

uint64_t sub_253A8DB50(uint64_t a1, unint64_t a2)
{
  return sub_253A7D900(a1, a2);
}

uint64_t sub_253A8DB68(uint64_t a1, unint64_t a2)
{
  return sub_253A7DAF4(a1, a2);
}

uint64_t sub_253A8DB80(uint64_t a1, unint64_t a2)
{
  return sub_253A7DCE8(a1, a2);
}

uint64_t sub_253A8DB98@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_253A7DEDC(a1, a2, a3);
}

uint64_t sub_253A8DBB0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_253A7E0EC(a1, a2, a3);
}

void sub_253A8DBC8()
{
}

uint64_t sub_253A8DC24@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_253A7E4B8(a1, a2, a3);
}

uint64_t sub_253A8DC3C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  return sub_253A7E6C0(a1, a2, a3);
}

uint64_t sub_253A8DC54(uint64_t a1, unint64_t a2)
{
  return sub_253A7EB20(a1, a2);
}

uint64_t sub_253A8DC6C(uint64_t a1, unint64_t a2)
{
  return sub_253A7ED14(a1, a2);
}

uint64_t sub_253A8DC84(uint64_t a1, unint64_t a2)
{
  return sub_253A7EF08(a1, a2);
}

uint64_t sub_253A8DC9C(uint64_t a1, unint64_t a2)
{
  return sub_253A7F0FC(a1, a2);
}

uint64_t sub_253A8DCB4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_253A7F2F0(a1, a2, a3);
}

uint64_t sub_253A8DCCC(uint64_t a1, unint64_t a2)
{
  return sub_253A7F500(a1, a2);
}

uint64_t sub_253A8DCE4(uint64_t a1, unint64_t a2)
{
  return sub_253A7F6F4(a1, a2);
}

uint64_t sub_253A8DCFC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A7F8E8(a1, a2, a3);
}

uint64_t sub_253A8DD14(uint64_t a1, unint64_t a2)
{
  return sub_253A7FC48(a1, a2);
}

uint64_t sub_253A8DD2C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A7FE3C(a1, a2, a3);
}

uint64_t sub_253A8DD44@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A80234(a1, a2, a3);
}

uint64_t sub_253A8DD5C(uint64_t a1, unint64_t a2)
{
  return sub_253A80570(a1, a2);
}

uint64_t sub_253A8DD74@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_253A80764(a1, a2, a3);
}

uint64_t sub_253A8DD8C(uint64_t a1, unint64_t a2)
{
  return sub_253A80958(a1, a2);
}

uint64_t sub_253A8DDA4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A80B64(a1, a2, a3);
}

uint64_t sub_253A8DDBC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A80F40(a1, a2, a3);
}

uint64_t sub_253A8DDD4(uint64_t a1, unint64_t a2)
{
  return sub_253A811B4(a1, a2);
}

uint64_t sub_253A8DDEC(uint64_t a1, unint64_t a2)
{
  return sub_253A813A8(a1, a2);
}

uint64_t sub_253A8DE04(uint64_t a1, unint64_t a2)
{
  return sub_253A8159C(a1, a2);
}

uint64_t sub_253A8DE1C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A81790(a1, a2, a3);
}

uint64_t sub_253A8DE34@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A819C4(a1, a2, a3);
}

uint64_t sub_253A8DE4C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A81BE4(a1, a2, a3);
}

uint64_t sub_253A8DE64@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_253A81DEC(a1, a2, a3);
}

uint64_t sub_253A8DE7C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_253A821A8(a1, a2, a3);
}

uint64_t sub_253A8DE94@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_253A823E8(a1, a2, a3);
}

uint64_t sub_253A8DEAC(uint64_t a1, unint64_t a2)
{
  return sub_253A82608(a1, a2);
}

uint64_t sub_253A8DEC4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A827FC(a1, a2, a3);
}

uint64_t sub_253A8DEDC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_253A82A04(a1, a2, a3);
}

uint64_t sub_253A8DEF4(uint64_t a1, unint64_t a2)
{
  return sub_253A82D7C(a1, a2);
}

uint64_t sub_253A8DF0C(uint64_t a1, unint64_t a2)
{
  return sub_253A82F70(a1, a2);
}

uint64_t sub_253A8DF24(uint64_t a1, unint64_t a2)
{
  return sub_253A83164(a1, a2);
}

uint64_t sub_253A8DF3C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_253A83358(a1, a2, a3);
}

uint64_t sub_253A8DF54@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_253A836FC(a1, a2, a3);
}

uint64_t sub_253A8DF6C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_253A83924(a1, a2, a3);
}

uint64_t sub_253A8DF84@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_253A83C1C(a1, a2, a3);
}

uint64_t sub_253A8DF9C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A83E10(a1, a2, a3);
}

uint64_t sub_253A8DFB4(uint64_t a1, unint64_t a2)
{
  return sub_253A84190(a1, a2);
}

uint64_t sub_253A8DFCC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A84384(a1, a2, a3);
}

uint64_t sub_253A8DFE4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_253A845B8(a1, a2, a3);
}

uint64_t sub_253A8DFFC(uint64_t a1, unint64_t a2)
{
  return sub_253A847D0(a1, a2);
}

uint64_t sub_253A8E014@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_253A849C4(a1, a2, a3);
}

uint64_t sub_253A8E02C(uint64_t a1, unint64_t a2)
{
  return sub_253A84BD0(a1, a2);
}

uint64_t sub_253A8E044(uint64_t a1, unint64_t a2)
{
  return sub_253A84DC4(a1, a2);
}

uint64_t sub_253A8E05C(uint64_t a1, unint64_t a2)
{
  return sub_253A84FB8(a1, a2);
}

uint64_t sub_253A8E074(uint64_t a1, unint64_t a2)
{
  return sub_253A851AC(a1, a2);
}

uint64_t sub_253A8E08C(uint64_t a1, unint64_t a2)
{
  return sub_253A853A0(a1, a2);
}

uint64_t sub_253A8E0A4(uint64_t a1, unint64_t a2)
{
  return sub_253A85594(a1, a2);
}

uint64_t sub_253A8E0BC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A857A8(a1, a2, a3);
}

uint64_t sub_253A8E0D4(uint64_t a1, unint64_t a2)
{
  return sub_253A85A44(a1, a2);
}

uint64_t sub_253A8E0EC(uint64_t a1, unint64_t a2)
{
  return sub_253A85C38(a1, a2);
}

uint64_t sub_253A8E104(uint64_t a1, unint64_t a2)
{
  return sub_253A85E2C(a1, a2);
}

uint64_t sub_253A8E11C(uint64_t a1, unint64_t a2)
{
  return sub_253A86020(a1, a2);
}

uint64_t sub_253A8E134@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A86214(a1, a2, a3);
}

uint64_t sub_253A8E14C(uint64_t a1, unint64_t a2)
{
  return sub_253A8649C(a1, a2);
}

uint64_t sub_253A8E164(uint64_t a1, unint64_t a2)
{
  return sub_253A866FC(a1, a2);
}

uint64_t sub_253A8E17C(uint64_t a1, unint64_t a2)
{
  return sub_253A868F0(a1, a2);
}

uint64_t sub_253A8E194(uint64_t a1, unint64_t a2)
{
  return sub_253A86AE4(a1, a2);
}

uint64_t sub_253A8E1AC(uint64_t a1, unint64_t a2)
{
  return sub_253A86CD8(a1, a2);
}

uint64_t sub_253A8E1C4(uint64_t a1, unint64_t a2)
{
  return sub_253A86ED4(a1, a2);
}

uint64_t sub_253A8E1DC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A870FC(a1, a2, a3);
}

uint64_t sub_253A8E1F4(uint64_t a1, unint64_t a2)
{
  return sub_253A87348(a1, a2);
}

uint64_t sub_253A8E20C(uint64_t a1, unint64_t a2)
{
  return sub_253A87554(a1, a2);
}

uint64_t sub_253A8E224@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A87784(a1, a2, a3);
}

uint64_t sub_253A8E23C(uint64_t a1, unint64_t a2)
{
  return sub_253A87A8C(a1, a2);
}

uint64_t sub_253A8E254(uint64_t a1, unint64_t a2)
{
  return sub_253A87C80(a1, a2);
}

uint64_t sub_253A8E26C(uint64_t a1, unint64_t a2)
{
  return sub_253A87E8C(a1, a2);
}

uint64_t sub_253A8E284(uint64_t a1, unint64_t a2)
{
  return sub_253A88098(a1, a2);
}

uint64_t sub_253A8E29C(uint64_t a1, unint64_t a2)
{
  return sub_253A882C8(a1, a2);
}

uint64_t sub_253A8E2B4(uint64_t a1, unint64_t a2)
{
  return sub_253A884BC(a1, a2);
}

uint64_t sub_253A8E2CC(uint64_t a1, unint64_t a2)
{
  return sub_253A886B0(a1, a2);
}

uint64_t sub_253A8E2E4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_253A888A4(a1, a2);
  if (!v3)
  {
    *(void *)a3 = result;
    *(unsigned char *)(a3 + 8) = v6 & 1;
  }
  return result;
}

uint64_t sub_253A8E318(uint64_t a1, unint64_t a2)
{
  return sub_253A88B48(a1, a2);
}

uint64_t sub_253A8E330(uint64_t a1, unint64_t a2)
{
  return sub_253A88D3C(a1, a2);
}

uint64_t sub_253A8E348@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_253A88F30(a1, a2, a3);
}

uint64_t sub_253A8E360(uint64_t a1, unint64_t a2)
{
  return sub_253A891BC(a1, a2);
}

uint64_t sub_253A8E378(uint64_t a1, unint64_t a2)
{
  return sub_253A893B0(a1, a2);
}

uint64_t sub_253A8E390@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_253A895A4(a1, a2, a3);
}

uint64_t sub_253A8E3A8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A897B4(a1, a2, a3);
}

uint64_t sub_253A8E3C0(uint64_t a1, unint64_t a2)
{
  return sub_253A899CC(a1, a2);
}

uint64_t sub_253A8E3D8(uint64_t a1, unint64_t a2)
{
  return sub_253A89BC0(a1, a2);
}

uint64_t sub_253A8E3F0(uint64_t a1, unint64_t a2)
{
  return sub_253A89DB4(a1, a2);
}

uint64_t sub_253A8E408(uint64_t a1, unint64_t a2)
{
  return sub_253A89FA8(a1, a2);
}

uint64_t sub_253A8E420@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_253A8A19C(a1, a2, a3);
}

uint64_t sub_253A8E438@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A8A3BC(a1, a2, a3);
}

uint64_t sub_253A8E450(uint64_t a1, unint64_t a2)
{
  return sub_253A8A6A4(a1, a2);
}

uint64_t sub_253A8E468(uint64_t a1, unint64_t a2)
{
  return sub_253A8A898(a1, a2);
}

uint64_t sub_253A8E480@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A8AA8C(a1, a2, a3);
}

uint64_t sub_253A8E498(uint64_t a1, unint64_t a2)
{
  return sub_253A8ADA4(a1, a2);
}

uint64_t sub_253A8E4B0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A8AF98(a1, a2, a3);
}

uint64_t sub_253A8E4C8(uint64_t a1, unint64_t a2)
{
  return sub_253A8B404(a1, a2);
}

uint64_t sub_253A8E4E0(uint64_t a1, unint64_t a2)
{
  return sub_253A8B614(a1, a2);
}

uint64_t sub_253A8E4F8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_253A8B808(a1, a2, a3);
}

void sub_253A8E510()
{
}

uint64_t sub_253A8E56C(uint64_t a1, unint64_t a2)
{
  return sub_253A8BA00(a1, a2);
}

uint64_t sub_253A8E584(uint64_t a1, unint64_t a2)
{
  return sub_253A8BBF4(a1, a2);
}

uint64_t sub_253A8E59C(uint64_t a1, unint64_t a2)
{
  return sub_253A8BDE8(a1, a2);
}

uint64_t sub_253A8E5B4(uint64_t a1, unint64_t a2)
{
  return sub_253A8BFDC(a1, a2);
}

uint64_t sub_253A8E5CC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253A8C1D0(a1, a2, a3);
}

uint64_t sub_253A8E5E4(uint64_t a1, unint64_t a2)
{
  return sub_253A8C3D8(a1, a2);
}

unint64_t sub_253A8E5FC()
{
  unint64_t result = qword_269CE8690;
  if (!qword_269CE8690)
  {
    sub_25347907C(&qword_269CE8688);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8690);
  }
  return result;
}

uint64_t sub_253A8E650(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253462A5C(&qword_269CDBB28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_253A8E6B8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25346CAF4();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_253A8E718(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_253A8E760(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25346CAF4();
  uint64_t v4 = sub_2534B4668();
  v5(v4);
  return a2;
}

uint64_t sub_253A8E7B4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_25346CAF4();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_253A8E81C()
{
  return v0;
}

uint64_t sub_253A8E834(uint64_t a1)
{
  return sub_253A8E854(a1, &qword_269CE8C38, (void (*)(uint64_t, uint64_t, uint64_t *))sub_253AE5AE0);
}

uint64_t sub_253A8E854(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t *))
{
  if (*(void *)(a1 + 16))
  {
    sub_253462A5C(a2);
    sub_253A3F4E8();
    uint64_t v4 = sub_253B0A250();
  }
  else
  {
    uint64_t v4 = MEMORY[0x263F8EE80];
  }
  uint64_t v7 = v4;
  uint64_t v5 = swift_bridgeObjectRetain();
  a3(v5, 1, &v7);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_253A8E900(uint64_t a1)
{
  uint64_t v3 = sub_253462A5C(&qword_269CDCBE0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v67 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_253462A5C(&qword_269CDCA90);
  uint64_t v5 = MEMORY[0x270FA5388](v81);
  uint64_t v72 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v71 = (uint64_t *)((char *)&v61 - v8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v70 = (uint64_t *)((char *)&v61 - v10);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v61 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v69 = (uint64_t *)((char *)&v61 - v15);
  MEMORY[0x270FA5388](v14);
  uint64_t v68 = (uint64_t *)((char *)&v61 - v16);
  uint64_t v17 = type metadata accessor for TranscriptProtoParameter(0);
  uint64_t v65 = *(void *)(v17 - 8);
  uint64_t v66 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v64 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v61 - v20;
  uint64_t v22 = *(void *)(a1 + 16);
  uint64_t v23 = MEMORY[0x263F8EE78];
  if (!v22) {
    return v23;
  }
  uint64_t v80 = v1;
  uint64_t v82 = MEMORY[0x263F8EE78];
  sub_2539E72C4();
  uint64_t result = sub_253A71D6C(a1);
  if ((result & 0x8000000000000000) == 0)
  {
    unint64_t v26 = result;
    if (result < 1 << *(unsigned char *)(a1 + 32))
    {
      uint64_t v27 = a1 + 64;
      uint64_t v62 = v21;
      uint64_t v63 = a1;
      uint64_t v61 = a1 + 64;
      while ((*(void *)(v27 + 8 * (v26 >> 6)) & (1 << v26)) != 0)
      {
        if (v25 != *(_DWORD *)(a1 + 36)) {
          goto LABEL_25;
        }
        uint64_t v76 = 1 << v26;
        unint64_t v77 = v26 >> 6;
        uint64_t v74 = v22;
        uint64_t v75 = v25;
        uint64_t v28 = (uint64_t)v68;
        uint64_t v29 = (uint64_t)v68 + *(int *)(v81 + 48);
        uint64_t v30 = *(void *)(a1 + 48);
        uint64_t v31 = *(void *)(a1 + 56);
        uint64_t v32 = (uint64_t *)(v30 + 32 * v26);
        uint64_t v33 = (uint64_t)v13;
        uint64_t v34 = *v32;
        uint64_t v35 = v32[1];
        uint64_t v36 = v32[2];
        char v37 = *((unsigned char *)v32 + 24);
        *uint64_t v68 = *v32;
        *(void *)(v28 + 8) = v35;
        *(void *)(v28 + 16) = v36;
        *(unsigned char *)(v28 + 24) = v37;
        uint64_t v38 = *(void *)(*(void *)(type metadata accessor for Candidate(0) - 8) + 72);
        uint64_t v78 = v26;
        sub_253AF1A28(v31 + v38 * v26, v29);
        uint64_t v39 = (uint64_t)v69;
        *uint64_t v69 = v34;
        *(void *)(v39 + 8) = v35;
        *(void *)(v39 + 16) = v36;
        *(unsigned char *)(v39 + 24) = v37;
        uint64_t v40 = v81;
        sub_253AF1A28(v29, v39 + *(int *)(v81 + 48));
        sub_253961F14(v39, v33, &qword_269CDCA90);
        swift_bridgeObjectRetain_n();
        sub_253472458(v28, &qword_269CDCA90);
        uint64_t v41 = *(int *)(v40 + 48);
        uint64_t v42 = v40;
        long long v43 = v70;
        uint64_t v44 = (uint64_t)v70 + v41;
        uint64_t v45 = v33 + v41;
        uint64_t v46 = *(void *)v33;
        uint64_t v47 = *(void *)(v33 + 8);
        uint64_t v23 = (uint64_t)v67;
        uint64_t v48 = *(void *)(v33 + 16);
        int v49 = *(unsigned __int8 *)(v33 + 24);
        *uint64_t v70 = *(void *)v33;
        v43[1] = v47;
        v43[2] = v48;
        *((unsigned char *)v43 + 24) = v49;
        char v79 = (char *)v43 + v41;
        sub_253AF1A28(v33 + v41, v44);
        uint64_t v50 = *(int *)(v42 + 48);
        uint64_t v51 = v71;
        *uint64_t v71 = v46;
        v51[1] = v47;
        v51[2] = v48;
        *((unsigned char *)v51 + 24) = v49;
        sub_253AF1A28(v45, (uint64_t)v51 + v50);
        swift_bridgeObjectRetain();
        sub_253AF1980();
        sub_253AF1A28(v45, (uint64_t)&v72[*(int *)(v81 + 48)]);
        uint64_t v52 = v80;
        TranscriptProtoCandidate.init(handwritten:)();
        uint64_t v80 = v52;
        if (v52)
        {
          swift_bridgeObjectRelease();
          sub_253AF1980();
          sub_253472458(v33, &qword_269CDCA90);
          swift_release();
          return v23;
        }
        if (v49) {
          uint64_t v53 = 0;
        }
        else {
          uint64_t v53 = v48;
        }
        uint64_t v73 = v53;
        uint64_t v54 = type metadata accessor for TranscriptProtoCandidate(0);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v23, 0, 1, v54);
        uint64_t v55 = v23;
        uint64_t v56 = (uint64_t)v64;
        uint64_t v57 = (uint64_t)&v64[*(int *)(v66 + 24)];
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v57, 1, 1, v54);
        _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
        *(void *)uint64_t v56 = v46;
        *(void *)(v56 + 8) = v47;
        *(void *)(v56 + 16) = v73;
        *(unsigned char *)(v56 + 24) = v49;
        sub_253961BF0(v55, v57, &qword_269CDCBE0);
        uint64_t v58 = (uint64_t)v62;
        sub_253AF19D0(v56, (uint64_t)v62);
        sub_253AF1980();
        sub_253472458(v33, &qword_269CDCA90);
        uint64_t v23 = v82;
        uint64_t v13 = (char *)v33;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2539E72C4();
          uint64_t v23 = v82;
        }
        uint64_t v59 = v78;
        uint64_t v27 = v61;
        unint64_t v60 = *(void *)(v23 + 16);
        if (v60 >= *(void *)(v23 + 24) >> 1)
        {
          sub_2539E72C4();
          uint64_t v23 = v82;
        }
        *(void *)(v23 + 16) = v60 + 1;
        uint64_t result = sub_253AF19D0(v58, v23+ ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))+ *(void *)(v65 + 72) * v60);
        a1 = v63;
        if (v59 >= -(-1 << *(unsigned char *)(v63 + 32))) {
          goto LABEL_26;
        }
        if ((*(void *)(v27 + 8 * v77) & v76) == 0) {
          goto LABEL_27;
        }
        if (v75 != *(_DWORD *)(v63 + 36)) {
          goto LABEL_28;
        }
        uint64_t result = sub_253B09F70();
        uint64_t v22 = v74 - 1;
        if (v74 == 1) {
          return v23;
        }
        unint64_t v26 = result;
        if ((result & 0x8000000000000000) == 0)
        {
          uint64_t v25 = *(unsigned int *)(a1 + 36);
          if (result < 1 << *(unsigned char *)(a1 + 32)) {
            continue;
          }
        }
        goto LABEL_29;
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void sub_253A8EFA4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_2539E79EC();
    uint64_t v3 = sub_253A71D6C(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      unint64_t v5 = v3;
      if (v3 < 1 << *(unsigned char *)(a1 + 32))
      {
        int v6 = v4;
        uint64_t v7 = a1 + 64;
        while ((*(void *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v6 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_18;
          }
          uint64_t v8 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v5);
          uint64_t v9 = v8[1];
          uint64_t v14 = v1;
          uint64_t v15 = *v8;
          uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8 * v5);
          unint64_t v11 = *(void *)(v17 + 16);
          unint64_t v10 = *(void *)(v17 + 24);
          swift_bridgeObjectRetain();
          if (v11 >= v10 >> 1) {
            sub_2539E79EC();
          }
          *(void *)(v17 + 16) = v11 + 1;
          uint64_t v12 = (void *)(v17 + 24 * v11);
          v12[4] = v15;
          v12[5] = v9;
          v12[6] = v16;
          if ((uint64_t)v5 >= -(-1 << *(unsigned char *)(a1 + 32))) {
            goto LABEL_19;
          }
          uint64_t v7 = a1 + 64;
          if ((*(void *)(a1 + 64 + 8 * (v5 >> 6)) & (1 << v5)) == 0) {
            goto LABEL_20;
          }
          if (v6 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_21;
          }
          uint64_t v13 = sub_253B09F70();
          uint64_t v1 = v14 - 1;
          if (v14 == 1) {
            return;
          }
          unint64_t v5 = v13;
          if ((v13 & 0x8000000000000000) == 0)
          {
            int v6 = *(_DWORD *)(a1 + 36);
            if (v13 < 1 << *(unsigned char *)(a1 + 32)) {
              continue;
            }
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

void sub_253A8F174(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_2539E86B4();
    uint64_t v3 = sub_253A71D6C(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      unint64_t v5 = v3;
      if (v3 < 1 << *(unsigned char *)(a1 + 32))
      {
        int v6 = v4;
        uint64_t v7 = a1 + 64;
        while ((*(void *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v6 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_18;
          }
          uint64_t v8 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v5);
          uint64_t v9 = v8[1];
          uint64_t v14 = v1;
          uint64_t v15 = *v8;
          uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8 * v5);
          unint64_t v11 = *(void *)(v17 + 16);
          unint64_t v10 = *(void *)(v17 + 24);
          swift_bridgeObjectRetain();
          if (v11 >= v10 >> 1) {
            sub_2539E86B4();
          }
          *(void *)(v17 + 16) = v11 + 1;
          uint64_t v12 = (void *)(v17 + 24 * v11);
          v12[4] = v15;
          v12[5] = v9;
          v12[6] = v16;
          if ((uint64_t)v5 >= -(-1 << *(unsigned char *)(a1 + 32))) {
            goto LABEL_19;
          }
          uint64_t v7 = a1 + 64;
          if ((*(void *)(a1 + 64 + 8 * (v5 >> 6)) & (1 << v5)) == 0) {
            goto LABEL_20;
          }
          if (v6 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_21;
          }
          uint64_t v13 = sub_253B09F70();
          uint64_t v1 = v14 - 1;
          if (v14 == 1) {
            return;
          }
          unint64_t v5 = v13;
          if ((v13 & 0x8000000000000000) == 0)
          {
            int v6 = *(_DWORD *)(a1 + 36);
            if (v13 < 1 << *(unsigned char *)(a1 + 32)) {
              continue;
            }
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

void TranscriptProtoEvent.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v4 = v3;
  uint64_t v141 = v5;
  uint64_t v6 = sub_253462A5C(&qword_26B2492C8);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v140 = (char *)&v118 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253462A5C(&qword_26B2496F0);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v139 = (char *)&v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = type metadata accessor for TranscriptProtoTimepoint(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v12);
  uint64_t v134 = (char *)&v118 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  uint64_t v142 = sub_253B05550();
  sub_253465998();
  uint64_t v147 = v14;
  MEMORY[0x270FA5388](v15);
  sub_2534D8F68(v16, v118);
  uint64_t v17 = sub_253462A5C(&qword_26B248D00);
  uint64_t v18 = sub_25346CB4C(v17);
  MEMORY[0x270FA5388](v18);
  uint64_t v138 = (char *)&v118 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  sub_253AF1EA4(v21, v22, v23, v24, v25, v26, v27, v28, v118);
  uint64_t v29 = type metadata accessor for Timepoint();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v30);
  sub_25346CB04();
  uint64_t v32 = v31;
  uint64_t v33 = sub_253462A5C(&qword_26B2494B0);
  uint64_t v34 = sub_25346CB4C(v33);
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = sub_253547148(v35, v118);
  uint64_t v37 = type metadata accessor for Session.Event.Payload(v36);
  uint64_t v38 = sub_25346CB4C(v37);
  MEMORY[0x270FA5388](v38);
  sub_2534966B0();
  uint64_t v39 = sub_253462A5C(&qword_26B2493A0);
  uint64_t v40 = sub_25346CB4C(v39);
  MEMORY[0x270FA5388](v40);
  sub_2536D2C5C(v41, v118);
  uint64_t v42 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v43 = sub_25346CB4C(v42);
  MEMORY[0x270FA5388](v43);
  sub_253465A3C();
  uint64_t v137 = sub_253B05570();
  uint64_t v146 = v44;
  uint64_t v45 = (int *)type metadata accessor for Session.Event(0);
  sub_253AF32F4();
  uint64_t v136 = sub_253B05570();
  uint64_t v145 = v46;
  uint64_t v47 = v45[6];
  uint64_t v149 = v4;
  sub_253961F60(v4 + v47, v1, (uint64_t *)&unk_26B248CB0);
  uint64_t v48 = sub_253B055C0();
  uint64_t v49 = sub_2536D54B0();
  sub_2534D8B48(v49, v50, v48);
  if (v51)
  {
    sub_253472458(v1, (uint64_t *)&unk_26B248CB0);
    uint64_t v52 = 0;
    uint64_t v56 = 0;
  }
  else
  {
    uint64_t v52 = sub_253B05570();
    sub_25347B88C();
    uint64_t v54 = v1;
    uint64_t v56 = v55;
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v54, v48);
  }
  uint64_t v57 = v149;
  sub_253AF1A28(v149 + v45[7], v2);
  uint64_t v58 = v148;
  TranscriptProtoPayload.init(handwritten:)(v2, v59, v60, v61, v62, v63, v64, v65, v118, v119, v120, (uint64_t)v121, v122, v123, v124, v125, v126, v127, v128,
    v129);
  if (v0)
  {
    sub_253AF1980();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v131 = 0;
    uint64_t v132 = v52;
    uint64_t v144 = v56;
    uint64_t v66 = type metadata accessor for TranscriptProtoPayload(0);
    sub_253971DA8(v58, v67, v68, v66);
    uint64_t v69 = v45[9];
    uint64_t v70 = (uint64_t *)(v57 + v45[8]);
    uint64_t v71 = v70[1];
    uint64_t v130 = *v70;
    uint64_t v72 = *(void *)(v57 + v69 + 8);
    uint64_t v128 = *(void *)(v57 + v69);
    uint64_t v73 = v45[11];
    uint64_t v74 = (uint64_t *)(v57 + v45[10]);
    uint64_t v75 = v74[1];
    uint64_t v126 = *v74;
    uint64_t v122 = v57 + v45[12];
    uint64_t v76 = *(void *)(v57 + v73 + 8);
    uint64_t v124 = *(void *)(v57 + v73);
    sub_253AF1A28(v122, v32);
    uint64_t v120 = *(void *)(v147 + 16);
    uint64_t v121 = v45;
    v147 += 16;
    sub_2535791E4();
    sub_2534AF234();
    v77();
    uint64_t v123 = v76;
    swift_bridgeObjectRetain();
    uint64_t v129 = v71;
    swift_bridgeObjectRetain();
    uint64_t v127 = v72;
    swift_bridgeObjectRetain();
    uint64_t v125 = v75;
    swift_bridgeObjectRetain();
    uint64_t v78 = v133;
    sub_253AF39AC();
    sub_253B070F0();
    sub_253B07100();
    sub_253AF1DA4(v78);
    uint64_t v79 = *(int *)(v29 + 24);
    uint64_t v118 = *(void *)(v32 + *(int *)(v29 + 20));
    uint64_t v119 = *(void *)(v32 + v79);
    uint64_t v80 = sub_253B05570();
    uint64_t v82 = v81;
    uint64_t v83 = v134;
    uint64_t v84 = v57;
    sub_253578EBC((uint64_t)&v134[*(int *)(v135 + 28)], 1);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    uint64_t v85 = sub_253A3E5D4();
    sub_253961BF0(v85, v86, v87);
    uint64_t v88 = v119;
    *uint64_t v83 = v118;
    v83[1] = v88;
    v83[2] = v80;
    v83[3] = v82;
    uint64_t v89 = (uint64_t)v83;
    uint64_t v90 = v143;
    sub_253AF19D0(v89, v143);
    sub_253AF1980();
    sub_2536D4030(v90);
    sub_2534B3428();
    v91();
    uint64_t v92 = (uint64_t)v121;
    uint64_t v93 = (uint64_t)v138;
    sub_253AF31A4();
    sub_253B070F0();
    sub_253AF1DA4(v93);
    char v94 = (uint64_t *)(v84 + *(int *)(v92 + 52));
    uint64_t v95 = v94[1];
    if (v95)
    {
      uint64_t v96 = *v94;
      uint64_t v97 = type metadata accessor for TranscriptProtoParticipantID(0);
      uint64_t v98 = v139;
      swift_bridgeObjectRetain();
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *uint64_t v98 = v96;
      v98[1] = v95;
      uint64_t v99 = (uint64_t)v98;
      uint64_t v100 = 0;
      uint64_t v101 = 1;
      uint64_t v102 = v97;
    }
    else
    {
      type metadata accessor for TranscriptProtoParticipantID(0);
      uint64_t v98 = v139;
      sub_253465A98();
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v99, v100, v101, v102);
    uint64_t v104 = v140;
    uint64_t v103 = v141;
    uint64_t v105 = (uint64_t *)(v149 + *(int *)(v92 + 56));
    if (v105[1])
    {
      type metadata accessor for TranscriptProtoSpanID(0);
      sub_253465A98();
    }
    else
    {
      uint64_t v110 = *v105;
      uint64_t v111 = type metadata accessor for TranscriptProtoSpanID(0);
      sub_253AF2500();
      *uint64_t v104 = v110;
      uint64_t v106 = (uint64_t)v104;
      uint64_t v107 = 0;
      uint64_t v108 = 1;
      uint64_t v109 = v111;
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v106, v107, v108, v109);
    uint64_t v112 = swift_bridgeObjectRetain();
    sub_253A8EFA4(v112);
    uint64_t v114 = v113;
    swift_bridgeObjectRelease();
    uint64_t v115 = sub_253A8E854(v114, &qword_26B24A3C0, (void (*)(uint64_t, uint64_t, uint64_t *))sub_253AE5DA8);
    *((void *)&v117 + 1) = v126;
    *(void *)&long long v117 = v127;
    *((void *)&v116 + 1) = v128;
    *(void *)&long long v116 = v129;
    TranscriptProtoEvent.init(rawID:rawSessionID:rawQueryEventID:rawPayload:clientRequestID:clientSessionID:clientApplicationID:clientGroupID:timepoint:rawTimestamp:sender:postingSpan:rawInitiatedSpans:)(v137, v146, v136, v145, v132, v144, v148, v130, v103, v116, v117, v125, v124, v123, v143, v93, (uint64_t)v98, (uint64_t)v104, v115);
    sub_253AF1980();
  }
  sub_2536D4C48();
  sub_2534847C8();
}

void sub_253A8FB1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_253A8FB64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, void (*a7)(void))
{
  uint64_t v13 = sub_253462A5C(a6);
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  sub_253465A3C();
  sub_253961F60(v7, v8, a6);
  a7(0);
  uint64_t v15 = sub_2536D54B0();
  sub_2534D8B48(v15, v16, v17);
  if (v18)
  {
    uint64_t v19 = sub_253578DF8();
    sub_253472458(v19, v20);
    sub_25352634C();
    sub_2534D969C();
    *uint64_t v21 = a1;
    v21[1] = a2;
    void v21[2] = a3;
    void v21[3] = a4;
    v21[4] = a5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  else
  {
    uint64_t v22 = sub_253A56C4C();
    sub_253AF19D0(v22, v23);
  }
  sub_2536D30A0();
}

uint64_t sub_253A8FC80(uint64_t a1)
{
  uint64_t v2 = sub_253B055C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253961F60(a1, (uint64_t)v8, (uint64_t *)&unk_26B248CB0);
  uint64_t v9 = 0;
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v2) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    uint64_t v9 = sub_253B05570();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v9;
}

void StatementOutcome.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_2534847F8();
  a19 = v25;
  a20 = v26;
  uint64_t v231 = v21;
  uint64_t v28 = v27;
  uint64_t v217 = v29;
  uint64_t v30 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
  uint64_t v31 = sub_25346CB4C(v30);
  MEMORY[0x270FA5388](v31);
  uint64_t v213 = (uint64_t)&v195 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_253483660();
  uint64_t v34 = type metadata accessor for TranscriptProtoActionFailure(v33);
  uint64_t v35 = sub_25346CB4C(v34);
  MEMORY[0x270FA5388](v35);
  uint64_t v229 = (uint64_t)&v195 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v37);
  uint64_t v211 = (uint64_t)&v195 - v38;
  uint64_t v39 = sub_253483660();
  uint64_t v210 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(v39);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v40);
  uint64_t v212 = (uint64_t *)((char *)&v195 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2534B324C();
  MEMORY[0x270FA5388](v42);
  uint64_t v214 = (uint64_t)&v195 - v43;
  uint64_t v44 = sub_253483660();
  uint64_t v45 = type metadata accessor for TranscriptProtoParameterNotAllowed(v44);
  uint64_t v46 = sub_25346CB4C(v45);
  MEMORY[0x270FA5388](v46);
  uint64_t v227 = (char *)&v195 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v48);
  uint64_t v50 = sub_2534F8208((uint64_t)&v195 - v49);
  uint64_t v51 = type metadata accessor for TranscriptProtoParameterDisambiguation(v50);
  uint64_t v52 = sub_25346CB4C(v51);
  MEMORY[0x270FA5388](v52);
  sub_2534F823C();
  MEMORY[0x270FA5388](v53);
  sub_2534F8208((uint64_t)&v195 - v54);
  uint64_t v207 = sub_253B08E50();
  sub_253465998();
  uint64_t v206 = v55;
  MEMORY[0x270FA5388](v56);
  uint64_t v228 = (char *)&v195 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v58);
  sub_2534F823C();
  MEMORY[0x270FA5388](v59);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v60);
  sub_2534F8208((uint64_t)&v195 - v61);
  uint64_t v62 = sub_253B09120();
  uint64_t v63 = sub_25346CB4C(v62);
  MEMORY[0x270FA5388](v63);
  sub_2534F823C();
  MEMORY[0x270FA5388](v64);
  uint64_t v66 = sub_2534F8208((uint64_t)&v195 - v65);
  uint64_t v208 = type metadata accessor for TranscriptProtoParameterConfirmation(v66);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v67);
  uint64_t v215 = (uint64_t)&v195 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v69);
  uint64_t v71 = sub_2534F8208((uint64_t)&v195 - v70);
  uint64_t v72 = type metadata accessor for TranscriptProtoParameterNeedsValue(v71);
  uint64_t v73 = sub_25346CB4C(v72);
  MEMORY[0x270FA5388](v73);
  uint64_t v225 = (char *)&v195 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v76 = MEMORY[0x270FA5388](v75);
  uint64_t v221 = sub_253AF33AC(v76, v77, v78, v79, v80, v81, v82, v83, v195);
  sub_253465998();
  uint64_t v230 = v84;
  MEMORY[0x270FA5388](v85);
  uint64_t v220 = (char *)&v195 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v87);
  uint64_t v219 = (char *)&v195 - v88;
  uint64_t v218 = sub_253B08B30();
  sub_253465998();
  uint64_t v223 = v89;
  MEMORY[0x270FA5388](v90);
  uint64_t v222 = (char *)&v195 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_253483660();
  uint64_t v93 = type metadata accessor for TranscriptProtoToolDisambiguation(v92);
  uint64_t v94 = sub_25346CB4C(v93);
  MEMORY[0x270FA5388](v94);
  uint64_t v216 = (uint64_t *)((char *)&v195 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v96 = sub_253483660();
  uint64_t v97 = type metadata accessor for TranscriptProtoActionRequirement(v96);
  uint64_t v98 = sub_25346CB4C(v97);
  MEMORY[0x270FA5388](v98);
  uint64_t v224 = (char *)&v195 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v100);
  sub_2534D8F5C((uint64_t)&v195 - v101);
  uint64_t v102 = sub_253462A5C(&qword_269CE0480);
  uint64_t v103 = sub_25346CB4C(v102);
  MEMORY[0x270FA5388](v103);
  sub_2534D8F5C((uint64_t)&v195 - ((v104 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v105 = sub_253462A5C(&qword_269CE50F8);
  uint64_t v106 = sub_25346CB4C(v105);
  MEMORY[0x270FA5388](v106);
  sub_25346CB04();
  uint64_t v108 = sub_2534F8208(v107);
  uint64_t v109 = type metadata accessor for TranscriptProtoActionConfirmation(v108);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v110);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v111);
  uint64_t v113 = (char *)&v195 - v112;
  uint64_t v114 = sub_253AF1D98();
  uint64_t v115 = type metadata accessor for TranscriptProtoActionSuccess(v114);
  uint64_t v116 = sub_25346CB4C(v115);
  MEMORY[0x270FA5388](v116);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v117);
  uint64_t v118 = sub_2534DA430();
  type metadata accessor for TranscriptProtoStatementOutcomeEnum(v118);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v119);
  sub_253465A3C();
  uint64_t v120 = v28;
  uint64_t v121 = v231;
  sub_25395E9AC(v23);
  uint64_t v231 = v121;
  if (v121)
  {
LABEL_2:
    sub_253AF1980();
  }
  else
  {
    char v196 = v20;
    uint64_t v200 = v24;
    uint64_t v197 = v22;
    char v198 = v113;
    uint64_t v122 = (uint64_t)v227;
    uint64_t v123 = v229;
    uint64_t v199 = v120;
    sub_2534DA154();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v125 = (uint64_t)v225;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        sub_253AF245C(v23, (uint64_t)&v224);
        uint64_t v127 = v197;
        sub_253AF1A28(v120, v197);
        uint64_t v128 = swift_bridgeObjectRetain();
        uint64_t v129 = v231;
        sub_253AE9ED0(v128, v130, v131, v132, v133, v134, v135, v136, v195, v196, v197, (uint64_t)v198, v199, v200, v201, v202, v203, v204, v205,
          v206);
        if (v129)
        {
          swift_bridgeObjectRelease();
          sub_253AF1980();
          sub_253AF376C();
          goto LABEL_39;
        }
        swift_bridgeObjectRelease();
        sub_253961F60(v127 + *(int *)(v109 + 20), v202, &qword_269CE0480);
        sub_253AF31A4();
        sub_25395C898();
        sub_253AF376C();
        sub_253AF2A54();
        sub_253B06AD0();
        sub_253AF1980();
        sub_253AF1980();
        sub_253AF2474();
        sub_253B06850();
        sub_25346CAF4();
        goto LABEL_47;
      case 2:
        sub_253AF19D0(v23, v226);
        uint64_t v137 = sub_25351C5C0();
        sub_253AF1A28(v137, v138);
        swift_bridgeObjectRetain();
        sub_253AF2860();
        sub_253B06B40();
        sub_253AF1980();
        sub_253AF2008();
        sub_253AF39F0();
        sub_253B06850();
        sub_25346CAF4();
        goto LABEL_47;
      case 3:
        uint64_t v139 = v209;
        sub_253AF19D0(v23, v209);
        uint64_t v140 = v215;
        sub_253AF1A28(v139, v215);
        uint64_t v141 = *(void *)v140;
        if (*(unsigned char *)(v140 + 24)) {
          uint64_t v142 = 0;
        }
        else {
          uint64_t v142 = *(void *)(v140 + 16);
        }
        swift_bridgeObjectRetain();
        uint64_t v143 = v231;
        sub_25395DCE8();
        if (!v143)
        {
          uint64_t v230 = v142;
          uint64_t v231 = v141;
          sub_253578C34();
          sub_253579328();
          sub_2534AF234();
          v144();
          sub_253962838();
          sub_253AF2278();
          sub_253B09110();
          sub_2534F85D4();
          v192();
          sub_253AF2AF8();
          sub_253B06D20();
          sub_253AF1980();
          sub_253AF2008();
          sub_253AF1980();
          goto LABEL_46;
        }
        sub_253AF1980();
        swift_bridgeObjectRelease();
        sub_253AF2008();
        goto LABEL_2;
      case 4:
        sub_253AF245C(v23, (uint64_t)&a18);
        sub_253AF3884();
        sub_253AF1A28(v145, v122);
        swift_bridgeObjectRetain();
        uint64_t v146 = swift_bridgeObjectRetain();
        uint64_t v147 = v231;
        sub_25394F2C0(v146, v148, v149, v150, v151, v152, v153, v154, v195, (uint64_t)v196);
        if (v147) {
          goto LABEL_38;
        }
        sub_2534D9778();
        sub_253B06E80();
        sub_253AF1980();
        sub_253AF2008();
        sub_253AF2474();
        sub_253B06850();
        sub_25346CAF4();
        goto LABEL_47;
      case 5:
        sub_253AF1DC0(v23, (uint64_t)&a16);
        sub_253AF1A28(v125, v122);
        sub_253AF2AF8();
        uint64_t v155 = v231;
        ParameterNotAllowed.init(transcript:)();
        if (v155) {
          goto LABEL_33;
        }
        goto LABEL_36;
      case 6:
        uint64_t v156 = v214;
        sub_253AF19D0(v23, v214);
        uint64_t v157 = v212;
        sub_253AF1A28(v156, (uint64_t)v212);
        uint64_t v158 = *v157;
        sub_253AF31C0();
        swift_bridgeObjectRetain();
        sub_253A73EF4();
        uint64_t v159 = v231;
        sub_25395DCE8();
        if (!v159)
        {
          uint64_t v231 = v158;
          sub_253AF2658();
          sub_253971DD4();
          sub_2534AF234();
          v190();
          sub_253B09110();
          sub_253AF376C();
          sub_2534D97B4();
          v193();
          sub_253AF2AF8();
          sub_253B06FE0();
          sub_253AF1980();
          sub_253AF1980();
          sub_253AF2474();
          goto LABEL_46;
        }
        sub_253AF376C();
LABEL_38:
        sub_253AF1980();
        swift_bridgeObjectRelease();
LABEL_39:
        sub_253AF1980();
        goto LABEL_2;
      case 7:
        sub_253AF1DC0(v23, (uint64_t)&a10);
        uint64_t v160 = sub_2534D9AA0();
        sub_253AF1A28(v160, v161);
        sub_253AF372C();
        ActionRequirement.init(transcript:)();
        sub_253AF2008();
        sub_253AF1980();
        goto LABEL_46;
      case 8:
        uint64_t v162 = v23;
        uint64_t v163 = v216;
        sub_253AF19D0(v162, (uint64_t)v216);
        uint64_t v165 = (char *)v163[1];
        uint64_t v164 = (char *)v163[2];
        uint64_t v166 = *v163;
        uint64_t v167 = *(void *)(*v163 + 16);
        if (v167)
        {
          uint64_t v225 = (char *)v163[1];
          a10 = MEMORY[0x263F8EE78];
          uint64_t v227 = v164;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_253AF36A8();
          sub_2539E7B40();
          uint64_t v168 = v230 + 16;
          uint64_t v169 = *(void (**)(void))(v230 + 16);
          sub_2535786F4();
          uint64_t v226 = v166;
          uint64_t v171 = v166 + v170;
          uint64_t v172 = *(char **)(v168 + 56);
          uint64_t v173 = (uint64_t)v222;
          uint64_t v228 = (char *)(v223 + 32);
          uint64_t v229 = (uint64_t)v172;
          uint64_t v230 = v168;
          do
          {
            sub_253578E40();
            uint64_t v174 = v221;
            sub_253A568D4();
            v169();
            sub_2534D9A44();
            sub_253A568D4();
            v169();
            uint64_t v175 = v231;
            ToolDefinition.init(transcript:)(v173);
            uint64_t v231 = v175;
            if (v175)
            {
              sub_2534D9A08();
              v191();
              swift_bridgeObjectRelease();
              swift_release();
              sub_253AF2008();
              swift_bridgeObjectRelease();
              goto LABEL_2;
            }
            sub_2534D9A08();
            v176();
            if ((sub_2539621FC() & 1) == 0)
            {
              sub_253A3E764();
              sub_2539E7B40();
              uint64_t v174 = a10;
            }
            unint64_t v177 = *(void *)(v174 + 16);
            if (v177 >= *(void *)(v174 + 24) >> 1)
            {
              sub_2539E7B40();
              uint64_t v174 = a10;
            }
            *(void *)(v174 + 16) = v177 + 1;
            sub_253962314();
            uint64_t v173 = (uint64_t)v222;
            sub_2534D8E14();
            v178();
            a10 = v174;
            v171 += v229;
            --v167;
          }
          while (v167);
          swift_bridgeObjectRelease();
          uint64_t v164 = v227;
          uint64_t v165 = v225;
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t v174 = MEMORY[0x263F8EE78];
        }
        MEMORY[0x25A265B00](v165, v164, v174);
        sub_253AF2008();
        sub_253AF1980();
        sub_253B06850();
        sub_25346CAF4();
        goto LABEL_47;
      case 9:
        uint64_t v179 = v211;
        sub_253AF19D0(v23, v211);
        sub_253AF1A28(v179, v123);
        sub_253AF2AF8();
        uint64_t v180 = v231;
        ActionFailure.init(transcript:)();
        if (v180) {
          goto LABEL_33;
        }
LABEL_36:
        sub_253AF2008();
        sub_253AF1980();
        goto LABEL_46;
      case 10:
        sub_253AF19D0(v23, v213);
        uint64_t v181 = swift_bridgeObjectRetain();
        uint64_t v182 = v231;
        sub_25394F2C0(v181, v183, v184, v185, v186, v187, v188, v189, v195, (uint64_t)v196);
        if (v182)
        {
LABEL_33:
          sub_253AF2008();
          goto LABEL_2;
        }
        sub_253AF2AF8();
        sub_253B05DE0();
        sub_253AF2008();
        sub_253AF1980();
LABEL_46:
        sub_253B06850();
        sub_25346CAF4();
LABEL_47:
        sub_25346CCF8();
        v194();
        break;
      default:
        uint64_t v126 = v200;
        sub_253AF19D0(v23, v200);
        sub_253AF1D68(v126, (uint64_t)&v222);
        sub_253AF372C();
        ActionSuccess.init(transcript:)();
        sub_253AF2008();
        sub_253AF1980();
        goto LABEL_46;
    }
  }
  sub_2534F8590();
  sub_2534847C8();
}

void ConvertibleFromHandwrittenProtocol.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v29 = v2;
  sub_2534727C4();
  MEMORY[0x270FA5388](v3);
  sub_2536D2C5C(v4, v27);
  uint64_t v28 = v5;
  uint64_t v30 = v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_253B09E00();
  sub_253465998();
  uint64_t v9 = v8;
  sub_253963118();
  MEMORY[0x270FA5388](v10);
  sub_2534727C4();
  MEMORY[0x270FA5388](v11);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v12);
  sub_2534D90F4();
  sub_253AF283C();
  sub_2534AF234();
  v13();
  uint64_t v14 = sub_2539627D4();
  sub_2534D8B48(v14, v15, AssociatedTypeWitness);
  if (v16)
  {
    uint64_t v17 = *(void (**)(void))(v9 + 8);
    sub_2535793C0();
    sub_2534D91A0();
    v17();
    sub_253592678();
    sub_2534D91A0();
    v17();
    uint64_t v18 = 1;
    uint64_t v19 = v29;
LABEL_7:
    sub_253944448(v19, v18);
    goto LABEL_8;
  }
  sub_2535787F4();
  sub_25347FA84();
  v20();
  sub_253AF2658();
  sub_2539627B8();
  sub_2534AF234();
  v21();
  (*(void (**)(uint64_t, uint64_t))(v28 + 16))(v1, v30);
  if (!v0)
  {
    sub_2534D91A0();
    v24();
    sub_2534D97B4();
    v25();
    uint64_t v19 = v29;
    sub_2534D8E14();
    v26();
    uint64_t v18 = 0;
    goto LABEL_7;
  }
  sub_2534D91A0();
  v22();
  sub_2534D97B4();
  v23();
LABEL_8:
  sub_2536D3D5C();
  sub_2534847C8();
}

void TranscriptProtoStatementOutcome.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  uint64_t v238 = v11;
  uint64_t v246 = v13;
  uint64_t v236 = v14;
  uint64_t v234 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v15);
  uint64_t v235 = (uint64_t)v206 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  v206[4] = sub_253B05A80();
  sub_253465998();
  v206[3] = v17;
  MEMORY[0x270FA5388](v18);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v19);
  sub_2534F8208((uint64_t)v206 - v20);
  uint64_t v208 = sub_253B06C90();
  sub_253465998();
  uint64_t v207 = v21;
  MEMORY[0x270FA5388](v22);
  sub_2534F823C();
  MEMORY[0x270FA5388](v23);
  sub_2534B35DC();
  sub_2534F8208(v24);
  uint64_t v213 = sub_253B07010();
  sub_253465998();
  uint64_t v212 = v25;
  MEMORY[0x270FA5388](v26);
  sub_2534F823C();
  MEMORY[0x270FA5388](v27);
  sub_2534F8208((uint64_t)v206 - v28);
  uint64_t v215 = sub_253B06BE0();
  sub_253465998();
  uint64_t v216 = v29;
  MEMORY[0x270FA5388](v30);
  sub_2534F823C();
  MEMORY[0x270FA5388](v31);
  sub_2534F8208((uint64_t)v206 - v32);
  uint64_t v218 = sub_253B06EC0();
  sub_253465998();
  uint64_t v217 = v33;
  MEMORY[0x270FA5388](v34);
  sub_2534F823C();
  MEMORY[0x270FA5388](v35);
  sub_2534F8208((uint64_t)v206 - v36);
  uint64_t v220 = sub_253B06D60();
  sub_253465998();
  uint64_t v219 = v37;
  MEMORY[0x270FA5388](v38);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v39);
  sub_2534B35DC();
  sub_2534F8208(v40);
  uint64_t v224 = sub_253B06B60();
  sub_253465998();
  uint64_t v223 = v41;
  MEMORY[0x270FA5388](v42);
  sub_2534F823C();
  MEMORY[0x270FA5388](v43);
  sub_2534F8208((uint64_t)v206 - v44);
  uint64_t v242 = sub_253B08B30();
  sub_253465998();
  uint64_t v244 = v45;
  MEMORY[0x270FA5388](v46);
  uint64_t v241 = (char *)v206 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v49 = MEMORY[0x270FA5388](v48);
  sub_253AF1D80(v49, v50, v51, v52, v53, v54, v55, v56, v206[0]);
  uint64_t v248 = sub_253B08F30();
  sub_253465998();
  uint64_t v243 = v57;
  MEMORY[0x270FA5388](v58);
  uint64_t v239 = (char *)v206 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v60);
  uint64_t v247 = (char *)v206 - v61;
  sub_253483660();
  sub_253B06B30();
  sub_253465998();
  uint64_t v228 = v63;
  uint64_t v229 = v62;
  MEMORY[0x270FA5388](v62);
  sub_2534F8208((uint64_t)v206 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v211 = sub_253B06860();
  sub_253465998();
  uint64_t v210 = v65;
  MEMORY[0x270FA5388](v66);
  sub_2534F823C();
  MEMORY[0x270FA5388](v67);
  sub_2534B35DC();
  sub_2534F8208(v68);
  uint64_t v245 = (void (**)(void))sub_253B06AF0();
  sub_253465998();
  unsigned int v232 = v69;
  MEMORY[0x270FA5388](v70);
  uint64_t v230 = (char *)v206 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v72);
  uint64_t v231 = (void (**)(void))((char *)v206 - v73);
  sub_253483660();
  uint64_t v74 = sub_253B05C30();
  sub_253465998();
  MEMORY[0x270FA5388](v75);
  sub_2534D9C38();
  MEMORY[0x270FA5388](v76);
  sub_253AF1D98();
  uint64_t v77 = sub_253B06850();
  sub_253465998();
  uint64_t v79 = v78;
  MEMORY[0x270FA5388](v80);
  uint64_t v81 = sub_2534B464C();
  uint64_t v237 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(v81);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v82);
  sub_2534F823C();
  MEMORY[0x270FA5388](v83);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v84);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v85);
  sub_2534F823C();
  MEMORY[0x270FA5388](v86);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v87);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v88);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v89);
  sub_2534F823C();
  MEMORY[0x270FA5388](v90);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v91);
  sub_253578D54();
  MEMORY[0x270FA5388](v92);
  sub_25351C738();
  uint64_t v94 = MEMORY[0x270FA5388](v93);
  sub_253AF2518(v94, v95, v96, v97, v98, v99, v100, v101, v206[0]);
  sub_253AF2300();
  sub_2534AF234();
  v102();
  sub_253578368();
  int v104 = v103();
  if (v104 == *MEMORY[0x263F4C7D8])
  {
    sub_253971A70();
    v105();
    sub_2534D9A78();
    sub_25347FA84();
    v106();
    sub_253AF2FC0();
    sub_253578E40();
    sub_2534AF234();
    v107();
    uint64_t v108 = v238;
    TranscriptProtoActionSuccess.init(handwritten:)();
    if (v108)
    {
      sub_2534DA4BC();
      v109();
      sub_2534D91AC();
      v110();
      goto LABEL_30;
    }
    sub_2534D91AC();
    v138();
    goto LABEL_28;
  }
  uint64_t v227 = v77;
  uint64_t v111 = v238;
  uint64_t v225 = v79;
  if (v104 == *MEMORY[0x263F4C790])
  {
    sub_253971A70();
    v112();
    sub_253A3E5C8();
    sub_25347FA84();
    v113();
    sub_253AF2658();
    sub_253A56C4C();
    sub_2534AF234();
    v114();
    sub_253AF2694();
    TranscriptProtoActionConfirmation.init(handwritten:)();
    if (v11)
    {
      sub_2534DA4BC();
      v115();
      sub_253A3E5C8();
LABEL_7:
      sub_2534D97B4();
      v116();
      goto LABEL_30;
    }
    sub_253A3E5C8();
    sub_2534D97B4();
    v147();
    sub_253579270();
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = v10;
LABEL_29:
    sub_253AF19D0((uint64_t)v12, v233);
    uint64_t v156 = v235;
    sub_253A7388C(v235, 1);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    sub_253AF2A98();
    sub_2534DA4BC();
    v157();
    uint64_t v158 = v236;
    sub_253AF19D0(v156, v236);
    sub_253472458(v158, &qword_269CE04B0);
    uint64_t v159 = sub_2534DA604();
    sub_253AF19D0(v159, v160);
    sub_253AF202C(v158);
    goto LABEL_30;
  }
  uint64_t v117 = v225;
  if (v104 != *MEMORY[0x263F4C798])
  {
    uint64_t v139 = v237;
    if (v104 == *MEMORY[0x263F4C7A0])
    {
      uint64_t v140 = sub_253AF1C6C();
      v141(v140);
      sub_253578C34();
      sub_2534D9A44();
      sub_25347FA84();
      v142();
      uint64_t v143 = v222;
      sub_2534AF234();
      v144();
      sub_253B05AF0();
      uint64_t v145 = sub_253AF2438();
      type metadata accessor for TranscriptProtoParameterNeedsValue(v145);
      uint64_t v12 = v221;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *uint64_t v12 = v10;
      v12[1] = v143;
      uint64_t v146 = *(void (**)(void))(v139 + 8);
      sub_2534F85D4();
      v146();
      sub_2534F85D4();
      v146();
      sub_253578AC4();
      swift_storeEnumTagMultiPayload();
      goto LABEL_29;
    }
    if (v104 == *MEMORY[0x263F4C7B8])
    {
      uint64_t v148 = sub_253AF1C6C();
      v149(v148);
      sub_253AF2738();
      sub_253AF21D4();
      sub_25347FA84();
      v150();
      sub_253A73EE8();
      sub_2534AF234();
      v151();
      sub_253AF248C();
      TranscriptProtoParameterConfirmation.init(handwritten:)();
      if (!v11) {
        goto LABEL_43;
      }
      goto LABEL_33;
    }
    if (v104 == *MEMORY[0x263F4C7C0])
    {
      uint64_t v161 = sub_253AF1C6C();
      v162(v161);
      sub_253AF2738();
      sub_253AF21D4();
      sub_25347FA84();
      v163();
      sub_253A73EE8();
      sub_2534AF234();
      v164();
      sub_253AF248C();
      TranscriptProtoParameterDisambiguation.init(handwritten:)();
      if (!v11) {
        goto LABEL_43;
      }
      goto LABEL_33;
    }
    if (v104 == *MEMORY[0x263F4C7A8])
    {
      uint64_t v167 = sub_253AF1C6C();
      v168(v167);
      sub_253AF21D4();
      sub_25347FA84();
      v169();
      sub_253578DF8();
      sub_2534AF234();
      v170();
      sub_253AF248C();
      TranscriptProtoParameterNotAllowed.init(handwritten:)();
      if (v11)
      {
        sub_2534DA4BC();
        v171();
        sub_2534B3470();
        v172();
        goto LABEL_30;
      }
      sub_2534B3470();
      v183();
      sub_253A56AF8();
      goto LABEL_45;
    }
    if (v104 == *MEMORY[0x263F4C7C8])
    {
      uint64_t v173 = sub_253AF1C6C();
      v174(v173);
      sub_25351C9FC();
      sub_253971DD4();
      sub_25347FA84();
      v175();
      sub_253AF2658();
      sub_2534AF234();
      v176();
      TranscriptProtoParameterCandidatesNotFound.init(handwritten:)();
      if (v111) {
        goto LABEL_39;
      }
      sub_2534D97B4();
      v194();
      uint64_t v12 = v214;
      sub_253578AC4();
    }
    else
    {
      if (v104 == *MEMORY[0x263F4C788])
      {
        uint64_t v178 = sub_253AF1C6C();
        v179(v178);
        sub_253AF2738();
        sub_253AF21D4();
        sub_25347FA84();
        v180();
        sub_2534AF234();
        v181();
        sub_253AF248C();
        TranscriptProtoActionRequirement.init(handwritten:)();
        if (!v11)
        {
LABEL_43:
          sub_2534D9220();
          v182();
          sub_253A56AF8();
LABEL_45:
          swift_storeEnumTagMultiPayload();
          uint64_t v12 = (void *)v74;
          goto LABEL_29;
        }
LABEL_33:
        sub_2534DA4BC();
        v165();
        sub_2534D9220();
        v166();
        goto LABEL_30;
      }
      if (v104 == *MEMORY[0x263F4C7B0])
      {
        uint64_t v184 = sub_253AF1C6C();
        v185(v184);
        uint64_t v186 = v207;
        uint64_t v187 = v209;
        sub_253945CF8();
        sub_25347FA84();
        v188();
        sub_253971B90();
        sub_2534AF234();
        uint64_t v190 = v189();
        uint64_t v191 = MEMORY[0x25A265C80](v190);
        sub_253AC7D1C(v191);
        if (v111)
        {
          uint64_t v192 = *(void (**)(void))(v186 + 8);
          sub_2534D9A08();
          v192();
          sub_2534DA4BC();
          v193();
          sub_2534D9A08();
          v192();
          goto LABEL_30;
        }
        uint64_t v203 = sub_2534D9690();
        type metadata accessor for TranscriptProtoValueDisambiguation(v203);
        uint64_t v204 = (void *)v206[0];
        _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
        *uint64_t v204 = v187;
        uint64_t v205 = *(void (**)(void))(v186 + 8);
        sub_2534D9A08();
        v205();
        sub_2534D9A08();
        v205();
        sub_25357931C();
        swift_storeEnumTagMultiPayload();
        uint64_t v12 = v204;
        goto LABEL_29;
      }
      if (v104 != *MEMORY[0x263F4C7D0])
      {
        sub_25394EA00();
        uint64_t v200 = sub_2534D969C();
        sub_253A73498(v200, v201);
        uint64_t v202 = *(void (**)(void))(v117 + 8);
        sub_2534DA4BC();
        v202();
        sub_2534DA4BC();
        v202();
        goto LABEL_30;
      }
      uint64_t v195 = sub_253AF1C6C();
      v196(v195);
      sub_25351C9FC();
      sub_253971DD4();
      sub_25347FA84();
      v197();
      sub_253AF2658();
      sub_2534AF234();
      v198();
      TranscriptProtoActionFailure.init(handwritten:)();
      if (v111)
      {
LABEL_39:
        sub_2534DA4BC();
        v177();
        sub_253A3F354();
        goto LABEL_7;
      }
      sub_2534D97B4();
      v199();
      uint64_t v12 = (void *)v206[5];
      sub_253578AC4();
    }
LABEL_28:
    swift_storeEnumTagMultiPayload();
    goto LABEL_29;
  }
  uint64_t v118 = sub_253AF1C6C();
  v119(v118);
  sub_25347FA84();
  v120();
  uint64_t v224 = sub_253B06B10();
  uint64_t v122 = v121;
  uint64_t v123 = MEMORY[0x25A265B20]();
  uint64_t v124 = *(void *)(v123 + 16);
  if (!v124)
  {
    swift_bridgeObjectRelease();
    uint64_t v134 = MEMORY[0x263F8EE78];
LABEL_27:
    type metadata accessor for TranscriptProtoToolDisambiguation(0);
    uint64_t v12 = v226;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    v12[1] = v224;
    v12[2] = v122;
    *uint64_t v12 = v134;
    sub_2534659CC();
    v155();
    goto LABEL_28;
  }
  uint64_t v223 = v122;
  sub_253962624(MEMORY[0x263F8EE78]);
  sub_2539E78C0();
  unsigned int v232 = *(void (**)(void))(v244 + 16);
  sub_253AF3598();
  *(void *)(v125 - 256) = v123;
  uint64_t v127 = v123 + v126;
  uint64_t v230 = *(char **)(v128 + 56);
  uint64_t v231 = (void (**)(void))(v128 - 8);
  uint64_t v244 = v128;
  uint64_t v245 = (void (**)(void))(v243 + 32);
  uint64_t v129 = v111;
  uint64_t v130 = (uint64_t *)(v128 - 8);
  while (1)
  {
    uint64_t v131 = v129;
    uint64_t v132 = v240;
    sub_253578DF8();
    uint64_t v133 = v232;
    sub_253535668();
    v133();
    sub_2539627B8();
    sub_253535668();
    v133();
    sub_253B08B10();
    if (v131) {
      break;
    }
    uint64_t v134 = *v130;
    sub_2536D3880();
    sub_2534D91A0();
    ((void (*)(void))v134)();
    uint64_t v135 = *v245;
    sub_25347FA84();
    v135();
    sub_2534D91A0();
    ((void (*)(void))v134)();
    if ((sub_2539621FC() & 1) == 0)
    {
      sub_253A3E764();
      sub_2539E78C0();
      uint64_t v134 = a10;
    }
    sub_253AF2EC4();
    if (v137)
    {
      sub_2539625A0(v136);
      sub_2539E78C0();
      uint64_t v134 = a10;
    }
    *(void *)(v134 + 16) = v132;
    sub_253962314();
    sub_25347FA84();
    v135();
    a10 = v134;
    v127 += (uint64_t)v230;
    --v124;
    uint64_t v129 = 0;
    if (!v124)
    {
      sub_253AF2BD0();
      uint64_t v122 = v223;
      goto LABEL_27;
    }
  }
  uint64_t v152 = *v231;
  sub_2536D3880();
  sub_2534D9220();
  v152();
  sub_2534D9B10();
  sub_2534D9220();
  v152();
  swift_release();
  swift_bridgeObjectRelease();
  sub_2534659CC();
  v153();
  sub_253AF2BD0();
  sub_2534659CC();
  v154();
LABEL_30:
  sub_253578DEC();
  sub_2534847C8();
}

uint64_t sub_253A928D4()
{
  return sub_253A928EC();
}

uint64_t sub_253A928EC()
{
  uint64_t v2 = sub_253B077E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  ContextProtoRetrievedTool.Definition.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CDFD70, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool.Definition);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253A92AA4()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_253462A5C(&qword_26B241270);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = sub_253462A5C(&qword_269CDFA70);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_253B078B0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ContextProtoUIControlTool(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (uint64_t *)((char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v2, v7);
  uint64_t v25 = sub_253B07860();
  uint64_t v27 = v14;
  uint64_t v24 = sub_253B07870();
  uint64_t v26 = v15;
  uint64_t v23 = sub_253B078A0();
  uint64_t v17 = v16;
  sub_253B07880();
  sub_25395F444();
  if (v1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = (uint64_t)v13 + *(int *)(v11 + 28);
    uint64_t v19 = sub_253B08F30();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 1, 1, v19);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    uint64_t v20 = v27;
    *uint64_t v13 = v25;
    v13[1] = v20;
    uint64_t v21 = v26;
    _OWORD v13[2] = v24;
    v13[3] = v21;
    v13[4] = v23;
    v13[5] = v17;
    sub_253961BF0((uint64_t)v6, v18, &qword_269CDFA70);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_253AF1A80(&qword_269CDFD88, (void (*)(uint64_t))type metadata accessor for ContextProtoUIControlTool);
    uint64_t v7 = sub_253B073D0();
    sub_253AF1980();
  }
  return v7;
}

uint64_t sub_253A92DDC()
{
  uint64_t v2 = sub_253B07850();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ContextProtoRetrievedTool(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  ContextProtoRetrievedTool.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CDFAD0, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253A92F94()
{
  uint64_t v2 = type metadata accessor for ToolQuery.Output();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Output = type metadata accessor for ContextProtoToolQueryOutput(0);
  MEMORY[0x270FA5388](Output);
  sub_253AF1A28(v0, (uint64_t)v4);
  ContextProtoToolQueryOutput.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CDFDD8, (void (*)(uint64_t))type metadata accessor for ContextProtoToolQueryOutput);
    uint64_t Output = sub_253B073D0();
    sub_253AF1980();
  }
  return Output;
}

uint64_t sub_253A93114()
{
  uint64_t v2 = sub_253B08270();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  MEMORY[0x270FA5388](DecorationToolRetrievalResponse);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  ContextProtoQueryDecorationToolRetrievalResponse.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CDFDF0, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
    uint64_t DecorationToolRetrievalResponse = sub_253B073D0();
    sub_253AF1980();
  }
  return DecorationToolRetrievalResponse;
}

uint64_t sub_253A932CC()
{
  uint64_t v2 = sub_253B081D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  ContextProtoDynamicEnumerationEntity.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CDF9F0, (void (*)(uint64_t))type metadata accessor for ContextProtoDynamicEnumerationEntity);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253A93484()
{
  uint64_t v2 = sub_253B08040();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ContextProtoToolRetrievalType(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  ContextProtoToolRetrievalType.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CDFAD8, (void (*)(uint64_t))type metadata accessor for ContextProtoToolRetrievalType);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253A9363C()
{
  uint64_t v1 = sub_253B07AF0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ContextProtoSampleInvocation(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  uint64_t v8 = sub_253B07AD0();
  uint64_t v10 = v9;
  sub_253B07AE0();
  int v12 = v11;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)uint64_t v7 = v8;
  *((void *)v7 + 1) = v10;
  *((_DWORD *)v7 + 4) = v12;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_253AF1A80(&qword_269CDFA48, (void (*)(uint64_t))type metadata accessor for ContextProtoSampleInvocation);
  uint64_t v13 = sub_253B073D0();
  sub_253AF1980();
  return v13;
}

uint64_t sub_253A93830()
{
  uint64_t v2 = sub_253B07B60();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ContextProtoSpanMatchedEntity(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  ContextProtoSpanMatchedEntity.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CDF9E8, (void (*)(uint64_t))type metadata accessor for ContextProtoSpanMatchedEntity);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253A939E8()
{
  uint64_t v2 = sub_253B07770();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ContextProtoEntityMatch(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  ContextProtoEntityMatch.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CDFAE8, (void (*)(uint64_t))type metadata accessor for ContextProtoEntityMatch);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253A93BA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_253462A5C((uint64_t *)&unk_269CDB4D0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_253462A5C(&qword_269CDFB20);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_253B079E0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t matched = type metadata accessor for ContextProtoMatchProperties(0);
  MEMORY[0x270FA5388](matched);
  int v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1, v6);
  uint64_t v25 = sub_253B079B0();
  char v13 = v12;
  uint64_t v14 = sub_253B079D0();
  char v16 = v15;
  sub_253B079C0();
  uint64_t v27 = v5;
  uint64_t v17 = v28;
  sub_2539613F0();
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    LODWORD(v28) = v16 & 1;
    if (v16) {
      uint64_t v18 = 0;
    }
    else {
      uint64_t v18 = v14;
    }
    uint64_t v24 = v18;
    int v19 = v13 & 1;
    if (v19) {
      uint64_t v20 = 0;
    }
    else {
      uint64_t v20 = v25;
    }
    uint64_t v21 = (uint64_t)&v11[*(int *)(matched + 24)];
    uint64_t v22 = type metadata accessor for ContextProtoAliasTypes(0);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v21, 1, 1, v22);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(void *)int v11 = v20;
    v11[8] = v19;
    *((void *)v11 + 2) = v24;
    v11[24] = v28;
    sub_253961BF0((uint64_t)v27, v21, &qword_269CDFB20);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_253AF1A80(&qword_269CDFE28, (void (*)(uint64_t))type metadata accessor for ContextProtoMatchProperties);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253A93ECC()
{
  uint64_t v2 = sub_253B075C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ContextProtoAliasTypes(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  ContextProtoAliasTypes.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CDFE40, (void (*)(uint64_t))type metadata accessor for ContextProtoAliasTypes);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253A94084()
{
  uint64_t DecorationInput = type metadata accessor for ContextProtoQueryDecorationInput(0);
  MEMORY[0x270FA5388](DecorationInput);
  id v3 = v0;
  ContextProtoQueryDecorationInput.init(handwritten:)((uint64_t)v3, v4, v5, v6, v7, v8, v9, v10, v12, v13, SWORD2(v13), SBYTE6(v13), SHIBYTE(v13));
  if (!v1)
  {
    sub_253AF1A80(&qword_269CDFD28, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationInput);
    uint64_t DecorationInput = sub_253B073D0();
    sub_253AF1980();
  }
  return DecorationInput;
}

uint64_t sub_253A941A0()
{
  uint64_t DecorationOutput = type metadata accessor for ContextProtoQueryDecorationOutput(0);
  MEMORY[0x270FA5388](DecorationOutput);
  id v3 = v0;
  ContextProtoQueryDecorationOutput.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CDFD10, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationOutput);
    uint64_t DecorationOutput = sub_253B073D0();
    sub_253AF1980();
  }
  return DecorationOutput;
}

uint64_t sub_253A942BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_253B059D0();
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v3 = v29;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_253462A5C(&qword_26B249528);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SpeechRequestCandidate(0);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for TranscriptProtoSpeechRequestCandidate(0);
  uint64_t v13 = MEMORY[0x270FA5388](v32);
  char v15 = (uint64_t *)((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v33 = (uint64_t)&v28 - v16;
  sub_253AF1A28(v1, (uint64_t)v12);
  uint64_t v17 = *(void *)v12;
  uint64_t v30 = *((void *)v12 + 1);
  uint64_t v31 = v17;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  uint64_t v19 = v2;
  v18(v5, &v12[*(int *)(v10 + 28)], v2);
  swift_bridgeObjectRetain();
  LODWORD(v10) = sub_253B059C0();
  uint64_t v20 = sub_253B059A0();
  uint64_t v22 = v21;
  uint64_t v23 = type metadata accessor for TranscriptProtoStatementID(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v8 = v10;
  *((void *)v8 + 1) = v20;
  *((void *)v8 + 2) = v22;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v19);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v23);
  uint64_t v24 = (uint64_t)v15 + *(int *)(v32 + 20);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v24, 1, 1, v23);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v25 = v30;
  *char v15 = v31;
  v15[1] = v25;
  sub_253961BF0((uint64_t)v8, v24, &qword_26B249528);
  sub_253AF19D0((uint64_t)v15, v33);
  sub_253AF1980();
  sub_253AF1A80(&qword_269CE1B28, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSpeechRequestCandidate);
  uint64_t v26 = sub_253B073D0();
  sub_253AF1980();
  return v26;
}

uint64_t sub_253A9464C()
{
  uint64_t v2 = type metadata accessor for Session.Event(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoEvent(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoEvent.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_26B2491D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoEvent);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253A947CC()
{
  uint64_t v2 = type metadata accessor for Session.Transcript(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoTranscript(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoTranscript.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE26C8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTranscript);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253A9494C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_253B05550();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_253462A5C(&qword_26B248D00);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Timepoint();
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for TranscriptProtoTimepoint(0);
  uint64_t v13 = MEMORY[0x270FA5388](v28);
  char v15 = (uint64_t *)((char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v29 = (uint64_t)&v26 - v16;
  sub_253AF1A28(v1, (uint64_t)v12);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v12, v2);
  sub_253B070F0();
  uint64_t v17 = sub_253B07100();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v17);
  uint64_t v18 = *(void *)&v12[*(int *)(v10 + 28)];
  uint64_t v27 = *(void *)&v12[*(int *)(v10 + 32)];
  uint64_t v19 = sub_253B05570();
  uint64_t v21 = v20;
  uint64_t v22 = (uint64_t)v15 + *(int *)(v28 + 28);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v22, 1, 1, v17);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253961BF0((uint64_t)v8, v22, &qword_26B248D00);
  uint64_t v23 = v27;
  *char v15 = v18;
  v15[1] = v23;
  _OWORD v15[2] = v19;
  v15[3] = v21;
  sub_253AF19D0((uint64_t)v15, v29);
  sub_253AF1980();
  sub_253AF1A80(&qword_26B249490, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTimepoint);
  uint64_t v24 = sub_253B073D0();
  sub_253AF1980();
  return v24;
}

uint64_t sub_253A94CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoParticipantID(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v6 = a1;
  v6[1] = a2;
  sub_253AF1A80(&qword_26B2496D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParticipantID);
  uint64_t v7 = sub_253B073D0();
  sub_253AF1980();
  return v7;
}

uint64_t sub_253A94DCC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TranscriptProtoSpanID(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (uint64_t *)((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v4 = a1;
  sub_253AF1A80(&qword_26B2492A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSpanID);
  uint64_t v5 = sub_253B073D0();
  sub_253AF1980();
  return v5;
}

#error "253A94FB4: call analysis failed (funcsize=91)"

uint64_t sub_253A95058()
{
  uint64_t v1 = type metadata accessor for SessionStart(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TranscriptProtoSessionStart(0);
  MEMORY[0x270FA5388](v4);
  sub_253AF1A28(v0, (uint64_t)v3);
  TranscriptProtoSessionStart.init(handwritten:)();
  sub_253AF1A80(&qword_26B249608, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSessionStart);
  uint64_t v5 = sub_253B073D0();
  sub_253AF1980();
  return v5;
}

uint64_t sub_253A951C8()
{
  uint64_t v1 = sub_253B05CB0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoDeviceDetails(0);
  MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  TranscriptProtoDeviceDetails.init(handwritten:)();
  sub_253AF1A80(&qword_269CE3830, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDeviceDetails);
  uint64_t v6 = sub_253B073D0();
  sub_253AF1980();
  return v6;
}

uint64_t sub_253A95370()
{
  uint64_t v1 = sub_253B05C60();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (_DWORD *)((char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  int v8 = sub_253B05C50();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v7 = v8;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_253AF1A80(&qword_269CE3818, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
  uint64_t v9 = sub_253B073D0();
  sub_253AF1980();
  return v9;
}

uint64_t sub_253A95544()
{
  uint64_t v38 = sub_253B05630();
  uint64_t v1 = *(void *)(v38 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v38);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  uint64_t v7 = (char *)&v31 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_253B05D70();
  uint64_t v36 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for TranscriptProtoLocaleSettings(0);
  MEMORY[0x270FA5388](v37);
  char v15 = (uint64_t *)((char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v0, v10);
  sub_253B05D30();
  uint64_t v16 = sub_253B055E0();
  uint64_t v34 = v17;
  uint64_t v35 = v16;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v19 = v9;
  uint64_t v20 = v38;
  v18(v19, v38);
  sub_253B05D10();
  uint64_t v21 = sub_253B055E0();
  uint64_t v32 = v22;
  uint64_t v33 = v21;
  v18(v7, v20);
  sub_253B05D40();
  uint64_t v23 = sub_253B055E0();
  uint64_t v25 = v24;
  v18(v4, v20);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v26 = v36;
  uint64_t v27 = v34;
  *char v15 = v35;
  v15[1] = v27;
  uint64_t v28 = v32;
  _OWORD v15[2] = v33;
  v15[3] = v28;
  v15[4] = v23;
  v15[5] = v25;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v26);
  sub_253AF1A80(&qword_26B249780, (void (*)(uint64_t))type metadata accessor for TranscriptProtoLocaleSettings);
  uint64_t v29 = sub_253B073D0();
  sub_253AF1980();
  return v29;
}

uint64_t sub_253A9587C()
{
  uint64_t v0 = type metadata accessor for TranscriptProtoContextPrewarmRequest(0);
  MEMORY[0x270FA5388](v0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253AF1A80(&qword_269CE2958, (void (*)(uint64_t))type metadata accessor for TranscriptProtoContextPrewarmRequest);
  uint64_t v1 = sub_253B073D0();
  sub_253AF1980();
  return v1;
}

uint64_t sub_253A9597C()
{
  uint64_t v0 = type metadata accessor for TranscriptProtoContextPrewarmCompleted(0);
  MEMORY[0x270FA5388](v0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253AF1A80(&qword_269CE2970, (void (*)(uint64_t))type metadata accessor for TranscriptProtoContextPrewarmCompleted);
  uint64_t v1 = sub_253B073D0();
  sub_253AF1980();
  return v1;
}

uint64_t sub_253A95A7C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for TranscriptProtoSpeechQuery(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_253A646D0(a1, v11, v12, v13, v14, v15, v16, v17, v22[0], (uint64_t (*)(uint64_t))v22[1]);
  uint64_t v19 = v18;
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)uint64_t v10 = v19;
  v10[8] = a2;
  *((void *)v10 + 2) = a3;
  *((void *)v10 + 3) = a4;
  sub_253AF1A80(&qword_269CE39D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSpeechQuery);
  uint64_t v20 = sub_253B073D0();
  sub_253AF1980();
  return v20;
}

uint64_t sub_253A95BEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_253B059D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v29 = v2;
  uint64_t v30 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_253462A5C(&qword_26B249528);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TextQuery(0);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for TranscriptProtoTextQuery(0);
  MEMORY[0x270FA5388](v32);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253AF1A28(v1, (uint64_t)v12);
  uint64_t v15 = *((void *)v12 + 1);
  uint64_t v34 = *(void *)v12;
  uint64_t v31 = v15;
  int v33 = v12[16];
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, &v12[*(int *)(v10 + 32)], v2);
  swift_bridgeObjectRetain();
  LODWORD(v2) = sub_253B059C0();
  uint64_t v16 = sub_253B059A0();
  uint64_t v18 = v17;
  uint64_t v19 = type metadata accessor for TranscriptProtoStatementID(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v8 = v2;
  *((void *)v8 + 1) = v16;
  *((void *)v8 + 2) = v18;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v29);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v19);
  uint64_t v20 = &v12[*(int *)(v10 + 36)];
  uint64_t v22 = *(void *)v20;
  uint64_t v21 = *((void *)v20 + 1);
  uint64_t v23 = v32;
  uint64_t v24 = (uint64_t)&v14[*(int *)(v32 + 24)];
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v24, 1, 1, v19);
  uint64_t v25 = &v14[*(int *)(v23 + 28)];
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v26 = v31;
  *(void *)uint64_t v14 = v34;
  *((void *)v14 + 1) = v26;
  v14[16] = v33;
  sub_253961BF0((uint64_t)v8, v24, &qword_26B249528);
  swift_bridgeObjectRelease();
  *(void *)uint64_t v25 = v22;
  *((void *)v25 + 1) = v21;
  sub_253AF1980();
  sub_253AF1A80(&qword_269CE39A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTextQuery);
  uint64_t v27 = sub_253B073D0();
  sub_253AF1980();
  return v27;
}

uint64_t sub_253A95F70()
{
  uint64_t v2 = type metadata accessor for Request(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoRequest(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoRequest.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE26F0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequest);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253A960F0()
{
  uint64_t v2 = type metadata accessor for RequestContent(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoRequestContent(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoRequestContent.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE2708, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestContent);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253A96270()
{
  uint64_t v0 = type metadata accessor for TranscriptProtoRequestContentStopContent(0);
  MEMORY[0x270FA5388](v0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253AF1A80(&qword_269CE2720, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestContentStopContent);
  uint64_t v1 = sub_253B073D0();
  sub_253AF1980();
  return v1;
}

uint64_t sub_253A96370()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_253B059D0();
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v3 = v29;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_253462A5C(&qword_26B249528);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for RequestContent.TextContent(0);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  uint64_t v13 = MEMORY[0x270FA5388](v32);
  uint64_t v15 = (uint64_t *)((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v33 = (uint64_t)&v28 - v16;
  sub_253AF1A28(v1, (uint64_t)v12);
  uint64_t v17 = *(void *)v12;
  uint64_t v30 = *((void *)v12 + 1);
  uint64_t v31 = v17;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  uint64_t v19 = v2;
  v18(v5, &v12[*(int *)(v10 + 28)], v2);
  swift_bridgeObjectRetain();
  LODWORD(v10) = sub_253B059C0();
  uint64_t v20 = sub_253B059A0();
  uint64_t v22 = v21;
  uint64_t v23 = type metadata accessor for TranscriptProtoStatementID(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v8 = v10;
  *((void *)v8 + 1) = v20;
  *((void *)v8 + 2) = v22;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v19);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v23);
  uint64_t v24 = (uint64_t)v15 + *(int *)(v32 + 20);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v24, 1, 1, v23);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v25 = v30;
  *uint64_t v15 = v31;
  v15[1] = v25;
  sub_253961BF0((uint64_t)v8, v24, &qword_26B249528);
  sub_253AF19D0((uint64_t)v15, v33);
  sub_253AF1980();
  sub_253AF1A80(&qword_269CE2738, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestContentTextContent);
  uint64_t v26 = sub_253B073D0();
  sub_253AF1980();
  return v26;
}

uint64_t sub_253A96700()
{
  uint64_t v0 = type metadata accessor for TranscriptProtoRequestContentSpeechContent(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (uint64_t (**)(uint64_t))((char *)v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_253A646D0(v3, v4, v5, v6, v7, v8, v9, v10, (uint64_t)v15[0], v15[1]);
  uint64_t v12 = v11;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v2 = v12;
  sub_253AF1A80(&qword_269CE2750, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestContentSpeechContent);
  uint64_t v13 = sub_253B073D0();
  sub_253AF1980();
  return v13;
}

uint64_t sub_253A9682C()
{
  uint64_t v2 = type metadata accessor for ExternalAgentRequest(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoExternalAgentRequest(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoExternalAgentRequest.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE2778, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentRequest);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

#error "253A96A88: call analysis failed (funcsize=91)"

uint64_t sub_253A96B2C(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)uint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  v8[16] = a3 & 1;
  v8[17] = HIBYTE(a3) & 1;
  sub_253AF1A80(&qword_269CE27C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
  uint64_t v9 = sub_253B073D0();
  sub_253AF1980();
  return v9;
}

uint64_t sub_253A96C64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v6 = a1;
  v6[1] = a2;
  sub_253AF1A80(&qword_269CE27D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
  uint64_t v7 = sub_253B073D0();
  sub_253AF1980();
  return v7;
}

uint64_t sub_253A96D88(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)uint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  v8[16] = a3;
  sub_253AF1A80(&qword_269CE27F0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool);
  uint64_t v9 = sub_253B073D0();
  sub_253AF1980();
  return v9;
}

uint64_t sub_253A96EB4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)uint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  v8[16] = a3;
  sub_253AF1A80(&qword_269CE2808, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool);
  uint64_t v9 = sub_253B073D0();
  sub_253AF1980();
  return v9;
}

uint64_t sub_253A96FE0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)uint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  v8[16] = a3;
  sub_253AF1A80(&qword_269CE2820, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool);
  uint64_t v9 = sub_253B073D0();
  sub_253AF1980();
  return v9;
}

uint64_t sub_253A9710C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)uint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  v8[16] = a3;
  sub_253AF1A80(&qword_269CE2838, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
  uint64_t v9 = sub_253B073D0();
  sub_253AF1980();
  return v9;
}

uint64_t sub_253A97238()
{
  uint64_t v2 = type metadata accessor for RequestPrescribedPlan.OpenTool(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoRequestPrescribedPlanOpenTool.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE2850, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253A973B8(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v7 = a2 & 1;
  if (v7) {
    a1 = 0;
  }
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)uint64_t v6 = a1;
  v6[8] = v7;
  sub_253AF1A80(&qword_269CE2868, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool);
  uint64_t v8 = sub_253B073D0();
  sub_253AF1980();
  return v8;
}

uint64_t sub_253A974DC()
{
  uint64_t v2 = type metadata accessor for Action(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoAction(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoAction.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE0418, (void (*)(uint64_t))type metadata accessor for TranscriptProtoAction);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253A9765C()
{
  uint64_t v2 = type metadata accessor for ActionCancellation(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoActionCancellation(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoActionCancellation.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE28A0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionCancellation);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253A977DC()
{
  uint64_t v2 = type metadata accessor for ClientAction(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoClientAction(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoClientAction.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE2A38, (void (*)(uint64_t))type metadata accessor for TranscriptProtoClientAction);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253A9795C()
{
  uint64_t v2 = type metadata accessor for ClientAction.ShimParameter(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoShimParameter(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoShimParameter.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE1CE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoShimParameter);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253A97ADC()
{
  uint64_t v2 = sub_253462A5C(&qword_269CE1D00);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v16[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoPersonQuery(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v16[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v16[-1] - v9;
  sub_253961F14(v0, (uint64_t)v17, &qword_269CE8418);
  sub_253961F14(v0 + 16, (uint64_t)v16, &qword_269CE5138);
  sub_253AF188C((void *)v0);
  sub_25347242C((uint64_t)v17);
  sub_253AF18EC(v16);
  sub_253960EC0();
  if (v1)
  {
    sub_253AF1860((uint64_t)v17);
    sub_253AF1920((void *)v0);
  }
  else
  {
    char v11 = *(unsigned char *)(v0 + 56);
    uint64_t v12 = (uint64_t)&v8[*(int *)(v5 + 24)];
    uint64_t v13 = type metadata accessor for TranscriptProtoHandle(0);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v12, 1, 1, v13);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    sub_253961F14((uint64_t)v17, (uint64_t)(v8 + 8), &qword_269CE8418);
    sub_253961BF0((uint64_t)v4, v12, &qword_269CE1D00);
    *uint64_t v8 = v11;
    sub_253AF19D0((uint64_t)v8, (uint64_t)v10);
    sub_253AF1920((void *)v0);
    sub_253AF1A80(&qword_269CE2A70, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPersonQuery);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253A97D54()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TranscriptProtoHandle(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = &v8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v5 = *v1;
  sub_253961F14((uint64_t)(v1 + 8), (uint64_t)v9, &qword_269CE8418);
  sub_253961F14((uint64_t)(v1 + 24), (uint64_t)v8, &qword_269CE8418);
  sub_25347242C((uint64_t)v9);
  sub_25347242C((uint64_t)v8);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v4 = v5;
  sub_253961F14((uint64_t)v9, (uint64_t)(v4 + 8), &qword_269CE8418);
  sub_253961F14((uint64_t)v8, (uint64_t)(v4 + 24), &qword_269CE8418);
  sub_253AF1A80(&qword_269CE2A88, (void (*)(uint64_t))type metadata accessor for TranscriptProtoHandle);
  uint64_t v6 = sub_253B073D0();
  sub_253AF1980();
  return v6;
}

uint64_t sub_253A97ED8()
{
  uint64_t Step = type metadata accessor for QueryStep(0);
  MEMORY[0x270FA5388](Step - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoQueryStep(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoQueryStep.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE2ED8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryStep);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

char *sub_253A98058()
{
  uint64_t v2 = v0;
  uint64_t v41 = sub_253B059D0();
  uint64_t v3 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_253462A5C(&qword_26B249528);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for VariableStep(0);
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TranscriptProtoVariableStep(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (uint64_t *)((char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v42 = (uint64_t)&v36 - v16;
  sub_253AF1A28(v2, (uint64_t)v11);
  uint64_t v17 = swift_bridgeObjectRetain();
  sub_253A6811C(v17, v18, v19, v20, v21, v22, v23, v24, v36, v37);
  if (!v1)
  {
    uint64_t v26 = v3;
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    uint64_t v40 = v25;
    uint64_t v28 = v41;
    v27(v5, v11, v41);
    int v38 = sub_253B059C0();
    uint64_t v29 = sub_253B059A0();
    uint64_t v37 = v30;
    uint64_t v31 = type metadata accessor for TranscriptProtoStatementID(0);
    uint64_t v39 = v12;
    uint64_t v32 = v31;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_DWORD *)uint64_t v8 = v38;
    uint64_t v33 = v37;
    *((void *)v8 + 1) = v29;
    *((void *)v8 + 2) = v33;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v28);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v32);
    uint64_t v34 = (uint64_t)v15 + *(int *)(v39 + 20);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v34, 1, 1, v32);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *uint64_t v15 = v40;
    sub_253961BF0((uint64_t)v8, v34, &qword_26B249528);
    sub_253AF19D0((uint64_t)v15, v42);
    sub_253AF1980();
    sub_253AF1A80(&qword_269CE32D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVariableStep);
    uint64_t v5 = (char *)sub_253B073D0();
  }
  sub_253AF1980();
  return v5;
}

uint64_t sub_253A98420()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_253B05940();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (uint64_t *)((char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  uint64_t v9 = (void *)sub_253B05920();
  id v10 = objc_msgSend(v9, sel_domain);

  uint64_t v11 = sub_253B096E0();
  uint64_t v13 = v12;

  uint64_t v14 = (void *)sub_253B05920();
  id v15 = objc_msgSend(v14, sel_code);

  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v8 = v11;
  v8[1] = v13;
  v8[2] = (uint64_t)v15;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_253AF1A80(&qword_269CE2B10, (void (*)(uint64_t))type metadata accessor for TranscriptProtoIntelligenceFlowError);
  uint64_t v16 = sub_253B073D0();
  sub_253AF1980();
  return v16;
}

uint64_t sub_253A9864C()
{
  uint64_t v2 = type metadata accessor for RequestContent.SystemPromptResolution(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoSystemPromptResolution.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE3160, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolution);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253A987CC()
{
  uint64_t v0 = type metadata accessor for TranscriptProtoActionStepResult(0);
  MEMORY[0x270FA5388](v0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253AF1A80(&qword_269CE29B8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionStepResult);
  uint64_t v1 = sub_253B073D0();
  sub_253AF1980();
  return v1;
}

uint64_t sub_253A988CC()
{
  uint64_t v2 = type metadata accessor for StatementResult(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementResult(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoStatementResult.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE1C90, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementResult);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253A98A4C()
{
  Stepuint64_t Results = type metadata accessor for QueryStepResults(0);
  MEMORY[0x270FA5388](StepResults - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoQueryStepResults(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoQueryStepResults.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE2F00, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryStepResults);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253A98BCC()
{
  uint64_t v0 = type metadata accessor for TranscriptProtoActionResponse(0);
  MEMORY[0x270FA5388](v0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253AF1A80(&qword_269CE3190, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionResponse);
  uint64_t v1 = sub_253B073D0();
  sub_253AF1980();
  return v1;
}

uint64_t sub_253A98CCC()
{
  uint64_t v2 = sub_253B06720();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranscriptProtoSystemResponse(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  TranscriptProtoSystemResponse.init(handwritten:)(v5);
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE37D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemResponse);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253A98E84()
{
  uint64_t v2 = sub_253B06F40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  TranscriptProtoInterpretedStatementResult.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE24B8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoInterpretedStatementResult);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253A9903C()
{
  uint64_t v2 = type metadata accessor for ActionResolverRequest(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoActionResolverRequest.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE31A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionResolverRequest);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253A991BC()
{
  uint64_t v1 = type metadata accessor for TranscriptProtoResponseGenerationRequest(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (uint64_t *)((char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_253A6AA78(v4, v5, v6, v7, v8, v9, v10, v11, v15[0], (uint64_t (*)(uint64_t))v15[1]);
  if (!v0)
  {
    uint64_t v13 = v12;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *uint64_t v3 = v13;
    sub_253AF1A80(&qword_269CE29F8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseGenerationRequest);
    uint64_t v1 = sub_253B073D0();
    sub_253AF1980();
  }
  return v1;
}

uint64_t sub_253A992E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for TranscriptProtoClientInitiatedClientAction(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (uint64_t *)((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_253AE6338(a3);
  if (v3)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *uint64_t v9 = a1;
    v9[1] = a2;
    v9[2] = v11;
    sub_253AF1A80(&qword_269CE3248, (void (*)(uint64_t))type metadata accessor for TranscriptProtoClientInitiatedClientAction);
    uint64_t v7 = sub_253B073D0();
    sub_253AF1980();
  }
  return v7;
}

uint64_t sub_253A99470()
{
  uint64_t v0 = type metadata accessor for TranscriptProtoSafetyModeRelease(0);
  MEMORY[0x270FA5388](v0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253AF1A80(&qword_269CE31F8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSafetyModeRelease);
  uint64_t v1 = sub_253B073D0();
  sub_253AF1980();
  return v1;
}

uint64_t sub_253A99570(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoSafetyModeException(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v6 = a1;
  v6[1] = a2;
  sub_253AF1A80(&qword_269CE3210, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSafetyModeException);
  uint64_t v7 = sub_253B073D0();
  sub_253AF1980();
  return v7;
}

uint64_t sub_253A99694()
{
  uint64_t v2 = type metadata accessor for VariableSetter(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoVariableSetter(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoVariableSetter.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE2230, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVariableSetter);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253A99814()
{
  uint64_t v2 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoSystemPromptResolutionUserAction.init(handwritten:)((uint64_t)v4, v6, v7, v8, v9, v10, v11, v12, v14[0], v14[1]);
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE3278, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253A99994()
{
  uint64_t v0 = type metadata accessor for TranscriptProtoActionResult(0);
  MEMORY[0x270FA5388](v0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253AF1A80(&qword_269CE2988, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionResult);
  uint64_t v1 = sub_253B073D0();
  sub_253AF1980();
  return v1;
}

uint64_t sub_253A99A94()
{
  uint64_t v2 = type metadata accessor for StatementResultPayload(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoStatementResultPayload.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE29D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementResultPayload);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253A99C14()
{
  uint64_t v2 = sub_253B064B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranscriptProtoResponseOutput(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  TranscriptProtoResponseOutput.init(handwritten:)((uint64_t)v5, v7, v8, v9, v10, v11, v12, v13, v15[0], v15[1]);
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE2F30, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseOutput);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253A99DCC()
{
  uint64_t Results = type metadata accessor for TranscriptProtoQueryResults(0);
  MEMORY[0x270FA5388](Results);
  uint64_t v3 = (uint64_t *)((char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_253A67D94(v4, v5, v6, v7, v8, v9, v10, v11, v15[0], (uint64_t (*)(uint64_t))v15[1]);
  if (!v0)
  {
    uint64_t v13 = v12;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *uint64_t v3 = v13;
    sub_253AF1A80(&qword_269CE1FB8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryResults);
    uint64_t Results = sub_253B073D0();
    sub_253AF1980();
  }
  return Results;
}

uint64_t sub_253A99EF4()
{
  uint64_t v2 = type metadata accessor for ParameterQuery(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoParameterQuery(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoParameterQuery.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE1F80, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterQuery);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253A9A074()
{
  uint64_t v1 = type metadata accessor for ActionParameterContext(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TranscriptProtoActionParameterContext(0);
  MEMORY[0x270FA5388](v4);
  sub_253AF1A28(v0, (uint64_t)v3);
  TranscriptProtoActionParameterContext.init(handwritten:)();
  sub_253AF1A80(&qword_269CE2AF8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionParameterContext);
  uint64_t v5 = sub_253B073D0();
  sub_253AF1980();
  return v5;
}

uint64_t sub_253A9A1E4()
{
  uint64_t v2 = sub_253B06AF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranscriptProtoActionConfirmation(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  TranscriptProtoActionConfirmation.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE28D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionConfirmation);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253A9A39C()
{
  uint64_t v1 = sub_253B06AB0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
  MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  TranscriptProtoActionConfirmationSystemStyle.init(handwritten:)();
  sub_253AF1A80(&qword_269CE28E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionConfirmationSystemStyle);
  uint64_t v6 = sub_253B073D0();
  sub_253AF1980();
  return v6;
}

uint64_t sub_253A9A544()
{
  uint64_t v1 = sub_253B06AA0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
  MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  TranscriptProtoActionConfirmationSystemStyleMontaraEnablement.init(handwritten:)();
  sub_253AF1A80(&qword_269CE2900, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement);
  uint64_t v6 = sub_253B073D0();
  sub_253AF1980();
  return v6;
}

uint64_t sub_253A9A6EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_253B06A80();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v12(v8, v1, v2);
  char *v11 = 4;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  v12(v6, (uint64_t)v8, v2);
  int v13 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v13 == *MEMORY[0x263F4C928])
  {
    char v14 = 0;
LABEL_9:
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    char *v11 = v14;
    sub_253AF1A80(&qword_269CE2918, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource);
    uint64_t v15 = sub_253B073D0();
    sub_253AF1980();
    return v15;
  }
  if (v13 == *MEMORY[0x263F4C920])
  {
    char v14 = 1;
    goto LABEL_9;
  }
  if (v13 == *MEMORY[0x263F4C918])
  {
    char v14 = 2;
    goto LABEL_9;
  }
  if (v13 == *MEMORY[0x263F4C910])
  {
    char v14 = 3;
    goto LABEL_9;
  }
  uint64_t result = sub_253B0A4B0();
  __break(1u);
  return result;
}

uint64_t sub_253A9A998()
{
  uint64_t v2 = sub_253B06280();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranscriptProtoParameterValue(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  TranscriptProtoParameterValue.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE1BF8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterValue);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253A9AB50()
{
  uint64_t v0 = sub_253B06770();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (void *)((char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v20 - v5;
  uint64_t v7 = type metadata accessor for TranscriptProtoPromptSelection(0);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v20 - v11;
  int v13 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v13(v6, (char *)v20[1], v0);
  v13((char *)v4, v6, v0);
  int v14 = (*(uint64_t (**)(uint64_t *, uint64_t))(v1 + 88))(v4, v0);
  int v15 = v14;
  int v16 = *MEMORY[0x263F4C6D8];
  if (v14 == *MEMORY[0x263F4C6D8])
  {
    (*(void (**)(uint64_t *, uint64_t))(v1 + 96))(v4, v0);
    uint64_t v17 = *v4;
    goto LABEL_7;
  }
  if (v14 == *MEMORY[0x263F4C6E8])
  {
    uint64_t v17 = 0;
LABEL_7:
    *(void *)uint64_t v10 = 0;
    *((_WORD *)v10 + 4) = 256;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    sub_253AF19D0((uint64_t)v10, (uint64_t)v12);
    *(void *)uint64_t v12 = v17;
    v12[8] = v15 != v16;
    v12[9] = 0;
    sub_253AF1A80(&qword_269CE28B8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPromptSelection);
    uint64_t v18 = sub_253B073D0();
    sub_253AF1980();
    return v18;
  }
  if (v14 == *MEMORY[0x263F4C6E0])
  {
    uint64_t v17 = 1;
    goto LABEL_7;
  }
  uint64_t result = sub_253B0A4B0();
  __break(1u);
  return result;
}

uint64_t sub_253A9AE58()
{
  uint64_t v1 = sub_253B06B60();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (uint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  uint64_t v8 = sub_253B05AF0();
  uint64_t v10 = v9;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v7 = v8;
  v7[1] = v10;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_253AF1A80(&qword_269CE2D60, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterNeedsValue);
  uint64_t v11 = sub_253B073D0();
  sub_253AF1980();
  return v11;
}

uint64_t sub_253A9B030()
{
  uint64_t v2 = sub_253B06D60();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  TranscriptProtoParameterConfirmation.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE2D08, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterConfirmation);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253A9B1E8()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_253B06EC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for TranscriptProtoParameterDisambiguation(0);
  MEMORY[0x270FA5388](v21);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  uint64_t v20 = sub_253B06E90();
  uint64_t v10 = v9;
  uint64_t v11 = MEMORY[0x25A265EA0]();
  char v13 = v12;
  uint64_t v14 = MEMORY[0x25A265EB0]();
  uint64_t v15 = sub_253AC7D1C(v14);
  if (v1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = v15;
    int v17 = v13 & 1;
    if (v17) {
      uint64_t v11 = 0;
    }
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(void *)uint64_t v8 = v20;
    *((void *)v8 + 1) = v10;
    v8[32] = v17;
    *((void *)v8 + 2) = v16;
    *((void *)v8 + 3) = v11;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_253AF1A80(&qword_269CE2D20, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterDisambiguation);
    uint64_t v3 = sub_253B073D0();
    sub_253AF1980();
  }
  return v3;
}

uint64_t sub_253A9B430()
{
  uint64_t v2 = sub_253B06BE0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  TranscriptProtoParameterNotAllowed.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE2D78, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterNotAllowed);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253A9B5E8()
{
  uint64_t v2 = type metadata accessor for Candidate(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoCandidate(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoCandidate.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE1F70, (void (*)(uint64_t))type metadata accessor for TranscriptProtoCandidate);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253A9B768()
{
  uint64_t Predicate = type metadata accessor for QueryPredicate(0);
  MEMORY[0x270FA5388](Predicate - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoQueryPredicate(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoQueryPredicate.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE1F48, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryPredicate);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253A9B8E8(BOOL a1, char a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v13 - v8;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  BOOL v10 = a1;
  if ((a2 & 1) == 0) {
    BOOL v10 = a1;
  }
  *(void *)uint64_t v7 = v10;
  unsigned char v7[8] = a2 & 1;
  v7[9] = 0;
  sub_253AF19D0((uint64_t)v7, (uint64_t)v9);
  sub_253AF1A80(&qword_269CE2A20, (void (*)(uint64_t))type metadata accessor for TranscriptProtoCandidatePromptStatus);
  uint64_t v11 = sub_253B073D0();
  sub_253AF1980();
  return v11;
}

uint64_t sub_253A9BA58()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for TranscriptProtoPlan(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v6 = *(_OWORD *)v2;
  long long v21 = *(_OWORD *)(v2 + 16);
  long long v22 = v6;
  sub_253970894(v2);
  sub_25347242C((uint64_t)&v22);
  sub_25347242C((uint64_t)&v21);
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_253A64D78(v7, v8, v9, v10, v11, v12, v13, v14, (uint64_t)v20[0], v20[1]);
  if (v1)
  {
    sub_253AF1860((uint64_t)&v22);
    sub_253AF1860((uint64_t)&v21);
    sub_2539708E8(v2);
  }
  else
  {
    uint64_t v16 = v15;
    char v17 = *(unsigned char *)(v2 + 56) + 1;
    sub_253961F14(v2 + 40, (uint64_t)v20, &qword_269CE8418);
    sub_25347242C((uint64_t)v20);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    sub_2539708E8(v2);
    long long v18 = v21;
    *(_OWORD *)uint64_t v5 = v22;
    *((_OWORD *)v5 + 1) = v18;
    *((void *)v5 + 4) = v16;
    sub_253961F14((uint64_t)v20, (uint64_t)(v5 + 40), &qword_269CE8418);
    v5[56] = v17;
    sub_253AF1A80(&qword_269CE2DC8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPlan);
    uint64_t v3 = sub_253B073D0();
    sub_253AF1980();
  }
  return v3;
}

uint64_t sub_253A9BC30()
{
  uint64_t v2 = type metadata accessor for TranscriptProtoRecoverableError(0);
  MEMORY[0x270FA5388](v2);
  sub_253AF17B8(v0, (uint64_t)v4);
  sub_253AF1814(v0);
  TranscriptProtoRecoverableError.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE2DE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRecoverableError);
    uint64_t v2 = sub_253B073D0();
    sub_253AF1980();
  }
  return v2;
}

uint64_t sub_253A9BD5C()
{
  sub_253AF175C(v0, (uint64_t)v18);
  uint64_t v1 = v18[0];
  uint64_t v2 = v18[1];
  uint64_t v3 = v18[3];
  uint64_t v4 = v18[5];
  uint64_t v16 = v18[4];
  uint64_t v17 = v18[2];
  uint64_t v5 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for TranscriptProtoPlanGenerationError(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v16 - v12;
  type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v7 = v1;
  v7[1] = v2;
  v7[2] = v17;
  v7[3] = v3;
  v7[4] = v16;
  v7[5] = v4;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v11, 1, 1, v5);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253472458((uint64_t)v11, &qword_269CE1EF0);
  sub_253AF19D0((uint64_t)v7, (uint64_t)v11);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v11, 0, 1, v5);
  sub_253AF19D0((uint64_t)v11, (uint64_t)v13);
  sub_253AF1A80(&qword_269CE2DF8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPlanGenerationError);
  uint64_t v14 = sub_253B073D0();
  sub_253AF1980();
  return v14;
}

uint64_t sub_253A9BFC0()
{
  uint64_t v1 = type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (long long *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v4 = *v0;
  long long v9 = v0[1];
  long long v10 = v4;
  long long v8 = v0[2];
  sub_25347242C((uint64_t)&v10);
  sub_25347242C((uint64_t)&v9);
  sub_25347242C((uint64_t)&v8);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  long long v5 = v9;
  *uint64_t v3 = v10;
  v3[1] = v5;
  v3[2] = v8;
  sub_253AF1A80(&qword_269CE2E10, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
  uint64_t v6 = sub_253B073D0();
  sub_253AF1980();
  return v6;
}

uint64_t sub_253A9C104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoDecompositionResult(0);
  MEMORY[0x270FA5388](v6);
  long long v8 = (uint64_t *)((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  v8[1] = a1;
  v8[2] = a2;
  *long long v8 = a3;
  sub_253AF1A80(&qword_269CE2AE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDecompositionResult);
  uint64_t v9 = sub_253B073D0();
  sub_253AF1980();
  return v9;
}

#error "253A9C30C: call analysis failed (funcsize=87)"

uint64_t sub_253A9C3A8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoValueExpression(0);
  MEMORY[0x270FA5388](v6);
  sub_2534E4408(a1, a2, a3);
  TranscriptProtoValueExpression.init(handwritten:)();
  sub_253AF1A80(&qword_269CE3530, (void (*)(uint64_t))type metadata accessor for TranscriptProtoValueExpression);
  uint64_t v7 = sub_253B073D0();
  sub_253AF1980();
  return v7;
}

uint64_t sub_253A9C4DC()
{
  uint64_t v1 = type metadata accessor for PrefixExpression(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TranscriptProtoPrefixExpression(0);
  MEMORY[0x270FA5388](v4);
  sub_253AF1A28(v0, (uint64_t)v3);
  TranscriptProtoPrefixExpression.init(handwritten:)();
  sub_253AF1A80(&qword_269CE3560, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPrefixExpression);
  uint64_t v5 = sub_253B073D0();
  sub_253AF1980();
  return v5;
}

uint64_t sub_253A9C64C()
{
  uint64_t v1 = type metadata accessor for InfixExpression(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TranscriptProtoInfixExpression(0);
  MEMORY[0x270FA5388](v4);
  sub_253AF1A28(v0, (uint64_t)v3);
  TranscriptProtoInfixExpression.init(handwritten:)();
  sub_253AF1A80(&qword_269CE3578, (void (*)(uint64_t))type metadata accessor for TranscriptProtoInfixExpression);
  uint64_t v5 = sub_253B073D0();
  sub_253AF1980();
  return v5;
}

uint64_t sub_253A9C7BC()
{
  uint64_t v1 = type metadata accessor for IndexExpression(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TranscriptProtoIndexExpression(0);
  MEMORY[0x270FA5388](v4);
  sub_253AF1A28(v0, (uint64_t)v3);
  TranscriptProtoIndexExpression.init(handwritten:)();
  sub_253AF1A80(&qword_269CE35A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoIndexExpression);
  uint64_t v5 = sub_253B073D0();
  sub_253AF1980();
  return v5;
}

uint64_t sub_253A9C92C()
{
  uint64_t updated = type metadata accessor for UpdateParametersExpression(0);
  MEMORY[0x270FA5388](updated - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
  MEMORY[0x270FA5388](v4);
  sub_253AF1A28(v0, (uint64_t)v3);
  TranscriptProtoUpdateParametersExpression.init(handwritten:)();
  sub_253AF1A80(&qword_269CE35C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUpdateParametersExpression);
  uint64_t v5 = sub_253B073D0();
  sub_253AF1980();
  return v5;
}

uint64_t sub_253A9CA9C()
{
  uint64_t updated = type metadata accessor for UpdateParametersExpression.UpdateParameter(0);
  MEMORY[0x270FA5388](updated - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(0);
  MEMORY[0x270FA5388](v4);
  sub_253AF1A28(v0, (uint64_t)v3);
  TranscriptProtoUpdateParameterExpression_UpdateParameter.init(handwritten:)();
  sub_253AF1A80(&qword_269CE23D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
  uint64_t v5 = sub_253B073D0();
  sub_253AF1980();
  return v5;
}

uint64_t sub_253A9CC0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  MEMORY[0x270FA5388](v8);
  long long v10 = (uint64_t *)((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *long long v10 = a1;
  v10[1] = a2;
  v10[2] = a3;
  v10[3] = a4;
  sub_253AF1A80(&qword_269CE2438, (void (*)(uint64_t))type metadata accessor for TranscriptProtoGlobalToolIdentifier);
  uint64_t v11 = sub_253B073D0();
  sub_253AF1980();
  return v11;
}

uint64_t sub_253A9CD4C()
{
  uint64_t v2 = sub_253462A5C(&qword_269CE0448);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (_OWORD *)((char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for TranscriptProtoCallExpression(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v6);
  long long v10 = (char *)&v17 - v9;
  sub_253AF16C8((uint64_t)v0);
  sub_253AE6E3C();
  uint64_t v18 = v11;
  uint64_t v23 = v1;
  long long v12 = v0[1];
  long long v19 = *v0;
  long long v20 = v12;
  long long v22 = v19;
  sub_253961F14((uint64_t)&v20, (uint64_t)v21, &qword_269CE8418);
  uint64_t v13 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  sub_25347242C((uint64_t)&v22);
  sub_25347242C((uint64_t)v21);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253AF1714((uint64_t)v0);
  *uint64_t v4 = v22;
  sub_253961F14((uint64_t)v21, (uint64_t)(v4 + 1), &qword_269CE8418);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v4, 0, 1, v13);
  uint64_t v14 = (uint64_t)v8 + *(int *)(v5 + 20);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v14, 1, 1, v13);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v8 = v18;
  sub_253961BF0((uint64_t)v4, v14, &qword_269CE0448);
  sub_253AF19D0((uint64_t)v8, (uint64_t)v10);
  sub_253AF1A80(&qword_269CE35F8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoCallExpression);
  uint64_t v15 = sub_253B073D0();
  sub_253AF1980();
  return v15;
}

uint64_t sub_253A9CFDC()
{
  uint64_t v0 = type metadata accessor for TranscriptProtoSayExpression(0);
  MEMORY[0x270FA5388](v0);
  swift_bridgeObjectRetain();
  TranscriptProtoSayExpression.init(handwritten:)();
  sub_253AF1A80(&qword_269CE3610, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSayExpression);
  uint64_t v1 = sub_253B073D0();
  sub_253AF1980();
  return v1;
}

uint64_t sub_253A9D0F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_253B059D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v25 = v2;
  uint64_t v26 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_253462A5C(&qword_26B249528);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PickExpression(0);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  long long v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for TranscriptProtoPickExpression(0);
  uint64_t v13 = MEMORY[0x270FA5388](v27);
  uint64_t v15 = (uint64_t *)((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v28 = (uint64_t)&v25 - v16;
  sub_253AF1A28(v1, (uint64_t)v12);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v12, v2);
  LODWORD(v1) = sub_253B059C0();
  uint64_t v17 = sub_253B059A0();
  uint64_t v19 = v18;
  uint64_t v20 = type metadata accessor for TranscriptProtoStatementID(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v8 = v1;
  *((void *)v8 + 1) = v17;
  *((void *)v8 + 2) = v19;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v25);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v20);
  uint64_t v21 = *(void *)&v12[*(int *)(v10 + 28)];
  uint64_t v22 = (uint64_t)v15 + *(int *)(v27 + 20);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v22, 1, 1, v20);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253961BF0((uint64_t)v8, v22, &qword_26B249528);
  *uint64_t v15 = v21;
  sub_253AF19D0((uint64_t)v15, v28);
  sub_253AF1980();
  sub_253AF1A80(&qword_269CE3628, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPickExpression);
  uint64_t v23 = sub_253B073D0();
  sub_253AF1980();
  return v23;
}

uint64_t sub_253A9D468()
{
  uint64_t v1 = type metadata accessor for ConfirmExpression(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TranscriptProtoConfirmExpression(0);
  MEMORY[0x270FA5388](v4);
  sub_253AF1A28(v0, (uint64_t)v3);
  TranscriptProtoConfirmExpression.init(handwritten:)();
  sub_253AF1A80(&qword_269CE3640, (void (*)(uint64_t))type metadata accessor for TranscriptProtoConfirmExpression);
  uint64_t v5 = sub_253B073D0();
  sub_253AF1980();
  return v5;
}

uint64_t sub_253A9D5D8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSearchExpression(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)uint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  unsigned char v8[16] = a3 & 1;
  v8[17] = BYTE1(a3) & 1;
  v8[18] = BYTE2(a3) & 1;
  sub_253AF1A80(&qword_269CE3658, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSearchExpression);
  uint64_t v9 = sub_253B073D0();
  sub_253AF1980();
  return v9;
}

uint64_t sub_253A9D718()
{
  uint64_t v0 = type metadata accessor for TranscriptProtoStructuredSearchExpression(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (uint64_t *)((char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  sub_253AE6E3C();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v2 = v4;
  sub_253AF1A80(&qword_269CE3670, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStructuredSearchExpression);
  uint64_t v5 = sub_253B073D0();
  sub_253AF1980();
  return v5;
}

uint64_t sub_253A9D84C()
{
  uint64_t v1 = type metadata accessor for PickOneExpression(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TranscriptProtoPickOneExpression(0);
  MEMORY[0x270FA5388](v4);
  sub_253AF1A28(v0, (uint64_t)v3);
  TranscriptProtoPickOneExpression.init(handwritten:)();
  sub_253AF1A80(&qword_269CE3688, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPickOneExpression);
  uint64_t v5 = sub_253B073D0();
  sub_253AF1980();
  return v5;
}

uint64_t sub_253A9D9BC()
{
  uint64_t v0 = type metadata accessor for TranscriptProtoResolveToolExpression(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (uint64_t *)((char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  sub_253A67040();
  uint64_t v4 = v3;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v2 = v4;
  sub_253AF1A80(&qword_269CE36A0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResolveToolExpression);
  uint64_t v5 = sub_253B073D0();
  sub_253AF1980();
  return v5;
}

uint64_t sub_253A9DAE8()
{
  uint64_t v1 = type metadata accessor for UndoExpression(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TranscriptProtoUndoExpression(0);
  MEMORY[0x270FA5388](v4);
  sub_253AF1A28(v0, (uint64_t)v3);
  TranscriptProtoUndoExpression.init(handwritten:)();
  sub_253AF1A80(&qword_269CE36B8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUndoExpression);
  uint64_t v5 = sub_253B073D0();
  sub_253AF1980();
  return v5;
}

uint64_t sub_253A9DC58()
{
  uint64_t v1 = type metadata accessor for RejectExpression(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TranscriptProtoRejectExpression(0);
  MEMORY[0x270FA5388](v4);
  sub_253AF1A28(v0, (uint64_t)v3);
  TranscriptProtoRejectExpression.init(handwritten:)();
  sub_253AF1A80(&qword_269CE36D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRejectExpression);
  uint64_t v5 = sub_253B073D0();
  sub_253AF1980();
  return v5;
}

uint64_t sub_253A9DDC8()
{
  uint64_t v1 = type metadata accessor for CancelExpression(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TranscriptProtoCancelExpression(0);
  MEMORY[0x270FA5388](v4);
  sub_253AF1A28(v0, (uint64_t)v3);
  TranscriptProtoCancelExpression.init(handwritten:)();
  sub_253AF1A80(&qword_269CE36E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoCancelExpression);
  uint64_t v5 = sub_253B073D0();
  sub_253AF1980();
  return v5;
}

uint64_t sub_253A9DF38()
{
  uint64_t v1 = type metadata accessor for OpenExpression(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TranscriptProtoOpenExpression(0);
  MEMORY[0x270FA5388](v4);
  sub_253AF1A28(v0, (uint64_t)v3);
  TranscriptProtoOpenExpression.init(handwritten:)();
  sub_253AF1A80(&qword_269CE3760, (void (*)(uint64_t))type metadata accessor for TranscriptProtoOpenExpression);
  uint64_t v5 = sub_253B073D0();
  sub_253AF1980();
  return v5;
}

uint64_t sub_253A9E0A8()
{
  uint64_t v2 = type metadata accessor for ProgramStatement(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoProgramStatement(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoProgramStatement.init(handwritten:)(v4);
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE1EC0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoProgramStatement);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253A9E228()
{
  uint64_t v1 = sub_253B059D0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  int v8 = sub_253B059C0();
  uint64_t v9 = sub_253B059A0();
  uint64_t v11 = v10;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v7 = v8;
  *((void *)v7 + 1) = v9;
  *((void *)v7 + 2) = v11;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_253AF1A80(&qword_269CE1FE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
  uint64_t v12 = sub_253B073D0();
  sub_253AF1980();
  return v12;
}

uint64_t sub_253A9E414()
{
  uint64_t v0 = type metadata accessor for TranscriptProtoActionOutcome(0);
  MEMORY[0x270FA5388](v0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253AF1A80(&qword_269CE2B88, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionOutcome);
  uint64_t v1 = sub_253B073D0();
  sub_253AF1980();
  return v1;
}

uint64_t sub_253A9E514()
{
  uint64_t v2 = sub_253B06860();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranscriptProtoActionRequirement(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  TranscriptProtoActionRequirement.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE2BA0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionRequirement);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253A9E6CC()
{
  uint64_t v2 = sub_253B06850();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  TranscriptProtoStatementOutcome.init(handwritten:)((uint64_t)v5, v7, v8, v9, v10, v11, v12, v13, v15[0], v15[1]);
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE0410, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementOutcome);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253A9E884()
{
  uint64_t v2 = sub_253B05C30();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranscriptProtoActionSuccess(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  TranscriptProtoActionSuccess.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE2C90, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionSuccess);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253A9EA3C()
{
  uint64_t v2 = sub_253B06820();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranscriptProtoResponseManifest(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  TranscriptProtoResponseManifest.init(handwritten:)((uint64_t)v5, v7, v8, v9, v10, v11, v12, v13, v15, v16, v17, v18, v19);
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE0400, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseManifest);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253A9EBF4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_253B069C0();
  uint64_t v29 = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for TranscriptProtoResponseParameter(0);
  MEMORY[0x270FA5388](v28);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  uint64_t v8 = sub_253B06970();
  uint64_t v26 = v9;
  uint64_t v27 = v8;
  uint64_t v10 = sub_253B06990();
  uint64_t v24 = v11;
  uint64_t v25 = v10;
  uint64_t v23 = sub_253B06980();
  uint64_t v13 = v12;
  LOBYTE(v1) = sub_253B069B0();
  uint64_t v14 = sub_253B069A0();
  uint64_t v16 = v15;
  char v17 = sub_253B06950();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v18 = v26;
  *(void *)uint64_t v7 = v27;
  *((void *)v7 + 1) = v18;
  uint64_t v19 = v24;
  *((void *)v7 + 2) = v25;
  *((void *)v7 + 3) = v19;
  *((void *)v7 + 4) = v23;
  *((void *)v7 + 5) = v13;
  v7[48] = v1;
  *((void *)v7 + 7) = v14;
  *((void *)v7 + 8) = v16;
  v7[72] = v17;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v29);
  sub_253AF1A80(&qword_269CE2098, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseParameter);
  uint64_t v20 = sub_253B073D0();
  sub_253AF1980();
  return v20;
}

uint64_t sub_253A9EE34()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_253B062E0();
  uint64_t v26 = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranscriptProtoResponseDialog(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (uint64_t *)((char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  uint64_t v9 = sub_253B062C0();
  uint64_t v24 = v10;
  uint64_t v25 = v9;
  uint64_t v23 = sub_253B062D0();
  uint64_t v12 = v11;
  uint64_t v13 = sub_253B06290();
  uint64_t v15 = v14;
  uint64_t v16 = sub_253B062A0();
  uint64_t v18 = v17;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v19 = v26;
  uint64_t v20 = v24;
  *uint64_t v8 = v25;
  v8[1] = v20;
  v8[2] = v23;
  v8[3] = v12;
  v8[4] = v13;
  v8[5] = v15;
  v8[6] = v16;
  v8[7] = v18;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v19);
  sub_253AF1A80(&qword_269CE2F18, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseDialog);
  uint64_t v21 = sub_253B073D0();
  sub_253AF1980();
  return v21;
}

uint64_t sub_253A9F050()
{
  uint64_t v2 = sub_253B06680();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranscriptProtoResponseVisual(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  TranscriptProtoResponseVisual.init(handwritten:)((uint64_t)v5, v7, v8, v9, v10, v11, v12, v13, v15[0], v15[1]);
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE3098, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseVisual);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253A9F208()
{
  uint64_t v2 = sub_253B06600();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranscriptProtoUIType(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  TranscriptProtoUIType.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE20C8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUIType);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253A9F3C0()
{
  uint64_t v2 = sub_253B06660();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranscriptProtoUILabel(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  TranscriptProtoUILabel.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE20D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUILabel);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253A9F578()
{
  uint64_t v1 = sub_253B064E0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v14 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  char v11 = sub_253B064D0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  *uint64_t v8 = v11 & 1;
  sub_253AF19D0((uint64_t)v8, (uint64_t)v10);
  sub_253AF1A80(&qword_269CE30B0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseVisualOptions);
  uint64_t v12 = sub_253B073D0();
  sub_253AF1980();
  return v12;
}

uint64_t sub_253A9F790()
{
  uint64_t v1 = sub_253B06650();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  uint64_t v8 = sub_253B06630();
  uint64_t v10 = v9;
  uint64_t v11 = sub_253B065E0();
  uint64_t v13 = v12;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v7 = v8;
  v7[1] = v10;
  v7[2] = v11;
  v7[3] = v13;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_253AF1A80(&qword_269CE30E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUIConfirmationLabel);
  uint64_t v14 = sub_253B073D0();
  sub_253AF1980();
  return v14;
}

uint64_t sub_253A9F980()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_253B06580();
  uint64_t v21 = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranscriptProtoArchiveViewPayload(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (uint64_t *)((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  uint64_t v20 = sub_253B06560();
  uint64_t v10 = v9;
  uint64_t v11 = sub_253B06550();
  uint64_t v13 = v12;
  uint64_t v14 = sub_253B06540();
  uint64_t v16 = v15;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v17 = v21;
  *uint64_t v8 = v20;
  v8[1] = v10;
  v8[2] = v11;
  v8[3] = v13;
  v8[4] = v14;
  v8[5] = v16;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
  sub_253AF1A80(&qword_269CE3100, (void (*)(uint64_t))type metadata accessor for TranscriptProtoArchiveViewPayload);
  uint64_t v18 = sub_253B073D0();
  sub_253AF1980();
  return v18;
}

uint64_t sub_253A9FB88()
{
  uint64_t v1 = sub_253B065B0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (uint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  uint64_t v8 = sub_253B065A0();
  uint64_t v10 = v9;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v7 = v8;
  v7[1] = v10;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_253AF1A80(&qword_269CE3118, (void (*)(uint64_t))type metadata accessor for TranscriptProtoLiveActivityPayload);
  uint64_t v11 = sub_253B073D0();
  sub_253AF1980();
  return v11;
}

uint64_t sub_253A9FD60()
{
  uint64_t v1 = sub_253B065F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoPluginSnippetPayload(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  uint64_t v8 = sub_253B065C0();
  uint64_t v10 = v9;
  uint64_t v11 = sub_253B065E0();
  uint64_t v13 = v12;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v7 = v8;
  v7[1] = v10;
  v7[2] = v11;
  v7[3] = v13;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_253AF1A80(&qword_269CE3130, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPluginSnippetPayload);
  uint64_t v14 = sub_253B073D0();
  sub_253AF1980();
  return v14;
}

uint64_t sub_253A9FF50()
{
  uint64_t v1 = sub_253B09220();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_253B06530();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TranscriptProtoControlPayload(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v22 = v5;
  v12(v8, v0, v5);
  sub_253B06510();
  uint64_t v13 = sub_253B09200();
  unint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v15 >> 60 == 15)
  {
    uint64_t v23 = MEMORY[0x263F06F78];
    sub_253462A5C(&qword_269CE8728);
    uint64_t v16 = sub_253B09730();
    uint64_t v18 = v17;
    sub_253961DC0();
    swift_allocError();
    *(void *)uint64_t v19 = v16;
    *(void *)(v19 + 8) = v18;
    *(unsigned char *)(v19 + 16) = 0;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v22);
  }
  else
  {
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    uint64_t *v11 = v13;
    v11[1] = v15;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v22);
    sub_253AF1A80(&qword_269CE3148, (void (*)(uint64_t))type metadata accessor for TranscriptProtoControlPayload);
    uint64_t v16 = sub_253B073D0();
    sub_253AF1980();
  }
  return v16;
}

uint64_t sub_253AA025C()
{
  uint64_t v2 = sub_253B063E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranscriptProtoVisualOutput(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  TranscriptProtoVisualOutput.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE1FD0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVisualOutput);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253AA0414()
{
  uint64_t v1 = sub_253B06330();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (uint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  uint64_t v8 = sub_253B06320();
  uint64_t v10 = v9;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v7 = v8;
  v7[1] = v10;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_253AF1A80(&qword_269CE2F70, (void (*)(uint64_t))type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
  uint64_t v11 = sub_253B073D0();
  sub_253AF1980();
  return v11;
}

uint64_t sub_253AA05EC()
{
  uint64_t v1 = sub_253B063C0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (uint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  uint64_t v8 = sub_253B06320();
  uint64_t v10 = v9;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v7 = v8;
  v7[1] = v10;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_253AF1A80(&qword_269CE2F88, (void (*)(uint64_t))type metadata accessor for TranscriptProtoInAppResponseOutputPayload);
  uint64_t v11 = sub_253B073D0();
  sub_253AF1980();
  return v11;
}

uint64_t sub_253AA07C4()
{
  uint64_t v1 = sub_253B06370();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  uint64_t v8 = sub_253B06340();
  uint64_t v10 = v9;
  uint64_t v11 = sub_253B06360();
  uint64_t v13 = v12;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v7 = v8;
  v7[1] = v10;
  v7[2] = v11;
  v7[3] = v13;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_253AF1A80(&qword_269CE2FB8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPluginSnippetOutputPayload);
  uint64_t v14 = sub_253B073D0();
  sub_253AF1980();
  return v14;
}

uint64_t sub_253AA09B4()
{
  uint64_t v2 = sub_253B06450();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranscriptProtoDialogType(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  TranscriptProtoDialogType.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE2FD0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDialogType);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253AA0B6C()
{
  uint64_t v1 = type metadata accessor for AST.FlatExpr(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
  MEMORY[0x270FA5388](v4);
  sub_253AF1A28(v0, (uint64_t)v3);
  TranscriptProtoASTFlatExpr.init(handwritten:)();
  sub_253AF1A80(&qword_269CE3490, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatExpr);
  uint64_t v5 = sub_253B073D0();
  sub_253AF1980();
  return v5;
}

uint64_t sub_253AA0CDC()
{
  uint64_t v1 = type metadata accessor for AST.Update(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(0);
  MEMORY[0x270FA5388](updated);
  sub_253AF1A28(v0, (uint64_t)v3);
  TranscriptProtoASTFlatExprUpdateVariant.init(handwritten:)();
  sub_253AF1A80(&qword_269CE22B8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant);
  uint64_t v5 = sub_253B073D0();
  sub_253AF1980();
  return v5;
}

uint64_t sub_253AA0E4C(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoASTPickType(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v7 = a2 & 1;
  if (v7) {
    a1 = 1;
  }
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)uint64_t v6 = a1;
  v6[8] = v7;
  sub_253AF1A80(&qword_269CE33A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTPickType);
  uint64_t v8 = sub_253B073D0();
  sub_253AF1980();
  return v8;
}

uint64_t sub_253AA0F70()
{
  uint64_t v1 = type metadata accessor for AST.FlatValue(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  MEMORY[0x270FA5388](v4);
  sub_253AF1A28(v0, (uint64_t)v3);
  TranscriptProtoASTFlatValue.init(handwritten:)();
  sub_253AF1A80(&qword_269CE2240, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatValue);
  uint64_t v5 = sub_253B073D0();
  sub_253AF1980();
  return v5;
}

uint64_t sub_253AA10E0()
{
  uint64_t v2 = type metadata accessor for Action.ParameterValue(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoActionParameterValue(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoActionParameterValue.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE1BA8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionParameterValue);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253AA1260()
{
  uint64_t v1 = type metadata accessor for TranscriptProtoContextRetrieved(0);
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  uint64_t v4 = (uint64_t *)((char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v28 - v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v7 = MEMORY[0x263F8EE78];
  *uint64_t v4 = MEMORY[0x263F8EE78];
  v4[1] = v7;
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_253A697F0(v8, v9, v10, v11, v12, v13, v14, v15, v28, v29);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_253AF1980();
  }
  else
  {
    *uint64_t v4 = v16;
    uint64_t v17 = swift_bridgeObjectRetain();
    sub_253A697F0(v17, v18, v19, v20, v21, v22, v23, v24, v28, v29);
    uint64_t v26 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4[1] = v26;
    sub_253AF19D0((uint64_t)v4, (uint64_t)v6);
    sub_253AF1A80(&qword_269CE31C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoContextRetrieved);
    uint64_t v1 = sub_253B073D0();
    sub_253AF1980();
  }
  return v1;
}

uint64_t sub_253AA1460()
{
  uint64_t v2 = type metadata accessor for RetrievedContextStatement(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoRetrievedContextStatement(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoRetrievedContextStatement.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE2188, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRetrievedContextStatement);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253AA15E0()
{
  uint64_t v2 = type metadata accessor for DynamicEnumerationEntityStatement(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoDynamicEnumerationEntityStatement.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE2548, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253AA1760()
{
  uint64_t matched = type metadata accessor for TranscriptProtoEntitySpanMatchResult(0);
  MEMORY[0x270FA5388](matched);
  uint64_t v3 = (uint64_t *)((char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_253A6302C(v4, v5, v6, v7, v8, v9, v10, v11, v15[0], (uint64_t (*)(uint64_t))v15[1]);
  if (!v0)
  {
    uint64_t v13 = v12;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *uint64_t v3 = v13;
    sub_253AF1A80(&qword_269CE37A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoEntitySpanMatchResult);
    uint64_t matched = sub_253B073D0();
    sub_253AF1980();
  }
  return matched;
}

uint64_t sub_253AA1888()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for TranscriptProtoToolRetrievalResponse(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v6 = *(_OWORD *)(v2 + 16);
  v8[0] = *(_OWORD *)v2;
  v8[1] = v6;
  v8[2] = *(_OWORD *)(v2 + 32);
  uint64_t v9 = *(void *)(v2 + 48);
  sub_253AF1674(v2);
  TranscriptProtoToolRetrievalResponse.init(handwritten:)((uint64_t)v8, (uint64_t)v5);
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE37C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoToolRetrievalResponse);
    uint64_t v3 = sub_253B073D0();
    sub_253AF1980();
  }
  return v3;
}

uint64_t sub_253AA19C0()
{
  uint64_t v2 = type metadata accessor for ToolParameterValue(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoToolParameterValue(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoToolParameterValue.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE3790, (void (*)(uint64_t))type metadata accessor for TranscriptProtoToolParameterValue);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253AA1B40()
{
  uint64_t v2 = type metadata accessor for ExternalAgentTextQuery(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoExternalAgentTextQuery.init(handwritten:)((uint64_t)v4, v6, v7, v8, v9, v10, v11, v12, v14[0], v14[1]);
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE39C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentTextQuery);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253AA1CC0()
{
  uint64_t v2 = type metadata accessor for ExternalAgentSpeechQuery(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoExternalAgentSpeechQuery.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE39F0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253AA1E40()
{
  uint64_t v2 = type metadata accessor for ExternalAgentOutcome(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoExternalAgentOutcome.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE29A0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentOutcome);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253AA1FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (uint64_t *)((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v8 = a1;
  v8[1] = a2;
  v8[2] = a3;
  sub_253AF1A80(&qword_269CE2790, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  uint64_t v9 = sub_253B073D0();
  sub_253AF1980();
  return v9;
}

uint64_t sub_253AA20F4()
{
  uint64_t v1 = sub_253B055C0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_253B05BB0();
  uint64_t v25 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for TranscriptProtoUndoContext(0);
  MEMORY[0x270FA5388](v26);
  uint64_t v10 = (uint64_t *)((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v0, v5);
  sub_253B05B90();
  uint64_t v11 = sub_253B05570();
  uint64_t v24 = v12;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v13 = sub_253B05B70();
  uint64_t v15 = v14;
  uint64_t v16 = sub_253B05B80();
  uint64_t v18 = v17;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v20 = v24;
  uint64_t v19 = v25;
  *uint64_t v10 = v11;
  v10[1] = v20;
  v10[2] = v13;
  v10[3] = v15;
  v10[4] = v16;
  v10[5] = v18;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  sub_253AF1A80(&qword_269CE2CA8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUndoContext);
  uint64_t v21 = sub_253B073D0();
  sub_253AF1980();
  return v21;
}

uint64_t sub_253AA23A4()
{
  uint64_t v2 = sub_253B05B40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranscriptProtoFollowUpAction(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  TranscriptProtoFollowUpAction.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE2CC0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoFollowUpAction);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253AA255C()
{
  uint64_t v2 = sub_253B05B10();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  TranscriptProtoFollowUpActionExecutableAction.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE2CD8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoFollowUpActionExecutableAction);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253AA2714()
{
  uint64_t v2 = sub_253462A5C(&qword_269CE8688);
  uint64_t v26 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_253B05B00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0);
  MEMORY[0x270FA5388](v24);
  uint64_t v10 = (uint64_t *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v0, v5);
  uint64_t v23 = sub_253B05AF0();
  uint64_t v25 = v11;
  sub_253B05AD0();
  if (qword_269CDB0A0 != -1) {
    swift_once();
  }
  sub_253AEAA78(&qword_269CE8760);
  uint64_t v12 = sub_253B050B0();
  uint64_t v14 = v2;
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v15 = v6 + 8;
    v16(v8, v5);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v2);
  }
  else
  {
    uint64_t v17 = v12;
    uint64_t v18 = v13;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v14);
    uint64_t v19 = sub_253B05AC0();
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    uint64_t v20 = v25;
    *uint64_t v10 = v23;
    v10[1] = v20;
    v10[2] = v17;
    v10[3] = v18;
    v10[4] = v19;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_253AF1A80(&qword_269CE2CF0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction);
    uint64_t v15 = sub_253B073D0();
    sub_253AF1980();
  }
  return v15;
}

uint64_t sub_253AA2A7C()
{
  uint64_t v2 = type metadata accessor for ClientAction.ShimParameterResolution(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoShimParameterResolution(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoShimParameterResolution.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE1CD0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoShimParameterResolution);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253AA2BFC()
{
  uint64_t v2 = type metadata accessor for ClientAction.UnresolvedParameterValue(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoUnresolvedParameterValue.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE2AB0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUnresolvedParameterValue);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

char *sub_253AA2D7C()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_253B06C90();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (void *)((char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, v3);
  uint64_t v11 = MEMORY[0x25A265C80](v10);
  uint64_t v12 = sub_253AC7D1C(v11);
  if (v1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    uint64_t v13 = v12;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *uint64_t v9 = v13;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_253AF1A80(&qword_269CE2D38, (void (*)(uint64_t))type metadata accessor for TranscriptProtoValueDisambiguation);
    uint64_t v6 = (char *)sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253AA2F80()
{
  uint64_t v2 = sub_253B05A80();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranscriptProtoActionFailure(0);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  TranscriptProtoActionFailure.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE2C48, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionFailure);
    uint64_t v6 = sub_253B073D0();
    sub_253AF1980();
  }
  return v6;
}

uint64_t sub_253AA3138(char a1)
{
  uint64_t v2 = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v4 = a1;
  sub_253AF1A80(&qword_269CE32A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
  uint64_t v5 = sub_253B073D0();
  sub_253AF1980();
  return v5;
}

uint64_t sub_253AA3244()
{
  uint64_t v0 = type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation(0);
  MEMORY[0x270FA5388](v0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253AF1A80(&qword_269CE3290, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation);
  uint64_t v1 = sub_253B073D0();
  sub_253AF1980();
  return v1;
}

uint64_t sub_253AA3344()
{
  uint64_t v2 = type metadata accessor for TypeConversionRequest(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoTypeConversionRequest(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoTypeConversionRequest.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE38A0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTypeConversionRequest);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253AA34C4()
{
  uint64_t v2 = type metadata accessor for TypeConversionResult(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoTypeConversionResult(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoTypeConversionResult.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE38B8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTypeConversionResult);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253AA3644()
{
  uint64_t DecorationResult = type metadata accessor for QueryDecorationResult(0);
  MEMORY[0x270FA5388](DecorationResult - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoQueryDecorationResult.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE38D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationResult);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253AA37C4()
{
  uint64_t DecorationPrePlannerResult = type metadata accessor for QueryDecorationPrePlannerResult(0);
  MEMORY[0x270FA5388](DecorationPrePlannerResult - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
  MEMORY[0x270FA5388](v5);
  sub_253AF1A28(v0, (uint64_t)v4);
  TranscriptProtoQueryDecorationPrePlannerResult.init(handwritten:)();
  if (!v1)
  {
    sub_253AF1A80(&qword_269CE38E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
    uint64_t v5 = sub_253B073D0();
    sub_253AF1980();
  }
  return v5;
}

uint64_t sub_253AA3944(uint64_t a1, char a2)
{
  uint64_t DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  MEMORY[0x270FA5388](DecorationPrePlannerResultPayload);
  uint64_t v7 = a1;
  char v8 = a2;
  swift_bridgeObjectRetain();
  TranscriptProtoQueryDecorationPrePlannerResultPayload.init(handwritten:)(&v7);
  if (!v2)
  {
    sub_253AF1A80(&qword_269CE3990, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
    uint64_t DecorationPrePlannerResultPayload = sub_253B073D0();
    sub_253AF1980();
  }
  return DecorationPrePlannerResultPayload;
}

uint64_t sub_253AA3A78()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_253B05A50();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  MEMORY[0x270FA5388](v6);
  char v8 = (void *)((char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *char v8 = sub_253B05A20();
  v8[1] = v9;
  v8[2] = sub_253B05A40();
  _OWORD v8[3] = v10;
  uint64_t v11 = sub_253B05A30();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v8[4] = v11;
  sub_253AF1A80(&qword_269CE2C78, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
  uint64_t v12 = sub_253B073D0();
  sub_253AF1980();
  return v12;
}

void TranscriptHandwrittenBidirectionalConvertibleProtocol.protoBytes()()
{
  sub_2534847F8();
  sub_253465998();
  MEMORY[0x270FA5388](v2);
  sub_2534B34A4();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_253465998();
  sub_253963118();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_253578AC4();
  v6(v5);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(v1, AssociatedTypeWitness, AssociatedConformanceWitness);
  if (!v0)
  {
    sub_2536D3880();
    swift_getAssociatedConformanceWitness();
    sub_2534ACF74();
    _s30IntelligenceFlowPlannerSupport16SearchExpressionV5query24isLowConfidenceKnowledge7pickOne28shouldOpenResultIfApplicableACSS_S3btcfcfA1__0();
    sub_253B073D0();
    sub_253AF31CC();
    sub_2534F85D4();
    v8();
  }
  sub_2534D99FC();
  sub_253A3C6AC();
  sub_2534847C8();
}

uint64_t sub_253AA3E20()
{
  return sub_253A92AA4();
}

uint64_t sub_253AA3E38()
{
  return sub_253A92DDC();
}

uint64_t sub_253AA3E50()
{
  return sub_253A92F94();
}

uint64_t Array<A>.init<A>(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_253462A5C(&qword_26B24A590);
  sub_25394D850();
  if (v3)
  {
    sub_25347B88C();
    sub_2534659CC();
    v7();
  }
  else
  {
    sub_253B09B80();
    swift_getWitnessTable();
    a2 = sub_253B09B90();
    sub_25347B88C();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, a3);
  }
  return a2;
}

uint64_t sub_253AA3FB8()
{
  return sub_253A93114();
}

uint64_t sub_253AA3FD0()
{
  return sub_253A932CC();
}

uint64_t sub_253AA3FE8()
{
  return sub_253A93484();
}

uint64_t sub_253AA4000()
{
  return sub_253A9363C();
}

uint64_t sub_253AA4018()
{
  return sub_253A93830();
}

uint64_t sub_253AA4030()
{
  return sub_253A939E8();
}

uint64_t sub_253AA4048()
{
  return sub_253A93BA0();
}

uint64_t sub_253AA4060()
{
  return sub_253A93ECC();
}

uint64_t sub_253AA4078()
{
  return sub_253A94084();
}

uint64_t sub_253AA409C()
{
  return sub_253A941A0();
}

uint64_t sub_253AA40C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v14 = (char *)&v17 - v13;
  (*(void (**)(char *, uint64_t))(v15 + 16))((char *)&v17 - v13, a1);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a5 + 16))(v14, a3, a5);
  if (v7) {
    *a7 = v7;
  }
  return result;
}

uint64_t Set<>.init(handwritten:)()
{
  swift_getAssociatedTypeWitness();
  sub_253B09B80();
  sub_253462A5C(&qword_26B24A590);
  swift_getWitnessTable();
  sub_253A480D4();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0)
  {
    sub_253B09B80();
    swift_getWitnessTable();
    sub_253AF2634();
    return sub_253B09C70();
  }
  return result;
}

uint64_t sub_253AA433C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v13 = (char *)&v16 - v12;
  (*(void (**)(char *, uint64_t))(v14 + 16))((char *)&v16 - v12, a1);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a4 + 16))(v13, a3, a4);
  if (v6) {
    *a6 = v6;
  }
  return result;
}

uint64_t Dictionary<>.init(handwritten:)()
{
  swift_getAssociatedTypeWitness();
  uint64_t v0 = sub_253B095B0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_253AA4520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v11 = (char *)v14 - v10;
  (*(void (**)(char *, uint64_t))(v12 + 16))((char *)v14 - v10, a1);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(a6 + 16))(v11, a4, a6);
}

BOOL static HandwrittenConversion.Error.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t HandwrittenConversion.Error.hash(into:)()
{
  return sub_253B0A600();
}

uint64_t HandwrittenConversion.Error.hashValue.getter()
{
  return sub_253B0A630();
}

void SpeechRequestCandidate.init(transcript:)()
{
}

uint64_t StatementID.init(transcript:)()
{
  return sub_253AF1980();
}

void sub_253AA4790()
{
}

uint64_t sub_253AA47A8()
{
  return sub_253A942BC();
}

void TranscriptProtoSpeechRequestCandidate.init(handwritten:)()
{
  sub_2534B3258();
  uint64_t v5 = v4;
  uint64_t v7 = sub_253962754(v6);
  type metadata accessor for TranscriptProtoSpeechRequestCandidate(v7);
  sub_2535B3D7C();
  MEMORY[0x270FA5388](v8);
  sub_253AF20A4();
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  sub_25346CC54();
  uint64_t v10 = sub_253462A5C(&qword_26B249528);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  sub_2534966B0();
  uint64_t v12 = v5[1];
  uint64_t v22 = *v5;
  type metadata accessor for SpeechRequestCandidate(0);
  sub_253AF22F0();
  sub_2534AF234();
  v13();
  swift_bridgeObjectRetain();
  int v14 = sub_253B059C0();
  sub_253B059A0();
  uint64_t v15 = sub_253AF2E8C();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v3 = v14;
  *(void *)(v3 + 8) = v12;
  *(void *)(v3 + 16) = v2;
  sub_2534D97B4();
  v16();
  sub_253AF3AF0();
  uint64_t v17 = sub_253AF254C(*(int *)(v1 + 28));
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v17, v18, v19, v15);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v0 = v22;
  v0[1] = v12;
  uint64_t v20 = sub_2534D9A78();
  sub_253961BF0(v20, v21, &qword_26B249528);
  sub_253AF3210();
  sub_253AF1980();
  sub_253465A14();
}

uint64_t TranscriptProtoStatementID.init(handwritten:)()
{
  sub_253AF2664();
  int v1 = sub_253B059C0();
  uint64_t v2 = sub_253B059A0();
  uint64_t v4 = v3;
  type metadata accessor for TranscriptProtoStatementID(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v0 = v1;
  *(void *)(v0 + 8) = v2;
  *(void *)(v0 + 16) = v4;
  sub_253B059D0();
  sub_25346CAF4();
  uint64_t v5 = sub_253A3F4E8();
  return v6(v5);
}

void sub_253AA4A0C()
{
}

void Session.Event.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v96 = v1;
  uint64_t v8 = v7;
  uint64_t v91 = v9;
  uint64_t v10 = sub_253462A5C(&qword_26B2492C8);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  sub_253483628(v12, v79);
  uint64_t v13 = sub_253462A5C(&qword_26B2496F0);
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = sub_253AF1FE8(v15, v79);
  uint64_t v17 = type metadata accessor for TranscriptProtoTimepoint(v16);
  uint64_t v18 = sub_25346CB4C(v17);
  MEMORY[0x270FA5388](v18);
  sub_253AF1C9C(v19, v79);
  uint64_t v20 = type metadata accessor for Timepoint();
  uint64_t v21 = sub_25346CB4C(v20);
  MEMORY[0x270FA5388](v21);
  uint64_t v92 = (char *)&v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_253483660();
  uint64_t v24 = type metadata accessor for TranscriptProtoPayload(v23);
  uint64_t v25 = sub_25346CB4C(v24);
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = sub_253AF1C00(v26, v79);
  uint64_t v28 = type metadata accessor for Session.Event.Payload(v27);
  uint64_t v29 = sub_25346CB4C(v28);
  MEMORY[0x270FA5388](v29);
  uint64_t v30 = sub_253A3DC4C();
  sub_253465998();
  uint64_t v94 = v31;
  MEMORY[0x270FA5388](v32);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v33);
  sub_2535B3D6C();
  uint64_t v34 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v35 = sub_25346CB4C(v34);
  MEMORY[0x270FA5388](v35);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v36);
  sub_25351C770();
  MEMORY[0x270FA5388](v37);
  sub_2536D4C9C();
  sub_253B05560();
  uint64_t v38 = v96;
  sub_25395D974();
  uint64_t v39 = v8;
  sub_253472458(v0, (uint64_t *)&unk_26B248CB0);
  if (!v38)
  {
    uint64_t v40 = v95;
    uint64_t v88 = v4;
    uint64_t v96 = v30;
    sub_253B05560();
    sub_25395D974();
    uint64_t v87 = v2;
    sub_253472458(v3, (uint64_t *)&unk_26B248CB0);
    uint64_t v41 = v39[12];
    uint64_t v86 = v6;
    if (v41)
    {
      sub_253B05560();
    }
    else
    {
      sub_253465A98();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v42, v43, v44, v96);
    }
    uint64_t v45 = (int *)type metadata accessor for TranscriptProtoEvent(0);
    sub_25395E6DC(v40);
    Session.Event.Payload.init(transcript:)(v40, v46, v47, v48, v49, v50, v51, v52, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88, v89,
      v90);
    uint64_t v53 = v39[5];
    uint64_t v95 = v39[4];
    uint64_t v54 = v39[6];
    uint64_t v55 = v39[7];
    uint64_t v56 = v39[9];
    uint64_t v84 = v39[8];
    uint64_t v85 = v54;
    uint64_t v57 = (void *)((char *)v39 + v45[12]);
    uint64_t v58 = v57[1];
    uint64_t v83 = *v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25395E72C(v93);
    uint64_t v79 = v58;
    uint64_t v80 = v55;
    uint64_t v81 = v53;
    uint64_t v82 = v56;
    uint64_t v59 = (uint64_t)v92;
    Timepoint.init(transcript:)();
    uint64_t v60 = v90;
    sub_253961F60((uint64_t)v39 + v45[15], v90, &qword_26B2496F0);
    sub_25395A4E8(v60, v61, v62, v63, v64, v65, v66, v67, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88);
    uint64_t v69 = v68;
    uint64_t v71 = v70;
    sub_253961F60((uint64_t)v39 + v45[16], v89, &qword_26B2492C8);
    sub_25395A67C();
    uint64_t v73 = v72;
    LOBYTE(v60) = v74 & 1;
    uint64_t v75 = swift_bridgeObjectRetain();
    sub_253A8F174(v75);
    uint64_t v77 = v76;
    swift_bridgeObjectRelease();
    uint64_t v78 = sub_253A8E854(v77, &qword_269CE8C90, (void (*)(uint64_t, uint64_t, uint64_t *))sub_253AE6070);
    Session.Event.init(id:sessionId:queryEventId:payload:clientRequestId:clientSessionId:clientApplicationId:clientGroupId:timepoint:sender:postingSpan:initiatedSpans:)(v88, v5, v95, v81, v85, v80, v91, v84, v82, v83, v79, v59, v69, v71, v73, v60, v78);
  }
  sub_253AF1980();
  sub_2534F8A10();
  sub_2534847C8();
}

void Session.Event.Payload.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_2534847F8();
  a19 = v27;
  a20 = v28;
  v479 = v29;
  uint64_t v480 = v21;
  uint64_t v30 = sub_253A3EF6C();
  uint64_t DecorationPrePlannerResult = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(v30);
  uint64_t v32 = sub_25346CB4C(DecorationPrePlannerResult);
  MEMORY[0x270FA5388](v32);
  v488 = (char *)&v433 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v34);
  uint64_t v476 = (uint64_t)&v433 - v35;
  uint64_t v36 = sub_253483660();
  uint64_t DecorationResult = type metadata accessor for TranscriptProtoQueryDecorationResult(v36);
  uint64_t v38 = sub_25346CB4C(DecorationResult);
  MEMORY[0x270FA5388](v38);
  v487 = (char *)&v433 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v40);
  uint64_t v42 = sub_2534F8208((uint64_t)&v433 - v41);
  uint64_t v43 = type metadata accessor for TranscriptProtoTypeConversionResult(v42);
  uint64_t v44 = sub_25346CB4C(v43);
  MEMORY[0x270FA5388](v44);
  sub_2534F823C();
  MEMORY[0x270FA5388](v45);
  uint64_t v47 = sub_2534F8208((uint64_t)&v433 - v46);
  uint64_t v48 = type metadata accessor for TranscriptProtoTypeConversionRequest(v47);
  uint64_t v49 = sub_25346CB4C(v48);
  MEMORY[0x270FA5388](v49);
  v485 = (char *)&v433 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v51);
  uint64_t v53 = sub_2534F8208((uint64_t)&v433 - v52);
  uint64_t v54 = type metadata accessor for TranscriptProtoClientUndoRedoRequest(v53);
  uint64_t v55 = sub_25346CB4C(v54);
  MEMORY[0x270FA5388](v55);
  sub_2534659D8();
  a10 = v56;
  sub_2534B324C();
  MEMORY[0x270FA5388](v57);
  uint64_t v59 = sub_2534F8208((uint64_t)&v433 - v58);
  uint64_t v60 = type metadata accessor for TranscriptProtoUndoRedoRequest(v59);
  uint64_t v61 = sub_25346CB4C(v60);
  MEMORY[0x270FA5388](v61);
  sub_2534F823C();
  MEMORY[0x270FA5388](v62);
  sub_2534B35DC();
  uint64_t v64 = sub_2534F8208(v63);
  uint64_t v65 = type metadata accessor for TranscriptProtoToolResolution(v64);
  uint64_t v66 = sub_25346CB4C(v65);
  MEMORY[0x270FA5388](v66);
  sub_2534F823C();
  MEMORY[0x270FA5388](v67);
  uint64_t v69 = sub_2534F8208((uint64_t)&v433 - v68);
  uint64_t v70 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(v69);
  uint64_t v71 = sub_25346CB4C(v70);
  MEMORY[0x270FA5388](v71);
  sub_2534F823C();
  MEMORY[0x270FA5388](v72);
  uint64_t v486 = (uint64_t)&v433 - v73;
  uint64_t v74 = sub_253483660();
  uint64_t v75 = type metadata accessor for TranscriptProtoExternalAgentOutcome(v74);
  uint64_t v76 = sub_25346CB4C(v75);
  MEMORY[0x270FA5388](v76);
  sub_2534F823C();
  MEMORY[0x270FA5388](v77);
  uint64_t v79 = sub_2534F8208((uint64_t)&v433 - v78);
  uint64_t v80 = type metadata accessor for TranscriptProtoExternalAgentRequest(v79);
  uint64_t v81 = sub_25346CB4C(v80);
  MEMORY[0x270FA5388](v81);
  sub_2534F823C();
  MEMORY[0x270FA5388](v82);
  uint64_t v84 = sub_2534F8208((uint64_t)&v433 - v83);
  uint64_t v85 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(v84);
  uint64_t v86 = sub_25346CB4C(v85);
  MEMORY[0x270FA5388](v86);
  sub_2534F823C();
  MEMORY[0x270FA5388](v87);
  uint64_t v89 = sub_2534F8208((uint64_t)&v433 - v88);
  uint64_t v90 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(v89);
  uint64_t v91 = sub_25346CB4C(v90);
  MEMORY[0x270FA5388](v91);
  sub_2534F823C();
  MEMORY[0x270FA5388](v92);
  uint64_t v94 = sub_2534F8208((uint64_t)&v433 - v93);
  uint64_t v95 = type metadata accessor for TranscriptProtoStatementResult(v94);
  uint64_t v96 = sub_25346CB4C(v95);
  MEMORY[0x270FA5388](v96);
  sub_2534F823C();
  MEMORY[0x270FA5388](v97);
  uint64_t v99 = sub_2534F8208((uint64_t)&v433 - v98);
  uint64_t v100 = type metadata accessor for TranscriptProtoSystemResponse(v99);
  uint64_t v101 = sub_25346CB4C(v100);
  MEMORY[0x270FA5388](v101);
  sub_2534F823C();
  MEMORY[0x270FA5388](v102);
  uint64_t v104 = sub_2534F8208((uint64_t)&v433 - v103);
  uint64_t v105 = type metadata accessor for TranscriptProtoActionCancellation(v104);
  uint64_t v106 = sub_25346CB4C(v105);
  MEMORY[0x270FA5388](v106);
  sub_2534F823C();
  MEMORY[0x270FA5388](v107);
  uint64_t v109 = sub_2534F8208((uint64_t)&v433 - v108);
  uint64_t matched = type metadata accessor for TranscriptProtoEntitySpanMatchResult(v109);
  uint64_t v111 = sub_25346CB4C(matched);
  MEMORY[0x270FA5388](v111);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v112);
  sub_2534B35DC();
  uint64_t v114 = sub_2534F8208(v113);
  uint64_t v115 = type metadata accessor for TranscriptProtoToolRetrievalResponse(v114);
  uint64_t v116 = sub_25346CB4C(v115);
  MEMORY[0x270FA5388](v116);
  sub_2534F823C();
  MEMORY[0x270FA5388](v117);
  v453 = (char *)&v433 - v118;
  uint64_t v119 = type metadata accessor for TranscriptProtoContextRetrieved(0);
  uint64_t v120 = sub_25346CB4C(v119);
  MEMORY[0x270FA5388](v120);
  sub_2534F823C();
  MEMORY[0x270FA5388](v121);
  uint64_t v123 = sub_2534F8208((uint64_t)&v433 - v122);
  uint64_t v124 = type metadata accessor for TranscriptProtoSafetyModeException(v123);
  uint64_t v125 = sub_25346CB4C(v124);
  MEMORY[0x270FA5388](v125);
  sub_2534F823C();
  MEMORY[0x270FA5388](v126);
  uint64_t v484 = (uint64_t)&v433 - v127;
  uint64_t v128 = sub_253483660();
  uint64_t v129 = type metadata accessor for TranscriptProtoClientInitiatedClientAction(v128);
  uint64_t v130 = sub_25346CB4C(v129);
  MEMORY[0x270FA5388](v130);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v131);
  uint64_t v133 = sub_2534F8208((uint64_t)&v433 - v132);
  uint64_t v134 = type metadata accessor for TranscriptProtoResponseGenerationRequest(v133);
  uint64_t v135 = sub_25346CB4C(v134);
  MEMORY[0x270FA5388](v135);
  sub_2534F823C();
  MEMORY[0x270FA5388](v136);
  uint64_t v138 = sub_2534F8208((uint64_t)&v433 - v137);
  uint64_t v139 = type metadata accessor for TranscriptProtoActionResolverRequest(v138);
  uint64_t v140 = sub_25346CB4C(v139);
  MEMORY[0x270FA5388](v140);
  sub_2534F823C();
  MEMORY[0x270FA5388](v141);
  uint64_t v143 = sub_2534F8208((uint64_t)&v433 - v142);
  uint64_t v144 = type metadata accessor for TranscriptProtoActionResponse(v143);
  uint64_t v145 = sub_25346CB4C(v144);
  MEMORY[0x270FA5388](v145);
  sub_2534F823C();
  MEMORY[0x270FA5388](v146);
  sub_2534B35DC();
  uint64_t v148 = sub_2534F8208(v147);
  Stepuint64_t Results = type metadata accessor for TranscriptProtoQueryStepResults(v148);
  uint64_t v150 = sub_25346CB4C(StepResults);
  MEMORY[0x270FA5388](v150);
  sub_2534F823C();
  MEMORY[0x270FA5388](v151);
  uint64_t v153 = sub_2534F8208((uint64_t)&v433 - v152);
  uint64_t v154 = type metadata accessor for TranscriptProtoActionStepResult(v153);
  uint64_t v155 = sub_25346CB4C(v154);
  MEMORY[0x270FA5388](v155);
  sub_2534F823C();
  MEMORY[0x270FA5388](v156);
  uint64_t v158 = sub_2534F8208((uint64_t)&v433 - v157);
  uint64_t v159 = type metadata accessor for TranscriptProtoSystemPromptResolution(v158);
  uint64_t v160 = sub_25346CB4C(v159);
  MEMORY[0x270FA5388](v160);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v161);
  sub_2534B35DC();
  uint64_t v163 = sub_2534F8208(v162);
  uint64_t v446 = type metadata accessor for TranscriptProtoClientCustom(v163);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v164);
  v483 = (uint64_t *)((char *)&v433 - ((v165 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v166 = sub_253483660();
  uint64_t v167 = type metadata accessor for TranscriptProtoSessionError(v166);
  uint64_t v168 = sub_25346CB4C(v167);
  MEMORY[0x270FA5388](v168);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v169);
  v445 = (char *)&v433 - v170;
  uint64_t v444 = type metadata accessor for TranscriptProtoVariableStep(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v171);
  sub_2534F823C();
  MEMORY[0x270FA5388](v172);
  uint64_t v174 = sub_2534F8208((uint64_t)&v433 - v173);
  uint64_t Step = type metadata accessor for TranscriptProtoQueryStep(v174);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v175);
  sub_2534F823C();
  MEMORY[0x270FA5388](v176);
  uint64_t v178 = sub_2534F8208((uint64_t)&v433 - v177);
  uint64_t v179 = type metadata accessor for TranscriptProtoClientAction(v178);
  uint64_t v180 = sub_25346CB4C(v179);
  MEMORY[0x270FA5388](v180);
  sub_2534F823C();
  MEMORY[0x270FA5388](v181);
  uint64_t v183 = sub_2534F8208((uint64_t)&v433 - v182);
  uint64_t v184 = type metadata accessor for TranscriptProtoAction(v183);
  uint64_t v185 = sub_25346CB4C(v184);
  MEMORY[0x270FA5388](v185);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v186);
  sub_2534B35DC();
  uint64_t v188 = sub_2534F8208(v187);
  uint64_t v189 = type metadata accessor for TranscriptProtoRecoverableError(v188);
  uint64_t v190 = sub_25346CB4C(v189);
  MEMORY[0x270FA5388](v190);
  sub_2534F823C();
  MEMORY[0x270FA5388](v191);
  v481 = (char *)&v433 - v192;
  uint64_t v193 = sub_253483660();
  uint64_t v194 = type metadata accessor for TranscriptProtoPlan(v193);
  uint64_t v195 = sub_25346CB4C(v194);
  MEMORY[0x270FA5388](v195);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v196);
  sub_2534B35DC();
  uint64_t v198 = sub_2534F8208(v197);
  uint64_t v199 = type metadata accessor for TranscriptProtoRequest(v198);
  uint64_t v200 = sub_25346CB4C(v199);
  MEMORY[0x270FA5388](v200);
  v482 = (char *)&v433 - ((v201 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v202);
  sub_2534B35DC();
  uint64_t v204 = sub_2534F8208(v203);
  uint64_t v205 = type metadata accessor for TranscriptProtoSpeechQuery(v204);
  uint64_t v206 = sub_25346CB4C(v205);
  MEMORY[0x270FA5388](v206);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v207);
  sub_2534B35DC();
  uint64_t v442 = v208;
  uint64_t v209 = type metadata accessor for TranscriptProtoStatementID(0);
  uint64_t v210 = sub_25346CB4C(v209);
  MEMORY[0x270FA5388](v210);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v211);
  sub_2534F823C();
  MEMORY[0x270FA5388](v212);
  sub_2534B35DC();
  uint64_t v438 = v213;
  sub_253AF1D50();
  sub_253465998();
  uint64_t v477 = v214;
  uint64_t v478 = v215;
  MEMORY[0x270FA5388](v214);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v216);
  sub_2534F823C();
  MEMORY[0x270FA5388](v217);
  sub_2534B35DC();
  uint64_t v219 = sub_2534F8208(v218);
  uint64_t v437 = type metadata accessor for TranscriptProtoTextQuery(v219);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v220);
  sub_25353CE24();
  MEMORY[0x270FA5388](v221);
  uint64_t v222 = sub_2534DA41C();
  uint64_t v223 = type metadata accessor for TranscriptProtoSessionStart(v222);
  uint64_t v224 = sub_25346CB4C(v223);
  MEMORY[0x270FA5388](v224);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v225);
  sub_2534D9EC0();
  uint64_t v226 = sub_253462A5C(&qword_26B2494F8);
  uint64_t v227 = sub_25346CB4C(v226);
  MEMORY[0x270FA5388](v227);
  uint64_t v228 = sub_2534D9C00();
  uint64_t v229 = type metadata accessor for TranscriptProtoPayloadEnum(v228);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v230);
  sub_25347FAAC();
  uint64_t v231 = sub_2539627B8();
  sub_253961F60(v231, v232, &qword_26B2494F8);
  sub_2534D8B48(v23, 1, v229);
  if (v233)
  {
    sub_253472458(v23, &qword_26B2494F8);
    *(void *)&long long v489 = v229;
    sub_253462A5C(&qword_269CE86A8);
    sub_253B09730();
    sub_25396263C();
    uint64_t v234 = sub_2534D969C();
    *uint64_t v235 = v229;
    v235[1] = (uint64_t)v20;
    sub_253962224(v234, (uint64_t)v235);
LABEL_81:
    sub_253AF1980();
  }
  else
  {
    uint64_t v433 = v25;
    v434 = v20;
    uint64_t v435 = v22;
    uint64_t v236 = (uint64_t)v481;
    uint64_t v237 = v485;
    uint64_t v239 = (uint64_t)v487;
    uint64_t v238 = v488;
    uint64_t v436 = v24;
    sub_253AF19D0(v23, (uint64_t)v26);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v241 = (uint64_t)v238;
    uint64_t v242 = (uint64_t)v237;
    uint64_t v243 = a10;
    uint64_t v244 = (uint64_t)v482;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        sub_253AF3740((uint64_t)v26, (uint64_t)v449);
        sub_253AF30AC((uint64_t)v26, (uint64_t)&v448);
        uint64_t v246 = *(void *)v239;
        uint64_t v245 = *(void *)(v239 + 8);
        char v247 = *(unsigned char *)(v239 + 16);
        uint64_t v248 = v437;
        swift_bridgeObjectRetain();
        sub_253578C34();
        uint64_t v249 = v480;
        sub_25395E074(v250);
        if (v249)
        {
          sub_253AF1980();
          swift_bridgeObjectRelease();
          sub_253AF1BB0();
          goto LABEL_81;
        }
        swift_bridgeObjectRetain();
        a10 = v246;
        sub_253AF2A38();
        sub_253AF1980();
        uint64_t v381 = (uint64_t *)(v239 + *(int *)(v248 + 28));
        uint64_t v383 = *v381;
        uint64_t v382 = v381[1];
        swift_bridgeObjectRetain();
        sub_253AF1980();
        uint64_t v384 = type metadata accessor for TextQuery(0);
        uint64_t v385 = v479;
        uint64_t v386 = (uint64_t *)((char *)v479 + *(int *)(v384 + 28));
        uint64_t *v479 = a10;
        v385[1] = v245;
        *((unsigned char *)v385 + 16) = v247;
        sub_2534D8E14();
        v387();
        *uint64_t v386 = v383;
        v386[1] = v382;
        sub_253AF1BB0();
        sub_253AF1980();
        type metadata accessor for Session.Event.Payload(0);
        goto LABEL_84;
      case 2:
        uint64_t v251 = v442;
        sub_253AF19D0((uint64_t)v26, v442);
        uint64_t v252 = v441;
        sub_253AF1A28(v251, v441);
        uint64_t v253 = swift_bridgeObjectRetain();
        uint64_t v254 = v480;
        sub_253951DEC(v253, v255, v256, v257, v258, v259, v260, v261, v433, v434);
        if (v254) {
          goto LABEL_10;
        }
        uint64_t v388 = v262;
        char v389 = *(unsigned char *)(v252 + 8);
        uint64_t v391 = *(void *)(v252 + 16);
        uint64_t v390 = *(void *)(v252 + 24);
        swift_bridgeObjectRetain();
        sub_253AF1980();
        sub_253AF1BB0();
        sub_2536D3880();
        sub_253AF1980();
        v392 = v479;
        uint64_t *v479 = v388;
        *((unsigned char *)v392 + 8) = v389;
        v392[2] = v391;
        v392[3] = v390;
        type metadata accessor for Session.Event.Payload(0);
        sub_253AF2628();
        goto LABEL_84;
      case 3:
        sub_253AF1D38((uint64_t)v26, (uint64_t)&v451);
        sub_253AF1A28(v236, v244);
        sub_253AF2B2C();
        Request.init(transcript:)();
        if (v21) {
          goto LABEL_80;
        }
        goto LABEL_96;
      case 4:
        sub_253AF1DC0((uint64_t)v26, (uint64_t)&v453);
        sub_253AF1E8C(v239, (uint64_t)&v452);
        v263 = (uint64_t *)sub_253AF30D4();
        Session.Plan.init(transcript:)(v263, v264);
        if (v21) {
          goto LABEL_80;
        }
        sub_253AF1BB0();
        sub_253AF1980();
        uint64_t v393 = *(void *)v490;
        char v394 = v492[0];
        v395 = v479;
        *(_OWORD *)v479 = v489;
        v395[2] = v393;
        *(_OWORD *)(v395 + 3) = *(_OWORD *)&v490[8];
        *(_OWORD *)(v395 + 5) = v491;
        *((unsigned char *)v395 + 56) = v394;
        type metadata accessor for Session.Event.Payload(0);
        goto LABEL_84;
      case 5:
        sub_253AF1D38((uint64_t)v26, (uint64_t)&v456);
        sub_253AF1D68(v236, (uint64_t)&v455);
        sub_253AF1CBC();
        Action.init(transcript:)();
        if (v21) {
          goto LABEL_80;
        }
        sub_253AF1BB0();
        sub_253AF1980();
        type metadata accessor for Session.Event.Payload(0);
        goto LABEL_84;
      case 6:
        sub_253AF1D38((uint64_t)v26, (uint64_t)&v458);
        sub_253AF1D68(v236, (uint64_t)&v457);
        sub_253AF1CBC();
        ClientAction.init(transcript:)();
        if (v21) {
          goto LABEL_80;
        }
        sub_253AF1BB0();
        sub_253AF1980();
        type metadata accessor for Session.Event.Payload(0);
        sub_253AF34D4();
        goto LABEL_84;
      case 7:
        sub_253AF245C((uint64_t)v26, (uint64_t)&v464);
        sub_253AF1D68(v242, (uint64_t)&v460);
        sub_253AF282C();
        uint64_t v265 = v480;
        sub_25395E074(v439);
        if (v265) {
          goto LABEL_49;
        }
        swift_bridgeObjectRetain();
        sub_253AF1F34();
        sub_253AF1980();
        uint64_t v396 = swift_bridgeObjectRetain();
        sub_253955854(v396, v397, v398, v399, v400, v401, v402, v403, v433, (uint64_t)v434);
        sub_253AF2B38();
        uint64_t v423 = v422;
        sub_253AF1980();
        v424 = v479;
        sub_2534D8E14();
        v425();
        *(uint64_t *)((char *)v424 + *(int *)(type metadata accessor for QueryStep(0) + 20)) = v423;
        sub_253AF1980();
        sub_253AF2640();
        type metadata accessor for Session.Event.Payload(0);
        sub_253AF2628();
        goto LABEL_84;
      case 8:
        sub_253AF245C((uint64_t)v26, (uint64_t)&v467);
        sub_253AF1D68(v242, (uint64_t)&v462);
        sub_253AF282C();
        uint64_t v266 = v480;
        sub_25395E074(v440);
        if (v266) {
          goto LABEL_49;
        }
        swift_bridgeObjectRetain();
        sub_253AF1F34();
        sub_253AF1980();
        swift_bridgeObjectRetain();
        sub_2539529D8();
        sub_253AF2B38();
        uint64_t v427 = v426;
        sub_253AF1980();
        v428 = v479;
        sub_2534D8E14();
        v429();
        *(uint64_t *)((char *)v428 + *(int *)(type metadata accessor for VariableStep(0) + 20)) = v427;
        sub_253AF1980();
        sub_253AF2640();
        type metadata accessor for Session.Event.Payload(0);
        sub_253AF2628();
        goto LABEL_84;
      case 9:
        sub_253AF1BB0();
        uint64_t v267 = v26[1];
        uint64_t v268 = v479;
        uint64_t *v479 = *v26;
        v268[1] = v267;
        type metadata accessor for Session.Event.Payload(0);
        goto LABEL_84;
      case 10:
        sub_253AF1D38((uint64_t)v26, (uint64_t)&v461);
        sub_253AF1D68(v236, (uint64_t)&v459);
        sub_253AF1CBC();
        SessionError.init(transcript:)();
        if (v21) {
          goto LABEL_80;
        }
        goto LABEL_96;
      case 11:
        sub_253AF19D0((uint64_t)v26, v236);
        sub_253AF1E8C(v236, (uint64_t)&v454);
        uint64_t v269 = sub_253AF30D4();
        Session.RecoverableError.init(transcript:)(v269, v270, v271, v272, v273, v274, v275, v276, v433, v434);
        if (v21) {
          goto LABEL_80;
        }
        sub_253AF1BB0();
        sub_253AF1980();
        long long v404 = *(_OWORD *)v490;
        uint64_t v405 = *(void *)&v490[16];
        uint64_t v406 = v491;
        v407 = v479;
        *(_OWORD *)v479 = v489;
        *((_OWORD *)v407 + 1) = v404;
        v407[4] = v405;
        v407[5] = v406;
        type metadata accessor for Session.Event.Payload(0);
        sub_2539446BC();
        goto LABEL_84;
      case 12:
        uint64_t v277 = v483;
        sub_253AF19D0((uint64_t)v26, (uint64_t)v483);
        uint64_t v278 = *v277;
        uint64_t v279 = v277[1];
        uint64_t v280 = v277[2];
        uint64_t v281 = v277[3];
        uint64_t v282 = sub_2534D9AA0();
        sub_25348A9C8(v282, v283);
        uint64_t v284 = sub_253578E40();
        sub_25348A9C8(v284, v285);
        sub_253AF1A80(&qword_269CE2AC8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoClientCustom);
        uint64_t v286 = sub_253B073E0();
        uint64_t v288 = v287;
        sub_253AF1BB0();
        sub_253AF1980();
        uint64_t v289 = v479;
        uint64_t *v479 = v278;
        v289[1] = v279;
        v289[2] = v280;
        v289[3] = v281;
        v289[4] = v286;
        v289[5] = v288;
        type metadata accessor for Session.Event.Payload(0);
        goto LABEL_84;
      case 13:
        sub_253AF1D38((uint64_t)v26, (uint64_t)&v465);
        sub_253AF1D68(v236, (uint64_t)&v463);
        sub_253AF1CBC();
        RequestContent.SystemPromptResolution.init(transcript:)();
        if (v21) {
          goto LABEL_80;
        }
        goto LABEL_96;
      case 14:
        sub_253AF1D38((uint64_t)v26, (uint64_t)&v468);
        sub_253AF1D68(v236, (uint64_t)&v466);
        sub_253AF1CBC();
        ActionStepResult.init(transcript:)();
        if (v21) {
          goto LABEL_80;
        }
        goto LABEL_96;
      case 15:
        sub_253AF1D38((uint64_t)v26, (uint64_t)&v470);
        sub_253AF1D68(v236, (uint64_t)&v469);
        uint64_t v290 = sub_253AF1CBC();
        QueryStepResults.init(transcript:)(v290, v291, v292, v293, v294, v295, v296, v297, v433, v434);
        if (v21) {
          goto LABEL_80;
        }
        goto LABEL_96;
      case 16:
        sub_253AF1D38((uint64_t)v26, (uint64_t)&v472);
        sub_253AF1D68(v236, (uint64_t)&v471);
        sub_253AF1CBC();
        ActionResponse.init(transcript:)();
        if (v21) {
          goto LABEL_80;
        }
        goto LABEL_96;
      case 17:
        sub_253AF1D38((uint64_t)v26, (uint64_t)&v474);
        sub_253AF1D68(v236, (uint64_t)&v473);
        sub_253AF1CBC();
        ActionResolverRequest.init(transcript:)();
        if (v21) {
          goto LABEL_80;
        }
        goto LABEL_96;
      case 18:
        sub_253AF245C((uint64_t)v26, (uint64_t)&v477);
        sub_253AF35E0(v242, (uint64_t)&v476);
        swift_bridgeObjectRetain();
        uint64_t v298 = swift_bridgeObjectRetain();
        uint64_t v299 = v480;
        sub_253AE8864(v298, v300, v301, v302, v303, v304, v305, v306, v433, (uint64_t)v434);
        if (v299)
        {
          swift_bridgeObjectRelease();
          sub_253AF1980();
          swift_bridgeObjectRelease();
          sub_253AF1BB0();
          goto LABEL_81;
        }
        swift_bridgeObjectRelease();
        sub_253AF1980();
        sub_253AF1BB0();
        sub_253AF38FC();
        sub_253AF37B0();
        sub_253AF2628();
        goto LABEL_84;
      case 19:
      case 20:
        sub_253AF1980();
        sub_253AF1BB0();
        sub_253AF37DC();
        sub_2539446BC();
        goto LABEL_84;
      case 21:
      case 41:
        sub_253AF1980();
        sub_253AF1BB0();
        type metadata accessor for Session.Event.Payload(0);
        sub_253AF34C8();
        goto LABEL_84;
      case 22:
        uint64_t v307 = v484;
        sub_253AF19D0((uint64_t)v26, v484);
        uint64_t v308 = v450;
        sub_253AF1A28(v307, (uint64_t)v450);
        uint64_t v310 = *v308;
        uint64_t v309 = v308[1];
        swift_bridgeObjectRetain();
        sub_253AF1980();
        sub_253AF1BB0();
        sub_253AF3BB0();
        uint64_t v311 = v479;
        uint64_t *v479 = v310;
        v311[1] = v309;
        type metadata accessor for Session.Event.Payload(0);
        sub_253A3F4E8();
        goto LABEL_84;
      case 23:
        sub_253AF3740((uint64_t)v26, (uint64_t)&v475);
        sub_253AF1A28((uint64_t)v26, v449[7]);
        uint64_t v312 = swift_bridgeObjectRetain();
        uint64_t v313 = v480;
        sub_2539551EC(v312, v314, v315, v316, v317, v318, v319, v320, v433, v434);
        if (v313) {
          goto LABEL_10;
        }
        goto LABEL_101;
      case 24:
        sub_253AF3740((uint64_t)v26, (uint64_t)&v484);
        sub_253AF1A28((uint64_t)v26, v454);
        uint64_t v322 = swift_bridgeObjectRetain();
        uint64_t v323 = v480;
        sub_2539507F4(v322, v324, v325, v326, v327, v328, v329, v330, v433, v434);
        if (v323)
        {
LABEL_10:
          sub_253AF1980();
          sub_253AF1BB0();
          goto LABEL_81;
        }
LABEL_101:
        uint64_t v408 = v321;
        sub_253AF1980();
        sub_253AF1BB0();
        sub_253AF39D8();
        uint64_t *v479 = v408;
        type metadata accessor for Session.Event.Payload(0);
        sub_253A3F4E8();
        goto LABEL_84;
      case 25:
        sub_253AF245C((uint64_t)v26, (uint64_t)&v483);
        sub_253AF35E0(v242, (uint64_t)&v479);
        uint64_t v331 = swift_bridgeObjectRetain();
        uint64_t v332 = v480;
        sub_2539542B0(v331, v333, v334, v335, v336, v337, v338, v339, v433, v434);
        if (v332)
        {
LABEL_49:
          sub_253AF1980();
          sub_253AF2B38();
          sub_253AF1980();
          goto LABEL_81;
        }
        uint64_t v409 = v340;
        uint64_t v410 = swift_bridgeObjectRetain();
        sub_2539542B0(v410, v411, v412, v413, v414, v415, v416, v417, v433, v434);
        sub_253AF2B38();
        uint64_t v431 = v430;
        sub_253AF1980();
        sub_253AF1980();
        sub_253AF38FC();
        v432 = v479;
        uint64_t *v479 = v409;
        v432[1] = v431;
        type metadata accessor for Session.Event.Payload(0);
        sub_253AF2628();
        goto LABEL_84;
      case 26:
        sub_253AF1D38((uint64_t)v26, (uint64_t)&v485);
        sub_253AF1D68(v236, (uint64_t)&v482);
        sub_253AF1CBC();
        ActionCancellation.init(transcript:)();
        if (v21) {
          goto LABEL_80;
        }
        goto LABEL_96;
      case 27:
        sub_253AF1DC0((uint64_t)v26, (uint64_t)&v480);
        sub_253AF1E8C(v239, (uint64_t)&v478);
        uint64_t v341 = (uint64_t *)sub_253AF30D4();
        ToolRetrievalResponse.init(transcript:)(v341, v342);
        if (v21) {
          goto LABEL_80;
        }
        sub_253AF1BB0();
        sub_253AF1980();
        uint64_t v418 = *(void *)v490;
        uint64_t v419 = *(void *)&v490[8];
        int v420 = *(_DWORD *)&v490[16];
        v421 = v479;
        *(_OWORD *)v479 = v489;
        v421[2] = v418;
        v421[3] = v419;
        *((_DWORD *)v421 + 8) = v420;
        *(_OWORD *)(v421 + 5) = v491;
        type metadata accessor for Session.Event.Payload(0);
        sub_2539446BC();
        goto LABEL_84;
      case 28:
        sub_253AF1D38((uint64_t)v26, (uint64_t)&v487);
        sub_253AF1D68(v236, (uint64_t)&v486);
        uint64_t v343 = sub_253AF1CBC();
        SystemResponse.init(transcript:)(v343);
        if (v21) {
          goto LABEL_80;
        }
        goto LABEL_96;
      case 29:
        sub_253AF1D38((uint64_t)v26, (uint64_t)&v489);
        sub_253AF1D68(v236, (uint64_t)&v488);
        sub_253AF1CBC();
        StatementResult.init(transcript:)();
        if (v21) {
          goto LABEL_80;
        }
        goto LABEL_96;
      case 30:
        sub_253AF1D38((uint64_t)v26, (uint64_t)v490);
        sub_253AF1D68(v236, (uint64_t)&v489 + 8);
        uint64_t v344 = sub_253AF1CBC();
        ExternalAgentTextQuery.init(transcript:)(v344, v345, v346, v347, v348, v349, v350, v351, v433, (uint64_t)v434);
        if (v21) {
          goto LABEL_80;
        }
        goto LABEL_96;
      case 31:
        sub_253AF1D38((uint64_t)v26, (uint64_t)&v490[16]);
        sub_253AF1D68(v236, (uint64_t)&v490[8]);
        sub_253AF1CBC();
        ExternalAgentSpeechQuery.init(transcript:)();
        if (v21) {
          goto LABEL_80;
        }
        goto LABEL_96;
      case 32:
        sub_253AF1D38((uint64_t)v26, (uint64_t)&v491 + 8);
        sub_253AF1D68(v236, (uint64_t)&v491);
        uint64_t v352 = sub_253AF1CBC();
        ExternalAgentRequest.init(transcript:)(v352, v353, v354, v355, v356, v357, v358, v359, v433, (uint64_t)v434);
        if (v21) {
          goto LABEL_80;
        }
        goto LABEL_96;
      case 33:
        sub_253AF1D38((uint64_t)v26, (uint64_t)&v493);
        sub_253AF1D68(v236, (uint64_t)v492);
        uint64_t v360 = sub_253AF1CBC();
        ExternalAgentOutcome.init(transcript:)(v360);
        if (v21) {
          goto LABEL_80;
        }
        goto LABEL_96;
      case 34:
        uint64_t v361 = v486;
        sub_253AF19D0((uint64_t)v26, v486);
        sub_253AF35E0(v361, (uint64_t)&a9);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_253AF1980();
        sub_253AF1BB0();
        sub_253AF38FC();
        sub_253AF37B0();
        sub_253AF2628();
        goto LABEL_84;
      case 35:
        sub_253AF1D38((uint64_t)v26, (uint64_t)&a11);
        sub_253AF1D68(v236, (uint64_t)&a10);
        sub_253AF1CBC();
        ToolResolution.init(transcript:)();
        if (v21) {
          goto LABEL_80;
        }
        goto LABEL_96;
      case 36:
        sub_253AF1D38((uint64_t)v26, (uint64_t)&a13);
        sub_253AF1D68(v236, (uint64_t)&a12);
        uint64_t v362 = sub_253AF1CBC();
        UndoRedoRequest.init(transcript:)(v362, v363, v364, v365, v366, v367, v368, v369, v433, (uint64_t)v434);
        if (v21) {
          goto LABEL_80;
        }
        goto LABEL_96;
      case 37:
        sub_253AF1D38((uint64_t)v26, (uint64_t)&a14);
        sub_253AF1A28(v236, v243);
        sub_253AF2B2C();
        ClientUndoRedoRequest.init(transcript:)();
        if (v21) {
          goto LABEL_80;
        }
        goto LABEL_96;
      case 38:
        sub_253AF1D38((uint64_t)v26, (uint64_t)&a15);
        uint64_t v370 = sub_253578828();
        sub_253AF1A28(v370, v371);
        sub_253AF2B2C();
        TypeConversionRequest.init(transcript:)();
        if (v21) {
          goto LABEL_80;
        }
        goto LABEL_96;
      case 39:
        sub_253AF1D38((uint64_t)v26, (uint64_t)&a17);
        sub_253AF1D68(v236, (uint64_t)&a16);
        sub_253AF1CBC();
        TypeConversionResult.init(transcript:)();
        if (v21) {
          goto LABEL_80;
        }
        goto LABEL_96;
      case 40:
        sub_253AF1D38((uint64_t)v26, (uint64_t)&a18);
        sub_253AF1A28(v236, v239);
        sub_253AF2B2C();
        QueryDecorationResult.init(transcript:)();
        if (v21) {
          goto LABEL_80;
        }
        goto LABEL_96;
      case 42:
        sub_253AF19D0((uint64_t)v26, v476);
        uint64_t v372 = sub_253578EEC();
        sub_253AF1A28(v372, v373);
        sub_253AF2B2C();
        QueryDecorationPrePlannerResult.init(transcript:)(v241, v374, v375, v376, v377, v378, v379, v380, v433, (uint64_t)v434);
        if (v21) {
          goto LABEL_80;
        }
LABEL_96:
        sub_253AF1BB0();
        sub_253AF1980();
        type metadata accessor for Session.Event.Payload(0);
        sub_2539446BC();
        goto LABEL_84;
      case 43:
      case 44:
      case 45:
        sub_253AF1BB0();
        type metadata accessor for Session.Event.Payload(0);
        sub_253AF34C8();
        goto LABEL_84;
      default:
        sub_253AF1D38((uint64_t)v26, (uint64_t)&v447);
        sub_253AF1A28(v236, v239);
        sub_253AF2B2C();
        SessionStart.init(transcript:)();
        if (v21)
        {
LABEL_80:
          sub_253AF1BB0();
          goto LABEL_81;
        }
        sub_253AF1BB0();
        sub_253AF1980();
        type metadata accessor for Session.Event.Payload(0);
        sub_253971D44();
LABEL_84:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  sub_2534F856C();
  sub_2534847C8();
}

void Timepoint.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  sub_253AF25F0(v4);
  sub_253B055C0();
  sub_253465998();
  MEMORY[0x270FA5388](v5);
  sub_2534988A8(v6, v18);
  uint64_t v7 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_25349888C();
  sub_253B05550();
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  sub_2534D9B74();
  sub_253B07100();
  sub_253465998();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_2534D9C00();
  type metadata accessor for TranscriptProtoTimepoint(v11);
  sub_25395E650();
  if (!v0)
  {
    sub_253B070E0();
    sub_2534D91A0();
    v12();
    uint64_t v14 = *v3;
    uint64_t v13 = v3[1];
    sub_253B05560();
    sub_25395D974();
    sub_253472458(v1, (uint64_t *)&unk_26B248CB0);
    sub_253AF30A0();
    sub_2535793C0();
    sub_2534D8E14();
    v15();
    uint64_t v16 = type metadata accessor for Timepoint();
    *(void *)(v19 + *(int *)(v16 + 20)) = v14;
    *(void *)(v19 + *(int *)(v16 + 24)) = v13;
    sub_253AF3920();
    v17();
  }
  sub_253AF1980();
  sub_2536D4C48();
  sub_2534847C8();
}

void sub_253AA877C()
{
}

uint64_t sub_253AA8794()
{
  return sub_253A9464C();
}

void Session.Transcript.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v5 = v4;
  uint64_t v7 = sub_253AF2BE8(v6);
  uint64_t v8 = type metadata accessor for TranscriptProtoEvent(v7);
  uint64_t v9 = sub_25346CB34(v8);
  MEMORY[0x270FA5388](v9);
  sub_2534D8CE4();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_253A74194();
  uint64_t v12 = type metadata accessor for Session.Event(v11);
  uint64_t v13 = sub_25346CB34(v12);
  MEMORY[0x270FA5388](v13);
  sub_2534AF2D8();
  sub_253B055C0();
  sub_253465998();
  MEMORY[0x270FA5388](v14);
  sub_253465A3C();
  uint64_t v15 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v16 = sub_25346CB4C(v15);
  MEMORY[0x270FA5388](v16);
  sub_25346CC54();
  sub_253B05560();
  sub_25395D974();
  sub_253472458(v0, (uint64_t *)&unk_26B248CB0);
  if (!v1)
  {
    uint64_t v17 = v5[2];
    uint64_t v18 = *(void *)(v17 + 16);
    uint64_t v35 = *v5;
    if (v18)
    {
      uint64_t v38 = MEMORY[0x263F8EE78];
      uint64_t v34 = v5[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_253AF36BC();
      sub_2539E8588();
      sub_2535786F4();
      uint64_t v20 = v17 + v19;
      uint64_t v37 = *(void *)(v21 + 72);
      do
      {
        sub_253AF1A28(v20, v3);
        uint64_t v22 = sub_253AF3194();
        sub_253AF1A28(v22, v23);
        sub_253AF2770();
        Session.Event.init(transcript:)();
        sub_253AF1980();
        if ((sub_2539621FC() & 1) == 0)
        {
          sub_253A3E764();
          sub_2539E8588();
          uint64_t v0 = v38;
        }
        unint64_t v25 = *(void *)(v0 + 16);
        unint64_t v24 = *(void *)(v0 + 24);
        if (v25 >= v24 >> 1)
        {
          sub_253A7363C(v24);
          sub_2539E8588();
          uint64_t v0 = v38;
        }
        *(void *)(v0 + 16) = v25 + 1;
        sub_253962314();
        sub_253AF19D0(v2, v26 + v27 * v25);
        v20 += v37;
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease();
      uint64_t v28 = v34;
    }
    else
    {
      uint64_t v28 = v5[1];
      swift_bridgeObjectRetain();
      uint64_t v0 = MEMORY[0x263F8EE78];
    }
    sub_2534D8E14();
    v29();
    uint64_t v30 = (int *)type metadata accessor for Session.Transcript(0);
    uint64_t v31 = (void *)(v36 + v30[5]);
    *uint64_t v31 = v35;
    v31[1] = v28;
    uint64_t v32 = (void *)(v36 + v30[6]);
    *uint64_t v32 = 0;
    v32[1] = 0xE000000000000000;
    uint64_t v33 = (void *)(v36 + v30[7]);
    *uint64_t v33 = 0;
    v33[1] = 0;
    *(void *)(v36 + v30[8]) = v0;
  }
  sub_253AF1980();
  sub_253A3C6AC();
  sub_2534847C8();
}

void sub_253AA8B28()
{
}

uint64_t sub_253AA8B40()
{
  return sub_253A947CC();
}

void TranscriptProtoTranscript.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v4 = v0;
  uint64_t v6 = sub_253AF2ED4(v5);
  uint64_t v7 = type metadata accessor for Session.Event(v6);
  uint64_t v8 = sub_25346CB34(v7);
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v44 = (uint64_t)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_2534DA430();
  uint64_t v14 = type metadata accessor for TranscriptProtoEvent(v13);
  uint64_t v15 = sub_25346CB34(v14);
  MEMORY[0x270FA5388](v15);
  sub_25346CC6C();
  uint64_t v16 = sub_253B05570();
  uint64_t v18 = v17;
  uint64_t v19 = type metadata accessor for Session.Transcript(0);
  uint64_t v20 = (uint64_t *)(v1 + *(int *)(v19 + 20));
  uint64_t v21 = v20[1];
  uint64_t v22 = *(void *)(v1 + *(int *)(v19 + 32));
  uint64_t v23 = *(void *)(v22 + 16);
  uint64_t v41 = *v20;
  uint64_t v42 = v18;
  if (v23)
  {
    uint64_t v36 = v16;
    uint64_t v39 = v1;
    uint64_t v45 = (uint64_t (*)(uint64_t))MEMORY[0x263F8EE78];
    uint64_t v38 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_253AF2208();
    sub_2539E65E0();
    sub_2535786F4();
    uint64_t v37 = v22;
    uint64_t v25 = v22 + v24;
    uint64_t v43 = *(void *)(v10 + 72);
    while (1)
    {
      uint64_t v26 = type metadata accessor for Session.Event;
      sub_253AF1A28(v25, v3);
      uint64_t v27 = v44;
      sub_253AF1A28(v3, v44);
      TranscriptProtoEvent.init(handwritten:)();
      if (v4) {
        break;
      }
      sub_253AF1980();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253A3E764();
        sub_2539E65E0();
        uint64_t v26 = v45;
      }
      sub_253AF2FCC();
      if (v29)
      {
        sub_25396226C(v28);
        sub_2539E65E0();
        uint64_t v26 = v45;
      }
      *((void *)v26 + 2) = v10;
      sub_253A73DEC();
      sub_253AF19D0(v2, v30 + v31 * v27);
      v25 += v43;
      if (!--v23)
      {
        swift_bridgeObjectRelease();
        uint64_t v32 = v40;
        uint64_t v33 = v38;
        uint64_t v16 = v36;
        goto LABEL_12;
      }
    }
    sub_253AF1980();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_253AF1980();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v33 = v21;
    swift_bridgeObjectRetain();
    uint64_t v26 = (uint64_t (*)(uint64_t))MEMORY[0x263F8EE78];
    uint64_t v32 = v40;
LABEL_12:
    type metadata accessor for TranscriptProtoTranscript(0);
    sub_253AF378C();
    uint64_t v34 = v42;
    *uint64_t v32 = v16;
    v32[1] = v34;
    v32[3] = v41;
    v32[4] = v33;
    v32[2] = (uint64_t)v26;
    sub_253AF1980();
  }
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_253AA8E50()
{
}

void TranscriptProtoPayload.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_2534847F8();
  a19 = v30;
  a20 = v31;
  uint64_t v417 = v22;
  a10 = v32;
  uint64_t v415 = v33;
  uint64_t v413 = type metadata accessor for TranscriptProtoPayload(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v34);
  uint64_t v414 = (uint64_t)&v368 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_253483660();
  uint64_t DecorationPrePlannerResult = type metadata accessor for QueryDecorationPrePlannerResult(v36);
  uint64_t v38 = sub_25346CB4C(DecorationPrePlannerResult);
  MEMORY[0x270FA5388](v38);
  sub_2534F823C();
  MEMORY[0x270FA5388](v39);
  uint64_t v41 = sub_2534F8208((uint64_t)&v368 - v40);
  uint64_t DecorationResult = type metadata accessor for QueryDecorationResult(v41);
  uint64_t v43 = sub_25346CB4C(DecorationResult);
  MEMORY[0x270FA5388](v43);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v44);
  uint64_t v46 = sub_2534F8208((uint64_t)&v368 - v45);
  uint64_t v47 = type metadata accessor for TypeConversionResult(v46);
  uint64_t v48 = sub_25346CB4C(v47);
  MEMORY[0x270FA5388](v48);
  sub_2534F823C();
  MEMORY[0x270FA5388](v49);
  uint64_t v51 = sub_2534F8208((uint64_t)&v368 - v50);
  uint64_t v52 = type metadata accessor for TypeConversionRequest(v51);
  uint64_t v53 = sub_25346CB4C(v52);
  MEMORY[0x270FA5388](v53);
  sub_2534F823C();
  MEMORY[0x270FA5388](v54);
  uint64_t v56 = sub_2534F8208((uint64_t)&v368 - v55);
  uint64_t v57 = type metadata accessor for ClientUndoRedoRequest(v56);
  uint64_t v58 = sub_25346CB4C(v57);
  MEMORY[0x270FA5388](v58);
  sub_2534F823C();
  MEMORY[0x270FA5388](v59);
  uint64_t v61 = sub_2534F8208((uint64_t)&v368 - v60);
  uint64_t v62 = type metadata accessor for UndoRedoRequest(v61);
  uint64_t v63 = sub_25346CB4C(v62);
  MEMORY[0x270FA5388](v63);
  sub_2534F823C();
  MEMORY[0x270FA5388](v64);
  uint64_t v66 = sub_2534F8208((uint64_t)&v368 - v65);
  uint64_t v67 = type metadata accessor for ToolResolution(v66);
  uint64_t v68 = sub_25346CB4C(v67);
  MEMORY[0x270FA5388](v68);
  sub_2534F823C();
  MEMORY[0x270FA5388](v69);
  uint64_t v71 = sub_2534F8208((uint64_t)&v368 - v70);
  uint64_t v72 = type metadata accessor for ExternalAgentOutcome(v71);
  uint64_t v73 = sub_25346CB4C(v72);
  MEMORY[0x270FA5388](v73);
  sub_2534F823C();
  MEMORY[0x270FA5388](v74);
  uint64_t v76 = sub_2534F8208((uint64_t)&v368 - v75);
  uint64_t v77 = type metadata accessor for ExternalAgentRequest(v76);
  uint64_t v78 = sub_25346CB4C(v77);
  MEMORY[0x270FA5388](v78);
  sub_2534F823C();
  MEMORY[0x270FA5388](v79);
  uint64_t v81 = sub_2534F8208((uint64_t)&v368 - v80);
  uint64_t v82 = type metadata accessor for ExternalAgentSpeechQuery(v81);
  uint64_t v83 = sub_25346CB4C(v82);
  MEMORY[0x270FA5388](v83);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v84);
  uint64_t v86 = sub_2534F8208((uint64_t)&v368 - v85);
  uint64_t v87 = type metadata accessor for ExternalAgentTextQuery(v86);
  uint64_t v88 = sub_25346CB4C(v87);
  MEMORY[0x270FA5388](v88);
  sub_2534F823C();
  MEMORY[0x270FA5388](v89);
  uint64_t v91 = sub_2534F8208((uint64_t)&v368 - v90);
  uint64_t v92 = type metadata accessor for StatementResult(v91);
  uint64_t v93 = sub_25346CB4C(v92);
  MEMORY[0x270FA5388](v93);
  sub_2534F823C();
  MEMORY[0x270FA5388](v94);
  sub_2534B35DC();
  sub_2534F8208(v95);
  uint64_t v388 = sub_253B06720();
  sub_253465998();
  uint64_t v387 = v96;
  MEMORY[0x270FA5388](v97);
  sub_2534F823C();
  MEMORY[0x270FA5388](v98);
  uint64_t v100 = sub_2534F8208((uint64_t)&v368 - v99);
  uint64_t v101 = type metadata accessor for ActionCancellation(v100);
  uint64_t v102 = sub_25346CB4C(v101);
  MEMORY[0x270FA5388](v102);
  sub_2534F823C();
  MEMORY[0x270FA5388](v103);
  uint64_t v384 = (char *)&v368 - v104;
  uint64_t v383 = type metadata accessor for TranscriptProtoContextRetrieved(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v105);
  sub_25346CB04();
  uint64_t v107 = sub_2534F8208(v106);
  uint64_t v108 = type metadata accessor for ActionResolverRequest(v107);
  uint64_t v109 = sub_25346CB4C(v108);
  MEMORY[0x270FA5388](v109);
  sub_2534F823C();
  MEMORY[0x270FA5388](v110);
  sub_2534B35DC();
  uint64_t v112 = sub_2534F8208(v111);
  Stepuint64_t Results = type metadata accessor for QueryStepResults(v112);
  uint64_t v114 = sub_25346CB4C(StepResults);
  MEMORY[0x270FA5388](v114);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v115);
  sub_2534B35DC();
  uint64_t v117 = sub_2534F8208(v116);
  uint64_t v118 = type metadata accessor for RequestContent.SystemPromptResolution(v117);
  uint64_t v119 = sub_25346CB4C(v118);
  MEMORY[0x270FA5388](v119);
  sub_2534F823C();
  MEMORY[0x270FA5388](v120);
  sub_2534F8208((uint64_t)&v368 - v121);
  uint64_t v122 = type metadata accessor for SessionError();
  uint64_t v123 = sub_25346CB4C(v122);
  MEMORY[0x270FA5388](v123);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v124);
  v379[3] = (char *)&v368 - v125;
  uint64_t v373 = type metadata accessor for TranscriptProtoVariableStep(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v126);
  sub_25346CB04();
  uint64_t v128 = sub_2534F8208(v127);
  v379[2] = type metadata accessor for VariableStep(v128);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v129);
  sub_2534F823C();
  MEMORY[0x270FA5388](v130);
  uint64_t v132 = sub_2534F8208((uint64_t)&v368 - v131);
  uint64_t Step = type metadata accessor for QueryStep(v132);
  uint64_t v134 = sub_25346CB4C(Step);
  MEMORY[0x270FA5388](v134);
  sub_2534F823C();
  MEMORY[0x270FA5388](v135);
  sub_2534B35DC();
  uint64_t v137 = sub_2534F8208(v136);
  uint64_t v138 = type metadata accessor for ClientAction(v137);
  uint64_t v139 = sub_25346CB4C(v138);
  MEMORY[0x270FA5388](v139);
  sub_2534F823C();
  MEMORY[0x270FA5388](v140);
  uint64_t v142 = sub_2534F8208((uint64_t)&v368 - v141);
  uint64_t v143 = type metadata accessor for Action(v142);
  uint64_t v144 = sub_25346CB4C(v143);
  MEMORY[0x270FA5388](v144);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v145);
  sub_2534B35DC();
  uint64_t v147 = sub_2534F8208(v146);
  uint64_t v148 = type metadata accessor for Request(v147);
  uint64_t v149 = sub_25346CB4C(v148);
  MEMORY[0x270FA5388](v149);
  sub_2534F823C();
  MEMORY[0x270FA5388](v150);
  uint64_t v378 = (char *)&v368 - v151;
  uint64_t v407 = sub_253AF1D50();
  sub_253465998();
  uint64_t v406 = v152;
  MEMORY[0x270FA5388](v153);
  sub_25346CB04();
  sub_2534D8F5C(v154);
  uint64_t v155 = sub_253462A5C(&qword_26B249528);
  uint64_t v156 = sub_25346CB4C(v155);
  MEMORY[0x270FA5388](v156);
  uint64_t v158 = sub_2534F8208((uint64_t)&v368 - ((v157 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v408 = type metadata accessor for TextQuery(v158);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v159);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v160);
  uint64_t v409 = (uint64_t)&v368 - v161;
  uint64_t v162 = sub_253483660();
  uint64_t v163 = type metadata accessor for SessionStart(v162);
  uint64_t v164 = sub_25346CB4C(v163);
  MEMORY[0x270FA5388](v164);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v165);
  sub_2534B35DC();
  uint64_t v167 = sub_2534F8208(v166);
  *(void *)&long long v418 = type metadata accessor for Session.Event.Payload(v167);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v168);
  uint64_t v169 = sub_2534D8CAC();
  uint64_t v412 = type metadata accessor for TranscriptProtoPayloadEnum(v169);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v170);
  sub_2534F823C();
  MEMORY[0x270FA5388](v171);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v172);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v173);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v174);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v175);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v176);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v177);
  sub_2534F823C();
  MEMORY[0x270FA5388](v178);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v179);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v180);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v181);
  sub_2534F823C();
  MEMORY[0x270FA5388](v182);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v183);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v184);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v185);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v186);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v187);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v188);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v189);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v190);
  sub_25351C738();
  MEMORY[0x270FA5388](v191);
  sub_253578D44();
  MEMORY[0x270FA5388](v192);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v193);
  sub_253A3B8EC();
  MEMORY[0x270FA5388](v194);
  sub_253AF1CCC();
  MEMORY[0x270FA5388](v195);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v196);
  sub_2534F8600();
  MEMORY[0x270FA5388](v197);
  sub_253578D54();
  MEMORY[0x270FA5388](v198);
  sub_25351C770();
  MEMORY[0x270FA5388](v199);
  *(void *)&long long v410 = (char *)&v368 - v200;
  sub_2534B324C();
  uint64_t v202 = MEMORY[0x270FA5388](v201);
  sub_253AF2518(v202, v203, v204, v205, v206, v207, v208, v209, v368);
  sub_253AF1A28(a10, v26);
  uint64_t v416 = (long long *)v26;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v218 = v409;
      sub_253AF19D0((uint64_t)v416, v409);
      sub_253AF30AC(v218, (uint64_t)&v393);
      uint64_t v219 = *(void *)(v28 + 8);
      *(void *)&long long v418 = *(void *)v28;
      uint64_t v405 = v219;
      LODWORD(v416) = *(unsigned __int8 *)(v28 + 16);
      sub_253AF3094();
      sub_2534AF234();
      v220();
      swift_bridgeObjectRetain();
      uint64_t v221 = sub_253B059C0();
      uint64_t v222 = sub_253B059A0();
      uint64_t v224 = v223;
      type metadata accessor for TranscriptProtoStatementID(0);
      sub_253AF3388();
      *(_DWORD *)uint64_t v29 = v221;
      *(void *)(v29 + 8) = v222;
      *(void *)(v29 + 16) = v224;
      sub_2534D9778();
      sub_2534DA4BC();
      v225();
      sub_253AF215C(v29);
      uint64_t v226 = (uint64_t *)(v28 + *(int *)(v408 + 28));
      uint64_t v227 = *v226;
      uint64_t v228 = v226[1];
      type metadata accessor for TranscriptProtoTextQuery(0);
      sub_253AF2B44();
      uint64_t v229 = v410;
      uint64_t v231 = v410 + v230;
      sub_253A73874(v410 + v230, 1);
      uint64_t v232 = (void *)(v229 + *(int *)(v221 + 28));
      *uint64_t v232 = 0;
      v232[1] = 0;
      swift_bridgeObjectRetain();
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      uint64_t v233 = v405;
      *(void *)uint64_t v229 = v418;
      *(void *)(v229 + 8) = v233;
      *(unsigned char *)(v229 + 16) = (_BYTE)v416;
      sub_253961BF0(v29, v231, &qword_26B249528);
      swift_bridgeObjectRelease();
      *uint64_t v232 = v227;
      v232[1] = v228;
      sub_253AF1980();
      sub_253AF1980();
      sub_253AF1C60();
      swift_storeEnumTagMultiPayload();
      uint64_t v234 = v229;
      goto LABEL_97;
    case 2u:
      char v235 = *((unsigned char *)v416 + 8);
      uint64_t v237 = *((void *)v416 + 2);
      uint64_t v236 = *((void *)v416 + 3);
      uint64_t v238 = swift_bridgeObjectRetain();
      sub_253A646D0(v238, v239, v240, v241, v242, v243, v244, v245, v368, v369);
      uint64_t v247 = v246;
      type metadata accessor for TranscriptProtoSpeechQuery(0);
      uint64_t v248 = v411;
      swift_bridgeObjectRetain();
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v248 = v247;
      *((unsigned char *)v248 + 8) = v235;
      v248[2] = v237;
      v248[3] = v236;
      sub_253AF1C60();
      swift_storeEnumTagMultiPayload();
      goto LABEL_98;
    case 3u:
      sub_253AF1DC0((uint64_t)v416, (uint64_t)&v391);
      sub_253AF1E8C(v20, (uint64_t)&v390);
      sub_253AF2020();
      TranscriptProtoRequest.init(handwritten:)();
      if (v22) {
        goto LABEL_76;
      }
      sub_253AF1980();
      swift_storeEnumTagMultiPayload();
      uint64_t v234 = v25;
      goto LABEL_97;
    case 4u:
      uint64_t v249 = *((void *)v416 + 1);
      *(void *)&long long v418 = *(void *)v416;
      uint64_t v250 = *((void *)v416 + 3);
      *(void *)&long long v410 = *((void *)v416 + 2);
      uint64_t v251 = *((void *)v416 + 5);
      uint64_t v252 = *((void *)v416 + 6);
      char v253 = *((unsigned char *)v416 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v254 = swift_bridgeObjectRetain();
      uint64_t v255 = v417;
      sub_253A64D78(v254, v256, v257, v258, v259, v260, v261, v262, v368, v369);
      if (v255)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        sub_253AF1980();
        goto LABEL_99;
      }
      uint64_t v351 = v263;
      type metadata accessor for TranscriptProtoPlan(0);
      swift_bridgeObjectRetain();
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)uint64_t v20 = v418;
      *(void *)(v20 + 8) = v249;
      *(void *)(v20 + 16) = v410;
      *(void *)(v20 + 24) = v250;
      *(void *)(v20 + 32) = v351;
      *(void *)(v20 + 40) = v251;
      *(void *)(v20 + 48) = v252;
      *(unsigned char *)(v20 + 56) = v253 + 1;
      sub_253AF1C60();
      swift_storeEnumTagMultiPayload();
      sub_253AF19D0(v20, (uint64_t)v411);
      goto LABEL_98;
    case 5u:
      sub_253AF1DC0((uint64_t)v416, (uint64_t)&v394);
      sub_253AF1E8C(v20, (uint64_t)&v392);
      sub_253AF2020();
      TranscriptProtoAction.init(handwritten:)();
      if (v22) {
        goto LABEL_76;
      }
      sub_253AF1980();
      sub_253AF1C60();
      goto LABEL_94;
    case 6u:
      sub_253AF1DC0((uint64_t)v416, (uint64_t)&v407);
      sub_253AF1E8C(v20, (uint64_t)&v406);
      sub_253AF1C88();
      TranscriptProtoActionCancellation.init(handwritten:)();
      if (v22) {
        goto LABEL_76;
      }
      goto LABEL_95;
    case 7u:
      sub_253AF1DC0((uint64_t)v416, (uint64_t)&v396);
      sub_253AF1D68(v20, (uint64_t)&v395);
      uint64_t v264 = v417;
      TranscriptProtoClientAction.init(handwritten:)();
      if (v264) {
        goto LABEL_76;
      }
      sub_253AF1980();
      sub_253AF1C60();
      goto LABEL_92;
    case 8u:
      sub_253AF1DC0((uint64_t)v416, (uint64_t)&v398);
      sub_253AF1E8C(v20, (uint64_t)&v397);
      sub_253AF2020();
      TranscriptProtoQueryStep.init(handwritten:)();
      if (v22) {
        goto LABEL_76;
      }
      sub_253AF1980();
      sub_253AF1C60();
      swift_storeEnumTagMultiPayload();
      uint64_t v234 = v29;
      goto LABEL_97;
    case 9u:
      uint64_t v265 = v381;
      sub_253AF19D0((uint64_t)v416, v381);
      sub_253AF30AC(v265, (uint64_t)&v403);
      sub_253AF31C0();
      uint64_t v266 = swift_bridgeObjectRetain();
      uint64_t v267 = v417;
      sub_253A6811C(v266, v268, v269, v270, v271, v272, v273, v274, v368, v369);
      if (v267)
      {
        sub_253AF1980();
        sub_253AF1980();
        goto LABEL_77;
      }
      sub_253AF2FC0();
      *(void *)&long long v418 = v352;
      sub_253AF2A54();
      sub_2534AF234();
      v353();
      LODWORD(v417) = sub_253B059C0();
      uint64_t v416 = (long long *)sub_253B059A0();
      uint64_t v355 = v354;
      type metadata accessor for TranscriptProtoStatementID(0);
      sub_253AF3388();
      *(_DWORD *)uint64_t v29 = v417;
      *(void *)(v29 + 8) = v416;
      *(void *)(v29 + 16) = v355;
      sub_2534D9778();
      sub_2534D91AC();
      v356();
      sub_253AF215C(v29);
      uint64_t v357 = v374;
      uint64_t v21 = (void *)((char *)v374 + *(int *)(v373 + 20));
      sub_253A73874((uint64_t)v21, 1);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      void *v357 = v418;
      uint64_t v358 = sub_253A3E5C8();
      sub_253961BF0(v358, v359, v360);
      sub_253AF1D38((uint64_t)v357, (uint64_t)v380);
      sub_253AF1980();
      sub_253AF1980();
      sub_253AF1C60();
LABEL_92:
      swift_storeEnumTagMultiPayload();
      uint64_t v234 = (uint64_t)v21;
      goto LABEL_97;
    case 0xAu:
      swift_bridgeObjectRelease();
      goto LABEL_20;
    case 0xBu:
      uint64_t v277 = *((void *)v416 + 1);
      uint64_t v278 = v411;
      *uint64_t v411 = *(void *)v416;
      v278[1] = v277;
      sub_2534D9FA8();
      goto LABEL_79;
    case 0xCu:
      uint64_t v279 = v417;
      long long v280 = v416[1];
      uint64_t v281 = *((void *)v416 + 4);
      uint64_t v282 = *((void *)v416 + 5);
      long long v419 = *v416;
      long long v420 = v280;
      uint64_t v421 = v281;
      *(void *)&long long v422 = v282;
      TranscriptProtoRecoverableError.init(handwritten:)();
      if (v279) {
        goto LABEL_77;
      }
      sub_253AF1C60();
      goto LABEL_96;
    case 0xDu:
      sub_253AF1D38((uint64_t)v416, (uint64_t)&v399);
      sub_253AF1A28((uint64_t)v21, v380[0]);
      uint64_t v217 = v410;
      sub_253A56BE4();
      TranscriptProtoSessionError.init(handwritten:)();
      sub_253AF1980();
      sub_253AF1C60();
      goto LABEL_25;
    case 0xEu:
      long long v418 = *v416;
      long long v410 = v416[1];
      uint64_t v283 = *((void *)v416 + 4);
      uint64_t v284 = *((void *)v416 + 5);
      type metadata accessor for TranscriptProtoClientCustom(0);
      unint64_t v285 = v411;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      long long v286 = v410;
      *(_OWORD *)unint64_t v285 = v418;
      *((_OWORD *)v285 + 1) = v286;
      v285[4] = v283;
      v285[5] = v284;
      sub_253AF1C60();
      goto LABEL_79;
    case 0xFu:
      sub_25394EA00();
      uint64_t v287 = sub_2534D969C();
      sub_253AF3BFC(v287, v288);
      sub_253AF1980();
      goto LABEL_77;
    case 0x10u:
      sub_253AF1DC0((uint64_t)v416, (uint64_t)&v401);
      sub_253AF1E8C(v20, (uint64_t)&v400);
      sub_253AF2020();
      TranscriptProtoSystemPromptResolution.init(handwritten:)();
      if (v22) {
        goto LABEL_76;
      }
      sub_253AF1980();
      sub_253AF1C60();
      swift_storeEnumTagMultiPayload();
      uint64_t v234 = v24;
      goto LABEL_97;
    case 0x11u:
    case 0x13u:
      sub_253AF1980();
      sub_253AF2AB0();
      sub_253AF1C60();
      goto LABEL_79;
    case 0x12u:
      sub_253AF1DC0((uint64_t)v416, (uint64_t)&v404);
      sub_253AF1E8C(v20, (uint64_t)&v402);
      sub_253AF2020();
      TranscriptProtoQueryStepResults.init(handwritten:)();
      if (v22) {
        goto LABEL_76;
      }
      sub_253AF1980();
      sub_253AF1C60();
      swift_storeEnumTagMultiPayload();
      uint64_t v234 = v28;
      goto LABEL_97;
    case 0x14u:
      sub_253AF1D38((uint64_t)v416, (uint64_t)&v405);
      sub_253AF1A28((uint64_t)v21, v382);
      uint64_t v23 = v375;
      sub_253A56BE4();
      uint64_t v289 = v417;
      TranscriptProtoActionResolverRequest.init(handwritten:)();
      if (v289) {
        goto LABEL_76;
      }
      goto LABEL_95;
    case 0x15u:
      uint64_t v290 = v417;
      sub_253A6AA78(*(void *)v416, v210, v211, v212, v213, v214, v215, v216, v368, v369);
      if (v290) {
        goto LABEL_77;
      }
      uint64_t v291 = sub_2534D9690();
      type metadata accessor for TranscriptProtoResponseGenerationRequest(v291);
      uint64_t v21 = v370;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *uint64_t v21 = v20;
      sub_253AF1C60();
      goto LABEL_92;
    case 0x16u:
      uint64_t v293 = *(void *)v416;
      uint64_t v292 = *((void *)v416 + 1);
      swift_bridgeObjectRetain();
      uint64_t v294 = swift_bridgeObjectRetain();
      uint64_t v295 = v417;
      uint64_t v296 = sub_253AE6338(v294);
      if (v295)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        goto LABEL_77;
      }
      uint64_t v361 = v296;
      swift_bridgeObjectRelease();
      type metadata accessor for TranscriptProtoClientInitiatedClientAction(0);
      uint64_t v27 = v372;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v27 = v293;
      v27[1] = v292;
      v27[2] = v361;
      sub_253AF1C60();
      goto LABEL_94;
    case 0x17u:
    case 0x18u:
      swift_bridgeObjectRelease();
      sub_253AF2AB0();
      sub_253AF1C60();
      goto LABEL_79;
    case 0x19u:
    case 0x2Bu:
      sub_253AF2AB0();
      sub_253AF1C60();
      goto LABEL_79;
    case 0x1Au:
      uint64_t v297 = *(void *)v416;
      uint64_t v298 = *((void *)v416 + 1);
      type metadata accessor for TranscriptProtoSafetyModeException(0);
      uint64_t v299 = v411;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *uint64_t v299 = v297;
      v299[1] = v298;
      sub_253AF1C60();
      goto LABEL_79;
    case 0x1Bu:
      uint64_t v300 = *(void *)v416;
      uint64_t v301 = v386;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      uint64_t v302 = MEMORY[0x263F8EE78];
      *uint64_t v301 = MEMORY[0x263F8EE78];
      v301[1] = v302;
      uint64_t v303 = swift_bridgeObjectRetain();
      uint64_t v304 = v417;
      sub_253A697F0(v303, v305, v306, v307, v308, v309, v310, v311, v368, v369);
      if (v304)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_253AF1980();
        goto LABEL_77;
      }
      *uint64_t v301 = v312;
      uint64_t v313 = swift_bridgeObjectRetain();
      sub_253A697F0(v313, v314, v315, v316, v317, v318, v319, v320, v368, v369);
      uint64_t v367 = v366;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v301[1] = v367;
      sub_253AF1DC0((uint64_t)v301, (uint64_t)v379);
      sub_253AF1C60();
LABEL_100:
      swift_storeEnumTagMultiPayload();
      uint64_t v234 = v300;
      goto LABEL_97;
    case 0x1Cu:
      uint64_t v321 = v417;
      uint64_t v322 = *((void *)v416 + 2);
      uint64_t v323 = *((void *)v416 + 3);
      int v324 = *((_DWORD *)v416 + 8);
      long long v419 = *v416;
      *(void *)&long long v420 = v322;
      *((void *)&v420 + 1) = v323;
      LODWORD(v421) = v324;
      long long v422 = *(long long *)((char *)v416 + 40);
      uint64_t v300 = v376;
      TranscriptProtoToolRetrievalResponse.init(handwritten:)((uint64_t)&v419, v376);
      if (v321) {
        goto LABEL_77;
      }
      sub_253AF1C60();
      goto LABEL_100;
    case 0x1Du:
      uint64_t v325 = v417;
      sub_253A6302C(*(void *)v416, v210, v211, v212, v213, v214, v215, v216, v368, v369);
      if (v325) {
        goto LABEL_77;
      }
      uint64_t v362 = sub_2534D9690();
      type metadata accessor for TranscriptProtoEntitySpanMatchResult(v362);
      uint64_t v21 = v371;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *uint64_t v21 = v20;
      sub_253AF1C60();
      goto LABEL_92;
    case 0x1Eu:
      sub_253AF2738();
      sub_25347FA84();
      v326();
      uint64_t v327 = v385;
      sub_2534D9B10();
      sub_2534AF234();
      v328();
      sub_253578C34();
      uint64_t v329 = v417;
      TranscriptProtoSystemResponse.init(handwritten:)(v327);
      if (v329)
      {
        sub_253AF1980();
        sub_2534D9220();
        v330();
        goto LABEL_99;
      }
      sub_2534D9220();
      v363();
      sub_253AF1C60();
LABEL_94:
      swift_storeEnumTagMultiPayload();
      uint64_t v234 = (uint64_t)v27;
      goto LABEL_97;
    case 0x1Fu:
      sub_253AF1DC0((uint64_t)v416, (uint64_t)&v411);
      sub_253AF1E8C(v20, (uint64_t)&v410);
      sub_253AF1C88();
      TranscriptProtoStatementResult.init(handwritten:)();
      if (v22) {
        goto LABEL_76;
      }
      goto LABEL_95;
    case 0x20u:
      sub_253AF1DC0((uint64_t)v416, (uint64_t)&v413);
      sub_253AF1E8C(v20, (uint64_t)&v412);
      uint64_t v331 = sub_253AF1C88();
      TranscriptProtoExternalAgentTextQuery.init(handwritten:)(v331, v332, v333, v334, v335, v336, v337, v338, v368, (uint64_t)v369);
      if (v22) {
        goto LABEL_76;
      }
      goto LABEL_95;
    case 0x21u:
      sub_253AF1DC0((uint64_t)v416, (uint64_t)&v415);
      sub_253AF1E8C(v20, (uint64_t)&v414);
      sub_253AF1C88();
      TranscriptProtoExternalAgentSpeechQuery.init(handwritten:)();
      if (v22) {
        goto LABEL_76;
      }
      goto LABEL_95;
    case 0x22u:
      sub_253AF1DC0((uint64_t)v416, (uint64_t)&v417);
      sub_253AF1E8C(v20, (uint64_t)&v416);
      sub_253AF1C88();
      TranscriptProtoExternalAgentRequest.init(handwritten:)();
      if (v22) {
        goto LABEL_76;
      }
      goto LABEL_95;
    case 0x23u:
      sub_253AF1DC0((uint64_t)v416, (uint64_t)&v418 + 8);
      sub_253AF1E8C(v20, (uint64_t)&v418);
      sub_253AF1C88();
      TranscriptProtoExternalAgentOutcome.init(handwritten:)();
      if (v22) {
        goto LABEL_76;
      }
      goto LABEL_95;
    case 0x24u:
      uint64_t v340 = *(void *)v416;
      uint64_t v339 = *((void *)v416 + 1);
      uint64_t v341 = *((void *)v416 + 2);
      type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
      uint64_t v342 = v411;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v342 = v340;
      v342[1] = v339;
      v342[2] = v341;
      sub_253AF1C60();
      goto LABEL_79;
    case 0x25u:
      sub_253AF1DC0((uint64_t)v416, (uint64_t)&v419 + 8);
      sub_253AF1E8C(v20, (uint64_t)&v419);
      sub_253AF1C88();
      TranscriptProtoToolResolution.init(handwritten:)();
      if (v22) {
        goto LABEL_76;
      }
      goto LABEL_95;
    case 0x26u:
      sub_253AF1DC0((uint64_t)v416, (uint64_t)&v420 + 8);
      sub_253AF1E8C(v20, (uint64_t)&v420);
      uint64_t v343 = sub_253AF1C88();
      TranscriptProtoUndoRedoRequest.init(handwritten:)(v343, v344, v345, v346, v347, v348, v349, v350, v368, (uint64_t)v369);
      if (v22) {
        goto LABEL_76;
      }
      goto LABEL_95;
    case 0x27u:
      sub_253AF1DC0((uint64_t)v416, (uint64_t)&v422);
      sub_253AF1E8C(v20, (uint64_t)&v421);
      sub_253AF1C88();
      TranscriptProtoClientUndoRedoRequest.init(handwritten:)();
      if (v22) {
        goto LABEL_76;
      }
      goto LABEL_95;
    case 0x28u:
      sub_253AF1DC0((uint64_t)v416, (uint64_t)&v423);
      sub_253AF1E8C(v20, (uint64_t)&v422 + 8);
      sub_253AF1C88();
      TranscriptProtoTypeConversionRequest.init(handwritten:)();
      if (v22) {
        goto LABEL_76;
      }
      goto LABEL_95;
    case 0x29u:
      sub_253AF1DC0((uint64_t)v416, (uint64_t)&a10);
      sub_253AF1E8C(v20, (uint64_t)&a9);
      sub_253AF1C88();
      TranscriptProtoTypeConversionResult.init(handwritten:)();
      if (v22) {
        goto LABEL_76;
      }
      goto LABEL_95;
    case 0x2Au:
      sub_253AF1DC0((uint64_t)v416, (uint64_t)&a12);
      sub_253AF1E8C(v20, (uint64_t)&a11);
      sub_253AF1C88();
      TranscriptProtoQueryDecorationResult.init(handwritten:)();
      if (v22) {
        goto LABEL_76;
      }
      goto LABEL_95;
    case 0x2Cu:
      sub_253AF1DC0((uint64_t)v416, (uint64_t)&a14);
      sub_253AF1E8C(v20, (uint64_t)&a13);
      sub_253AF1C88();
      TranscriptProtoQueryDecorationPrePlannerResult.init(handwritten:)();
      if (v22)
      {
LABEL_76:
        sub_253AF1980();
LABEL_77:
        sub_253AF1980();
      }
      else
      {
LABEL_95:
        sub_253AF1980();
        sub_253AF1C60();
LABEL_96:
        swift_storeEnumTagMultiPayload();
        uint64_t v234 = v23;
LABEL_97:
        sub_253AF19D0(v234, (uint64_t)v411);
LABEL_98:
        uint64_t v365 = v414;
        uint64_t v364 = v415;
        sub_253A73874(v414, 1);
        _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
        sub_253AF1980();
        sub_253AF19D0(v365, v364);
        sub_253472458(v364, &qword_26B2494F8);
        sub_253AF3B1C();
        sub_253AF215C(v364);
      }
LABEL_99:
      sub_2534F8590();
      sub_2534847C8();
      return;
    case 0x2Du:
    case 0x2Eu:
    case 0x30u:
      sub_2534D9FA8();
LABEL_79:
      swift_storeEnumTagMultiPayload();
      goto LABEL_98;
    case 0x2Fu:
LABEL_20:
      sub_25394EA00();
      uint64_t v275 = sub_2534D969C();
      sub_253AF3BFC(v275, v276);
      goto LABEL_77;
    default:
      sub_253AF1D38((uint64_t)v416, (uint64_t)&v389);
      sub_253AF1A28((uint64_t)v21, v377);
      uint64_t v217 = v410;
      sub_253A56BE4();
      TranscriptProtoSessionStart.init(handwritten:)();
      sub_253AF1980();
      sub_253AF1C60();
LABEL_25:
      swift_storeEnumTagMultiPayload();
      uint64_t v234 = v217;
      goto LABEL_97;
  }
}

void TranscriptProtoTimepoint.init(handwritten:)()
{
  sub_2534847F8();
  sub_253AF367C();
  uint64_t v5 = sub_253962754(v4);
  type metadata accessor for TranscriptProtoTimepoint(v5);
  sub_253AF3354();
  MEMORY[0x270FA5388](v6);
  sub_25348360C();
  sub_253B05550();
  sub_253465998();
  MEMORY[0x270FA5388](v7);
  sub_25347FAAC();
  uint64_t v8 = sub_253462A5C(&qword_26B248D00);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  sub_2534B34A4();
  sub_253A3D030();
  sub_253535668();
  v10();
  sub_253B070F0();
  uint64_t v11 = sub_253B07100();
  sub_253AF1CDC(v3, 0, 1, v11);
  uint64_t v12 = type metadata accessor for Timepoint();
  uint64_t v13 = *(void *)(v0 + *(int *)(v12 + 20));
  uint64_t v19 = *(void *)(v0 + *(int *)(v12 + 24));
  uint64_t v14 = sub_253B05570();
  uint64_t v16 = v15;
  sub_253AF2400((uint64_t)v1 + *(int *)(v2 + 36));
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v17 = sub_253AF21D4();
  sub_253961BF0(v17, v18, &qword_26B248D00);
  *uint64_t v1 = v13;
  v1[1] = v19;
  v1[2] = v14;
  v1[3] = v16;
  sub_253AF19D0((uint64_t)v1, v20);
  sub_253AF1980();
  sub_253962714();
  sub_2534847C8();
}

void sub_253AABB20()
{
}

void sub_253AABB38()
{
}

uint64_t sub_253AABB50()
{
  return sub_253A9494C();
}

void sub_253AABB68()
{
}

uint64_t ParticipantID.init(transcript:)()
{
  return sub_2534DA2E4();
}

uint64_t sub_253AABBD4()
{
  sub_253AF2580();
  uint64_t result = ParticipantID.init(transcript:)();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t protocol witness for ProtoBytesConvertible.protoBytes() in conformance ParticipantID()
{
  return sub_253A94CA8(*v0, v0[1]);
}

uint64_t TranscriptProtoParticipantID.init(handwritten:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  type metadata accessor for TranscriptProtoParticipantID(0);
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *a3 = a1;
  a3[1] = a2;
  return result;
}

uint64_t sub_253AABC64@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return TranscriptProtoParticipantID.init(handwritten:)(*a1, a1[1], a2);
}

uint64_t SpanID.init(transcript:)(uint64_t *a1)
{
  uint64_t v1 = *a1;
  sub_253AF1980();
  return v1;
}

uint64_t sub_253AABCD0()
{
  sub_253AF2580();
  uint64_t result = SpanID.init(transcript:)(v1);
  *uint64_t v0 = result;
  return result;
}

uint64_t protocol witness for ProtoBytesConvertible.protoBytes() in conformance SpanID()
{
  return sub_253A94DCC(*v0);
}

uint64_t TranscriptProtoSpanID.init(handwritten:)(uint64_t a1)
{
  uint64_t v3 = sub_253A3F064();
  type metadata accessor for TranscriptProtoSpanID(v3);
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v1 = a1;
  return result;
}

uint64_t sub_253AABD50(uint64_t *a1)
{
  return TranscriptProtoSpanID.init(handwritten:)(*a1);
}

void SessionStart.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  uint64_t v5 = sub_253AF2BE8(v4);
  uint64_t v34 = type metadata accessor for SessionStart(v5);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v6);
  sub_2536D2C5C(v7, v33[0]);
  uint64_t v8 = sub_253462A5C(&qword_26B249680);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  sub_253AF1DD8(v10, v33[0]);
  uint64_t v11 = sub_253462A5C(&qword_26B248CD0);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v38 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  uint64_t v14 = sub_253B05630();
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v16);
  sub_253578D44();
  MEMORY[0x270FA5388](v17);
  uint64_t v18 = sub_2534DA41C();
  uint64_t v19 = type metadata accessor for TranscriptProtoLocaleSettings(v18);
  uint64_t v20 = sub_25346CB4C(v19);
  MEMORY[0x270FA5388](v20);
  sub_25348360C();
  uint64_t v21 = sub_253B05D70();
  sub_253465998();
  uint64_t v23 = v22;
  MEMORY[0x270FA5388](v24);
  sub_2534D92D4(v25, v33[0]);
  sub_25395E8BC(v1);
  if (!v0)
  {
    v33[1] = v23;
    v33[2] = v21;
    uint64_t v26 = v36;
    swift_bridgeObjectRetain();
    sub_253B055D0();
    swift_bridgeObjectRetain();
    sub_253B055D0();
    swift_bridgeObjectRetain();
    sub_253B055D0();
    sub_2534DA138();
    sub_253B05D20();
    sub_253AF1980();
    uint64_t v27 = type metadata accessor for TranscriptProtoSessionStart(0);
    sub_253961F60(v3 + *(int *)(v27 + 20), v37, &qword_26B249680);
    sub_253A56BE4();
    sub_25395B6D8();
    uint64_t v28 = v26 + *(int *)(v34 + 20);
    uint64_t v29 = sub_253B05CB0();
    sub_25346CC08(v28, v30, v31, v29);
    sub_2534D96CC();
    sub_2534D8E14();
    v32();
    sub_253961BF0((uint64_t)v38, v28, &qword_26B248CD0);
    sub_253AF19D0(v26, v35);
  }
  sub_253AF1980();
  sub_2536D4C48();
  sub_2534847C8();
}

void TextQuery.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v4 = sub_253AF3160();
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_2534B33AC();
  sub_253B059D0();
  sub_253465998();
  MEMORY[0x270FA5388](v6);
  sub_2534847E0();
  uint64_t v7 = v2[1];
  uint64_t v15 = *v2;
  char v14 = *((unsigned char *)v2 + 16);
  uint64_t v8 = type metadata accessor for TranscriptProtoTextQuery(0);
  swift_bridgeObjectRetain();
  sub_25395E074(v3);
  if (v1)
  {
    sub_253AF1980();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_253AF3A28();
    sub_253B059B0();
    sub_253AF1980();
    uint64_t v9 = (uint64_t *)((char *)v2 + *(int *)(v8 + 28));
    uint64_t v11 = *v9;
    uint64_t v10 = v9[1];
    swift_bridgeObjectRetain();
    sub_253AF1980();
    uint64_t v12 = (void *)(v0 + *(int *)(type metadata accessor for TextQuery(0) + 28));
    *(void *)uint64_t v0 = v15;
    *(void *)(v0 + 8) = v7;
    *(unsigned char *)(v0 + 16) = v14;
    sub_2534D8E14();
    v13();
    *uint64_t v12 = v11;
    v12[1] = v10;
  }
  sub_2534F8A10();
  sub_2534847C8();
}

#error "253AAC2B0: call analysis failed (funcsize=40)"

void Request.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v8 = v7;
  uint64_t v10 = sub_253962754(v9);
  uint64_t v83 = type metadata accessor for Request(v10);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = sub_253547148(v12, v78);
  uint64_t v85 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(v13);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v14);
  uint64_t v87 = (uint64_t *)((char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2534B324C();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  sub_253AF3C28(v17, v18, v19, v20, v21, v22, v23, v24, v78);
  uint64_t v25 = sub_253462A5C(&qword_269CE1AD0);
  uint64_t v26 = sub_25346CB4C(v25);
  MEMORY[0x270FA5388](v26);
  uint64_t v84 = (uint64_t)&v78 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v28);
  uint64_t v86 = (uint64_t)&v78 - v29;
  uint64_t v30 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v31 = sub_25346CB4C(v30);
  MEMORY[0x270FA5388](v31);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v32);
  sub_2536D4170();
  uint64_t v33 = sub_253462A5C(&qword_269CE1AE0);
  uint64_t v34 = sub_25346CB4C(v33);
  MEMORY[0x270FA5388](v34);
  sub_2534966B0();
  uint64_t v35 = sub_253462A5C(&qword_269CDBB20);
  uint64_t v36 = sub_25346CB4C(v35);
  MEMORY[0x270FA5388](v36);
  uint64_t v37 = sub_2534D9B74();
  uint64_t v38 = type metadata accessor for TranscriptProtoRequestContent(v37);
  uint64_t v39 = sub_25346CB4C(v38);
  MEMORY[0x270FA5388](v39);
  uint64_t v40 = sub_25397F55C();
  uint64_t v41 = type metadata accessor for RequestContent(v40);
  uint64_t v42 = sub_25346CB4C(v41);
  MEMORY[0x270FA5388](v42);
  uint64_t v43 = sub_2534D8CAC();
  type metadata accessor for TranscriptProtoRequest(v43);
  sub_253AF337C();
  sub_25395E77C(v0);
  if (v1)
  {
    sub_253AF1980();
  }
  else
  {
    uint64_t v80 = v2;
    uint64_t v81 = v6;
    RequestContent.init(transcript:)();
    int v44 = MEMORY[0];
    uint64_t v45 = v3;
    sub_253961F60(*(int *)(v3 + 24), v4, &qword_269CE1AE0);
    sub_253AF2770();
    sub_25395A804();
    int v79 = v44;
    if (*(void *)(*(int *)(v3 + 28) + 8))
    {
      swift_bridgeObjectRetain();
      uint64_t v46 = v5;
      sub_253B05560();
      uint64_t v47 = v80;
      sub_25395D974();
      sub_253472458(v46, (uint64_t *)&unk_26B248CB0);
      uint64_t v51 = sub_253B055C0();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v47, 0, 1, v51);
      swift_bridgeObjectRelease();
      uint64_t v45 = v3;
    }
    else
    {
      uint64_t v48 = sub_253B055C0();
      sub_25346CC08(v80, v49, v50, v48);
    }
    uint64_t v78 = 0;
    uint64_t v52 = v86;
    sub_253961F60(v8 + *(int *)(v45 + 32), v86, &qword_269CE1AD0);
    uint64_t v53 = v84;
    sub_253961F60(v52, v84, &qword_269CE1AD0);
    uint64_t v54 = sub_253AF34BC();
    sub_2534D8B48(v54, v55, v85);
    uint64_t v57 = v82;
    uint64_t v56 = (int *)v83;
    uint64_t v58 = v87;
    if (v59)
    {
      sub_253472458(v52, &qword_269CE1AD0);
      sub_253472458(v53, &qword_269CE1AD0);
      uint64_t v65 = 0;
      uint64_t v64 = 0;
      uint64_t v66 = 0;
    }
    else
    {
      uint64_t v60 = sub_253578828();
      sub_253AF19D0(v60, v61);
      uint64_t v62 = sub_25353CE6C();
      sub_253AF1A28(v62, v63);
      uint64_t v65 = *v58;
      uint64_t v64 = v58[1];
      uint64_t v66 = v58[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_253AF1980();
      sub_253472458(v52, &qword_269CE1AD0);
      sub_253AF2474();
    }
    uint64_t v67 = v57 + v56[6];
    uint64_t v68 = type metadata accessor for RequestPrescribedPlan(0);
    sub_25346CC08(v67, v69, v70, v68);
    uint64_t v71 = v57 + v56[7];
    uint64_t v72 = sub_253B055C0();
    sub_25346CC08(v71, v73, v74, v72);
    uint64_t v75 = (uint64_t *)(v57 + v56[8]);
    *uint64_t v75 = 0;
    v75[1] = 0;
    v75[2] = 0;
    uint64_t v76 = sub_253AF3A1C();
    sub_253AF19D0(v76, v77);
    *(unsigned char *)(v57 + v56[5]) = v79;
    sub_253961BF0(v81, v67, &qword_269CDBB20);
    sub_253961BF0(v80, v71, (uint64_t *)&unk_26B248CB0);
    sub_253961E88(*v75, v75[1]);
    *uint64_t v75 = v65;
    v75[1] = v64;
    v75[2] = v66;
    sub_253AF19D0(v57, v88);
    sub_253AF1980();
  }
  sub_2534F8A10();
  sub_2534847C8();
}

uint64_t Session.Plan.init(transcript:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v7 = a1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_253955520(v9, v10, v11, v12, v13, v14, v15, v16, v23, v25);
  if (v2)
  {
    sub_253AF1980();
  }
  else
  {
    uint64_t v19 = a1[6];
    char v20 = 2;
    uint64_t v26 = v17;
    switch(*((unsigned char *)a1 + 56))
    {
      case 1:
        char v20 = 0;
        goto LABEL_8;
      case 2:
        char v20 = 1;
        goto LABEL_8;
      case 3:
LABEL_8:
        uint64_t v24 = a1[5];
        swift_bridgeObjectRetain();
        uint64_t result = sub_253AF1980();
        *(void *)a2 = v6;
        *(void *)(a2 + 8) = v5;
        *(void *)(a2 + 16) = v8;
        *(void *)(a2 + 24) = v7;
        *(void *)(a2 + 32) = v26;
        *(void *)(a2 + 40) = v24;
        *(void *)(a2 + 48) = v19;
        *(unsigned char *)(a2 + 56) = v20;
        return result;
      case 4:
        swift_bridgeObjectRetain();
        sub_253462A5C(&qword_269CE86B0);
        sub_253B09730();
        sub_253AF2AC8();
        sub_253961DC0();
        sub_2534D969C();
        *(void *)uint64_t v22 = a2;
        *(void *)(v22 + 8) = v6;
        *(unsigned char *)(v22 + 16) = 0;
        goto LABEL_10;
      default:
        sub_25394EA00();
        sub_2534D969C();
        *uint64_t v21 = 0;
        swift_bridgeObjectRetain();
LABEL_10:
        swift_willThrow();
        sub_253AF1980();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
    }
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void Session.RecoverableError.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  sub_2534847F8();
  uint64_t v15 = sub_253AF2150(v14);
  uint64_t v16 = type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(v15);
  uint64_t v17 = sub_25346CB4C(v16);
  MEMORY[0x270FA5388](v17);
  sub_2534B340C();
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = sub_253971BBC();
  uint64_t v20 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(v19);
  uint64_t v21 = sub_25346CB4C(v20);
  MEMORY[0x270FA5388](v21);
  uint64_t v22 = sub_2534D9B74();
  uint64_t v23 = type metadata accessor for TranscriptProtoPlanGenerationError(v22);
  uint64_t v24 = sub_25346CB4C(v23);
  MEMORY[0x270FA5388](v24);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v40 - v26;
  uint64_t v28 = sub_253AF1D98();
  uint64_t v29 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(v28);
  uint64_t v30 = sub_25346CB4C(v29);
  MEMORY[0x270FA5388](v30);
  sub_253AF28E0();
  sub_25395E600(v31);
  if (v10)
  {
    sub_253AF1980();
  }
  else
  {
    uint64_t v32 = sub_25357931C();
    sub_253AF19D0(v32, v33);
    sub_253AF1A28((uint64_t)v27, v12);
    sub_25395E5B0(v13);
    sub_253AF2C3C();
    sub_253AF2BF4();
    uint64_t v35 = *v11;
    uint64_t v34 = v11[1];
    uint64_t v36 = v11[3];
    uint64_t v42 = v11[2];
    uint64_t v43 = v35;
    uint64_t v37 = v11[4];
    uint64_t v38 = v11[5];
    uint64_t v40 = v34;
    uint64_t v41 = v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_253AF1980();
    sub_253AF1980();
    sub_253AF3BB0();
    sub_253AF1980();
    sub_2534D9FA8();
    sub_253AF1980();
    uint64_t v39 = v40;
    *a10 = v43;
    a10[1] = v39;
    a10[2] = v42;
    a10[3] = v36;
    a10[4] = v41;
    a10[5] = v38;
  }
  sub_2534F8590();
  sub_2534847C8();
}

void Action.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v5 = sub_253971B04();
  uint64_t v6 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(v5);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_253AF1DF4();
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  sub_253AF2CDC();
  sub_253465998();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_2534D9C00();
  uint64_t v12 = type metadata accessor for TranscriptProtoAction(v11);
  uint64_t v33 = v1;
  sub_25395E074(v4);
  if (v2)
  {
    sub_253AF1980();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_253AF2A1C();
    sub_253AF1980();
    sub_25395E114((uint64_t)v3);
    uint64_t v13 = v3[1];
    uint64_t v14 = v3[3];
    uint64_t v31 = v3[2];
    uint64_t v32 = *v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_253AF1980();
    uint64_t v15 = (uint64_t *)(v1 + *(int *)(v12 + 32));
    uint64_t v16 = v15[1];
    uint64_t v30 = *v15;
    uint64_t v17 = *(int **)(v1 + 24);
    swift_bridgeObjectRetain();
    uint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v29 = sub_253AE9304(v18);
    swift_bridgeObjectRelease();
    char v28 = *(unsigned char *)(v33 + 16);
    uint64_t v19 = (uint64_t *)(v33 + *(int *)(v12 + 40));
    uint64_t v26 = v19[1];
    uint64_t v27 = *v19;
    swift_bridgeObjectRetain();
    sub_253AF1980();
    type metadata accessor for Action(0);
    sub_25394633C();
    uint64_t v34 = v13;
    uint64_t v21 = (void *)(v0 + v20);
    uint64_t v23 = (void *)(v0 + *(int *)(v22 + 32));
    sub_2534D8E14();
    v24();
    uint64_t v25 = (void *)(v0 + v17[9]);
    *uint64_t v25 = v32;
    v25[1] = v34;
    _OWORD v25[2] = v31;
    v25[3] = v14;
    *uint64_t v21 = v30;
    v21[1] = v16;
    *(void *)(v0 + v17[7]) = v29;
    *(unsigned char *)(v0 + v17[6]) = v28;
    *uint64_t v23 = v27;
    v23[1] = v26;
  }
  sub_253579494();
  sub_2534847C8();
}

void ClientAction.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for TranscriptProtoStatementID(0);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_253AF20E8();
  sub_253465998();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_2534AF2D8();
  type metadata accessor for TranscriptProtoClientAction(v7);
  sub_25395E074(v1);
  if (!v0)
  {
    sub_253AF33F4();
    sub_253AF25FC();
    sub_253AF1980();
    uint64_t v8 = *(void *)(v3 + 8);
    swift_bridgeObjectRetain();
    uint64_t v9 = swift_bridgeObjectRetain();
    sub_253AE8864(v9, v10, v11, v12, v13, v14, v15, v16, v22, v23);
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    uint64_t v19 = swift_bridgeObjectRetain();
    sub_253AE8F30(v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_25357931C();
    ClientAction.init(statementId:toolId:parameters:shimParameters:clientQueryId:planEventId:)(v20, v21, v8, v18);
  }
  sub_253AF1980();
  sub_2534F8A10();
  sub_2534847C8();
}

void QueryStep.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_253AAD3E8(a1, (uint64_t)type metadata accessor for TranscriptProtoQueryStep, (uint64_t)sub_253955854, (uint64_t)type metadata accessor for TranscriptProtoQueryStep, (uint64_t)type metadata accessor for QueryStep, a6, a7, a8, vars0, vars8);
}

void VariableStep.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_253AAD3E8(a1, (uint64_t)type metadata accessor for TranscriptProtoVariableStep, (uint64_t)sub_2539529D8, (uint64_t)type metadata accessor for TranscriptProtoVariableStep, (uint64_t)type metadata accessor for VariableStep, a6, a7, a8, vars0, vars8);
}

void sub_253AAD3E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  sub_2534847F8();
  uint64_t v26 = v14;
  sub_253AF3CAC(v15, v16, v17);
  uint64_t v18 = sub_253AF2290();
  uint64_t v19 = type metadata accessor for TranscriptProtoStatementID(v18);
  uint64_t v20 = sub_25346CB4C(v19);
  MEMORY[0x270FA5388](v20);
  sub_253AF2CDC();
  sub_253465998();
  MEMORY[0x270FA5388](v21);
  uint64_t v22 = sub_25349888C();
  v11(v22);
  sub_25395E074(v13);
  if (v10)
  {
    sub_253AF38FC();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_253B059B0();
    sub_253AF1980();
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = a10(v23);
    sub_253AF1980();
    sub_253578DF8();
    sub_2539627E0();
    v25();
    *(void *)(v12 + *(int *)(v26(0) + 20)) = v24;
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void SessionError.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v6 = v5;
  uint64_t v46 = v7;
  uint64_t v8 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v45 = (uint64_t *)((char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2534B324C();
  MEMORY[0x270FA5388](v11);
  int v44 = (char *)&v39 - v12;
  uint64_t v13 = sub_253483660();
  uint64_t v14 = type metadata accessor for TranscriptProtoPlannerError(v13);
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  sub_2534B340C();
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = sub_253AF2098();
  uint64_t v20 = type metadata accessor for TranscriptProtoSessionCoordinatorError(v19);
  uint64_t v21 = sub_25346CB4C(v20);
  MEMORY[0x270FA5388](v21);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v22);
  uint64_t v23 = sub_2534DA41C();
  uint64_t v24 = type metadata accessor for TranscriptProtoExecutorError(v23);
  uint64_t v25 = sub_25346CB4C(v24);
  MEMORY[0x270FA5388](v25);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v26);
  uint64_t v27 = sub_253A74194();
  type metadata accessor for TranscriptProtoSessionErrorEnum(v27);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v28);
  sub_253AF29D0();
  sub_25395E204(v29);
  if (v0)
  {
    sub_253AF1980();
  }
  else
  {
    uint64_t v40 = v4;
    uint64_t v41 = v2;
    uint64_t v30 = (uint64_t)v44;
    uint64_t v31 = v45;
    uint64_t v43 = v6;
    sub_2535791D8();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 1:
        sub_253AF19D0(v3, v1);
        sub_253AF1A28(v1, v40);
        sub_253AF3D5C();
        SessionCoordinatorError.init(transcript:)();
        sub_253AF1980();
        goto LABEL_8;
      case 2:
        uint64_t v35 = sub_253AF25E4();
        sub_253AF19D0(v35, v36);
        sub_253AF1A28((uint64_t)v18, v41);
        sub_253AF3D5C();
        PlannerError.init(transcript:)();
        sub_253AF1980();
        goto LABEL_8;
      case 3:
        sub_253AF2848();
        uint64_t v37 = sub_253A3D524();
        sub_253AF1A28(v37, v38);
        sub_253AF3864();
        ExecutorError.init(transcript:)();
        sub_253AF1980();
LABEL_8:
        sub_253AF1980();
        break;
      default:
        sub_253AF3AD8();
        sub_253AF1A28(v30, (uint64_t)v31);
        uint64_t v32 = *v31;
        uint64_t v33 = v31[1];
        uint64_t v34 = v31[2];
        objc_allocWithZone(MEMORY[0x263F087E8]);
        swift_bridgeObjectRetain();
        sub_253AE436C(v32, v33, v34, 0);
        sub_253B05950();
        sub_253AF1980();
        sub_253AF1980();
        sub_253AF2474();
        break;
    }
    type metadata accessor for SessionError();
    sub_253971DF8();
    swift_storeEnumTagMultiPayload();
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void RequestContent.SystemPromptResolution.init(transcript:)()
{
  sub_2534847F8();
  sub_253AF2A80();
  v40[0] = v6;
  uint64_t v7 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_2534AF2A0(v9, v40[0]);
  uint64_t v10 = sub_253462A5C(&qword_269CE5258);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = sub_253AF1FE8(v12, v40[0]);
  uint64_t v14 = type metadata accessor for TranscriptProtoStatementID(v13);
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  uint64_t v41 = (uint64_t)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253AF1D50();
  sub_253465998();
  v40[2] = v18;
  v40[3] = v17;
  MEMORY[0x270FA5388](v17);
  v40[5] = (uint64_t)v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_253483660();
  uint64_t v21 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(v20);
  uint64_t v22 = sub_25346CB4C(v21);
  MEMORY[0x270FA5388](v22);
  uint64_t v23 = sub_2534D9B74();
  uint64_t v24 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(v23);
  uint64_t v25 = sub_25346CB4C(v24);
  MEMORY[0x270FA5388](v25);
  sub_253AF1E1C(v26, v40[0]);
  sub_253B055C0();
  sub_253465998();
  MEMORY[0x270FA5388](v27);
  sub_2534847E0();
  uint64_t v28 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v29 = sub_25346CB4C(v28);
  MEMORY[0x270FA5388](v29);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v30);
  sub_253AF1CCC();
  MEMORY[0x270FA5388](v31);
  sub_2534D97C0();
  if (*(void *)(v0 + 24))
  {
    swift_bridgeObjectRetain();
    sub_253B05560();
    sub_25395D974();
    if (v2)
    {
      sub_253472458(v1, (uint64_t *)&unk_26B248CB0);
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    sub_253472458(v1, (uint64_t *)&unk_26B248CB0);
    sub_253AF24D0(v4, 0);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_253AF24D0(v4, 1);
  }
  sub_253B05560();
  sub_25395D974();
  if (v2)
  {
    uint64_t v32 = sub_2536D3F90();
    sub_253472458(v32, v33);
    uint64_t v34 = sub_2534DA604();
    sub_253472458(v34, v36);
  }
  else
  {
    sub_253472458(v3, (uint64_t *)&unk_26B248CB0);
    type metadata accessor for TranscriptProtoSystemPromptResolution(0);
    sub_253AF2EB8();
    sub_25395E394(v5);
    RequestContent.SystemPromptResolution.UserAction.init(transcript:)();
    sub_25395E074(v41);
    swift_bridgeObjectRetain();
    sub_253B059B0();
    sub_253AF1980();
    sub_25395E3E4(v40[4]);
    uint64_t v35 = v40[1];
    RequestContent.SystemPromptResolution.ResolutionInput.init(transcript:)();
    uint64_t v37 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
    sub_253971DA8(v35, v38, v39, v37);
    sub_253A3D518();
    RequestContent.SystemPromptResolution.init(actionEventId:systemResponseEventId:userAction:statementId:input:)();
  }
LABEL_9:
  sub_253AF1980();
  sub_253579494();
  sub_2534847C8();
}

void ActionStepResult.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v34 = v2;
  uint64_t v4 = v3;
  uint64_t v5 = sub_253462A5C(&qword_269CDBB28);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_253AF1C00(v7, v29);
  uint64_t v32 = sub_253B05A00();
  sub_253465998();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_25397F55C();
  uint64_t v31 = sub_253B05AB0();
  sub_253465998();
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = sub_25349888C();
  uint64_t v13 = type metadata accessor for ActionResult(v12);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v29 - v16;
  sub_253AF1D98();
  uint64_t v18 = sub_253B055C0();
  uint64_t v19 = sub_253AF1CDC(v4, 1, 1, v18);
  uint64_t v20 = (int *)type metadata accessor for ActionStepResult(v19);
  uint64_t v21 = v20[7];
  uint64_t v30 = v4;
  uint64_t v22 = (void *)(v4 + v21);
  *uint64_t v22 = 0;
  v22[1] = 0xE000000000000000;
  uint64_t v23 = (void *)(v4 + v20[5]);
  *uint64_t v23 = 0;
  v23[1] = 0xE000000000000000;
  (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v0, *MEMORY[0x263F4C010], v32);
  sub_253AF31A4();
  sub_253B05A60();
  sub_25353CDD4();
  v24();
  sub_253B06820();
  sub_253AF1E48(v33, 1);
  sub_253AF1E48(v1 + *(int *)(v14 + 28), 1);
  uint64_t v25 = sub_2534D96CC();
  v26(v25);
  uint64_t v27 = sub_2534D9B10();
  sub_253961BF0(v27, v28, &qword_269CDBB28);
  sub_253AF19D0(v1, (uint64_t)v17);
  sub_253AF1980();
  sub_253AF19D0((uint64_t)v17, v30 + v20[6]);
  sub_253962714();
  sub_2534847C8();
}

void QueryStepResults.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  sub_2534847F8();
  sub_253AF2150(v13);
  sub_253B055C0();
  sub_253465998();
  MEMORY[0x270FA5388](v14);
  sub_2534B3294();
  uint64_t v15 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v16 = sub_25346CB4C(v15);
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = sub_253AF231C();
  uint64_t v18 = sub_25346CB4C(v17);
  MEMORY[0x270FA5388](v18);
  sub_253AF1F0C();
  sub_253465998();
  MEMORY[0x270FA5388](v19);
  sub_25346CC54();
  uint64_t v20 = swift_bridgeObjectRetain();
  sub_253954EB0(v20, v21, v22, v23, v24, v25, v26, v27, v31, v32);
  if (!v10)
  {
    uint64_t v33 = v28;
    type metadata accessor for TranscriptProtoQueryStepResults(0);
    sub_25395E074(v11);
    swift_bridgeObjectRetain();
    sub_253B059B0();
    sub_253AF1980();
    sub_253B05560();
    sub_25395D974();
    sub_253472458(v12, (uint64_t *)&unk_26B248CB0);
    *a10 = v33;
    type metadata accessor for QueryStepResults(0);
    sub_25394633C();
    sub_2534D8E14();
    v29();
    sub_253AF30A0();
    v30();
  }
  sub_253AF1980();
  sub_2534F8590();
  sub_2534847C8();
}

void ActionResponse.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v4 = sub_253462A5C(&qword_269CE5150);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_253AF2D2C();
  sub_253465998();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  sub_25349888C();
  uint64_t v10 = sub_253B05AB0();
  sub_253465998();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  sub_2534847E0();
  uint64_t v14 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  sub_2534D9B74();
  uint64_t v16 = sub_253B055C0();
  sub_25346CC08(v3, v17, v18, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v2, *MEMORY[0x263F4C010], v6);
  sub_253B05A60();
  (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))(v1, *MEMORY[0x263F4C0F8], v10);
  uint64_t v19 = sub_253B064B0();
  sub_25346CC08(v0, v20, v21, v19);
  sub_253B05CD0();
  sub_253AF1980();
  sub_253962714();
  sub_2534847C8();
}

void ActionResolverRequest.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v6 = sub_253AF258C(v5);
  uint64_t v7 = type metadata accessor for TranscriptProtoParameterSet(v6);
  uint64_t v8 = sub_25346CB34(v7);
  MEMORY[0x270FA5388](v8);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_2534DA430();
  uint64_t v11 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(v10);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = sub_253AF1C00(v13, v45);
  uint64_t v15 = type metadata accessor for TranscriptProtoStatementID(v14);
  uint64_t v16 = sub_25346CB4C(v15);
  MEMORY[0x270FA5388](v16);
  sub_253AF1F0C();
  sub_253465998();
  uint64_t v18 = v17;
  MEMORY[0x270FA5388](v19);
  uint64_t v20 = sub_25349888C();
  type metadata accessor for TranscriptProtoActionResolverRequest(v20);
  sub_25395E074(v3);
  if (v1)
  {
    sub_253AF1980();
  }
  else
  {
    uint64_t v52 = v2;
    uint64_t v60 = v18;
    swift_bridgeObjectRetain();
    sub_253AF281C();
    sub_253B059B0();
    sub_253AF1980();
    sub_25395E114((uint64_t)v57);
    uint64_t v21 = (unsigned char *)v0;
    uint64_t v22 = v4;
    uint64_t v23 = v57[1];
    uint64_t v51 = *v57;
    uint64_t v25 = v57[2];
    uint64_t v24 = v57[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_253AF1980();
    sub_253A8FB64(0xD000000000000093, 0x8000000253B13C10, 1211, 0xD000000000000011, 0x8000000253B13CB0, &qword_26B2495B8, (void (*)(void))type metadata accessor for TranscriptProtoParameterSet);
    uint64_t v26 = v60;
    TranscriptProtoParameterSet.handwrittenParameters.getter();
    uint64_t v49 = v27;
    uint64_t v50 = v23;
    sub_253AF1980();
    uint64_t v28 = *(void *)(v0 + 16);
    uint64_t v29 = *(void *)(v28 + 16);
    uint64_t v30 = MEMORY[0x263F8EE78];
    if (v29)
    {
      uint64_t v61 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_2539E84D4();
      sub_2535786F4();
      uint64_t v32 = v28 + v31;
      uint64_t v58 = *(void **)(v33 + 72);
      do
      {
        sub_253AF1A28(v32, v52);
        uint64_t v30 = v52;
        TranscriptProtoParameterSet.handwrittenParameters.getter();
        uint64_t v35 = v34;
        sub_253AF1980();
        if ((sub_2539621FC() & 1) == 0)
        {
          sub_253A3E764();
          sub_2539E84D4();
          uint64_t v30 = v61;
        }
        sub_253AF2EC4();
        if (v37)
        {
          sub_2539625A0(v36);
          sub_2539E84D4();
          uint64_t v30 = v61;
        }
        *(void *)(v30 + 16) = v26;
        *(void *)(v30 + 8 * v22 + 32) = v35;
        uint64_t v26 = v60;
        v32 += (uint64_t)v58;
        --v29;
      }
      while (v29);
      swift_bridgeObjectRelease();
    }
    uint64_t v53 = sub_25353D3C4(v30);
    char v59 = v21[24];
    char v55 = v21[25];
    char v54 = v21[26];
    type metadata accessor for AST.FlatValue(0);
    uint64_t v48 = sub_253AF3B90();
    uint64_t v38 = (int *)type metadata accessor for ActionResolverRequest(0);
    uint64_t v47 = v38[5];
    type metadata accessor for Candidate(0);
    sub_253462C88();
    sub_253B095A0();
    uint64_t v39 = v38[6];
    uint64_t v46 = v38[7];
    sub_253AF3B90();
    uint64_t v40 = v38[8];
    uint64_t v41 = v38[9];
    uint64_t v42 = v38[10];
    sub_253AF30A0();
    sub_253AF2A10();
    sub_2534D8E14();
    v43();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v44 = (void *)(v56 + v38[11]);
    void *v44 = v51;
    v44[1] = v50;
    v44[2] = v25;
    v44[3] = v24;
    *(void *)(v56 + v47) = v49;
    *(void *)(v56 + v39) = v53;
    *(void *)(v56 + v46) = v48;
    *(unsigned char *)(v56 + v40) = v59;
    *(unsigned char *)(v56 + v41) = v55;
    *(unsigned char *)(v56 + v42) = v54;
    sub_253AF1980();
  }
  sub_2534F8A10();
  sub_2534847C8();
}

uint64_t ResponseGenerationRequest.init(transcript:)(uint64_t a1)
{
  return sub_253AAF8E0(a1, (uint64_t (*)(uint64_t))sub_2539551EC);
}

#error "253AAEC34: call analysis failed (funcsize=37)"

uint64_t ContextPrewarmRequest.init(transcript:)@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_253AF1980();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t ContextPrewarmCompleted.init(transcript:)@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_253AF1980();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t SafetyModeRelease.init(transcript:)()
{
  return sub_253AF1980();
}

uint64_t SafetyModeException.init(transcript:)()
{
  sub_253AF3114();
  uint64_t result = sub_253AF1980();
  *uint64_t v0 = v2;
  v0[1] = v1;
  return result;
}

uint64_t ContextRetrieved.init(transcript:)@<X0>(void *a1@<X8>)
{
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_2539542B0(v3, v4, v5, v6, v7, v8, v9, v10, v24, v26);
  if (v1) {
    return sub_253AF1980();
  }
  uint64_t v13 = v11;
  uint64_t v14 = swift_bridgeObjectRetain();
  sub_2539542B0(v14, v15, v16, v17, v18, v19, v20, v21, v25, v27);
  uint64_t v23 = v22;
  uint64_t result = sub_253AF1980();
  *a1 = v13;
  a1[1] = v23;
  return result;
}

void ToolRetrievalResponse.init(transcript:)(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  v99[0] = a2;
  uint64_t v5 = sub_253462A5C(&qword_269CDFA90);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_2534D9B74();
  uint64_t v7 = sub_253B08E70();
  sub_253465998();
  uint64_t v132 = v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v119 = (char *)v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v11);
  uint64_t v118 = (char *)v99 - v12;
  sub_253483660();
  uint64_t v13 = sub_253B09190();
  sub_253465998();
  uint64_t v15 = v14;
  MEMORY[0x270FA5388](v16);
  uint64_t v131 = (char *)v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v18);
  sub_2534F882C();
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  sub_253A56C8C(v20, v21, v22, v23, v24, v25, v26, v27, v99[0]);
  uint64_t v28 = sub_253462A5C(&qword_269CDFAA0);
  uint64_t v29 = sub_25346CB4C(v28);
  MEMORY[0x270FA5388](v29);
  uint64_t v124 = (uint64_t)v99 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  uint64_t v125 = sub_253B08E80();
  sub_253465998();
  uint64_t v32 = v31;
  MEMORY[0x270FA5388](v33);
  uint64_t v123 = (char *)v99 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v35);
  sub_2534B35DC();
  uint64_t v122 = v36;
  sub_253483660();
  uint64_t v136 = sub_253B091F0();
  sub_253465998();
  uint64_t v38 = v37;
  MEMORY[0x270FA5388](v39);
  uint64_t v134 = (char *)v99 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v41);
  uint64_t v121 = (char *)v99 - v42;
  sub_2534B324C();
  MEMORY[0x270FA5388](v43);
  uint64_t v135 = (char *)v99 - v44;
  uint64_t v45 = sub_253483660();
  uint64_t v120 = type metadata accessor for ContextProtoToolRetrievalType(v45);
  sub_2534D8B2C();
  MEMORY[0x270FA5388](v46);
  uint64_t v49 = (char *)v99 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = a1;
  uint64_t v51 = a1[6];
  uint64_t v52 = *(void *)(v51 + 16);
  if (!v52)
  {
    uint64_t v85 = MEMORY[0x263F8EE80];
LABEL_17:
    uint64_t v86 = *v50;
    uint64_t v87 = v50[1];
    uint64_t v89 = v50[2];
    uint64_t v88 = v50[3];
    int v90 = *((_DWORD *)v50 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v91 = v133;
    sub_25394FB40();
    if (v91)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_253AF1980();
LABEL_25:
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v93 = v92;
      sub_253AF1980();
      uint64_t v94 = v99[0];
      *(void *)v99[0] = v86;
      *(void *)(v94 + 8) = v87;
      *(void *)(v94 + 16) = v89;
      *(void *)(v94 + 24) = v88;
      *(_DWORD *)(v94 + 32) = v90;
      *(void *)(v94 + 40) = v93;
      *(void *)(v94 + 48) = v85;
    }
    sub_2536D4C48();
    return;
  }
  uint64_t v100 = v50;
  uint64_t v53 = v51 + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
  uint64_t v116 = v32 + 32;
  uint64_t v115 = v32 + 16;
  uint64_t v117 = (void (**)(uint64_t, uint64_t))(v32 + 8);
  uint64_t v114 = v38 + 32;
  uint64_t v110 = v132 + 32;
  uint64_t v109 = v132 + 16;
  uint64_t v111 = v132 + 8;
  uint64_t v126 = (void (**)(void))(v38 + 16);
  uint64_t v127 = (void (**)(void))(v15 + 32);
  uint64_t v108 = v15 + 16;
  uint64_t v101 = v15 + 40;
  uint64_t v102 = v38;
  uint64_t v113 = (void (**)(char *, uint64_t))(v38 + 8);
  uint64_t v104 = v15 + 8;
  uint64_t v103 = *(void *)(v47 + 72);
  v99[1] = v51;
  swift_bridgeObjectRetain();
  uint64_t v132 = MEMORY[0x263F8EE80];
  uint64_t v54 = v15;
  uint64_t v107 = v3;
  uint64_t v106 = v7;
  uint64_t v105 = v49;
  uint64_t v112 = v2;
  uint64_t v130 = v13;
  while (1)
  {
    uint64_t v129 = v53;
    sub_253AF1A28(v53, (uint64_t)v49);
    uint64_t v55 = v124;
    sub_253961F60((uint64_t)v49, v124, &qword_269CDFAA0);
    uint64_t v56 = sub_253AF34BC();
    uint64_t v57 = v125;
    sub_2534D8B48(v56, v58, v125);
    if (v59)
    {
      sub_253472458(v55, &qword_269CDFAA0);
      uint64_t v137 = v57;
      sub_253462A5C(&qword_269CE5200);
      sub_25396232C();
      sub_253AF2B50();
      uint64_t v95 = sub_2534D969C();
      *uint64_t v96 = v54;
      v96[1] = v57;
      sub_253962224(v95, (uint64_t)v96);
LABEL_22:
      sub_253AF2008();
LABEL_24:
      sub_253AF1980();
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    uint64_t v128 = v52;
    sub_2534DA678();
    uint64_t v60 = v122;
    sub_2534D8E14();
    v61();
    sub_2534DA678();
    sub_2534B3428();
    v62();
    uint64_t v63 = v133;
    sub_253B091E0();
    if (v63)
    {
      (*v117)(v60, v57);
      goto LABEL_22;
    }
    sub_2534659CC();
    v64();
    sub_2534DA678();
    sub_2534D8E14();
    v65();
    sub_253961F60((uint64_t)&v49[*(int *)(v120 + 20)], v3, &qword_269CDFA90);
    sub_2534D8B48(v3, 1, v7);
    if (v59)
    {
      sub_253472458(v3, &qword_269CDFA90);
      uint64_t v137 = v7;
      sub_253462A5C(&qword_269CE51F8);
      sub_25396232C();
      sub_253AF2B50();
      uint64_t v97 = sub_2534D969C();
      *uint64_t v98 = v54;
      v98[1] = v57;
      sub_253962224(v97, (uint64_t)v98);
      sub_253AF2008();
      (*v113)(v135, v136);
      goto LABEL_24;
    }
    uint64_t v66 = v132;
    sub_2534DA678();
    sub_253AF3144();
    sub_2534D8E14();
    v67();
    sub_2534DA678();
    sub_253579334();
    sub_2534B3428();
    v68();
    sub_253B09180();
    uint64_t v133 = 0;
    sub_2534659CC();
    v69();
    uint64_t v70 = *v127;
    sub_25347FA84();
    v70();
    uint64_t v71 = *v126;
    sub_2534AF234();
    v71();
    sub_2534DA678();
    sub_2534B3428();
    v72();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v137 = v66;
    sub_25396E154();
    if (__OFADD__(*(void *)(v66 + 16), (v74 & 1) == 0)) {
      break;
    }
    unint64_t v75 = v73;
    char v76 = v74;
    sub_253462A5C(&qword_269CE85A8);
    if (sub_253B0A190())
    {
      sub_25396E154();
      if ((v76 & 1) != (v78 & 1)) {
        goto LABEL_29;
      }
      unint64_t v75 = v77;
    }
    uint64_t v79 = v137;
    if (v76)
    {
      sub_253A73798();
      v80();
    }
    else
    {
      *(void *)(v137 + 8 * (v75 >> 6) + 64) |= 1 << v75;
      sub_2534AF234();
      v71();
      sub_25347FA84();
      v70();
      sub_253AF2AE0();
      if (v82) {
        goto LABEL_28;
      }
      *(void *)(v79 + 16) = v81;
    }
    uint64_t v132 = v137;
    swift_bridgeObjectRelease();
    sub_253AF2BA8();
    uint64_t v83 = *(void (**)(void))v79;
    sub_2534D9220();
    v83();
    sub_2534DA678();
    sub_2534659CC();
    v84();
    sub_2534D9220();
    v83();
    uint64_t v49 = v105;
    sub_253AF1980();
    uint64_t v53 = v129 + v103;
    uint64_t v52 = v128 - 1;
    uint64_t v7 = v106;
    uint64_t v3 = v107;
    if (v128 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v50 = v100;
      uint64_t v85 = v132;
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  sub_253B0A550();
  __break(1u);
}

uint64_t EntitySpanMatchResult.init(transcript:)(uint64_t a1)
{
  return sub_253AAF8E0(a1, (uint64_t (*)(uint64_t))sub_2539507F4);
}

uint64_t sub_253AAF8E0(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  sub_253AF3CCC(a1);
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = a2(v5);
  uint64_t result = sub_253AF1980();
  if (!v3) {
    *uint64_t v2 = v6;
  }
  return result;
}

void ActionCancellation.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v34 = v5;
  uint64_t v35 = v1;
  uint64_t v6 = sub_2534D9690();
  v32[2] = type metadata accessor for ActionCancellation(v6);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v7);
  uint64_t v33 = (uint64_t)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253AF1D50();
  sub_253465998();
  v32[1] = v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = sub_253AF1C40(v12, v32[0]);
  uint64_t v14 = type metadata accessor for TranscriptProtoStatementID(v13);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v15);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v16);
  sub_253AF1CCC();
  MEMORY[0x270FA5388](v17);
  sub_2534D97C0();
  uint64_t v18 = sub_253462A5C(&qword_26B249528);
  uint64_t v19 = sub_25346CB4C(v18);
  MEMORY[0x270FA5388](v19);
  sub_2534966B0();
  uint64_t v20 = sub_253462A5C(&qword_269CDB460);
  uint64_t v21 = sub_25346CB4C(v20);
  MEMORY[0x270FA5388](v21);
  uint64_t v22 = sub_2534AF2D8();
  type metadata accessor for TranscriptProtoActionCancellation(v22);
  uint64_t v23 = sub_253579270();
  sub_253961F60(v23, v24, &qword_26B249528);
  uint64_t v25 = 1;
  uint64_t v26 = sub_2536D42B0();
  sub_2534D8B48(v26, v27, v14);
  if (!v28)
  {
    sub_253AF2848();
    sub_253AF1A28(v3, v0);
    swift_bridgeObjectRetain();
    sub_253B059B0();
    sub_253AF1980();
    sub_253AF21D4();
    sub_253AF1980();
    uint64_t v25 = 0;
  }
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, v25, 1, v9);
  uint64_t v29 = v35;
  sub_25395E074(v4);
  if (v29)
  {
    sub_253AF1980();
    sub_253472458(v2, &qword_269CDB460);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_253B059B0();
    sub_253AF1980();
    uint64_t v30 = v33;
    sub_253578EBC(v33, 1);
    sub_253961BF0(v2, v30, &qword_269CDB460);
    sub_2534D8E14();
    v31();
    sub_253AF19D0(v30, v34);
    sub_253AF1980();
  }
  sub_2534F8A10();
  sub_2534847C8();
}

#error "253AAFE50: call analysis failed (funcsize=135)"

void StatementResult.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v84 = v1;
  uint64_t v8 = v7;
  uint64_t v9 = sub_253AF2290();
  uint64_t v10 = type metadata accessor for StatementResult(v9);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = sub_25351C4C8(v12, v72);
  uint64_t v14 = type metadata accessor for TranscriptProtoStatementID(v13);
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  uint64_t v79 = (uint64_t)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v17);
  uint64_t v80 = (uint64_t)&v72 - v18;
  sub_253AF1D50();
  sub_253465998();
  uint64_t v77 = v20;
  uint64_t v78 = v19;
  MEMORY[0x270FA5388](v19);
  unint64_t v73 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v22);
  uint64_t v23 = sub_253483660();
  uint64_t v24 = type metadata accessor for TranscriptProtoStatementResultPayload(v23);
  uint64_t v25 = sub_25346CB4C(v24);
  MEMORY[0x270FA5388](v25);
  uint64_t v26 = sub_2534B33AC();
  uint64_t v27 = type metadata accessor for StatementResultPayload(v26);
  uint64_t v28 = sub_25346CB4C(v27);
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = sub_253AF1BE0(v29, v72);
  uint64_t v31 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(v30);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v32);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v33);
  sub_2536D4C9C();
  uint64_t v34 = sub_253462A5C(&qword_269CE0448);
  uint64_t v35 = sub_25346CB4C(v34);
  MEMORY[0x270FA5388](v35);
  sub_2534B340C();
  MEMORY[0x270FA5388](v36);
  sub_2535B3D6C();
  uint64_t v37 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v38 = sub_25346CB4C(v37);
  MEMORY[0x270FA5388](v38);
  sub_25346CB04();
  uint64_t v40 = *(void *)(v8 + 8);
  uint64_t v75 = v10;
  uint64_t v76 = v2;
  uint64_t v85 = v39;
  if (v40)
  {
    sub_253B05560();
  }
  else
  {
    uint64_t v41 = v39;
    uint64_t v42 = sub_253B055C0();
    sub_25346CC08(v41, v43, v44, v42);
  }
  type metadata accessor for TranscriptProtoStatementResult(0);
  sub_253AF32C0();
  sub_253961F60(v45, v46, v47);
  sub_253AF3720();
  sub_253961F60(v48, v49, v50);
  sub_2534D8B48(v3, 1, v31);
  if (v51)
  {
    uint64_t v52 = sub_253A3F354();
    sub_253472458(v52, v53);
    uint64_t v54 = sub_25353CE6C();
    sub_253472458(v54, v55);
    uint64_t v82 = 0;
    uint64_t v83 = 0;
    uint64_t v57 = 0;
    uint64_t v58 = 0;
  }
  else
  {
    sub_253AF38E4();
    sub_253AF1A28(v0, (uint64_t)v4);
    uint64_t v56 = *v4;
    uint64_t v57 = v4[1];
    uint64_t v58 = v4[3];
    uint64_t v82 = v4[2];
    uint64_t v83 = v56;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_253AF1980();
    sub_253472458(v6, &qword_269CE0448);
    sub_253AF1980();
  }
  uint64_t v59 = v84;
  sub_25395E86C(v5);
  if (v59)
  {
    sub_253AF1980();
    sub_253961BAC(v83, v57);
    sub_253472458(v85, (uint64_t *)&unk_26B248CB0);
  }
  else
  {
    uint64_t v60 = sub_253AF3B10();
    StatementResultPayload.init(transcript:)(v60);
    sub_25395E074(v80);
    swift_bridgeObjectRetain();
    sub_253B059B0();
    sub_253AF1980();
    sub_25395E074(v79);
    uint64_t v84 = v8;
    swift_bridgeObjectRetain();
    uint64_t v61 = v73;
    sub_253AF1F34();
    sub_253AF1980();
    uint64_t v62 = sub_253B055C0();
    uint64_t v63 = v74;
    sub_25346CC08(v74, v64, v65, v62);
    uint64_t v66 = v75;
    uint64_t v67 = v63 + *(int *)(v75 + 36);
    *(_OWORD *)uint64_t v67 = 0u;
    *(_OWORD *)(v67 + 16) = 0u;
    sub_253961BF0(v85, v63, (uint64_t *)&unk_26B248CB0);
    sub_253961BAC(*(void *)v67, *(void *)(v67 + 8));
    *(void *)uint64_t v67 = v83;
    *(void *)(v67 + 8) = v57;
    uint64_t v68 = v81;
    *(void *)(v67 + 16) = v82;
    *(void *)(v67 + 24) = v58;
    sub_253AF19D0(v68, v63 + *(int *)(v66 + 20));
    uint64_t v70 = v77;
    uint64_t v69 = v78;
    uint64_t v71 = *(void (**)(void))(v77 + 32);
    sub_253A3E6A4();
    v71();
    (*(void (**)(uint64_t, char *, uint64_t))(v70 + 16))(v63 + *(int *)(v66 + 28), v61, v69);
    sub_253A3E6A4();
    v71();
    sub_253AF19D0(v63, v76);
    sub_253AF1980();
  }
  sub_2534F8590();
  sub_2534847C8();
}

void ExternalAgentTextQuery.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  uint64_t v17 = v16;
  uint64_t v19 = sub_253AF2150(v18);
  uint64_t v70 = type metadata accessor for ExternalAgentTextQuery(v19);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = sub_253AF1C00(v21, v63);
  uint64_t v67 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(v22);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v23);
  sub_2534D9C38();
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  sub_253A737FC(v25, v26, v27, v28, v29, v30, v31, v32, v64);
  uint64_t v33 = sub_253462A5C(&qword_269CE1AD0);
  uint64_t v34 = sub_25346CB4C(v33);
  MEMORY[0x270FA5388](v34);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v35);
  sub_2534D9E98();
  uint64_t v36 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v37 = sub_25346CB4C(v36);
  MEMORY[0x270FA5388](v37);
  sub_25353CE24();
  MEMORY[0x270FA5388](v38);
  sub_2534D9EC0();
  uint64_t v39 = v17[1];
  uint64_t v68 = *v17;
  if (v17[3])
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_253B05560();
    sub_25395D974();
    sub_253472458(v10, (uint64_t *)&unk_26B248CB0);
    if (v11)
    {
      swift_bridgeObjectRelease();
      sub_253AF1980();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    uint64_t v65 = v39;
    uint64_t v43 = sub_253B055C0();
    sub_253AF3AA0(v43);
  }
  else
  {
    uint64_t v40 = sub_253B055C0();
    sub_25346CC08(v14, v41, v42, v40);
    uint64_t v65 = v39;
    swift_bridgeObjectRetain();
  }
  uint64_t v44 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
  sub_253961F60((uint64_t)v17 + *(int *)(v44 + 24), v13, &qword_269CE1AD0);
  uint64_t v45 = sub_2535791E4();
  sub_253961F60(v45, v46, &qword_269CE1AD0);
  uint64_t v47 = sub_2536D42D4();
  sub_2534D8B48(v47, v48, v67);
  if (v49)
  {
    sub_253472458(v13, &qword_269CE1AD0);
    sub_253472458(v15, &qword_269CE1AD0);
    uint64_t v53 = 0;
    uint64_t v52 = 0;
    uint64_t v54 = 0;
  }
  else
  {
    sub_253AF19D0(v15, v66);
    uint64_t v50 = sub_253971DD4();
    sub_253AF1A28(v50, v51);
    uint64_t v53 = *v12;
    uint64_t v52 = v12[1];
    uint64_t v54 = v12[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_253AF1980();
    sub_253472458(v13, &qword_269CE1AD0);
    sub_2534D96CC();
    sub_253AF1980();
  }
  uint64_t v55 = (uint64_t)v69 + *(int *)(v70 + 20);
  uint64_t v56 = sub_253B055C0();
  sub_25346CC08(v55, v57, v58, v56);
  uint64_t v59 = (void *)((char *)v69 + *(int *)(v70 + 24));
  *uint64_t v59 = 0;
  v59[1] = 0;
  v59[2] = 0;
  *uint64_t v69 = v68;
  v69[1] = v65;
  uint64_t v60 = sub_2535791D8();
  sub_253961BF0(v60, v61, v62);
  sub_253961E88(*v59, v59[1]);
  *uint64_t v59 = v53;
  v59[1] = v52;
  v59[2] = v54;
  sub_253AF19D0((uint64_t)v69, a10);
  sub_253AF1980();
LABEL_10:
  sub_2536D3D5C();
  sub_2534847C8();
}

void ExternalAgentSpeechQuery.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v8 = v7;
  uint64_t v10 = sub_253962754(v9);
  uint64_t v60 = type metadata accessor for ExternalAgentSpeechQuery(v10);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = sub_25349888C();
  uint64_t v13 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(v12);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v14);
  sub_2534D8CE4();
  MEMORY[0x270FA5388](v15);
  sub_2535B3D6C();
  uint64_t v16 = sub_253462A5C(&qword_269CE1AD0);
  uint64_t v17 = sub_25346CB4C(v16);
  MEMORY[0x270FA5388](v17);
  sub_2534B340C();
  MEMORY[0x270FA5388](v18);
  sub_2534D90F4();
  uint64_t v19 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v20 = sub_25346CB4C(v19);
  MEMORY[0x270FA5388](v20);
  sub_25353CE24();
  MEMORY[0x270FA5388](v21);
  sub_2536D4170();
  uint64_t v22 = swift_bridgeObjectRetain();
  sub_253951DEC(v22, v23, v24, v25, v26, v27, v28, v29, v56, v57);
  if (!v1)
  {
    uint64_t v58 = v3;
    uint64_t v59 = v30;
    if (*(void *)(v8 + 16))
    {
      swift_bridgeObjectRetain();
      sub_253B05560();
      sub_25395D974();
      sub_253472458(v0, (uint64_t *)&unk_26B248CB0);
      uint64_t v34 = sub_253B055C0();
      sub_253971DA8(v2, v35, v36, v34);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v31 = sub_253B055C0();
      sub_25346CC08(v2, v32, v33, v31);
    }
    uint64_t v37 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
    sub_253961F60(v8 + *(int *)(v37 + 24), v3, &qword_269CE1AD0);
    sub_253961F60(v3, v4, &qword_269CE1AD0);
    uint64_t v38 = sub_2536D54B0();
    sub_2534D8B48(v38, v39, v13);
    if (v40)
    {
      uint64_t v41 = sub_2536D44B0();
      sub_253472458(v41, v42);
      uint64_t v43 = sub_2534DA828();
      sub_253472458(v43, v44);
      uint64_t v50 = 0;
      uint64_t v49 = 0;
      uint64_t v51 = 0;
    }
    else
    {
      uint64_t v45 = sub_253578DF8();
      sub_253AF19D0(v45, v46);
      uint64_t v47 = sub_2536D5500();
      sub_253AF1A28(v47, v48);
      uint64_t v50 = *v5;
      uint64_t v49 = v5[1];
      uint64_t v51 = v5[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_253AF1980();
      sub_253472458(v58, &qword_269CE1AD0);
      sub_253A3D518();
      sub_253AF1980();
    }
    uint64_t v52 = (uint64_t)v6 + *(int *)(v60 + 20);
    uint64_t v53 = sub_253B055C0();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v52, 1, 1, v53);
    sub_253AF38B0();
    *uint64_t v6 = v59;
    sub_253AF2670(v54, v55, (uint64_t *)&unk_26B248CB0);
    sub_253961E88(*(void *)v60, *(void *)(v60 + 8));
    *(void *)uint64_t v60 = v50;
    *(void *)(v60 + 8) = v49;
    *(void *)(v60 + 16) = v51;
    sub_253AF19D0((uint64_t)v6, v61);
  }
  sub_253AF1980();
  sub_253579494();
  sub_2534847C8();
}

void ExternalAgentRequest.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  uint64_t v17 = v16;
  uint64_t v19 = sub_253AF2150(v18);
  uint64_t v76 = type metadata accessor for ExternalAgentRequest(v19);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = sub_253AF1E1C(v21, v68);
  uint64_t v74 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(v22);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v23);
  uint64_t v75 = (uint64_t *)((char *)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2534B324C();
  MEMORY[0x270FA5388](v25);
  sub_2536D4170();
  uint64_t v26 = sub_253462A5C(&qword_269CE1AD0);
  uint64_t v27 = sub_25346CB4C(v26);
  MEMORY[0x270FA5388](v27);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v28);
  sub_2534D90F4();
  uint64_t v29 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v30 = sub_25346CB4C(v29);
  MEMORY[0x270FA5388](v30);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v31);
  uint64_t v32 = sub_253A737E8();
  uint64_t v33 = type metadata accessor for TranscriptProtoRequestContent(v32);
  uint64_t v34 = sub_25346CB4C(v33);
  MEMORY[0x270FA5388](v34);
  uint64_t v35 = sub_2534B33AC();
  uint64_t v36 = type metadata accessor for RequestContent(v35);
  uint64_t v37 = sub_25346CB4C(v36);
  MEMORY[0x270FA5388](v37);
  sub_253AF2DDC();
  sub_25395E77C(v38);
  if (!v11)
  {
    uint64_t v69 = v10;
    uint64_t v70 = v13;
    uint64_t v71 = v12;
    uint64_t v72 = v14;
    uint64_t v73 = v17;
    sub_253AF3B10();
    RequestContent.init(transcript:)();
    type metadata accessor for TranscriptProtoExternalAgentRequest(0);
    sub_253AF2700();
    uint64_t v39 = v73;
    if (*(void *)(v73 + v40 + 8))
    {
      swift_bridgeObjectRetain();
      sub_253B05560();
      sub_253AF369C();
      sub_25395D974();
      sub_253472458(v15, (uint64_t *)&unk_26B248CB0);
      uint64_t v44 = sub_253B055C0();
      sub_253971DA8(v13, v45, v46, v44);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v41 = sub_253B055C0();
      sub_25346CC08(v72, v42, v43, v41);
    }
    uint64_t v47 = v70;
    sub_253961F60(v39 + *(int *)(v10 + 24), v70, &qword_269CE1AD0);
    sub_253961F60(v47, v69, &qword_269CE1AD0);
    uint64_t v48 = sub_2536D54B0();
    sub_2534D8B48(v48, v49, v74);
    uint64_t v50 = v77;
    uint64_t v51 = v75;
    if (v52)
    {
      sub_253472458(v47, &qword_269CE1AD0);
      uint64_t v53 = sub_2535787F4();
      sub_253472458(v53, v54);
      uint64_t v62 = 0;
      uint64_t v59 = 0;
      uint64_t v60 = 0;
    }
    else
    {
      uint64_t v55 = sub_2534D9B1C();
      sub_253AF19D0(v55, v56);
      uint64_t v57 = sub_25353CE60();
      sub_253AF1A28(v57, v58);
      uint64_t v59 = v51[1];
      uint64_t v74 = *v51;
      uint64_t v60 = v51[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_253AF1980();
      uint64_t v61 = v47;
      uint64_t v62 = v74;
      sub_253472458(v61, &qword_269CE1AD0);
      sub_253AF1980();
    }
    uint64_t v63 = (uint64_t *)v76;
    uint64_t v64 = v50 + *(int *)(v76 + 20);
    uint64_t v65 = sub_253B055C0();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v64, 1, 1, v65);
    sub_253AF38B0();
    uint64_t v66 = sub_2536D5500();
    sub_253AF19D0(v66, v67);
    sub_253961BF0(v72, v64, (uint64_t *)&unk_26B248CB0);
    sub_253961E88(*v63, v63[1]);
    *uint64_t v63 = v62;
    v63[1] = v59;
    v63[2] = v60;
    sub_253AF19D0(v50, a10);
  }
  sub_253AF1980();
  sub_2534F8590();
  sub_2534847C8();
}

#error "253AB12C8: call analysis failed (funcsize=158)"

uint64_t ExternalAgentRequestRewriteMetadata.init(transcript:)()
{
  sub_253AF3104();
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v4 = v1[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_253AF1980();
  *uint64_t v0 = v3;
  v0[1] = v2;
  v0[2] = v4;
  return result;
}

void ToolResolution.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v3 = type metadata accessor for TranscriptProtoStatementID(0);
  uint64_t v4 = sub_25346CB4C(v3);
  MEMORY[0x270FA5388](v4);
  uint64_t v26 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v6);
  uint64_t v25 = (uint64_t)v23 - v7;
  uint64_t v8 = sub_253AF1D50();
  sub_253465998();
  uint64_t v24 = v9;
  MEMORY[0x270FA5388](v10);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v11);
  sub_2534DA41C();
  uint64_t v12 = sub_253B08F30();
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  sub_2534D8CAC();
  uint64_t v14 = sub_253B08B30();
  sub_253465998();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  sub_253465A3C();
  sub_25395E434();
  if (v0)
  {
    sub_253AF1980();
  }
  else
  {
    v23[3] = v14;
    unsigned char v23[4] = v16;
    uint64_t v18 = (uint64_t)v26;
    v23[1] = v2;
    _OWORD v23[2] = v8;
    sub_253AF3864();
    ToolDefinition.init(transcript:)(v19);
    uint64_t v20 = type metadata accessor for TranscriptProtoToolResolution(0);
    sub_25395E074(v25);
    v23[0] = v20;
    swift_bridgeObjectRetain();
    sub_253B059B0();
    sub_253AF1980();
    sub_25395E074(v18);
    swift_bridgeObjectRetain();
    uint64_t v25 = v1;
    sub_253AF241C();
    sub_253AF1980();
    sub_253AF1980();
    sub_253A3E6A4();
    v21();
    type metadata accessor for ToolResolution(0);
    sub_253AF2700();
    uint64_t v22 = *(void (**)(void))(v24 + 32);
    sub_253AF2560();
    v22();
    sub_253AF2560();
    v22();
  }
  sub_253A3C6AC();
  sub_2534847C8();
}

void UndoRedoRequest.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  uint64_t v17 = sub_253A733C8();
  uint64_t v58 = (int *)type metadata accessor for UndoRedoRequest(v17);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v18);
  sub_2534847E0();
  uint64_t v19 = sub_253462A5C(&qword_26B249528);
  uint64_t v20 = sub_25346CB4C(v19);
  MEMORY[0x270FA5388](v20);
  sub_2534D8F84(v21, v50);
  uint64_t v22 = sub_253462A5C(&qword_269CDB460);
  uint64_t v23 = sub_25346CB4C(v22);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = sub_253AF1C20(v24, v51);
  uint64_t v26 = type metadata accessor for TranscriptProtoStatementID(v25);
  uint64_t v27 = sub_25346CB4C(v26);
  MEMORY[0x270FA5388](v27);
  sub_253A3C4DC();
  sub_253465998();
  uint64_t v57 = v28;
  MEMORY[0x270FA5388](v28);
  sub_253AF1DD8(v29, v52);
  uint64_t v30 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v31 = sub_25346CB4C(v30);
  MEMORY[0x270FA5388](v31);
  sub_25353CE24();
  MEMORY[0x270FA5388](v32);
  sub_2534D9EC0();
  uint64_t v33 = v12[1];
  uint64_t v55 = *v12;
  if (v12[4])
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_253B05560();
    sub_25395D974();
    sub_253472458(v11, (uint64_t *)&unk_26B248CB0);
    if (v10)
    {
      swift_bridgeObjectRelease();
      sub_253AF1980();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    uint64_t v37 = sub_253B055C0();
    sub_253AF3AA0(v37);
  }
  else
  {
    uint64_t v34 = sub_253B055C0();
    sub_25346CC08(v15, v35, v36, v34);
    swift_bridgeObjectRetain();
  }
  char v54 = *((unsigned char *)v12 + 16);
  uint64_t v38 = type metadata accessor for TranscriptProtoUndoRedoRequest(0);
  sub_25395E074(v16);
  if (v10)
  {
    swift_bridgeObjectRelease();
    sub_253AF1980();
    sub_253472458(v15, (uint64_t *)&unk_26B248CB0);
  }
  else
  {
    uint64_t v53 = v13;
    swift_bridgeObjectRetain();
    sub_253AF241C();
    sub_253AF1980();
    sub_253961F60((uint64_t)v12 + *(int *)(v38 + 32), v56, &qword_26B249528);
    sub_25395B4D4();
    uint64_t v39 = (uint64_t)v14 + v58[5];
    uint64_t v40 = sub_253B055C0();
    sub_25346CC08(v39, v41, v42, v40);
    uint64_t v43 = (uint64_t)v14 + v58[8];
    sub_253465A98();
    uint64_t v47 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v44, v45, v46, v57);
    *uint64_t v14 = v55;
    v14[1] = v33;
    sub_253AF3B34(v47, v48, (uint64_t *)&unk_26B248CB0);
    *((unsigned char *)v14 + v58[6]) = v54;
    sub_253AF3920();
    sub_2534D8E14();
    v49();
    sub_253961BF0(a10, v43, &qword_269CDB460);
    sub_253AF19D0((uint64_t)v14, v53);
    sub_253AF1980();
  }
LABEL_9:
  sub_2536D3D5C();
  sub_2534847C8();
}

void ClientUndoRedoRequest.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v2 = v1;
  uint64_t v4 = sub_253AF2BE8(v3);
  uint64_t v38 = type metadata accessor for ClientUndoRedoRequest(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  sub_25347FA68(v6, v32);
  uint64_t v7 = sub_253462A5C(&qword_26B249528);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_2536D2C5C(v9, v32);
  uint64_t v10 = sub_253462A5C(&qword_269CDB460);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = sub_253AF231C();
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  uint64_t v41 = (int *)((char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_253AF1D50();
  sub_253465998();
  uint64_t v37 = v16;
  MEMORY[0x270FA5388](v17);
  sub_253A3DC4C();
  sub_253465998();
  uint64_t v42 = v18;
  MEMORY[0x270FA5388](v19);
  sub_25346CC6C();
  uint64_t v20 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v21 = sub_25346CB4C(v20);
  MEMORY[0x270FA5388](v21);
  sub_25346CC54();
  sub_253B05560();
  sub_25395D974();
  uint64_t v22 = sub_2536D500C();
  sub_253472458(v22, v23);
  if (!v0)
  {
    uint64_t v35 = v15;
    uint64_t v24 = v40;
    int v34 = *(unsigned __int8 *)(v2 + 16);
    type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
    sub_253AF2AD4();
    uint64_t v25 = v41;
    sub_25395E074((uint64_t)v41);
    int v33 = *v25;
    swift_bridgeObjectRetain();
    sub_253B059B0();
    sub_253AF1980();
    sub_253961F60(dword_26B248CCC, v24, &qword_26B249528);
    sub_253AF2688();
    sub_25395B4D4();
    uint64_t v26 = v38;
    uint64_t v27 = v36;
    sub_253AF1E48(v36 + *(int *)(v38 + 28), 1);
    sub_253AF30A0();
    sub_2534DA154();
    sub_2534D8E14();
    v28();
    *(unsigned char *)(v27 + *(int *)(v26 + 20)) = v34;
    sub_2534D8E14();
    uint64_t v30 = v29();
    sub_253AF3B34(v30, v31, &qword_269CDB460);
    sub_253AF19D0(v27, v39);
  }
  sub_253AF1980();
  sub_253579494();
  sub_2534847C8();
}

void TypeConversionRequest.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v4 = sub_253AF389C(v3);
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementID(v4);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v42 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253AF1D50();
  sub_253465998();
  uint64_t v40[6] = v9;
  v40[7] = v8;
  MEMORY[0x270FA5388](v8);
  sub_253AF225C((uint64_t)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_253B08E60();
  sub_253465998();
  v40[11] = v12;
  v40[12] = v11;
  MEMORY[0x270FA5388](v11);
  v40[10] = (uint64_t)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  sub_2536D3010(v15, v16, v17, v18, v19, v20, v21, v22, v40[0]);
  uint64_t v23 = sub_253B09150();
  sub_253465998();
  v40[9] = v24;
  MEMORY[0x270FA5388](v25);
  sub_2536D37B0();
  sub_253465998();
  v40[14] = v27;
  uint64_t v41 = v26;
  MEMORY[0x270FA5388](v26);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v28);
  sub_2534DA41C();
  uint64_t v29 = sub_253B09120();
  sub_253465998();
  uint64_t v31 = v30;
  MEMORY[0x270FA5388](v32);
  sub_2534847E0();
  sub_25395DCE8();
  if (v1)
  {
    sub_253AF1980();
  }
  else
  {
    v40[3] = v31;
    v40[4] = v29;
    v40[1] = v23;
    v40[2] = v2;
    sub_253AF2658();
    sub_253AF2B04();
    sub_2534AF234();
    v33();
    sub_253B09110();
    sub_2534D97B4();
    v34();
    type metadata accessor for TranscriptProtoTypeConversionRequest(0);
    sub_253AF2700();
    sub_25395DFE8();
    sub_253A3E5D4();
    sub_2534AF234();
    v35();
    sub_253AF3B10();
    sub_253B09140();
    uint64_t v41 = v0;
    sub_2534D97B4();
    v36();
    sub_25395E074((uint64_t)v42);
    swift_bridgeObjectRetain();
    sub_253AF1F34();
    sub_253AF1980();
    sub_253AF1980();
    sub_253A3C378();
    v37();
    type metadata accessor for TypeConversionRequest(0);
    sub_253AF2700();
    sub_2534D8E14();
    v38();
    sub_2534D8E14();
    v39();
  }
  sub_2534F8590();
  sub_2534847C8();
}

void TypeConversionResult.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v4 = sub_253AF3CC0(v3);
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementID(v4);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v31 = (uint64_t)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v8);
  uint64_t v32 = (uint64_t)v28 - v9;
  sub_253AF1D50();
  sub_253465998();
  uint64_t v29 = v11;
  uint64_t v30 = v10;
  MEMORY[0x270FA5388](v10);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v12);
  sub_2534DA430();
  sub_253B08E50();
  sub_253465998();
  uint64_t v33 = v13;
  MEMORY[0x270FA5388](v14);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_253AF252C();
  sub_253465998();
  uint64_t v18 = v17;
  MEMORY[0x270FA5388](v19);
  sub_253AF20CC();
  sub_25395DCE8();
  if (v1)
  {
    sub_253AF1980();
  }
  else
  {
    void v28[2] = v18;
    v28[3] = v16;
    v28[0] = v0;
    v28[1] = v2;
    sub_253AF2FC0();
    sub_253578AC4();
    sub_2534AF234();
    v20();
    sub_253AF3088();
    sub_253B09110();
    sub_2534D91AC();
    v21();
    type metadata accessor for TranscriptProtoTypeConversionResult(0);
    sub_25395E074(v32);
    swift_bridgeObjectRetain();
    sub_253AF281C();
    sub_253B059B0();
    sub_253AF1980();
    uint64_t v22 = v31;
    sub_25395E074(v31);
    swift_bridgeObjectRetain();
    uint64_t v23 = v28[0];
    sub_253AF241C();
    sub_253AF1980();
    sub_253AF1980();
    uint64_t v24 = v28[4];
    sub_253579334();
    sub_253A3C378();
    v25();
    type metadata accessor for TypeConversionResult(0);
    sub_253AF2700();
    uint64_t v26 = v30;
    uint64_t v27 = *(void (**)(void))(v29 + 32);
    sub_253AF2560();
    v27();
    ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v24 + *(int *)(v22 + 24), v23, v26);
  }
  sub_253578DEC();
  sub_2534847C8();
}

void QueryDecorationResult.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v6 = v5;
  uint64_t v7 = sub_253AF226C();
  uint64_t DecorationResult = (int *)type metadata accessor for QueryDecorationResult(v7);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v9);
  sub_2534966B0();
  uint64_t v10 = sub_253462A5C(&qword_269CDFA00);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  sub_25347FAAC();
  uint64_t v12 = sub_253462A5C(&qword_269CDBB30);
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  sub_253AF2CA4();
  uint64_t v14 = swift_bridgeObjectRetain();
  sub_2539507F4(v14, v15, v16, v17, v18, v19, v20, v21, v66, v72);
  if (!v0)
  {
    uint64_t v23 = v22;
    uint64_t v24 = swift_bridgeObjectRetain();
    sub_2539542B0(v24, v25, v26, v27, v28, v29, v30, v31, v67, v73);
    uint64_t v33 = v32;
    uint64_t v34 = swift_bridgeObjectRetain();
    sub_2539542B0(v34, v35, v36, v37, v38, v39, v40, v41, v68, v74);
    uint64_t v78 = v42;
    uint64_t v43 = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
    sub_253961F60(v6 + *(int *)(v43 + 36), v4, &qword_269CDFA00);
    sub_25395B33C();
    uint64_t v44 = swift_bridgeObjectRetain();
    sub_2539561E0(v44, v45, v46, v47, v48, v49, v50, v51, v69, v75);
    uint64_t v53 = v52;
    uint64_t v54 = swift_bridgeObjectRetain();
    sub_2539542B0(v54, v55, v56, v57, v58, v59, v60, v61, v70, v76);
    uint64_t v71 = v62;
    uint64_t v77 = (uint64_t)v3 + DecorationResult[7];
    uint64_t v63 = sub_253B08270();
    sub_25346CC08(v77, v64, v65, v63);
    *uint64_t v3 = v23;
    v3[1] = v33;
    v3[2] = v78;
    sub_253961BF0(v2, v77, &qword_269CDBB30);
    *(void *)((char *)v3 + DecorationResult[8]) = v53;
    *(void *)((char *)v3 + DecorationResult[9]) = v71;
    sub_253AF19D0((uint64_t)v3, v1);
  }
  sub_253AF1980();
  sub_2534F8A10();
  sub_2534847C8();
}

uint64_t ContinuePlanning.init(transcript:)()
{
  return sub_253AF1980();
}

void QueryDecorationPrePlannerResult.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  uint64_t v14 = v13;
  uint64_t v16 = sub_253AF2150(v15);
  uint64_t DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(v16);
  uint64_t v18 = sub_25346CB4C(DecorationPrePlannerResultPayload);
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = sub_253AF1DF4();
  uint64_t v20 = sub_25346CB4C(v19);
  MEMORY[0x270FA5388](v20);
  sub_253A3C4DC();
  sub_253465998();
  MEMORY[0x270FA5388](v21);
  uint64_t v22 = sub_2534D8CAC();
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(v22);
  sub_253AF2C30();
  sub_25395E074(v12);
  if (v10)
  {
    sub_253AF1980();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_253AF2A1C();
    sub_253AF1980();
    uint64_t v23 = *v14;
    uint64_t v24 = v14[1];
    swift_bridgeObjectRetain();
    sub_25395E0C4(v11);
    QueryDecorationPrePlannerResultPayload.init(transcript:)();
    sub_253AF1980();
    sub_253A3C378();
    v25();
    uint64_t DecorationPrePlannerResult = type metadata accessor for QueryDecorationPrePlannerResult(0);
    uint64_t v27 = (void *)(a10 + *(int *)(DecorationPrePlannerResult + 20));
    *uint64_t v27 = v23;
    v27[1] = v24;
    uint64_t v28 = a10 + *(int *)(DecorationPrePlannerResult + 24);
    *(void *)uint64_t v28 = v29;
    *(unsigned char *)(v28 + 8) = v30;
  }
  sub_253578DEC();
  sub_2534847C8();
}

#error "253AB2C6C: call analysis failed (funcsize=6)"

uint64_t sub_253AB2C78()
{
  return sub_253A94ED8();
}

void TranscriptProtoSessionStart.init(handwritten:)()
{
  sub_2534B3258();
  uint64_t v4 = sub_253AF21FC(v3);
  type metadata accessor for TranscriptProtoSessionStart(v4);
  sub_2535B3D7C();
  MEMORY[0x270FA5388](v5);
  sub_2534B3294();
  uint64_t v6 = sub_253462A5C(&qword_26B248CD0);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_2534966B0();
  uint64_t v8 = sub_253462A5C(&qword_26B249680);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  sub_2534D8CAC();
  sub_253B05D70();
  sub_253465998();
  MEMORY[0x270FA5388](v10);
  sub_25346CC54();
  uint64_t v11 = sub_253462A5C(&qword_26B2497A0);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  sub_25347FAAC();
  uint64_t v13 = sub_2534D9778();
  v14(v13);
  TranscriptProtoLocaleSettings.init(handwritten:)();
  uint64_t v15 = type metadata accessor for TranscriptProtoLocaleSettings(0);
  uint64_t v16 = sub_253AF1CDC(v2, 0, 1, v15);
  uint64_t v17 = type metadata accessor for SessionStart(v16);
  uint64_t v18 = sub_253A3E348(v17);
  sub_253961F60(v18, v1, &qword_26B248CD0);
  sub_253961704();
  sub_253945180(v0);
  type metadata accessor for TranscriptProtoDeviceDetails(0);
  uint64_t v19 = sub_253A73E04();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v19, v20, v21, v22);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v23 = sub_253A3D030();
  sub_253961BF0(v23, v24, &qword_26B2497A0);
  uint64_t v25 = sub_2536D3F90();
  sub_253961BF0(v25, v26, &qword_26B249680);
  sub_253AF19D0(v0, v27);
  sub_253AF1980();
  sub_253465A14();
}

void TranscriptProtoTextQuery.init(handwritten:)()
{
  sub_2534847F8();
  sub_253AF367C();
  sub_253AF2290();
  sub_253B059D0();
  sub_2534727C4();
  MEMORY[0x270FA5388](v3);
  sub_25346CC54();
  uint64_t v4 = sub_253462A5C(&qword_26B249528);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_25346CC6C();
  uint64_t v26 = *v0;
  uint64_t v24 = v0[1];
  char v25 = *((unsigned char *)v0 + 16);
  uint64_t v23 = type metadata accessor for TextQuery(0);
  sub_253AF2870();
  sub_2534AF234();
  v6();
  swift_bridgeObjectRetain();
  int v7 = sub_253B059C0();
  uint64_t v8 = sub_253B059A0();
  uint64_t v10 = v9;
  uint64_t v11 = type metadata accessor for TranscriptProtoStatementID(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v2 = v7;
  *(void *)(v2 + 8) = v8;
  *(void *)(v2 + 16) = v10;
  sub_2534D9A08();
  v12();
  sub_253A7385C(v2, 0);
  uint64_t v13 = (uint64_t *)((char *)v0 + *(int *)(v23 + 28));
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  uint64_t v16 = type metadata accessor for TranscriptProtoTextQuery(0);
  uint64_t v17 = sub_253A3D714();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v17, v18, v19, v11);
  uint64_t v20 = (void *)(v1 + *(int *)(v16 + 28));
  *uint64_t v20 = 0;
  v20[1] = 0;
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)uint64_t v1 = v26;
  *(void *)(v1 + 8) = v24;
  *(unsigned char *)(v1 + 16) = v25;
  uint64_t v21 = sub_2534D9724();
  sub_253961BF0(v21, v22, &qword_26B249528);
  swift_bridgeObjectRelease();
  *uint64_t v20 = v15;
  v20[1] = v14;
  sub_253AF1980();
  sub_253962714();
  sub_2534847C8();
}

#error "253AB30E0: call analysis failed (funcsize=36)"

void TranscriptProtoRequest.init(handwritten:)()
{
  sub_2534847F8();
  sub_253AF3D74();
  uint64_t v5 = sub_253462A5C(&qword_269CE1AD0);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_253465A3C();
  uint64_t v7 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_25346CC54();
  uint64_t v9 = sub_253462A5C(&qword_269CDBB20);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  sub_2534B34A4();
  uint64_t v11 = sub_253462A5C(&qword_269CE1AE0);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_25348360C();
  uint64_t v14 = type metadata accessor for RequestContent(v13);
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  sub_25347FAAC();
  uint64_t v16 = sub_253462A5C(&qword_269CE1AF0);
  uint64_t v17 = sub_25346CB4C(v16);
  MEMORY[0x270FA5388](v17);
  sub_2534966B0();
  uint64_t v18 = sub_253592678();
  sub_253AF1A28(v18, v19);
  TranscriptProtoRequestContent.init(handwritten:)();
  if (!v2)
  {
    uint64_t v20 = type metadata accessor for TranscriptProtoRequestContent(0);
    uint64_t v21 = sub_253AF1CDC(v3, 0, 1, v20);
    uint64_t v22 = (int *)type metadata accessor for Request(v21);
    sub_253961F60(v0 + v22[6], v4, &qword_269CDBB20);
    sub_25396156C(v4);
    sub_253961F60(v0 + v22[7], v1, (uint64_t *)&unk_26B248CB0);
    uint64_t v23 = sub_253B055C0();
    sub_2534D8B48(v1, 1, v23);
    if (v24)
    {
      sub_253472458(v1, (uint64_t *)&unk_26B248CB0);
    }
    else
    {
      sub_253B05570();
      sub_25347B88C();
      uint64_t v25 = sub_253AF2A60();
      v26(v25);
    }
    sub_253AF2B68(v22[8]);
    sub_253AF3250();
    sub_25395F758(v27, v28, v29, v30);
    sub_253AF2770();
    TranscriptProtoRequest.init(content:safetyMode:prescribedPlan:rawRewriteMetadataEventID:rewriteMetadataInlined:)();
  }
  sub_253AF1980();
  sub_2534F8590();
  sub_2534847C8();
}

uint64_t TranscriptProtoPlan.init(handwritten:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1[1];
  uint64_t v23 = *a1;
  uint64_t v5 = a1[3];
  uint64_t v21 = (uint64_t (*)(uint64_t))a1[2];
  uint64_t v6 = a1[5];
  uint64_t v7 = a1[6];
  char v8 = *((unsigned char *)a1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_253A64D78(v9, v10, v11, v12, v13, v14, v15, v16, v20, v21);
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = v17;
    type metadata accessor for TranscriptProtoPlan(0);
    swift_bridgeObjectRetain();
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a2 = v23;
    *(void *)(a2 + 8) = v4;
    *(void *)(a2 + 16) = v22;
    *(void *)(a2 + 24) = v5;
    *(void *)(a2 + 32) = v19;
    *(void *)(a2 + 40) = v6;
    *(void *)(a2 + 48) = v7;
    *(unsigned char *)(a2 + 56) = v8 + 1;
  }
  return result;
}

void TranscriptProtoRecoverableError.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  uint64_t v5 = sub_253962754(v4);
  uint64_t v31 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(v5);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_2534D8CAC();
  uint64_t v8 = type metadata accessor for TranscriptProtoPlanGenerationError(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_25349888C();
  uint64_t v33 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(v9);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v10);
  uint64_t v30 = (uint64_t)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v12);
  sub_253AF2178((uint64_t)&v29 - v13);
  uint64_t v14 = *v3;
  uint64_t v15 = v3[1];
  uint64_t v16 = v3[2];
  uint64_t v17 = v3[3];
  uint64_t v19 = v3[4];
  uint64_t v18 = v3[5];
  type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v0 = v14;
  v0[1] = v15;
  v0[2] = v16;
  v0[3] = v17;
  v0[4] = v19;
  v0[5] = v18;
  sub_253465A98();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v20, v21, v22, v31);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253472458(v1, &qword_269CE1EF0);
  sub_253AF19D0((uint64_t)v0, v1);
  sub_2534AF368(v1);
  uint64_t v23 = v30;
  sub_253AF19D0(v1, v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_253AF19D0(v23, v32);
  uint64_t v25 = v33;
  uint64_t v24 = v34;
  uint64_t v26 = sub_253AF1CDC(v34, 1, 1, v33);
  type metadata accessor for TranscriptProtoRecoverableError(v26);
  sub_2539457F0();
  sub_253472458(v24, &qword_269CE1ED8);
  uint64_t v27 = sub_2534DA828();
  sub_253AF19D0(v27, v28);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v24, 0, 1, v25);
  sub_253962714();
  sub_2534847C8();
}

void TranscriptProtoAction.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v4 = v3;
  uint64_t v46 = v5;
  uint64_t v6 = sub_253462A5C(&qword_269CE0448);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v45 = (uint64_t *)((char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_253AF1D50();
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  sub_25346CC54();
  uint64_t v10 = sub_253462A5C(&qword_26B249528);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534AF234();
  v14();
  int v15 = sub_253B059C0();
  sub_253B059A0();
  sub_253AF2AC8();
  uint64_t v16 = type metadata accessor for TranscriptProtoStatementID(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v13 = v15;
  *((void *)v13 + 1) = v1;
  *((void *)v13 + 2) = v2;
  sub_25351C3E8();
  v17();
  uint64_t v18 = sub_253AF1CDC((uint64_t)v13, 0, 1, v16);
  uint64_t v19 = (int *)type metadata accessor for Action(v18);
  uint64_t v20 = (uint64_t *)(v4 + v19[9]);
  uint64_t v21 = *v20;
  uint64_t v22 = v20[1];
  uint64_t v23 = v19[6];
  uint64_t v24 = (uint64_t *)(v4 + v19[5]);
  uint64_t v25 = *v24;
  uint64_t v26 = v24[1];
  uint64_t v27 = v20[2];
  uint64_t v28 = v20[3];
  uint64_t v42 = v25;
  uint64_t v43 = v27;
  int v44 = *(unsigned __int8 *)(v4 + v23);
  uint64_t v29 = *(void *)(v4 + v19[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_253AE67D4(v29);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_253AF1980();
    sub_253472458((uint64_t)v13, &qword_26B249528);
  }
  else
  {
    uint64_t v47 = v30;
    swift_bridgeObjectRelease();
    uint64_t v31 = (uint64_t *)(v4 + v19[8]);
    uint64_t v32 = *v31;
    uint64_t v40 = v31[1];
    uint64_t v41 = v32;
    uint64_t v39 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
    uint64_t v33 = v21;
    uint64_t v34 = v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *uint64_t v34 = v33;
    v34[1] = v22;
    uint64_t v35 = v43;
    v34[2] = v43;
    v34[3] = v28;
    sub_2534AD3FC();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v36, v37, v38, v39);
    TranscriptProtoAction.init(statementID:toolID:bundleID:deviceID:isConfirmed:parameterValues:planEventID:tool:)((uint64_t)v13, v33, v22, v42, v26, v35, v28, v44, v47, v41, v40, (uint64_t)v34);
    sub_253AF1980();
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void TranscriptProtoClientAction.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  sub_253962754(v4);
  sub_253B059D0();
  sub_253465998();
  MEMORY[0x270FA5388](v5);
  sub_2534835B0();
  uint64_t v6 = sub_253462A5C(&qword_26B249528);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_25348360C();
  uint64_t v9 = (int *)type metadata accessor for ClientAction(v8);
  uint64_t v10 = (uint64_t *)(v3 + v9[5]);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  swift_bridgeObjectRetain();
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_253AE6338(v13);
  if (v0)
  {
    swift_bridgeObjectRelease();
    sub_253AF1980();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v39 = v1;
    uint64_t v40 = v11;
    uint64_t v38 = v12;
    uint64_t v41 = v14;
    swift_bridgeObjectRelease();
    uint64_t v15 = v9[8];
    uint64_t v16 = (uint64_t *)(v3 + v9[7]);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v20 = *(void *)(v3 + v15);
    uint64_t v19 = *(void *)(v3 + v15 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_253AF3B84();
    uint64_t v22 = sub_253AE78F0(v21);
    swift_bridgeObjectRelease();
    uint64_t v37 = v22;
    sub_253AF2658();
    sub_2534D9778();
    sub_2534AF234();
    v23();
    int v36 = sub_253B059C0();
    uint64_t v24 = sub_253B059A0();
    uint64_t v35 = v25;
    type metadata accessor for TranscriptProtoStatementID(0);
    sub_253AF2AD4();
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_DWORD *)uint64_t v39 = v36;
    *(void *)(v39 + 8) = v24;
    *(void *)(v39 + 16) = v35;
    sub_2534D97B4();
    v26();
    sub_253AF202C(v39);
    uint64_t v27 = swift_bridgeObjectRetain();
    uint64_t v28 = sub_253AE751C(v27);
    swift_bridgeObjectRelease();
    uint64_t v29 = type metadata accessor for TranscriptProtoClientAction(0);
    sub_25346CC08((uint64_t)v42 + *(int *)(v29 + 40), v30, v31, v20);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    void *v42 = v38;
    v42[1] = v40;
    v42[5] = v17;
    v42[6] = v18;
    v42[7] = v20;
    v42[8] = v19;
    v42[2] = v41;
    v42[3] = v37;
    uint64_t v32 = sub_2535925F4();
    sub_253961BF0(v32, v33, v34);
    v42[4] = v28;
    sub_253AF1980();
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void TranscriptProtoQueryStep.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v3 = sub_253962754(v2);
  uint64_t Step = (uint64_t (*)(uint64_t))type metadata accessor for TranscriptProtoQueryStep(v3);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v4);
  uint64_t v32 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253AF1D50();
  sub_253465998();
  MEMORY[0x270FA5388](v6);
  sub_25346CC54();
  uint64_t v7 = sub_253462A5C(&qword_26B249528);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_2534966B0();
  sub_253AF35B8();
  sub_2534AF234();
  v9();
  int v10 = sub_253B059C0();
  uint64_t v11 = sub_253B059A0();
  uint64_t v13 = v12;
  uint64_t v14 = type metadata accessor for TranscriptProtoStatementID(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v1 = v10;
  *(void *)(v1 + 8) = v11;
  *(void *)(v1 + 16) = v13;
  sub_253AF2A54();
  sub_2534B3470();
  v15();
  uint64_t v16 = sub_253AF1CDC(v1, 0, 1, v14);
  type metadata accessor for QueryStep(v16);
  uint64_t v17 = swift_bridgeObjectRetain();
  sub_253A6593C(v17, v18, v19, v20, v21, v22, v23, v24, v30, Step);
  if (v0)
  {
    sub_253AF1980();
    sub_253472458(v1, &qword_26B249528);
  }
  else
  {
    uint64_t v26 = v25;
    uint64_t v27 = v32;
    uint64_t v28 = sub_253AF277C();
    sub_253AF2670(v28, v29, &qword_26B249528);
    *uint64_t v27 = v26;
    sub_253AF19D0((uint64_t)v27, v33);
    sub_253AF1980();
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void TranscriptProtoVariableStep.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v4 = sub_253AF37D0();
  uint64_t v5 = type metadata accessor for TranscriptProtoVariableStep(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v6);
  sub_253AF1F0C();
  sub_253465998();
  MEMORY[0x270FA5388](v7);
  sub_25346CC54();
  uint64_t v8 = sub_253462A5C(&qword_26B249528);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_25349888C();
  type metadata accessor for VariableStep(v10);
  uint64_t v11 = swift_bridgeObjectRetain();
  sub_253A6811C(v11, v12, v13, v14, v15, v16, v17, v18, v26, v28);
  if (!v0)
  {
    sub_253AF2FC0();
    uint64_t v31 = v19;
    sub_2534AF234();
    v20();
    int v27 = sub_253B059C0();
    uint64_t v29 = v5;
    uint64_t v30 = v2;
    uint64_t v21 = sub_253B059A0();
    uint64_t v23 = v22;
    type metadata accessor for TranscriptProtoStatementID(0);
    sub_253AF2720();
    *(_DWORD *)uint64_t v3 = v27;
    *(void *)(v3 + 8) = v21;
    *(void *)(v3 + 16) = v23;
    sub_2534D91AC();
    v24();
    sub_253A73620(v3);
    uint64_t v25 = (uint64_t)v1 + *(int *)(v29 + 20);
    sub_253AF1E48(v25, 1);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *uint64_t v1 = v31;
    sub_253961BF0(v3, v25, &qword_26B249528);
    sub_253AF19D0((uint64_t)v1, v30);
  }
  sub_253AF1980();
  sub_2534F8590();
  sub_2534847C8();
}

void TranscriptProtoSessionError.init(handwritten:)()
{
  sub_2534B3258();
  uint64_t v48 = v6;
  uint64_t v49 = v5;
  uint64_t v46 = type metadata accessor for TranscriptProtoSessionError(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v7);
  sub_253AF29A4(v8, v44[0]);
  sub_253465998();
  v44[3] = v10;
  v44[4] = v9;
  MEMORY[0x270FA5388](v9);
  v44[2] = (uint64_t)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v12);
  v44[1] = (uint64_t)v44 - v13;
  sub_253483660();
  uint64_t v14 = type metadata accessor for ExecutorError();
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  uint64_t v45 = (uint64_t)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v17);
  sub_2534DA41C();
  uint64_t v18 = type metadata accessor for PlannerError();
  uint64_t v19 = sub_25346CB4C(v18);
  MEMORY[0x270FA5388](v19);
  sub_2534D8CE4();
  MEMORY[0x270FA5388](v20);
  sub_253AF2098();
  uint64_t v21 = type metadata accessor for SessionCoordinatorError();
  uint64_t v22 = sub_25346CB4C(v21);
  MEMORY[0x270FA5388](v22);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)v44 - v24;
  type metadata accessor for SessionError();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v26);
  uint64_t v27 = sub_2534B464C();
  uint64_t v28 = type metadata accessor for TranscriptProtoSessionErrorEnum(v27);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v29);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v30);
  sub_2534D9E98();
  sub_253AF1A28(v49, v0);
  sub_253578828();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v40 = sub_2534DA2E4();
      sub_253AF19D0(v40, v41);
      sub_253AF1A28((uint64_t)v25, v3);
      TranscriptProtoSessionCoordinatorError.init(handwritten:)();
      goto LABEL_6;
    case 2u:
      uint64_t v34 = sub_2534D9778();
      sub_253AF19D0(v34, v35);
      uint64_t v36 = sub_253579270();
      sub_253AF1A28(v36, v37);
      sub_253AF3B60();
      TranscriptProtoPlannerError.init(handwritten:)();
      goto LABEL_6;
    case 3u:
      uint64_t v38 = sub_2534D99FC();
      sub_253AF19D0(v38, v39);
      sub_253AF1A28(v1, v45);
      sub_253AF2688();
      TranscriptProtoExecutorError.init(handwritten:)();
LABEL_6:
      sub_253AF1980();
      break;
    default:
      sub_25347FA84();
      v31();
      sub_253AF3914();
      sub_2534AF234();
      v32();
      TranscriptProtoIntelligenceFlowError.init(handwritten:)();
      sub_25351C5C0();
      sub_25347FB18();
      v33();
      break;
  }
  uint64_t v42 = v48;
  uint64_t v43 = v47;
  sub_253971DD4();
  swift_storeEnumTagMultiPayload();
  sub_253AF19D0(v4, v2);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v43, 1, 1, v28);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253AF1980();
  sub_253AF19D0(v43, v42);
  sub_253472458(v42, &qword_269CE1D40);
  sub_253AF19D0(v2, v42);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v42, 0, 1, v28);
  sub_253465A14();
}

void TranscriptProtoSystemPromptResolution.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v6 = v5;
  uint64_t v8 = sub_253AF2BE8(v7);
  uint64_t v9 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(v8);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  sub_253AF1DD8(v11, v77);
  uint64_t v12 = sub_253462A5C(&qword_269CE2130);
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  uint64_t v86 = sub_253A3C4DC();
  sub_253465998();
  uint64_t v15 = v14;
  MEMORY[0x270FA5388](v16);
  sub_25346CB04();
  uint64_t v17 = sub_253462A5C(&qword_26B249528);
  uint64_t v18 = sub_25346CB4C(v17);
  MEMORY[0x270FA5388](v18);
  uint64_t v87 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_253483660();
  uint64_t v21 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(v20);
  uint64_t v22 = sub_25346CB4C(v21);
  MEMORY[0x270FA5388](v22);
  sub_253465A3C();
  uint64_t v23 = sub_253462A5C(&qword_269CE2140);
  uint64_t v24 = sub_25346CB4C(v23);
  MEMORY[0x270FA5388](v24);
  sub_253AF2D7C();
  uint64_t v25 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v26 = sub_25346CB4C(v25);
  MEMORY[0x270FA5388](v26);
  sub_25346CC54();
  uint64_t v27 = sub_2534ACF74();
  sub_253961F60(v27, v28, (uint64_t *)&unk_26B248CB0);
  uint64_t v29 = sub_253B055C0();
  sub_2534D8B48(v0, 1, v29);
  if (v30)
  {
    sub_253472458(v0, (uint64_t *)&unk_26B248CB0);
    uint64_t v84 = 0;
    uint64_t v89 = 0;
  }
  else
  {
    uint64_t v84 = sub_253B05570();
    uint64_t v89 = v31;
    sub_25347B88C();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v0, v29);
  }
  uint64_t v33 = type metadata accessor for RequestContent.SystemPromptResolution(0);
  sub_253AF1A28(v6 + *(int *)(v33 + 24), v2);
  TranscriptProtoSystemPromptResolutionUserAction.init(handwritten:)(v2, v34, v35, v36, v37, v38, v39, v40, v77, v78);
  if (v1)
  {
    sub_253AF1980();
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
    sub_2534AD3FC();
    uint64_t v77 = v41;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v42, v43, v44, v41);
    uint64_t v82 = v3;
    uint64_t v78 = sub_253B05570();
    uint64_t v80 = 0;
    uint64_t v81 = v45;
    sub_253AF2FC0();
    sub_2534AF234();
    v46();
    int v79 = sub_253B059C0();
    uint64_t v47 = sub_253B059A0();
    uint64_t v48 = v6;
    uint64_t v83 = v4;
    uint64_t v49 = v47;
    uint64_t v51 = v50;
    uint64_t v52 = type metadata accessor for TranscriptProtoStatementID(0);
    uint64_t v53 = (uint64_t)v87;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_DWORD *)uint64_t v53 = v79;
    *(void *)(v53 + 8) = v49;
    *(void *)(v53 + 16) = v51;
    uint64_t v54 = v15 + 8;
    sub_2535793C0();
    sub_2534D91AC();
    v55();
    sub_2534AD3FC();
    uint64_t v86 = v52;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v56, v57, v58, v52);
    sub_253AF1A28(v48 + *(int *)(v33 + 32), v88);
    uint64_t v59 = v83;
    uint64_t v60 = v80;
    TranscriptProtoSystemPromptResolutionInput.init(handwritten:)();
    if (v60)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_253AF1980();
      sub_253472458(v53, &qword_26B249528);
      sub_253472458(v82, &qword_269CE2140);
    }
    else
    {
      uint64_t v61 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
      uint64_t v62 = sub_253AF1CDC(v59, 0, 1, v61);
      type metadata accessor for TranscriptProtoSystemPromptResolution(v62);
      sub_253AF2B44();
      uint64_t v63 = v85;
      uint64_t v65 = (uint64_t)v85 + v64;
      sub_253465A98();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v66, v67, v68, v77);
      uint64_t v69 = sub_253A3E620();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v69, v70, v71, v86);
      uint64_t v72 = (uint64_t)v63 + *(int *)(v54 + 32);
      sub_253AF1E48(v72, 1);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      v63[2] = v84;
      v63[3] = v89;
      sub_253961BF0(v82, v65, &qword_269CE2140);
      uint64_t v73 = v81;
      *uint64_t v63 = v78;
      v63[1] = v73;
      uint64_t v74 = sub_2534D954C();
      sub_253961BF0(v74, v75, v76);
      sub_253961BF0(v83, v72, &qword_269CE2130);
      sub_253AF1980();
    }
  }
  sub_2534F856C();
  sub_2534847C8();
}

uint64_t TranscriptProtoActionStepResult.init(handwritten:)()
{
  return sub_253AF1980();
}

void TranscriptProtoQueryStepResults.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v5 = v4;
  uint64_t v6 = sub_253AF226C();
  Stepuint64_t Results = type metadata accessor for TranscriptProtoQueryStepResults(v6);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v8);
  sub_253AF1F0C();
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  sub_25346CC54();
  uint64_t v10 = sub_253462A5C(&qword_26B249528);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  sub_2534966B0();
  uint64_t v12 = swift_bridgeObjectRetain();
  sub_253A6A090(v12, v13, v14, v15, v16, v17, v18, v19, v32, v33);
  if (!v0)
  {
    uint64_t v39 = v20;
    uint64_t v37 = type metadata accessor for QueryStepResults(0);
    sub_253AF2300();
    sub_2534AF234();
    v21();
    int v34 = sub_253B059C0();
    uint64_t v38 = v1;
    uint64_t v22 = sub_253B059A0();
    uint64_t v36 = StepResults;
    uint64_t v24 = v23;
    uint64_t v35 = v5;
    uint64_t v25 = type metadata accessor for TranscriptProtoStatementID(0);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_DWORD *)uint64_t v3 = v34;
    *(void *)(v3 + 8) = v22;
    *(void *)(v3 + 16) = v24;
    sub_2534D9A08();
    v26();
    sub_253A73620(v3);
    uint64_t v27 = v35 + *(int *)(v37 + 24);
    sub_253B05570();
    sub_253AF31CC();
    uint64_t v28 = (uint64_t)v2 + *(int *)(v36 + 24);
    uint64_t v29 = sub_253A3D714();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v29, v30, v31, v25);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *uint64_t v2 = v39;
    sub_253961BF0(v3, v28, &qword_26B249528);
    v2[1] = v27;
    v2[2] = v22;
    sub_253AF19D0((uint64_t)v2, v38);
  }
  sub_253AF1980();
  sub_2534F8590();
  sub_2534847C8();
}

uint64_t TranscriptProtoActionResponse.init(handwritten:)(uint64_t a1)
{
  return sub_253AD16E8(a1, MEMORY[0x263F4C1F0]);
}

void TranscriptProtoActionResolverRequest.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v189 = v0;
  uint64_t v5 = v4;
  uint64_t v162 = v6;
  uint64_t v7 = sub_253462A5C(&qword_269CDCBE0);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v177 = (char *)&v146 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = sub_253462A5C(&qword_269CDCA90);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v10);
  uint64_t v176 = (char *)&v146 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v12);
  uint64_t v174 = (char *)&v146 - v13;
  sub_2534B324C();
  MEMORY[0x270FA5388](v14);
  uint64_t v173 = (char *)&v146 - v15;
  sub_2534B324C();
  MEMORY[0x270FA5388](v16);
  uint64_t v175 = (uint64_t)&v146 - v17;
  sub_2534B324C();
  MEMORY[0x270FA5388](v18);
  uint64_t v172 = (uint64_t *)((char *)&v146 - v19);
  sub_2534B324C();
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v29 = sub_253AF2244(v21, v22, v23, v24, v25, v26, v27, v28, v146);
  uint64_t v170 = type metadata accessor for TranscriptProtoParameter(v29);
  sub_253465998();
  uint64_t v171 = v30;
  MEMORY[0x270FA5388](v31);
  sub_2534F823C();
  MEMORY[0x270FA5388](v32);
  sub_2534D8F5C((uint64_t)&v146 - v33);
  uint64_t v34 = sub_253462A5C(&qword_269CE0448);
  uint64_t v35 = sub_25346CB4C(v34);
  MEMORY[0x270FA5388](v35);
  uint64_t v161 = (char *)&v146 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_253AF1D50();
  sub_253465998();
  uint64_t v180 = v37;
  MEMORY[0x270FA5388](v38);
  sub_2534D929C(v39, v146);
  uint64_t v40 = sub_253462A5C(&qword_26B249528);
  uint64_t v41 = sub_25346CB4C(v40);
  MEMORY[0x270FA5388](v41);
  uint64_t v181 = (char *)&v146 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_253483660();
  type metadata accessor for TranscriptProtoParameterSet(v43);
  sub_253465998();
  uint64_t v164 = v44;
  MEMORY[0x270FA5388](v45);
  sub_2534F823C();
  MEMORY[0x270FA5388](v46);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v47);
  sub_2534D90F4();
  uint64_t v48 = sub_253462A5C(&qword_26B2495B8);
  uint64_t v49 = sub_25346CB4C(v48);
  MEMORY[0x270FA5388](v49);
  uint64_t v50 = sub_2534D9B74();
  uint64_t v51 = (int *)type metadata accessor for ActionResolverRequest(v50);
  uint64_t v52 = (uint64_t *)(v5 + v51[11]);
  uint64_t v53 = v52[1];
  uint64_t v159 = *v52;
  uint64_t v54 = v51[5];
  uint64_t v167 = v5;
  uint64_t v55 = *(void *)(v5 + v54);
  sub_253AF3890();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v56 = v189;
  uint64_t v57 = sub_253A8E900(v55);
  uint64_t v188 = v56;
  if (v56)
  {
    swift_bridgeObjectRelease();
    sub_253B07160();
    sub_25346CAF4();
    sub_2534659CC();
    v58();
    sub_253AF2B90();
    swift_bridgeObjectRelease();
LABEL_40:
    sub_2534847C8();
    return;
  }
  uint64_t v59 = v57;
  uint64_t v163 = v2;
  uint64_t v147 = v52;
  uint64_t v151 = v53;
  swift_bridgeObjectRelease();
  *uint64_t v1 = v59;
  sub_253AF19D0((uint64_t)v1, v3);
  sub_2534AD3FC();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v60, v61, v62, v166);
  uint64_t v63 = *(void *)(v167 + v51[6]);
  uint64_t v64 = *(void *)(v63 + 16);
  uint64_t v65 = MEMORY[0x263F8EE78];
  uint64_t v152 = v3;
  uint64_t v148 = v51;
  if (!v64)
  {
    uint64_t v143 = v167;
    uint64_t v144 = (uint64_t)v51;
    uint64_t v71 = (uint64_t)v181;
LABEL_39:
    uint64_t v129 = *(int *)(v144 + 32);
    uint64_t v130 = *(int *)(v144 + 36);
    LODWORD(v187) = *(unsigned __int8 *)(v143 + v129);
    LODWORD(v189) = *(unsigned __int8 *)(v143 + v130);
    sub_253971B90();
    sub_2534AF234();
    v131();
    int v132 = sub_253B059C0();
    uint64_t v133 = sub_253B059A0();
    uint64_t v135 = v134;
    type metadata accessor for TranscriptProtoStatementID(0);
    sub_253AF2720();
    *(_DWORD *)uint64_t v71 = v132;
    *(void *)(v71 + 8) = v133;
    *(void *)(v71 + 16) = v135;
    sub_2534D9AA0();
    sub_2534D9A08();
    v136();
    sub_253AF202C(v71);
    LODWORD(v186) = *(unsigned __int8 *)(v167 + v148[10]);
    uint64_t v137 = v71;
    uint64_t v139 = *v147;
    uint64_t v138 = v147[1];
    uint64_t v141 = v147[2];
    uint64_t v140 = v147[3];
    type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
    sub_253AF2AD4();
    uint64_t v142 = (uint64_t *)v161;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *uint64_t v142 = v139;
    v142[1] = v138;
    v142[2] = v141;
    v142[3] = v140;
    sub_253AF202C((uint64_t)v142);
    TranscriptProtoActionResolverRequest.init(toolID:resolvedParameters:unresolvedParameterSets:isClientAction:isConfirmed:statementID:isAuthenticated:tool:)(v159, v151, v152, v65, v187, v189, v137, v186, (uint64_t)v142, v145, v146, (uint64_t)v147, (uint64_t)v148, v149, v150, v151, v152, v153, v154,
      v155,
      v156,
      v157,
      v158,
      v159,
      v160);
    sub_253AF1980();
    goto LABEL_40;
  }
  uint64_t v191 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  uint64_t v150 = v64;
  sub_253AF2FB4();
  sub_2539E75A0();
  uint64_t v66 = sub_25353E23C(v63);
  uint64_t v158 = 0;
  int v69 = v68 & 1;
  uint64_t v154 = v63 + 56;
  uint64_t v70 = v179;
  uint64_t v72 = v180;
  uint64_t v71 = (uint64_t)v181;
  uint64_t v73 = v178;
  uint64_t v153 = v63;
  while ((v66 & 0x8000000000000000) == 0 && v66 < 1 << *(unsigned char *)(v63 + 32))
  {
    if (((*(void *)(v154 + (((unint64_t)v66 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v66) & 1) == 0) {
      goto LABEL_48;
    }
    if (*(_DWORD *)(v63 + 36) != v67) {
      goto LABEL_49;
    }
    HIDWORD(v155) = v69;
    uint64_t v156 = v67;
    uint64_t v74 = *(void *)(v63 + 48);
    uint64_t v157 = v66;
    uint64_t v75 = *(void *)(v74 + 8 * v66);
    sub_253AF31C0();
    uint64_t v76 = v165;
    uint64_t v78 = (uint64_t)v165 + v77;
    swift_bridgeObjectRetain_n();
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    uint64_t v79 = *(void *)(v75 + 16);
    if (v79)
    {
      uint64_t v149 = v78;
      uint64_t v190 = MEMORY[0x263F8EE78];
      uint64_t v80 = v79;
      sub_2539E72C4();
      uint64_t v81 = sub_253A71D6C(v75);
      if ((v81 & 0x8000000000000000) == 0 && v81 < 1 << *(unsigned char *)(v75 + 32))
      {
        uint64_t v189 = v75 + 64;
        uint64_t v168 = v75;
        while ((*(void *)(v189 + 8 * ((unint64_t)v81 >> 6)) & (1 << v81)) != 0)
        {
          if (*(_DWORD *)(v75 + 36) != v82) {
            goto LABEL_42;
          }
          uint64_t v184 = 1 << v81;
          unint64_t v185 = (unint64_t)v81 >> 6;
          uint64_t v182 = v80;
          uint64_t v183 = v82;
          uint64_t v83 = v73 + *(int *)(v70 + 48);
          uint64_t v84 = *(void *)(v75 + 56);
          uint64_t v85 = *(void *)(v75 + 48) + 32 * v81;
          uint64_t v86 = v70;
          uint64_t v87 = *(void *)v85;
          uint64_t v88 = *(void *)(v85 + 8);
          uint64_t v89 = *(void *)(v85 + 16);
          uint64_t v90 = v73;
          char v91 = *(unsigned char *)(v85 + 24);
          *(void *)uint64_t v90 = *(void *)v85;
          *(void *)(v90 + 8) = v88;
          *(void *)(v90 + 16) = v89;
          *(unsigned char *)(v90 + 24) = v91;
          uint64_t v92 = sub_253AF2880();
          uint64_t v93 = type metadata accessor for Candidate(v92);
          sub_25346CB4C(v93);
          uint64_t v95 = *(void *)(v94 + 72);
          uint64_t v186 = v72;
          sub_253AF1A28(v84 + v95 * v72, v83);
          uint64_t v96 = (uint64_t)v172;
          *uint64_t v172 = v87;
          *(void *)(v96 + 8) = v88;
          *(void *)(v96 + 16) = v89;
          *(unsigned char *)(v96 + 24) = v91;
          sub_253AF1A28(v83, v96 + *(int *)(v86 + 48));
          uint64_t v97 = v175;
          sub_253961F14(v96, v175, &qword_269CDCA90);
          swift_bridgeObjectRetain_n();
          sub_253472458(v90, &qword_269CDCA90);
          uint64_t v98 = v97 + *(int *)(v86 + 48);
          uint64_t v100 = *(void *)v97;
          uint64_t v99 = *(void *)(v97 + 8);
          uint64_t v101 = *(void *)(v97 + 16);
          int v102 = *(unsigned __int8 *)(v97 + 24);
          uint64_t v103 = sub_253AF3558();
          uint64_t v187 = v104;
          sub_253AF1A28(v103, v104);
          uint64_t v105 = (uint64_t)&v174[*(int *)(v86 + 48)];
          uint64_t v106 = sub_253AF3558();
          sub_253AF1A28(v106, v105);
          swift_bridgeObjectRetain();
          sub_253AF1980();
          sub_253AF1A28(v98, (uint64_t)&v176[*(int *)(v86 + 48)]);
          uint64_t v107 = (uint64_t)v177;
          sub_253AF2688();
          uint64_t v108 = v188;
          TranscriptProtoCandidate.init(handwritten:)();
          uint64_t v188 = v108;
          if (v108)
          {
            swift_bridgeObjectRelease();
            sub_253AF1980();
            sub_253472458(v97, &qword_269CDCA90);
            swift_bridgeObjectRelease();
            swift_release();
            sub_253B07160();
            sub_25346CAF4();
            sub_2534659CC();
            v128();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            sub_253AF2B90();
            swift_bridgeObjectRelease();
            sub_253472458(v152, &qword_26B2495B8);
            goto LABEL_40;
          }
          if (v102) {
            uint64_t v101 = 0;
          }
          uint64_t v109 = type metadata accessor for TranscriptProtoCandidate(0);
          sub_253A73620(v107);
          uint64_t v110 = v170;
          uint64_t v111 = v109;
          uint64_t v112 = v169;
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v169 + *(int *)(v170 + 24), 1, 1, v111);
          _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
          *(void *)uint64_t v112 = v100;
          *(void *)(v112 + 8) = v99;
          *(void *)(v112 + 16) = v101;
          *(unsigned char *)(v112 + 24) = v102;
          uint64_t v113 = sub_253A3D030();
          sub_253961BF0(v113, v114, &qword_269CDCBE0);
          sub_253AF39B8();
          sub_253AF19D0(v115, v110);
          sub_253AF1980();
          sub_253472458(v97, &qword_269CDCA90);
          uint64_t v116 = v190;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_253579380();
            sub_2539E72C4();
            uint64_t v116 = v190;
          }
          uint64_t v70 = v179;
          uint64_t v72 = v180;
          uint64_t v71 = (uint64_t)v181;
          uint64_t v73 = v178;
          unint64_t v118 = *(void *)(v116 + 16);
          unint64_t v117 = *(void *)(v116 + 24);
          if (v118 >= v117 >> 1)
          {
            sub_253AF2FDC(v117);
            sub_2539E72C4();
            uint64_t v116 = v190;
          }
          *(void *)(v116 + 16) = v118 + 1;
          sub_253962314();
          sub_253AF19D0(v110, v119 + v120 * v118);
          uint64_t v75 = v168;
          if (v186 >= -(-1 << *(unsigned char *)(v168 + 32))) {
            goto LABEL_44;
          }
          if ((*(void *)(v189 + 8 * v185) & v184) == 0) {
            goto LABEL_45;
          }
          if (*(_DWORD *)(v168 + 36) != v183) {
            goto LABEL_46;
          }
          uint64_t v81 = sub_253B09F70();
          uint64_t v80 = v182 - 1;
          if (v182 == 1)
          {
            swift_bridgeObjectRelease();
            uint64_t v76 = v165;
            goto LABEL_31;
          }
          if ((v81 & 0x8000000000000000) == 0)
          {
            uint64_t v82 = *(unsigned int *)(v75 + 36);
            if (v81 < 1 << *(unsigned char *)(v75 + 32)) {
              continue;
            }
          }
          goto LABEL_43;
        }
        __break(1u);
LABEL_42:
        __break(1u);
      }
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      break;
    }
    swift_bridgeObjectRelease();
    uint64_t v116 = MEMORY[0x263F8EE78];
LABEL_31:
    *uint64_t v76 = v116;
    sub_253AF19D0((uint64_t)v76, v163);
    swift_bridgeObjectRelease();
    uint64_t v65 = v191;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_253AF1CF4();
      sub_2539E75A0();
      uint64_t v65 = v191;
    }
    unint64_t v122 = *(void *)(v65 + 16);
    unint64_t v121 = *(void *)(v65 + 24);
    if (v122 >= v121 >> 1)
    {
      sub_253962434(v121);
      sub_2539E75A0();
      uint64_t v65 = v191;
    }
    uint64_t v123 = v158 + 1;
    *(void *)(v65 + 16) = v122 + 1;
    sub_2535786F4();
    sub_253AF19D0(v126, v65 + v124 + *(void *)(v125 + 72) * v122);
    uint64_t v63 = v153;
    uint64_t v66 = sub_25353E154(v157, v156, BYTE4(v155) & 1, v153);
    int v69 = v127 & 1;
    uint64_t v158 = v123;
    if (v123 == v150)
    {
      sub_253535310(v66, v67, v69);
      swift_bridgeObjectRelease();
      uint64_t v143 = v167;
      uint64_t v144 = (uint64_t)v148;
      goto LABEL_39;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
}

uint64_t TranscriptProtoResponseGenerationRequest.init(handwritten:)(uint64_t a1)
{
  return sub_253AC2D00(a1, (uint64_t)sub_253A6AA78, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseGenerationRequest);
}

uint64_t TranscriptProtoClientInitiatedClientAction.init(handwritten:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_253AE6338(v6);
  if (v2)
  {
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v9 = v7;
    swift_bridgeObjectRelease();
    type metadata accessor for TranscriptProtoClientInitiatedClientAction(0);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = v5;
    a2[1] = v4;
    a2[2] = v9;
  }
  return result;
}

uint64_t TranscriptProtoContextPrewarmRequest.init(handwritten:)()
{
  swift_bridgeObjectRelease();
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t TranscriptProtoSafetyModeException.init(handwritten:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_253ABBF18(a1, (void (*)(void))type metadata accessor for TranscriptProtoSafetyModeException, a2);
}

uint64_t TranscriptProtoContextRetrieved.init(handwritten:)@<X0>(void *a1@<X8>)
{
  type metadata accessor for TranscriptProtoContextRetrieved(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v3 = MEMORY[0x263F8EE78];
  *a1 = MEMORY[0x263F8EE78];
  a1[1] = v3;
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_253A697F0(v4, v5, v6, v7, v8, v9, v10, v11, v24, v26);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_253AF1980();
  }
  else
  {
    *a1 = v12;
    uint64_t v13 = swift_bridgeObjectRetain();
    sub_253A697F0(v13, v14, v15, v16, v17, v18, v19, v20, v25, v27);
    uint64_t v22 = v21;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    a1[1] = v22;
  }
  return result;
}

uint64_t TranscriptProtoToolRetrievalResponse.init(handwritten:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v83 = a2;
  uint64_t v6 = sub_253B08040();
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  char v91 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253462A5C(&qword_269CDCAC0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v10);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v11);
  uint64_t v90 = (char *)&v76 - v12;
  sub_2534B324C();
  MEMORY[0x270FA5388](v13);
  uint64_t v105 = (uint64_t)&v76 - v14;
  sub_2534B324C();
  MEMORY[0x270FA5388](v15);
  sub_253578D54();
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v76 - v17;
  uint64_t v19 = sub_253AF1D98();
  uint64_t v20 = type metadata accessor for ContextProtoToolRetrievalType(v19);
  uint64_t v21 = sub_25346CB34(v20);
  uint64_t v89 = v22;
  MEMORY[0x270FA5388](v21);
  sub_2534B34A4();
  uint64_t v23 = *(void *)(a1 + 8);
  sub_253AF325C(*(void *)a1);
  uint64_t v24 = *(void *)(a1 + 24);
  uint64_t v81 = *(void *)(a1 + 16);
  int v25 = *(_DWORD *)(a1 + 32);
  uint64_t v26 = *(void *)(a1 + 48);
  uint64_t v27 = *(void *)(a1 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v28 = swift_bridgeObjectRetain();
  uint64_t v29 = v104;
  sub_253A63CA4(v28, v30, v31, v32, v33, v34, v35, v36, v76, v77);
  uint64_t v104 = v29;
  if (v29)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v86 = v3;
    uint64_t v87 = v18;
    uint64_t v88 = v2;
    uint64_t v80 = v27;
    uint64_t v39 = *(void *)(v26 + 16);
    uint64_t v40 = MEMORY[0x263F8EE78];
    uint64_t v79 = v37;
    if (v39)
    {
      uint64_t v85 = v4;
      uint64_t v103 = v9;
      uint64_t v77 = v24;
      uint64_t v78 = v23;
      uint64_t v106 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      uint64_t v92 = v39;
      sub_253AF2FB4();
      sub_2539E7604();
      sub_253A71D6C(v26);
      uint64_t v84 = v26;
      while (1)
      {
        uint64_t v41 = (uint64_t)v87;
        uint64_t v42 = sub_253AF3A1C();
        uint64_t v94 = v44;
        uint64_t v95 = v43;
        unsigned int v93 = v45;
        sub_253A71DF4(v42, v46, v43, v44, v45, v26);
        sub_253B091F0();
        sub_2535782A8();
        uint64_t v102 = v47;
        uint64_t v100 = *(void (**)(void))(v47 + 16);
        uint64_t v48 = v88;
        sub_253A568D4();
        v49();
        sub_253B09190();
        sub_2535782A8();
        uint64_t v101 = v50;
        uint64_t v51 = *(void (**)(void))(v50 + 16);
        uint64_t v97 = v52;
        uint64_t v98 = v51;
        sub_253A735A8();
        v53();
        uint64_t v54 = v105;
        sub_253961F14(v48, v105, &qword_269CDCAC0);
        sub_253472458(v41, &qword_269CDCAC0);
        uint64_t v55 = *(int *)(v103 + 48);
        uint64_t v99 = &v90[v55];
        uint64_t v96 = v54 + v55;
        sub_2534DA034();
        uint64_t v56 = v100;
        sub_253A568D4();
        v56();
        sub_253A56AF8();
        uint64_t v57 = v98;
        sub_253A735A8();
        v57();
        sub_253A568D4();
        v56();
        sub_253A735A8();
        v57();
        sub_2534DA034();
        sub_253B08030();
        uint64_t v58 = v105;
        sub_2534659CC();
        v59();
        sub_2534659CC();
        v60();
        uint64_t v61 = v86;
        uint64_t v62 = v104;
        ContextProtoToolRetrievalType.init(handwritten:)();
        sub_253472458(v58, &qword_269CDCAC0);
        uint64_t v104 = v62;
        if (v62) {
          break;
        }
        uint64_t v40 = v106;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_253579380();
          sub_2539E7604();
          uint64_t v40 = v106;
        }
        unint64_t v63 = *(void *)(v40 + 16);
        if (v63 >= *(void *)(v40 + 24) >> 1)
        {
          sub_2539E7604();
          uint64_t v40 = v106;
        }
        *(void *)(v40 + 16) = v63 + 1;
        sub_253A73DEC();
        sub_253AF19D0(v61, v64 + v65 * v63);
        uint64_t v66 = sub_253AF3144();
        uint64_t v67 = v93;
        uint64_t v26 = v84;
        sub_253A71D70(v66);
        char v69 = v68 & 1;
        uint64_t v70 = sub_253AF3144();
        sub_253535310(v70, v71, v67);
        if (!--v92)
        {
          uint64_t v72 = sub_253AF21E0();
          sub_253535310(v72, v73, v69);
          swift_bridgeObjectRelease();
          sub_253AF39B8();
          uint64_t v23 = v78;
          uint64_t v24 = v77;
          uint64_t v74 = v82;
          uint64_t v75 = v81;
          goto LABEL_14;
        }
      }
      sub_253535310(v95, v94, v93);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      sub_253AF2BD0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      return swift_release();
    }
    else
    {
      uint64_t v74 = v82;
      uint64_t v75 = v81;
      uint64_t v67 = v83;
LABEL_14:
      type metadata accessor for TranscriptProtoToolRetrievalResponse(0);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)uint64_t v67 = v74;
      *(void *)(v67 + 8) = v23;
      *(void *)(v67 + 16) = v75;
      *(void *)(v67 + 24) = v24;
      *(_DWORD *)(v67 + 32) = v25;
      *(void *)(v67 + 40) = v79;
      *(void *)(v67 + 48) = v40;
    }
  }
  return result;
}

uint64_t TranscriptProtoEntitySpanMatchResult.init(handwritten:)(uint64_t a1)
{
  return sub_253AC2D00(a1, (uint64_t)sub_253A6302C, (void (*)(uint64_t))type metadata accessor for TranscriptProtoEntitySpanMatchResult);
}

void TranscriptProtoActionCancellation.init(handwritten:)()
{
  sub_2534847F8();
  v28[1] = v2;
  uint64_t v4 = sub_253AF2150(v3);
  uint64_t v5 = type metadata accessor for TranscriptProtoActionCancellation(v4);
  uint64_t v6 = sub_253AF3CEC(v5);
  MEMORY[0x270FA5388](v6);
  sub_253465A3C();
  uint64_t v7 = sub_253462A5C(&qword_269CDB460);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  v28[3] = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253AF1D50();
  sub_253465998();
  MEMORY[0x270FA5388](v10);
  sub_25346CC54();
  uint64_t v11 = sub_253462A5C(&qword_26B249528);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  void v28[2] = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v14);
  uint64_t v15 = sub_253A74194();
  type metadata accessor for ActionCancellation(v15);
  sub_2534AF234();
  v16();
  int v17 = sub_253B059C0();
  uint64_t v18 = sub_253B059A0();
  uint64_t v20 = v19;
  type metadata accessor for TranscriptProtoStatementID(0);
  sub_253AF2720();
  *(_DWORD *)uint64_t v1 = v17;
  *(void *)(v1 + 8) = v18;
  *(void *)(v1 + 16) = v20;
  sub_2534D91A0();
  v21();
  sub_2536D4030(v1);
  sub_253AF3D0C();
  sub_253961F60(v22, v23, &qword_269CDB460);
  sub_25395F984();
  sub_253944448(v0, 1);
  sub_253944448(v0 + *(int *)(v28[4] + 28), 1);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v24 = sub_253AF21D4();
  sub_253961BF0(v24, v25, &qword_26B249528);
  uint64_t v26 = sub_2534D9A78();
  sub_253961BF0(v26, v27, &qword_26B249528);
  sub_253AF3B6C();
  sub_253AF1980();
  sub_2536D3D5C();
  sub_2534847C8();
}

#error "253AB6AD4: call analysis failed (funcsize=251)"

void TranscriptProtoStatementResult.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v7 = v6;
  uint64_t v68 = v8;
  uint64_t v9 = sub_253462A5C(&qword_269CE0448);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v67 = sub_253A3C4DC();
  sub_253465998();
  uint64_t v74 = v11;
  MEMORY[0x270FA5388](v12);
  sub_25346CC54();
  uint64_t v13 = sub_253462A5C(&qword_26B249528);
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v15);
  uint64_t v69 = (uint64_t)&v57 - v16;
  sub_2534B324C();
  MEMORY[0x270FA5388](v17);
  uint64_t v71 = (uint64_t)&v57 - v18;
  uint64_t v19 = sub_253483660();
  uint64_t v20 = type metadata accessor for StatementResultPayload(v19);
  uint64_t v21 = sub_25346CB4C(v20);
  MEMORY[0x270FA5388](v21);
  sub_2534B3294();
  uint64_t v22 = sub_253462A5C(&qword_269CE1C80);
  uint64_t v23 = sub_25346CB4C(v22);
  MEMORY[0x270FA5388](v23);
  sub_253AF2D7C();
  uint64_t v24 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v25 = sub_25346CB4C(v24);
  MEMORY[0x270FA5388](v25);
  sub_253465A3C();
  sub_253961F60(v7, v2, (uint64_t *)&unk_26B248CB0);
  uint64_t v66 = sub_253A8FC80(v2);
  uint64_t v73 = v26;
  uint64_t v27 = sub_2534D9B1C();
  sub_253472458(v27, v28);
  uint64_t v29 = type metadata accessor for StatementResult(0);
  uint64_t v30 = (uint64_t *)(v7 + *(int *)(v29 + 36));
  uint64_t v72 = v30[1];
  uint64_t v64 = v30;
  if (v72)
  {
    uint64_t v65 = *v30;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v65 = 0;
  }
  sub_253AF1A28(v7 + *(int *)(v29 + 20), v1);
  sub_253AF2278();
  TranscriptProtoStatementResultPayload.init(handwritten:)();
  if (v0)
  {
    sub_253AF1980();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v31 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
    sub_253971DA8(v3, v32, v33, v31);
    uint64_t v70 = v7;
    uint64_t v34 = *(void *)(v74 + 16);
    uint64_t v62 = v3;
    uint64_t v63 = v34;
    sub_253535668();
    v35();
    int v36 = sub_253B059C0();
    uint64_t v37 = sub_253B059A0();
    uint64_t v59 = v5;
    uint64_t v60 = v4;
    uint64_t v38 = v37;
    uint64_t v40 = v39;
    type metadata accessor for TranscriptProtoStatementID(0);
    uint64_t v61 = 0;
    uint64_t v41 = v71;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_DWORD *)uint64_t v41 = v36;
    *(void *)(v41 + 8) = v38;
    *(void *)(v41 + 16) = v40;
    uint64_t v58 = *(void (**)(void))(v74 + 8);
    v74 += 8;
    sub_253477128();
    v42();
    sub_253AF1DA4(v41);
    sub_253535668();
    v43();
    uint64_t v44 = sub_253B059C0();
    uint64_t v45 = sub_253B059A0();
    uint64_t v47 = v46;
    uint64_t v48 = v69;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_DWORD *)uint64_t v48 = v44;
    *(void *)(v48 + 8) = v45;
    *(void *)(v48 + 16) = v47;
    sub_253578EEC();
    uint64_t v49 = v58;
    sub_253477128();
    v49();
    sub_253AF1DA4(v48);
    sub_253535668();
    v50();
    int v51 = sub_253B059C0();
    sub_253B059A0();
    sub_253AF2AC8();
    uint64_t v52 = v59;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_DWORD *)uint64_t v52 = v51;
    *(void *)(v52 + 8) = v44;
    *(void *)(v52 + 16) = v45;
    sub_253578EEC();
    sub_253477128();
    v49();
    sub_253AF1DA4(v52);
    sub_253AF356C();
    sub_2539EA1E0(v53, v54);
    uint64_t v55 = v60;
    sub_253AF356C();
    sub_2539607D4();
    TranscriptProtoStatementResult.init(actionEventID:toolID:payload:resultStatementID:originProgramStatementID:originTaskStatementID:tool:)(v66, v73, v65, v72, v62, v71, v48, v52, v55, v56, v57, (uint64_t)v58, v59, v60, v61, v62, v63, (uint64_t)v64, v65,
      v66,
      v67,
      v68,
      v69,
      v70,
      v71,
      v72,
      v73);
    sub_253AF1980();
  }
  sub_2534F8590();
  sub_2534847C8();
}

void TranscriptProtoExternalAgentTextQuery.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  sub_253AF2F70();
  uint64_t v15 = sub_253AF3810();
  uint64_t v16 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(v15);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v17);
  sub_253465A3C();
  uint64_t v18 = sub_253462A5C(&qword_269CE1AD0);
  uint64_t v19 = sub_25346CB4C(v18);
  MEMORY[0x270FA5388](v19);
  sub_25346CC6C();
  uint64_t v20 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v21 = sub_25346CB4C(v20);
  MEMORY[0x270FA5388](v21);
  sub_25346CC54();
  uint64_t v22 = v10[1];
  uint64_t v23 = sub_253AF21FC(*v10);
  uint64_t v24 = type metadata accessor for ExternalAgentTextQuery(v23);
  uint64_t v25 = sub_253AF3318(v24);
  sub_253961F60(v25, v26, (uint64_t *)&unk_26B248CB0);
  uint64_t v27 = sub_253B055C0();
  uint64_t v28 = sub_253AF34BC();
  int v30 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v28, v29, v27);
  swift_bridgeObjectRetain();
  uint64_t v45 = v14;
  if (v30 == 1)
  {
    sub_253472458(v11, (uint64_t *)&unk_26B248CB0);
    uint64_t v43 = 0;
    uint64_t v31 = 0;
  }
  else
  {
    uint64_t v43 = sub_253B05570();
    uint64_t v31 = v32;
    sub_25347B88C();
    uint64_t v33 = sub_2536D500C();
    v34(v33);
  }
  sub_253AF2B04();
  sub_25396DF48(v35, v36);
  sub_253AF2B04();
  sub_25395F758(v37, v38, v39, v40);
  if (a10)
  {
    sub_253AF1980();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v41 = (uint64_t)v12 + *(int *)(v16 + 24);
    uint64_t v42 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
    sub_253AF3284(v42);
    *uint64_t v12 = v44;
    v12[1] = v22;
    v12[2] = v43;
    v12[3] = v31;
    sub_253961BF0(v13, v41, &qword_269CE1AD0);
    sub_253AF19D0((uint64_t)v12, v45);
    sub_253AF1980();
  }
  sub_2536D4C48();
  sub_2534847C8();
}

void TranscriptProtoExternalAgentSpeechQuery.init(handwritten:)()
{
  sub_2534847F8();
  sub_253AF2A80();
  uint64_t v6 = sub_253AF2150(v5);
  uint64_t v42 = (uint64_t (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(v6);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v7);
  sub_253465A3C();
  uint64_t v8 = sub_253462A5C(&qword_269CE1AD0);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  sub_25346CC6C();
  uint64_t v10 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  sub_25346CC54();
  uint64_t v12 = swift_bridgeObjectRetain();
  sub_253A646D0(v12, v13, v14, v15, v16, v17, v18, v19, v40, v42);
  uint64_t v21 = v20;
  uint64_t v22 = v2;
  uint64_t v23 = type metadata accessor for ExternalAgentSpeechQuery(0);
  uint64_t v24 = sub_253AF3318(v23);
  sub_253961F60(v24, v25, (uint64_t *)&unk_26B248CB0);
  uint64_t v26 = sub_253B055C0();
  uint64_t v27 = sub_253AF34BC();
  sub_2534D8B48(v27, v28, v26);
  if (v29)
  {
    sub_253472458(v1, (uint64_t *)&unk_26B248CB0);
    uint64_t v41 = 0;
    uint64_t v31 = 0;
  }
  else
  {
    uint64_t v41 = sub_253B05570();
    uint64_t v31 = v30;
    sub_25347B88C();
    uint64_t v32 = sub_253578828();
    v33(v32);
  }
  uint64_t v34 = (uint64_t *)(v0 + *(int *)(v23 + 24));
  uint64_t v35 = *v34;
  uint64_t v36 = v34[1];
  uint64_t v37 = v34[2];
  sub_25396DF48(*v34, v36);
  sub_25395F758(v35, v36, v37, v4);
  if (v22)
  {
    sub_253AF1980();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = (uint64_t)v3 + *(int *)(v43 + 24);
    uint64_t v39 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
    sub_253AF3284(v39);
    *uint64_t v3 = v21;
    v3[1] = v41;
    v3[2] = v31;
    sub_253961BF0((uint64_t)v4, v38, &qword_269CE1AD0);
    sub_253AF3B6C();
    sub_253AF1980();
  }
  sub_253A73FF4();
  sub_2534847C8();
}

void TranscriptProtoExternalAgentRequest.init(handwritten:)()
{
  sub_2534847F8();
  sub_253AF3D74();
  uint64_t v6 = sub_253462A5C(&qword_269CE1AD0);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_253465A3C();
  uint64_t v8 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_2534B464C();
  uint64_t v11 = type metadata accessor for RequestContent(v10);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  sub_2534966B0();
  uint64_t v13 = sub_253462A5C(&qword_269CE1AF0);
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  sub_25346CC6C();
  sub_253AF1A28(v0, v5);
  sub_253AF2570();
  TranscriptProtoRequestContent.init(handwritten:)();
  if (!v2)
  {
    uint64_t v15 = type metadata accessor for TranscriptProtoRequestContent(0);
    uint64_t v16 = sub_253AF1CDC(v4, 0, 1, v15);
    uint64_t v17 = type metadata accessor for ExternalAgentRequest(v16);
    uint64_t v18 = sub_253A3E348(v17);
    sub_253961F60(v18, v1, (uint64_t *)&unk_26B248CB0);
    uint64_t v19 = sub_253B055C0();
    sub_2534D8B48(v1, 1, v19);
    if (v20)
    {
      sub_253472458(v1, (uint64_t *)&unk_26B248CB0);
      uint64_t v39 = 0;
      uint64_t v40 = 0;
    }
    else
    {
      uint64_t v39 = sub_253B05570();
      uint64_t v40 = v21;
      sub_25347B88C();
      uint64_t v22 = sub_253AF2A60();
      v23(v22);
    }
    sub_253AF2B68(*(int *)(v17 + 24));
    sub_253AF3250();
    sub_25395F758(v24, v25, v26, v27);
    uint64_t v28 = sub_253AF1CDC(v3, 1, 1, v15);
    type metadata accessor for TranscriptProtoExternalAgentRequest(v28);
    sub_25394633C();
    uint64_t v30 = (uint64_t *)(v3 + v29);
    *uint64_t v30 = 0;
    v30[1] = 0;
    uint64_t v32 = v3 + *(int *)(v31 + 24);
    uint64_t v33 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
    sub_25346CC08(v32, v34, v35, v33);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    sub_253961BF0(v4, v3, &qword_269CE1AF0);
    swift_bridgeObjectRelease();
    *uint64_t v30 = v39;
    v30[1] = v40;
    uint64_t v36 = sub_253578E40();
    sub_253961BF0(v36, v37, v38);
  }
  sub_253AF1980();
  sub_253A3C6AC();
  sub_2534847C8();
}

void TranscriptProtoExternalAgentOutcome.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v5 = v4;
  uint64_t v7 = sub_253AF37A4(v6);
  uint64_t v43 = type metadata accessor for TranscriptProtoExternalAgentOutcome(v7);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v8);
  sub_253547148(v9, v42);
  sub_253B06850();
  sub_253465998();
  uint64_t v49 = v11;
  uint64_t v50 = v10;
  MEMORY[0x270FA5388](v10);
  sub_2536D2C5C(v12, v42);
  uint64_t v13 = sub_253462A5C(&qword_269CE0388);
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  uint64_t v47 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253AF1D50();
  sub_253465998();
  MEMORY[0x270FA5388](v16);
  sub_25346CC54();
  uint64_t v17 = sub_253462A5C(&qword_26B249528);
  uint64_t v18 = sub_25346CB4C(v17);
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = sub_25349888C();
  uint64_t v20 = *(int *)(type metadata accessor for ExternalAgentOutcome(v19) + 24);
  uint64_t v46 = v5;
  uint64_t v21 = *(void *)(v5 + v20);
  sub_2534AF234();
  v22();
  uint64_t v48 = v21;
  swift_bridgeObjectRetain();
  int v23 = sub_253B059C0();
  sub_253B059A0();
  uint64_t v24 = sub_253AF3328();
  type metadata accessor for TranscriptProtoStatementID(v24);
  sub_253AF2720();
  *(_DWORD *)uint64_t v3 = v23;
  *(void *)(v3 + 8) = v1;
  *(void *)(v3 + 16) = v2;
  sub_253578828();
  uint64_t v25 = (uint64_t)v47;
  sub_2534D91AC();
  v26();
  sub_253AF24D0(v3, 0);
  sub_2534B3428();
  v27();
  uint64_t v28 = sub_253AF2688();
  TranscriptProtoStatementOutcome.init(handwritten:)(v28, v29, v30, v31, v32, v33, v34, v35, v42, v43);
  if (v0)
  {
    swift_bridgeObjectRelease();
    sub_253AF1980();
    sub_253472458(v3, &qword_26B249528);
  }
  else
  {
    type metadata accessor for TranscriptProtoStatementOutcome(0);
    sub_253A73620(v25);
    uint64_t v37 = v43;
    uint64_t v36 = v44;
    sub_253AF24D0((uint64_t)v44 + *(int *)(v43 + 20), 1);
    uint64_t v38 = (uint64_t)v36 + *(int *)(v37 + 24);
    sub_253AF1E48(v38, 1);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    void *v36 = v48;
    uint64_t v39 = sub_2534F8958();
    sub_253961BF0(v39, v40, v41);
    sub_253961BF0(v25, v38, &qword_269CE0388);
    sub_253AF19D0((uint64_t)v36, v45);
    sub_253AF1980();
  }
  sub_2534F8A10();
  sub_2534847C8();
}

uint64_t TranscriptProtoExternalAgentRequestRewriteMetadata.init(handwritten:)()
{
  sub_253AF2580();
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v4 = v1[2];
  type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v0 = v3;
  v0[1] = v2;
  v0[2] = v4;
  return result;
}

void TranscriptProtoToolResolution.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v62 = v3;
  uint64_t v63 = v0;
  uint64_t v4 = sub_253A3EF6C();
  uint64_t v60 = type metadata accessor for TranscriptProtoToolResolution(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  uint64_t v61 = (char *)v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253AF1D50();
  sub_253465998();
  uint64_t v58 = v7;
  MEMORY[0x270FA5388](v8);
  sub_25347FAAC();
  uint64_t v9 = sub_253462A5C(&qword_26B249528);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v59 = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v21 = sub_253AF33AC(v13, v14, v15, v16, v17, v18, v19, v20, v53[0]);
  sub_253465998();
  uint64_t v23 = v22;
  MEMORY[0x270FA5388](v24);
  sub_2534AF2D8();
  sub_253B08B30();
  sub_253465998();
  MEMORY[0x270FA5388](v25);
  sub_25346CC54();
  uint64_t v26 = sub_253462A5C(&qword_269CDFA70);
  uint64_t v27 = sub_25346CB4C(v26);
  MEMORY[0x270FA5388](v27);
  sub_25346CB04();
  uint64_t v29 = v28;
  sub_253AF22F0();
  sub_2534AF234();
  v30();
  uint64_t v31 = v63;
  sub_253B08B10();
  uint64_t v63 = v31;
  sub_2534D97B4();
  v32();
  if (!v31)
  {
    uint64_t v33 = v23 + 32;
    uint64_t v54 = v21;
    uint64_t v55 = v29;
    sub_253AF2B04();
    sub_253AF2F54();
    v34();
    uint64_t v35 = sub_253AF1CDC(v29, 0, 1, v21);
    type metadata accessor for ToolResolution(v35);
    sub_253AF2764();
    uint64_t v56 = v1;
    uint64_t v36 = v58;
    v53[1] = *(void *)(v58 + 16);
    sub_253944AE4();
    v37();
    int v38 = sub_253B059C0();
    sub_253B059A0();
    sub_253AF31D8();
    type metadata accessor for TranscriptProtoStatementID(0);
    sub_253AF2B44();
    uint64_t v39 = v57;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_DWORD *)uint64_t v39 = v38;
    *(void *)(v39 + 8) = v2;
    *(void *)(v39 + 16) = v33;
    uint64_t v58 = *(void *)(v36 + 8);
    sub_2534D97B4();
    v40();
    sub_2536D4030(v39);
    sub_253944AE4();
    v41();
    int v42 = sub_253B059C0();
    sub_253B059A0();
    sub_253AF31D8();
    uint64_t v43 = (uint64_t)v59;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_DWORD *)uint64_t v43 = v42;
    *(void *)(v43 + 8) = v2;
    *(void *)(v43 + 16) = v33;
    sub_2534D97B4();
    v44();
    sub_2536D4030(v43);
    uint64_t v45 = (uint64_t)v61;
    sub_253465A98();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v46, v47, v48, v54);
    uint64_t v49 = v60;
    uint64_t v50 = v45 + *(int *)(v60 + 20);
    sub_253944448(v50, 1);
    sub_253944448(v45 + *(int *)(v49 + 24), 1);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    sub_253961BF0(v55, v45, &qword_269CDFA70);
    sub_253961BF0(v39, v50, &qword_26B249528);
    uint64_t v51 = sub_2535791D8();
    sub_253961BF0(v51, v52, &qword_26B249528);
    sub_253AF19D0(v45, v62);
  }
  sub_253AF1980();
  sub_2534847C8();
}

void TranscriptProtoUndoRedoRequest.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  uint64_t v72 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = sub_253AF2150(v15);
  uint64_t v73 = type metadata accessor for TranscriptProtoUndoRedoRequest(v16);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v17);
  sub_253483628(v18, v61);
  uint64_t v19 = sub_253462A5C(&qword_269CDB460);
  uint64_t v20 = sub_25346CB4C(v19);
  MEMORY[0x270FA5388](v20);
  uint64_t v71 = (uint64_t)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253AF1D50();
  sub_253465998();
  MEMORY[0x270FA5388](v22);
  sub_25347FA68(v23, v61);
  uint64_t v24 = sub_253462A5C(&qword_26B249528);
  uint64_t v25 = sub_25346CB4C(v24);
  MEMORY[0x270FA5388](v25);
  uint64_t v70 = (char *)&v61 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  sub_253AF3C50(v28, v29, v30, v31, v32, v33, v34, v35, v61);
  uint64_t v36 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v37 = sub_25346CB4C(v36);
  MEMORY[0x270FA5388](v37);
  sub_25346CC54();
  uint64_t v38 = v14[1];
  uint64_t v39 = sub_253AF3CC0(*v14);
  uint64_t v40 = (int *)type metadata accessor for UndoRedoRequest(v39);
  sub_253961F60((uint64_t)v14 + v40[5], v10, (uint64_t *)&unk_26B248CB0);
  uint64_t v41 = sub_253B055C0();
  int v42 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, 1, v41);
  uint64_t v69 = v38;
  swift_bridgeObjectRetain();
  if (v42 == 1)
  {
    sub_253472458(v10, (uint64_t *)&unk_26B248CB0);
    uint64_t v65 = 0;
    uint64_t v66 = 0;
  }
  else
  {
    uint64_t v43 = sub_253B05570();
    uint64_t v65 = v44;
    uint64_t v66 = v43;
    sub_25347B88C();
    uint64_t v45 = sub_253AF2A60();
    v46(v45);
  }
  int v64 = *((unsigned __int8 *)v14 + v40[6]);
  sub_253AF2AEC();
  sub_2534AF234();
  v47();
  int v62 = sub_253B059C0();
  uint64_t v48 = sub_253B059A0();
  uint64_t v50 = v49;
  type metadata accessor for TranscriptProtoStatementID(0);
  sub_253AF2B44();
  uint64_t v51 = v63;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v51 = v62;
  *(void *)(v51 + 8) = v48;
  *(void *)(v51 + 16) = v50;
  sub_2534D9778();
  sub_2534D91A0();
  v52();
  sub_2536D4030(v51);
  sub_253961F60((uint64_t)v14 + v40[8], v71, &qword_269CDB460);
  sub_25395F984();
  uint64_t v53 = v73;
  uint64_t v54 = v67;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v67 + *(int *)(v73 + 28), 1, 1, v12);
  sub_253944448(v54 + *(int *)(v53 + 32), 1);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v55 = v69;
  *(void *)uint64_t v54 = v68;
  *(void *)(v54 + 8) = v55;
  uint64_t v56 = v65;
  *(void *)(v54 + 24) = v66;
  *(void *)(v54 + 32) = v56;
  *(unsigned char *)(v54 + 16) = v64;
  uint64_t v57 = sub_253A3D518();
  sub_253961BF0(v57, v58, &qword_26B249528);
  uint64_t v59 = sub_253A3D03C();
  sub_253961BF0(v59, v60, &qword_26B249528);
  sub_253AF19D0(v54, a10);
  sub_253AF1980();
  sub_2534F8A10();
  sub_2534847C8();
}

void TranscriptProtoClientUndoRedoRequest.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  uint64_t v5 = sub_253AF2150(v4);
  uint64_t v6 = type metadata accessor for TranscriptProtoClientUndoRedoRequest(v5);
  uint64_t v7 = sub_253AF3CEC(v6);
  MEMORY[0x270FA5388](v7);
  sub_253465A3C();
  uint64_t v8 = sub_253462A5C(&qword_269CDB460);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v37 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33[1] = sub_253AF1D50();
  sub_2534727C4();
  MEMORY[0x270FA5388](v11);
  sub_2534966B0();
  uint64_t v12 = sub_253462A5C(&qword_26B249528);
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  uint64_t v33[3] = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v15);
  sub_2534D97C0();
  uint64_t v16 = sub_253B05570();
  uint64_t v35 = v17;
  uint64_t v36 = v16;
  uint64_t v18 = *(int *)(type metadata accessor for ClientUndoRedoRequest(0) + 20);
  v33[2] = v3;
  int v34 = *(unsigned __int8 *)(v3 + v18);
  sub_253AF2AEC();
  sub_2534AF234();
  v19();
  int v20 = sub_253B059C0();
  uint64_t v21 = sub_253B059A0();
  uint64_t v23 = v22;
  type metadata accessor for TranscriptProtoStatementID(0);
  sub_253AF2720();
  *(_DWORD *)uint64_t v1 = v20;
  *(void *)(v1 + 8) = v21;
  *(void *)(v1 + 16) = v23;
  sub_2534D91A0();
  v24();
  sub_253AF1DA4(v1);
  sub_253AF3D0C();
  sub_253961F60(v25, v26, &qword_269CDB460);
  sub_25395F984();
  uint64_t v27 = v38;
  sub_253578EBC(v0 + *(int *)(v38 + 32), 1);
  sub_253578EBC(v0 + *(int *)(v27 + 36), 1);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v28 = v35;
  *(void *)uint64_t v0 = v36;
  *(void *)(v0 + 8) = v28;
  *(unsigned char *)(v0 + 16) = v34;
  uint64_t v29 = sub_2534DA604();
  sub_253961BF0(v29, v30, &qword_26B249528);
  uint64_t v31 = sub_2535B4148();
  sub_253961BF0(v31, v32, &qword_26B249528);
  sub_253AF3B6C();
  sub_253AF1980();
  sub_2536D3D5C();
  sub_2534847C8();
}

void TranscriptProtoTypeConversionRequest.init(handwritten:)()
{
  sub_2534847F8();
  sub_253AF33E8(v1);
  sub_253AF37D0();
  sub_253B059D0();
  sub_253465998();
  uint64_t v57 = v3;
  uint64_t v58 = v2;
  MEMORY[0x270FA5388](v2);
  sub_2534D929C(v4, v51[0]);
  uint64_t v5 = sub_253462A5C(&qword_26B249528);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_25351C4C8(v7, v51[0]);
  uint64_t v8 = sub_253B08E60();
  sub_253465998();
  uint64_t v53 = v9;
  MEMORY[0x270FA5388](v10);
  sub_25394437C(v11, v51[0]);
  sub_253B09150();
  sub_253465998();
  uint64_t v63 = v13;
  uint64_t v64 = v12;
  MEMORY[0x270FA5388](v12);
  int v62 = (char *)v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_253462A5C(&qword_269CDFA30);
  uint64_t v16 = sub_25346CB4C(v15);
  MEMORY[0x270FA5388](v16);
  uint64_t v52 = (char *)v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_2536D3938();
  sub_253465998();
  uint64_t v60 = v19;
  MEMORY[0x270FA5388](v20);
  sub_2534B33AC();
  sub_253B09120();
  sub_253465998();
  MEMORY[0x270FA5388](v21);
  sub_25346CC54();
  uint64_t v22 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v23 = sub_25346CB4C(v22);
  MEMORY[0x270FA5388](v23);
  sub_253483644(v24, v51[0]);
  sub_253465A98();
  uint64_t v61 = v18;
  uint64_t v28 = sub_253AF1CDC(v25, v26, v27, v18);
  type metadata accessor for TranscriptProtoTypeConversionRequest(v28);
  sub_253AF2764();
  uint64_t v30 = v0 + v29;
  sub_253465A98();
  uint64_t v54 = v8;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v31, v32, v33, v8);
  uint64_t v34 = v0 + *(int *)(v18 + 24);
  uint64_t v35 = type metadata accessor for TranscriptProtoStatementID(0);
  sub_253AF1E48(v34, 1);
  uint64_t v66 = v0;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253AF2300();
  sub_2534AF234();
  v36();
  uint64_t v37 = v67;
  sub_253B09100();
  if (v37)
  {
    sub_2534D91AC();
    v38();
    sub_253AF1980();
    sub_253AF1980();
  }
  else
  {
    v51[0] = v30;
    v51[1] = v35;
    uint64_t v67 = v34;
    sub_2534D91AC();
    v39();
    uint64_t v40 = v59;
    sub_253578828();
    sub_2534D8E14();
    v41();
    sub_253A73620(v40);
    sub_253961BF0(v40, v66, &qword_269CDCBC8);
    type metadata accessor for TypeConversionRequest(0);
    sub_253AF2700();
    sub_253AF22F0();
    sub_2534AF234();
    v42();
    uint64_t v43 = v65;
    sub_253B09130();
    sub_2534D97B4();
    v44();
    uint64_t v45 = (uint64_t)v52;
    sub_2536D3880();
    sub_2534D8E14();
    v46();
    sub_2534AF368(v45);
    sub_253961BF0(v45, v51[0], &qword_269CDFA30);
    uint64_t v47 = v55;
    sub_2534AF234();
    v48();
    LODWORD(v66) = sub_253B059C0();
    sub_253B059A0();
    sub_253AF31CC();
    uint64_t v49 = v56;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_DWORD *)uint64_t v49 = v66;
    *(void *)(v49 + 8) = v47;
    *(void *)(v49 + 16) = v43;
    sub_2534F85D4();
    v50();
    sub_253AF1980();
    sub_253A73620(v49);
    sub_253961BF0(v49, v67, &qword_26B249528);
  }
  sub_253578DEC();
  sub_2534847C8();
}

void TranscriptProtoTypeConversionResult.init(handwritten:)()
{
  sub_2534847F8();
  sub_253AF33E8(v2);
  uint64_t v4 = v3;
  sub_253B059D0();
  sub_253465998();
  MEMORY[0x270FA5388](v5);
  sub_2534AF2A0(v6, v40);
  uint64_t v7 = sub_253462A5C(&qword_26B249528);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_253AF2C7C();
  sub_253465998();
  MEMORY[0x270FA5388](v10);
  sub_253AF1EE4();
  sub_253465998();
  MEMORY[0x270FA5388](v11);
  sub_25346CC54();
  uint64_t v12 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  sub_2534B3294();
  sub_253465A98();
  uint64_t v17 = sub_253AF1CDC(v14, v15, v16, v9);
  type metadata accessor for TranscriptProtoTypeConversionResult(v17);
  sub_253AF2764();
  uint64_t v41 = v4 + v18;
  type metadata accessor for TranscriptProtoStatementID(0);
  sub_253465A98();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v19, v20, v21, v22);
  uint64_t v42 = v4 + *(int *)(v9 + 24);
  sub_253A7385C(v42, 1);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253AF35B8();
  sub_2534AF234();
  v23();
  sub_253B09100();
  sub_2534B3470();
  v24();
  if (v43)
  {
    sub_253AF1980();
    sub_253AF1980();
  }
  else
  {
    sub_253579328();
    sub_2534D8E14();
    v25();
    sub_253A73620(v0);
    uint64_t v26 = sub_253578E4C();
    sub_253961BF0(v26, v27, v28);
    type metadata accessor for TypeConversionResult(0);
    sub_253944AE4();
    v29();
    int v30 = sub_253B059C0();
    uint64_t v31 = sub_253B059A0();
    uint64_t v33 = v32;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_DWORD *)uint64_t v1 = v30;
    *(void *)(v1 + 8) = v31;
    *(void *)(v1 + 16) = v33;
    sub_2536D500C();
    sub_2534D9A08();
    v34();
    sub_253A7385C(v1, 0);
    sub_253961BF0(v1, v41, &qword_26B249528);
    sub_253AF34B0();
    sub_253944AE4();
    v35();
    LODWORD(v31) = sub_253B059C0();
    uint64_t v36 = sub_253B059A0();
    uint64_t v38 = v37;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_DWORD *)uint64_t v1 = v31;
    *(void *)(v1 + 8) = v36;
    *(void *)(v1 + 16) = v38;
    sub_2536D500C();
    sub_2534D9A08();
    v39();
    sub_253AF1980();
    sub_253A7385C(v1, 0);
    sub_253961BF0(v1, v42, &qword_26B249528);
  }
  sub_2534847C8();
}

void TranscriptProtoQueryDecorationResult.init(handwritten:)()
{
  sub_2534847F8();
  sub_253AF3138();
  uint64_t v4 = v3;
  uint64_t v5 = sub_253462A5C(&qword_269CDBB30);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_2534B34A4();
  uint64_t v7 = sub_253462A5C(&qword_269CDFA00);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_253465A3C();
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_253A6302C(v9, v10, v11, v12, v13, v14, v15, v16, v66, v71);
  if (!v0)
  {
    uint64_t v18 = v17;
    uint64_t v19 = swift_bridgeObjectRetain();
    sub_253A697F0(v19, v20, v21, v22, v23, v24, v25, v26, v67, v72);
    uint64_t v28 = v27;
    uint64_t v29 = swift_bridgeObjectRetain();
    sub_253A697F0(v29, v30, v31, v32, v33, v34, v35, v36, v68, v73);
    uint64_t v38 = v37;
    uint64_t DecorationResult = type metadata accessor for QueryDecorationResult(0);
    sub_253961F60(v1 + *(int *)(DecorationResult + 28), v2, &qword_269CDBB30);
    sub_25395F808();
    uint64_t v40 = swift_bridgeObjectRetain();
    sub_253A6AE00(v40, v41, v42, v43, v44, v45, v46, v47, v69, v74);
    uint64_t v49 = v48;
    uint64_t v50 = swift_bridgeObjectRetain();
    sub_253A697F0(v50, v51, v52, v53, v54, v55, v56, v57, v70, v75);
    uint64_t v76 = v58;
    uint64_t v59 = (uint64_t)v4 + *(int *)(type metadata accessor for TranscriptProtoQueryDecorationResult(0) + 36);
    uint64_t DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
    sub_25346CC08(v59, v61, v62, DecorationToolRetrievalResponse);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *uint64_t v4 = v18;
    v4[1] = v28;
    v4[2] = v38;
    uint64_t v63 = sub_253A56C4C();
    sub_253961BF0(v63, v64, v65);
    v4[3] = v49;
    v4[4] = v76;
  }
  sub_253AF1980();
  sub_2536D3D5C();
  sub_2534847C8();
}

void TranscriptProtoQueryDecorationPrePlannerResult.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v38 = v5;
  uint64_t v6 = sub_2534D9690();
  uint64_t DecorationPrePlannerResult = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(v6);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v7);
  sub_2534D8F84(v8, v34);
  uint64_t v9 = sub_253462A5C(&qword_269CE2560);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v42 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253AF1D50();
  sub_253465998();
  MEMORY[0x270FA5388](v12);
  sub_25346CC54();
  uint64_t v13 = sub_253462A5C(&qword_26B249528);
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  sub_2534B34A4();
  sub_2534AF234();
  v15();
  int v16 = sub_253B059C0();
  sub_253B059A0();
  sub_253AF3C1C();
  uint64_t v17 = type metadata accessor for TranscriptProtoStatementID(0);
  sub_253AF2720();
  *(_DWORD *)uint64_t v4 = v16;
  *(void *)(v4 + 8) = v2;
  *(void *)(v4 + 16) = v3;
  sub_25351C3E8();
  v18();
  uint64_t v19 = sub_253AF1CDC(v4, 0, 1, v17);
  uint64_t v20 = type metadata accessor for QueryDecorationPrePlannerResult(v19);
  uint64_t v21 = *(int *)(v20 + 24);
  uint64_t v22 = (uint64_t *)(v0 + *(int *)(v20 + 20));
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  LOBYTE(v22) = *(unsigned char *)(v0 + v21 + 8);
  uint64_t v40 = *(void *)(v0 + v21);
  char v41 = (char)v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  TranscriptProtoQueryDecorationPrePlannerResultPayload.init(handwritten:)(&v40);
  if (v1)
  {
    swift_bridgeObjectRelease();
    sub_253AF1980();
    sub_253472458(v4, &qword_26B249528);
  }
  else
  {
    type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
    uint64_t v35 = v24;
    sub_253AF215C((uint64_t)v42);
    uint64_t v39 = v0;
    uint64_t v25 = DecorationPrePlannerResult;
    uint64_t v26 = v37;
    uint64_t v27 = sub_253A3E620();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v27, v28, v29, v17);
    uint64_t v30 = (uint64_t)v26 + *(int *)(v25 + 24);
    sub_253AF3D18(v30);
    uint64_t v31 = sub_253A3D524();
    sub_253961BF0(v31, v32, v33);
    *uint64_t v26 = v35;
    v26[1] = v23;
    sub_253961BF0((uint64_t)v42, v30, &qword_269CE2560);
    sub_253AF19D0((uint64_t)v26, v38);
    sub_253AF1980();
  }
  sub_2534F8A10();
  sub_2534847C8();
}

#error "253AB92A4: call analysis failed (funcsize=6)"

void LocaleSettings.init(transcript:)()
{
  sub_2535B3C98();
  sub_253A3F064();
  uint64_t v0 = sub_253B05630();
  uint64_t v1 = sub_25346CB4C(v0);
  MEMORY[0x270FA5388](v1);
  sub_2534D8FA0();
  MEMORY[0x270FA5388](v2);
  sub_2534F8600();
  MEMORY[0x270FA5388](v3);
  sub_2534D90F4();
  swift_bridgeObjectRetain();
  sub_253B055D0();
  swift_bridgeObjectRetain();
  sub_253B055D0();
  swift_bridgeObjectRetain();
  sub_253B055D0();
  sub_253B05D20();
  sub_253AF1980();
  sub_25346CD04();
}

void sub_253AB93C4()
{
}

uint64_t sub_253AB93DC()
{
  return sub_253A95058();
}

void TranscriptProtoLocaleSettings.init(handwritten:)()
{
  sub_2534B3258();
  uint64_t v3 = v2;
  sub_253B05630();
  sub_253465998();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  sub_2534D9C38();
  MEMORY[0x270FA5388](v7);
  sub_25351C770();
  MEMORY[0x270FA5388](v8);
  sub_2534D9E98();
  sub_253B05D30();
  uint64_t v9 = sub_253B055E0();
  uint64_t v16 = v10;
  uint64_t v17 = v9;
  uint64_t v11 = *(void (**)(void))(v5 + 8);
  sub_2536D3880();
  sub_2534F85D4();
  v11();
  sub_253B05D10();
  uint64_t v12 = sub_253B055E0();
  uint64_t v14 = v13;
  sub_25353CE60();
  sub_2534F85D4();
  v11();
  sub_253B05D40();
  sub_253B055E0();
  sub_253AF31D8();
  sub_2534D9B10();
  sub_2534F85D4();
  v11();
  type metadata accessor for TranscriptProtoLocaleSettings(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v3 = v17;
  v3[1] = v16;
  v3[2] = v12;
  v3[3] = v14;
  v3[4] = v0;
  v3[5] = v1;
  sub_253B05D70();
  sub_25346CAF4();
  sub_2534659CC();
  v15();
  sub_253465A14();
}

void sub_253AB9564()
{
}

void DeviceDetails.init(transcript:)()
{
  sub_2535B45A0();
  uint64_t v2 = sub_253AF226C();
  uint64_t v3 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(v2);
  uint64_t v4 = sub_25346CB4C(v3);
  MEMORY[0x270FA5388](v4);
  sub_2534D9C00();
  uint64_t v5 = sub_253B05C60();
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_25346CC6C();
  type metadata accessor for TranscriptProtoDeviceDetails(0);
  sub_253AF32F4();
  swift_bridgeObjectRetain();
  sub_25395D9B0(v1);
  if (v0)
  {
    sub_253AF1980();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_253B05C40();
    sub_253AF1980();
    sub_2534D9FA8();
    sub_253B05C70();
    sub_253AF1980();
  }
  sub_2536D4AAC();
  sub_2535B4660();
}

uint64_t DeviceDetails.DeviceType.init(transcript:)()
{
  return sub_253AF1980();
}

void sub_253AB970C()
{
}

uint64_t sub_253AB9724()
{
  return sub_253A951C8();
}

void TranscriptProtoDeviceDetails.init(handwritten:)()
{
  sub_2534B3258();
  uint64_t v4 = sub_253962754(v3);
  type metadata accessor for TranscriptProtoDeviceDetails(v4);
  sub_2535B3D7C();
  MEMORY[0x270FA5388](v5);
  sub_2534AF2D8();
  sub_253B05C60();
  sub_253465998();
  MEMORY[0x270FA5388](v6);
  sub_2534B34A4();
  uint64_t v7 = sub_253462A5C(&qword_269CE2510);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_2534966B0();
  uint64_t v9 = sub_253B05C80();
  uint64_t v11 = v10;
  sub_253B05C90();
  int v12 = sub_253B05C50();
  type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  sub_253AF337C();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v2 = v12;
  sub_253A3D524();
  sub_2534B3470();
  v13();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v2, 0, 1, v1);
  sub_253AF2184();
  *uint64_t v0 = v9;
  v0[1] = v11;
  uint64_t v14 = sub_2534D9A78();
  sub_253961BF0(v14, v15, &qword_269CE2510);
  sub_253AF3210();
  sub_253B05CB0();
  sub_25346CAF4();
  sub_2534659CC();
  v16();
  sub_253465A14();
}

uint64_t TranscriptProtoDeviceDetailsDeviceType.init(handwritten:)()
{
  sub_253AF2664();
  int v1 = sub_253B05C50();
  type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  sub_253945118();
  *uint64_t v0 = v1;
  sub_253B05C60();
  sub_25346CAF4();
  uint64_t v2 = sub_253A3F4E8();
  return v3(v2);
}

void sub_253AB9948()
{
}

uint64_t sub_253AB9970()
{
  return TranscriptProtoDeviceDetailsDeviceType.init(handwritten:)();
}

uint64_t sub_253AB9998()
{
  return DeviceDetails.DeviceType.init(transcript:)();
}

uint64_t sub_253AB99C0()
{
  return sub_253A95370();
}

void sub_253AB99D8()
{
}

uint64_t sub_253AB9A00()
{
  return sub_253A95544();
}

void sub_253AB9A18()
{
}

uint64_t sub_253AB9A40@<X0>(void *a1@<X8>)
{
  return ContextPrewarmRequest.init(transcript:)(a1);
}

uint64_t sub_253AB9A68()
{
  return sub_253A9587C();
}

uint64_t sub_253AB9A84()
{
  return TranscriptProtoContextPrewarmRequest.init(handwritten:)();
}

uint64_t sub_253AB9AAC@<X0>(void *a1@<X8>)
{
  return ContextPrewarmCompleted.init(transcript:)(a1);
}

uint64_t sub_253AB9AD4()
{
  return sub_253A9597C();
}

uint64_t sub_253AB9AF0()
{
  return SpeechQuery.init(transcript:)();
}

uint64_t sub_253AB9B08()
{
  return sub_253A95A7C(*(void *)v0, *(unsigned char *)(v0 + 8), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_253AB9B2C()
{
  return TranscriptProtoSpeechQuery.init(handwritten:)();
}

void sub_253AB9B44()
{
}

uint64_t sub_253AB9B5C()
{
  return sub_253A95BEC();
}

void sub_253AB9B74()
{
}

void RequestContent.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v80 = v6;
  uint64_t v81 = v2;
  uint64_t v7 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v78 = (uint64_t)v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v10);
  uint64_t v79 = (char *)v75 - v11;
  uint64_t v12 = sub_253483660();
  uint64_t v13 = type metadata accessor for TranscriptProtoRequestContentSpeechContent(v12);
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  sub_2534D9C1C();
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v24 = sub_253AF2080(v16, v17, v18, v19, v20, v21, v22, v23, v75[0]);
  uint64_t v25 = type metadata accessor for TranscriptProtoStatementID(v24);
  uint64_t v26 = sub_25346CB4C(v25);
  MEMORY[0x270FA5388](v26);
  sub_253AF1F0C();
  sub_253465998();
  v75[2] = v28;
  v75[3] = v27;
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = sub_253AF1FC8(v29, v75[0]);
  type metadata accessor for TranscriptProtoRequestContentTextContent(v30);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v31);
  sub_2535B38D8();
  uint64_t v33 = MEMORY[0x270FA5388](v32);
  sub_253A737FC(v33, v34, v35, v36, v37, v38, v39, v40, v75[0]);
  uint64_t v41 = sub_253462A5C(&qword_269CE1B00);
  uint64_t v42 = sub_25346CB4C(v41);
  MEMORY[0x270FA5388](v42);
  uint64_t v43 = sub_2534B464C();
  uint64_t v44 = type metadata accessor for TranscriptProtoRequestContentEnum(v43);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v45);
  sub_2534B3294();
  uint64_t v46 = sub_2534DA604();
  sub_253961F60(v46, v47, &qword_269CE1B00);
  sub_2534D8B48(v1, 1, v44);
  if (v48)
  {
    sub_253472458(v1, &qword_269CE1B00);
    sub_253462A5C(&qword_269CE86B8);
    sub_253AF1E74();
    sub_25396263C();
    uint64_t v49 = sub_2534D969C();
    *uint64_t v50 = v0;
    v50[1] = (uint64_t *)v1;
    sub_253962224(v49, (uint64_t)v50);
LABEL_4:
    sub_253AF1980();
  }
  else
  {
    uint64_t v51 = sub_2534D99FC();
    sub_253AF19D0(v51, v52);
    sub_253578E4C();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v54 = v81;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        uint64_t v59 = v3;
        uint64_t v60 = v76;
        sub_253AF19D0(v59, v76);
        sub_253AF1A28(v60, v5);
        uint64_t v61 = swift_bridgeObjectRetain();
        sub_253951DEC(v61, v62, v63, v64, v65, v66, v67, v68, v75[0], (uint64_t (*)(uint64_t))v75[1]);
        sub_253AF1980();
        sub_253AF1980();
        sub_253AF39D8();
        if (!v54)
        {
          uint64_t v69 = sub_253AF3714();
          type metadata accessor for RequestContent(v69);
          sub_253AF2A70();
          goto LABEL_14;
        }
        break;
      case 2:
        sub_253AF3D0C();
        sub_253AF19D0(v70, v71);
        sub_253AF1A28((uint64_t)v0, v78);
        RequestContent.SystemPromptResolution.init(transcript:)();
        sub_253AF1980();
        sub_253AF1980();
        if (!v54)
        {
          type metadata accessor for RequestContent(0);
          goto LABEL_14;
        }
        break;
      case 3:
        sub_253AF1980();
        sub_253AF1980();
        type metadata accessor for RequestContent(0);
        goto LABEL_14;
      default:
        sub_253AF19D0(v3, v77);
        uint64_t v55 = sub_253A3F354();
        sub_253AF1A28(v55, v56);
        uint64_t v58 = *v0;
        uint64_t v57 = v0[1];
        swift_bridgeObjectRetain();
        sub_25395E074(v4);
        if (v54)
        {
          sub_253AF1980();
          swift_bridgeObjectRelease();
          sub_253AF1980();
          sub_253A3E5C8();
          goto LABEL_4;
        }
        swift_bridgeObjectRetain();
        uint64_t v81 = v58;
        sub_253AF3464();
        sub_253AF1980();
        sub_253AF1980();
        uint64_t v72 = v80;
        *uint64_t v80 = v81;
        v72[1] = v57;
        uint64_t v73 = type metadata accessor for RequestContent.TextContent(0);
        sub_253A3E348(v73);
        sub_2534D8E14();
        v74();
        sub_253AF1980();
        sub_253AF3364();
        type metadata accessor for RequestContent(0);
        sub_253971D54();
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  sub_2536D4C48();
  sub_2534847C8();
}

void sub_253ABA174()
{
}

uint64_t sub_253ABA18C()
{
  return sub_253A95F70();
}

void TranscriptProtoRequestContent.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v65 = v1;
  uint64_t v5 = sub_253AF2290();
  uint64_t v6 = type metadata accessor for RequestContent.SystemPromptResolution(v5);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v57 = (uint64_t)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v9);
  uint64_t v59 = (uint64_t)&v54 - v10;
  uint64_t v60 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v11);
  uint64_t v61 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_253AF1D50();
  sub_253465998();
  uint64_t v58 = v13;
  MEMORY[0x270FA5388](v14);
  sub_25346CC54();
  uint64_t v15 = sub_253462A5C(&qword_26B249528);
  uint64_t v16 = sub_25346CB4C(v15);
  MEMORY[0x270FA5388](v16);
  sub_253AF2D04();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v17);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v54 - v19;
  uint64_t v21 = sub_253483660();
  type metadata accessor for RequestContent(v21);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v22);
  sub_2534966B0();
  uint64_t v23 = sub_253462A5C(&qword_269CE1B00);
  uint64_t v24 = sub_25346CB4C(v23);
  MEMORY[0x270FA5388](v24);
  uint64_t v25 = sub_25348360C();
  type metadata accessor for TranscriptProtoRequestContentEnum(v25);
  uint64_t v26 = sub_253AF230C();
  uint64_t v63 = v27;
  uint64_t v30 = sub_253AF1CDC(v26, v28, v29, v27);
  type metadata accessor for TranscriptProtoRequestContent(v30);
  sub_253AF3BDC();
  uint64_t v31 = sub_253578E40();
  sub_253AF1A28(v31, v32);
  sub_253A3E5D4();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v56 = v20;
      sub_253AF19D0((uint64_t)v3, (uint64_t)v20);
      uint64_t v40 = sub_2535791E4();
      sub_253AF1A28(v40, v41);
      uint64_t v42 = v4[1];
      uint64_t v59 = *v4;
      uint64_t v57 = v42;
      sub_253AF2300();
      sub_2534AF234();
      v43();
      swift_bridgeObjectRetain();
      HIDWORD(v55) = sub_253B059C0();
      uint64_t v44 = sub_253B059A0();
      uint64_t v46 = v45;
      type metadata accessor for TranscriptProtoStatementID(0);
      sub_253AF2B44();
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_DWORD *)uint64_t v0 = HIDWORD(v55);
      *(void *)(v0 + 8) = v44;
      *(void *)(v0 + 16) = v46;
      sub_253AF2A98();
      sub_2534DA4BC();
      v47();
      sub_2536D4030(v0);
      char v48 = v61;
      uint64_t v49 = (uint64_t)&v61[*(int *)(v60 + 20)];
      sub_253944448(v49, 1);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      uint64_t v50 = v57;
      *char v48 = v59;
      v48[1] = v50;
      sub_253961BF0(v0, v49, &qword_26B249528);
      sub_253AF3AD8();
      sub_253AF1980();
      sub_253AF1980();
      sub_253AF1980();
      goto LABEL_8;
    case 2u:
      sub_253A646D0(*v3, v33, v34, v35, v36, v37, v38, v39, v54, v55);
      uint64_t v52 = v51;
      type metadata accessor for TranscriptProtoRequestContentSpeechContent(0);
      sub_253AF2500();
      *uint64_t v2 = v52;
      sub_253AF1980();
      goto LABEL_8;
    case 3u:
      uint64_t v53 = v59;
      sub_253AF19D0((uint64_t)v3, v59);
      sub_253AF1A28(v53, v57);
      sub_253AF3D50();
      TranscriptProtoSystemPromptResolution.init(handwritten:)();
      sub_253AF1980();
      sub_253AF1980();
      if (!v1) {
        goto LABEL_8;
      }
      sub_253AF1980();
      break;
    default:
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      sub_253AF1980();
LABEL_8:
      swift_storeEnumTagMultiPayload();
      sub_253A73620((uint64_t)v2);
      sub_253961BF0((uint64_t)v2, v64, &qword_269CE1B00);
      break;
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void sub_253ABA6E4()
{
}

void RequestContent.TextContent.init(transcript:)()
{
}

void sub_253ABA750()
{
  sub_2534847F8();
  uint64_t v6 = v5;
  sub_253AF3CAC(v7, v8, v9);
  uint64_t v22 = v10;
  uint64_t v11 = type metadata accessor for TranscriptProtoStatementID(0);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_253A3C4DC();
  sub_253465998();
  uint64_t v15 = v14;
  MEMORY[0x270FA5388](v16);
  sub_2534966B0();
  uint64_t v17 = v2[1];
  uint64_t v18 = sub_253AF21FC(*v2);
  v1(v18);
  swift_bridgeObjectRetain();
  sub_25395E074(v4);
  if (v0)
  {
    sub_253AF1980();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_253B059B0();
    sub_253AF1980();
    sub_253AF1980();
    *uint64_t v22 = v21;
    v22[1] = v17;
    uint64_t v19 = v6(0);
    uint64_t v20 = sub_253A3E348(v19);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v20, v3, v13);
  }
  sub_2534F8A10();
  sub_2534847C8();
}

uint64_t RequestContent.SpeechContent.init(transcript:)(uint64_t a1)
{
  return sub_253AAF8E0(a1, (uint64_t (*)(uint64_t))sub_253951DEC);
}

uint64_t RequestContent.StopContent.init(transcript:)()
{
  return sub_253AF1980();
}

void sub_253ABA944()
{
}

uint64_t sub_253ABA95C()
{
  return sub_253A960F0();
}

void TranscriptProtoRequestContentTextContent.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v4 = v3;
  uint64_t v6 = sub_253962754(v5);
  type metadata accessor for TranscriptProtoRequestContentTextContent(v6);
  sub_253AF3354();
  MEMORY[0x270FA5388](v7);
  sub_253AF1EBC();
  sub_2534727C4();
  MEMORY[0x270FA5388](v8);
  sub_25346CC54();
  uint64_t v9 = sub_253462A5C(&qword_26B249528);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  sub_25347FAAC();
  uint64_t v19 = v4[1];
  uint64_t v20 = *v4;
  type metadata accessor for RequestContent.TextContent(0);
  sub_253AF22F0();
  sub_2534AF234();
  v11();
  swift_bridgeObjectRetain();
  int v12 = sub_253B059C0();
  uint64_t v13 = sub_253B059A0();
  uint64_t v15 = v14;
  type metadata accessor for TranscriptProtoStatementID(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v2 = v12;
  *(void *)(v2 + 8) = v13;
  *(void *)(v2 + 16) = v15;
  sub_2534D97B4();
  v16();
  sub_253A73620(v2);
  sub_253AF1E48((uint64_t)v0 + *(int *)(v1 + 28), 1);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v0 = v20;
  v0[1] = v19;
  uint64_t v17 = sub_253A3E5C8();
  sub_253961BF0(v17, v18, &qword_26B249528);
  sub_253AF19D0((uint64_t)v0, v21);
  sub_253AF1980();
  sub_253962714();
  sub_2534847C8();
}

uint64_t TranscriptProtoRequestContentSpeechContent.init(handwritten:)(uint64_t a1)
{
  uint64_t v2 = sub_253AF3CCC(a1);
  sub_253A646D0(v2, v3, v4, v5, v6, v7, v8, v9, v13, v14);
  uint64_t v11 = v10;
  type metadata accessor for TranscriptProtoRequestContentSpeechContent(0);
  uint64_t result = sub_253945118();
  *uint64_t v1 = v11;
  return result;
}

uint64_t TranscriptProtoRequestContentStopContent.init(handwritten:)()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

void sub_253ABABC0()
{
}

uint64_t sub_253ABABD8()
{
  return RequestContent.StopContent.init(transcript:)();
}

uint64_t sub_253ABABF0()
{
  return sub_253A96270();
}

uint64_t sub_253ABAC08()
{
  return TranscriptProtoRequestContentStopContent.init(handwritten:)();
}

void sub_253ABAC20()
{
}

uint64_t sub_253ABAC38()
{
  return sub_253A96370();
}

void sub_253ABAC50()
{
}

uint64_t sub_253ABAC68(uint64_t a1)
{
  return RequestContent.SpeechContent.init(transcript:)(a1);
}

uint64_t sub_253ABAC80()
{
  return sub_253A96700();
}

uint64_t sub_253ABAC9C(uint64_t a1)
{
  return TranscriptProtoRequestContentSpeechContent.init(handwritten:)(a1);
}

void sub_253ABACB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  ExternalAgentRequest.init(transcript:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_253ABACCC()
{
  return sub_253A9682C();
}

void sub_253ABACE4()
{
}

void RequestPrescribedPlan.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v6 = v5;
  uint64_t v109 = v7;
  uint64_t v8 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v107 = (uint64_t)v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v11);
  uint64_t v116 = (char *)v97 - v12;
  uint64_t v13 = type metadata accessor for TranscriptProtoStatementID(0);
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  uint64_t v106 = (uint64_t)v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253AF1D50();
  sub_253465998();
  uint64_t v102 = v17;
  uint64_t v103 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v101 = (char *)v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_253483660();
  uint64_t v100 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(v19);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v20);
  uint64_t v105 = (uint64_t)v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v22);
  uint64_t v108 = (uint64_t)v97 - v23;
  uint64_t v24 = sub_253483660();
  uint64_t v25 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(v24);
  uint64_t v26 = sub_25346CB4C(v25);
  MEMORY[0x270FA5388](v26);
  uint64_t v115 = (char *)v97 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v28);
  uint64_t v112 = (char *)v97 - v29;
  uint64_t v30 = sub_253483660();
  uint64_t v31 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(v30);
  uint64_t v32 = sub_25346CB4C(v31);
  MEMORY[0x270FA5388](v32);
  uint64_t v111 = (char *)v97 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v34);
  uint64_t v114 = (uint64_t)v97 - v35;
  uint64_t v36 = sub_253483660();
  uint64_t v37 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(v36);
  uint64_t v38 = sub_25346CB4C(v37);
  MEMORY[0x270FA5388](v38);
  uint64_t v110 = (char *)v97 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v40);
  uint64_t v113 = (uint64_t)v97 - v41;
  uint64_t v42 = sub_253483660();
  uint64_t v43 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(v42);
  uint64_t v44 = sub_25346CB4C(v43);
  MEMORY[0x270FA5388](v44);
  uint64_t v104 = (uint64_t)v97 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v46);
  uint64_t v47 = sub_253A74194();
  uint64_t v48 = type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(v47);
  uint64_t v49 = sub_25346CB4C(v48);
  MEMORY[0x270FA5388](v49);
  sub_2534B340C();
  MEMORY[0x270FA5388](v50);
  uint64_t v52 = (char *)v97 - v51;
  uint64_t v53 = sub_253AF2098();
  uint64_t v54 = type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(v53);
  uint64_t v55 = sub_25346CB4C(v54);
  MEMORY[0x270FA5388](v55);
  sub_2534D8CE4();
  MEMORY[0x270FA5388](v56);
  uint64_t v58 = (char *)v97 - v57;
  uint64_t v59 = sub_253962344();
  type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(v59);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v60);
  sub_253AF2CC0();
  sub_25395E510(v61);
  if (v0)
  {
    sub_253AF1980();
  }
  else
  {
    v97[0] = v2;
    v97[1] = v6;
    uint64_t v98 = v58;
    uint64_t v99 = v3;
    uint64_t v62 = (uint64_t)v110;
    uint64_t v63 = (uint64_t)v112;
    uint64_t v64 = v116;
    sub_253971DD4();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v66 = (uint64_t)v64;
    uint64_t v67 = (uint64_t)v115;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        sub_253AF19D0(v4, (uint64_t)v52);
        uint64_t v74 = sub_2534DA034();
        sub_253AF1A28(v74, v75);
        uint64_t v77 = *v1;
        uint64_t v76 = v1[1];
        swift_bridgeObjectRetain();
        sub_253AF1980();
        sub_253AF1980();
        sub_253AF3BB0();
        uint64_t v78 = v109;
        *uint64_t v109 = v77;
        v78[1] = v76;
        type metadata accessor for RequestPrescribedPlan(0);
        sub_253AF2618();
        goto LABEL_15;
      case 2:
        uint64_t v79 = v99;
        sub_253AF19D0(v4, v99);
        uint64_t v80 = v104;
        sub_253AF1A28(v79, v104);
        uint64_t v82 = *(void *)v80;
        uint64_t v81 = *(void *)(v80 + 8);
        char v83 = *(unsigned char *)(v80 + 16);
        swift_bridgeObjectRetain();
        sub_253AF1980();
        sub_253AF1980();
        sub_253AF39D8();
        uint64_t v84 = v109;
        *uint64_t v109 = v82;
        v84[1] = v81;
        *((unsigned char *)v84 + 16) = v83;
        type metadata accessor for RequestPrescribedPlan(0);
        sub_253AF2A70();
        goto LABEL_15;
      case 3:
        uint64_t v85 = v113;
        sub_253AF19D0(v4, v113);
        sub_253AF1A28(v85, v62);
        swift_bridgeObjectRetain();
        sub_253AF1980();
        sub_253AF1980();
        sub_253AF2640();
        sub_253AF27D0();
        goto LABEL_15;
      case 4:
        sub_253AF19D0(v4, v114);
        sub_253AF2804();
        swift_bridgeObjectRetain();
        sub_253AF1980();
        sub_253AF1980();
        sub_253AF2640();
        sub_253AF27D0();
        goto LABEL_15;
      case 5:
        sub_253AF19D0(v4, v63);
        sub_253AF1A28(v63, v67);
        swift_bridgeObjectRetain();
        sub_253AF1980();
        sub_253AF1980();
        sub_2534DA604();
        sub_253AF1980();
        sub_253AF27D0();
        sub_253A3F4E8();
        goto LABEL_15;
      case 6:
        uint64_t v86 = v108;
        sub_253AF19D0(v4, v108);
        uint64_t v87 = v105;
        sub_253AF1A28(v86, v105);
        sub_25395E074(v106);
        swift_bridgeObjectRetain();
        sub_253AF1F34();
        sub_253AF1980();
        uint64_t v92 = v87 + *(int *)(v100 + 20);
        char v93 = *(unsigned char *)(v92 + 8);
        if (v93) {
          uint64_t v94 = 0;
        }
        else {
          uint64_t v94 = *(void *)v92;
        }
        sub_253AF1980();
        uint64_t v95 = (char *)v109 + *(int *)(type metadata accessor for RequestPrescribedPlan.OpenTool(0) + 20);
        sub_2534D8E14();
        v96();
        *(void *)uint64_t v95 = v94;
        v95[8] = v93;
        sub_253AF1980();
        sub_253AF1980();
        type metadata accessor for RequestPrescribedPlan(0);
        sub_253AF3D68();
        swift_storeEnumTagMultiPayload();
        break;
      case 7:
        sub_253AF2C3C();
        uint64_t v88 = v107;
        sub_253AF1A28(v66, v107);
        char v89 = *(unsigned char *)(v88 + 8);
        if (v89) {
          uint64_t v90 = 0;
        }
        else {
          uint64_t v90 = *(void *)v88;
        }
        sub_253AF1980();
        sub_253AF1980();
        sub_253AF2C0C();
        char v91 = v109;
        *uint64_t v109 = v90;
        *((unsigned char *)v91 + 8) = v89;
        type metadata accessor for RequestPrescribedPlan(0);
        sub_253AF34D4();
        goto LABEL_15;
      default:
        uint64_t v68 = (uint64_t)v98;
        sub_253AF19D0(v4, (uint64_t)v98);
        uint64_t v69 = v97[0];
        sub_253AF1A28(v68, v97[0]);
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *(void *)(v69 + 8);
        char v72 = *(unsigned char *)(v69 + 16);
        swift_bridgeObjectRetain();
        sub_253AF1980();
        sub_253AF1980();
        sub_2534D9AA0();
        sub_253AF1980();
        uint64_t v73 = v109;
        *uint64_t v109 = v71;
        v73[1] = v70;
        *((unsigned char *)v73 + 16) = v72;
        *((unsigned char *)v73 + 17) = 0;
        type metadata accessor for RequestPrescribedPlan(0);
        sub_253971D44();
LABEL_15:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  sub_2534F8590();
  sub_2534847C8();
}

uint64_t RequestPrescribedPlan.SearchTool.init(transcript:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  char v5 = *((unsigned char *)a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = sub_253AF1980();
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 16) = v5;
  *(unsigned char *)(a2 + 17) = 0;
  return result;
}

uint64_t RequestPrescribedPlan.LowConfidenceKnowledgeTool.init(transcript:)()
{
  sub_253AF3114();
  uint64_t result = sub_253AF1980();
  *uint64_t v0 = v2;
  v0[1] = v1;
  return result;
}

uint64_t RequestPrescribedPlan.TextTool.init(transcript:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_253ABB8D0(a1, a2);
}

uint64_t RequestPrescribedPlan.ConvertTool.init(transcript:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_253ABB8D0(a1, a2);
}

uint64_t sub_253ABB8D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  char v5 = *((unsigned char *)a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = sub_253AF1980();
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 16) = v5;
  return result;
}

uint64_t RequestPrescribedPlan.DisplayTool.init(transcript:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_253ABB8D0(a1, a2);
}

uint64_t RequestPrescribedPlan.KnowledgeTool.init(transcript:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_253ABB8D0(a1, a2);
}

void RequestPrescribedPlan.OpenTool.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v2 = sub_253971B04();
  uint64_t v3 = type metadata accessor for TranscriptProtoStatementID(v2);
  uint64_t v4 = sub_25346CB4C(v3);
  MEMORY[0x270FA5388](v4);
  sub_253AF20E8();
  sub_253465998();
  MEMORY[0x270FA5388](v5);
  sub_253AF2920();
  if (v1)
  {
    sub_253AF1980();
  }
  else
  {
    sub_253AF33F4();
    sub_253AF25FC();
    sub_253AF1980();
    uint64_t v6 = (uint64_t *)(v0 + *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0) + 20));
    char v7 = *((unsigned char *)v6 + 8);
    if (v7) {
      uint64_t v8 = 0;
    }
    else {
      uint64_t v8 = *v6;
    }
    sub_253AF1980();
    type metadata accessor for RequestPrescribedPlan.OpenTool(0);
    sub_253AF32F4();
    sub_2534DA034();
    sub_253A3C378();
    v9();
    *(void *)uint64_t v0 = v8;
    *(unsigned char *)(v0 + 8) = v7;
  }
  sub_253578DEC();
  sub_2534847C8();
}

uint64_t RequestPrescribedPlan.OpenSuccessValueFromLatestRequestTool.init(transcript:)()
{
  sub_253AF2B10();
  uint64_t result = sub_253AF1980();
  *(void *)uint64_t v0 = v2;
  *(unsigned char *)(v0 + 8) = v1;
  return result;
}

void sub_253ABBB28()
{
}

uint64_t sub_253ABBB40()
{
  return sub_253A969AC();
}

void TranscriptProtoRequestPrescribedPlan.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  sub_2534847F8();
  a20 = v26;
  a21 = v27;
  uint64_t v29 = v28;
  uint64_t v30 = sub_253A3F064();
  uint64_t v31 = type metadata accessor for RequestPrescribedPlan.OpenTool(v30);
  uint64_t v32 = sub_25346CB4C(v31);
  MEMORY[0x270FA5388](v32);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&a9 - v34;
  uint64_t v36 = sub_253AF1D98();
  type metadata accessor for RequestPrescribedPlan(v36);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v37);
  sub_25347FAAC();
  uint64_t v38 = sub_253462A5C(&qword_269CE1B50);
  uint64_t v39 = sub_25346CB4C(v38);
  MEMORY[0x270FA5388](v39);
  uint64_t v40 = sub_2534D9C00();
  uint64_t v41 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(v40);
  uint64_t v42 = sub_253AF1CDC(v21, 1, 1, v41);
  type metadata accessor for TranscriptProtoRequestPrescribedPlan(v42);
  sub_2539457F0();
  sub_253AF1A28(v29, v25);
  sub_253A3D03C();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v46 = *(void *)v25;
      uint64_t v47 = *(void *)(v25 + 8);
      type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(void *)uint64_t v23 = v46;
      *(void *)(v23 + 8) = v47;
      goto LABEL_9;
    case 2u:
      uint64_t v48 = sub_253AF27C0();
      type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(v48);
      goto LABEL_8;
    case 3u:
      uint64_t v49 = sub_253AF27C0();
      type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(v49);
      goto LABEL_8;
    case 4u:
      uint64_t v50 = sub_253AF27C0();
      type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(v50);
      goto LABEL_8;
    case 5u:
      uint64_t v51 = sub_253AF27C0();
      type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(v51);
LABEL_8:
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(void *)uint64_t v23 = v35;
      *(void *)(v23 + 8) = v24;
      *(unsigned char *)(v23 + 16) = v25;
      goto LABEL_9;
    case 6u:
      sub_253AF19D0(v25, (uint64_t)v35);
      sub_253AF1A28((uint64_t)v35, v24);
      TranscriptProtoRequestPrescribedPlanOpenTool.init(handwritten:)();
      sub_253AF1980();
      sub_253AF1980();
      if (!v22) {
        goto LABEL_10;
      }
      sub_253AF1980();
      break;
    case 7u:
      char v55 = *(unsigned char *)(v25 + 8);
      if (v55) {
        uint64_t v56 = 0;
      }
      else {
        uint64_t v56 = *(void *)v25;
      }
      type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(void *)uint64_t v23 = v56;
      *(unsigned char *)(v23 + 8) = v55;
      goto LABEL_9;
    default:
      uint64_t v43 = *(void *)v25;
      uint64_t v44 = *(void *)(v25 + 8);
      a11 = *(unsigned __int8 *)(v25 + 16);
      char v45 = *(unsigned char *)(v25 + 17);
      type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(void *)uint64_t v23 = v43;
      *(void *)(v23 + 8) = v44;
      *(unsigned char *)(v23 + 16) = a11;
      *(unsigned char *)(v23 + 17) = v45;
LABEL_9:
      sub_253AF1980();
LABEL_10:
      sub_2534D9B1C();
      swift_storeEnumTagMultiPayload();
      sub_253AF215C(v23);
      uint64_t v52 = sub_2534DA828();
      sub_253961BF0(v52, v53, v54);
      break;
  }
  sub_2536D3D5C();
  sub_2534847C8();
}

uint64_t TranscriptProtoRequestPrescribedPlanSearchTool.init(handwritten:)()
{
  sub_253AF383C();
  char v5 = *(unsigned char *)(v4 + 17);
  type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0);
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)uint64_t v0 = v1;
  *(void *)(v0 + 8) = v2;
  *(unsigned char *)(v0 + 16) = v3;
  *(unsigned char *)(v0 + 17) = v5;
  return result;
}

uint64_t TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool.init(handwritten:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_253ABBF18(a1, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool, a2);
}

uint64_t sub_253ABBF18@<X0>(uint64_t *a1@<X0>, void (*a2)(void)@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  a2(0);
  uint64_t result = sub_2539457F0();
  *a3 = v4;
  a3[1] = v5;
  return result;
}

uint64_t TranscriptProtoRequestPrescribedPlanTextTool.init(handwritten:)()
{
  return sub_253ABC010();
}

uint64_t TranscriptProtoRequestPrescribedPlanConvertTool.init(handwritten:)()
{
  return sub_253ABC010();
}

uint64_t TranscriptProtoRequestPrescribedPlanDisplayTool.init(handwritten:)()
{
  return sub_253ABC010();
}

uint64_t TranscriptProtoRequestPrescribedPlanKnowledgeTool.init(handwritten:)()
{
  return sub_253ABC010();
}

uint64_t sub_253ABC010()
{
  sub_253AF383C();
  v4(0);
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)uint64_t v0 = v1;
  *(void *)(v0 + 8) = v2;
  *(unsigned char *)(v0 + 16) = v3;
  return result;
}

void TranscriptProtoRequestPrescribedPlanOpenTool.init(handwritten:)()
{
  sub_2534847F8();
  sub_253AF2F70();
  uint64_t v24 = v2;
  uint64_t v4 = sub_253962754(v3);
  uint64_t v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(v4);
  uint64_t v6 = sub_253AF3CEC(v5);
  MEMORY[0x270FA5388](v6);
  sub_253AF1EBC();
  sub_253465998();
  MEMORY[0x270FA5388](v7);
  sub_25346CC54();
  uint64_t v8 = sub_253462A5C(&qword_26B249528);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  sub_2534B34A4();
  sub_2534D9778();
  sub_2534AF234();
  v10();
  int v11 = sub_253B059C0();
  uint64_t v12 = sub_253B059A0();
  uint64_t v14 = v13;
  uint64_t v15 = type metadata accessor for TranscriptProtoStatementID(0);
  sub_253AF2720();
  *(_DWORD *)uint64_t v1 = v11;
  *(void *)(v1 + 8) = v12;
  *(void *)(v1 + 16) = v14;
  sub_253AF2A98();
  sub_2534DA4BC();
  v16();
  uint64_t v17 = sub_253AF1CDC(v1, 0, 1, v15);
  uint64_t v18 = (uint64_t *)(v24 + *(int *)(type metadata accessor for RequestPrescribedPlan.OpenTool(v17) + 20));
  char v19 = *((unsigned char *)v18 + 8);
  if (v19) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = *v18;
  }
  sub_253944448(v0, 1);
  uint64_t v21 = v0 + *(int *)(v25 + 28);
  *(void *)uint64_t v21 = 0;
  *(unsigned char *)(v21 + 8) = 1;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v22 = sub_253A3D518();
  sub_253961BF0(v22, v23, &qword_26B249528);
  *(void *)uint64_t v21 = v20;
  *(unsigned char *)(v21 + 8) = v19;
  sub_253AF19D0(v0, v26);
  sub_253AF1980();
  sub_253962714();
  sub_2534847C8();
}

uint64_t TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool.init(handwritten:)()
{
  sub_253AF2B10();
  type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0);
  uint64_t result = sub_2539457F0();
  *(void *)uint64_t v0 = v2;
  *(unsigned char *)(v0 + 8) = v1;
  return result;
}

#error "253ABC298: call analysis failed (funcsize=6)"

uint64_t sub_253ABC2A4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return RequestPrescribedPlan.SearchTool.init(transcript:)(a1, a2);
}

uint64_t sub_253ABC2BC()
{
  if (*(unsigned char *)(v0 + 17)) {
    __int16 v1 = 256;
  }
  else {
    __int16 v1 = 0;
  }
  return sub_253A96B2C(*(void *)v0, *(void *)(v0 + 8), v1 | *(unsigned __int8 *)(v0 + 16));
}

uint64_t sub_253ABC2F0()
{
  return TranscriptProtoRequestPrescribedPlanSearchTool.init(handwritten:)();
}

uint64_t sub_253ABC308()
{
  return RequestPrescribedPlan.LowConfidenceKnowledgeTool.init(transcript:)();
}

uint64_t sub_253ABC320()
{
  return sub_253A96C64(*v0, v0[1]);
}

uint64_t sub_253ABC33C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool.init(handwritten:)(a1, a2);
}

uint64_t sub_253ABC354@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return RequestPrescribedPlan.TextTool.init(transcript:)(a1, a2);
}

uint64_t sub_253ABC36C()
{
  return sub_253A96D88(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_253ABC38C()
{
  return TranscriptProtoRequestPrescribedPlanTextTool.init(handwritten:)();
}

uint64_t sub_253ABC3A4()
{
  return TranscriptProtoRequestPrescribedPlanConvertTool.init(handwritten:)();
}

uint64_t sub_253ABC3BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return RequestPrescribedPlan.ConvertTool.init(transcript:)(a1, a2);
}

uint64_t sub_253ABC3D4()
{
  return sub_253A96EB4(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_253ABC3F4()
{
  return TranscriptProtoRequestPrescribedPlanDisplayTool.init(handwritten:)();
}

uint64_t sub_253ABC40C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return RequestPrescribedPlan.DisplayTool.init(transcript:)(a1, a2);
}

uint64_t sub_253ABC424()
{
  return sub_253A96FE0(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_253ABC444@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return RequestPrescribedPlan.KnowledgeTool.init(transcript:)(a1, a2);
}

uint64_t sub_253ABC45C()
{
  return sub_253A9710C(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_253ABC47C()
{
  return TranscriptProtoRequestPrescribedPlanKnowledgeTool.init(handwritten:)();
}

void sub_253ABC494()
{
}

uint64_t sub_253ABC4AC()
{
  return sub_253A97238();
}

void sub_253ABC4C4()
{
}

uint64_t sub_253ABC4DC()
{
  return RequestPrescribedPlan.OpenSuccessValueFromLatestRequestTool.init(transcript:)();
}

uint64_t sub_253ABC4F4()
{
  return sub_253A973B8(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_253ABC514()
{
  return TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool.init(handwritten:)();
}

uint64_t GlobalToolIdentifier.init(transcript:)()
{
  sub_253A7402C();
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v4 = v1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_253AF1980();
  *uint64_t v0 = v3;
  v0[1] = v2;
  v0[2] = v5;
  v0[3] = v4;
  return result;
}

void sub_253ABC5BC()
{
}

uint64_t sub_253ABC5D4()
{
  return sub_253A974DC();
}

uint64_t TranscriptProtoGlobalToolIdentifier.init(handwritten:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v5 = a1[3];
  type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = v3;
  a2[2] = v6;
  a2[3] = v5;
  return result;
}

void sub_253ABC664()
{
}

void sub_253ABC67C()
{
}

uint64_t sub_253ABC694()
{
  return sub_253A9765C();
}

void sub_253ABC6AC()
{
}

void sub_253ABC6C4()
{
}

uint64_t sub_253ABC6DC()
{
  return sub_253A977DC();
}

void sub_253ABC6F4()
{
}

void ClientAction.ShimParameter.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v57 = v4;
  uint64_t v5 = sub_253462A5C(&qword_269CE1D00);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = sub_25351C4C8(v7, v48);
  uint64_t v48 = type metadata accessor for TranscriptProtoPersonQuery(v8);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v9);
  uint64_t v51 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v11);
  uint64_t v52 = (uint64_t)&v48 - v12;
  sub_2536D3938();
  sub_253465998();
  uint64_t v49 = v13;
  MEMORY[0x270FA5388](v14);
  sub_25353CE24();
  MEMORY[0x270FA5388](v15);
  sub_2534F8600();
  MEMORY[0x270FA5388](v16);
  sub_2535B3D6C();
  uint64_t v17 = sub_253462A5C(&qword_269CDCC38);
  uint64_t v18 = sub_25346CB4C(v17);
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = sub_2534D8CAC();
  uint64_t v20 = type metadata accessor for TranscriptProtoShimParameterEnum(v19);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v21);
  sub_2534835B0();
  uint64_t v22 = sub_2534D954C();
  sub_253961F60(v22, v23, &qword_269CDCC38);
  sub_2534D8B48(v3, 1, v20);
  if (!v24)
  {
    sub_253AF19D0(v3, (uint64_t)v0);
    sub_253945CF8();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        sub_253AF1980();
        uint64_t v28 = v0[1];
        *(void *)uint64_t v57 = *v0;
        *(void *)(v57 + 8) = v28;
        type metadata accessor for ClientAction.ShimParameter(0);
        sub_253971D54();
        swift_storeEnumTagMultiPayload();
        goto LABEL_15;
      }
      uint64_t v38 = v52;
      sub_253AF19D0((uint64_t)v0, v52);
      uint64_t v39 = v51;
      sub_253AF1A28(v38, v51);
      uint64_t v41 = *(void *)(v39 + 8);
      uint64_t v40 = *(void *)(v39 + 16);
      sub_253961F60(v39 + *(int *)(v48 + 24), v50, &qword_269CE1D00);
      swift_bridgeObjectRetain();
      sub_25395B9F8();
      if (v2)
      {
        swift_bridgeObjectRelease();
        sub_253AF1980();
        sub_253AF1980();
        sub_253AF25E4();
        goto LABEL_4;
      }
      long long v53 = v54;
      long long v50 = v55;
      uint64_t v45 = v56;
      char v46 = *(unsigned char *)v39;
      sub_253AF1980();
      sub_253AF1980();
      sub_253AF1980();
      *(void *)uint64_t v57 = v41;
      *(void *)(v57 + 8) = v40;
      long long v47 = v50;
      *(_OWORD *)(v57 + 16) = v53;
      *(_OWORD *)(v57 + 32) = v47;
      *(void *)(v57 + 48) = v45;
      *(unsigned char *)(v57 + 56) = v46;
      type metadata accessor for ClientAction.ShimParameter(0);
      sub_253AF2A70();
    }
    else
    {
      uint64_t v29 = v49;
      sub_253A3F354();
      sub_25347FA84();
      v31(v30);
      uint64_t v32 = *(void (**)(uint64_t))(v29 + 16);
      sub_253579328();
      sub_253535668();
      v32(v33);
      sub_253AF2B04();
      sub_253535668();
      v32(v34);
      sub_253B09110();
      if (v2)
      {
        uint64_t v35 = *(void (**)(uint64_t))(v29 + 8);
        sub_2534DA4BC();
        v35(v36);
        sub_253AF1980();
        sub_2534DA4BC();
        v35(v37);
        goto LABEL_15;
      }
      uint64_t v42 = *(void (**)(uint64_t))(v29 + 8);
      sub_2534DA4BC();
      v42(v43);
      sub_253AF1980();
      sub_2534DA4BC();
      v42(v44);
      type metadata accessor for ClientAction.ShimParameter(0);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_15;
  }
  sub_253472458(v3, &qword_269CDCC38);
  *(void *)&long long v54 = v20;
  sub_253462A5C(&qword_269CE86C0);
  sub_253B09730();
  sub_25396263C();
  uint64_t v25 = sub_2534D969C();
  *uint64_t v26 = v0;
  v26[1] = v1;
  sub_253962224(v25, (uint64_t)v26);
LABEL_4:
  sub_253AF1980();
LABEL_15:
  sub_253A73FF4();
  sub_2534847C8();
}

void ClientAction.PersonQuery.init(transcript:)()
{
  sub_2535B4280();
  sub_253AF2664();
  uint64_t v4 = sub_253462A5C(&qword_269CE1D00);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_25346CC6C();
  uint64_t v7 = *((void *)v1 + 1);
  uint64_t v6 = *((void *)v1 + 2);
  uint64_t v8 = type metadata accessor for TranscriptProtoPersonQuery(0);
  sub_253961F60((uint64_t)&v1[*(int *)(v8 + 24)], v3, &qword_269CE1D00);
  swift_bridgeObjectRetain();
  sub_25395B9F8();
  if (v2)
  {
    sub_253AF1980();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = *v1;
    sub_253AF1980();
    *(void *)uint64_t v0 = v7;
    *(void *)(v0 + 8) = v6;
    *(_OWORD *)(v0 + 16) = v10;
    *(_OWORD *)(v0 + 32) = v11;
    *(void *)(v0 + 48) = v12;
    *(unsigned char *)(v0 + 56) = v9;
  }
  sub_2535B42DC();
}

void sub_253ABCD38()
{
}

uint64_t sub_253ABCD50()
{
  return sub_253A9795C();
}

void TranscriptProtoShimParameter.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v82 = v0;
  uint64_t v76 = v3;
  uint64_t v5 = v4;
  uint64_t v6 = sub_253462A5C(&qword_269CE1D00);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  char v72 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for TranscriptProtoPersonQuery(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v9);
  uint64_t v67 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v11);
  sub_2534B3318();
  uint64_t v69 = v12;
  sub_2534B324C();
  MEMORY[0x270FA5388](v13);
  uint64_t v68 = (uint64_t)&v64 - v14;
  sub_2536D3938();
  sub_253465998();
  uint64_t v70 = v15;
  MEMORY[0x270FA5388](v16);
  sub_253AF1FC8(v17, v64);
  sub_253B09120();
  sub_253465998();
  uint64_t v19 = v18;
  MEMORY[0x270FA5388](v20);
  sub_25353CE24();
  MEMORY[0x270FA5388](v21);
  uint64_t v22 = sub_253971BBC();
  type metadata accessor for ClientAction.ShimParameter(v22);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v23);
  sub_25347FAAC();
  uint64_t v24 = sub_253462A5C(&qword_269CDCC38);
  uint64_t v25 = sub_25346CB4C(v24);
  MEMORY[0x270FA5388](v25);
  uint64_t v26 = sub_25348360C();
  type metadata accessor for TranscriptProtoShimParameterEnum(v26);
  uint64_t v27 = sub_253A3E620();
  uint64_t v74 = v28;
  uint64_t v31 = sub_253AF1CDC(v27, v29, v30, v28);
  type metadata accessor for TranscriptProtoShimParameter(v31);
  uint64_t v75 = v5;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v32 = sub_253AF3A1C();
  sub_253AF1A28(v32, v33);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_253AF1980();
      uint64_t v35 = v2[1];
      *uint64_t v1 = *v2;
      v1[1] = v35;
LABEL_11:
      uint64_t v63 = v75;
      sub_25353CE60();
      swift_storeEnumTagMultiPayload();
      sub_2536D4030((uint64_t)v1);
      sub_253961BF0((uint64_t)v1, v63, &qword_269CDCC38);
      goto LABEL_12;
    }
    uint64_t v39 = v2[1];
    uint64_t v65 = *v2;
    uint64_t v40 = v2[2];
    uint64_t v41 = v2[3];
    uint64_t v42 = v2[4];
    uint64_t v43 = v2[5];
    uint64_t v44 = v2[6];
    HIDWORD(v64) = *((unsigned __int8 *)v2 + 56);
    uint64_t v77 = v40;
    uint64_t v78 = v41;
    uint64_t v79 = v42;
    uint64_t v80 = v43;
    uint64_t v81 = v44;
    uint64_t v73 = v39;
    swift_bridgeObjectRetain();
    uint64_t v70 = v40;
    uint64_t v66 = v41;
    sub_253AF2634();
    sub_2539EDEE4(v45, v46, v47);
    sub_253960EC0();
    if (!v82)
    {
      long long v50 = v67;
      uint64_t v51 = (uint64_t)&v67[*(int *)(v71 + 24)];
      uint64_t v52 = type metadata accessor for TranscriptProtoHandle(0);
      sub_25346CC08(v51, v53, v54, v52);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      uint64_t v55 = v73;
      *((void *)v50 + 1) = v65;
      *((void *)v50 + 2) = v55;
      uint64_t v56 = sub_253579328();
      sub_253961BF0(v56, v57, v58);
      *long long v50 = BYTE4(v64);
      uint64_t v59 = (uint64_t)v50;
      uint64_t v60 = v69;
      sub_253AF19D0(v59, v69);
      swift_bridgeObjectRelease();
      sub_253AF2F30();
      sub_253AF19D0(v60, v68);
      uint64_t v61 = sub_253578828();
      sub_253AF19D0(v61, v62);
      sub_253AF1980();
      goto LABEL_11;
    }
    swift_bridgeObjectRelease_n();
    sub_253AF2F30();
    sub_253AF1980();
  }
  else
  {
    sub_253A56C4C();
    sub_25347FA84();
    v36();
    sub_253AF22F0();
    sub_2534AF234();
    v37();
    sub_253B09100();
    if (!v0)
    {
      uint64_t v48 = *(void (**)(void))(v19 + 8);
      sub_2534D97B4();
      v48();
      sub_2534D8E14();
      v49();
      sub_253AF1980();
      sub_2534D97B4();
      v48();
      goto LABEL_11;
    }
    uint64_t v38 = *(void (**)(void))(v19 + 8);
    sub_2534D97B4();
    v38();
    sub_253AF1980();
    sub_2534D97B4();
    v38();
  }
  sub_253AF1980();
LABEL_12:
  sub_2534F856C();
  sub_2534847C8();
}

void TranscriptProtoPersonQuery.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  sub_253AF2F70();
  uint64_t v13 = sub_253AF37A4(v12);
  uint64_t v34 = type metadata accessor for TranscriptProtoPersonQuery(v13);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v14);
  sub_25346CC54();
  uint64_t v15 = sub_253462A5C(&qword_269CE1D00);
  uint64_t v16 = sub_25346CB4C(v15);
  MEMORY[0x270FA5388](v16);
  sub_2534B34A4();
  uint64_t v17 = v10[1];
  uint64_t v32 = *v10;
  char v31 = *((unsigned char *)v10 + 56);
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_253AF259C();
  sub_2539EDEE4(v18, v19, v20);
  sub_253960EC0();
  if (a10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v21 = v11 + *(int *)(v34 + 24);
    uint64_t v22 = type metadata accessor for TranscriptProtoHandle(0);
    sub_25346CC08(v21, v23, v24, v22);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(void *)(v11 + 8) = v32;
    *(void *)(v11 + 16) = v17;
    uint64_t v25 = sub_253AF21E0();
    sub_253961BF0(v25, v26, v27);
    *(unsigned char *)uint64_t v11 = v31;
    sub_253AF19D0(v11, v33);
    swift_bridgeObjectRelease();
  }
  uint64_t v28 = sub_253AF259C();
  sub_253961E40(v28, v29, v30);
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_253ABD418()
{
}

void sub_253ABD430()
{
}

uint64_t sub_253ABD448()
{
  return sub_253A97ADC();
}

void sub_253ABD48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  TranscriptProtoPersonQuery.init(handwritten:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void ClientAction.PersonQuery.Handle.init(transcript:)()
{
}

void sub_253ABD510()
{
}

uint64_t sub_253ABD528()
{
  return sub_253A97D54();
}

void TranscriptProtoHandle.init(handwritten:)()
{
}

void sub_253ABD5DC()
{
}

IntelligenceFlowPlannerSupport::ClientAction::PersonQuery::Handle::Kind __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ClientAction.PersonQuery.Handle.Kind.init(transcript:)(IntelligenceFlowPlannerSupport::TranscriptProtoHandle::Kind transcript)
{
  sub_253592EB0(v1);
  return result;
}

uint64_t sub_253ABD5FC(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_253AD01BC(a1, a2, a3, (uint64_t (*)(char *))ClientAction.PersonQuery.Handle.Kind.init(transcript:));
}

uint64_t sub_253ABD628(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_253AD01BC(a1, a2, a3, (uint64_t (*)(char *))TranscriptProtoHandle.Kind.init(handwritten:));
}

void sub_253ABD654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

uint64_t sub_253ABD66C()
{
  return sub_253A97ED8();
}

void sub_253ABD684()
{
}

void sub_253ABD69C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

char *sub_253ABD6B4()
{
  return sub_253A98058();
}

void sub_253ABD6CC()
{
}

uint64_t IntelligenceFlowError.init(transcript:)()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F087E8]);
  swift_bridgeObjectRetain();
  sub_253AF2634();
  sub_253AE436C(v1, v2, v3, 0);
  sub_253B05950();
  return sub_253AF1980();
}

uint64_t sub_253ABD770()
{
  return IntelligenceFlowError.init(transcript:)();
}

uint64_t sub_253ABD798()
{
  return sub_253A98420();
}

uint64_t TranscriptProtoIntelligenceFlowError.init(handwritten:)()
{
  sub_253AF2664();
  uint64_t v1 = (void *)sub_253B05920();
  id v2 = objc_msgSend(v1, sel_domain);

  uint64_t v3 = sub_253B096E0();
  uint64_t v5 = v4;

  uint64_t v6 = (void *)sub_253B05920();
  id v7 = objc_msgSend(v6, sel_code);

  type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *id v0 = v3;
  v0[1] = v5;
  v0[2] = (uint64_t)v7;
  sub_253B05940();
  sub_25346CAF4();
  uint64_t v8 = sub_253A3F4E8();
  return v9(v8);
}

uint64_t sub_253ABD888()
{
  return TranscriptProtoIntelligenceFlowError.init(handwritten:)();
}

void RequestContent.SystemPromptResolution.UserAction.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v48 = v6;
  uint64_t v7 = sub_253A3EF6C();
  uint64_t v8 = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(v7);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  long long v50 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  sub_2536D3010(v12, v13, v14, v15, v16, v17, v18, v19, v47[0]);
  sub_253B08E50();
  sub_253465998();
  uint64_t v49 = v20;
  MEMORY[0x270FA5388](v21);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v22);
  sub_25351C770();
  MEMORY[0x270FA5388](v23);
  sub_2535B3D6C();
  uint64_t v24 = sub_253462A5C(&qword_269CE2200);
  uint64_t v25 = sub_25346CB4C(v24);
  MEMORY[0x270FA5388](v25);
  uint64_t v26 = sub_2534AF2D8();
  uint64_t v27 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(v26);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v28);
  sub_25346CC54();
  uint64_t v51 = v4;
  uint64_t v29 = sub_2536D3880();
  sub_253961F60(v29, v30, &qword_269CE2200);
  sub_2534D8B48(v2, 1, v27);
  if (v31)
  {
    sub_253472458(v2, &qword_269CE2200);
    sub_253462A5C(&qword_269CE86C8);
    sub_253AF1E74();
    sub_25396263C();
    uint64_t v32 = sub_2534D969C();
    *uint64_t v33 = v27;
    v33[1] = (uint64_t)v0;
    sub_253962224(v32, (uint64_t)v33);
    sub_253AF1980();
  }
  else
  {
    v47[1] = v5;
    v47[3] = v3;
    uint64_t v34 = v50;
    uint64_t v35 = v49;
    sub_253AF19D0(v2, (uint64_t)v0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 1:
        sub_25351C9FC();
        sub_253A3E5C8();
        sub_25347FA84();
        v37();
        uint64_t v38 = *(void (**)(void))(v35 + 16);
        sub_253AF3A1C();
        sub_253535668();
        v38();
        sub_2534DA154();
        sub_253535668();
        v38();
        sub_253B09110();
        if (v1)
        {
          uint64_t v39 = *(void (**)(void))(v35 + 8);
          sub_2534D97B4();
          v39();
          sub_253AF1980();
          sub_2534D97B4();
          v39();
        }
        else
        {
          uint64_t v46 = *(void (**)(void))(v35 + 8);
          sub_2534D97B4();
          v46();
          sub_253AF1980();
          sub_2534D97B4();
          v46();
          type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
          sub_253AF2618();
          swift_storeEnumTagMultiPayload();
        }
        break;
      case 3:
      case 4:
        uint64_t v40 = *v0;
        sub_253AF1980();
        *uint64_t v48 = v40;
        type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
        sub_253971DF8();
        goto LABEL_12;
      case 5:
        uint64_t v41 = sub_253578EEC();
        sub_253AF19D0(v41, v42);
        uint64_t v43 = sub_2534DA154();
        sub_253AF1A28(v43, v44);
        char v45 = *v34;
        sub_253AF1980();
        sub_253AF1980();
        sub_253AF2C0C();
        *(unsigned char *)uint64_t v48 = v45;
        type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
        sub_253971DF8();
        goto LABEL_12;
      case 6:
        sub_253AF1980();
        sub_253AF1980();
        type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
        sub_253AF2E50();
        goto LABEL_12;
      case 7:
        sub_253AF1980();
        type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
        sub_253AF2E50();
        goto LABEL_12;
      default:
        sub_253AF1980();
        sub_253AF3610();
LABEL_12:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  sub_253578DEC();
  sub_2534847C8();
}

void RequestContent.SystemPromptResolution.ResolutionInput.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v53 = v6;
  uint64_t v54 = v1;
  uint64_t v7 = sub_253AF2880();
  uint64_t v8 = type metadata accessor for TranscriptProtoRequestContentSpeechContent(v7);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  sub_2534D8CE4();
  MEMORY[0x270FA5388](v10);
  sub_2536D4C9C();
  uint64_t v11 = type metadata accessor for TranscriptProtoStatementID(0);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v51 = (uint64_t)v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253AF1D50();
  sub_253465998();
  v50[2] = v15;
  v50[3] = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = sub_253AF1FE8(v16, v50[0]);
  type metadata accessor for TranscriptProtoRequestContentTextContent(v17);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v18);
  sub_2534D9C38();
  MEMORY[0x270FA5388](v19);
  sub_253AF2178((uint64_t)v50 - v20);
  uint64_t v21 = sub_253462A5C(&qword_269CE2150);
  uint64_t v22 = sub_25346CB4C(v21);
  MEMORY[0x270FA5388](v22);
  uint64_t v23 = sub_25349888C();
  uint64_t v24 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(v23);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v25);
  sub_2534847E0();
  uint64_t v26 = sub_2534D96CC();
  sub_253961F60(v26, v27, &qword_269CE2150);
  uint64_t v28 = sub_2536D42D4();
  sub_2534D8B48(v28, v29, v24);
  if (v30)
  {
    sub_253472458(v5, &qword_269CE2150);
    sub_253462A5C(&qword_269CE86D0);
    sub_253AF1E74();
    sub_25396263C();
    uint64_t v31 = sub_2534D969C();
    *uint64_t v32 = v24;
    v32[1] = v0;
    sub_253962224(v31, (uint64_t)v32);
LABEL_4:
    sub_253AF1980();
  }
  else
  {
    sub_253AF317C();
    sub_25353CE6C();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v34 = v54;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        sub_253AF38E4();
        sub_253AF1A28(v0, v4);
        uint64_t v39 = swift_bridgeObjectRetain();
        sub_253951DEC(v39, v40, v41, v42, v43, v44, v45, v46, v50[0], (uint64_t (*)(uint64_t))v50[1]);
        sub_253AF1980();
        sub_253AF1980();
        sub_2534D99FC();
        sub_253AF1980();
        if (!v34)
        {
          uint64_t v47 = sub_253AF3714();
          type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(v47);
          sub_253AF2618();
          goto LABEL_12;
        }
        break;
      case 2:
      case 3:
        sub_253AF1980();
        type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
        goto LABEL_12;
      default:
        sub_253AF19D0(v3, v52);
        uint64_t v35 = sub_2535791D8();
        sub_253AF1A28(v35, v36);
        uint64_t v38 = *v2;
        uint64_t v37 = v2[1];
        swift_bridgeObjectRetain();
        sub_25395E074(v51);
        if (v34)
        {
          sub_253AF1980();
          swift_bridgeObjectRelease();
          sub_253AF1980();
          sub_2534D9A78();
          goto LABEL_4;
        }
        uint64_t v54 = v38;
        swift_bridgeObjectRetain();
        sub_253AF2A38();
        sub_253AF1980();
        sub_253AF1980();
        uint64_t v48 = v53;
        *uint64_t v53 = v54;
        v48[1] = v37;
        type metadata accessor for RequestContent.TextContent(0);
        sub_2534D8E14();
        v49();
        sub_253AF1980();
        sub_253AF1980();
        type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
        sub_253AF2628();
LABEL_12:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  sub_2534F8590();
  sub_2534847C8();
}

void sub_253ABE320()
{
}

uint64_t sub_253ABE338()
{
  return sub_253A9864C();
}

void TranscriptProtoSystemPromptResolutionInput.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v3 = sub_253AF2290();
  uint64_t v51 = type metadata accessor for TranscriptProtoRequestContentTextContent(v3);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v4);
  uint64_t v52 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_253AF1D50();
  sub_253465998();
  uint64_t v50 = v6;
  MEMORY[0x270FA5388](v7);
  sub_25346CC54();
  uint64_t v8 = sub_253462A5C(&qword_26B249528);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  sub_253AF2D04();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v10);
  uint64_t v53 = (uint64_t *)((char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2534B324C();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v45 - v13;
  uint64_t v15 = sub_253483660();
  type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(v15);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v16);
  sub_2534847E0();
  uint64_t v17 = sub_253462A5C(&qword_269CE2150);
  uint64_t v18 = sub_25346CB4C(v17);
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = sub_2534B33AC();
  uint64_t v20 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(v19);
  uint64_t v21 = sub_253AF230C();
  uint64_t v24 = sub_253AF1CDC(v21, v22, v23, v20);
  type metadata accessor for TranscriptProtoSystemPromptResolutionInput(v24);
  sub_253AF3BDC();
  sub_253AF2BF4();
  sub_25353CE60();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_253A646D0(*v1, v25, v26, v27, v28, v29, v30, v31, v45, v46);
      uint64_t v43 = v42;
      type metadata accessor for TranscriptProtoRequestContentSpeechContent(0);
      sub_253AF24E8();
      *uint64_t v2 = v43;
      sub_253AF1980();
      break;
    case 2:
    case 3:
      goto LABEL_3;
    default:
      uint64_t v49 = v14;
      sub_253AF19D0((uint64_t)v1, (uint64_t)v14);
      uint64_t v33 = v53;
      sub_253AF1A28((uint64_t)v14, (uint64_t)v53);
      uint64_t v48 = *v33;
      int v47 = EnumCaseMultiPayload;
      uint64_t v46 = (uint64_t (*)(uint64_t))v33[1];
      sub_2534AF234();
      v34();
      swift_bridgeObjectRetain();
      HIDWORD(v45) = sub_253B059C0();
      uint64_t v35 = sub_253B059A0();
      uint64_t v37 = v36;
      type metadata accessor for TranscriptProtoStatementID(0);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_DWORD *)uint64_t v0 = HIDWORD(v45);
      *(void *)(v0 + 8) = v35;
      *(void *)(v0 + 16) = v37;
      sub_2534DA4BC();
      v38();
      sub_253AF215C(v0);
      uint64_t v39 = v52;
      uint64_t v40 = (uint64_t)&v52[*(int *)(v51 + 20)];
      sub_253A73874(v40, 1);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      uint64_t v41 = v46;
      *uint64_t v39 = v48;
      v39[1] = v41;
      sub_253961BF0(v0, v40, &qword_26B249528);
      sub_253AF19D0((uint64_t)v39, (uint64_t)v2);
      sub_253AF1980();
      sub_253AF1980();
LABEL_3:
      sub_253AF1980();
      break;
  }
  uint64_t v44 = v55;
  swift_storeEnumTagMultiPayload();
  sub_253A7385C((uint64_t)v2, 0);
  sub_253961BF0((uint64_t)v2, v44, &qword_269CE2150);
  sub_2534F8A10();
  sub_2534847C8();
}

void sub_253ABE7A4()
{
}

void sub_253ABE7BC()
{
}

void TranscriptProtoSystemPromptResolutionUserAction.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  sub_253AF367C();
  sub_2534F8A1C();
  sub_253B08E50();
  sub_253465998();
  MEMORY[0x270FA5388](v14);
  sub_253AF1C00(v15, v33);
  sub_253B09120();
  sub_253465998();
  uint64_t v34 = v16;
  MEMORY[0x270FA5388](v17);
  sub_25353CE24();
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = sub_253A74194();
  type metadata accessor for RequestContent.SystemPromptResolution.UserAction(v19);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v20);
  sub_253465A3C();
  uint64_t v21 = sub_253462A5C(&qword_269CE2200);
  uint64_t v22 = sub_25346CB4C(v21);
  MEMORY[0x270FA5388](v22);
  uint64_t v23 = sub_25348360C();
  uint64_t v24 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(v23);
  uint64_t v25 = sub_253AF1CDC(v10, 1, 1, v24);
  type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(v25);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253AF1A28(v11, (uint64_t)v12);
  sub_253A56C4C();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_253AF21D4();
      sub_25347FA84();
      v27();
      sub_253AF2A54();
      sub_2534AF234();
      v28();
      sub_253B09100();
      if (!a10)
      {
        uint64_t v31 = *(void (**)(void))(v34 + 8);
        sub_2534D91AC();
        v31();
        sub_2534D8E14();
        v32();
        sub_253AF1980();
        sub_253578AC4();
        sub_2534D91AC();
        v31();
        break;
      }
      uint64_t v29 = *(void (**)(void))(v34 + 8);
      sub_2536D500C();
      sub_2534D91A0();
      v29();
      sub_253AF1980();
      sub_253578AC4();
      sub_2534D91A0();
      v29();
      sub_253AF1980();
      goto LABEL_10;
    case 3u:
    case 4u:
      uint64_t v26 = *v12;
      sub_253AF1980();
      *uint64_t v13 = v26;
      break;
    case 5u:
      char v30 = *(unsigned char *)v12;
      type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
      sub_253AF2500();
      *(unsigned char *)uint64_t v13 = v30;
      goto LABEL_8;
    case 6u:
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      goto LABEL_8;
    case 7u:
LABEL_8:
      sub_253AF1980();
      break;
    default:
      sub_253AF1980();
      *(unsigned char *)uint64_t v13 = *(unsigned char *)v12;
      break;
  }
  sub_2534D954C();
  swift_storeEnumTagMultiPayload();
  sub_253AF1DA4((uint64_t)v13);
  sub_253961BF0((uint64_t)v13, v10, &qword_269CE2200);
LABEL_10:
  sub_253578DEC();
  sub_2534847C8();
}

void sub_253ABEB5C()
{
}

void sub_253ABEB74()
{
}

uint64_t sub_253ABEB8C()
{
  return sub_253A987CC();
}

uint64_t sub_253ABEBA4()
{
  return TranscriptProtoActionStepResult.init(handwritten:)();
}

#error "253ABED18: call analysis failed (funcsize=148)"

void sub_253ABEE28()
{
}

uint64_t sub_253ABEE40()
{
  return sub_253A988CC();
}

void TranscriptProtoStatementResultPayload.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v5 = v4;
  uint64_t v7 = sub_253AF21FC(v6);
  uint64_t v8 = type metadata accessor for TranscriptProtoStatementResultPayload(v7);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v9);
  sub_2534835B0();
  uint64_t v10 = sub_253462A5C(&qword_269CDBB28);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  sub_2534966B0();
  uint64_t v12 = sub_253462A5C(&qword_269CE0378);
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  sub_253AF2978(v14, v37);
  sub_253465998();
  MEMORY[0x270FA5388](v15);
  sub_25346CC54();
  uint64_t v16 = sub_253462A5C(&qword_269CE0388);
  uint64_t v17 = sub_25346CB4C(v16);
  MEMORY[0x270FA5388](v17);
  sub_2534B34A4();
  sub_253A735A8();
  v18();
  uint64_t v19 = sub_253AF3D5C();
  TranscriptProtoStatementOutcome.init(handwritten:)(v19, v20, v21, v22, v23, v24, v25, v26, v38, v39);
  if (!v1)
  {
    uint64_t v27 = type metadata accessor for TranscriptProtoStatementOutcome(0);
    uint64_t v28 = sub_253AF1CDC(v3, 0, 1, v27);
    uint64_t v29 = type metadata accessor for StatementResultPayload(v28);
    sub_253961F60(v5 + *(int *)(v29 + 20), v2, &qword_269CDBB28);
    sub_253AF3B10();
    sub_253960658();
    sub_253AF2400(v0);
    uint64_t v30 = v0 + *(int *)(v8 + 20);
    uint64_t v31 = type metadata accessor for TranscriptProtoResponseManifest(0);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 1, 1, v31);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    uint64_t v32 = sub_253AF21E0();
    sub_253961BF0(v32, v33, v34);
    sub_253961BF0(v40, v30, &qword_269CE0378);
    uint64_t v35 = sub_253945CF8();
    sub_253AF19D0(v35, v36);
  }
  sub_253AF1980();
  sub_2534F8590();
  sub_2534847C8();
}

void sub_253ABF0E8()
{
}

void sub_253ABF100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  QueryStepResults.init(transcript:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_253ABF118()
{
  return sub_253A98A4C();
}

void sub_253ABF130()
{
}

void sub_253ABF148()
{
}

uint64_t sub_253ABF160()
{
  return sub_253A98BCC();
}

uint64_t sub_253ABF178(uint64_t a1)
{
  return TranscriptProtoActionResponse.init(handwritten:)(a1);
}

void ResponseOutput.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v5 = v4;
  uint64_t v7 = sub_253AF21FC(v6);
  uint64_t v8 = type metadata accessor for TranscriptProtoVisualOutputOptions(v7);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  sub_253AF1E1C(v10, v32);
  uint64_t v11 = sub_253B06410();
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  sub_25346CC6C();
  uint64_t v13 = sub_253462A5C(&qword_269CE1FF0);
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  sub_2534847E0();
  uint64_t v15 = sub_253462A5C(&qword_269CE5120);
  uint64_t v16 = sub_25346CB4C(v15);
  MEMORY[0x270FA5388](v16);
  sub_2534B34A4();
  uint64_t v17 = sub_253462A5C(&qword_269CE2010);
  uint64_t v18 = sub_25346CB4C(v17);
  MEMORY[0x270FA5388](v18);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v19);
  sub_2534D90F4();
  uint64_t v20 = sub_253462A5C(&qword_269CE5128);
  uint64_t v21 = sub_25346CB4C(v20);
  MEMORY[0x270FA5388](v21);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v22);
  sub_2534D9EC0();
  uint64_t v23 = swift_bridgeObjectRetain();
  sub_253959314(v23, v24, v25, v26, v27, v28, v29, v30, v33, v34);
  if (!v0)
  {
    uint64_t v31 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
    sub_253961F60(v5 + v31[7], v1, &qword_269CE2010);
    sub_253AF3B84();
    sub_25395CFCC();
    sub_253961F60(v5 + v31[8], v3, &qword_269CE2010);
    sub_25395CFCC();
    sub_253961F60(v5 + v31[10], v2, &qword_269CE1FF0);
    sub_25395D164();
    swift_bridgeObjectRetain();
    sub_253959694();
    sub_25395E9FC(v35);
    sub_253B063F0();
    sub_253AF1980();
    swift_bridgeObjectRetain();
    sub_253B06420();
  }
  sub_253AF1980();
  sub_2534F8A10();
  sub_2534847C8();
}

uint64_t sub_253ABF59C(uint64_t a1)
{
  return SystemResponse.init(transcript:)(a1);
}

uint64_t sub_253ABF5B4()
{
  return sub_253A98CCC();
}

uint64_t sub_253ABF5CC(uint64_t a1)
{
  return TranscriptProtoSystemResponse.init(handwritten:)(a1);
}

#error "253ABFAB8: call analysis failed (funcsize=337)"

uint64_t sub_253ABFB5C(uint64_t a1)
{
  return InterpretedStatementResult.init(transcript:)(a1);
}

uint64_t sub_253ABFB74()
{
  return sub_253A98E84();
}

void TranscriptProtoInterpretedStatementResult.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v8 = v7;
  uint64_t v64 = v9;
  uint64_t v10 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  uint64_t v66 = (uint64_t)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_253AF1D50();
  sub_253465998();
  uint64_t v67 = v13;
  MEMORY[0x270FA5388](v14);
  sub_25346CC6C();
  uint64_t v15 = sub_253462A5C(&qword_26B249528);
  uint64_t v16 = sub_25346CB4C(v15);
  MEMORY[0x270FA5388](v16);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v17);
  sub_25351C770();
  MEMORY[0x270FA5388](v18);
  sub_253971BBC();
  uint64_t v19 = sub_253B06850();
  uint64_t v20 = sub_25346CB4C(v19);
  MEMORY[0x270FA5388](v20);
  sub_2534B3294();
  uint64_t v21 = sub_253462A5C(&qword_269CE0388);
  uint64_t v22 = sub_25346CB4C(v21);
  MEMORY[0x270FA5388](v22);
  sub_2534B34A4();
  sub_253B06F30();
  TranscriptProtoStatementOutcome.init(handwritten:)(v1, v23, v24, v25, v26, v27, v28, v29, v55, v56);
  if (v0)
  {
    sub_253B06F40();
    sub_25346CAF4();
    sub_2534659CC();
    v30();
  }
  else
  {
    uint64_t v62 = 0;
    uint64_t v60 = v6;
    uint64_t v31 = type metadata accessor for TranscriptProtoStatementOutcome(0);
    uint64_t v58 = v5;
    sub_253971DA8(v5, v32, v33, v31);
    sub_253B06EF0();
    uint64_t v34 = sub_253B059C0();
    uint64_t v35 = sub_253B059A0();
    uint64_t v65 = v8;
    uint64_t v37 = v36;
    uint64_t v38 = type metadata accessor for TranscriptProtoStatementID(0);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_DWORD *)uint64_t v2 = v34;
    *(void *)(v2 + 8) = v35;
    *(void *)(v2 + 16) = v37;
    uint64_t v39 = *(void (**)(void))(v67 + 8);
    sub_2534D9A08();
    v39();
    uint64_t v59 = v2;
    uint64_t v40 = v2;
    uint64_t v41 = v39;
    sub_253A7385C(v40, 0);
    sub_253B06EE0();
    LODWORD(v39) = sub_253B059C0();
    sub_253B059A0();
    sub_253AF31CC();
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_DWORD *)uint64_t v3 = v39;
    *(void *)(v3 + 8) = v4;
    *(void *)(v3 + 16) = v34;
    sub_253578D2C();
    uint64_t v57 = v41;
    sub_2534D9A08();
    v41();
    uint64_t v61 = v3;
    sub_2534AD3FC();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v42, v43, v44, v38);
    uint64_t v45 = v66;
    sub_253B066A0();
    uint64_t v46 = sub_253B055C0();
    sub_2534D8B48(v45, 1, v46);
    if (v47)
    {
      sub_253472458(v66, (uint64_t *)&unk_26B248CB0);
    }
    else
    {
      sub_253B05570();
      sub_25347B88C();
      uint64_t v48 = sub_2534D99FC();
      v49(v48);
    }
    uint64_t v66 = sub_253B06F20();
    uint64_t v56 = v50;
    sub_253B06ED0();
    int v51 = sub_253B059C0();
    sub_253B059A0();
    sub_253AF31CC();
    uint64_t v52 = v60;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_DWORD *)uint64_t v52 = v51;
    *(void *)(v52 + 8) = v4;
    *(void *)(v52 + 16) = v46;
    sub_2534D9724();
    sub_253477128();
    v53();
    sub_253AF202C(v52);
    TranscriptProtoInterpretedStatementResult.init(outcome:resultStatementID:originProgramStatementID:actionEventID:toolID:originTaskStatementID:)();
    sub_253B06F40();
    sub_25346CAF4();
    sub_2534659CC();
    v54();
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void sub_253ABFFA0()
{
}

void TranscriptProtoParameterSet.handwrittenParameters.getter()
{
  sub_2534847F8();
  uint64_t v90 = v1;
  uint64_t v4 = type metadata accessor for Candidate(0);
  sub_253465998();
  uint64_t v83 = v5;
  MEMORY[0x270FA5388](v6);
  uint64_t v86 = (uint64_t)v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v8);
  uint64_t v81 = (char *)v77 - v9;
  uint64_t v10 = sub_253483660();
  uint64_t v89 = type metadata accessor for TranscriptProtoCandidate(v10);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v11);
  uint64_t v79 = (uint64_t)v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  sub_25396314C(v14, v15, v16, v17, v18, v19, v20, v21, v77[0]);
  uint64_t v22 = sub_253462A5C(&qword_269CDCBE0);
  uint64_t v23 = sub_25346CB4C(v22);
  MEMORY[0x270FA5388](v23);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v24);
  sub_2534D97C0();
  uint64_t v25 = sub_253462A5C(&qword_269CE86D8);
  uint64_t v26 = sub_25346CB4C(v25);
  MEMORY[0x270FA5388](v26);
  uint64_t v78 = (uint64_t)v77 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v28);
  uint64_t v87 = (uint64_t)v77 - v29;
  uint64_t v88 = type metadata accessor for TranscriptProtoParameter(0);
  sub_2534D8B2C();
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)v77 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = *v0;
  uint64_t v35 = *(void *)(*v0 + 16);
  if (!v35)
  {
    swift_bridgeObjectRetain();
LABEL_28:
    swift_bridgeObjectRelease();
LABEL_30:
    sub_2534847C8();
    return;
  }
  uint64_t v91 = v3;
  uint64_t v36 = v34;
  uint64_t v37 = v34 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
  uint64_t v84 = *(void *)(v31 + 72);
  v77[1] = v36;
  swift_bridgeObjectRetain_n();
  uint64_t v38 = MEMORY[0x263F8EE80];
  uint64_t v82 = v4;
  uint64_t v85 = v2;
  while (1)
  {
    uint64_t v92 = v35;
    uint64_t v39 = v4;
    sub_253AF1A28(v37, (uint64_t)v33);
    uint64_t v40 = *(void *)v33;
    uint64_t v41 = *((void *)v33 + 1);
    uint64_t v42 = *((void *)v33 + 2);
    int v95 = v33[24];
    if (v95) {
      uint64_t v42 = 0;
    }
    uint64_t v93 = v42;
    uint64_t v94 = v40;
    sub_253961F60((uint64_t)&v33[*(int *)(v88 + 24)], v91, &qword_269CDCBE0);
    uint64_t v43 = sub_25353CE60();
    sub_253961F60(v43, v44, &qword_269CDCBE0);
    uint64_t v45 = sub_2536D3ACC();
    sub_2534D8B48(v45, v46, v89);
    if (v47)
    {
      uint64_t v55 = v41;
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_253AF3144();
      sub_253472458(v48, v49);
      uint64_t v50 = sub_253579328();
      sub_253472458(v50, v51);
      uint64_t v52 = 1;
      uint64_t v53 = v87;
    }
    else
    {
      uint64_t v54 = v80;
      sub_253AF19D0(v2, v80);
      sub_253AF1A28(v54, v79);
      uint64_t v55 = v41;
      swift_bridgeObjectRetain();
      uint64_t v56 = (uint64_t)v81;
      uint64_t v57 = v90;
      Candidate.init(transcript:)();
      uint64_t v90 = v57;
      if (v57)
      {
        sub_253472458(v91, &qword_269CDCBE0);
        sub_253AF1980();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_253AF1980();
        swift_bridgeObjectRelease_n();
        goto LABEL_30;
      }
      sub_253472458(v91, &qword_269CDCBE0);
      sub_253AF1980();
      uint64_t v53 = v87;
      sub_253AF19D0(v56, v87);
      uint64_t v52 = 0;
    }
    uint64_t v4 = v39;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v53, v52, 1, v39);
    sub_2534D8B48(v53, 1, v39);
    if (v47)
    {
      sub_253472458(v53, &qword_269CE86D8);
      swift_bridgeObjectRetain();
      unint64_t v58 = sub_253AF2F98();
      char v60 = v59;
      swift_bridgeObjectRelease();
      if (v60)
      {
        swift_isUniquelyReferenced_nonNull_native();
        sub_253462A5C(&qword_269CE6C30);
        uint64_t v4 = v82;
        sub_253B0A190();
        swift_bridgeObjectRelease();
        uint64_t v61 = v78;
        sub_253AF19D0(*(void *)(v38 + 56) + *(void *)(v83 + 72) * v58, v78);
        sub_253462C88();
        sub_2536D44B0();
        sub_253B0A1B0();
        swift_bridgeObjectRelease();
        uint64_t v62 = 0;
      }
      else
      {
        uint64_t v62 = 1;
        uint64_t v61 = v78;
      }
      sub_253A73874(v61, v62);
      swift_bridgeObjectRelease();
      sub_253472458(v61, &qword_269CE86D8);
      uint64_t v2 = v85;
      uint64_t v69 = v92;
      goto LABEL_25;
    }
    sub_253AF19D0(v53, v86);
    swift_isUniquelyReferenced_nonNull_native();
    sub_253AF2F98();
    sub_253AF3688();
    if (v63) {
      break;
    }
    unint64_t v66 = v64;
    char v67 = v65;
    sub_253462A5C(&qword_269CE6C30);
    char v68 = sub_253B0A190();
    uint64_t v2 = v85;
    uint64_t v69 = v92;
    if (v68)
    {
      unint64_t v70 = sub_253AF2F98();
      if ((v67 & 1) != (v71 & 1)) {
        goto LABEL_33;
      }
      unint64_t v66 = v70;
    }
    if (v67)
    {
      sub_253AF37FC();
      sub_253AEA94C(v86, v72);
    }
    else
    {
      sub_253AF212C();
      uint64_t v74 = v73 + 32 * v66;
      *(void *)uint64_t v74 = v94;
      *(void *)(v74 + 8) = v55;
      *(void *)(v74 + 16) = v93;
      *(unsigned char *)(v74 + 24) = v95;
      sub_253AF37FC();
      sub_253AF19D0(v86, v75);
      sub_253AF2AE0();
      if (v63) {
        goto LABEL_32;
      }
      *(void *)(v38 + 16) = v76;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v82;
LABEL_25:
    sub_253AF1980();
    v37 += v84;
    uint64_t v35 = v69 - 1;
    if (!v35)
    {
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  sub_253B0A550();
  __break(1u);
}

void sub_253AC069C()
{
}

uint64_t sub_253AC06B4()
{
  return sub_253A9903C();
}

uint64_t TranscriptProtoParameterSet.init(handwritten:)()
{
  uint64_t v3 = sub_253A733C8();
  type metadata accessor for TranscriptProtoParameterSet(v3);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v4 = sub_253A8E900(v1);
  if (v0)
  {
    swift_bridgeObjectRelease();
    sub_253B07160();
    sub_25346CAF4();
    sub_2534659CC();
    return v5();
  }
  else
  {
    uint64_t v7 = v4;
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v2 = v7;
  }
  return result;
}

void sub_253AC0770()
{
}

uint64_t sub_253AC0788(uint64_t a1)
{
  return ResponseGenerationRequest.init(transcript:)(a1);
}

uint64_t sub_253AC07A0()
{
  return sub_253A991BC();
}

uint64_t sub_253AC07BC(uint64_t a1)
{
  return TranscriptProtoResponseGenerationRequest.init(handwritten:)(a1);
}

void TranscriptProtoCandidate.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v4 = v3;
  uint64_t v6 = sub_253AF2BE8(v5);
  uint64_t v59 = type metadata accessor for TranscriptProtoCandidate(v6);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v7);
  char v60 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253AF1D50();
  sub_253465998();
  uint64_t v56 = v10;
  uint64_t v57 = v9;
  MEMORY[0x270FA5388](v9);
  sub_2534D8F68(v11, v54);
  uint64_t v12 = sub_253462A5C(&qword_26B249528);
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  uint64_t v64 = sub_253AF294C(v14, v54);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v15);
  sub_25347FAAC();
  uint64_t v16 = sub_253462A5C(&qword_269CE1CB0);
  uint64_t v17 = sub_25346CB4C(v16);
  MEMORY[0x270FA5388](v17);
  uint64_t v63 = (uint64_t)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_2536D3938();
  sub_253465998();
  MEMORY[0x270FA5388](v19);
  sub_2534AF2D8();
  sub_253B09120();
  sub_253465998();
  MEMORY[0x270FA5388](v20);
  sub_25346CC54();
  uint64_t v21 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v22 = sub_25346CB4C(v21);
  MEMORY[0x270FA5388](v22);
  sub_2534835B0();
  sub_253AF22F0();
  sub_2534AF234();
  v23();
  sub_253B09100();
  if (v1)
  {
    sub_2534D97B4();
    v24();
  }
  else
  {
    sub_2534D97B4();
    v25();
    sub_2534D9AA0();
    uint64_t v26 = v62;
    sub_2539627E0();
    v27();
    uint64_t v28 = sub_253AF1CDC(v0, 0, 1, v26);
    uint64_t v29 = type metadata accessor for Candidate(v28);
    uint64_t v30 = *(int *)(v29 + 24);
    int v55 = *(unsigned __int8 *)(v4 + *(int *)(v29 + 20));
    uint64_t v54 = v4;
    uint64_t v31 = *(void *)(v4 + v30);
    int v32 = *(unsigned __int8 *)(v4 + v30 + 8);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    BOOL v33 = v31 != 0;
    if (!v32) {
      BOOL v33 = v31;
    }
    *(void *)uint64_t v2 = v33;
    *(unsigned char *)(v2 + 8) = v32;
    *(unsigned char *)(v2 + 9) = 0;
    uint64_t v34 = v63;
    sub_253AF19D0(v2, v63);
    sub_253AF202C(v34);
    sub_253AF2300();
    sub_2534AF234();
    v35();
    LODWORD(v34) = sub_253B059C0();
    uint64_t v36 = sub_253B059A0();
    uint64_t v38 = v37;
    type metadata accessor for TranscriptProtoStatementID(0);
    uint64_t v39 = v58;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_DWORD *)uint64_t v39 = v34;
    *(void *)(v39 + 8) = v36;
    *(void *)(v39 + 16) = v38;
    sub_2534F85D4();
    v40();
    sub_253AF3268(v39);
    uint64_t v42 = v59;
    uint64_t v41 = v60;
    uint64_t v43 = (uint64_t)&v60[*(int *)(v59 + 20)];
    uint64_t v44 = sub_253A73E04();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v44, v45, v46, v62);
    uint64_t v47 = (uint64_t)&v41[*(int *)(v42 + 24)];
    sub_253465A98();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v48, v49, v50, v64);
    sub_253AF2400((uint64_t)&v41[*(int *)(v42 + 28)]);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    sub_253961BF0(v0, v43, &qword_269CDCBC8);
    *uint64_t v41 = v55;
    sub_253961BF0(v63, v47, &qword_269CE1CB0);
    uint64_t v51 = sub_253AF21D4();
    sub_253961BF0(v51, v52, v53);
    sub_253AF19D0((uint64_t)v41, v61);
  }
  sub_253AF1980();
  sub_253A3C6AC();
  sub_2534847C8();
}

uint64_t sub_253AC0C3C()
{
  return TranscriptProtoParameterSet.init(handwritten:)();
}

uint64_t sub_253AC0C58()
{
  return ClientInitiatedClientAction.init(transcript:)();
}

uint64_t sub_253AC0C70()
{
  return sub_253A992E4(*v0, v0[1], v0[2]);
}

uint64_t sub_253AC0C90@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return TranscriptProtoClientInitiatedClientAction.init(handwritten:)(a1, a2);
}

uint64_t sub_253AC0CA8()
{
  return SafetyModeRelease.init(transcript:)();
}

uint64_t sub_253AC0CC0()
{
  return sub_253A99470();
}

uint64_t sub_253AC0CD8()
{
  return TranscriptProtoRequestContentStopContent.init(handwritten:)();
}

uint64_t sub_253AC0CF0()
{
  return SafetyModeException.init(transcript:)();
}

uint64_t sub_253AC0D08()
{
  return sub_253A99570(*v0, v0[1]);
}

uint64_t sub_253AC0D24@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return TranscriptProtoSafetyModeException.init(handwritten:)(a1, a2);
}

void VariableSetter.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v11 = v1;
  sub_253B08E50();
  sub_253465998();
  MEMORY[0x270FA5388](v2);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v3);
  sub_253AF252C();
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_253AF2DB4();
  Dictionary<>.init(transcript:)();
  if (v0)
  {
    sub_253AF1980();
  }
  else
  {
    uint64_t v10 = v5;
    type metadata accessor for TranscriptProtoVariableSetter(0);
    sub_253AF32F4();
    sub_25395DCE8();
    sub_253AF2AEC();
    sub_25357931C();
    sub_2534AF234();
    v6();
    sub_253B09110();
    sub_2534D9220();
    v7();
    sub_253AF1980();
    void *v11 = v10;
    uint64_t v8 = type metadata accessor for VariableSetter(0);
    sub_253A3E348(v8);
    sub_2534D8E14();
    v9();
  }
  sub_253578DEC();
  sub_2534847C8();
}

void Dictionary<>.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = sub_253B08E50();
  sub_253465998();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  char v71 = (char *)v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_253B09120();
  sub_253465998();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v79 = (char *)v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v13);
  unint64_t v70 = (char *)v64 - v14;
  sub_2534B324C();
  MEMORY[0x270FA5388](v15);
  uint64_t v78 = (char *)v64 - v16;
  uint64_t v17 = sub_253AF1D50();
  sub_253465998();
  uint64_t v19 = v18;
  MEMORY[0x270FA5388](v20);
  uint64_t v84 = (char *)v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v22);
  uint64_t v81 = (char *)v64 - v23;
  uint64_t v69 = sub_253462A5C(&qword_269CDCC30);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v24);
  sub_2534F823C();
  MEMORY[0x270FA5388](v25);
  uint64_t v82 = (_DWORD *)((char *)v64 - v26);
  sub_2534B324C();
  MEMORY[0x270FA5388](v27);
  sub_2534D8F5C((uint64_t)v64 - v28);
  sub_253AF1A80(&qword_269CDBEB0, MEMORY[0x263F4BF98]);
  uint64_t v83 = v17;
  uint64_t v29 = sub_253B095A0();
  sub_25397174C(v3, v85);
  uint64_t v73 = v85[0];
  uint64_t v64[4] = v85[1];
  uint64_t v74 = v85[3];
  v64[5] = (unint64_t)(v85[2] + 64) >> 6;
  sub_253AF325C(v6 + 16);
  uint64_t v72 = v6;
  uint64_t v66 = v6 + 8;
  uint64_t v75 = (void (**)(void))(v19 + 16);
  uint64_t v76 = (void (**)(void))(v10 + 32);
  uint64_t v30 = v85[4];
  sub_253AF3958(v10 + 16);
  v64[3] = v19;
  char v65 = (void (**)(void))(v19 + 8);
  v64[7] = v10;
  sub_253AF396C(v10 + 8);
  if (!v30) {
    goto LABEL_3;
  }
LABEL_2:
  sub_2534DA484();
  uint64_t v77 = v30;
  uint64_t v32 = v31 | (v74 << 6);
  while (1)
  {
    int v43 = *(_DWORD *)(*(void *)(v73 + 48) + 4 * v32);
    uint64_t v44 = v67;
    uint64_t v45 = *(void (**)(void))(v72 + 16);
    sub_253AF3884();
    sub_253962874();
    v45();
    _DWORD *v44 = v43;
    uint64_t v46 = v82;
    sub_253961F14((uint64_t)v44, (uint64_t)v82, &qword_269CDCC30);
    LODWORD(v44) = *v46;
    sub_253B059B0();
    *char v68 = v44;
    sub_253962874();
    v45();
    sub_2534DA034();
    sub_253962874();
    v45();
    sub_253B09110();
    if (v1)
    {
      sub_253AF39C4();
      sub_2534659CC();
      v62();
      sub_2534DA678();
      sub_2534659CC();
      v63();
      swift_bridgeObjectRelease();
      sub_253472458((uint64_t)v82, &qword_269CDCC30);
      sub_253AF36E8();
      swift_release();
      goto LABEL_39;
    }
    sub_253AF39C4();
    uint64_t v47 = v4;
    sub_2534659CC();
    v48();
    uint64_t v49 = *v76;
    sub_2534D9A44();
    sub_25347FA84();
    v49();
    uint64_t v50 = *v75;
    sub_2534AF234();
    v50();
    sub_2534DA678();
    sub_2534B3428();
    v51();
    swift_isUniquelyReferenced_nonNull_native();
    sub_25396DFFC();
    sub_253AF3688();
    if (v34) {
      break;
    }
    char v53 = v52;
    sub_253462A5C(&qword_269CE51D0);
    if (sub_253B0A190())
    {
      sub_25396DFFC();
      if ((v53 & 1) != (v54 & 1)) {
        goto LABEL_43;
      }
    }
    if (v53)
    {
      sub_253AF3578(*(void *)(v29 + 56));
      sub_253A73798();
      v55();
    }
    else
    {
      sub_253AF212C();
      sub_253AF30F4(v56);
      sub_2534AF234();
      v50();
      sub_253AF30F4(*(void *)(v29 + 56));
      sub_25347FA84();
      v49();
      sub_253AF2AE0();
      if (v34) {
        goto LABEL_41;
      }
      *(void *)(v29 + 16) = v57;
    }
    swift_bridgeObjectRelease();
    uint64_t v58 = *v65;
    sub_2534DA4BC();
    v58();
    sub_2534DA678();
    sub_2534659CC();
    v59();
    sub_2534DA4BC();
    v58();
    sub_253472458((uint64_t)v82, &qword_269CDCC30);
    uint64_t v1 = 0;
    uint64_t v4 = v47;
    uint64_t v30 = v77;
    if (v77) {
      goto LABEL_2;
    }
LABEL_3:
    if (__OFADD__(v74, 1)) {
      goto LABEL_42;
    }
    sub_253962844();
    if (v33 == v34) {
      goto LABEL_38;
    }
    sub_253AF2EA8();
    if (!v35)
    {
      sub_253962654();
      if (v33 == v34) {
        goto LABEL_38;
      }
      sub_253962660();
      if (!v36)
      {
        sub_253962654();
        if (v33 == v34) {
          goto LABEL_38;
        }
        sub_253962660();
        if (!v37)
        {
          sub_253962654();
          if (v33 == v34) {
            goto LABEL_38;
          }
          sub_253962660();
          if (!v38)
          {
            sub_253962654();
            if (v33 == v34) {
              goto LABEL_38;
            }
            sub_253962660();
            if (!v39)
            {
              sub_253962844();
              if (v33 == v34) {
                goto LABEL_38;
              }
              sub_253AF2EA8();
              if (!v60)
              {
                while (1)
                {
                  sub_253962844();
                  if (v33 == v34) {
                    break;
                  }
                  sub_253AF2EA8();
                  if (v61) {
                    goto LABEL_19;
                  }
                }
LABEL_38:
                swift_release();
                sub_253AF36E8();
LABEL_39:
                sub_253A73FF4();
                sub_2534847C8();
                return;
              }
            }
          }
        }
      }
    }
LABEL_19:
    sub_2534D9174();
    uint64_t v77 = v40;
    uint64_t v32 = v42 + (v41 << 6);
    uint64_t v74 = v41;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  sub_253B0A550();
  __break(1u);
}

void sub_253AC1640()
{
}

uint64_t sub_253AC1658()
{
  return sub_253A99694();
}

void TranscriptProtoVariableSetter.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v4 = sub_253AF25F0(v3);
  uint64_t v5 = type metadata accessor for TranscriptProtoVariableSetter(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v6);
  sub_253AF236C();
  sub_253465998();
  MEMORY[0x270FA5388](v7);
  sub_253AF1EE4();
  sub_253465998();
  MEMORY[0x270FA5388](v8);
  sub_25346CC54();
  uint64_t v9 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_2534B33AC();
  type metadata accessor for VariableSetter(v11);
  sub_2534AF234();
  v12();
  sub_253B09100();
  if (v1)
  {
    uint64_t v13 = sub_253AF3A08();
    v14(v13);
  }
  else
  {
    sub_25351C3E8();
    v15();
    sub_2534D8E14();
    v16();
    sub_253AF3268(v2);
    swift_bridgeObjectRetain();
    Dictionary<>.init(handwritten:)();
    uint64_t v18 = v17;
    sub_253AF2400((uint64_t)v0 + *(int *)(v5 + 20));
    uint64_t v19 = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    sub_253AF2670(v19, v20, &qword_269CDCBC8);
    *uint64_t v0 = v18;
    sub_253AF19D0((uint64_t)v0, v21);
  }
  sub_253AF1980();
  sub_253A73FF4();
  sub_2534847C8();
}

void Dictionary<>.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v79 = v0;
  uint64_t v2 = v1;
  v68[9] = sub_253B08E50();
  sub_253465998();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  sub_2534F823C();
  MEMORY[0x270FA5388](v6);
  sub_2534F823C();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  sub_253AF2518(v8, v9, v10, v11, v12, v13, v14, v15, v68[0]);
  uint64_t v78 = sub_253462A5C(&qword_269CDCAA8);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v16);
  sub_2534F823C();
  MEMORY[0x270FA5388](v17);
  sub_2534F823C();
  MEMORY[0x270FA5388](v18);
  uint64_t v77 = (uint64_t)v68 - v19;
  sub_2534B324C();
  MEMORY[0x270FA5388](v20);
  sub_2534D8F5C((uint64_t)v68 - v21);
  uint64_t v22 = sub_253B095A0();
  sub_25397174C(v2, v83);
  v68[14] = v83[0];
  v68[3] = v83[1];
  uint64_t v69 = v83[3];
  v68[4] = (unint64_t)(v83[2] + 64) >> 6;
  uint64_t v23 = v83[4];
  unint64_t v70 = (void (**)(void))(v4 + 32);
  sub_253AF3958(v4 + 16);
  v68[6] = v4;
  sub_253AF396C(v4 + 8);
  while (1)
  {
    uint64_t v76 = v22;
    if (v23)
    {
      sub_2534DA484();
      uint64_t v71 = v23;
    }
    else
    {
      if (__OFADD__(v69, 1)) {
        goto LABEL_43;
      }
      sub_253962844();
      if (v24 == v25) {
        goto LABEL_39;
      }
      sub_253AF31E4();
      if (!v26)
      {
        sub_253962654();
        if (v24 == v25) {
          goto LABEL_39;
        }
        sub_253962660();
        if (!v27)
        {
          sub_253962654();
          if (v24 == v25) {
            goto LABEL_39;
          }
          sub_253962660();
          if (!v28)
          {
            sub_253962654();
            if (v24 == v25) {
              goto LABEL_39;
            }
            sub_253962660();
            if (!v29)
            {
              sub_253962654();
              if (v24 == v25) {
                goto LABEL_39;
              }
              sub_253962660();
              if (!v30)
              {
                sub_253962844();
                if (v24 == v25) {
                  goto LABEL_39;
                }
                sub_253AF31E4();
                if (!v65)
                {
                  while (1)
                  {
                    sub_253962844();
                    if (v24 == v25) {
                      break;
                    }
                    sub_253AF31E4();
                    if (v66) {
                      goto LABEL_20;
                    }
                  }
LABEL_39:
                  swift_release();
                  sub_253AF36E8();
LABEL_40:
                  sub_2534847C8();
                  return;
                }
              }
            }
          }
        }
      }
LABEL_20:
      sub_2534D9174();
      uint64_t v71 = v31;
      uint64_t v69 = v32;
    }
    uint64_t v80 = sub_253B059D0();
    sub_2534727C4();
    uint64_t v35 = v33 + 16;
    uint64_t v34 = *(void *)(v33 + 16);
    uint64_t v81 = v35;
    uint64_t v82 = v34;
    uint64_t v36 = v68[10];
    sub_2534B3428();
    v37();
    sub_253B09120();
    sub_253465998();
    uint64_t v39 = v38;
    uint64_t v40 = v78;
    uint64_t v41 = *(void (**)(void))(v38 + 16);
    sub_253A568D4();
    v41();
    uint64_t v74 = v41;
    uint64_t v42 = v36;
    uint64_t v43 = v77;
    sub_253961F14(v42, v77, &qword_269CDCAA8);
    uint64_t v73 = v43 + *(int *)(v40 + 48);
    sub_253578EEC();
    sub_2534B3428();
    v44();
    sub_253A56AF8();
    sub_253A568D4();
    v41();
    unsigned int v72 = sub_253B059C0();
    sub_253AF2A98();
    uint64_t v75 = v45;
    sub_2534DA4BC();
    v46();
    uint64_t v47 = *(void (**)(void))(v39 + 8);
    sub_2534D97B4();
    v47();
    sub_2535791D8();
    sub_2534B3428();
    v48();
    sub_253A568D4();
    v49();
    sub_253A73EF4();
    uint64_t v50 = v79;
    sub_253B09100();
    uint64_t v79 = v50;
    sub_253578828();
    if (v50)
    {
      sub_2534D97B4();
      v47();
      sub_2534DA4BC();
      v67();
      sub_253472458(v77, &qword_269CDCAA8);
      sub_253AF36E8();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_40;
    }
    sub_2534D97B4();
    v47();
    uint64_t v51 = *v70;
    sub_2534D9A44();
    sub_25347FA84();
    v51();
    sub_2534DA4BC();
    v52();
    sub_2534D9FA8();
    sub_2534B3428();
    v53();
    uint64_t v22 = v76;
    swift_isUniquelyReferenced_nonNull_native();
    unsigned int v54 = v72;
    unint64_t v55 = sub_25396E10C(v72);
    if (__OFADD__(*(void *)(v22 + 16), (v56 & 1) == 0)) {
      break;
    }
    unint64_t v57 = v55;
    char v58 = v56;
    sub_253462A5C(&qword_269CE8680);
    if (sub_253B0A190())
    {
      unint64_t v59 = sub_25396E10C(v54);
      if ((v58 & 1) != (v60 & 1)) {
        goto LABEL_44;
      }
      unint64_t v57 = v59;
    }
    if (v58)
    {
      sub_253AF3578(*(void *)(v22 + 56));
      sub_253A73798();
      v61();
    }
    else
    {
      sub_253AF212C();
      *(_DWORD *)(v62 + 4 * v57) = v54;
      sub_253AF30F4(*(void *)(v22 + 56));
      sub_25347FA84();
      v51();
      sub_253AF2AE0();
      if (v25) {
        goto LABEL_42;
      }
      *(void *)(v22 + 16) = v63;
    }
    swift_bridgeObjectRelease();
    sub_2534DA678();
    sub_2534659CC();
    v64();
    sub_253472458(v77, &qword_269CDCAA8);
    uint64_t v23 = v71;
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  sub_253B0A550();
  __break(1u);
}

void sub_253AC1F60()
{
}

uint64_t RequestContent.SystemPromptResolution.RequirementResolution.init(transcript:)@<X0>(char *a1@<X0>, unsigned char *a2@<X8>)
{
  char v3 = *a1;
  uint64_t result = sub_253AF1980();
  *a2 = v3;
  return result;
}

uint64_t RequestContent.SystemPromptResolution.ActionCancellation.init(transcript:)()
{
  return sub_253AF1980();
}

void sub_253AC2004()
{
}

uint64_t sub_253AC201C()
{
  return sub_253A99814();
}

uint64_t TranscriptProtoSystemPromptResolutionRequirementResolution.init(handwritten:)()
{
  uint64_t v2 = sub_253AF3850();
  type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(v2);
  uint64_t result = sub_2539457F0();
  *uint64_t v0 = v1;
  return result;
}

void sub_253AC206C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  TranscriptProtoSystemPromptResolutionUserAction.init(handwritten:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void ActionResult.init(transcript:)()
{
  sub_2534847F8();
  sub_253A3F064();
  uint64_t v2 = sub_253B05A00();
  sub_253465998();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  sub_2534D9B74();
  sub_253B05AB0();
  sub_253465998();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_2534B33AC();
  uint64_t v8 = v0 + *(int *)(type metadata accessor for ActionResult(v7) + 20);
  sub_253B06820();
  sub_253A7385C(v8, 1);
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, *MEMORY[0x263F4C010], v2);
  sub_253B05A60();
  sub_253AF1980();
  sub_25353CDD4();
  v9();
  sub_253A3E6A4();
  v10();
  sub_253472458(v8, &qword_269CDBB28);
  sub_253A7385C(v8, 1);
  sub_253962714();
  sub_2534847C8();
}

void sub_253AC2204()
{
}

uint64_t sub_253AC221C()
{
  return sub_253A99994();
}

uint64_t TranscriptProtoActionResult.init(handwritten:)()
{
  return sub_253AF1980();
}

uint64_t sub_253AC227C()
{
  return TranscriptProtoActionResult.init(handwritten:)();
}

uint64_t sub_253AC2294(uint64_t a1)
{
  return StatementResultPayload.init(transcript:)(a1);
}

uint64_t sub_253AC22AC()
{
  return sub_253A99A94();
}

void sub_253AC22C4()
{
}

uint64_t ResponseOutput.VisualOutputOptions.init(transcript:)()
{
  return sub_253AF1980();
}

void sub_253AC2320()
{
}

uint64_t sub_253AC2338()
{
  return sub_253A99C14();
}

void TranscriptProtoResponseOutput.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  uint64_t v17 = sub_253AF389C(v16);
  uint64_t v98 = type metadata accessor for TranscriptProtoResponseOutput(v17);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v18);
  sub_253483644(v19, v86);
  uint64_t v20 = sub_253462A5C(&qword_269CE5120);
  uint64_t v21 = sub_25346CB4C(v20);
  MEMORY[0x270FA5388](v21);
  sub_2534AF2A0(v22, v86);
  uint64_t v23 = sub_253462A5C(&qword_269CE1FF0);
  uint64_t v24 = sub_25346CB4C(v23);
  MEMORY[0x270FA5388](v24);
  sub_253AF1C20(v25, v86);
  sub_253B06410();
  sub_253465998();
  uint64_t v93 = v27;
  uint64_t v94 = v26;
  MEMORY[0x270FA5388](v26);
  sub_25347FA68(v28, v86);
  uint64_t v29 = sub_253462A5C(&qword_269CE2000);
  uint64_t v30 = sub_25346CB4C(v29);
  MEMORY[0x270FA5388](v30);
  uint64_t v96 = (char *)&v86 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  uint64_t v32 = sub_253B06440();
  sub_253465998();
  uint64_t v97 = v33;
  MEMORY[0x270FA5388](v34);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v35);
  sub_2536D4170();
  uint64_t v36 = sub_253462A5C(&qword_269CE5128);
  uint64_t v37 = sub_25346CB4C(v36);
  MEMORY[0x270FA5388](v37);
  sub_2534D9C38();
  MEMORY[0x270FA5388](v38);
  sub_2534D97C0();
  uint64_t v39 = sub_253462A5C(&qword_269CE2010);
  uint64_t v40 = sub_25346CB4C(v39);
  MEMORY[0x270FA5388](v40);
  sub_2534D8CE4();
  MEMORY[0x270FA5388](v41);
  sub_2534B347C();
  uint64_t v42 = sub_253B06430();
  sub_253A6C260(v42, v43, v44, v45, v46, v47, v48, v49, v86, v87);
  if (v13)
  {
    sub_253B064B0();
    sub_25346CAF4();
    (*(void (**)(uint64_t))(v51 + 8))(v10);
  }
  else
  {
    uint64_t v88 = v11;
    uint64_t v89 = v14;
    uint64_t v90 = v50;
    char v52 = (int *)v98;
    sub_253B06300();
    sub_253960BC8();
    sub_253B062F0();
    sub_253960BC8();
    uint64_t v53 = v10;
    sub_253B06470();
    uint64_t v54 = v97;
    sub_253A73EE8();
    sub_2534D96CC();
    sub_2534AF234();
    v55();
    int v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 88))(v15, v32);
    if (v56 == *MEMORY[0x263F4C5B8])
    {
      uint64_t v57 = v53;
      uint64_t v87 = v12;
      HIDWORD(v86) = 0;
    }
    else
    {
      if (v56 == *MEMORY[0x263F4C5C8])
      {
        uint64_t v57 = v53;
        uint64_t v87 = v12;
        int v58 = 1;
      }
      else
      {
        if (v56 != *MEMORY[0x263F4C5C0])
        {
          sub_25394EA00();
          uint64_t v82 = sub_2534D969C();
          sub_253A73498(v82, v83);
          uint64_t v84 = *(void (**)(void))(v97 + 8);
          sub_2534D91AC();
          v84();
          sub_2536D5500();
          sub_2534D91AC();
          v84();
          swift_bridgeObjectRelease();
          sub_253B064B0();
          sub_25346CAF4();
          sub_2534659CC();
          v85();
          sub_253472458(v89, &qword_269CE2010);
          sub_253472458(v12, &qword_269CE2010);
          goto LABEL_12;
        }
        uint64_t v57 = v53;
        uint64_t v87 = v12;
        int v58 = 2;
      }
      HIDWORD(v86) = v58;
    }
    unint64_t v59 = v96;
    sub_2534659CC();
    v60();
    sub_253B06490();
    sub_253A6C574();
    uint64_t v62 = v61;
    sub_253B064A0();
    char v63 = sub_253B06400();
    type metadata accessor for TranscriptProtoVisualOutputOptions(0);
    sub_253AF2764();
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *unint64_t v59 = v63 & 1;
    sub_2534659CC();
    v64();
    sub_253AF24D0((uint64_t)v59, 0);
    sub_253B06460();
    sub_253AF39AC();
    sub_253960D44();
    uint64_t v97 = sub_253B06480();
    uint64_t v95 = v65;
    uint64_t v66 = v91;
    uint64_t v67 = v62;
    char v68 = v52;
    uint64_t v69 = v91 + v52[7];
    type metadata accessor for TranscriptProtoDialogType(0);
    sub_253A7388C(v69, 1);
    uint64_t v70 = v52[8];
    uint64_t v98 = v57;
    sub_253A7388C(v66 + v70, 1);
    uint64_t v71 = v66 + v52[9];
    sub_253AF24D0(v71, 1);
    uint64_t v72 = v66 + v68[10];
    uint64_t v73 = type metadata accessor for TranscriptProtoVisualOutput(0);
    sub_25346CC08(v72, v74, v75, v73);
    uint64_t v76 = (uint64_t *)(v66 + v68[11]);
    *uint64_t v76 = 0;
    v76[1] = 0;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(void *)uint64_t v66 = v90;
    sub_253961BF0(v87, v69, &qword_269CE2010);
    sub_253AF3250();
    sub_253961BF0(v77, v78, v79);
    *(unsigned char *)(v66 + 8) = BYTE4(v86);
    *(void *)(v66 + 16) = v67;
    sub_253961BF0((uint64_t)v96, v71, &qword_269CE2000);
    sub_253961BF0(a10, v72, &qword_269CE1FF0);
    swift_bridgeObjectRelease();
    uint64_t v80 = v95;
    *uint64_t v76 = v97;
    v76[1] = v80;
    sub_253AF19D0(v66, v92);
    sub_253B064B0();
    sub_25346CAF4();
    (*(void (**)(uint64_t))(v81 + 8))(v98);
  }
LABEL_12:
  sub_2534F8590();
  sub_2534847C8();
}

uint64_t TranscriptProtoResponseType.init(handwritten:)()
{
  sub_253A733C8();
  sub_253B06440();
  sub_253465998();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  sub_2534AF234();
  v4();
  sub_253578368();
  int v6 = v5();
  if (v6 == *MEMORY[0x263F4C5B8])
  {
    char v7 = 0;
LABEL_7:
    sub_2534DA4BC();
    uint64_t result = v8();
    *uint64_t v0 = v7;
    return result;
  }
  if (v6 == *MEMORY[0x263F4C5C8])
  {
    char v7 = 1;
    goto LABEL_7;
  }
  if (v6 == *MEMORY[0x263F4C5C0])
  {
    char v7 = 2;
    goto LABEL_7;
  }
  sub_25394EA00();
  uint64_t v10 = sub_2534D969C();
  sub_253A73498(v10, v11);
  uint64_t v12 = *(void (**)(void))(v2 + 8);
  sub_2534DA4BC();
  v12();
  sub_2534DA4BC();
  return ((uint64_t (*)(void))v12)();
}

uint64_t TranscriptProtoVisualOutputOptions.init(handwritten:)()
{
  sub_253AF2664();
  char v1 = sub_253B06400();
  type metadata accessor for TranscriptProtoVisualOutputOptions(0);
  sub_253945118();
  *uint64_t v0 = v1 & 1;
  sub_253B06410();
  sub_25346CAF4();
  uint64_t v2 = sub_253A3F4E8();
  return v3(v2);
}

void sub_253AC2C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  TranscriptProtoResponseOutput.init(handwritten:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t QueryResults.init(transcript:)(uint64_t a1)
{
  return sub_253AAF8E0(a1, (uint64_t (*)(uint64_t))sub_2539526A4);
}

uint64_t sub_253AC2C8C(uint64_t a1)
{
  return QueryResults.init(transcript:)(a1);
}

uint64_t sub_253AC2CA4()
{
  return sub_253A99DCC();
}

uint64_t TranscriptProtoQueryResults.init(handwritten:)(uint64_t a1)
{
  return sub_253AC2D00(a1, (uint64_t)sub_253A67D94, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryResults);
}

uint64_t sub_253AC2D00(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v7 = sub_253AF3CCC(a1);
  uint64_t result = v8(v7);
  if (!v4)
  {
    uint64_t v10 = sub_253AF35AC();
    a3(v10);
    uint64_t result = sub_253945118();
    *uint64_t v3 = v5;
  }
  return result;
}

uint64_t sub_253AC2D54(uint64_t a1)
{
  return TranscriptProtoQueryResults.init(handwritten:)(a1);
}

#error "253AC2E6C: call analysis failed (funcsize=158)"

void ActionParameterContext.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  uint64_t v13 = v12;
  uint64_t v15 = sub_253AF2150(v14);
  uint64_t v16 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(v15);
  uint64_t v17 = sub_25346CB4C(v16);
  MEMORY[0x270FA5388](v17);
  uint64_t v18 = sub_2534D8CAC();
  uint64_t v19 = type metadata accessor for TranscriptProtoStatementID(v18);
  uint64_t v20 = sub_25346CB4C(v19);
  MEMORY[0x270FA5388](v20);
  sub_253A3C4DC();
  sub_253465998();
  MEMORY[0x270FA5388](v21);
  uint64_t v22 = sub_2534B33AC();
  type metadata accessor for TranscriptProtoActionParameterContext(v22);
  sub_253AF3BC8();
  sub_25395E074(v23);
  if (v10)
  {
    sub_253AF1980();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_253AF2A1C();
    sub_253AF1980();
    sub_25395E114((uint64_t)v11);
    uint64_t v24 = v11[1];
    uint64_t v33 = *v11;
    uint64_t v26 = v11[2];
    uint64_t v25 = v11[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_253AF1980();
    uint64_t v28 = *(void *)(v13 + 16);
    uint64_t v27 = *(void *)(v13 + 24);
    swift_bridgeObjectRetain();
    sub_253AF1980();
    sub_253AF30A0();
    sub_25357931C();
    sub_2534D8E14();
    v29();
    uint64_t v30 = type metadata accessor for ActionParameterContext(0);
    uint64_t v31 = (void *)(a10 + *(int *)(v30 + 24));
    *uint64_t v31 = v33;
    v31[1] = v24;
    v31[2] = v26;
    v31[3] = v25;
    uint64_t v32 = (void *)(a10 + *(int *)(v30 + 20));
    *uint64_t v32 = v28;
    v32[1] = v27;
  }
  sub_253578DEC();
  sub_2534847C8();
}

#error "253AC34D0: call analysis failed (funcsize=211)"

uint64_t sub_253AC35D0(uint64_t a1)
{
  return ParameterQuery.init(transcript:)(a1);
}

uint64_t sub_253AC35E8()
{
  return sub_253A99EF4();
}

void TranscriptProtoParameterQuery.init(handwritten:)()
{
  sub_2535B4280();
  uint64_t v5 = v4;
  uint64_t v6 = sub_253A3F064();
  uint64_t Data = type metadata accessor for QueryData(v6);
  uint64_t v8 = sub_25346CB4C(Data);
  MEMORY[0x270FA5388](v8);
  sub_25346CC6C();
  uint64_t v9 = sub_253462A5C(&qword_269CE1F98);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_2534AF2D8();
  uint64_t v12 = type metadata accessor for ActionParameterContext(v11);
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  sub_2534966B0();
  uint64_t v14 = sub_253462A5C(&qword_269CE1FA8);
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  sub_253465A3C();
  sub_253AF1A28(v5, v3);
  TranscriptProtoActionParameterContext.init(handwritten:)();
  uint64_t v16 = type metadata accessor for TranscriptProtoActionParameterContext(0);
  uint64_t v17 = sub_253AF1CDC(v1, 0, 1, v16);
  uint64_t v18 = type metadata accessor for ParameterQuery(v17);
  uint64_t v19 = sub_253A3E348(v18);
  sub_253AF1A28(v19, v2);
  TranscriptProtoQueryData.init(handwritten:)(v2);
  if (v0)
  {
    sub_253AF1980();
    sub_253472458(v1, &qword_269CE1FA8);
  }
  else
  {
    type metadata accessor for TranscriptProtoQueryData(0);
    uint64_t v20 = sub_253AF3A34();
    sub_253971DA8(v20, v21, v22, v23);
    swift_bridgeObjectRetain();
    Dictionary<>.init(handwritten:)();
    swift_bridgeObjectRetain();
    sub_2534D9B10();
    TranscriptProtoParameterQuery.init(context:data:dependencies:deviceID:)();
    sub_253AF1980();
  }
  sub_2535B42DC();
}

void TranscriptProtoActionParameterContext.init(handwritten:)()
{
  sub_2534B3258();
  uint64_t v5 = v4;
  uint64_t v32 = v6;
  uint64_t v33 = v4;
  uint64_t v31 = type metadata accessor for TranscriptProtoActionParameterContext(0) - 8;
  MEMORY[0x270FA5388](v31);
  sub_2534B3294();
  uint64_t v7 = sub_253462A5C(&qword_269CE0448);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_2534D8CAC();
  sub_253B059D0();
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  sub_253465A3C();
  uint64_t v10 = sub_253462A5C(&qword_26B249528);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  sub_2534B34A4();
  sub_253AF2AEC();
  sub_2535787F4();
  sub_2534AF234();
  v12();
  int v13 = sub_253B059C0();
  sub_253B059A0();
  uint64_t v14 = sub_253AF2F60();
  uint64_t v15 = type metadata accessor for TranscriptProtoStatementID(v14);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v3 = v13;
  *(void *)(v3 + 8) = v2;
  *(void *)(v3 + 16) = v5;
  sub_253A56C4C();
  sub_2534D91A0();
  v16();
  uint64_t v17 = sub_253AF1CDC(v3, 0, 1, v15);
  uint64_t v18 = type metadata accessor for ActionParameterContext(v17);
  uint64_t v19 = (uint64_t *)(v33 + *(int *)(v18 + 24));
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  uint64_t v22 = (uint64_t *)(v33 + *(int *)(v18 + 20));
  uint64_t v23 = v22[1];
  uint64_t v24 = v19[3];
  uint64_t v29 = v19[2];
  uint64_t v30 = *v22;
  type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v1 = v21;
  v1[1] = v20;
  v1[2] = v29;
  v1[3] = v24;
  sub_253AF25CC((uint64_t)v1, 0);
  sub_253945180((uint64_t)v0 + *(int *)(v31 + 32));
  sub_253AF25CC((uint64_t)v0 + *(int *)(v31 + 36), 1);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v25 = sub_253AF21E0();
  sub_253961BF0(v25, v26, &qword_26B249528);
  *uint64_t v0 = v21;
  v0[1] = v20;
  v0[2] = v30;
  v0[3] = v23;
  uint64_t v27 = sub_2536D3F90();
  sub_253961BF0(v27, v28, &qword_269CE0448);
  sub_253AF19D0((uint64_t)v0, v32);
  sub_253AF1980();
  sub_253465A14();
}

#error "253AC3DB8: call analysis failed (funcsize=248)"

void sub_253AC3F28()
{
}

void sub_253AC3F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  ActionParameterContext.init(transcript:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_253AC3F58()
{
  return sub_253A9A074();
}

void PropertyQuery.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_2534847F8();
  a19 = v26;
  a20 = v27;
  uint64_t v152 = v20;
  uint64_t v29 = v28;
  uint64_t v136 = v30;
  uint64_t v31 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v32 = sub_25346CB4C(v31);
  MEMORY[0x270FA5388](v32);
  uint64_t v142 = (uint64_t)v132 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v34);
  uint64_t v141 = (uint64_t)v132 - v35;
  uint64_t v150 = sub_2536D3938();
  sub_253465998();
  uint64_t v134 = v36;
  MEMORY[0x270FA5388](v37);
  sub_2534F823C();
  uint64_t v39 = MEMORY[0x270FA5388](v38);
  sub_253AF2244(v39, v40, v41, v42, v43, v44, v45, v46, v132[0]);
  uint64_t v148 = sub_253B09120();
  sub_253465998();
  uint64_t v133 = v47;
  MEMORY[0x270FA5388](v48);
  uint64_t v139 = (char *)v132 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v50);
  uint64_t v138 = (char *)v132 - v51;
  uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
  sub_253465998();
  uint64_t v135 = v52;
  MEMORY[0x270FA5388](v53);
  sub_2534F823C();
  MEMORY[0x270FA5388](v54);
  sub_2534F823C();
  MEMORY[0x270FA5388](v55);
  uint64_t v149 = (char *)v132 - v56;
  sub_2534B324C();
  MEMORY[0x270FA5388](v57);
  uint64_t v143 = (char *)v132 - v58;
  sub_2534B324C();
  MEMORY[0x270FA5388](v59);
  sub_2534F823C();
  MEMORY[0x270FA5388](v60);
  uint64_t v61 = sub_2534DA41C();
  uint64_t v62 = type metadata accessor for QueryPredicate(v61);
  sub_253465998();
  uint64_t v147 = v63;
  MEMORY[0x270FA5388](v64);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v65);
  uint64_t v67 = (char *)v132 - v66;
  uint64_t v68 = sub_253AF1D98();
  uint64_t PredicateList = type metadata accessor for TranscriptProtoQueryPredicateList(v68);
  uint64_t v70 = sub_25346CB4C(PredicateList);
  MEMORY[0x270FA5388](v70);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v71);
  uint64_t v72 = sub_253A737E8();
  type metadata accessor for TranscriptProtoPropertyQueryEnum(v72);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v73);
  sub_253AF2110();
  uint64_t v74 = v152;
  sub_25395E254(v75);
  uint64_t v152 = v74;
  if (v74)
  {
    sub_253AF1980();
    goto LABEL_3;
  }
  uint64_t v144 = (uint64_t)v67;
  uint64_t v145 = v25;
  uint64_t v137 = v21;
  v132[0] = v23;
  uint64_t v146 = v62;
  v132[1] = v29;
  sub_253AF21D4();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_253AF1DC0(v24, (uint64_t)&a18);
    sub_253AF1D68(v62, (uint64_t)&a17);
    uint64_t v100 = v152;
    QueryPredicate.init(transcript:)();
    sub_253AF2B90();
    sub_253AF1980();
    if (!v100)
    {
      type metadata accessor for PropertyQuery(0);
      swift_storeEnumTagMultiPayload();
    }
    goto LABEL_3;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_253AF1DC0(v24, (uint64_t)&a13);
    uint64_t v101 = *(uint64_t (**)(uint64_t))v62;
    uint64_t v102 = *(void *)(*(void *)v62 + 16);
    uint64_t v103 = v135;
    if (v102)
    {
      uint64_t v155 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_253AF2208();
      sub_2539E83BC();
      sub_2535786F4();
      uint64_t v105 = (uint64_t)v101 + v104;
      uint64_t v144 = *(void *)(v103 + 72);
      uint64_t v140 = v101;
      uint64_t v141 = v133 + 32;
      uint64_t v106 = (uint64_t)v143;
      do
      {
        sub_253AF1A28(v105, v106);
        sub_253AF21C8();
        sub_253AF1A28(v107, v108);
        uint64_t v110 = *(void *)v101;
        uint64_t v109 = *((void *)v101 + 1);
        char v111 = 0;
        uint64_t v112 = v142;
        switch(*((unsigned char *)v101 + 16))
        {
          case 1:
            break;
          case 2:
            char v111 = 1;
            break;
          case 3:
            char v111 = 2;
            break;
          case 4:
            char v111 = 3;
            break;
          case 5:
            char v111 = 4;
            break;
          case 6:
            char v111 = 5;
            break;
          case 7:
            char v111 = 6;
            break;
          case 8:
            char v111 = 7;
            break;
          case 9:
            char v111 = 8;
            break;
          case 0xA:
            char v111 = 9;
            break;
          default:
            sub_25394EA00();
            sub_2534D969C();
            *uint64_t v131 = 0;
            swift_bridgeObjectRetain();
            swift_willThrow();
            goto LABEL_53;
        }
        sub_253961F60((uint64_t)v101 + *(int *)(Predicate + 24), v142, &qword_269CDCBC8);
        uint64_t v113 = sub_2536D42B0();
        uint64_t v114 = v150;
        sub_2534D8B48(v113, v115, v150);
        if (v91)
        {
          swift_bridgeObjectRetain();
          sub_253472458(v112, &qword_269CDCBC8);
          uint64_t v153 = v114;
          sub_253462A5C(&qword_269CE5170);
          sub_25396232C();
          sub_253AF2B50();
          uint64_t v127 = sub_2534D969C();
          *uint64_t v128 = v102;
          v128[1] = v114;
          sub_253962224(v127, (uint64_t)v128);
          goto LABEL_53;
        }
        sub_2535925F4();
        sub_253A3E6A4();
        v116();
        swift_bridgeObjectRetain();
        uint64_t v117 = v152;
        sub_253B09110();
        uint64_t v152 = v117;
        if (v117) {
          goto LABEL_53;
        }
        uint64_t v101 = type metadata accessor for TranscriptProtoQueryPredicate;
        sub_253AF1980();
        unint64_t v118 = v145;
        *uint64_t v145 = v110;
        v118[1] = v109;
        *((unsigned char *)v118 + 16) = v111;
        sub_2534D8E14();
        v119();
        uint64_t v106 = (uint64_t)v143;
        sub_253AF1980();
        if ((sub_2539621FC() & 1) == 0)
        {
          sub_253A3E764();
          sub_2539E83BC();
          uint64_t v109 = v155;
        }
        sub_253AF2EC4();
        if (v120)
        {
          sub_253AF2FF4();
          uint64_t v109 = v155;
        }
        *(void *)(v109 + 16) = type metadata accessor for TranscriptProtoQueryPredicate;
        sub_253AF25B4();
        sub_253AF19D0((uint64_t)v145, v121 + v122 * v110);
        v105 += v144;
        --v102;
      }
      while (v102);
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v109 = MEMORY[0x263F8EE78];
    }
    sub_253AF2B90();
    swift_bridgeObjectRelease();
    sub_253AF1980();
    *uint64_t v136 = v109;
    type metadata accessor for PropertyQuery(0);
    goto LABEL_56;
  }
  sub_253AF317C();
  uint64_t v77 = *(char **)v22;
  uint64_t v78 = *(void *)(*(void *)v22 + 16);
  uint64_t v79 = v135;
  if (!v78)
  {
    swift_bridgeObjectRetain();
LABEL_54:
    sub_253AF1980();
    swift_bridgeObjectRelease();
    sub_253AF1980();
    uint64_t v129 = sub_253AF3714();
    type metadata accessor for PropertyQuery(v129);
    sub_253AF2618();
LABEL_56:
    swift_storeEnumTagMultiPayload();
    goto LABEL_3;
  }
  uint64_t v142 = v22;
  uint64_t v154 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_253AF2448();
  sub_2539E83BC();
  sub_2535786F4();
  uint64_t v143 = v77;
  uint64_t v81 = (uint64_t)&v77[v80];
  uint64_t v149 = *(char **)(v79 + 72);
  uint64_t v145 = (void *)(v133 + 32);
  uint64_t v82 = v137;
  uint64_t v83 = v132[3];
  while (2)
  {
    sub_253AF1A28(v81, v82);
    uint64_t v84 = sub_25353CE60();
    sub_253AF1A28(v84, v85);
    uint64_t v87 = *(void *)v83;
    uint64_t v86 = *(void *)(v83 + 8);
    char v88 = 0;
    uint64_t v89 = v150;
    uint64_t v90 = v141;
    switch(*(unsigned char *)(v83 + 16))
    {
      case 1:
        goto LABEL_18;
      case 2:
        char v88 = 1;
        goto LABEL_18;
      case 3:
        char v88 = 2;
        goto LABEL_18;
      case 4:
        char v88 = 3;
        goto LABEL_18;
      case 5:
        char v88 = 4;
        goto LABEL_18;
      case 6:
        char v88 = 5;
        goto LABEL_18;
      case 7:
        char v88 = 6;
        goto LABEL_18;
      case 8:
        char v88 = 7;
        goto LABEL_18;
      case 9:
        char v88 = 8;
        goto LABEL_18;
      case 0xA:
        char v88 = 9;
LABEL_18:
        sub_253961F60(v83 + *(int *)(Predicate + 24), v141, &qword_269CDCBC8);
        sub_2534D8B48(v90, 1, v89);
        if (!v91)
        {
          sub_253AF3720();
          sub_253A3C378();
          v92();
          swift_bridgeObjectRetain();
          uint64_t v93 = v152;
          sub_253B09110();
          uint64_t v152 = v93;
          if (v93) {
            goto LABEL_53;
          }
          sub_253AF1980();
          uint64_t v94 = v144;
          *(void *)uint64_t v144 = v87;
          *(void *)(v94 + 8) = v86;
          *(unsigned char *)(v94 + 16) = v88;
          sub_2534D8E14();
          v95();
          uint64_t v82 = v137;
          sub_253AF2474();
          uint64_t v96 = v154;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2539E83BC();
            uint64_t v96 = v154;
          }
          unint64_t v97 = *(void *)(v96 + 16);
          if (v97 >= *(void *)(v96 + 24) >> 1)
          {
            sub_253AF2FF4();
            uint64_t v96 = v154;
          }
          *(void *)(v96 + 16) = v97 + 1;
          sub_253AF3028();
          sub_253AF19D0(v144, v98 + v99 * v97);
          v81 += (uint64_t)v149;
          if (!--v78)
          {
            sub_253AF2BA8();
            goto LABEL_54;
          }
          continue;
        }
        swift_bridgeObjectRetain();
        sub_253472458(v90, &qword_269CDCBC8);
        uint64_t v153 = v89;
        sub_253462A5C(&qword_269CE5170);
        uint64_t v123 = sub_25396232C();
        uint64_t v125 = v124;
        sub_253961DC0();
        sub_2534D969C();
        *(void *)uint64_t v126 = v123;
        *(void *)(v126 + 8) = v125;
        *(unsigned char *)(v126 + 16) = 0;
LABEL_51:
        swift_willThrow();
LABEL_53:
        sub_253AF1980();
        swift_bridgeObjectRelease();
        sub_253AF1980();
        swift_release();
        sub_253AF2B90();
        swift_bridgeObjectRelease();
        sub_253AF1980();
LABEL_3:
        sub_253A3C6AC();
        sub_2534847C8();
        return;
      default:
        sub_25394EA00();
        sub_2534D969C();
        *uint64_t v130 = 0;
        swift_bridgeObjectRetain();
        goto LABEL_51;
    }
  }
}

uint64_t sub_253AC4BD8(uint64_t a1)
{
  return QueryData.init(transcript:)(a1);
}

void QueryPredicate.init(transcript:)()
{
  sub_2534847F8();
  sub_253AF2A80();
  sub_253AF37D0();
  uint64_t v3 = sub_253B08E50();
  uint64_t v4 = sub_25346CB4C(v3);
  MEMORY[0x270FA5388](v4);
  sub_253AF23BC();
  sub_253465998();
  MEMORY[0x270FA5388](v5);
  sub_2534966B0();
  uint64_t v7 = *v0;
  uint64_t v6 = v0[1];
  char v8 = 0;
  switch(*((unsigned char *)v0 + 16))
  {
    case 1:
      goto LABEL_12;
    case 2:
      char v8 = 1;
      goto LABEL_12;
    case 3:
      char v8 = 2;
      goto LABEL_12;
    case 4:
      char v8 = 3;
      goto LABEL_12;
    case 5:
      char v8 = 4;
      goto LABEL_12;
    case 6:
      char v8 = 5;
      goto LABEL_12;
    case 7:
      char v8 = 6;
      goto LABEL_12;
    case 8:
      char v8 = 7;
      goto LABEL_12;
    case 9:
      char v8 = 8;
      goto LABEL_12;
    case 0xA:
      char v8 = 9;
LABEL_12:
      type metadata accessor for TranscriptProtoQueryPredicate(0);
      sub_253AF2EB8();
      swift_bridgeObjectRetain();
      sub_25395DCE8();
      if (v1) {
        goto LABEL_13;
      }
      sub_253B09110();
      sub_253AF1980();
      *(void *)uint64_t v2 = v7;
      *(void *)(v2 + 8) = v6;
      *(unsigned char *)(v2 + 16) = v8;
      type metadata accessor for QueryPredicate(0);
      sub_2534D8E14();
      v10();
      break;
    default:
      sub_25394EA00();
      sub_2534D969C();
      *uint64_t v9 = 0;
      swift_bridgeObjectRetain();
      swift_willThrow();
LABEL_13:
      sub_253AF1980();
      swift_bridgeObjectRelease();
      break;
  }
  sub_2534F8A10();
  sub_2534847C8();
}

#error "253AC4E24: call analysis failed (funcsize=6)"

void TranscriptProtoPropertyQuery.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_2534847F8();
  a19 = v24;
  a20 = v25;
  uint64_t v179 = v21;
  uint64_t v161 = v26;
  unint64_t v28 = v27;
  uint64_t v176 = sub_253B08E50();
  sub_253465998();
  uint64_t v171 = v29;
  MEMORY[0x270FA5388](v30);
  uint64_t v166 = (char *)v154 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v33 = MEMORY[0x270FA5388](v32);
  sub_25396314C(v33, v34, v35, v36, v37, v38, v39, v40, v154[0]);
  uint64_t v41 = sub_253B09120();
  sub_253465998();
  uint64_t v157 = v42;
  MEMORY[0x270FA5388](v43);
  uint64_t v164 = (char *)v154 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v45);
  uint64_t v168 = (char *)v154 - v46;
  uint64_t v47 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v48 = sub_25346CB4C(v47);
  MEMORY[0x270FA5388](v48);
  uint64_t v163 = (char *)v154 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v51 = MEMORY[0x270FA5388](v50);
  uint64_t v59 = sub_253AF1EA4(v51, v52, v53, v54, v55, v56, v57, v58, v154[0]);
  type metadata accessor for TranscriptProtoQueryPredicate(v59);
  sub_253465998();
  uint64_t v174 = v61;
  uint64_t v175 = v60;
  MEMORY[0x270FA5388](v60);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v62);
  sub_2534B3318();
  uint64_t v177 = v63;
  sub_2534B324C();
  MEMORY[0x270FA5388](v64);
  sub_2534B35DC();
  uint64_t v173 = v65;
  uint64_t v66 = sub_253483660();
  uint64_t Predicate = type metadata accessor for QueryPredicate(v66);
  sub_253465998();
  uint64_t v156 = v67;
  MEMORY[0x270FA5388](v68);
  uint64_t v170 = (uint64_t)v154 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v70);
  sub_2534B3318();
  uint64_t v167 = v71;
  sub_2534B324C();
  MEMORY[0x270FA5388](v72);
  uint64_t v169 = (char *)v154 - v73;
  sub_2534B324C();
  MEMORY[0x270FA5388](v74);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v75);
  uint64_t v172 = (uint64_t)v154 - v76;
  sub_2534B324C();
  MEMORY[0x270FA5388](v77);
  uint64_t v79 = sub_2534F8208((uint64_t)v154 - v78);
  type metadata accessor for PropertyQuery(v79);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v80);
  uint64_t v81 = sub_2534B464C();
  uint64_t Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(v81);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v83);
  sub_2534F823C();
  MEMORY[0x270FA5388](v84);
  sub_2534F823C();
  MEMORY[0x270FA5388](v85);
  sub_2534B3318();
  uint64_t v87 = v86;
  sub_2534B324C();
  MEMORY[0x270FA5388](v88);
  uint64_t v90 = sub_2534F8208((uint64_t)v154 - v89);
  uint64_t v91 = type metadata accessor for TranscriptProtoPropertyQuery(v90);
  MEMORY[0x270FA5388](v91);
  sub_25346CC6C();
  sub_253AF24D0(v28, 1);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253465A98();
  uint64_t v159 = Enum;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v92, v93, v94, Enum);
  uint64_t v95 = v161;
  uint64_t v160 = v23;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253AF1A28(v95, v20);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    uint64_t v172 = v41;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v41 = *(void *)v20;
      uint64_t v97 = *(void *)(*(void *)v20 + 16);
      if (v97)
      {
        unint64_t v155 = v28;
        uint64_t v180 = (uint64_t (*)(uint64_t))MEMORY[0x263F8EE78];
        sub_253AF36BC();
        sub_2539E6964();
        sub_253AF2BB4();
        *(void *)(v98 - 256) = v41;
        uint64_t v164 = *(char **)(v99 + 72);
        sub_253AF3870();
        uint64_t v166 = v102;
        uint64_t v167 = v101;
        uint64_t v163 = (char *)(v171 + 32);
        uint64_t v41 = (uint64_t)v169;
        uint64_t v22 = v154[1];
        while (1)
        {
          uint64_t v170 = v100;
          uint64_t v171 = v97;
          uint64_t v103 = v177;
          sub_253AF1A28(v100, v22);
          uint64_t v104 = sub_253579334();
          sub_253AF1A28(v104, v105);
          unint64_t v28 = *(void *)v41;
          uint64_t v106 = *(void *)(v41 + 8);
          char v107 = *(unsigned char *)(v41 + 16);
          sub_2534B3428();
          v108();
          swift_bridgeObjectRetain();
          uint64_t v109 = v179;
          sub_253B09100();
          uint64_t v110 = v22;
          if (v109) {
            break;
          }
          uint64_t v179 = 0;
          sub_2534659CC();
          v111();
          uint64_t v112 = v162;
          sub_25351C5C0();
          uint64_t v113 = v176;
          sub_2534D8E14();
          v114();
          sub_253A73620(v112);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v103 + *(int *)(v175 + 24), 1, 1, v113);
          _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
          *(void *)uint64_t v103 = v28;
          *(void *)(v103 + 8) = v106;
          *(unsigned char *)(v103 + 16) = v107 + 1;
          uint64_t v115 = sub_2536D44B0();
          sub_253961BF0(v115, v116, &qword_269CDCBC8);
          sub_253AF19D0(v103, v173);
          uint64_t v117 = type metadata accessor for QueryPredicate;
          unint64_t v118 = v169;
          sub_253AF1980();
          sub_253AF2640();
          uint64_t v22 = v110;
          uint64_t v41 = (uint64_t)v118;
          if ((sub_2539621FC() & 1) == 0)
          {
            sub_253AF3040();
            uint64_t v117 = v180;
          }
          uint64_t v119 = v171;
          sub_253AF2FCC();
          if (v121)
          {
            sub_25396226C(v120);
            sub_2539E6964();
            uint64_t v117 = v180;
          }
          *((void *)v117 + 2) = v106;
          sub_2539623C4();
          sub_253AF19D0(v122, v123);
          uint64_t v100 = (uint64_t)&v164[v170];
          uint64_t v97 = v119 - 1;
          if (!v97)
          {
            swift_bridgeObjectRelease();
            sub_253AF3884();
            goto LABEL_28;
          }
        }
        sub_2534659CC();
        v152();
        sub_253AF1980();
        swift_bridgeObjectRelease();
        sub_253AF2474();
        swift_release();
LABEL_27:
        sub_253AF1980();
        sub_253AF1980();
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      swift_bridgeObjectRelease();
      uint64_t v117 = (uint64_t (*)(uint64_t))MEMORY[0x263F8EE78];
LABEL_28:
      sub_253AF392C();
      uint64_t v124 = (uint64_t (**)(uint64_t))v154[2];
      type metadata accessor for TranscriptProtoQueryPredicateList(0);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *uint64_t v124 = v117;
      sub_253AF1980();
      sub_253AF1980();
      sub_2539627B8();
    }
    else
    {
      uint64_t v126 = *(void *)v20;
      uint64_t v127 = *(void *)(*(void *)v20 + 16);
      if (v127)
      {
        unint64_t v155 = v28;
        uint64_t v181 = (uint64_t (*)(uint64_t))MEMORY[0x263F8EE78];
        uint64_t v173 = v127;
        sub_2539E6964();
        sub_253AF2BB4();
        *(void *)(v128 - 256) = v126;
        uint64_t v165 = *(void *)(v129 + 72);
        sub_253AF3870();
        uint64_t v168 = v132;
        uint64_t v169 = v131;
        uint64_t v133 = v170;
        uint64_t v162 = v171 + 32;
        uint64_t v134 = v179;
        uint64_t v135 = v167;
        while (1)
        {
          uint64_t v171 = v130;
          sub_253AF1A28(v130, v135);
          sub_253AF1A28(v135, v133);
          uint64_t v136 = *(void *)v133;
          uint64_t v137 = *(void *)(v133 + 8);
          char v138 = *(unsigned char *)(v133 + 16);
          sub_2534B3428();
          v139();
          swift_bridgeObjectRetain();
          sub_253B09100();
          if (v134) {
            break;
          }
          uint64_t v179 = 0;
          char v140 = v138 + 1;
          sub_2534659CC();
          v141();
          uint64_t v142 = v22;
          uint64_t v143 = (uint64_t)v163;
          sub_253579334();
          uint64_t v144 = v176;
          sub_2534D8E14();
          v145();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v143, 0, 1, v144);
          uint64_t v146 = v177;
          uint64_t v147 = v177 + *(int *)(v175 + 24);
          sub_253AF1E48(v147, 1);
          _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
          *(void *)uint64_t v146 = v136;
          *(void *)(v146 + 8) = v137;
          *(unsigned char *)(v146 + 16) = v140;
          uint64_t v148 = v143;
          uint64_t v22 = v142;
          sub_253961BF0(v148, v147, &qword_269CDCBC8);
          uint64_t v149 = v146;
          uint64_t v135 = v167;
          sub_253AF19D0(v149, v142);
          uint64_t v150 = type metadata accessor for QueryPredicate;
          uint64_t v133 = v170;
          sub_253AF1980();
          sub_253AF1980();
          if ((sub_2539621FC() & 1) == 0)
          {
            sub_253AF3040();
            uint64_t v150 = v181;
          }
          unint64_t v28 = *((void *)v150 + 2);
          uint64_t v134 = v179;
          if (v28 >= *((void *)v150 + 3) >> 1)
          {
            sub_2539E6964();
            uint64_t v150 = v181;
          }
          *((void *)v150 + 2) = v28 + 1;
          sub_2539623C4();
          sub_253AF19D0(v142, v151);
          uint64_t v130 = v171 + v165;
          if (!--v173)
          {
            swift_bridgeObjectRelease();
            sub_253AF3884();
            uint64_t v22 = v160;
            uint64_t v41 = v158;
            goto LABEL_29;
          }
        }
        sub_2534659CC();
        v153();
        sub_253AF1980();
        swift_bridgeObjectRelease();
        sub_253AF1980();
        swift_release();
        goto LABEL_27;
      }
      swift_bridgeObjectRelease();
      uint64_t v150 = (uint64_t (*)(uint64_t))MEMORY[0x263F8EE78];
      sub_253AF392C();
LABEL_29:
      uint64_t v124 = (uint64_t (**)(uint64_t))v154[3];
      type metadata accessor for TranscriptProtoQueryPredicateList(0);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *uint64_t v124 = v150;
      sub_253AF1980();
      sub_253AF1980();
      sub_2539627B8();
    }
    swift_storeEnumTagMultiPayload();
LABEL_31:
    sub_253AF19D0((uint64_t)v124, v41);
    sub_253472458(v22, &qword_269CE1F30);
    sub_253AF19D0(v41, v22);
    sub_253AF24D0(v22, 0);
    sub_253AF1A28(v22, v28);
    goto LABEL_32;
  }
  sub_253AF1D38(v20, (uint64_t)&a15);
  sub_253AF1A28(v20, v172);
  uint64_t v124 = v87;
  sub_253AF2688();
  uint64_t v125 = v179;
  TranscriptProtoQueryPredicate.init(handwritten:)();
  sub_253AF1980();
  sub_253AF1980();
  sub_253AF1980();
  uint64_t v22 = v160;
  if (!v125)
  {
    swift_storeEnumTagMultiPayload();
    uint64_t v41 = v158;
    goto LABEL_31;
  }
LABEL_32:
  sub_253AF1980();
  sub_2536D3D5C();
  sub_2534847C8();
}

void TranscriptProtoQueryPredicate.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v4 = v3;
  uint64_t v6 = sub_253AF2150(v5);
  uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(v6);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v7);
  sub_253AF2394();
  sub_253465998();
  MEMORY[0x270FA5388](v8);
  sub_253AF23BC();
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  sub_25346CC54();
  uint64_t v10 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  sub_2534966B0();
  uint64_t v12 = v4[1];
  uint64_t v19 = *v4;
  char v18 = *((unsigned char *)v4 + 16);
  type metadata accessor for QueryPredicate(0);
  sub_253944AE4();
  v13();
  swift_bridgeObjectRetain();
  sub_253B09100();
  sub_253477128();
  v14();
  if (v0)
  {
    sub_253AF1980();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2534D8E14();
    v15();
    sub_253A7385C(v2, 0);
    sub_253A7385C(v1 + *(int *)(Predicate + 24), 1);
    uint64_t v16 = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(void *)uint64_t v1 = v19;
    *(void *)(v1 + 8) = v12;
    *(unsigned char *)(v1 + 16) = v18 + 1;
    sub_253AF3B34(v16, v17, &qword_269CDCBC8);
    sub_253AF3B6C();
    sub_253AF1980();
  }
  sub_253A3C6AC();
  sub_2534847C8();
}

#error "253AC5D0C: call analysis failed (funcsize=6)"

uint64_t sub_253AC5D18(uint64_t a1)
{
  return TranscriptProtoQueryData.init(handwritten:)(a1);
}

void sub_253AC5D30()
{
}

#error "253AC5DF0: call analysis failed (funcsize=79)"

uint64_t sub_253AC5EA8()
{
  return ActionConfirmation.init(transcript:)();
}

uint64_t sub_253AC5EC0()
{
  return sub_253A9A1E4();
}

void TranscriptProtoActionConfirmation.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v2 = sub_253971B04();
  uint64_t v3 = type metadata accessor for TranscriptProtoActionConfirmation(v2);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v4);
  sub_2534B3294();
  uint64_t v5 = sub_253462A5C(&qword_269CE50F8);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_2534966B0();
  uint64_t v7 = sub_253462A5C(&qword_269CE0480);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_25346CC6C();
  uint64_t v9 = MEMORY[0x25A265AE0]();
  uint64_t v10 = sub_253AE7CC4(v9);
  if (v0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    sub_253B06AC0();
    sub_253AF2570();
    sub_253960888();
    uint64_t v12 = (uint64_t)v1 + *(int *)(v3 + 20);
    uint64_t v13 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
    sub_25346CC08(v12, v14, v15, v13);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *uint64_t v1 = v11;
    uint64_t v16 = sub_253578D2C();
    sub_253961BF0(v16, v17, v18);
    sub_253AF3228();
  }
  sub_253B06AF0();
  sub_25346CAF4();
  sub_2534659CC();
  v19();
  sub_253A3C6AC();
  sub_2534847C8();
}

void sub_253AC606C()
{
}

void ActionConfirmation.SystemStyle.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v6 = sub_253AF21FC(v5);
  uint64_t v7 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(v6);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v32 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  uint64_t v10 = sub_253B06A80();
  sub_253465998();
  uint64_t v31 = v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_2534D8CAC();
  type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(v13);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v14);
  sub_2534D8CE4();
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_2534DA41C();
  uint64_t v17 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(v16);
  uint64_t v18 = sub_25346CB4C(v17);
  MEMORY[0x270FA5388](v18);
  sub_253AF2110();
  sub_25395DD74(v19);
  if (!v0)
  {
    uint64_t v29 = v2;
    uint64_t v30 = v10;
    sub_253AF19D0(v4, v1);
    sub_253AF1A28(v1, v3);
    swift_bridgeObjectRetain();
    uint64_t v20 = v32;
    sub_25395DD24((uint64_t)v32);
    uint64_t v28 = v1;
    uint64_t v21 = *v20;
    if (v21 != 4)
    {
      sub_253AF1980();
      (*(void (**)(uint64_t, void, uint64_t))(v31 + 104))(v29, **((unsigned int **)&unk_2653980B8 + v21), v30);
      sub_253AF32C0();
      sub_253B06A50();
      sub_253AF1980();
      sub_253AF1980();
      sub_253AF1980();
      sub_253B06AB0();
      sub_25346CAF4();
      sub_25346CCF8();
      v27();
      goto LABEL_5;
    }
    sub_253462A5C(&qword_269CE86A0);
    uint64_t v22 = sub_253AF1E74();
    uint64_t v24 = v23;
    sub_253961DC0();
    uint64_t v25 = sub_2534D969C();
    *uint64_t v26 = v22;
    v26[1] = v24;
    sub_253962224(v25, (uint64_t)v26);
    sub_253AF1980();
    sub_253AF1980();
    swift_bridgeObjectRelease();
    sub_253AF1980();
    sub_25351C5C0();
  }
  sub_253AF1980();
LABEL_5:
  sub_253A3C6AC();
  sub_2534847C8();
}

void ActionConfirmation.SystemStyle.MontaraEnablement.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v4 = sub_253962754(v3);
  uint64_t v5 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(v4);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_2534D9C00();
  uint64_t v7 = sub_253B06A80();
  sub_253465998();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_2534966B0();
  type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
  sub_253AF2EB8();
  swift_bridgeObjectRetain();
  sub_25395DD24((uint64_t)v1);
  if (!v0)
  {
    uint64_t v11 = *v1;
    if (v11 != 4)
    {
      sub_253AF1980();
      (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v2, **((unsigned int **)&unk_2653980B8 + v11), v7);
      sub_253AF2B04();
      sub_253B06A50();
      sub_253AF1980();
      goto LABEL_6;
    }
    sub_253462A5C(&qword_269CE86A0);
    sub_253AF1E74();
    sub_253AF3C1C();
    sub_253961DC0();
    uint64_t v12 = sub_2534D969C();
    *uint64_t v13 = v9;
    v13[1] = v7;
    sub_253962224(v12, (uint64_t)v13);
    sub_253AF1980();
  }
  sub_253AF1980();
  swift_bridgeObjectRelease();
LABEL_6:
  sub_2534F8A10();
  sub_2534847C8();
}

void sub_253AC65DC()
{
}

uint64_t sub_253AC65F4()
{
  return sub_253A9A39C();
}

void TranscriptProtoActionConfirmationSystemStyle.init(handwritten:)()
{
  sub_2534B3258();
  sub_2534F8A1C();
  sub_253B06AA0();
  sub_253465998();
  MEMORY[0x270FA5388](v2);
  sub_2534D9C38();
  MEMORY[0x270FA5388](v3);
  sub_2534DA41C();
  sub_253B06AB0();
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_2534B34A4();
  uint64_t v5 = sub_253462A5C(&qword_269CE0478);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_2534D8CAC();
  uint64_t v8 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(v7);
  uint64_t v9 = sub_253AF1CDC(v0, 1, 1, v8);
  type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(v9);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253AF3914();
  sub_2534AF234();
  v10();
  sub_253578368();
  if (v11() == *MEMORY[0x263F4C940])
  {
    sub_253971A70();
    v12();
    sub_253AF3204();
    sub_25347FA84();
    v13();
    sub_253971B90();
    sub_2534D9B10();
    sub_2534AF234();
    v14();
    TranscriptProtoActionConfirmationSystemStyleMontaraEnablement.init(handwritten:)();
    sub_2534DA034();
    sub_25347FB18();
    v15();
    sub_2536D44B0();
    sub_2534D9A08();
    v16();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 0, 1, v8);
    sub_253961BF0(v1, v0, &qword_269CE0478);
    sub_253465A14();
  }
  else
  {
    sub_253B0A4B0();
    __break(1u);
  }
}

void TranscriptProtoActionConfirmationSystemStyleMontaraEnablement.init(handwritten:)()
{
  sub_2534B3258();
  uint64_t v6 = sub_253962754(v5);
  uint64_t v7 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(v6);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  sub_25346CBDC();
  uint64_t v9 = sub_253B06A80();
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  sub_2534847E0();
  uint64_t v11 = sub_253462A5C(&qword_269CE0470);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  sub_25346CC6C();
  sub_253B05FA0();
  sub_253AF2AC8();
  sub_253B06A90();
  TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource.init(handwritten:)();
  uint64_t v13 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, 0, 1, v13);
  char v14 = sub_253B06A70();
  uint64_t v15 = sub_253AF27F0(*(int *)(v8 + 32));
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, v16, v17, v13);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v4;
  sub_253961BF0(v2, v0, &qword_269CE0470);
  *(unsigned char *)(v1 + 16) = v14 & 1;
  sub_253AF19D0(v1, v19);
  sub_253B06AA0();
  sub_25346CAF4();
  sub_2534659CC();
  v18();
  sub_253465A14();
}

void sub_253AC69C4()
{
}

uint64_t ActionConfirmation.SystemStyle.MontaraEnablement.Source.init(transcript:)(unsigned char *a1)
{
  if (*a1 == 4)
  {
    sub_253462A5C(&qword_269CE86A0);
    sub_253AF2E38();
    sub_25396263C();
    uint64_t v3 = sub_2534D969C();
    *uint64_t v4 = v1;
    v4[1] = v2;
    sub_253962224(v3, (uint64_t)v4);
    return sub_253AF1980();
  }
  else
  {
    sub_253AF2580();
    sub_253AF1980();
    sub_253B06A80();
    sub_25346CAF4();
    sub_25346CCF8();
    return v6();
  }
}

void sub_253AC6B40()
{
}

uint64_t sub_253AC6B58()
{
  return sub_253A9A544();
}

uint64_t TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource.init(handwritten:)()
{
  sub_253971B04();
  sub_253B06A80();
  sub_253465998();
  MEMORY[0x270FA5388](v1);
  sub_2534B3294();
  *uint64_t v0 = 4;
  type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
  sub_253945118();
  sub_2536D44B0();
  sub_2534AF234();
  v2();
  sub_253578368();
  int v4 = v3();
  if (v4 == *MEMORY[0x263F4C928])
  {
    char v5 = 0;
LABEL_9:
    sub_2534DA2E4();
    sub_25351C3E8();
    uint64_t result = v6();
    *uint64_t v0 = v5;
    return result;
  }
  if (v4 == *MEMORY[0x263F4C920])
  {
    char v5 = 1;
    goto LABEL_9;
  }
  if (v4 == *MEMORY[0x263F4C918])
  {
    char v5 = 2;
    goto LABEL_9;
  }
  if (v4 == *MEMORY[0x263F4C910])
  {
    char v5 = 3;
    goto LABEL_9;
  }
  uint64_t result = sub_253B0A4B0();
  __break(1u);
  return result;
}

void sub_253AC6CB4()
{
}

uint64_t sub_253AC6CDC(unsigned char *a1)
{
  return ActionConfirmation.SystemStyle.MontaraEnablement.Source.init(transcript:)(a1);
}

uint64_t sub_253AC6CF4()
{
  return sub_253A9A6EC();
}

uint64_t sub_253AC6D0C()
{
  return TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource.init(handwritten:)();
}

void ParameterValue.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v1 = sub_253462A5C(&qword_269CE1BD0);
  uint64_t v2 = sub_25346CB4C(v1);
  MEMORY[0x270FA5388](v2);
  sub_253AF1DD8(v3, v13);
  uint64_t v4 = sub_253462A5C(&qword_269CDCB00);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_2534D8CAC();
  sub_253B08E50();
  sub_253465998();
  MEMORY[0x270FA5388](v6);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v7);
  sub_2534DA430();
  sub_253B09120();
  sub_253465998();
  MEMORY[0x270FA5388](v8);
  sub_253AF2D98();
  sub_25395DCE8();
  if (!v0)
  {
    sub_253592678();
    sub_2534AF234();
    v9();
    sub_253AF31A4();
    sub_253B09110();
    sub_2534D91AC();
    v10();
    uint64_t v11 = type metadata accessor for TranscriptProtoParameterValue(0);
    uint64_t v12 = sub_253AF2C24(v11);
    sub_253961F60(v12, v14, &qword_269CE1BD0);
    sub_25395A99C();
    sub_253A3D524();
    sub_253B06260();
  }
  sub_253AF1980();
  sub_253578DEC();
  sub_2534847C8();
}

void sub_253AC6F74()
{
}

uint64_t sub_253AC6F8C()
{
  return sub_253A9A998();
}

void TranscriptProtoParameterValue.init(handwritten:)()
{
  sub_2534847F8();
  sub_253AF33E8(v1);
  uint64_t v3 = v2;
  uint64_t v4 = sub_253462A5C(&qword_269CDCB00);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_2536D2C5C(v6, v28);
  uint64_t v7 = sub_253462A5C(&qword_269CE1BD0);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v31 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2536D3938();
  sub_253465998();
  uint64_t v30 = v11;
  MEMORY[0x270FA5388](v12);
  sub_253AF23BC();
  sub_253465998();
  MEMORY[0x270FA5388](v13);
  sub_253465A3C();
  uint64_t v14 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  sub_2534847E0();
  uint64_t v16 = sub_253AF1CDC(v3, 1, 1, v10);
  type metadata accessor for TranscriptProtoParameterValue(v16);
  sub_25394633C();
  uint64_t v18 = v3 + v17;
  uint64_t v19 = type metadata accessor for TranscriptProtoPromptSelection(0);
  uint64_t v29 = v18;
  sub_25346CC08(v18, v20, v21, v19);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253B06270();
  uint64_t v22 = v32;
  sub_253B09100();
  sub_2534B3470();
  v23();
  if (v22)
  {
    sub_253B06280();
    sub_25346CAF4();
    sub_2534659CC();
    v24();
    sub_253AF1980();
  }
  else
  {
    sub_253AF3920();
    sub_253578E58();
    sub_2534D8E14();
    v25();
    sub_253AF202C(v0);
    sub_253961BF0(v0, v3, &qword_269CDCBC8);
    sub_253B06250();
    uint64_t v26 = (uint64_t)v31;
    sub_253AF2278();
    sub_25395FB90();
    sub_253B06280();
    sub_25346CAF4();
    sub_2534659CC();
    v27();
    sub_253961BF0(v26, v29, &qword_269CE1BD0);
  }
  sub_2534F8590();
  sub_2534847C8();
}

void sub_253AC7270()
{
}

uint64_t PromptSelection.init(transcript:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  if (*((unsigned char *)a1 + 9))
  {
    sub_253462A5C(&qword_269CE86E0);
    sub_253AF2E38();
    sub_25396263C();
    uint64_t v4 = sub_2534D969C();
    *uint64_t v5 = v2;
    v5[1] = a2;
    sub_253962224(v4, (uint64_t)v5);
    return sub_253AF1980();
  }
  else
  {
    uint64_t v7 = *a1;
    if (a1[1])
    {
      sub_253AF1980();
      sub_253B06770();
      sub_25346CAF4();
      if (v7) {
        uint64_t v11 = (unsigned int *)MEMORY[0x263F4C6E0];
      }
      else {
        uint64_t v11 = (unsigned int *)MEMORY[0x263F4C6E8];
      }
      return (*(uint64_t (**)(void *, void))(v10 + 104))(a2, *v11);
    }
    else
    {
      sub_253AF1980();
      *a2 = v7;
      uint64_t v8 = *MEMORY[0x263F4C6D8];
      sub_253B06770();
      sub_25346CAF4();
      return (*(uint64_t (**)(void *, uint64_t))(v9 + 104))(a2, v8);
    }
  }
}

uint64_t sub_253AC73F8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return PromptSelection.init(transcript:)(a1, a2);
}

uint64_t sub_253AC7410()
{
  return sub_253A9AB50();
}

void TranscriptProtoPromptSelection.init(handwritten:)()
{
  sub_2534B3258();
  uint64_t v3 = sub_253971B04();
  type metadata accessor for TranscriptProtoPromptSelection(v3);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v4);
  sub_25346CBDC();
  sub_253B06770();
  sub_253465998();
  MEMORY[0x270FA5388](v5);
  sub_253AF20CC();
  sub_2534AF234();
  v6();
  sub_253578368();
  int v8 = v7();
  int v9 = v8;
  int v10 = *MEMORY[0x263F4C6D8];
  if (v8 == *MEMORY[0x263F4C6D8])
  {
    sub_253971A70();
    v12();
    uint64_t v11 = *v2;
    goto LABEL_7;
  }
  if (v8 == *MEMORY[0x263F4C6E8])
  {
    uint64_t v11 = 0;
LABEL_7:
    *(void *)uint64_t v1 = 0;
    *(_WORD *)(v1 + 8) = 256;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    sub_253578EEC();
    sub_2534F85D4();
    v13();
    sub_253AF19D0(v1, v0);
    *(void *)uint64_t v0 = v11;
    *(_WORD *)(v0 + 8) = v9 != v10;
    sub_253465A14();
    return;
  }
  if (v8 == *MEMORY[0x263F4C6E0])
  {
    uint64_t v11 = 1;
    goto LABEL_7;
  }
  sub_253B0A4B0();
  __break(1u);
}

void sub_253AC75D0()
{
}

uint64_t ParameterNeedsValue.init(transcript:)(uint64_t a1)
{
  return sub_253AD34A0(a1, MEMORY[0x263F4C988]);
}

uint64_t sub_253AC7638(uint64_t a1)
{
  return ParameterNeedsValue.init(transcript:)(a1);
}

uint64_t sub_253AC7650()
{
  return sub_253A9AE58();
}

void TranscriptProtoParameterNeedsValue.init(handwritten:)()
{
}

void sub_253AC76BC()
{
}

void ParameterConfirmation.init(transcript:)()
{
  sub_2534847F8();
  sub_253AF21FC(v1);
  sub_253B08E50();
  sub_253465998();
  MEMORY[0x270FA5388](v2);
  sub_2534D8CE4();
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = sub_253AF28AC();
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_2534B34A4();
  type metadata accessor for TranscriptProtoParameterConfirmation(0);
  sub_253AF2EB8();
  swift_bridgeObjectRetain();
  sub_25395DCE8();
  if (v0)
  {
    sub_253AF1980();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2534D9FA8();
    sub_2534AF234();
    v6();
    sub_253B09110();
    sub_2534659CC();
    v7();
    sub_253B06D20();
    sub_253AF1980();
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void sub_253AC7898()
{
}

uint64_t sub_253AC78B0()
{
  return sub_253A9B030();
}

void TranscriptProtoParameterConfirmation.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v5 = sub_253AF258C(v4);
  uint64_t v24 = type metadata accessor for TranscriptProtoParameterConfirmation(v5);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v6);
  sub_253AF2394();
  sub_253465998();
  MEMORY[0x270FA5388](v7);
  sub_253AF1EE4();
  sub_253465998();
  MEMORY[0x270FA5388](v8);
  sub_2534847E0();
  uint64_t v9 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  sub_2534966B0();
  uint64_t v23 = sub_253B05AF0();
  uint64_t v26 = v11;
  uint64_t v12 = MEMORY[0x25A265D40]();
  char v14 = v13;
  sub_253B06D50();
  sub_253B09100();
  if (v1)
  {
    sub_2534B3470();
    v15();
    sub_253B06D60();
    sub_25346CAF4();
    sub_2534659CC();
    v16();
    swift_bridgeObjectRelease();
  }
  else
  {
    int v17 = v14 & 1;
    if (v17) {
      uint64_t v12 = 0;
    }
    sub_2534B3470();
    v18();
    sub_253A3E5D4();
    sub_2534D8E14();
    v19();
    sub_253AF215C(v3);
    uint64_t v20 = sub_253AF3D18(v2 + *(int *)(v24 + 24));
    *(void *)uint64_t v2 = v23;
    *(void *)(v2 + 8) = v26;
    *(void *)(v2 + 16) = v12;
    *(unsigned char *)(v2 + 24) = v17;
    sub_253AF2670(v20, v21, &qword_269CDCBC8);
    sub_253AF19D0(v2, v25);
    sub_253B06D60();
    sub_25346CAF4();
    (*(void (**)(uint64_t))(v22 + 8))(v0);
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void sub_253AC7B1C()
{
}

#error "253AC7B70: call analysis failed (funcsize=46)"

uint64_t sub_253AC7BF4()
{
  return ParameterDisambiguation.init(transcript:)();
}

uint64_t sub_253AC7C0C()
{
  return sub_253A9B1E8();
}

void TranscriptProtoParameterDisambiguation.init(handwritten:)()
{
  sub_2535B45A0();
  sub_253AF3138();
  uint64_t v3 = v2;
  uint64_t v4 = sub_253B06E90();
  uint64_t v6 = v5;
  uint64_t v7 = MEMORY[0x25A265EA0]();
  char v9 = v8;
  uint64_t v10 = MEMORY[0x25A265EB0]();
  uint64_t v11 = sub_253AC7D1C(v10);
  if (v0)
  {
    sub_253B06EC0();
    sub_25346CAF4();
    sub_2534659CC();
    v12();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = v11;
    int v14 = v9 & 1;
    if (v14) {
      uint64_t v7 = 0;
    }
    type metadata accessor for TranscriptProtoParameterDisambiguation(0);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(void *)uint64_t v3 = v4;
    *(void *)(v3 + 8) = v6;
    *(unsigned char *)(v3 + 32) = v14;
    *(void *)(v3 + 16) = v13;
    *(void *)(v3 + 24) = v7;
    sub_253B06EC0();
    sub_25346CAF4();
    (*(void (**)(uint64_t))(v15 + 8))(v1);
  }
  sub_2535B4660();
}

uint64_t sub_253AC7D1C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v84 = sub_253B08E50();
  uint64_t v4 = *(void *)(v84 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v84);
  uint64_t v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v75 = (char *)&v65 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v82 = (char *)&v65 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v68 = (char *)&v65 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v66 = (char *)&v65 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v77 = (char *)&v65 - v16;
  uint64_t v17 = sub_253B09120();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v76 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v65 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v67 = (char *)&v65 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v65 = (char *)&v65 - v26;
  unint64_t v27 = *(void *)(a1 + 16);
  uint64_t v86 = MEMORY[0x263F8EE78];
  sub_2539E6644();
  uint64_t v69 = a1;
  uint64_t v78 = v18;
  uint64_t v79 = v4;
  uint64_t v83 = v17;
  unint64_t v85 = v27;
  if (v27)
  {
    unint64_t v28 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    uint64_t v29 = *(void *)(a1 + 16);
    uint64_t v73 = v7;
    uint64_t v74 = v29;
    unint64_t v72 = a1 + v28;
    uint64_t v70 = (void (**)(char *, uint64_t))(v18 + 8);
    uint64_t v71 = v18 + 16;
    uint64_t v81 = (void (**)(char *, char *, uint64_t))(v4 + 32);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v31 = 0;
    uint64_t v32 = v23;
    while (v74 != v31)
    {
      uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v18 + 16);
      v33(v32, v72 + *(void *)(v18 + 72) * v31, v17);
      uint64_t v34 = v76;
      v33(v76, (unint64_t)v32, v17);
      uint64_t v35 = v32;
      uint64_t v36 = v73;
      sub_253B09100();
      if (v2)
      {
        uint64_t v63 = *v70;
        (*v70)(v34, v17);
        uint64_t v43 = v69;
        swift_bridgeObjectRelease();
        swift_release();
        v63(v35, v17);
        swift_bridgeObjectRelease();
        return v43;
      }
      uint64_t v80 = 0;
      uint64_t v37 = *v70;
      (*v70)(v34, v17);
      uint64_t v38 = *v81;
      uint64_t v39 = v75;
      uint64_t v40 = v84;
      (*v81)(v75, v36, v84);
      uint64_t v41 = v39;
      uint64_t v42 = v38;
      v38(v82, v41, v40);
      v37(v35, v83);
      uint64_t v43 = v86;
      uint64_t v32 = v35;
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v44 = v80;
      }
      else
      {
        uint64_t v44 = v80;
        sub_2539E6644();
        uint64_t v43 = v86;
      }
      unint64_t v45 = *(void *)(v43 + 16);
      if (v45 >= *(void *)(v43 + 24) >> 1)
      {
        sub_2539E6644();
        uint64_t v43 = v86;
      }
      ++v31;
      *(void *)(v43 + 16) = v45 + 1;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v42)(v43+ ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80))+ *(void *)(v79 + 72) * v45, v82, v84);
      uint64_t v86 = v43;
      uint64_t v2 = v44;
      uint64_t v17 = v83;
      uint64_t v18 = v78;
      if (v85 == v31) {
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v43 = v86;
  swift_bridgeObjectRetain();
LABEL_13:
  uint64_t result = v69;
  unint64_t v46 = *(void *)(v69 + 16);
  if (v85 != v46)
  {
    uint64_t v80 = v18 + 16;
    uint64_t v81 = (void (**)(char *, char *, uint64_t))(v18 + 8);
    uint64_t v82 = (char *)(v79 + 32);
    uint64_t v47 = v65;
    uint64_t v48 = (void (**)(char *, uint64_t))(v18 + 8);
    while (v85 < v46)
    {
      uint64_t v49 = *(void (**)(char *, unint64_t, uint64_t))(v18 + 16);
      uint64_t v50 = v83;
      v49(v47, result+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * v85, v83);
      uint64_t v51 = v67;
      v49(v67, (unint64_t)v47, v50);
      uint64_t v52 = v68;
      sub_253B09100();
      if (v2)
      {
        uint64_t v64 = *v81;
        ((void (*)(char *, uint64_t))*v81)(v51, v50);
        ((void (*)(char *, uint64_t))v64)(v47, v50);
        swift_bridgeObjectRelease();
        uint64_t v43 = v86;
        swift_bridgeObjectRelease();
        swift_release();
        return v43;
      }
      uint64_t v53 = v52;
      uint64_t v54 = *v48;
      (*v48)(v51, v50);
      uint64_t v55 = *(void (**)(char *, char *, uint64_t))v82;
      uint64_t v56 = v66;
      uint64_t v57 = v53;
      uint64_t v58 = v84;
      (*(void (**)(char *, char *, uint64_t))v82)(v66, v57, v84);
      v55(v77, v56, v58);
      uint64_t v59 = (void (*)(unint64_t, char *, uint64_t))v55;
      v54(v47, v50);
      uint64_t v43 = v86;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2539E6644();
        uint64_t v43 = v86;
      }
      unint64_t v60 = *(void *)(v43 + 16);
      if (v60 >= *(void *)(v43 + 24) >> 1)
      {
        sub_2539E6644();
        uint64_t v43 = v86;
      }
      uint64_t v61 = v84;
      unint64_t v62 = v85 + 1;
      *(void *)(v43 + 16) = v60 + 1;
      v59(v43+ ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80))+ *(void *)(v79 + 72) * v60, v77, v61);
      uint64_t v86 = v43;
      uint64_t result = v69;
      unint64_t v46 = *(void *)(v69 + 16);
      unint64_t v85 = v62;
      uint64_t v2 = 0;
      uint64_t v18 = v78;
      if (v62 == v46) {
        goto LABEL_14;
      }
    }
LABEL_28:
    __break(1u);
    return result;
  }
LABEL_14:
  swift_bridgeObjectRelease_n();
  return v43;
}

void sub_253AC8448()
{
}

void ParameterNotAllowed.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v2 = v1;
  _OWORD v25[2] = v3;
  uint64_t v4 = sub_253462A5C(&qword_269CE86E8);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  uint64_t v7 = sub_253B06BC0();
  sub_253465998();
  v25[1] = v8;
  MEMORY[0x270FA5388](v9);
  sub_2536D37B0();
  sub_253465998();
  uint64_t v27 = v10;
  uint64_t v28 = v11;
  MEMORY[0x270FA5388](v10);
  sub_2534D9C38();
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_253AF28AC();
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  sub_2534966B0();
  uint64_t v15 = *v2;
  type metadata accessor for TranscriptProtoParameterNotAllowed(0);
  swift_bridgeObjectRetain();
  sub_25395DCE8();
  if (v0)
  {
    sub_253AF1980();
    swift_bridgeObjectRelease();
  }
  else
  {
    v25[0] = v15;
    uint64_t v16 = (uint64_t)v26;
    sub_2534AF234();
    v17();
    sub_253AF3B84();
    sub_253B09110();
    sub_2534659CC();
    v18();
    sub_253B06BA0();
    uint64_t v19 = sub_2536D42D4();
    sub_2534D8B48(v19, v20, v7);
    if (v21)
    {
      sub_25346CCF8();
      v22();
      sub_253472458(v16, &qword_269CE86E8);
    }
    else
    {
      uint64_t v23 = sub_2534D9A44();
      v24(v23);
    }
    sub_253AF21E0();
    sub_253B06B70();
    sub_253AF1980();
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void sub_253AC8708()
{
}

uint64_t sub_253AC8720()
{
  return sub_253A9B430();
}

void TranscriptProtoParameterNotAllowed.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v4 = v3;
  uint64_t v6 = sub_253AF21FC(v5);
  uint64_t v25 = type metadata accessor for TranscriptProtoParameterNotAllowed(v6);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v7);
  sub_2534D9C00();
  sub_253B06BC0();
  sub_253465998();
  MEMORY[0x270FA5388](v8);
  sub_2534D9B74();
  sub_253B08E50();
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  sub_2534D8CAC();
  sub_253B09120();
  sub_253465998();
  MEMORY[0x270FA5388](v10);
  sub_2534835B0();
  uint64_t v11 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  sub_2534847E0();
  uint64_t v24 = sub_253B05AF0();
  uint64_t v27 = v13;
  uint64_t v14 = v4;
  sub_253B06B90();
  sub_253B09100();
  if (v0)
  {
    sub_253477128();
    v15();
    sub_253B06BE0();
    sub_25346CAF4();
    sub_2534659CC();
    v16();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_253477128();
    v17();
    sub_2534D954C();
    sub_2534D8E14();
    v18();
    sub_253AF1DA4(v2);
    sub_253B06BD0();
    uint64_t v19 = sub_253B06BB0();
    sub_2534659CC();
    v20();
    if (v19 == 2) {
      char v21 = 2;
    }
    else {
      char v21 = v19 == 1;
    }
    uint64_t v22 = v1 + *(int *)(v25 + 24);
    sub_253578EBC(v22, 1);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(void *)uint64_t v1 = v24;
    *(void *)(v1 + 8) = v27;
    sub_253961BF0(v2, v22, &qword_269CDCBC8);
    *(unsigned char *)(v1 + 16) = v21;
    sub_253AF19D0(v1, v26);
    sub_253B06BE0();
    sub_25346CAF4();
    (*(void (**)(uint64_t))(v23 + 8))(v14);
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void sub_253AC8A20()
{
}

void ParameterCandidatesNotFound.init(transcript:)()
{
  sub_2534847F8();
  sub_253AF2150(v1);
  sub_253B08E50();
  sub_253465998();
  MEMORY[0x270FA5388](v2);
  sub_2534D8CE4();
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = sub_253AF28AC();
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_2534B34A4();
  type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
  sub_253AF32F4();
  swift_bridgeObjectRetain();
  sub_25395DCE8();
  if (v0)
  {
    sub_253AF1980();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2534D9FA8();
    sub_2534AF234();
    v6();
    sub_253B09110();
    sub_2534D91AC();
    v7();
    sub_253B06FE0();
    sub_253AF1980();
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void sub_253AC8BDC()
{
}

void TranscriptProtoParameterCandidatesNotFound.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v4 = v3;
  uint64_t v6 = sub_253AF21FC(v5);
  uint64_t v20 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(v6);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v7);
  sub_253AF2394();
  sub_253465998();
  MEMORY[0x270FA5388](v8);
  sub_253AF1EE4();
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  sub_2534847E0();
  uint64_t v10 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  sub_2534966B0();
  uint64_t v19 = sub_253B05AF0();
  uint64_t v22 = v12;
  sub_253B07000();
  sub_253B09100();
  sub_253477128();
  v13();
  if (v0)
  {
    sub_253B07010();
    sub_25346CAF4();
    sub_2534659CC();
    v14();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_253AF3920();
    sub_253A3E5D4();
    sub_2534D8E14();
    v15();
    sub_253AF1DA4(v2);
    sub_253578EBC((uint64_t)v1 + *(int *)(v20 + 20), 1);
    uint64_t v16 = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *uint64_t v1 = v19;
    v1[1] = v22;
    sub_253AF2670(v16, v17, &qword_269CDCBC8);
    sub_253AF19D0((uint64_t)v1, v21);
    sub_253B07010();
    sub_25346CAF4();
    (*(void (**)(uint64_t))(v18 + 8))(v4);
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void sub_253AC8E44()
{
}

void Candidate.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v4 = sub_253AF258C(v3);
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementID(v4);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v41 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253AF1D50();
  sub_253465998();
  uint64_t v39 = v9;
  uint64_t v40 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = sub_253AF294C(v10, v36);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  sub_253AF236C();
  sub_253465998();
  uint64_t v43 = v14;
  uint64_t v44 = v13;
  MEMORY[0x270FA5388](v13);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_253AF252C();
  sub_253465998();
  uint64_t v18 = v17;
  MEMORY[0x270FA5388](v19);
  uint64_t v20 = sub_2534AF2D8();
  type metadata accessor for TranscriptProtoCandidate(v20);
  sub_253AF2764();
  sub_25395DCE8();
  if (v1)
  {
    sub_253AF1980();
  }
  else
  {
    uint64_t v38 = v18;
    sub_253AF3094();
    sub_2534AF234();
    v21();
    sub_253B09110();
    sub_2534DA4BC();
    v22();
    int v23 = MEMORY[0];
    sub_25395E68C(v0);
    char v24 = *(unsigned char *)(v0 + 9);
    uint64_t v25 = v38;
    uint64_t v37 = v2;
    LODWORD(v44) = v23;
    if (v24)
    {
      uint64_t v43 = 0;
      int v26 = 1;
    }
    else
    {
      sub_253AF3778();
      if (!v27) {
        uint64_t v28 = v29;
      }
      uint64_t v43 = v28;
      if (v27) {
        int v26 = 0;
      }
      else {
        int v26 = v30;
      }
    }
    HIDWORD(v36) = v26;
    uint64_t v31 = (uint64_t)v41;
    uint64_t v32 = v42;
    sub_253AF1980();
    sub_25395E074(v31);
    uint64_t v42 = 0;
    swift_bridgeObjectRetain();
    sub_253AF2A38();
    sub_253AF1980();
    sub_253AF1980();
    uint64_t v33 = type metadata accessor for Candidate(0);
    uint64_t v34 = v32 + *(int *)(v33 + 24);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v32, v37, v16);
    *(unsigned char *)(v32 + *(int *)(v33 + 20)) = v44;
    *(void *)uint64_t v34 = v43;
    *(unsigned char *)(v34 + 8) = BYTE4(v36);
    sub_2534D8E14();
    v35();
  }
  sub_2534F8A10();
  sub_2534847C8();
}

uint64_t Candidate.PromptStatus.init(transcript:)()
{
  sub_253AF2580();
  if (*(unsigned char *)(v1 + 9))
  {
    uint64_t v2 = 0;
    char v3 = 1;
  }
  else
  {
    sub_253AF3778();
    if (v4) {
      uint64_t v2 = v5;
    }
    else {
      uint64_t v2 = v6;
    }
    if (v4) {
      char v3 = 0;
    }
    else {
      char v3 = v7;
    }
  }
  uint64_t result = sub_253AF1980();
  *(void *)uint64_t v0 = v2;
  *(unsigned char *)(v0 + 8) = v3;
  return result;
}

void sub_253AC92B4()
{
}

uint64_t sub_253AC92CC()
{
  return sub_253A9B5E8();
}

uint64_t TranscriptProtoCandidatePromptStatus.init(handwritten:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  int v4 = *((unsigned __int8 *)a1 + 8);
  type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  uint64_t result = sub_253945118();
  BOOL v6 = v3 != 0;
  if (!v4) {
    BOOL v6 = v3;
  }
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

void sub_253AC933C()
{
}

IntelligenceFlowPlannerSupport::QueryOperator __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> QueryOperator.init(transcript:)(IntelligenceFlowPlannerSupport::QueryOperator transcript)
{
  char v2 = 0;
  switch(*(unsigned char *)transcript)
  {
    case 1:
      goto LABEL_12;
    case 2:
      char v2 = 1;
      goto LABEL_12;
    case 3:
      char v2 = 2;
      goto LABEL_12;
    case 4:
      char v2 = 3;
      goto LABEL_12;
    case 5:
      char v2 = 4;
      goto LABEL_12;
    case 6:
      char v2 = 5;
      goto LABEL_12;
    case 7:
      char v2 = 6;
      goto LABEL_12;
    case 8:
      char v2 = 7;
      goto LABEL_12;
    case 9:
      char v2 = 8;
      goto LABEL_12;
    case 0xA:
      char v2 = 9;
LABEL_12:
      *uint64_t v1 = v2;
      break;
    default:
      sub_25394EA00();
      uint64_t v3 = sub_2534D969C();
      transcript = sub_253A73498(v3, v4);
      break;
  }
  return transcript;
}

void sub_253AC9434()
{
}

uint64_t sub_253AC944C()
{
  return sub_253A9B768();
}

IntelligenceFlowPlannerSupport::TranscriptProtoQueryOperator __swiftcall TranscriptProtoQueryOperator.init(handwritten:)(IntelligenceFlowPlannerSupport::QueryOperator handwritten)
{
  sub_253592EB0(v1);
  return result;
}

void sub_253AC9470()
{
}

uint64_t sub_253AC9488(char *a1)
{
  char v2 = *a1;
  return QueryOperator.init(transcript:)((IntelligenceFlowPlannerSupport::TranscriptProtoQueryOperator)&v2);
}

uint64_t sub_253AC94B4(char *a1)
{
  char v2 = *a1;
  return TranscriptProtoQueryOperator.init(handwritten:)((IntelligenceFlowPlannerSupport::QueryOperator)&v2);
}

uint64_t sub_253AC94E8()
{
  return Candidate.PromptStatus.init(transcript:)();
}

uint64_t sub_253AC9500()
{
  return sub_253A9B8E8(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_253AC9520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = *(void *)a1;
  char v5 = v2;
  return TranscriptProtoCandidatePromptStatus.init(handwritten:)(&v4, a2);
}

IntelligenceFlowPlannerSupport::Session::Plan::Source __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Session.Plan.Source.init(transcript:)(IntelligenceFlowPlannerSupport::Session::Plan::Source transcript)
{
  char v2 = 2;
  switch(*(unsigned char *)transcript)
  {
    case 1:
      char v2 = 0;
      goto LABEL_5;
    case 2:
      char v2 = 1;
      goto LABEL_5;
    case 3:
LABEL_5:
      *uint64_t v1 = v2;
      break;
    default:
      sub_25394EA00();
      uint64_t v3 = sub_2534D969C();
      transcript = sub_253A73498(v3, v4);
      break;
  }
  return transcript;
}

uint64_t sub_253AC95F0(char *a1)
{
  char v2 = *a1;
  return Session.Plan.Source.init(transcript:)((IntelligenceFlowPlannerSupport::TranscriptProtoPlanSource)&v2);
}

IntelligenceFlowPlannerSupport::TranscriptProtoPlanSource __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> TranscriptProtoPlanSource.init(handwritten:)(IntelligenceFlowPlannerSupport::Session::Plan::Source handwritten)
{
  sub_253592EB0(v1);
  return result;
}

uint64_t sub_253AC9628(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_253AD01BC(a1, a2, a3, (uint64_t (*)(char *))TranscriptProtoPlanSource.init(handwritten:));
}

uint64_t sub_253AC9654@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Session.Plan.init(transcript:)(a1, a2);
}

uint64_t sub_253AC966C()
{
  return sub_253A9BA58();
}

uint64_t sub_253AC96B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return TranscriptProtoPlan.init(handwritten:)(a1, a2);
}

void Session.PlanGenerationError.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v4 = sub_253971B04();
  uint64_t v5 = type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(v4);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_2534B340C();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_2534DA41C();
  uint64_t v9 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(v8);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  sub_253A3DD74();
  sub_25395E5B0(v11);
  if (v1)
  {
    sub_253AF1980();
  }
  else
  {
    uint64_t v12 = sub_2536D3880();
    sub_253AF19D0(v12, v13);
    sub_253AF1A28(v2, (uint64_t)v3);
    uint64_t v14 = v3[1];
    uint64_t v19 = *v3;
    uint64_t v15 = v3[3];
    uint64_t v16 = v3[5];
    uint64_t v17 = v3[4];
    uint64_t v18 = v3[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_253AF1980();
    sub_253AF1980();
    sub_253579328();
    sub_253AF1980();
    *uint64_t v0 = v19;
    v0[1] = v14;
    v0[2] = v18;
    v0[3] = v15;
    v0[4] = v17;
    v0[5] = v16;
  }
  sub_253578DEC();
  sub_2534847C8();
}

void sub_253AC9864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  Session.RecoverableError.init(transcript:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_253AC987C()
{
  sub_253AF17B8(v0, (uint64_t)&v2);
  return sub_253A9BC30();
}

void TranscriptProtoPlanGenerationError.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  uint64_t v4 = sub_253A3F064();
  uint64_t v5 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v6);
  sub_253465A3C();
  uint64_t v8 = *v3;
  uint64_t v7 = v3[1];
  uint64_t v10 = v3[2];
  uint64_t v9 = v3[3];
  uint64_t v11 = v3[4];
  uint64_t v12 = v3[5];
  type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *uint64_t v1 = v8;
  v1[1] = v7;
  v1[2] = v10;
  v1[3] = v9;
  v1[4] = v11;
  v1[5] = v12;
  uint64_t v13 = sub_253AF1CDC(v0, 1, 1, v5);
  type metadata accessor for TranscriptProtoPlanGenerationError(v13);
  sub_2539457F0();
  sub_253472458(v0, &qword_269CE1EF0);
  uint64_t v14 = sub_2534DA828();
  sub_253AF19D0(v14, v15);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v0, 0, 1, v5);
  sub_253962714();
  sub_2534847C8();
}

void sub_253AC99E4()
{
}

void Session.PlanGenerationModelOutputError.init(transcript:)()
{
}

void sub_253AC9A70()
{
}

uint64_t sub_253AC9A88()
{
  sub_253AF175C(v0, (uint64_t)&v2);
  return sub_253A9BD5C();
}

void TranscriptProtoPlanGenerationModelOutputError.init(handwritten:)()
{
}

void sub_253AC9B50()
{
}

void sub_253AC9B68()
{
}

uint64_t sub_253AC9B80()
{
  return sub_253A9BFC0();
}

void sub_253AC9BBC()
{
}

uint64_t Session.Plan.DecompositionResult.init(transcript:)()
{
  sub_253A7402C();
  uint64_t v3 = v1[1];
  uint64_t v2 = v1[2];
  uint64_t v4 = *v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_253AF1980();
  *uint64_t v0 = v3;
  v0[1] = v2;
  v0[2] = v4;
  return result;
}

uint64_t sub_253AC9C40()
{
  return Session.Plan.DecompositionResult.init(transcript:)();
}

uint64_t sub_253AC9C68()
{
  return sub_253A9C104(*v0, v0[1], v0[2]);
}

uint64_t TranscriptProtoDecompositionResult.init(handwritten:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  type metadata accessor for TranscriptProtoDecompositionResult(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  a2[1] = v4;
  a2[2] = v3;
  *a2 = v5;
  return result;
}

uint64_t sub_253AC9D00@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return TranscriptProtoDecompositionResult.init(handwritten:)(a1, a2);
}

void Expression.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_2534847F8();
  a19 = v27;
  a20 = v28;
  uint64_t v266 = v21;
  uint64_t v30 = v29;
  uint64_t v32 = sub_253AF2150(v31);
  uint64_t v33 = type metadata accessor for TranscriptProtoOpenExpression(v32);
  uint64_t v34 = sub_25346CB4C(v33);
  MEMORY[0x270FA5388](v34);
  uint64_t v257 = (uint64_t)&v227 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v36);
  uint64_t v258 = (uint64_t)&v227 - v37;
  uint64_t v38 = sub_253483660();
  uint64_t v39 = type metadata accessor for TranscriptProtoCancelExpression(v38);
  uint64_t v40 = sub_25346CB4C(v39);
  MEMORY[0x270FA5388](v40);
  uint64_t v255 = (uint64_t)&v227 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v42);
  uint64_t v256 = (uint64_t)&v227 - v43;
  uint64_t v44 = sub_253483660();
  uint64_t v45 = type metadata accessor for TranscriptProtoRejectExpression(v44);
  uint64_t v46 = sub_25346CB4C(v45);
  MEMORY[0x270FA5388](v46);
  uint64_t v253 = (uint64_t)&v227 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v48);
  uint64_t v254 = (uint64_t)&v227 - v49;
  uint64_t v50 = sub_253483660();
  uint64_t v51 = type metadata accessor for TranscriptProtoUndoExpression(v50);
  uint64_t v52 = sub_25346CB4C(v51);
  MEMORY[0x270FA5388](v52);
  uint64_t v263 = (char *)&v227 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v54);
  uint64_t v252 = (uint64_t)&v227 - v55;
  uint64_t v56 = sub_253483660();
  uint64_t v57 = type metadata accessor for TranscriptProtoResolveToolExpression(v56);
  uint64_t v58 = sub_25346CB4C(v57);
  MEMORY[0x270FA5388](v58);
  uint64_t v251 = (uint64_t)&v227 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v60);
  uint64_t v262 = (char *)&v227 - v61;
  uint64_t v62 = sub_253483660();
  uint64_t v63 = type metadata accessor for TranscriptProtoPickOneExpression(v62);
  uint64_t v64 = sub_25346CB4C(v63);
  MEMORY[0x270FA5388](v64);
  uint64_t v249 = (uint64_t)&v227 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v66);
  uint64_t v250 = (uint64_t)&v227 - v67;
  uint64_t v68 = sub_253483660();
  uint64_t v69 = type metadata accessor for TranscriptProtoStructuredSearchExpression(v68);
  uint64_t v70 = sub_25346CB4C(v69);
  MEMORY[0x270FA5388](v70);
  sub_2534F823C();
  MEMORY[0x270FA5388](v71);
  uint64_t v265 = (uint64_t)&v227 - v72;
  uint64_t v73 = sub_253483660();
  uint64_t v74 = type metadata accessor for TranscriptProtoSearchExpression(v73);
  uint64_t v75 = sub_25346CB4C(v74);
  MEMORY[0x270FA5388](v75);
  sub_2534F823C();
  MEMORY[0x270FA5388](v76);
  uint64_t v264 = (uint64_t)&v227 - v77;
  uint64_t v78 = sub_253483660();
  uint64_t v79 = type metadata accessor for TranscriptProtoConfirmExpression(v78);
  uint64_t v80 = sub_25346CB4C(v79);
  MEMORY[0x270FA5388](v80);
  sub_2534F823C();
  MEMORY[0x270FA5388](v81);
  uint64_t v83 = sub_2534F8208((uint64_t)&v227 - v82);
  uint64_t v245 = type metadata accessor for TranscriptProtoPickExpression(v83);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v84);
  sub_2534F823C();
  MEMORY[0x270FA5388](v85);
  uint64_t v87 = sub_2534F8208((uint64_t)&v227 - v86);
  uint64_t v88 = type metadata accessor for TranscriptProtoSayExpression(v87);
  uint64_t v89 = sub_25346CB4C(v88);
  MEMORY[0x270FA5388](v89);
  sub_2534659D8();
  sub_2534F823C();
  uint64_t v91 = MEMORY[0x270FA5388](v90);
  uint64_t v99 = sub_253AF1D80(v91, v92, v93, v94, v95, v96, v97, v98, v227);
  uint64_t v100 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(v99);
  uint64_t v101 = sub_25346CB4C(v100);
  MEMORY[0x270FA5388](v101);
  uint64_t v103 = sub_2534F8208((uint64_t)&v227 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0));
  v243[0] = type metadata accessor for TranscriptProtoCallExpression(v103);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v104);
  sub_2534F823C();
  MEMORY[0x270FA5388](v105);
  uint64_t v107 = sub_2534F8208((uint64_t)&v227 - v106);
  uint64_t updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(v107);
  uint64_t v109 = sub_25346CB4C(updated);
  MEMORY[0x270FA5388](v109);
  sub_2534F823C();
  MEMORY[0x270FA5388](v110);
  uint64_t v112 = sub_2534F8208((uint64_t)&v227 - v111);
  uint64_t v113 = type metadata accessor for TranscriptProtoIndexExpression(v112);
  uint64_t v114 = sub_25346CB4C(v113);
  MEMORY[0x270FA5388](v114);
  sub_2534F823C();
  MEMORY[0x270FA5388](v115);
  uint64_t v117 = sub_2534F8208((uint64_t)&v227 - v116);
  uint64_t v118 = type metadata accessor for TranscriptProtoInfixExpression(v117);
  uint64_t v119 = sub_25346CB4C(v118);
  MEMORY[0x270FA5388](v119);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v120);
  uint64_t v242 = (char *)&v227 - v121;
  uint64_t v237 = sub_253AF1D50();
  sub_253465998();
  uint64_t v236 = v122;
  MEMORY[0x270FA5388](v123);
  sub_2534F823C();
  MEMORY[0x270FA5388](v124);
  uint64_t v126 = sub_2534F8208((uint64_t)&v227 - v125);
  uint64_t v240 = type metadata accessor for TranscriptProtoPrefixExpression(v126);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v127);
  sub_2534F823C();
  MEMORY[0x270FA5388](v128);
  sub_2534B35DC();
  uint64_t v241 = v129;
  uint64_t v130 = type metadata accessor for TranscriptProtoStatementID(0);
  uint64_t v131 = sub_25346CB4C(v130);
  MEMORY[0x270FA5388](v131);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v132);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v133);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v134);
  uint64_t v136 = sub_253AF225C((uint64_t)&v227 - v135);
  uint64_t v259 = type metadata accessor for Expression(v136);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v137);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v138);
  sub_2534F823C();
  MEMORY[0x270FA5388](v139);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v140);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v141);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v142);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v143);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v144);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v145);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v146);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v147);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v148);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v149);
  sub_253A3B8EC();
  MEMORY[0x270FA5388](v150);
  uint64_t v151 = sub_253971BBC();
  uint64_t v152 = type metadata accessor for TranscriptProtoValueExpression(v151);
  uint64_t v153 = sub_25346CB4C(v152);
  MEMORY[0x270FA5388](v153);
  sub_25353CE24();
  MEMORY[0x270FA5388](v154);
  sub_2534B347C();
  uint64_t v155 = sub_253462A5C(&qword_269CE2360);
  uint64_t v156 = sub_25346CB4C(v155);
  MEMORY[0x270FA5388](v156);
  uint64_t v157 = sub_2534B33AC();
  uint64_t v158 = type metadata accessor for TranscriptProtoExpressionEnum(v157);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v159);
  sub_25346CC6C();
  uint64_t v160 = sub_25357931C();
  sub_253961F60(v160, v161, &qword_269CE2360);
  uint64_t v162 = sub_2536D42B0();
  sub_2534D8B48(v162, v163, v158);
  if (v164)
  {
    sub_253472458(v25, &qword_269CE2360);
    *(void *)&long long v267 = v158;
    sub_253462A5C(&qword_269CE86F0);
    sub_253B09730();
    sub_25396263C();
    uint64_t v165 = sub_2534D969C();
    *uint64_t v166 = v158;
    v166[1] = v20;
    sub_253962224(v165, (uint64_t)v166);
LABEL_4:
    sub_253AF1980();
  }
  else
  {
    uint64_t v229 = v20;
    uint64_t v232 = v23;
    uint64_t v228 = (uint64_t (*)(uint64_t))v22;
    uint64_t v167 = v260;
    uint64_t v230 = v26;
    uint64_t v169 = (uint64_t)v262;
    uint64_t v168 = (uint64_t)v263;
    uint64_t v231 = v30;
    uint64_t v170 = a10;
    uint64_t v171 = v266;
    sub_253AF19D0(v25, v24);
    uint64_t v172 = v24;
    sub_253578D38();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v174 = v171;
    uint64_t v175 = v170;
    uint64_t v176 = v261;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        sub_253AF19D0(v172, v167);
        sub_253AF35E0(v167, (uint64_t)&v253);
        uint64_t v180 = v175;
        swift_bridgeObjectRetain();
        uint64_t v181 = v230;
        sub_253AF1F34();
        sub_253AF1980();
        sub_253AF1D08();
        sub_253AF1980();
        sub_253AF2284();
        goto LABEL_44;
      case 2:
        sub_253AF245C(v172, (uint64_t)&v263);
        sub_253AF30AC(v167, (uint64_t)&v261);
        char v182 = *(unsigned char *)v168;
        sub_253AF31C0();
        sub_25395E074(v239);
        if (v174) {
          goto LABEL_10;
        }
        swift_bridgeObjectRetain();
        sub_253AF1F34();
        sub_253AF1980();
        sub_253AF1980();
        *uint64_t v233 = v182;
        uint64_t v216 = type metadata accessor for PrefixExpression(0);
        sub_253AF2C24(v216);
        sub_2534D8E14();
        v217();
        sub_253AF1D08();
        sub_253AF2474();
        sub_253AF34A4();
        swift_storeEnumTagMultiPayload();
        uint64_t v185 = sub_253578EEC();
        goto LABEL_48;
      case 3:
        sub_253AF1D38(v172, (uint64_t)&v264);
        sub_253AF1D68(v176, (uint64_t)&v262);
        sub_253AF1E60();
        InfixExpression.init(transcript:)();
        if (v21) {
          goto LABEL_37;
        }
        goto LABEL_46;
      case 4:
        sub_253AF1D38(v172, (uint64_t)&v266);
        sub_253AF1D68(v176, (uint64_t)&v265);
        sub_253AF1E60();
        IndexExpression.init(transcript:)();
        if (v21) {
          goto LABEL_37;
        }
        goto LABEL_46;
      case 5:
        sub_253AF1D38(v172, (uint64_t)&v267 + 8);
        sub_253AF1D68(v176, (uint64_t)&v267);
        sub_253AF1E60();
        UpdateParametersExpression.init(transcript:)();
        if (v21) {
          goto LABEL_37;
        }
        goto LABEL_46;
      case 6:
        uint64_t v183 = v244;
        sub_253AF19D0(v172, v244);
        sub_253AF1D68(v183, (uint64_t)&a10);
        sub_253AF282C();
        sub_253A73EF4();
        sub_25395E114(v184);
        if (v171) {
          goto LABEL_10;
        }
        uint64_t v219 = *(void *)v22;
        uint64_t v218 = *(void *)(v22 + 8);
        uint64_t v221 = *(void *)(v22 + 16);
        uint64_t v220 = *(void *)(v22 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_253AF1980();
        sub_253AE8C0C();
        uint64_t v223 = v222;
        sub_253AF1980();
        sub_253AF1D08();
        sub_253AF1980();
        uint64_t v224 = v234;
        *uint64_t v234 = v219;
        v224[1] = v218;
        v224[2] = v221;
        v224[3] = v220;
        v224[4] = v223;
        sub_253AF2284();
        swift_storeEnumTagMultiPayload();
        uint64_t v185 = sub_253578DF8();
        goto LABEL_48;
      case 7:
        sub_253AF3B1C();
        sub_253AF1D68(v176, (uint64_t)&v269);
        SayExpression.init(transcript:)();
        sub_253AF1D08();
        sub_253AF1980();
        uint64_t v179 = v230;
        *(void *)uint64_t v230 = v267;
        sub_253AF34A4();
        goto LABEL_20;
      case 8:
        uint64_t v186 = v247;
        sub_253AF19D0(v172, v247);
        uint64_t v187 = v246;
        sub_253AF1A28(v186, (uint64_t)v246);
        sub_25395E074(v238);
        if (v171)
        {
LABEL_10:
          sub_253AF1980();
          sub_253AF1D08();
          goto LABEL_4;
        }
        uint64_t v180 = v175;
        swift_bridgeObjectRetain();
        sub_253AF1F34();
        sub_253AF1980();
        uint64_t v225 = *v187;
        sub_253AF1980();
        uint64_t v181 = v235;
        sub_2534DA154();
        sub_2534D8E14();
        v226();
        *(void *)((char *)v181 + *(int *)(type metadata accessor for PickExpression(0) + 20)) = v225;
        sub_253AF1D08();
        sub_253AF1980();
        sub_253AF2284();
LABEL_44:
        swift_storeEnumTagMultiPayload();
        uint64_t v185 = (uint64_t)v181;
LABEL_45:
        uint64_t v195 = v180;
        goto LABEL_48;
      case 9:
        sub_253AF1D38(v172, (uint64_t)&a15);
        sub_253AF1D68(v176, (uint64_t)&a13);
        sub_253AF1E60();
        ConfirmExpression.init(transcript:)();
        if (v21) {
          goto LABEL_37;
        }
        goto LABEL_46;
      case 10:
        uint64_t v188 = v264;
        sub_253AF19D0(v172, v264);
        sub_253AF30AC(v188, (uint64_t)&a16);
        uint64_t v190 = *(void *)v168;
        uint64_t v189 = *(void *)(v168 + 8);
        char v191 = *(unsigned char *)(v168 + 16);
        char v192 = *(unsigned char *)(v168 + 17);
        char v193 = *(unsigned char *)(v168 + 18);
        swift_bridgeObjectRetain();
        sub_253AF1980();
        sub_253AF1D08();
        sub_253AF3364();
        uint64_t v194 = v230;
        *(void *)uint64_t v230 = v190;
        *((void *)v194 + 1) = v189;
        *((unsigned char *)v194 + 16) = v191;
        *((unsigned char *)v194 + 17) = v192;
        *((unsigned char *)v194 + 18) = v193;
        sub_253AF34A4();
        swift_storeEnumTagMultiPayload();
        uint64_t v185 = (uint64_t)v194;
        uint64_t v195 = a10;
        goto LABEL_48;
      case 11:
        uint64_t v196 = v265;
        sub_253AF19D0(v172, v265);
        sub_253AF1A28(v196, v248);
        uint64_t v180 = v175;
        swift_bridgeObjectRetain();
        sub_253AE8C0C();
        uint64_t v198 = v197;
        swift_bridgeObjectRelease();
        sub_253AF1980();
        sub_253AF1D08();
        sub_253AF2C0C();
        uint64_t v199 = v230;
        *(void *)uint64_t v230 = v198;
        sub_253AF2A10();
        swift_storeEnumTagMultiPayload();
        uint64_t v185 = (uint64_t)v199;
        goto LABEL_45;
      case 12:
        uint64_t v200 = v250;
        sub_253AF19D0(v172, v250);
        sub_253AF1A28(v200, v249);
        sub_253AF1E60();
        PickOneExpression.init(transcript:)();
        if (v21) {
          goto LABEL_37;
        }
        goto LABEL_46;
      case 13:
        sub_253AF19D0(v172, v169);
        sub_253AF1A28(v169, v251);
        uint64_t v201 = swift_bridgeObjectRetain();
        sub_253951B08(v201, v202, v203, v204, v205, v206, v207, v208, v227, v228);
        uint64_t v180 = v175;
        uint64_t v210 = v209;
        sub_253AF1980();
        sub_253AF1D08();
        sub_253AF3364();
        uint64_t v211 = v230;
        *(void *)uint64_t v230 = v210;
        sub_253AF34A4();
        swift_storeEnumTagMultiPayload();
        uint64_t v185 = (uint64_t)v211;
        goto LABEL_45;
      case 14:
        uint64_t v212 = v252;
        sub_253AF19D0(v172, v252);
        sub_253AF1A28(v212, v168);
        sub_253A73EF4();
        UndoExpression.init(transcript:)();
        if (v171) {
          goto LABEL_37;
        }
        goto LABEL_46;
      case 15:
        uint64_t v213 = v254;
        sub_253AF19D0(v172, v254);
        sub_253AF1A28(v213, v253);
        sub_253AF1E60();
        RejectExpression.init(transcript:)();
        if (v21) {
          goto LABEL_37;
        }
        goto LABEL_46;
      case 16:
        uint64_t v214 = v256;
        sub_253AF19D0(v172, v256);
        sub_253AF1A28(v214, v255);
        sub_253AF1E60();
        CancelExpression.init(transcript:)();
        if (v21) {
          goto LABEL_37;
        }
        goto LABEL_46;
      case 17:
      case 18:
      case 19:
      case 20:
      case 22:
        sub_253AF1D08();
        sub_253AF2A10();
        swift_storeEnumTagMultiPayload();
        goto LABEL_4;
      case 21:
        uint64_t v215 = v258;
        sub_253AF19D0(v172, v258);
        sub_253AF1A28(v215, v257);
        sub_253AF1E60();
        OpenExpression.init(transcript:)();
        if (v21)
        {
LABEL_37:
          sub_253AF1D08();
          goto LABEL_4;
        }
LABEL_46:
        sub_253AF1D08();
        sub_253AF1980();
        sub_253AF2284();
        swift_storeEnumTagMultiPayload();
        uint64_t v185 = v22;
LABEL_47:
        uint64_t v195 = v175;
LABEL_48:
        sub_253AF19D0(v185, v195);
        break;
      default:
        uint64_t v177 = v232;
        sub_253AF19D0(v172, v232);
        sub_253AF1D68(v177, (uint64_t)v243);
        sub_253AF2278();
        ValueExpression.init(transcript:)();
        sub_253AF1D08();
        sub_253AF1980();
        if (v21) {
          break;
        }
        char v178 = v268;
        uint64_t v179 = v228;
        *(_OWORD *)uint64_t v228 = v267;
        *((unsigned char *)v179 + 16) = v178;
        sub_253AF34A4();
LABEL_20:
        swift_storeEnumTagMultiPayload();
        uint64_t v185 = (uint64_t)v179;
        goto LABEL_47;
    }
  }
  sub_2534F8590();
  sub_2534847C8();
}

void ValueExpression.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v53 = v6;
  uint64_t v54 = v1;
  uint64_t v7 = sub_253A3EF6C();
  uint64_t v8 = type metadata accessor for TranscriptProtoStatementID(v7);
  uint64_t v9 = sub_25346CB34(v8);
  uint64_t v56 = v10;
  MEMORY[0x270FA5388](v9);
  sub_2534B340C();
  MEMORY[0x270FA5388](v11);
  uint64_t v55 = (char *)&v49 - v12;
  uint64_t v13 = sub_253AF1D50();
  sub_253465998();
  uint64_t v51 = v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_2534D9B74();
  uint64_t v17 = type metadata accessor for TranscriptProtoValueExpressionArrayVariant(v16);
  uint64_t v18 = sub_25346CB4C(v17);
  MEMORY[0x270FA5388](v18);
  sub_2534B3294();
  uint64_t v19 = sub_253462A5C(&qword_269CE2378);
  uint64_t v20 = sub_25346CB4C(v19);
  MEMORY[0x270FA5388](v20);
  uint64_t v21 = sub_2534D9C00();
  uint64_t v22 = type metadata accessor for TranscriptProtoValueExpressionEnum(v21);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v23);
  sub_2534835B0();
  uint64_t v58 = v5;
  uint64_t v24 = sub_2539627B8();
  sub_253961F60(v24, v25, &qword_269CE2378);
  uint64_t v26 = sub_2536D54B0();
  sub_2534D8B48(v26, v27, v22);
  if (v28)
  {
    sub_253472458(v3, &qword_269CE2378);
    sub_253462A5C(&qword_269CE86F8);
    sub_253AF1E74();
    sub_25396263C();
    uint64_t v29 = sub_2534D969C();
    *uint64_t v30 = v0;
    v30[1] = (uint64_t *)v22;
    sub_253962224(v29, (uint64_t)v30);
    sub_253AF1980();
  }
  else
  {
    uint64_t v31 = (uint64_t)v55;
    uint64_t v32 = v56;
    uint64_t v50 = v2;
    uint64_t v57 = v13;
    sub_253AF19D0(v3, (uint64_t)v0);
    sub_2534ACF74();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v34 = v50;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        uint64_t v37 = *v0;
        sub_253AF1980();
        uint64_t v35 = 0;
        char v36 = 1;
        goto LABEL_19;
      case 2:
        sub_253AF1980();
        uint64_t v35 = 0;
        uint64_t v37 = *v0;
        char v36 = 2;
        goto LABEL_19;
      case 3:
        sub_253AF1980();
        uint64_t v37 = *v0;
        uint64_t v35 = v0[1];
        char v36 = 3;
        goto LABEL_19;
      case 4:
        sub_253AF19D0((uint64_t)v0, v50);
        uint64_t v38 = *(void *)v34;
        uint64_t v39 = *(void *)(*(void *)v34 + 16);
        if (v39)
        {
          uint64_t v59 = MEMORY[0x263F8EE78];
          swift_bridgeObjectRetain();
          sub_253AF36A8();
          sub_2539E7ADC();
          sub_2535786F4();
          uint64_t v49 = v38;
          uint64_t v41 = v38 + v40;
          uint64_t v56 = *(void *)(v32 + 72);
          uint64_t v52 = v51 + 32;
          uint64_t v37 = v59;
          do
          {
            sub_253AF1A28(v41, v31);
            uint64_t v42 = sub_2534D9724();
            sub_253AF1A28(v42, v43);
            uint64_t v44 = *(void *)(v4 + 8);
            swift_bridgeObjectRetain();
            sub_253B059B0();
            sub_253AF1980();
            sub_253578D2C();
            sub_253AF1980();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_253A3E764();
              sub_2539E7ADC();
              uint64_t v37 = v59;
            }
            sub_253AF2FCC();
            if (v46)
            {
              sub_25396226C(v45);
              sub_2539E7ADC();
              uint64_t v37 = v59;
            }
            *(void *)(v37 + 16) = v44;
            sub_2534D8E14();
            v47();
            uint64_t v59 = v37;
            v41 += v56;
            --v39;
          }
          while (v39);
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t v37 = MEMORY[0x263F8EE78];
        }
        sub_253AF1980();
        swift_bridgeObjectRelease();
        sub_253AF1980();
        uint64_t v35 = 0;
        char v36 = 4;
        uint64_t v48 = v53;
        goto LABEL_20;
      case 5:
        sub_253AF1980();
        uint64_t v37 = *v0;
        uint64_t v35 = v0[1];
        char v36 = 5;
        goto LABEL_19;
      case 6:
        sub_253AF1980();
        uint64_t v37 = 0;
        uint64_t v35 = 0;
        char v36 = 6;
        goto LABEL_19;
      default:
        sub_253AF1980();
        uint64_t v35 = 0;
        char v36 = 0;
        uint64_t v37 = *(unsigned __int8 *)v0;
LABEL_19:
        uint64_t v48 = v53;
LABEL_20:
        *(void *)uint64_t v48 = v37;
        *(void *)(v48 + 8) = v35;
        *(unsigned char *)(v48 + 16) = v36;
        break;
    }
  }
  sub_253579494();
  sub_2534847C8();
}

void PrefixExpression.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for TranscriptProtoStatementID(0);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_253AF20E8();
  sub_253465998();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  sub_2534847E0();
  char v13 = *v4;
  type metadata accessor for TranscriptProtoPrefixExpression(0);
  sub_253AF2C30();
  sub_25395E074(v2);
  if (v0)
  {
    sub_253AF1980();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_253AF25FC();
    sub_253AF1980();
    sub_253AF1980();
    *uint64_t v6 = v13;
    uint64_t v14 = type metadata accessor for PrefixExpression(0);
    uint64_t v15 = sub_253A3E348(v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v15, v1, v9);
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void InfixExpression.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v5 = v4;
  uint64_t v6 = sub_253A3F064();
  uint64_t v7 = type metadata accessor for TranscriptProtoStatementID(v6);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v9);
  sub_253AF3C64();
  sub_253465998();
  MEMORY[0x270FA5388](v10);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v11);
  sub_2534D9EC0();
  if (v1)
  {
    sub_253AF1980();
  }
  else
  {
    uint64_t v17 = v12;
    char v16 = *v5;
    type metadata accessor for TranscriptProtoInfixExpression(0);
    sub_25395E074(v3);
    swift_bridgeObjectRetain();
    sub_253B059B0();
    sub_253AF1980();
    sub_25395E074(v2);
    swift_bridgeObjectRetain();
    sub_253AF2A38();
    sub_253AF1980();
    sub_253AF1980();
    *uint64_t v0 = v16;
    type metadata accessor for InfixExpression(0);
    sub_25394633C();
    char v13 = *(void (**)(uint64_t))(v17 + 32);
    sub_253AF2F08();
    v13(v14);
    sub_253AF2F08();
    v13(v15);
  }
  sub_2536D3D5C();
  sub_2534847C8();
}

void IndexExpression.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v4 = type metadata accessor for TranscriptProtoStatementID(0);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_2534D8CE4();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_253AF3C64();
  sub_253465998();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v11);
  sub_2534D97C0();
  sub_25395E074(v3);
  if (v0)
  {
    sub_253AF1980();
  }
  else
  {
    uint64_t v15 = v7;
    swift_bridgeObjectRetain();
    sub_253AF281C();
    sub_253B059B0();
    sub_253AF1980();
    type metadata accessor for TranscriptProtoIndexExpression(0);
    sub_25395E074(v2);
    swift_bridgeObjectRetain();
    sub_253AF1F34();
    sub_253AF1980();
    sub_253AF1980();
    uint64_t v12 = *(void (**)(void))(v9 + 32);
    sub_253AF3A28();
    v12();
    uint64_t v13 = type metadata accessor for IndexExpression(0);
    uint64_t v14 = sub_253AF2C24(v13);
    ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v14, v1, v15);
  }
  sub_253A3C6AC();
  sub_2534847C8();
}

void UpdateParametersExpression.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v91 = v1;
  uint64_t v8 = v7;
  uint64_t v77 = v9;
  uint64_t v10 = sub_253462A5C(&qword_26B249528);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  uint64_t v89 = (uint64_t)v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_253483660();
  uint64_t updated = type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(v13);
  sub_253465998();
  uint64_t v90 = v14;
  MEMORY[0x270FA5388](v15);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = sub_2534DA430();
  type metadata accessor for UpdateParametersExpression.UpdateParameter(v17);
  sub_253465998();
  uint64_t v85 = v19;
  uint64_t v86 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v84 = (uint64_t *)((char *)v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2534B324C();
  MEMORY[0x270FA5388](v21);
  uint64_t v83 = (uint64_t)v76 - v22;
  sub_2534B324C();
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v32 = sub_2536D3010(v24, v25, v26, v27, v28, v29, v30, v31, v76[0]);
  uint64_t v87 = type metadata accessor for TranscriptProtoStatementID(v32);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v33);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v34);
  sub_2536D3970();
  uint64_t v35 = sub_253B059D0();
  sub_253465998();
  uint64_t v78 = v36;
  MEMORY[0x270FA5388](v37);
  sub_2534D8CE4();
  MEMORY[0x270FA5388](v38);
  uint64_t v39 = sub_253A737E8();
  type metadata accessor for TranscriptProtoUpdateParametersExpression(v39);
  uint64_t v40 = v91;
  sub_25395E074(v3);
  if (v40)
  {
    sub_253AF1980();
  }
  else
  {
    uint64_t v91 = v4;
    uint64_t v82 = v0;
    v76[3] = 0;
    swift_bridgeObjectRetain();
    sub_253AF1F34();
    sub_253AF1980();
    uint64_t v41 = *(void *)v8;
    uint64_t v42 = *(void *)(*(void *)v8 + 16);
    if (v42)
    {
      v76[1] = v2;
      v76[2] = v8;
      uint64_t v94 = (uint64_t (*)(uint64_t))MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_253AF2448();
      sub_2539E822C();
      sub_2535786F4();
      v76[0] = v41;
      uint64_t v44 = v41 + v43;
      uint64_t v46 = *(void *)(v45 + 72);
      uint64_t v79 = v78 + 32;
      uint64_t v80 = v46;
      uint64_t v81 = v35;
      while (1)
      {
        sub_253AF1A28(v44, v6);
        uint64_t v47 = sub_2534D96CC();
        sub_253AF1A28(v47, v48);
        uint64_t v50 = *v5;
        uint64_t v49 = v5[1];
        char v51 = *((unsigned char *)v5 + 16);
        uint64_t v52 = v89;
        sub_253961F60((uint64_t)v5 + *(int *)(updated + 24), v89, &qword_26B249528);
        uint64_t v53 = sub_2536D3ACC();
        uint64_t v54 = v87;
        sub_2534D8B48(v53, v55, v87);
        if (v56) {
          break;
        }
        uint64_t v90 = v42;
        sub_253AF19D0(v52, v82);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_253B059B0();
        sub_253AF1980();
        uint64_t v57 = v84;
        *uint64_t v84 = v50;
        v57[1] = v49;
        uint64_t v58 = (uint64_t)v57;
        void v57[2] = 0;
        *((unsigned char *)v57 + 24) = 1;
        *((unsigned char *)v57 + 25) = v51;
        sub_2534D8E14();
        v59();
        uint64_t v60 = type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter;
        sub_253AF1980();
        uint64_t v61 = v58;
        uint64_t v62 = v83;
        sub_253AF19D0(v61, v83);
        sub_253AF19D0(v62, v92);
        sub_253AF3364();
        if ((sub_2539621FC() & 1) == 0)
        {
          sub_253A3E764();
          sub_2539E822C();
          uint64_t v60 = v94;
        }
        uint64_t v63 = v90;
        unint64_t v65 = *((void *)v60 + 2);
        unint64_t v64 = *((void *)v60 + 3);
        if (v65 >= v64 >> 1)
        {
          sub_253962434(v64);
          sub_2539E822C();
          uint64_t v60 = v94;
        }
        *((void *)v60 + 2) = v65 + 1;
        sub_253AF25B4();
        sub_253AF19D0(v92, v66 + v67 * v65);
        v44 += v80;
        uint64_t v42 = v63 - 1;
        if (!v42)
        {
          uint64_t v74 = v77;
          goto LABEL_14;
        }
      }
      swift_bridgeObjectRetain();
      sub_253472458(v52, &qword_26B249528);
      uint64_t v93 = v54;
      sub_253462A5C(&qword_269CE5160);
      uint64_t v68 = sub_25396232C();
      uint64_t v70 = v69;
      sub_253961DC0();
      uint64_t v71 = sub_2534D969C();
      *uint64_t v72 = v68;
      v72[1] = v70;
      sub_253962224(v71, (uint64_t)v72);
      swift_bridgeObjectRelease();
      sub_253AF1980();
      sub_253AF1980();
      swift_release();
      sub_253AF1980();
      swift_bridgeObjectRelease();
      sub_2534659CC();
      v73();
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v60 = (uint64_t (*)(uint64_t))MEMORY[0x263F8EE78];
      uint64_t v74 = v77;
LABEL_14:
      sub_253AF1980();
      swift_bridgeObjectRelease();
      sub_253579270();
      sub_253AF2F54();
      v75();
      *(void *)(v74 + *(int *)(type metadata accessor for UpdateParametersExpression(0) + 20)) = v60;
    }
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void CallExpression.init(transcript:)()
{
  sub_2535B45A0();
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_2534D9C00();
  type metadata accessor for TranscriptProtoCallExpression(v6);
  sub_253AF2C30();
  sub_25395E114((uint64_t)v1);
  if (v0)
  {
    sub_253AF1980();
  }
  else
  {
    uint64_t v8 = *v1;
    uint64_t v7 = v1[1];
    uint64_t v10 = v1[2];
    uint64_t v9 = v1[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_253AF1980();
    sub_253AE8C0C();
    uint64_t v12 = v11;
    sub_253AF1980();
    *uint64_t v3 = v8;
    v3[1] = v7;
    v3[2] = v10;
    v3[3] = v9;
    v3[4] = v12;
  }
  sub_2536D4AAC();
  sub_2535B4660();
}

void SayExpression.init(transcript:)()
{
  sub_2534B3258();
  uint64_t v4 = v3;
  uint64_t v5 = sub_2534F8A1C();
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(v5);
  uint64_t v7 = sub_25346CB34(v6);
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v7);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v10);
  sub_253971BBC();
  sub_253B059D0();
  sub_253465998();
  MEMORY[0x270FA5388](v11);
  sub_2534B34A4();
  uint64_t v12 = *(void *)(*(void *)v4 + 16);
  if (v12)
  {
    uint64_t v20 = v0;
    uint64_t v22 = MEMORY[0x263F8EE78];
    uint64_t v13 = swift_bridgeObjectRetain();
    sub_253AF3644();
    sub_2539E7ADC();
    sub_2535786F4();
    uint64_t v15 = v13 + v14;
    uint64_t v21 = *(void *)(v9 + 72);
    uint64_t v16 = v22;
    do
    {
      sub_253AF1A28(v15, v2);
      sub_253AF1A28(v2, v1);
      swift_bridgeObjectRetain();
      sub_253B059B0();
      sub_253AF1980();
      sub_2534DA178();
      sub_253AF1980();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253579380();
        sub_2539E7ADC();
        uint64_t v16 = v22;
      }
      unint64_t v18 = *(void *)(v16 + 16);
      unint64_t v17 = *(void *)(v16 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_253AF3018(v17);
        sub_2539E7ADC();
        uint64_t v16 = v22;
      }
      *(void *)(v16 + 16) = v18 + 1;
      sub_253AF25B4();
      sub_2534D8E14();
      v19();
      uint64_t v22 = v16;
      v15 += v21;
      --v12;
    }
    while (v12);
    uint64_t v0 = v20;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = MEMORY[0x263F8EE78];
  }
  sub_253AF1980();
  swift_bridgeObjectRelease();
  *uint64_t v0 = v16;
  sub_253465A14();
}

void PickExpression.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v4 = sub_253AF3160();
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_253AF1EBC();
  sub_253465998();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_2534D8CAC();
  type metadata accessor for TranscriptProtoPickExpression(v7);
  sub_253AF2C30();
  sub_25395E074(v3);
  if (v1)
  {
    sub_253AF1980();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_253AF25FC();
    sub_253AF1980();
    uint64_t v8 = *v2;
    sub_253AF1980();
    sub_253A3C378();
    v9();
    *(void *)(v0 + *(int *)(type metadata accessor for PickExpression(0) + 20)) = v8;
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void ConfirmExpression.init(transcript:)()
{
}

void SearchExpression.init(transcript:)()
{
  sub_2535B3C98();
  sub_253A7402C();
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  char v4 = *((unsigned char *)v1 + 16);
  char v5 = *((unsigned char *)v1 + 17);
  char v6 = *((unsigned char *)v1 + 18);
  swift_bridgeObjectRetain();
  sub_253AF1980();
  *(void *)uint64_t v0 = v3;
  *(void *)(v0 + 8) = v2;
  *(unsigned char *)(v0 + 16) = v4;
  *(unsigned char *)(v0 + 17) = v5;
  *(unsigned char *)(v0 + 18) = v6;
  sub_25346CD04();
}

uint64_t StructuredSearchExpression.init(transcript:)()
{
  sub_253A7402C();
  swift_bridgeObjectRetain();
  sub_253AE8C0C();
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  uint64_t result = sub_253AF1980();
  *uint64_t v0 = v2;
  return result;
}

void PickOneExpression.init(transcript:)()
{
}

void sub_253ACD0F0()
{
  sub_2534847F8();
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementID(0);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_253AF1EBC();
  sub_253465998();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_2534966B0();
  sub_25395E074(v1);
  if (v0)
  {
    sub_253AF1980();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_253B059B0();
    sub_253AF1980();
    sub_253AF1980();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v4, v2, v7);
  }
  sub_2534F8590();
  sub_2534847C8();
}

uint64_t ResolveToolExpression.init(transcript:)()
{
  sub_253A7402C();
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_253951B08(v1, v2, v3, v4, v5, v6, v7, v8, v12, v13);
  uint64_t v10 = v9;
  uint64_t result = sub_253AF1980();
  *uint64_t v0 = v10;
  return result;
}

void UndoExpression.init(transcript:)()
{
  sub_2535B45A0();
  uint64_t v3 = sub_253971B04();
  uint64_t v4 = type metadata accessor for UndoExpression(v3);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_2534AF2D8();
  uint64_t v7 = type metadata accessor for TranscriptProtoStatementID(v6);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_25346CC6C();
  uint64_t v9 = sub_253462A5C(&qword_269CDB460);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  sub_253AF2920();
  if (!v0)
  {
    sub_253AF33F4();
    sub_253AF25FC();
    sub_253AF1980();
    sub_253B059D0();
    sub_253AF1DA4(v2);
    sub_253578EBC(v1, 1);
    sub_253961BF0(v2, v1, &qword_269CDB460);
    sub_253AF3228();
  }
  sub_253AF1980();
  sub_2535B4660();
}

void RejectExpression.init(transcript:)()
{
}

void CancelExpression.init(transcript:)()
{
}

void OpenExpression.init(transcript:)()
{
}

#error "253ACD47C: call analysis failed (funcsize=6)"

uint64_t sub_253ACD488()
{
  return sub_253A9C238();
}

void TranscriptProtoExpression.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_2534B3258();
  a19 = v24;
  a20 = v25;
  uint64_t v201 = v27;
  uint64_t v202 = v26;
  uint64_t v199 = type metadata accessor for TranscriptProtoExpression(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v28);
  uint64_t v200 = (char *)v176 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_253483660();
  uint64_t v31 = type metadata accessor for OpenExpression(v30);
  uint64_t v32 = sub_25346CB4C(v31);
  MEMORY[0x270FA5388](v32);
  uint64_t v193 = (uint64_t)v176 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v34);
  uint64_t v192 = (uint64_t)v176 - v35;
  uint64_t v36 = sub_253483660();
  uint64_t v37 = type metadata accessor for CancelExpression(v36);
  uint64_t v38 = sub_25346CB4C(v37);
  MEMORY[0x270FA5388](v38);
  uint64_t v191 = (uint64_t)v176 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v40);
  uint64_t v190 = (uint64_t)v176 - v41;
  uint64_t v42 = sub_253483660();
  uint64_t v43 = type metadata accessor for RejectExpression(v42);
  uint64_t v44 = sub_25346CB4C(v43);
  MEMORY[0x270FA5388](v44);
  uint64_t v189 = (uint64_t)v176 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v46);
  uint64_t v188 = (uint64_t)v176 - v47;
  uint64_t v48 = sub_253483660();
  uint64_t v49 = type metadata accessor for UndoExpression(v48);
  uint64_t v50 = sub_25346CB4C(v49);
  MEMORY[0x270FA5388](v50);
  uint64_t v187 = (uint64_t)v176 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v52);
  uint64_t v54 = sub_2534F8208((uint64_t)v176 - v53);
  uint64_t v55 = type metadata accessor for PickOneExpression(v54);
  uint64_t v56 = sub_25346CB4C(v55);
  MEMORY[0x270FA5388](v56);
  sub_2534F823C();
  MEMORY[0x270FA5388](v57);
  uint64_t v59 = sub_2534F8208((uint64_t)v176 - v58);
  uint64_t v60 = type metadata accessor for ConfirmExpression(v59);
  uint64_t v61 = sub_25346CB4C(v60);
  MEMORY[0x270FA5388](v61);
  sub_2534F823C();
  MEMORY[0x270FA5388](v62);
  sub_2534B35DC();
  uint64_t v64 = sub_2534F8208(v63);
  uint64_t v185 = type metadata accessor for TranscriptProtoPickExpression(v64);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v65);
  sub_25346CB04();
  sub_2534D8F5C(v66);
  uint64_t v67 = sub_253462A5C(&qword_26B249528);
  uint64_t v68 = sub_25346CB4C(v67);
  MEMORY[0x270FA5388](v68);
  uint64_t v70 = sub_2534F8208((uint64_t)v176 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v179 = type metadata accessor for PickExpression(v70);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v71);
  sub_2534F823C();
  MEMORY[0x270FA5388](v72);
  uint64_t v74 = sub_2534F8208((uint64_t)v176 - v73);
  uint64_t v177 = type metadata accessor for TranscriptProtoCallExpression(v74);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v75);
  sub_2534D8F5C((uint64_t)v176 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v77 = sub_253462A5C(&qword_269CE0448);
  uint64_t v78 = sub_25346CB4C(v77);
  MEMORY[0x270FA5388](v78);
  uint64_t v80 = sub_2534F8208((uint64_t)v176 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t updated = type metadata accessor for UpdateParametersExpression(v80);
  uint64_t v82 = sub_25346CB4C(updated);
  MEMORY[0x270FA5388](v82);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v83);
  sub_2534B35DC();
  uint64_t v85 = sub_2534F8208(v84);
  uint64_t v86 = type metadata accessor for IndexExpression(v85);
  uint64_t v87 = sub_25346CB4C(v86);
  MEMORY[0x270FA5388](v87);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v88);
  uint64_t v90 = (char *)v176 - v89;
  uint64_t v91 = sub_253AF2098();
  uint64_t v92 = type metadata accessor for InfixExpression(v91);
  uint64_t v93 = sub_25346CB4C(v92);
  MEMORY[0x270FA5388](v93);
  sub_2534D8FA0();
  MEMORY[0x270FA5388](v94);
  uint64_t v95 = sub_2534DA41C();
  uint64_t v96 = type metadata accessor for PrefixExpression(v95);
  uint64_t v97 = sub_25346CB4C(v96);
  MEMORY[0x270FA5388](v97);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v98);
  sub_253A737E8();
  sub_253B059D0();
  sub_253465998();
  uint64_t v194 = v100;
  uint64_t v195 = v99;
  MEMORY[0x270FA5388](v99);
  sub_25353CE24();
  MEMORY[0x270FA5388](v101);
  uint64_t v102 = sub_253AF1D98();
  uint64_t v103 = type metadata accessor for Expression(v102);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v104);
  uint64_t v105 = sub_2534D8CAC();
  uint64_t v198 = type metadata accessor for TranscriptProtoExpressionEnum(v105);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v106);
  uint64_t v196 = (char *)v176 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v109 = MEMORY[0x270FA5388](v108);
  sub_253AF3C50(v109, v110, v111, v112, v113, v114, v115, v116, v176[0]);
  sub_253AF1A28(v202, v23);
  sub_2539627B8();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v118 = v194;
      uint64_t v103 = v195;
      sub_25351C9FC();
      sub_25347FA84();
      v119();
      sub_2534AF234();
      v120();
      int v121 = sub_253B059C0();
      sub_253B059A0();
      sub_253AF358C();
      type metadata accessor for TranscriptProtoStatementID(0);
      uint64_t v122 = (uint64_t)v196;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_DWORD *)uint64_t v122 = v121;
      *(void *)(v122 + 8) = v20;
      *(void *)(v122 + 16) = v21;
      uint64_t v123 = *(void (**)(void))(v118 + 8);
      sub_2534D97B4();
      v123();
      sub_2534D97B4();
      v123();
      sub_253AF1E3C();
      swift_storeEnumTagMultiPayload();
      uint64_t v124 = v122;
      goto LABEL_22;
    case 2u:
      uint64_t v125 = sub_2534D9724();
      sub_253AF19D0(v125, v126);
      uint64_t v127 = sub_253578E58();
      sub_253AF1A28(v127, v128);
      uint64_t v90 = v196;
      TranscriptProtoPrefixExpression.init(handwritten:)();
      sub_253AF1980();
      sub_253AF1E3C();
      goto LABEL_21;
    case 3u:
      uint64_t v129 = sub_2536D3880();
      sub_253AF19D0(v129, v130);
      sub_253AF1A28(v21, v20);
      uint64_t v90 = v196;
      TranscriptProtoInfixExpression.init(handwritten:)();
      sub_253AF1980();
      sub_253AF1E3C();
      goto LABEL_21;
    case 4u:
      uint64_t v131 = sub_253578D38();
      sub_253AF19D0(v131, v132);
      uint64_t v133 = sub_253592678();
      sub_253AF1A28(v133, v134);
      uint64_t v135 = (uint64_t)v196;
      TranscriptProtoIndexExpression.init(handwritten:)();
      sub_253AF1980();
      sub_253AF1E3C();
      goto LABEL_11;
    case 5u:
      sub_253AF35F8(v23, (uint64_t)&v203);
      sub_253AF1A28(v20, v176[1]);
      sub_253AF21EC();
      TranscriptProtoUpdateParametersExpression.init(handwritten:)();
      sub_253AF1980();
      sub_253AF1E3C();
      goto LABEL_21;
    case 6u:
      uint64_t v137 = *(void *)v23;
      uint64_t v136 = *(void *)(v23 + 8);
      uint64_t v139 = *(void *)(v23 + 16);
      uint64_t v138 = *(void *)(v23 + 24);
      sub_253AE6E3C();
      uint64_t v140 = sub_2534D9690();
      type metadata accessor for TranscriptProtoGlobalToolIdentifier(v140);
      uint64_t v141 = (void *)v176[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v141 = v137;
      v141[1] = v136;
      v141[2] = v139;
      v141[3] = v138;
      sub_253AF25CC((uint64_t)v141, 0);
      uint64_t v103 = v177;
      uint64_t v142 = v178;
      sub_253AF25CC((uint64_t)v178 + *(int *)(v177 + 20), 1);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *uint64_t v142 = v90;
      uint64_t v143 = sub_2536D3F90();
      sub_253961BF0(v143, v144, v145);
      uint64_t v22 = v197;
      sub_253AF19D0((uint64_t)v142, v197);
      sub_253AF1E3C();
      goto LABEL_24;
    case 7u:
      *(void *)&long long v203 = *(void *)v23;
      uint64_t v22 = v197;
      TranscriptProtoSayExpression.init(handwritten:)();
      sub_253AF1E3C();
      goto LABEL_24;
    case 8u:
      uint64_t v146 = v181;
      sub_253AF19D0(v23, v181);
      uint64_t v147 = v182;
      sub_253AF1A28(v146, v182);
      uint64_t v103 = v195;
      sub_253971B90();
      sub_2534AF234();
      v148();
      int v149 = sub_253B059C0();
      uint64_t v150 = sub_253B059A0();
      uint64_t v152 = v151;
      type metadata accessor for TranscriptProtoStatementID(0);
      sub_253AF2B44();
      uint64_t v153 = v183;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_DWORD *)uint64_t v153 = v149;
      *(void *)(v153 + 8) = v150;
      *(void *)(v153 + 16) = v152;
      sub_2535791D8();
      sub_2534D9A08();
      v154();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v153, 0, 1, v21);
      sub_253AF31C0();
      uint64_t v156 = *(void *)(v147 + v155);
      sub_253AF39B8();
      uint64_t v157 = v186;
      uint64_t v158 = sub_253AF27F0(*(int *)(v103 + 20));
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v158, v159, v160, v21);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      uint64_t v161 = sub_25353CE6C();
      sub_253961BF0(v161, v162, v163);
      *uint64_t v157 = v156;
      uint64_t v135 = (uint64_t)v196;
      sub_253AF19D0((uint64_t)v157, (uint64_t)v196);
      sub_253AF1980();
      sub_253AF21E0();
      sub_253AF1980();
      sub_253AF1E3C();
LABEL_11:
      swift_storeEnumTagMultiPayload();
      uint64_t v124 = v135;
      goto LABEL_22;
    case 9u:
      sub_253AF35F8(v23, (uint64_t)&a9);
      sub_253AF1A28(v20, v180);
      sub_253AF21EC();
      TranscriptProtoConfirmExpression.init(handwritten:)();
      sub_253AF1980();
      sub_253AF1E3C();
      goto LABEL_21;
    case 0xAu:
      uint64_t v164 = *(void *)v23;
      uint64_t v165 = *(void *)(v23 + 8);
      char v166 = *(unsigned char *)(v23 + 16);
      char v167 = *(unsigned char *)(v23 + 17);
      uint64_t v103 = *(unsigned __int8 *)(v23 + 18);
      type metadata accessor for TranscriptProtoSearchExpression(0);
      uint64_t v22 = v197;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(void *)uint64_t v22 = v164;
      *(void *)(v22 + 8) = v165;
      *(unsigned char *)(v22 + 16) = v166;
      *(unsigned char *)(v22 + 17) = v167;
      *(unsigned char *)(v22 + 18) = v103;
      sub_253AF1E3C();
      goto LABEL_24;
    case 0xBu:
      sub_253AE6E3C();
      uint64_t v169 = v168;
      swift_bridgeObjectRelease();
      type metadata accessor for TranscriptProtoStructuredSearchExpression(0);
      uint64_t v22 = v197;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(void *)uint64_t v22 = v169;
      sub_253AF1E3C();
      goto LABEL_24;
    case 0xCu:
      sub_253AF35F8(v23, (uint64_t)&a14);
      sub_253AF1A28(v20, v184);
      sub_253AF21EC();
      TranscriptProtoPickOneExpression.init(handwritten:)();
      sub_253AF1980();
      sub_253AF1E3C();
      goto LABEL_21;
    case 0xDu:
      sub_253A67040();
      uint64_t v170 = sub_2534D9690();
      type metadata accessor for TranscriptProtoResolveToolExpression(v170);
      uint64_t v22 = v197;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(void *)uint64_t v22 = v90;
      sub_253AF1E3C();
      goto LABEL_24;
    case 0xEu:
      sub_253AF35F8(v23, (uint64_t)&a18);
      sub_253AF1A28(v20, v187);
      sub_253AF21EC();
      TranscriptProtoUndoExpression.init(handwritten:)();
      sub_253AF1980();
      sub_253AF1E3C();
      goto LABEL_21;
    case 0xFu:
      uint64_t v171 = v188;
      sub_253AF19D0(v23, v188);
      sub_253AF1A28(v171, v189);
      sub_253AF21EC();
      TranscriptProtoRejectExpression.init(handwritten:)();
      sub_253AF1980();
      sub_253AF1E3C();
      goto LABEL_21;
    case 0x10u:
      uint64_t v172 = v190;
      sub_253AF19D0(v23, v190);
      sub_253AF1A28(v172, v191);
      sub_253AF21EC();
      TranscriptProtoCancelExpression.init(handwritten:)();
      sub_253AF1980();
      sub_253AF1E3C();
      goto LABEL_21;
    case 0x11u:
      uint64_t v173 = v192;
      sub_253AF19D0(v23, v192);
      sub_253AF1A28(v173, v193);
      sub_253AF21EC();
      TranscriptProtoOpenExpression.init(handwritten:)();
      sub_253AF1980();
      sub_253AF1E3C();
LABEL_21:
      swift_storeEnumTagMultiPayload();
      uint64_t v124 = (uint64_t)v90;
LABEL_22:
      uint64_t v22 = v197;
      sub_253AF19D0(v124, v197);
      goto LABEL_25;
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x15u:
    case 0x16u:
      sub_253AF2F18();
      sub_253AF1E3C();
      goto LABEL_24;
    default:
      char v117 = *(unsigned char *)(v23 + 16);
      long long v203 = *(_OWORD *)v23;
      char v204 = v117;
      uint64_t v22 = v197;
      TranscriptProtoValueExpression.init(handwritten:)();
      sub_253AF1E3C();
LABEL_24:
      swift_storeEnumTagMultiPayload();
LABEL_25:
      uint64_t v174 = v201;
      uint64_t v175 = (uint64_t)v200;
      sub_253AF3410();
      sub_253AF1980();
      sub_253AF19D0(v175, v174);
      sub_253472458(v174, &qword_269CE2360);
      sub_253AF19D0(v22, v174);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v174, 0, 1, v103);
      sub_253465A14();
      return;
  }
}

void TranscriptProtoValueExpression.init(handwritten:)()
{
  sub_2534B3258();
  uint64_t v4 = v3;
  sub_253AF226C();
  sub_253B059D0();
  sub_253465998();
  MEMORY[0x270FA5388](v5);
  sub_2534B340C();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_253962344();
  type metadata accessor for TranscriptProtoStatementID(v7);
  sub_253465998();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_2534B33AC();
  uint64_t v10 = type metadata accessor for TranscriptProtoValueExpressionEnum(v9);
  sub_25346CAF4();
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v12);
  sub_2535B3D6C();
  uint64_t v14 = *(void *)v4;
  uint64_t v15 = *(void *)(v4 + 8);
  switch(*(unsigned char *)(v4 + 16))
  {
    case 1:
    case 2:
      *uint64_t v2 = v14;
      sub_2534D96CC();
      goto LABEL_14;
    case 3:
    case 5:
      *uint64_t v2 = v14;
      v2[1] = v15;
      sub_2534D96CC();
      goto LABEL_14;
    case 4:
      uint64_t v40 = *(void *)(v4 + 8);
      uint64_t v42 = v13;
      uint64_t v16 = *(void *)(v14 + 16);
      uint64_t v17 = MEMORY[0x263F8EE78];
      uint64_t v41 = *(void *)v4;
      if (v16)
      {
        uint64_t v18 = *(void *)v4;
        uint64_t v38 = v10;
        uint64_t v39 = v0;
        uint64_t v45 = MEMORY[0x263F8EE78];
        sub_253AF2FB4();
        sub_2539E6A90();
        sub_2535786F4();
        uint64_t v20 = v18 + v19;
        uint64_t v43 = *(void *)(v21 + 56);
        uint64_t v44 = v22;
        uint64_t v23 = (void (**)(void))(v21 - 8);
        do
        {
          sub_253962F0C();
          v44();
          sub_2534D954C();
          sub_253962F0C();
          v44();
          int v24 = sub_253B059C0();
          uint64_t v25 = sub_253B059A0();
          uint64_t v27 = v26;
          _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
          *(_DWORD *)uint64_t v1 = v24;
          *(void *)(v1 + 8) = v25;
          *(void *)(v1 + 16) = v27;
          uint64_t v28 = *v23;
          sub_2534D9A08();
          v28();
          sub_2534D9A08();
          v28();
          uint64_t v17 = v45;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_253AF3064();
            uint64_t v17 = v45;
          }
          unint64_t v30 = *(void *)(v17 + 16);
          unint64_t v29 = *(void *)(v17 + 24);
          if (v30 >= v29 >> 1)
          {
            sub_253AF3018(v29);
            sub_2539E6A90();
            uint64_t v17 = v45;
          }
          *(void *)(v17 + 16) = v30 + 1;
          sub_253962314();
          sub_253AF19D0(v1, v31 + v32 * v30);
          v20 += v43;
          --v16;
        }
        while (v16);
        uint64_t v10 = v38;
        uint64_t v0 = v39;
      }
      type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      sub_2534E43E0(v41, v40, 4);
      void *v42 = v17;
      sub_253579264();
      swift_storeEnumTagMultiPayload();
      uint64_t v36 = sub_253592678();
      sub_253AF19D0(v36, v37);
      goto LABEL_15;
    case 6:
      sub_2534D96CC();
      goto LABEL_14;
    default:
      *(unsigned char *)uint64_t v2 = v14 & 1;
      sub_2534D96CC();
LABEL_14:
      swift_storeEnumTagMultiPayload();
LABEL_15:
      uint64_t v33 = sub_253AF1CDC(v0, 1, 1, v10);
      type metadata accessor for TranscriptProtoValueExpression(v33);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      sub_253472458(v0, &qword_269CE2378);
      uint64_t v34 = sub_253A3D030();
      sub_253AF19D0(v34, v35);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v0, 0, 1, v10);
      sub_253465A14();
      return;
  }
}

void TranscriptProtoPrefixExpression.init(handwritten:)()
{
  sub_2534B3258();
  uint64_t v3 = v2;
  uint64_t v5 = sub_253962754(v4);
  type metadata accessor for TranscriptProtoPrefixExpression(v5);
  sub_2535B3D7C();
  MEMORY[0x270FA5388](v6);
  sub_253AF20A4();
  sub_253465998();
  MEMORY[0x270FA5388](v7);
  sub_25346CC54();
  uint64_t v8 = sub_253462A5C(&qword_26B249528);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  sub_2534966B0();
  char v19 = *v3;
  type metadata accessor for PrefixExpression(0);
  sub_2534AF234();
  v10();
  int v11 = sub_253B059C0();
  uint64_t v12 = sub_253B059A0();
  uint64_t v14 = v13;
  uint64_t v15 = type metadata accessor for TranscriptProtoStatementID(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v1 = v11;
  *(void *)(v1 + 8) = v12;
  *(void *)(v1 + 16) = v14;
  sub_2534B3470();
  v16();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 0, 1, v15);
  sub_253AF2184();
  *uint64_t v0 = v19;
  uint64_t v17 = sub_2534D9A78();
  sub_253961BF0(v17, v18, &qword_26B249528);
  sub_253AF3210();
  sub_253AF1980();
  sub_253465A14();
}

void TranscriptProtoInfixExpression.init(handwritten:)()
{
  sub_2534B3258();
  uint64_t v3 = v2;
  uint64_t v5 = sub_253AF25F0(v4);
  uint64_t v26 = type metadata accessor for TranscriptProtoInfixExpression(v5) - 8;
  MEMORY[0x270FA5388](v26);
  sub_253AF1BE0(v6, v23);
  sub_253B059D0();
  sub_253465998();
  uint64_t v28 = v7;
  MEMORY[0x270FA5388](v8);
  sub_25346CC54();
  uint64_t v9 = sub_253462A5C(&qword_26B249528);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v11);
  sub_2534D97C0();
  char v24 = *v3;
  uint64_t v12 = type metadata accessor for InfixExpression(0);
  sub_253AF34B0();
  sub_253A735A8();
  v13();
  int v14 = sub_253B059C0();
  uint64_t v15 = sub_253B059A0();
  uint64_t v17 = v16;
  type metadata accessor for TranscriptProtoStatementID(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v1 = v14;
  *(void *)(v1 + 8) = v15;
  *(void *)(v1 + 16) = v17;
  uint64_t v18 = *(void (**)(void))(v28 + 8);
  sub_2536D500C();
  sub_253477128();
  v18();
  sub_253AF24B8(v1, 0);
  sub_253AF34B0();
  sub_253A735A8();
  v19();
  LODWORD(v15) = sub_253B059C0();
  sub_253B059A0();
  sub_253AF358C();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v0 = v15;
  *(void *)(v0 + 8) = v12;
  *(void *)(v0 + 16) = v17;
  sub_2536D500C();
  sub_253477128();
  v18();
  sub_253AF24B8(v0, 0);
  sub_253AF2400((uint64_t)&v25[*(int *)(v26 + 28)]);
  uint64_t v20 = (uint64_t)&v25[*(int *)(v26 + 32)];
  sub_253AF2400(v20);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v25 = v24;
  uint64_t v21 = sub_253AF21E0();
  sub_253961BF0(v21, v22, &qword_26B249528);
  sub_253961BF0(v0, v20, &qword_26B249528);
  sub_253AF19D0((uint64_t)v25, v27);
  sub_253AF1980();
  sub_253465A14();
}

void TranscriptProtoIndexExpression.init(handwritten:)()
{
  sub_2534B3258();
  uint64_t v28 = v2;
  uint64_t v27 = type metadata accessor for TranscriptProtoIndexExpression(0) - 8;
  MEMORY[0x270FA5388](v27);
  sub_253AF1C9C(v3, v25);
  sub_253B059D0();
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_25346CC54();
  uint64_t v5 = sub_253462A5C(&qword_26B249528);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v7);
  sub_2534D97C0();
  sub_253A735A8();
  v8();
  int v9 = sub_253B059C0();
  uint64_t v10 = sub_253B059A0();
  uint64_t v12 = v11;
  uint64_t v13 = type metadata accessor for TranscriptProtoStatementID(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v1 = v9;
  *(void *)(v1 + 8) = v10;
  *(void *)(v1 + 16) = v12;
  sub_2534D91AC();
  v14();
  uint64_t v15 = sub_253AF1CDC(v1, 0, 1, v13);
  type metadata accessor for IndexExpression(v15);
  sub_253AF34B0();
  sub_253A735A8();
  v16();
  LODWORD(v12) = sub_253B059C0();
  uint64_t v17 = sub_253B059A0();
  uint64_t v19 = v18;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v0 = v12;
  *(void *)(v0 + 8) = v17;
  *(void *)(v0 + 16) = v19;
  sub_2536D500C();
  sub_2534D91AC();
  v20();
  sub_253AF24B8(v0, 0);
  sub_253AF2400(v26);
  sub_253AF2400(v26 + *(int *)(v27 + 28));
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v21 = sub_2534DA604();
  sub_253961BF0(v21, v22, &qword_26B249528);
  uint64_t v23 = sub_253578D38();
  sub_253961BF0(v23, v24, &qword_26B249528);
  sub_253AF19D0(v26, v28);
  sub_253AF1980();
  sub_253465A14();
}

void TranscriptProtoUpdateParametersExpression.init(handwritten:)()
{
  sub_2534B3258();
  uint64_t v86 = v5;
  uint64_t v85 = v6;
  uint64_t updated = type metadata accessor for UpdateParametersExpression.UpdateParameter(0);
  sub_253465998();
  uint64_t v105 = v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v99 = (uint64_t)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v10);
  uint64_t v106 = (uint64_t)&v81 - v11;
  uint64_t v12 = sub_253483660();
  type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(v12);
  sub_253465998();
  uint64_t v97 = v14;
  uint64_t v98 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v96 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v81 - v17;
  uint64_t v19 = sub_253AF1D98();
  uint64_t v84 = type metadata accessor for TranscriptProtoUpdateParametersExpression(v19);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v20);
  sub_2534D9C00();
  uint64_t v21 = sub_253B059D0();
  sub_253465998();
  uint64_t v23 = v22;
  MEMORY[0x270FA5388](v24);
  sub_25346CC54();
  uint64_t v25 = sub_253462A5C(&qword_26B249528);
  uint64_t v26 = sub_25346CB4C(v25);
  MEMORY[0x270FA5388](v26);
  uint64_t v92 = (char *)&v81 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v28);
  sub_2536D4170();
  sub_253AF2870();
  uint64_t v90 = v30;
  uint64_t v91 = v29;
  sub_2534AF234();
  v31();
  int v32 = sub_253B059C0();
  sub_253B059A0();
  uint64_t v33 = sub_253AF2E8C();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v2 = v32;
  *(void *)(v2 + 8) = v1;
  *(void *)(v2 + 16) = v4;
  uint64_t v34 = *(void *)(v23 + 8);
  uint64_t v93 = v0;
  uint64_t v94 = v23 + 8;
  uint64_t v95 = v21;
  uint64_t v89 = v34;
  sub_2534D9A08();
  v35();
  uint64_t v83 = v2;
  uint64_t v36 = v86;
  sub_2534AD3FC();
  uint64_t v101 = v33;
  uint64_t v40 = sub_253AF1CDC(v37, v38, v39, v33);
  uint64_t v41 = *(void *)(v36 + *(int *)(type metadata accessor for UpdateParametersExpression(v40) + 20));
  uint64_t v42 = *(void *)(v41 + 16);
  uint64_t v43 = MEMORY[0x263F8EE78];
  if (v42)
  {
    uint64_t v82 = v3;
    uint64_t v107 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_253AF2FB4();
    sub_2539E6AF4();
    sub_2535786F4();
    uint64_t v81 = v41;
    uint64_t v45 = v41 + v44;
    uint64_t v87 = *(void *)(v46 + 72);
    uint64_t v88 = v18;
    uint64_t v47 = (uint64_t)v92;
    uint64_t v48 = v98;
    do
    {
      uint64_t v105 = v42;
      uint64_t v49 = v106;
      sub_253AF1A28(v45, v106);
      uint64_t v50 = v99;
      sub_253AF1A28(v49, v99);
      uint64_t v51 = *(void *)(v50 + 8);
      uint64_t v104 = *(void *)v50;
      uint64_t v102 = v51;
      int v103 = *(unsigned __int8 *)(v50 + 25);
      sub_2534AF234();
      v53(v52);
      swift_bridgeObjectRetain();
      int v54 = sub_253B059C0();
      uint64_t v55 = sub_253B059A0();
      uint64_t v57 = v56;
      uint64_t v58 = v101;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_DWORD *)uint64_t v47 = v54;
      *(void *)(v47 + 8) = v55;
      *(void *)(v47 + 16) = v57;
      sub_25351C5C0();
      sub_253477128();
      v60(v59);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v47, 0, 1, v58);
      char v61 = *(unsigned char *)(v50 + 24);
      if (v61) {
        uint64_t v62 = 0;
      }
      else {
        uint64_t v62 = *(void *)(v50 + 16);
      }
      uint64_t v63 = v96;
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)&v96[*(int *)(v48 + 24)], 1, 1, v58);
      uint64_t v64 = &v63[*(int *)(v48 + 28)];
      *(void *)uint64_t v64 = 0;
      v64[8] = 1;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      uint64_t v65 = v102;
      *(void *)uint64_t v63 = v104;
      *((void *)v63 + 1) = v65;
      v63[16] = v103;
      uint64_t v66 = sub_2534DA828();
      sub_253961BF0(v66, v67, &qword_26B249528);
      *(void *)uint64_t v64 = v62;
      v64[8] = v61;
      uint64_t v68 = (uint64_t)v88;
      uint64_t v69 = sub_253579270();
      sub_253AF19D0(v69, v70);
      sub_253AF1980();
      sub_253AF1980();
      uint64_t v43 = v107;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253579380();
        sub_2539E6AF4();
        uint64_t v43 = v107;
      }
      unint64_t v72 = *(void *)(v43 + 16);
      unint64_t v71 = *(void *)(v43 + 24);
      if (v72 >= v71 >> 1)
      {
        sub_253AF2FDC(v71);
        sub_2539E6AF4();
        uint64_t v43 = v107;
      }
      *(void *)(v43 + 16) = v72 + 1;
      sub_253962314();
      sub_253AF19D0(v68, v73 + v74 * v72);
      v45 += v87;
      uint64_t v42 = v105 - 1;
    }
    while (v105 != 1);
    swift_bridgeObjectRelease();
    uint64_t v3 = v82;
  }
  uint64_t v75 = (uint64_t)v3 + *(int *)(v84 + 20);
  sub_253465A98();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v76, v77, v78, v101);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253961BF0(v83, v75, &qword_26B249528);
  *uint64_t v3 = v43;
  uint64_t v79 = sub_2534DA178();
  sub_253AF19D0(v79, v80);
  sub_253AF1980();
  sub_253465A14();
}

void TranscriptProtoCallExpression.init(handwritten:)()
{
  sub_2534B3258();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_253462A5C(&qword_269CE0448);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_2534B3294();
  uint64_t v9 = *v3;
  uint64_t v8 = v3[1];
  uint64_t v10 = v3[2];
  uint64_t v11 = v3[3];
  sub_253AE6E3C();
  uint64_t v13 = v12;
  type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  sub_253AF2AD4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *uint64_t v0 = v9;
  v0[1] = v8;
  v0[2] = v10;
  v0[3] = v11;
  uint64_t v14 = sub_253AF1CDC((uint64_t)v0, 0, 1, v1);
  type metadata accessor for TranscriptProtoCallExpression(v14);
  sub_253AF2764();
  sub_253AF38C4();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v5 = v13;
  uint64_t v15 = sub_253579334();
  sub_253961BF0(v15, v16, &qword_269CE0448);
  sub_253465A14();
}

void TranscriptProtoSayExpression.init(handwritten:)()
{
  sub_2534B3258();
  uint64_t v4 = v3;
  sub_253AF37D0();
  sub_253B059D0();
  sub_253465998();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v8);
  uint64_t v34 = (char *)v27 - v9;
  uint64_t v10 = sub_253483660();
  type metadata accessor for TranscriptProtoStatementID(v10);
  sub_253465998();
  uint64_t v32 = v12;
  uint64_t v33 = v11;
  MEMORY[0x270FA5388](v11);
  sub_2534B34A4();
  uint64_t v13 = *v4;
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v28 = (void *)v1;
    uint64_t v35 = MEMORY[0x263F8EE78];
    sub_253AF3644();
    sub_2539E6A90();
    uint64_t v15 = v6 + 16;
    sub_2535786F4();
    v27[1] = v13;
    uint64_t v17 = v13 + v16;
    uint64_t v29 = *(void *)(v15 + 56);
    uint64_t v30 = v18;
    uint64_t v19 = (void (**)(void))(v15 - 8);
    uint64_t v31 = v15;
    do
    {
      sub_2535787F4();
      uint64_t v20 = v30;
      sub_253962874();
      v20();
      sub_2534DA138();
      sub_253962874();
      v20();
      int v21 = sub_253B059C0();
      sub_253B059A0();
      sub_253AF31D8();
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_DWORD *)uint64_t v2 = v21;
      *(void *)(v2 + 8) = v0;
      *(void *)(v2 + 16) = v1;
      uint64_t v22 = *v19;
      sub_2534DA4BC();
      v22();
      sub_2534DA178();
      sub_2534DA4BC();
      v22();
      uint64_t v23 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253AF3064();
        uint64_t v23 = v35;
      }
      unint64_t v1 = *(void *)(v23 + 16);
      unint64_t v24 = *(void *)(v23 + 24);
      if (v1 >= v24 >> 1)
      {
        sub_253AF3018(v24);
        sub_2539E6A90();
        uint64_t v23 = v35;
      }
      *(void *)(v23 + 16) = v1 + 1;
      sub_253962314();
      sub_253AF19D0(v2, v25 + v26 * v1);
      v17 += v29;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    unint64_t v1 = (unint64_t)v28;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v23 = MEMORY[0x263F8EE78];
  }
  type metadata accessor for TranscriptProtoSayExpression(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)unint64_t v1 = v23;
  sub_253465A14();
}

void TranscriptProtoPickExpression.init(handwritten:)()
{
  sub_2534B3258();
  uint64_t v18 = v2;
  type metadata accessor for TranscriptProtoPickExpression(0);
  sub_2535B3D7C();
  MEMORY[0x270FA5388](v3);
  sub_253AF20A4();
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_25346CC54();
  uint64_t v5 = sub_253462A5C(&qword_26B249528);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_25346CC6C();
  sub_253AF2300();
  sub_2534AF234();
  v7();
  int v8 = sub_253B059C0();
  uint64_t v9 = sub_253B059A0();
  uint64_t v11 = v10;
  uint64_t v12 = type metadata accessor for TranscriptProtoStatementID(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v1 = v8;
  *(void *)(v1 + 8) = v9;
  *(void *)(v1 + 16) = v11;
  sub_2534B3470();
  v13();
  uint64_t v14 = sub_253AF1CDC(v1, 0, 1, v12);
  uint64_t v15 = *(void *)(v18 + *(int *)(type metadata accessor for PickExpression(v14) + 20));
  sub_253AF2184();
  uint64_t v16 = sub_2536D3F90();
  sub_253961BF0(v16, v17, &qword_26B249528);
  *uint64_t v0 = v15;
  sub_253AF3210();
  sub_253AF1980();
  sub_253465A14();
}

void TranscriptProtoConfirmExpression.init(handwritten:)()
{
}

uint64_t TranscriptProtoSearchExpression.init(handwritten:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  char v5 = *((unsigned char *)a1 + 16);
  char v6 = *((unsigned char *)a1 + 17);
  char v7 = *((unsigned char *)a1 + 18);
  type metadata accessor for TranscriptProtoSearchExpression(0);
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5;
  *(unsigned char *)(a2 + 17) = v6;
  *(unsigned char *)(a2 + 18) = v7;
  return result;
}

uint64_t TranscriptProtoStructuredSearchExpression.init(handwritten:)@<X0>(void *a1@<X8>)
{
  sub_253AE6E3C();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  type metadata accessor for TranscriptProtoStructuredSearchExpression(0);
  uint64_t result = sub_253945118();
  *a1 = v3;
  return result;
}

void TranscriptProtoPickOneExpression.init(handwritten:)()
{
}

void sub_253ACFC20()
{
  sub_2534B3258();
  uint64_t v21 = v2;
  uint64_t v22 = v3;
  uint64_t v19 = v4;
  uint64_t v20 = v5;
  v6(0);
  sub_253AF3354();
  sub_253963118();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v19 - v8;
  sub_253B059D0();
  sub_253465998();
  MEMORY[0x270FA5388](v10);
  sub_25346CC54();
  uint64_t v11 = sub_253462A5C(&qword_26B249528);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  sub_25347FAAC();
  sub_253AF3914();
  sub_2534AF234();
  v13();
  int v14 = sub_253B059C0();
  uint64_t v15 = sub_253B059A0();
  uint64_t v17 = v16;
  type metadata accessor for TranscriptProtoStatementID(0);
  sub_253AF2AD4();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v1 = v14;
  *(void *)(v1 + 8) = v15;
  *(void *)(v1 + 16) = v17;
  sub_253AF2A54();
  sub_25347FB18();
  v18();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 0, 1, v0);
  sub_253AF38C4();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253961BF0(v1, (uint64_t)v9, &qword_26B249528);
  sub_253AF19D0((uint64_t)v9, v20);
  sub_253AF1980();
  sub_253465A14();
}

uint64_t TranscriptProtoResolveToolExpression.init(handwritten:)(uint64_t a1)
{
  sub_253AF3CCC(a1);
  sub_253A67040();
  uint64_t v3 = sub_253578A1C();
  type metadata accessor for TranscriptProtoResolveToolExpression(v3);
  uint64_t result = sub_253945118();
  *uint64_t v1 = v2;
  return result;
}

void TranscriptProtoUndoExpression.init(handwritten:)()
{
  sub_2535B3C98();
  uint64_t v2 = sub_253A3F064();
  type metadata accessor for TranscriptProtoUndoExpression(v2);
  sub_2535B3D7C();
  MEMORY[0x270FA5388](v3);
  sub_2534B3294();
  uint64_t v4 = sub_253462A5C(&qword_269CDB460);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_2534847E0();
  uint64_t v6 = sub_253462A5C(&qword_26B249528);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_2534966B0();
  uint64_t v8 = sub_2534DA034();
  sub_253961F60(v8, v9, &qword_269CDB460);
  sub_25395F984();
  uint64_t v10 = type metadata accessor for TranscriptProtoStatementID(0);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, v10);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v11 = sub_2535B4148();
  sub_253961BF0(v11, v12, &qword_26B249528);
  sub_253AF19D0(v1, v0);
  sub_253AF1980();
  sub_25346CD04();
}

void TranscriptProtoRejectExpression.init(handwritten:)()
{
}

void TranscriptProtoCancelExpression.init(handwritten:)()
{
}

void TranscriptProtoOpenExpression.init(handwritten:)()
{
}

#error "253AD0038: call analysis failed (funcsize=10)"

void sub_253AD004C()
{
}

uint64_t sub_253AD0064()
{
  return sub_253A9C3A8(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

void sub_253AD0084()
{
}

void sub_253AD00AC()
{
}

uint64_t sub_253AD00C4()
{
  return sub_253A9C4DC();
}

void sub_253AD00DC()
{
}

uint64_t sub_253AD0104(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_253AD01BC(a1, a2, a3, (uint64_t (*)(char *))PrefixExpression.PrefixOp.init(transcript:));
}

void sub_253AD0130()
{
}

uint64_t sub_253AD0148()
{
  return sub_253A9C64C();
}

IntelligenceFlowPlannerSupport::TranscriptProtoInfixExpression_InfixOp __swiftcall TranscriptProtoInfixExpression_InfixOp.init(handwritten:)(IntelligenceFlowPlannerSupport::InfixExpression::InfixOp handwritten)
{
  sub_253592EB0(v1);
  return result;
}

void sub_253AD0168()
{
}

uint64_t sub_253AD0190(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_253AD01BC(a1, a2, a3, (uint64_t (*)(char *))InfixExpression.InfixOp.init(transcript:));
}

uint64_t sub_253AD01BC(char *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  char v5 = *a1;
  return a4(&v5);
}

uint64_t sub_253AD01F4(char *a1)
{
  char v2 = *a1;
  return TranscriptProtoInfixExpression_InfixOp.init(handwritten:)((IntelligenceFlowPlannerSupport::InfixExpression::InfixOp)&v2);
}

void sub_253AD0228()
{
}

uint64_t sub_253AD0240()
{
  return sub_253A9C7BC();
}

void sub_253AD0258()
{
}

void UpdateParametersExpression.UpdateParameter.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v5 = sub_253AF3160();
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_253AF20E8();
  sub_253465998();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_2534847E0();
  uint64_t v11 = v2[1];
  uint64_t v13 = *v2;
  char v14 = *((unsigned char *)v2 + 16);
  type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(0);
  swift_bridgeObjectRetain();
  sub_25395E074(v4);
  if (v1)
  {
    sub_253AF1980();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_253B059B0();
    sub_253AF1980();
    sub_253AF1980();
    *(void *)uint64_t v0 = v13;
    *(void *)(v0 + 8) = v11;
    *(void *)(v0 + 16) = 0;
    *(unsigned char *)(v0 + 24) = 1;
    *(unsigned char *)(v0 + 25) = v14;
    uint64_t updated = type metadata accessor for UpdateParametersExpression.UpdateParameter(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v0 + *(int *)(updated + 28), v3, v7);
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void sub_253AD0428()
{
}

uint64_t sub_253AD0440()
{
  return sub_253A9C92C();
}

void TranscriptProtoUpdateParameterExpression_UpdateParameter.init(handwritten:)()
{
  sub_2534B3258();
  uint64_t v4 = v3;
  uint64_t v6 = sub_253962754(v5);
  type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(v6);
  sub_2535B3D7C();
  MEMORY[0x270FA5388](v7);
  uint64_t v24 = sub_253AF20A4();
  sub_2534727C4();
  MEMORY[0x270FA5388](v8);
  sub_25346CC54();
  uint64_t v9 = sub_253462A5C(&qword_26B249528);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  sub_25346CC6C();
  uint64_t v11 = v4[1];
  uint64_t v26 = *v4;
  char v25 = *((unsigned char *)v4 + 25);
  type metadata accessor for UpdateParametersExpression.UpdateParameter(0);
  sub_2534AF234();
  v12();
  swift_bridgeObjectRetain();
  int v13 = sub_253B059C0();
  sub_253B059A0();
  uint64_t v14 = sub_253AF2E8C();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(_DWORD *)uint64_t v2 = v13;
  *(void *)(v2 + 8) = v11;
  *(void *)(v2 + 16) = v24;
  sub_2534F85D4();
  v15();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, 0, 1, v14);
  char v16 = *((unsigned char *)v4 + 24);
  if (v16) {
    uint64_t v17 = 0;
  }
  else {
    uint64_t v17 = v4[2];
  }
  uint64_t v18 = sub_253AF254C(*(int *)(v1 + 32));
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, v19, v20, v14);
  uint64_t v21 = v0 + *(int *)(v1 + 36);
  *(void *)uint64_t v21 = 0;
  *(unsigned char *)(v21 + 8) = 1;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)uint64_t v0 = v26;
  *(void *)(v0 + 8) = v11;
  *(unsigned char *)(v0 + 16) = v25;
  uint64_t v22 = sub_2536D3F90();
  sub_253961BF0(v22, v23, &qword_26B249528);
  *(void *)uint64_t v21 = v17;
  *(unsigned char *)(v21 + 8) = v16;
  sub_253AF3210();
  sub_253AF1980();
  sub_253465A14();
}

void sub_253AD0668()
{
}

IntelligenceFlowPlannerSupport::UpdateParametersExpression::UpdateKind __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UpdateParametersExpression.UpdateKind.init(transcript:)(IntelligenceFlowPlannerSupport::TranscriptProtoUpdateParameterExpression_UpdateKind transcript)
{
  sub_253592EB0(v1);
  return result;
}

void sub_253AD0698()
{
}

uint64_t sub_253AD06B0()
{
  return sub_253A9CA9C();
}

void sub_253AD06C8()
{
}

uint64_t sub_253AD06F0(char *a1)
{
  char v2 = *a1;
  return UpdateParametersExpression.UpdateKind.init(transcript:)((IntelligenceFlowPlannerSupport::TranscriptProtoUpdateParameterExpression_UpdateKind)&v2);
}

uint64_t sub_253AD0724()
{
  return GlobalToolIdentifier.init(transcript:)();
}

uint64_t sub_253AD074C()
{
  return sub_253A9CC0C(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_253AD076C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return TranscriptProtoGlobalToolIdentifier.init(handwritten:)(a1, a2);
}

void sub_253AD0794()
{
}

uint64_t sub_253AD07AC()
{
  return sub_253A9CD4C();
}

void sub_253AD07E8()
{
}

void sub_253AD0810()
{
}

uint64_t sub_253AD0838()
{
  return sub_253A9CFDC();
}

void sub_253AD0854()
{
}

void sub_253AD087C()
{
}

uint64_t sub_253AD0894()
{
  return sub_253A9D0F4();
}

void sub_253AD08AC()
{
}

void sub_253AD08D4()
{
}

uint64_t sub_253AD08EC()
{
  return sub_253A9D468();
}

void sub_253AD0904()
{
}

void sub_253AD092C()
{
}

uint64_t sub_253AD0954()
{
  if (*(unsigned char *)(v0 + 17)) {
    int v1 = 256;
  }
  else {
    int v1 = 0;
  }
  int v2 = v1 | *(unsigned __int8 *)(v0 + 16);
  if (*(unsigned char *)(v0 + 18)) {
    int v3 = 0x10000;
  }
  else {
    int v3 = 0;
  }
  return sub_253A9D5D8(*(void *)v0, *(void *)(v0 + 8), v2 | v3);
}

uint64_t sub_253AD099C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return TranscriptProtoSearchExpression.init(handwritten:)(a1, a2);
}

uint64_t sub_253AD09C4()
{
  return StructuredSearchExpression.init(transcript:)();
}

uint64_t sub_253AD09EC()
{
  return sub_253A9D718();
}

uint64_t sub_253AD0A08@<X0>(void *a1@<X8>)
{
  return TranscriptProtoStructuredSearchExpression.init(handwritten:)(a1);
}

void sub_253AD0A30()
{
}

uint64_t sub_253AD0A48()
{
  return sub_253A9D84C();
}

void sub_253AD0A60()
{
}

uint64_t sub_253AD0A88()
{
  return ResolveToolExpression.init(transcript:)();
}

uint64_t sub_253AD0AB0()
{
  return sub_253A9D9BC();
}

uint64_t sub_253AD0ACC(uint64_t a1)
{
  return TranscriptProtoResolveToolExpression.init(handwritten:)(a1);
}

void sub_253AD0AF4()
{
}

uint64_t sub_253AD0B0C()
{
  return sub_253A9DAE8();
}

void sub_253AD0B24()
{
}

void sub_253AD0B4C()
{
}

uint64_t sub_253AD0B64()
{
  return sub_253A9DC58();
}

void sub_253AD0B7C()
{
}

void sub_253AD0BA4()
{
}

uint64_t sub_253AD0BBC()
{
  return sub_253A9DDC8();
}

void sub_253AD0BD4()
{
}

void sub_253AD0BFC()
{
}

uint64_t sub_253AD0C14()
{
  return sub_253A9DF38();
}

void sub_253AD0C2C()
{
}

void ProgramStatement.init(transcript:)()
{
  sub_2534847F8();
  sub_253AF258C(v7);
  uint64_t v72 = sub_253B08E60();
  sub_253465998();
  uint64_t v69 = v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v67 = (uint64_t)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v11);
  sub_2534B3318();
  uint64_t v68 = v12;
  sub_2534B324C();
  MEMORY[0x270FA5388](v13);
  uint64_t v66 = (uint64_t)&v61 - v14;
  uint64_t v15 = sub_253462A5C(&qword_269CDFA30);
  uint64_t v16 = sub_25346CB4C(v15);
  MEMORY[0x270FA5388](v16);
  sub_25347FAAC();
  uint64_t v17 = sub_253462A5C(&qword_269CDCB30);
  uint64_t v18 = sub_25346CB4C(v17);
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = sub_2534D8CAC();
  uint64_t v20 = type metadata accessor for TranscriptProtoExpression(v19);
  uint64_t v21 = sub_25346CB4C(v20);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = sub_253AF1C00(v22, v61);
  uint64_t v24 = type metadata accessor for Expression(v23);
  uint64_t v25 = sub_25346CB4C(v24);
  MEMORY[0x270FA5388](v25);
  uint64_t v26 = sub_253AF1DF4();
  uint64_t v27 = sub_25346CB4C(v26);
  MEMORY[0x270FA5388](v27);
  uint64_t v28 = sub_253AF1EBC();
  sub_253465998();
  uint64_t v30 = v29;
  MEMORY[0x270FA5388](v31);
  sub_253465A3C();
  sub_25395E074(v3);
  if (v1)
  {
    sub_253AF1980();
  }
  else
  {
    uint64_t v64 = v5;
    uint64_t v65 = v30;
    uint64_t v32 = v72;
    uint64_t v63 = v4;
    swift_bridgeObjectRetain();
    sub_253B059B0();
    sub_253AF1980();
    uint64_t v33 = type metadata accessor for TranscriptProtoProgramStatement(0);
    sub_253AF2C30();
    uint64_t v34 = v71;
    sub_25395E4C0(v71);
    Expression.init(transcript:)(v34, v35, v36, v37, v38, v39, v40, v41, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71,
      v72);
    uint64_t v62 = v2;
    uint64_t v42 = *(int *)(v33 + 28);
    int v43 = *(unsigned __int8 *)(v0 + *(int *)(v33 + 24));
    uint64_t v71 = v0;
    sub_253961F60(v0 + v42, v6, &qword_269CDFA30);
    sub_2534D8B48(v6, 1, v32);
    uint64_t v45 = v65;
    if (v44)
    {
      uint64_t v51 = sub_253B09150();
      uint64_t v52 = v63;
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v63, 1, 1, v51);
    }
    else
    {
      HIDWORD(v61) = v43;
      uint64_t v46 = v69;
      sub_253A56C4C();
      sub_25347FA84();
      v47();
      uint64_t v48 = *(void (**)(void))(v46 + 16);
      sub_253971DD4();
      sub_253962F0C();
      v48();
      sub_253579328();
      sub_253962F0C();
      v48();
      uint64_t v49 = v63;
      sub_253B09140();
      uint64_t v50 = *(void (**)(void))(v46 + 8);
      sub_2534F85D4();
      v50();
      sub_2534F85D4();
      v50();
      uint64_t v51 = sub_253B09150();
      sub_2534AF368(v49);
      uint64_t v52 = v49;
      uint64_t v45 = v65;
      LOBYTE(v43) = BYTE4(v61);
    }
    char v53 = v43 & 1;
    int v54 = (int *)type metadata accessor for ProgramStatement(0);
    uint64_t v55 = v54[6];
    uint64_t v56 = v70;
    uint64_t v57 = v70 + v54[7];
    sub_253B09150();
    uint64_t v58 = sub_253A3D714();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v58, v59, v60, v51);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v56, v62, v28);
    sub_253AF19D0(v64, v56 + v54[5]);
    *(unsigned char *)(v56 + v55) = v53;
    sub_253961BF0(v52, v57, &qword_269CDCB30);
    sub_253AF1980();
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void sub_253AD117C()
{
}

uint64_t sub_253AD1194()
{
  return sub_253A9E0A8();
}

#error "253AD13B0: call analysis failed (funcsize=205)"

uint64_t sub_253AD1514(uint64_t a1)
{
  return TranscriptProtoProgramStatement.init(handwritten:)(a1);
}

uint64_t sub_253AD152C()
{
  return StatementID.init(transcript:)();
}

uint64_t sub_253AD1554()
{
  return sub_253A9E228();
}

uint64_t sub_253AD156C()
{
  return TranscriptProtoStatementID.init(handwritten:)();
}

uint64_t ActionOutcome.init(transcript:)()
{
  sub_253AF226C();
  sub_253B05A00();
  sub_253465998();
  MEMORY[0x270FA5388](v1);
  sub_253465A3C();
  (*(void (**)(uint64_t, void))(v2 + 104))(v0, *MEMORY[0x263F4C010]);
  sub_253B05A60();
  sub_253AF1980();
  sub_253B05AB0();
  sub_25346CAF4();
  sub_25346CCF8();
  return v3();
}

uint64_t sub_253AD168C()
{
  return ActionOutcome.init(transcript:)();
}

uint64_t sub_253AD16A4()
{
  return sub_253A9E414();
}

uint64_t TranscriptProtoActionOutcome.init(handwritten:)(uint64_t a1)
{
  return sub_253AD16E8(a1, MEMORY[0x263F4C108]);
}

uint64_t sub_253AD16E8(uint64_t a1, void (*a2)(void))
{
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  a2(0);
  sub_25346CAF4();
  sub_2534659CC();
  return v3();
}

uint64_t sub_253AD1750(uint64_t a1)
{
  return TranscriptProtoActionOutcome.init(handwritten:)(a1);
}

void ActionRequirement.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v75 = v7;
  uint64_t v76 = v2;
  uint64_t v8 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v69 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v11);
  uint64_t v70 = (uint64_t)&v67 - v12;
  uint64_t v13 = sub_253483660();
  uint64_t v14 = type metadata accessor for TranscriptProtoAppRequirement(v13);
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  uint64_t v71 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  sub_2536D3028(v18, v19, v20, v21, v22, v23, v24, v25, v67);
  sub_253B06860();
  sub_253465998();
  uint64_t v73 = v27;
  uint64_t v74 = v26;
  MEMORY[0x270FA5388](v26);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v28);
  uint64_t v68 = (unsigned __int8 *)&v67 - v29;
  sub_2534B324C();
  MEMORY[0x270FA5388](v30);
  uint64_t v31 = sub_253971BBC();
  uint64_t v32 = type metadata accessor for TranscriptProtoSystemRequirementMessage(v31);
  uint64_t v33 = sub_25346CB4C(v32);
  MEMORY[0x270FA5388](v33);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v34);
  sub_2536D4C9C();
  uint64_t v35 = sub_253462A5C(&qword_269CE0498);
  uint64_t v36 = sub_25346CB4C(v35);
  MEMORY[0x270FA5388](v36);
  uint64_t v37 = sub_2534B33AC();
  uint64_t v38 = type metadata accessor for TranscriptProtoActionRequirementEnum(v37);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v39);
  sub_2534847E0();
  uint64_t v40 = sub_253578AC4();
  sub_253961F60(v40, v41, &qword_269CE0498);
  uint64_t v42 = sub_2536D42B0();
  sub_2534D8B48(v42, v43, v38);
  if (v44)
  {
    sub_253472458(v6, &qword_269CE0498);
    sub_253462A5C(&qword_269CE8700);
    sub_253AF1E74();
    sub_25396263C();
    uint64_t v45 = sub_2534D969C();
    *uint64_t v46 = v0;
    v46[1] = v1;
    sub_253962224(v45, (uint64_t)v46);
LABEL_4:
    sub_253AF1980();
  }
  else
  {
    sub_253AF3AD8();
    sub_2534D954C();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 1:
        uint64_t v53 = v70;
        sub_253AF19D0(v5, v70);
        sub_253AF1A28(v53, v69);
        int v54 = (unsigned char *)sub_253AF3D50();
        PermissionRequirement.init(transcript:)(v54);
        sub_253AF1980();
        sub_253AF1980();
        if (!v2)
        {
          uint64_t v56 = v73;
          uint64_t v55 = v74;
          sub_25353CDD4();
          v57();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 32))(v75, v3, v55);
        }
        break;
      case 2:
        sub_253AF38E4();
        sub_253AF1A28(v1, v0);
        uint64_t v58 = v76;
        SystemRequirement.init(transcript:)();
        sub_253AF1980();
        sub_253AF1980();
        if (!v58) {
          goto LABEL_20;
        }
        break;
      case 3:
        sub_253AF1980();
        sub_25346CCF8();
        v59();
        break;
      default:
        sub_253AF19D0(v5, v72);
        sub_253AF21C8();
        sub_253AF1A28(v48, v49);
        uint64_t v50 = *v4;
        if (v50 == 3)
        {
          sub_253462A5C(&qword_269CE8708);
          sub_253AF1E74();
          sub_25396263C();
          uint64_t v51 = sub_2534D969C();
          *uint64_t v52 = v50;
          v52[1] = v1;
          sub_253962224(v51, (uint64_t)v52);
          sub_253AF1980();
          sub_253AF1980();
          sub_25351C5C0();
          goto LABEL_4;
        }
        sub_253AF1980();
        if (v50)
        {
          uint64_t v4 = v68;
          if (v50 == 1) {
            uint64_t v60 = (unsigned int *)MEMORY[0x263F4C210];
          }
          else {
            uint64_t v60 = (unsigned int *)MEMORY[0x263F4C218];
          }
          uint64_t v62 = *v60;
          sub_253B05D00();
          sub_25346CAF4();
          (*(void (**)(unsigned __int8 *, uint64_t))(v63 + 104))(v4, v62);
        }
        else
        {
          sub_253B05D00();
          sub_25346CAF4();
          uint64_t v4 = v68;
          sub_25346CCF8();
          v61();
        }
        sub_253AF1980();
        sub_253AF1980();
LABEL_20:
        uint64_t v65 = v73;
        uint64_t v64 = v74;
        sub_25353CDD4();
        v66();
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v65 + 32))(v75, v4, v64);
        break;
    }
  }
  sub_253A3C6AC();
  sub_2534847C8();
}

void SystemRequirement.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_2534B340C();
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_253971BBC();
  uint64_t v11 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(v10);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  sub_2534D8CE4();
  MEMORY[0x270FA5388](v13);
  sub_2534D9E98();
  uint64_t v14 = sub_253462A5C(&qword_269CE0490);
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_2534B464C();
  uint64_t v17 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(v16);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v18);
  sub_25347FAAC();
  sub_253961F60(v6, v0, &qword_269CE0490);
  sub_2534D8B48(v0, 1, v17);
  if (v19)
  {
    sub_253472458(v0, &qword_269CE0490);
    sub_253462A5C(&qword_269CE8710);
    sub_253AF1E74();
    sub_25396263C();
    uint64_t v20 = sub_2534D969C();
    *uint64_t v21 = &qword_269CE0490;
    v21[1] = v0;
    sub_253962224(v20, (uint64_t)v21);
    sub_253AF1980();
  }
  else
  {
    sub_253AF19D0(v0, v4);
    sub_2534D96CC();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 1:
        sub_253AF2C3C();
        sub_253AF2BF4();
        SystemRequirement.AuthenticationRequest.init(transcript:)();
        sub_253AF1980();
        sub_253AF1980();
        if (!v1)
        {
          sub_253B06A40();
          sub_25346CAF4();
          sub_25346CCF8();
          v26();
        }
        break;
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
        sub_253AF1980();
        sub_253B06A40();
        sub_25346CAF4();
        goto LABEL_9;
      default:
        uint64_t v23 = sub_253A3D03C();
        sub_253AF19D0(v23, v24);
        sub_253AF1A28(v2, v3);
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_253AF2860();
        MEMORY[0x25A2659D0](v25);
        sub_253AF1980();
        sub_253AF1980();
        sub_253578D38();
        sub_253AF1980();
        sub_253B06A40();
        sub_25346CAF4();
LABEL_9:
        sub_25346CCF8();
        v27();
        break;
    }
  }
  sub_253A3C6AC();
  sub_2534847C8();
}

uint64_t AppRequirement.init(transcript:)(unsigned __int8 *a1)
{
  int v3 = *a1;
  if (v3 == 3)
  {
    sub_253462A5C(&qword_269CE8708);
    sub_253AF2E38();
    sub_25396263C();
    uint64_t v4 = sub_2534D969C();
    *uint64_t v5 = v1;
    v5[1] = v2;
    sub_253962224(v4, (uint64_t)v5);
    return sub_253AF1980();
  }
  else
  {
    sub_253AF2580();
    sub_253AF1980();
    sub_253B05D00();
    sub_25346CAF4();
    sub_25346CCF8();
    return v7();
  }
}

uint64_t PermissionRequirement.init(transcript:)(unsigned char *a1)
{
  if (*a1 == 8)
  {
    sub_253462A5C(&qword_269CE8718);
    sub_253AF2E38();
    sub_25396263C();
    uint64_t v3 = sub_2534D969C();
    *uint64_t v4 = v1;
    v4[1] = v2;
    sub_253962224(v3, (uint64_t)v4);
    return sub_253AF1980();
  }
  else
  {
    sub_253AF2580();
    sub_253AF1980();
    sub_253B06D70();
    sub_25346CAF4();
    sub_25346CCF8();
    return v6();
  }
}

void sub_253AD254C()
{
}

uint64_t sub_253AD2564()
{
  return sub_253A9E514();
}

void TranscriptProtoActionRequirement.init(handwritten:)()
{
  sub_2534847F8();
  sub_253AF33E8(v2);
  uint64_t v4 = sub_253AF37A4(v3);
  v67[10] = type metadata accessor for TranscriptProtoActionRequirement(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  uint64_t v68 = (uint64_t)v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  sub_253B06D70();
  sub_253465998();
  v67[3] = v8;
  v67[4] = v7;
  MEMORY[0x270FA5388](v7);
  v67[1] = (uint64_t)v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v10);
  v67[2] = (uint64_t)v67 - v11;
  sub_253483660();
  sub_253B05D00();
  sub_253465998();
  v67[7] = v13;
  v67[8] = v12;
  MEMORY[0x270FA5388](v12);
  v67[5] = (uint64_t)v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  sub_253AF1D80(v16, v17, v18, v19, v20, v21, v22, v23, v67[0]);
  sub_253B06A40();
  sub_253465998();
  MEMORY[0x270FA5388](v24);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v25);
  sub_2534DA430();
  uint64_t v26 = sub_253B06860();
  sub_253465998();
  uint64_t v28 = v27;
  MEMORY[0x270FA5388](v29);
  uint64_t v30 = sub_25397F55C();
  uint64_t v71 = type metadata accessor for TranscriptProtoActionRequirementEnum(v30);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v31);
  v67[0] = (uint64_t)v67 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v33);
  sub_25351C770();
  MEMORY[0x270FA5388](v34);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v35);
  sub_253AF2178((uint64_t)v67 - v36);
  sub_253AF283C();
  sub_2534AF234();
  v37();
  sub_253578368();
  int v39 = v38();
  if (v39 != *MEMORY[0x263F4C808])
  {
    uint64_t v69 = v26;
    uint64_t v45 = v72;
    if (v39 != *MEMORY[0x263F4C800])
    {
      if (v39 != *MEMORY[0x263F4C7F8])
      {
        if (v39 != *MEMORY[0x263F4C810])
        {
          sub_25394EA00();
          uint64_t v63 = sub_2534D969C();
          sub_253A73498(v63, v64);
          uint64_t v65 = *(void (**)(void))(v28 + 8);
          sub_25351C3E8();
          v65();
          sub_2534DA034();
          sub_25351C3E8();
          v65();
          goto LABEL_18;
        }
        sub_253578D20();
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      }
      sub_253971A70();
      v51();
      sub_253AF21E0();
      sub_25347FA84();
      v52();
      sub_253AF2AEC();
      sub_2535791E4();
      sub_2534AF234();
      v53();
      uint64_t v54 = v67[0];
      TranscriptProtoPermissionRequirement.init(handwritten:)();
      uint64_t v55 = v70;
      if (v45)
      {
        sub_25351C3E8();
        v56();
        sub_2534D91A0();
        v57();
        goto LABEL_18;
      }
      sub_2534D91A0();
      v66();
      sub_253A3D03C();
      swift_storeEnumTagMultiPayload();
      uint64_t v59 = v54;
LABEL_16:
      sub_253AF19D0(v59, v55);
LABEL_17:
      uint64_t v61 = v67[9];
      sub_253578EBC(v68, 1);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      sub_25351C3E8();
      v62();
      sub_253AF38E4();
      sub_253472458(v61, &qword_269CE0498);
      sub_253AF3B1C();
      sub_253AF1DA4(v61);
      goto LABEL_18;
    }
    sub_253971A70();
    v46();
    sub_253A3CF28();
    sub_253AF25E4();
    sub_25347FA84();
    v47();
    sub_253AF3094();
    sub_253AF3194();
    sub_2534AF234();
    v48();
    TranscriptProtoAppRequirement.init(handwritten:)();
    if (v45)
    {
      sub_25351C3E8();
      v49();
      sub_253AF25E4();
      goto LABEL_7;
    }
    sub_253AF25E4();
    sub_2534DA4BC();
    v60();
    swift_storeEnumTagMultiPayload();
    uint64_t v59 = v0;
LABEL_15:
    uint64_t v55 = v70;
    goto LABEL_16;
  }
  sub_253AF2AA4();
  sub_253971A70();
  v40();
  sub_253A3F354();
  sub_25347FA84();
  v41();
  sub_253579328();
  sub_2534AF234();
  v42();
  uint64_t v43 = v72;
  TranscriptProtoSystemRequirementMessage.init(handwritten:)();
  if (!v43)
  {
    uint64_t v69 = v26;
    sub_2534DA4BC();
    v58();
    swift_storeEnumTagMultiPayload();
    uint64_t v59 = v1;
    goto LABEL_15;
  }
  sub_25351C3E8();
  v44();
  sub_2534D96CC();
LABEL_7:
  sub_2534DA4BC();
  v50();
LABEL_18:
  sub_253579494();
  sub_2534847C8();
}

void TranscriptProtoSystemRequirementMessage.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v53 = v1;
  uint64_t v4 = v3;
  sub_2534F8A1C();
  sub_253B06A30();
  sub_253465998();
  uint64_t v48 = v6;
  uint64_t v49 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v46 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v8);
  uint64_t v47 = (char *)&v46 - v9;
  sub_253483660();
  sub_253B069F0();
  sub_253465998();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  sub_25353CE24();
  MEMORY[0x270FA5388](v13);
  uint64_t v50 = (char *)&v46 - v14;
  sub_253B06A40();
  sub_253465998();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  sub_2534B3294();
  uint64_t v18 = sub_253462A5C(&qword_269CE0490);
  uint64_t v19 = sub_25346CB4C(v18);
  MEMORY[0x270FA5388](v19);
  uint64_t v20 = sub_25348360C();
  uint64_t v51 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(v20);
  uint64_t v21 = sub_253AF1CDC(v0, 1, 1, v51);
  type metadata accessor for TranscriptProtoSystemRequirementMessage(v21);
  uint64_t v54 = v0;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v52 = v4;
  sub_2534AF234();
  v22();
  sub_253578368();
  int v24 = v23();
  if (v24 == *MEMORY[0x263F4C8F8])
  {
    sub_253971A70();
    v25();
    sub_25351C9FC();
    sub_2535B4148();
    sub_25347FA84();
    v26();
    sub_2536D500C();
    sub_2534AF234();
    v27();
    uint64_t v28 = sub_253B05D80();
    uint64_t v30 = v29;
    type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
    sub_253AF2500();
    *uint64_t v2 = v28;
    v2[1] = v30;
    uint64_t v31 = *(void (**)(void))(v11 + 8);
    sub_2534D97B4();
    v31();
    sub_2534DA4BC();
    v32();
    sub_253A3E5D4();
    sub_2534D97B4();
    v31();
LABEL_16:
    swift_storeEnumTagMultiPayload();
    sub_253A73620((uint64_t)v2);
    sub_253961BF0((uint64_t)v2, v54, &qword_269CE0490);
    goto LABEL_17;
  }
  if (v24 == *MEMORY[0x263F4C8F0])
  {
    sub_25357931C();
    sub_253971A70();
    v33();
    uint64_t v35 = v47;
    uint64_t v34 = v48;
    sub_253A3D030();
    uint64_t v36 = v49;
    sub_25347FA84();
    v37();
    sub_253AF2658();
    sub_2534AF234();
    v38();
    sub_253AF3D50();
    TranscriptProtoSystemRequirementAuthenticationRequest.init(handwritten:)();
    if (!v1)
    {
      sub_2534DA4BC();
      v40();
      sub_2534D97B4();
      v41();
      goto LABEL_16;
    }
    sub_2534DA4BC();
    v39();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  }
  else
  {
    if (v24 == *MEMORY[0x263F4C8C8]
      || v24 == *MEMORY[0x263F4C8E0]
      || v24 == *MEMORY[0x263F4C8A0]
      || v24 == *MEMORY[0x263F4C8C0]
      || v24 == *MEMORY[0x263F4C8E8])
    {
      sub_2534DA4BC();
      v42();
      goto LABEL_16;
    }
    sub_25394EA00();
    uint64_t v43 = sub_2534D969C();
    sub_253A73498(v43, v44);
    uint64_t v45 = *(void (**)(void))(v16 + 8);
    sub_2534DA4BC();
    v45();
    sub_2534DA4BC();
    v45();
  }
  sub_253AF1980();
LABEL_17:
  sub_2534F8A10();
  sub_2534847C8();
}

void TranscriptProtoAppRequirement.init(handwritten:)()
{
  sub_2535B4280();
  sub_253A3F064();
  sub_253B05D00();
  sub_253465998();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  sub_2534847E0();
  uint64_t v4 = sub_253AF3658(3);
  type metadata accessor for TranscriptProtoAppRequirement(v4);
  sub_2539457F0();
  sub_2534AF234();
  v5();
  sub_253578368();
  int v7 = v6();
  if (v7 == *MEMORY[0x263F4C208])
  {
    char v8 = 0;
  }
  else if (v7 == *MEMORY[0x263F4C210])
  {
    char v8 = 1;
  }
  else
  {
    if (v7 != *MEMORY[0x263F4C218])
    {
      sub_25394EA00();
      uint64_t v10 = sub_2534D969C();
      sub_253A73498(v10, v11);
      uint64_t v12 = *(void (**)(void))(v2 + 8);
      sub_2534DA4BC();
      v12();
      sub_253AF1980();
      sub_2534DA4BC();
      v12();
      goto LABEL_8;
    }
    char v8 = 2;
  }
  sub_2534DA4BC();
  v9();
  *uint64_t v0 = v8;
LABEL_8:
  sub_2536D30A0();
  sub_2535B42DC();
}

void TranscriptProtoPermissionRequirement.init(handwritten:)()
{
  sub_2535B4280();
  sub_253A3F064();
  sub_253B06D70();
  sub_253465998();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  sub_2534847E0();
  uint64_t v4 = sub_253AF3658(8);
  type metadata accessor for TranscriptProtoPermissionRequirement(v4);
  sub_2539457F0();
  sub_2534AF234();
  v5();
  sub_253578368();
  int v7 = v6();
  if (v7 == *MEMORY[0x263F4CAA8])
  {
    char v8 = 0;
  }
  else if (v7 == *MEMORY[0x263F4CAD8])
  {
    char v8 = 1;
  }
  else if (v7 == *MEMORY[0x263F4CAA0])
  {
    char v8 = 2;
  }
  else if (v7 == *MEMORY[0x263F4CAC8])
  {
    char v8 = 3;
  }
  else if (v7 == *MEMORY[0x263F4CAB0])
  {
    char v8 = 4;
  }
  else if (v7 == *MEMORY[0x263F4CAD0])
  {
    char v8 = 5;
  }
  else if (v7 == *MEMORY[0x263F4CAB8])
  {
    char v8 = 6;
  }
  else
  {
    if (v7 != *MEMORY[0x263F4CAC0])
    {
      sub_25394EA00();
      uint64_t v10 = sub_2534D969C();
      sub_253A73498(v10, v11);
      uint64_t v12 = *(void (**)(void))(v2 + 8);
      sub_2534DA4BC();
      v12();
      sub_253AF1980();
      sub_2534DA4BC();
      v12();
      goto LABEL_18;
    }
    char v8 = 7;
  }
  sub_2534DA4BC();
  v9();
  *uint64_t v0 = v8;
LABEL_18:
  sub_2536D30A0();
  sub_2535B42DC();
}

void sub_253AD3448()
{
}

uint64_t SystemRequirement.ProtectedAppRequest.init(transcript:)(uint64_t a1)
{
  return sub_253AD34A0(a1, MEMORY[0x263F4C8A8]);
}

uint64_t sub_253AD34A0(uint64_t a1, void (*a2)(uint64_t))
{
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_2534D954C();
  a2(v3);
  return sub_253AF2C0C();
}

void SystemRequirement.AuthenticationRequest.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v2 = sub_253AF226C();
  uint64_t v3 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(v2);
  uint64_t v4 = sub_25346CB4C(v3);
  MEMORY[0x270FA5388](v4);
  sub_25397F55C();
  sub_253B06A00();
  sub_253465998();
  MEMORY[0x270FA5388](v5);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v6);
  sub_2534D9EC0();
  sub_25395DC98((uint64_t)v0);
  if (!v1)
  {
    if (*v0 == 2)
    {
      sub_253462A5C(&qword_269CE8720);
      uint64_t v7 = sub_253AF1E74();
      uint64_t v9 = v8;
      sub_253961DC0();
      uint64_t v10 = sub_2534D969C();
      uint64_t *v11 = v7;
      v11[1] = v9;
      sub_253962224(v10, (uint64_t)v11);
      sub_253AF1980();
    }
    else
    {
      sub_253AF1980();
      sub_25353CDD4();
      v12();
      sub_253AF2F08();
      v13();
      sub_253AF2770();
      sub_253B06A10();
    }
  }
  sub_253AF1980();
  sub_253578DEC();
  sub_2534847C8();
}

void sub_253AD36C8()
{
}

void TranscriptProtoSystemRequirementProtectedAppRequest.init(handwritten:)()
{
}

void sub_253AD3734()
{
  sub_2535B4280();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  v8();
  uint64_t v9 = sub_253AF3328();
  v5(v9);
  sub_253AF2500();
  *uint64_t v7 = v0;
  v7[1] = v1;
  v3(0);
  sub_25346CAF4();
  sub_2534659CC();
  v10();
  sub_2535B42DC();
}

void TranscriptProtoSystemRequirementAuthenticationRequest.init(handwritten:)()
{
  sub_2535B4280();
  uint64_t v3 = sub_253971B04();
  type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(v3);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v4);
  sub_2534AF2D8();
  uint64_t v5 = sub_253B06A00();
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_2534966B0();
  uint64_t v7 = sub_253462A5C(&qword_269CE0488);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_253AF20CC();
  sub_253B06A20();
  sub_253AF2570();
  TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.init(handwritten:)();
  if (!v0)
  {
    uint64_t v9 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
    sub_253AF229C(v9);
    sub_253961BF0(v2, v1, &qword_269CE0488);
    sub_253AF3228();
  }
  sub_253B06A30();
  sub_25346CAF4();
  sub_2534659CC();
  v10();
  sub_2535B42DC();
}

void sub_253AD3908()
{
}

uint64_t sub_253AD3920(uint64_t a1)
{
  return SystemRequirement.ProtectedAppRequest.init(transcript:)(a1);
}

void sub_253AD3938()
{
}

uint64_t SystemRequirement.AuthenticationRequest.AuthenticationLevel.init(transcript:)(unsigned char *a1)
{
  if (*a1 == 2)
  {
    sub_253462A5C(&qword_269CE8720);
    uint64_t v1 = sub_253AF2E38();
    uint64_t v3 = v2;
    sub_253961DC0();
    uint64_t v4 = sub_2534D969C();
    *uint64_t v5 = v1;
    v5[1] = v3;
    sub_253962224(v4, (uint64_t)v5);
    return sub_253AF1980();
  }
  else
  {
    sub_253AF1980();
    sub_253B06A00();
    sub_25346CAF4();
    sub_25346CCF8();
    return v7();
  }
}

void sub_253AD3A64()
{
}

void TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.init(handwritten:)()
{
  sub_2535B4280();
  sub_253A3F064();
  uint64_t v2 = sub_253B06A00();
  sub_253465998();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  sub_2534847E0();
  uint64_t v6 = sub_253AF3658(2);
  type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(v6);
  sub_2539457F0();
  sub_2534AF234();
  v7();
  sub_253578368();
  int v9 = v8();
  if (v9 == *MEMORY[0x263F4C8D0])
  {
    char v10 = 0;
  }
  else
  {
    if (v9 != *MEMORY[0x263F4C8D8])
    {
      sub_25394EA00();
      uint64_t v12 = sub_2534D969C();
      sub_253A73498(v12, v13);
      uint64_t v14 = *(void (**)(void))(v4 + 8);
      sub_2534DA4BC();
      v14();
      sub_253AF1980();
      ((void (*)(uint64_t, uint64_t))v14)(v1, v2);
      goto LABEL_7;
    }
    char v10 = 1;
  }
  sub_2534DA4BC();
  v11();
  *uint64_t v0 = v10;
LABEL_7:
  sub_2536D30A0();
  sub_2535B42DC();
}

void sub_253AD3BE8()
{
}

uint64_t sub_253AD3C00(unsigned char *a1)
{
  return SystemRequirement.AuthenticationRequest.AuthenticationLevel.init(transcript:)(a1);
}

void sub_253AD3C18()
{
}

void ActionSuccess.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v2 = v1;
  uint64_t v3 = sub_253462A5C(&qword_269CE0468);
  uint64_t v4 = sub_25346CB4C(v3);
  MEMORY[0x270FA5388](v4);
  sub_2534D8F84(v5, v21);
  uint64_t v6 = sub_253462A5C(&qword_269CE50B8);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_253AF1DD8(v8, v22);
  uint64_t v9 = sub_253462A5C(&qword_269CE0450);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  sub_2534AF2A0(v11, v23);
  uint64_t v12 = sub_253462A5C(&qword_269CE50C0);
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  sub_253AF2C7C();
  sub_253465998();
  MEMORY[0x270FA5388](v14);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v15);
  sub_2536D3970();
  sub_253B09120();
  sub_253465998();
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = sub_25349888C();
  uint64_t v18 = type metadata accessor for TranscriptProtoActionSuccess(v17);
  sub_25395DCE8();
  if (!v0)
  {
    sub_253AF283C();
    sub_2534AF234();
    v19();
    sub_253AF31A4();
    sub_253B09110();
    sub_2534D91AC();
    v20();
    sub_253961F60(v2 + *(int *)(v18 + 32), v25, &qword_269CE0450);
    sub_25395D2FC();
    sub_253961F60(v2 + *(int *)(v18 + 36), v24, &qword_269CE0468);
    sub_25395D5E4();
    swift_bridgeObjectRetain();
    sub_253B05BE0();
  }
  sub_253AF1980();
  sub_2534F8A10();
  sub_2534847C8();
}

uint64_t ActionFailure.init(transcript:)()
{
  uint64_t v1 = sub_253971B04();
  uint64_t v2 = type metadata accessor for TranscriptProtoActionFailureFailure(v1);
  uint64_t v3 = sub_25346CB4C(v2);
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = sub_253AF2D2C();
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_253AF2900();
  sub_25395D77C(v6);
  if (!v0)
  {
    sub_253AF2694();
    ActionFailure.Failure.init(transcript:)();
    sub_253B05A60();
  }
  return sub_253AF1980();
}

#error "253AD40A0: call analysis failed (funcsize=6)"

uint64_t sub_253AD40AC()
{
  return sub_253A9E6CC();
}

void TranscriptProtoActionSuccess.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  uint64_t v4 = sub_253462A5C(&qword_269CE50B8);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_2534AF2A0(v6, v23);
  uint64_t v7 = sub_253462A5C(&qword_269CE0468);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_2536D2C5C(v9, v24);
  uint64_t v10 = sub_253462A5C(&qword_269CE50C0);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  sub_2534988A8(v12, v25);
  uint64_t v13 = sub_253462A5C(&qword_269CE0450);
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  sub_253AF1E1C(v15, v26);
  sub_253B08E50();
  sub_253465998();
  MEMORY[0x270FA5388](v16);
  sub_2534D9C00();
  sub_253B09120();
  sub_253465998();
  MEMORY[0x270FA5388](v17);
  sub_2534966B0();
  uint64_t v18 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v19 = sub_25346CB4C(v18);
  MEMORY[0x270FA5388](v19);
  sub_253AF2DDC();
  sub_253B05BF0();
  sub_253B09100();
  sub_2534D9A08();
  v20();
  if (!v0)
  {
    sub_2534D8E14();
    v22();
    sub_2536D4030(v1);
    sub_253B05BC0();
    sub_253B05C00();
    sub_253AF31F4();
    sub_253960FDC();
    sub_253B05BC0();
    sub_253B05B50();
    sub_253961274();
    sub_253B05B60();
    sub_253B05C10();
    TranscriptProtoActionSuccess.init(returnValue:appLaunched:undoContext:didShowInAppResult:followUpAction:shouldOpen:inAppSearchString:)();
  }
  sub_253B05C30();
  sub_25346CAF4();
  (*(void (**)(uint64_t))(v21 + 8))(v3);
  sub_253A3C6AC();
  sub_2534847C8();
}

uint64_t TranscriptProtoValueDisambiguation.init(handwritten:)@<X0>(void *a1@<X8>)
{
  uint64_t v4 = MEMORY[0x25A265C80]();
  sub_253AC7D1C(v4);
  if (!v1)
  {
    uint64_t v5 = sub_253AF35AC();
    type metadata accessor for TranscriptProtoValueDisambiguation(v5);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *a1 = v2;
  }
  sub_253B06C90();
  sub_25346CAF4();
  sub_2534659CC();
  return v6();
}

uint64_t TranscriptProtoActionFailure.init(handwritten:)()
{
  sub_253971B04();
  uint64_t v3 = sub_253B05A00();
  uint64_t v4 = sub_25346CB4C(v3);
  MEMORY[0x270FA5388](v4);
  sub_25346CC6C();
  uint64_t v5 = sub_253462A5C(&qword_269CE04A8);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_2534D9C00();
  uint64_t v8 = type metadata accessor for TranscriptProtoActionFailureFailure(v7);
  uint64_t v9 = sub_253AF1CDC(v0, 1, 1, v8);
  type metadata accessor for TranscriptProtoActionFailure(v9);
  sub_253945118();
  sub_253B05A70();
  sub_253AF3864();
  TranscriptProtoActionFailureFailure.init(handwritten:)();
  sub_253B05A80();
  sub_25346CAF4();
  sub_2534659CC();
  v10();
  if (v1) {
    return sub_253AF1980();
  }
  sub_253AF215C(v2);
  uint64_t v12 = sub_2535787F4();
  return sub_253961BF0(v12, v13, v14);
}

void sub_253AD4648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  TranscriptProtoStatementOutcome.init(handwritten:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_253AD4660()
{
}

uint64_t sub_253AD4678()
{
  return sub_253A9E884();
}

void sub_253AD4690()
{
}

void ResponseManifest.init(transcript:)()
{
  sub_2534847F8();
  sub_253AF2A80();
  uint64_t v60 = v4;
  sub_253B06780();
  sub_253465998();
  uint64_t v63 = v6;
  uint64_t v64 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v62 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  sub_253AF3C3C(v9, v10, v11, v12, v13, v14, v15, v16, v56);
  uint64_t v17 = sub_253462A5C(&qword_269CE04D0);
  uint64_t v18 = sub_25346CB4C(v17);
  MEMORY[0x270FA5388](v18);
  sub_2534AF2A0(v19, v56);
  uint64_t v20 = sub_253462A5C(&qword_269CE5098);
  uint64_t v21 = sub_25346CB4C(v20);
  MEMORY[0x270FA5388](v21);
  sub_2534988A8(v22, v56);
  uint64_t v23 = sub_253462A5C(&qword_269CE04C8);
  uint64_t v24 = sub_25346CB4C(v23);
  MEMORY[0x270FA5388](v24);
  sub_2534847E0();
  uint64_t v25 = sub_253462A5C(&qword_269CE50A8);
  uint64_t v26 = sub_25346CB4C(v25);
  MEMORY[0x270FA5388](v26);
  sub_2534966B0();
  uint64_t v27 = sub_253462A5C(&qword_269CE04B8);
  uint64_t v28 = sub_25346CB4C(v27);
  MEMORY[0x270FA5388](v28);
  sub_25346CC54();
  uint64_t v29 = sub_253462A5C(&qword_269CE50B0);
  uint64_t v30 = sub_25346CB4C(v29);
  MEMORY[0x270FA5388](v30);
  uint64_t v31 = sub_253AF2DB4();
  sub_253958ECC(v31, v32, v33, v34, v35, v36, v37, v38, v56, v57);
  uint64_t v40 = v39;
  uint64_t v41 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  uint64_t v42 = sub_253AF3318((uint64_t)v41);
  sub_253961F60(v42, v43, &qword_269CE04B8);
  sub_25395CA30();
  sub_253961F60(v0 + v41[6], v2, &qword_269CE04C8);
  sub_25395CC9C();
  if (v1)
  {
    swift_bridgeObjectRelease();
    sub_253AF1980();
    sub_253472458(v3, &qword_269CE50B0);
  }
  else
  {
    uint64_t v59 = v40;
    uint64_t v45 = v62;
    uint64_t v44 = v63;
    uint64_t v46 = v64;
    sub_253961F60(v0 + v41[11], v61, &qword_269CE04D0);
    sub_25395CE34();
    uint64_t v47 = v41[8];
    uint64_t v48 = (uint64_t *)(v0 + v41[7]);
    uint64_t v50 = *v48;
    uint64_t v49 = v48[1];
    uint64_t v61 = v50;
    uint64_t v56 = v49;
    uint64_t v51 = (uint64_t *)(v0 + v47);
    uint64_t v52 = v41[10];
    HIDWORD(v57) = *(unsigned __int8 *)(v0 + v41[9]);
    LOBYTE(v47) = *(unsigned char *)(v0 + v52);
    uint64_t v53 = *(void (**)(char *, void, uint64_t))(v44 + 104);
    uint64_t v58 = *v51;
    uint64_t v54 = (unsigned int *)MEMORY[0x263F4C750];
    if ((v47 & 1) == 0) {
      uint64_t v54 = (unsigned int *)MEMORY[0x263F4C758];
    }
    v53(v45, *v54, v46);
    sub_253A3C378();
    v55();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_253B06790();
    sub_253AF1980();
  }
  sub_2534F8A10();
  sub_2534847C8();
}

uint64_t ResponseManifest.ResponseDialogPresentationHint.init(transcript:)()
{
  sub_253AF3850();
  sub_253B06780();
  sub_25346CAF4();
  sub_25346CCF8();
  return v0();
}

void sub_253AD4AFC()
{
}

uint64_t sub_253AD4B14()
{
  return sub_253A9EA3C();
}

void TranscriptProtoResponseManifest.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_2534847F8();
  uint64_t v78 = v17;
  uint64_t v18 = sub_253462A5C(&qword_269CE5098);
  uint64_t v19 = sub_25346CB4C(v18);
  MEMORY[0x270FA5388](v19);
  sub_253AF1DD8(v20, v65);
  uint64_t v21 = sub_253462A5C(&qword_269CE04D0);
  uint64_t v22 = sub_25346CB4C(v21);
  MEMORY[0x270FA5388](v22);
  sub_2534966B0();
  uint64_t v23 = sub_253462A5C(&qword_269CE50A0);
  uint64_t v24 = sub_25346CB4C(v23);
  MEMORY[0x270FA5388](v24);
  sub_25347FAAC();
  uint64_t v25 = sub_253462A5C(&qword_269CE50A8);
  uint64_t v26 = sub_25346CB4C(v25);
  MEMORY[0x270FA5388](v26);
  sub_2534835B0();
  uint64_t v27 = sub_253462A5C(&qword_269CE04C8);
  uint64_t v28 = sub_25346CB4C(v27);
  MEMORY[0x270FA5388](v28);
  sub_25346CC6C();
  uint64_t v29 = sub_253462A5C(&qword_269CE50B0);
  uint64_t v30 = sub_25346CB4C(v29);
  MEMORY[0x270FA5388](v30);
  sub_2534B3294();
  uint64_t v31 = sub_253462A5C(&qword_269CE04B8);
  uint64_t v32 = sub_25346CB4C(v31);
  MEMORY[0x270FA5388](v32);
  sub_2534B34A4();
  uint64_t v33 = MEMORY[0x25A2657A0]();
  if (!v33) {
    uint64_t v33 = MEMORY[0x263F8EE78];
  }
  sub_253A6BAF4(v33, v34, v35, v36, v37, v38, v39, v40, v66, v68);
  uint64_t v42 = v41;
  sub_253B06800();
  sub_25395FEC0();
  sub_253B06810();
  sub_25396010C();
  if (v13)
  {
    swift_bridgeObjectRelease();
    sub_253B06820();
    sub_25346CAF4();
    sub_2534659CC();
    v43();
    sub_253472458(v16, &qword_269CE04B8);
  }
  else
  {
    uint64_t v76 = v42;
    uint64_t v77 = v14;
    uint64_t v75 = v15;
    uint64_t v44 = sub_253B067B0();
    uint64_t v46 = v45;
    uint64_t v47 = sub_253B067D0();
    uint64_t v49 = v48;
    char v50 = sub_253B067E0();
    sub_253B067F0();
    sub_253960288();
    char v79 = v50;
    uint64_t v71 = v44;
    uint64_t v72 = v47;
    uint64_t v73 = v46;
    uint64_t v74 = v49;
    sub_253B067C0();
    sub_2539604DC();
    uint64_t v51 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
    uint64_t v52 = (uint64_t)v78 + v51[5];
    uint64_t v70 = v52;
    uint64_t v53 = type metadata accessor for TranscriptProtoResponseDialog(0);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v52, 1, 1, v53);
    uint64_t v54 = (uint64_t)v78 + v51[6];
    uint64_t v55 = type metadata accessor for TranscriptProtoResponseVisual(0);
    sub_25346CC08(v54, v56, v57, v55);
    uint64_t v58 = (void *)((char *)v78 + v51[7]);
    *uint64_t v58 = 0;
    v58[1] = 0;
    uint64_t v59 = (void *)((char *)v78 + v51[8]);
    *uint64_t v59 = 0;
    v59[1] = 0;
    uint64_t v69 = v51[9];
    *((unsigned char *)v78 + v69) = 2;
    uint64_t v67 = v51[10];
    *((unsigned char *)v78 + v67) = 2;
    uint64_t v60 = (uint64_t)v78 + v51[11];
    uint64_t v61 = type metadata accessor for TranscriptProtoUIType(0);
    sub_25346CC08(v60, v62, v63, v61);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *uint64_t v78 = v76;
    sub_253961BF0(v16, v70, &qword_269CE04B8);
    sub_253961BF0(v77, v54, &qword_269CE04C8);
    swift_bridgeObjectRelease();
    *uint64_t v58 = v71;
    v58[1] = v73;
    swift_bridgeObjectRelease();
    *uint64_t v59 = v72;
    v59[1] = v74;
    *((unsigned char *)v78 + v69) = v79;
    *((unsigned char *)v78 + v67) = a13;
    sub_253961BF0(v75, v60, &qword_269CE04D0);
    sub_253B06820();
    sub_25346CAF4();
    sub_2534659CC();
    v64();
  }
  sub_253578DEC();
  sub_2534847C8();
}

void sub_253AD4FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  TranscriptProtoResponseManifest.init(handwritten:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

uint64_t TranscriptProtoResponseDialogPresentationHint.init(handwritten:)()
{
  sub_253A733C8();
  uint64_t v1 = sub_253B06780();
  sub_253465998();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534AF234();
  v7();
  sub_253578368();
  int v9 = v8();
  if (v9 == *MEMORY[0x263F4C758] || v9 == *MEMORY[0x263F4C750])
  {
    BOOL v11 = v9 != *MEMORY[0x263F4C758];
    sub_2534DA4BC();
    uint64_t result = v12();
    *uint64_t v0 = v11;
  }
  else
  {
    sub_25394EA00();
    uint64_t v13 = sub_2534D969C();
    sub_253A73498(v13, v14);
    uint64_t v15 = *(void (**)(void))(v3 + 8);
    sub_2534DA4BC();
    v15();
    return ((uint64_t (*)(char *, uint64_t))v15)(v6, v1);
  }
  return result;
}

uint64_t sub_253AD5128()
{
  return TranscriptProtoResponseDialogPresentationHint.init(handwritten:)();
}

uint64_t sub_253AD5140()
{
  return ResponseManifest.ResponseDialogPresentationHint.init(transcript:)();
}

uint64_t ResponseParameter.init(transcript:)()
{
  sub_253AF32CC();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_2534D9B1C();
  sub_2535342E8(v0, v1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_253AF23E4();
  sub_253B06960();
  return sub_253AF1980();
}

uint64_t sub_253AD5228()
{
  return ResponseParameter.init(transcript:)();
}

uint64_t sub_253AD5250()
{
  return sub_253A9EBF4();
}

uint64_t TranscriptProtoResponseParameter.init(handwritten:)()
{
  sub_253AF2664();
  uint64_t v3 = sub_253B06970();
  uint64_t v16 = v4;
  uint64_t v17 = v3;
  sub_253B06990();
  sub_253AF2A8C();
  uint64_t v5 = sub_253B06980();
  uint64_t v7 = v6;
  char v8 = sub_253B069B0();
  uint64_t v9 = sub_253B069A0();
  uint64_t v11 = v10;
  char v12 = sub_253B06950();
  type metadata accessor for TranscriptProtoResponseParameter(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)uint64_t v0 = v17;
  *(void *)(v0 + 8) = v16;
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = v5;
  *(void *)(v0 + 40) = v7;
  *(unsigned char *)(v0 + 48) = v8;
  *(void *)(v0 + 56) = v9;
  *(void *)(v0 + 64) = v11;
  *(unsigned char *)(v0 + 72) = v12;
  sub_253B069C0();
  sub_25346CAF4();
  uint64_t v13 = sub_253A3F4E8();
  return v14(v13);
}

uint64_t sub_253AD5354()
{
  return TranscriptProtoResponseParameter.init(handwritten:)();
}

void ResponseDialog.init(transcript:)()
{
}

void sub_253AD5408()
{
}

uint64_t sub_253AD5430()
{
  return sub_253A9EE34();
}

uint64_t TranscriptProtoResponseDialog.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_2534B3258();
  sub_253AF2664();
  sub_253B062C0();
  sub_253AF358C();
  sub_253B062D0();
  sub_253AF2A8C();
  uint64_t v17 = sub_253B06290();
  uint64_t v19 = v18;
  uint64_t v20 = sub_253B062A0();
  uint64_t v22 = v21;
  type metadata accessor for TranscriptProtoResponseDialog(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *char v12 = v13;
  v12[1] = v14;
  v12[2] = v15;
  v12[3] = v16;
  v12[4] = v17;
  v12[5] = v19;
  v12[6] = v20;
  v12[7] = v22;
  sub_253B062E0();
  sub_25346CAF4();
  sub_253A3F4E8();
  sub_253465A14();
  return v25(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10, a11, a12);
}

uint64_t sub_253AD54FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return TranscriptProtoResponseDialog.init(handwritten:)(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10, vars0, vars8);
}

void ResponseVisual.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  sub_253AF325C(v6);
  uint64_t v125 = sub_253B06650();
  sub_253465998();
  uint64_t v118 = v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v124 = (char *)v114 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_253483660();
  uint64_t v11 = type metadata accessor for TranscriptProtoUIConfirmationLabel(v10);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v123 = (uint64_t *)((char *)v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2534B324C();
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  sub_253AF2518(v15, v16, v17, v18, v19, v20, v21, v22, v114[0]);
  uint64_t v23 = sub_253462A5C(&qword_269CDCBF8);
  uint64_t v24 = sub_25346CB4C(v23);
  MEMORY[0x270FA5388](v24);
  uint64_t v126 = (uint64_t)v114 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_253483660();
  uint64_t v128 = type metadata accessor for TranscriptProtoLabel(v26);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v27);
  uint64_t v121 = (uint64_t)v114 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_253483660();
  uint64_t v30 = type metadata accessor for TranscriptProtoUILabel(v29);
  uint64_t v31 = sub_25346CB34(v30);
  uint64_t v33 = v32;
  MEMORY[0x270FA5388](v31);
  sub_2534D8CE4();
  uint64_t v35 = MEMORY[0x270FA5388](v34);
  sub_253AF1D80(v35, v36, v37, v38, v39, v40, v41, v42, v114[0]);
  uint64_t v134 = sub_253B06660();
  sub_253465998();
  uint64_t v127 = v43;
  MEMORY[0x270FA5388](v44);
  uint64_t v120 = (char *)v114 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v46);
  uint64_t v119 = (char *)v114 - v47;
  sub_2534B324C();
  uint64_t v49 = MEMORY[0x270FA5388](v48);
  uint64_t v57 = sub_2536D3028(v49, v50, v51, v52, v53, v54, v55, v56, v114[0]);
  uint64_t v58 = type metadata accessor for TranscriptProtoResponseVisualOptions(v57);
  uint64_t v59 = sub_25346CB4C(v58);
  MEMORY[0x270FA5388](v59);
  v114[3] = (uint64_t)v114 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_253B064E0();
  uint64_t v62 = sub_25346CB4C(v61);
  MEMORY[0x270FA5388](v62);
  sub_25346CB04();
  uint64_t v64 = sub_2534F8208(v63);
  uint64_t v65 = type metadata accessor for TranscriptProtoUIType(v64);
  uint64_t v66 = sub_25346CB34(v65);
  uint64_t v131 = v67;
  MEMORY[0x270FA5388](v66);
  uint64_t v133 = (void (**)(void))((char *)v114 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2534B324C();
  MEMORY[0x270FA5388](v69);
  sub_2534DA430();
  uint64_t v132 = sub_253B06600();
  sub_253465998();
  uint64_t v71 = v70;
  MEMORY[0x270FA5388](v72);
  uint64_t v73 = sub_253AF2CA4();
  uint64_t v74 = *(void *)(v73 + 16);
  uint64_t v135 = v1;
  uint64_t v115 = v5;
  if (v74)
  {
    uint64_t v117 = v33;
    uint64_t v137 = MEMORY[0x263F8EE78];
    uint64_t v75 = v73;
    swift_bridgeObjectRetain();
    sub_253AF2208();
    sub_2539E7F0C();
    unint64_t v76 = (*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
    uint64_t v116 = v75;
    uint64_t v77 = v75 + v76;
    uint64_t v78 = *(void *)(v131 + 72);
    uint64_t v130 = v71 + 32;
    uint64_t v131 = v78;
    while (1)
    {
      sub_253AF1A28(v77, v2);
      sub_253AF21C8();
      sub_253AF1A28(v79, v80);
      sub_253AF3B84();
      ResponseVisual.UIType.init(transcript:)();
      uint64_t v3 = v0;
      sub_253AF1980();
      uint64_t v81 = v137;
      if (v0) {
        goto LABEL_22;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253579380();
        sub_2539E7F0C();
        uint64_t v3 = 0;
        uint64_t v81 = v137;
      }
      unint64_t v82 = *(void *)(v81 + 16);
      if (v82 >= *(void *)(v81 + 24) >> 1)
      {
        sub_2539E7F0C();
        uint64_t v81 = v137;
      }
      *(void *)(v81 + 16) = v82 + 1;
      sub_2535786F4();
      sub_2534D8E14();
      v83();
      uint64_t v137 = v81;
      v77 += v131;
      if (!--v74)
      {
        swift_bridgeObjectRelease();
        uint64_t v5 = v115;
        uint64_t v1 = v135;
        uint64_t v84 = v129;
        uint64_t v33 = v117;
        goto LABEL_12;
      }
    }
  }
  uint64_t v84 = v129;
LABEL_12:
  uint64_t v85 = *(void *)(*(void *)(v5 + 8) + 16);
  uint64_t v86 = MEMORY[0x263F8EE78];
  sub_253AF3890();
  if (v85)
  {
    uint64_t v138 = v86;
    uint64_t v88 = v87;
    swift_bridgeObjectRetain();
    sub_253AF2448();
    sub_2539E7EA8();
    unint64_t v89 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    uint64_t v116 = v88;
    uint64_t v90 = v33;
    uint64_t v33 = v88 + v89;
    uint64_t v131 = *(void *)(v90 + 72);
    uint64_t v130 = v118 + 32;
    LODWORD(v118) = *MEMORY[0x263F4C688];
    uint64_t v117 = v127 + 104;
    uint64_t v133 = (void (**)(void))(v127 + 32);
    while (1)
    {
      sub_253AF1A28(v33, v84);
      uint64_t v91 = sub_253A56AF8();
      sub_253AF1A28(v91, v92);
      uint64_t v93 = v126;
      sub_253961F60(v1, v126, &qword_269CDCBF8);
      uint64_t v94 = sub_2539627D4();
      sub_2534D8B48(v94, v95, v128);
      if (v96) {
        break;
      }
      uint64_t v132 = v85;
      uint64_t v97 = v93;
      uint64_t v98 = v121;
      sub_253AF19D0(v97, v121);
      uint64_t v99 = v122;
      sub_253AF19D0(v98, v122);
      uint64_t v100 = v123;
      sub_253AF1A28(v99, (uint64_t)v123);
      uint64_t v102 = *v100;
      uint64_t v101 = v100[1];
      uint64_t v103 = v100[2];
      uint64_t v104 = v100[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      MEMORY[0x25A265620](v102, v101, v103, v104);
      sub_253AF1980();
      sub_253578E4C();
      sub_2534D8E14();
      v105();
      uint64_t v3 = type metadata accessor for TranscriptProtoUILabel;
      sub_253AF1980();
      uint64_t v84 = v129;
      sub_253AF1980();
      sub_25346CCF8();
      v106();
      uint64_t v107 = *v133;
      sub_2535B4148();
      sub_253AF2F54();
      v107();
      sub_253AF2F54();
      v107();
      sub_253AF3364();
      uint64_t v108 = v138;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253AF1CF4();
        sub_2539E7EA8();
        uint64_t v108 = v138;
      }
      unint64_t v110 = *(void *)(v108 + 16);
      unint64_t v109 = *(void *)(v108 + 24);
      if (v110 >= v109 >> 1)
      {
        sub_253A7363C(v109);
        sub_2539E7EA8();
        uint64_t v108 = v138;
      }
      *(void *)(v108 + 16) = v110 + 1;
      sub_2535786F4();
      sub_25347FA84();
      v107();
      uint64_t v138 = v108;
      v33 += v131;
      uint64_t v85 = v132 - 1;
      uint64_t v1 = v135;
      if (v132 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    sub_253472458(v93, &qword_269CDCBF8);
    uint64_t v136 = v128;
    sub_253462A5C(&qword_269CE5090);
    sub_25396232C();
    sub_25396263C();
    uint64_t v111 = sub_2534D969C();
    *uint64_t v112 = v93;
    v112[1] = (uint64_t)v3;
    sub_253962224(v111, (uint64_t)v112);
    sub_253AF1980();
    sub_253AF1980();
    swift_bridgeObjectRelease();
LABEL_22:
    swift_release();
    sub_253AF1980();
    goto LABEL_25;
  }
LABEL_23:
  sub_253AF39B8();
  type metadata accessor for TranscriptProtoResponseVisual(0);
  sub_253AF2EB8();
  uint64_t v113 = v114[0];
  sub_25395DA50(v33);
  if (!v113)
  {
    sub_253962838();
    sub_253B064C0();
    sub_253AF1980();
    sub_2534F8958();
    sub_253B064F0();
    sub_253AF1980();
    goto LABEL_26;
  }
  sub_253AF1980();
  swift_bridgeObjectRelease();
LABEL_25:
  swift_bridgeObjectRelease();
LABEL_26:
  sub_2534F8A10();
  sub_2534847C8();
}

void ResponseVisual.UIType.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v5 = v4;
  sub_253AF3CC0(v6);
  uint64_t v7 = sub_253B09220();
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_25347FA68(v9, v70[0]);
  uint64_t v10 = sub_253462A5C(&qword_269CE5070);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  uint64_t v73 = (char *)v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_253483660();
  uint64_t v14 = type metadata accessor for TranscriptProtoControlPayload(v13);
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  uint64_t v72 = (uint64_t)v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v17);
  uint64_t v71 = (uint64_t)v70 - v18;
  uint64_t v19 = sub_253483660();
  uint64_t v20 = type metadata accessor for TranscriptProtoPluginSnippetPayload(v19);
  uint64_t v21 = sub_25346CB4C(v20);
  MEMORY[0x270FA5388](v21);
  unint64_t v76 = (uint64_t *)((char *)v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2534B324C();
  MEMORY[0x270FA5388](v23);
  uint64_t v75 = (char *)v70 - v24;
  uint64_t v25 = sub_253483660();
  uint64_t v26 = type metadata accessor for TranscriptProtoLiveActivityPayload(v25);
  uint64_t v27 = sub_25346CB4C(v26);
  MEMORY[0x270FA5388](v27);
  uint64_t v77 = (char *)v70 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v29);
  sub_2534B35DC();
  uint64_t v78 = v30;
  uint64_t v31 = sub_253B06600();
  sub_253465998();
  uint64_t v74 = v32;
  MEMORY[0x270FA5388](v33);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v34);
  uint64_t v35 = sub_253A74194();
  uint64_t v36 = type metadata accessor for TranscriptProtoArchiveViewPayload(v35);
  uint64_t v37 = sub_25346CB4C(v36);
  MEMORY[0x270FA5388](v37);
  sub_2534D8CE4();
  MEMORY[0x270FA5388](v38);
  uint64_t v40 = (char *)v70 - v39;
  type metadata accessor for TranscriptProtoUitype(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v41);
  sub_2534847E0();
  uint64_t v42 = v5;
  sub_25395DC48(v1);
  if (v0)
  {
    sub_253AF1980();
  }
  else
  {
    v70[4] = v2;
    v70[5] = (uint64_t)v40;
    uint64_t v43 = (uint64_t)v75;
    uint64_t v44 = v76;
    v70[1] = v3;
    v70[2] = v31;
    v70[3] = v42;
    sub_2534D9A44();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v47 = (uint64_t)v77;
    uint64_t v46 = v78;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        uint64_t v54 = sub_25353CE60();
        sub_253AF19D0(v54, v55);
        sub_253AF1A28(v46, v47);
        swift_bridgeObjectRetain();
        sub_253B06590();
        sub_253AF1980();
        sub_253AF1980();
        sub_253AF39F0();
        goto LABEL_7;
      case 2:
        uint64_t v56 = sub_25353CE6C();
        sub_253AF19D0(v56, v57);
        sub_253AF1A28(v43, (uint64_t)v44);
        uint64_t v58 = v44;
        uint64_t v59 = *v44;
        unint64_t v60 = v44[1];
        uint64_t v61 = v58[2];
        uint64_t v62 = v58[3];
        sub_25348A9C8(v59, v60);
        swift_bridgeObjectRetain();
        uint64_t v63 = sub_253AF2688();
        MEMORY[0x25A2655D0](v63, v60, v61, v62);
        sub_253AF1980();
        sub_253AF1980();
        sub_253AF1980();
LABEL_7:
        sub_253AF35CC();
        goto LABEL_8;
      case 3:
        uint64_t v66 = v71;
        sub_253AF19D0(v1, v71);
        uint64_t v67 = v72;
        sub_253AF1A28(v66, v72);
        sub_25348A9C8(*(void *)v67, *(void *)(v67 + 8));
        uint64_t v68 = (uint64_t)v73;
        sub_2534ACF74();
        sub_253B09210();
        sub_25395DAF0();
        sub_253472458(v68, &qword_269CE5070);
        sub_253AF2688();
        sub_253B06520();
        sub_253AF1980();
        sub_253AF1980();
        sub_253AF2C0C();
        sub_253AF35CC();
        sub_25353CDD4();
        v69();
        goto LABEL_9;
      default:
        uint64_t v48 = sub_2535925F4();
        sub_253AF19D0(v48, v49);
        uint64_t v50 = sub_253578D20();
        sub_253AF1A28(v50, v51);
        uint64_t v52 = sub_2534D9778();
        sub_25348A9C8(v52, v53);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_2534D9778();
        sub_253B06570();
        sub_253AF1980();
        sub_253AF1980();
        sub_253AF1980();
LABEL_8:
        sub_25353CDD4();
        v64();
LABEL_9:
        sub_253AF32C0();
        v65();
        break;
    }
  }
  sub_253579494();
  sub_2534847C8();
}

void ResponseVisual.UILabel.init(transcript:)()
{
  sub_2535B45A0();
  uint64_t v3 = sub_253971B04();
  uint64_t v4 = type metadata accessor for TranscriptProtoUIConfirmationLabel(v3);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_2534B340C();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_253971BBC();
  uint64_t v8 = type metadata accessor for TranscriptProtoLabel(v7);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  sub_253A3DD74();
  sub_25395DAA0(v10);
  if (v1)
  {
    sub_253AF1980();
  }
  else
  {
    uint64_t v11 = sub_2539627B8();
    sub_253AF19D0(v11, v12);
    sub_253AF2BF4();
    uint64_t v13 = *v2;
    uint64_t v14 = v2[1];
    uint64_t v15 = v2[2];
    uint64_t v16 = v2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    MEMORY[0x25A265620](v13, v14, v15, v16);
    sub_253AF1980();
    sub_253AF1980();
    sub_2534DA154();
    sub_253AF1980();
    uint64_t v17 = *MEMORY[0x263F4C688];
    sub_253B06660();
    sub_25346CAF4();
    (*(void (**)(uint64_t, uint64_t))(v18 + 104))(v0, v17);
  }
  sub_2535B4660();
}

uint64_t ResponseVisual.ResponseVisualOptions.init(transcript:)()
{
  return sub_253AF1980();
}

void sub_253AD678C()
{
}

uint64_t sub_253AD67A4()
{
  return sub_253A9F050();
}

void TranscriptProtoResponseVisual.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  uint64_t v132 = v10;
  uint64_t v13 = v12;
  uint64_t v130 = v14;
  uint64_t v15 = sub_253462A5C(&qword_269CDCBF8);
  uint64_t v16 = sub_25346CB4C(v15);
  MEMORY[0x270FA5388](v16);
  uint64_t v143 = (char *)&v121 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  uint64_t v142 = sub_253B06650();
  sub_253465998();
  uint64_t v19 = v18;
  MEMORY[0x270FA5388](v20);
  uint64_t v141 = (char *)&v121 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v22);
  sub_2534B35DC();
  uint64_t v140 = v23;
  sub_253B06660();
  sub_253465998();
  uint64_t v146 = v24;
  uint64_t v147 = v25;
  MEMORY[0x270FA5388](v24);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v26);
  sub_2534B3318();
  uint64_t v152 = v27;
  sub_2534B324C();
  MEMORY[0x270FA5388](v28);
  uint64_t v29 = sub_2534DA430();
  uint64_t v144 = type metadata accessor for TranscriptProtoUILabel(v29);
  sub_253465998();
  uint64_t v139 = v30;
  MEMORY[0x270FA5388](v31);
  uint64_t v157 = (uint64_t)&v121 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v33);
  uint64_t v156 = (uint64_t)&v121 - v34;
  uint64_t v35 = sub_253483660();
  uint64_t v127 = type metadata accessor for TranscriptProtoResponseVisual(v35);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v36);
  uint64_t v38 = sub_2534F8208((uint64_t)&v121 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v126 = type metadata accessor for TranscriptProtoResponseVisualOptions(v38);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v39);
  uint64_t v125 = (char *)&v121 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_253B064E0();
  sub_253465998();
  uint64_t v129 = v41;
  MEMORY[0x270FA5388](v42);
  sub_2534D8F5C((uint64_t)&v121 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v44 = sub_253462A5C(&qword_269CE04C0);
  uint64_t v45 = sub_25346CB4C(v44);
  MEMORY[0x270FA5388](v45);
  sub_2534F8208((uint64_t)&v121 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_253B06600();
  sub_253465998();
  uint64_t v48 = v47;
  MEMORY[0x270FA5388](v49);
  uint64_t v154 = (char *)&v121 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v51);
  uint64_t v52 = sub_253971BBC();
  uint64_t v53 = type metadata accessor for TranscriptProtoUIType(v52);
  uint64_t v54 = sub_25346CB34(v53);
  uint64_t v153 = v55;
  MEMORY[0x270FA5388](v54);
  sub_2534AF2A0(v56, v121);
  uint64_t v57 = MEMORY[0x25A265500]();
  uint64_t v58 = *(void *)(v57 + 16);
  uint64_t v133 = v13;
  uint64_t v145 = v11;
  if (v58)
  {
    uint64_t v138 = v19;
    a10 = MEMORY[0x263F8EE78];
    sub_253AF2448();
    sub_2539E7454();
    unint64_t v60 = *(uint64_t (***)(uint64_t, uint64_t))(v48 + 16);
    uint64_t v59 = v48 + 16;
    uint64_t v150 = v60;
    unint64_t v61 = (*(unsigned __int8 *)(v59 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 64);
    uint64_t v131 = v57;
    unint64_t v62 = v57 + v61;
    uint64_t v63 = *(void (***)(void))(v59 + 56);
    uint64_t v151 = (void (*)(void))v59;
    uint64_t v148 = v63;
    uint64_t v149 = v59 - 8;
    uint64_t v64 = v132;
    uint64_t v65 = (void (*)(void))v60;
    while (1)
    {
      sub_2534D9B1C();
      sub_253962874();
      v65();
      sub_253962874();
      v65();
      TranscriptProtoUIType.init(handwritten:)();
      if (v64) {
        break;
      }
      sub_2534659CC();
      v66();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253579380();
        sub_2539E7454();
        uint64_t v64 = 0;
      }
      uint64_t v67 = a10;
      unint64_t v68 = *(void *)(a10 + 16);
      if (v68 >= *(void *)(a10 + 24) >> 1)
      {
        sub_253AF3890();
        sub_2539E7454();
        uint64_t v64 = v132;
        uint64_t v67 = a10;
      }
      *(void *)(v67 + 16) = v68 + 1;
      sub_2535786F4();
      uint64_t v72 = v71;
      sub_253AF19D0(v155, v71 + v69 + *(void *)(v70 + 72) * v68);
      v62 += (unint64_t)v148;
      if (!--v58)
      {
        uint64_t v122 = v72;
        sub_253AF3890();
        sub_253AF2BD0();
        sub_253AF2BA8();
        uint64_t v11 = v145;
        uint64_t v74 = v146;
        uint64_t v19 = v138;
        goto LABEL_12;
      }
    }
    sub_2534659CC();
    v73();
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  uint64_t v122 = MEMORY[0x263F8EE78];
  uint64_t v74 = v146;
LABEL_12:
  uint64_t v75 = sub_253B06610();
  unint64_t v76 = *(char **)(v75 + 16);
  if (v76)
  {
    sub_253962624(MEMORY[0x263F8EE78]);
    sub_2539E73F0();
    uint64_t v151 = *(void (**)(void))(v147 + 16);
    sub_253AF3598();
    *(void *)(v77 - 256) = v75;
    uint64_t v138 = *(void *)(v78 + 56);
    uint64_t v150 = (uint64_t (**)(uint64_t, uint64_t))(v78 + 72);
    LODWORD(v149) = *MEMORY[0x263F4C688];
    uint64_t v137 = v78 + 80;
    uint64_t v136 = v19 + 32;
    uint64_t v135 = v19 + 16;
    sub_253AF325C(v19 + 8);
    uint64_t v147 = v80;
    uint64_t v148 = (void (**)(void))(v80 - 8);
    while (1)
    {
      uint64_t v155 = v79;
      uint64_t v81 = v151;
      sub_253A568D4();
      v81();
      sub_2535793C0();
      sub_253A568D4();
      v81();
      uint64_t v82 = type metadata accessor for TranscriptProtoLabel(0);
      sub_253AF1E48(v157, 1);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      sub_253A568D4();
      v81();
      int v83 = (*v150)(v11, v74);
      if (v83 != v149) {
        break;
      }
      uint64_t v154 = v76;
      sub_2534DA678();
      v84(v11, v74);
      sub_2534DA678();
      sub_253AF3204();
      sub_2534D8E14();
      v85();
      sub_2534DA678();
      sub_2534B3428();
      v86();
      uint64_t v153 = sub_253B06630();
      uint64_t v88 = v87;
      uint64_t v89 = sub_253B065E0();
      uint64_t v91 = v90;
      type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
      uint64_t v92 = v143;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *uint64_t v92 = v153;
      v92[1] = v88;
      v92[2] = v89;
      v92[3] = v91;
      uint64_t v153 = v82;
      uint64_t v93 = v146;
      uint64_t v94 = *v134;
      sub_2534DA4BC();
      v94();
      uint64_t v95 = *v148;
      sub_2534F85D4();
      v95();
      char v96 = v95;
      sub_253579328();
      sub_2534DA4BC();
      v94();
      uint64_t v74 = v93;
      uint64_t v97 = v157;
      sub_2534AD3FC();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v98, v99, v100, v153);
      uint64_t v101 = sub_2534DA604();
      sub_253961BF0(v101, v102, &qword_269CDCBF8);
      sub_253AF19D0(v97, v156);
      sub_253A3F354();
      sub_2534F85D4();
      v96();
      uint64_t v103 = a10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253AF1CF4();
        sub_2539E73F0();
        uint64_t v103 = a10;
      }
      uint64_t v104 = v154;
      unint64_t v106 = *(void *)(v103 + 16);
      unint64_t v105 = *(void *)(v103 + 24);
      uint64_t v11 = v145;
      if (v106 >= v105 >> 1)
      {
        sub_2539625A0(v105);
        sub_2539E73F0();
        uint64_t v103 = a10;
      }
      *(void *)(v103 + 16) = v106 + 1;
      sub_253AF3028();
      sub_253AF19D0(v156, v107 + v108 * v106);
      uint64_t v79 = v155 + v138;
      unint64_t v76 = v104 - 1;
      if (!v76)
      {
        sub_253AF2BD0();
        sub_253AF2BA8();
        goto LABEL_24;
      }
    }
    sub_25394EA00();
    uint64_t v109 = sub_2534D969C();
    sub_253A73498(v109, v110);
    uint64_t v111 = *v148;
    sub_2534D954C();
    sub_2534D91AC();
    v111();
    sub_2534D91AC();
    v111();
    sub_253AF1980();
    sub_253A3D03C();
    sub_2534D91AC();
    v111();
    swift_bridgeObjectRelease();
LABEL_23:
    swift_release();
    sub_253B06680();
    sub_25346CAF4();
    sub_2534659CC();
    v112();
    sub_253AF2BD0();
    goto LABEL_25;
  }
  swift_bridgeObjectRelease();
  uint64_t v103 = MEMORY[0x263F8EE78];
LABEL_24:
  uint64_t v113 = v128;
  uint64_t v114 = v127;
  uint64_t v115 = v125;
  uint64_t v116 = v124;
  sub_253962838();
  sub_253B06670();
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  char v117 = sub_253B064D0();
  sub_2534659CC();
  v118();
  *uint64_t v115 = v117 & 1;
  sub_253AF2848();
  sub_253AF1DA4(v116);
  uint64_t v119 = (uint64_t)v113 + *(int *)(v114 + 24);
  sub_253578EBC(v119, 1);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v113 = v122;
  v113[1] = v103;
  sub_253961BF0(v116, v119, &qword_269CE04C0);
  sub_253AF19D0((uint64_t)v113, v130);
  sub_253B06680();
  sub_25346CAF4();
  sub_2534659CC();
  v120();
LABEL_25:
  sub_2534F8A10();
  sub_2534847C8();
}

void TranscriptProtoUIType.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_253B06530();
  sub_253465998();
  uint64_t v106 = v9;
  uint64_t v107 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v104 = (char *)v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v11);
  unint64_t v105 = (char *)v100 - v12;
  sub_253483660();
  sub_253B065F0();
  sub_253465998();
  uint64_t v101 = v14;
  uint64_t v102 = v13;
  MEMORY[0x270FA5388](v13);
  v100[2] = (uint64_t)v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v16);
  v100[3] = (uint64_t)v100 - v17;
  sub_253483660();
  sub_253B065B0();
  sub_253465998();
  uint64_t v109 = v19;
  uint64_t v110 = v18;
  MEMORY[0x270FA5388](v18);
  sub_2534D9C1C();
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  sub_253A56C8C(v21, v22, v23, v24, v25, v26, v27, v28, v100[0]);
  uint64_t v29 = sub_253462A5C(&qword_269CDCC08);
  uint64_t v30 = sub_25346CB4C(v29);
  MEMORY[0x270FA5388](v30);
  uint64_t v103 = (char *)v100 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v32);
  sub_253A737E8();
  sub_253B06580();
  sub_253465998();
  uint64_t v111 = v34;
  uint64_t v112 = v33;
  MEMORY[0x270FA5388](v33);
  sub_25353CE24();
  uint64_t v36 = MEMORY[0x270FA5388](v35);
  sub_253AF2080(v36, v37, v38, v39, v40, v41, v42, v43, v100[0]);
  uint64_t v44 = sub_253B06600();
  sub_253465998();
  uint64_t v46 = v45;
  MEMORY[0x270FA5388](v47);
  uint64_t v48 = sub_25397F55C();
  uint64_t v49 = type metadata accessor for TranscriptProtoUitype(v48);
  uint64_t v50 = sub_253AF1CDC(v7, 1, 1, v49);
  type metadata accessor for TranscriptProtoUIType(v50);
  uint64_t v114 = v7;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253AF283C();
  sub_2534AF234();
  v51();
  sub_253578368();
  int v53 = v52();
  int v54 = *MEMORY[0x263F4C618];
  uint64_t v113 = v49;
  if (v53 == v54)
  {
    sub_253AF2AA4();
    sub_253971A70();
    v55();
    uint64_t v56 = v111;
    sub_253578D38();
    sub_25347FA84();
    v57();
    sub_253AF2870();
    sub_2534AF234();
    v58();
    uint64_t v59 = sub_253B06560();
    uint64_t v109 = v60;
    uint64_t v110 = v59;
    uint64_t v61 = sub_253B06550();
    uint64_t v107 = v62;
    uint64_t v108 = v61;
    sub_253B06540();
    uint64_t v63 = sub_253AF2F60();
    type metadata accessor for TranscriptProtoArchiveViewPayload(v63);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    uint64_t v64 = v109;
    *uint64_t v2 = v110;
    v2[1] = v64;
    uint64_t v65 = v107;
    v2[2] = v108;
    v2[3] = v65;
    v2[4] = v5;
    v2[5] = v0;
    uint64_t v66 = *(void (**)(void))(v56 + 8);
    sub_2534D9A08();
    v66();
    sub_2534D91AC();
    v67();
    sub_2535791E4();
    sub_2534D9A08();
    v66();
    sub_253AF3150();
  }
  else
  {
    uint64_t v68 = v46;
    if (v53 != *MEMORY[0x263F4C620])
    {
      if (v53 == *MEMORY[0x263F4C678])
      {
        sub_253AF2AA4();
        sub_253971A70();
        v77();
        sub_253578D38();
        sub_25347FA84();
        v78();
        sub_253578E4C();
        sub_2534AF234();
        v79();
        uint64_t v80 = (uint64_t *)v103;
        TranscriptProtoControlPayload.init(handwritten:)();
        if (!v1)
        {
          sub_2534D9220();
          v98();
          sub_25351C3E8();
          v99();
          swift_storeEnumTagMultiPayload();
          uint64_t v2 = v80;
          uint64_t v76 = v114;
          goto LABEL_6;
        }
        sub_2534D9220();
        v81();
        sub_25351C3E8();
        v82();
      }
      else
      {
        if (v53 == *MEMORY[0x263F4C628])
        {
          sub_253AF2AA4();
          v100[1] = v44;
          sub_253971A70();
          v83();
          uint64_t v84 = v101;
          sub_253A3F354();
          sub_25347FA84();
          v85();
          sub_253AF3094();
          sub_2535793C0();
          sub_2534AF234();
          v86();
          uint64_t v112 = sub_253B065C0();
          uint64_t v88 = v87;
          uint64_t v89 = sub_253B065E0();
          uint64_t v91 = v90;
          type metadata accessor for TranscriptProtoPluginSnippetPayload(0);
          _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
          *uint64_t v2 = v112;
          v2[1] = v88;
          v2[2] = v89;
          v2[3] = v91;
          uint64_t v92 = *(void (**)(void))(v84 + 8);
          sub_2534DA4BC();
          v92();
          sub_2534F85D4();
          v93();
          sub_2534DA4BC();
          v92();
          sub_253AF3150();
          goto LABEL_5;
        }
        sub_25394EA00();
        uint64_t v94 = sub_2534D969C();
        sub_253A73498(v94, v95);
        char v96 = *(void (**)(void))(v68 + 8);
        sub_2539627B8();
        sub_2534F85D4();
        v96();
        uint64_t v97 = sub_253945CF8();
        ((void (*)(uint64_t))v96)(v97);
      }
      sub_253AF1980();
      goto LABEL_7;
    }
    sub_253AF2AA4();
    sub_253971A70();
    v69();
    uint64_t v70 = v109;
    sub_253AF21E0();
    sub_25347FA84();
    v71();
    sub_2534D96CC();
    sub_2534AF234();
    v72();
    sub_253B065A0();
    uint64_t v73 = sub_253AF2438();
    type metadata accessor for TranscriptProtoLiveActivityPayload(v73);
    sub_253AF2500();
    *uint64_t v2 = v0;
    v2[1] = v3;
    uint64_t v74 = *(void (**)(void))(v70 + 8);
    sub_2534F85D4();
    v74();
    sub_2534D91AC();
    v75();
    sub_253AF21D4();
    sub_2534F85D4();
    v74();
    sub_253AF3150();
  }
LABEL_5:
  swift_storeEnumTagMultiPayload();
  uint64_t v76 = v114;
LABEL_6:
  sub_253AF1DA4((uint64_t)v2);
  sub_253961BF0((uint64_t)v2, v76, &qword_269CDCC08);
LABEL_7:
  sub_253579494();
  sub_2534847C8();
}

void TranscriptProtoUILabel.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v2 = v1;
  uint64_t v3 = sub_253462A5C(&qword_269CDCBF8);
  uint64_t v4 = sub_25346CB4C(v3);
  MEMORY[0x270FA5388](v4);
  sub_25348360C();
  sub_253B06650();
  sub_253465998();
  uint64_t v38 = v5;
  MEMORY[0x270FA5388](v6);
  sub_25353CE24();
  MEMORY[0x270FA5388](v7);
  sub_253AF33D0();
  sub_253B06660();
  sub_253465998();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_25397F55C();
  type metadata accessor for TranscriptProtoLabel(v11);
  sub_253465A98();
  uint64_t v37 = v12;
  uint64_t v16 = sub_253AF1CDC(v13, v14, v15, v12);
  type metadata accessor for TranscriptProtoUILabel(v16);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253AF283C();
  sub_2534AF234();
  v17();
  sub_253578368();
  if (v18() == *MEMORY[0x263F4C688])
  {
    sub_253AF2AA4();
    sub_253971A70();
    v19();
    sub_25347FA84();
    v20();
    sub_253AF2300();
    sub_2534AF234();
    v21();
    uint64_t v22 = sub_253B06630();
    uint64_t v35 = v23;
    uint64_t v36 = v22;
    uint64_t v24 = sub_253B065E0();
    uint64_t v26 = v25;
    type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *uint64_t v0 = v36;
    v0[1] = v35;
    v0[2] = v24;
    v0[3] = v26;
    uint64_t v27 = *(void (**)(void))(v38 + 8);
    sub_2535793C0();
    sub_25351C3E8();
    v27();
    sub_2534DA4BC();
    v28();
    sub_25351C3E8();
    v27();
    sub_2534AD3FC();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v29, v30, v31, v37);
    sub_253961BF0((uint64_t)v0, v2, &qword_269CDCBF8);
  }
  else
  {
    sub_25394EA00();
    uint64_t v32 = sub_2534D969C();
    sub_253A73498(v32, v33);
    uint64_t v34 = *(void (**)(void))(v9 + 8);
    sub_2534DA4BC();
    v34();
    sub_253579270();
    sub_2534DA4BC();
    v34();
    sub_253AF1980();
  }
  sub_253579494();
  sub_2534847C8();
}

uint64_t TranscriptProtoResponseVisualOptions.init(handwritten:)()
{
  uint64_t v1 = sub_253AF226C();
  type metadata accessor for TranscriptProtoResponseVisualOptions(v1);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  char v2 = sub_253B064D0();
  sub_253B064E0();
  sub_25346CAF4();
  sub_2534659CC();
  uint64_t result = v3();
  *uint64_t v0 = v2 & 1;
  return result;
}

void sub_253AD7C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  TranscriptProtoResponseVisual.init(handwritten:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void ResponseVisual.UIType.ArchivedViewPayload.init(transcript:)()
{
  sub_2535B3C98();
  sub_253AF32CC();
  sub_25348A9C8(v0, v1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_253AF23E4();
  sub_253B06570();
  sub_253AF1980();
  sub_25346CD04();
}

uint64_t ResponseVisual.UIType.LiveActivityPayload.init(transcript:)()
{
  return sub_253AD8E88();
}

void ResponseVisual.UIType.PluginSnippetPayload.init(transcript:)()
{
}

void ResponseVisual.UIType.ControlPayload.init(transcript:)()
{
  sub_2535B4280();
  sub_253AF226C();
  uint64_t v2 = sub_253B09220();
  uint64_t v3 = sub_25346CB4C(v2);
  MEMORY[0x270FA5388](v3);
  sub_253465A3C();
  uint64_t v4 = sub_253462A5C(&qword_269CE5070);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_2534847E0();
  uint64_t v6 = sub_2536D500C();
  sub_25348A9C8(v6, v7);
  sub_2536D500C();
  sub_253B09210();
  sub_25395DAF0();
  if (v0)
  {
    sub_253AF1980();
    sub_253472458(v1, &qword_269CE5070);
  }
  else
  {
    sub_253472458(v1, &qword_269CE5070);
    sub_253B06520();
    sub_253AF1980();
  }
  sub_2536D4AAC();
  sub_2535B42DC();
}

void sub_253AD7E74()
{
}

uint64_t sub_253AD7E8C()
{
  return sub_253A9F208();
}

uint64_t ResponseVisual.UILabel.UIConfirmationPayload.init(transcript:)(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x25A265620](v1, v2, v3, v4);
  return sub_253AF1980();
}

void sub_253AD7F24()
{
}

uint64_t sub_253AD7F3C()
{
  return sub_253A9F3C0();
}

uint64_t TranscriptProtoUIConfirmationLabel.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_253AD9CF8(a1, MEMORY[0x263F4C690], MEMORY[0x263F4C698], (uint64_t)type metadata accessor for TranscriptProtoUIConfirmationLabel, MEMORY[0x263F4C6A0], a6, a7, a8, a9, a10);
}

void sub_253AD7FA8()
{
}

uint64_t sub_253AD7FC0()
{
  return ResponseVisual.ResponseVisualOptions.init(transcript:)();
}

uint64_t sub_253AD7FD8()
{
  return sub_253A9F578();
}

uint64_t sub_253AD7FF0()
{
  return TranscriptProtoResponseVisualOptions.init(handwritten:)();
}

uint64_t sub_253AD8008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return TranscriptProtoUIConfirmationLabel.init(handwritten:)(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
}

uint64_t sub_253AD8030(uint64_t *a1)
{
  return ResponseVisual.UILabel.UIConfirmationPayload.init(transcript:)(a1);
}

uint64_t sub_253AD8058()
{
  return sub_253A9F790();
}

uint64_t TranscriptProtoArchiveViewPayload.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2535B3C98();
  sub_253AF2664();
  sub_253B06560();
  sub_253AF358C();
  sub_253B06550();
  sub_253AF2A8C();
  sub_253B06540();
  uint64_t v17 = sub_253AF3328();
  type metadata accessor for TranscriptProtoArchiveViewPayload(v17);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  v10[5] = v16;
  sub_253B06580();
  sub_25346CAF4();
  sub_253A3F4E8();
  sub_25346CD04();
  return v20(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10);
}

uint64_t TranscriptProtoLiveActivityPayload.init(handwritten:)@<X0>(void *a1@<X8>)
{
  return sub_253AD9B9C(MEMORY[0x263F4C648], (void (*)(void))type metadata accessor for TranscriptProtoLiveActivityPayload, MEMORY[0x263F4C650], a1);
}

uint64_t TranscriptProtoPluginSnippetPayload.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_253AD9CF8(a1, MEMORY[0x263F4C658], MEMORY[0x263F4C668], (uint64_t)type metadata accessor for TranscriptProtoPluginSnippetPayload, MEMORY[0x263F4C670], a6, a7, a8, a9, a10);
}

void TranscriptProtoControlPayload.init(handwritten:)()
{
  sub_2535B45A0();
  sub_253AF2A80();
  sub_253AF2290();
  sub_253B09220();
  sub_253465998();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253B06510();
  sub_253B09200();
  sub_253AF31D8();
  sub_253578D20();
  sub_2534D97B4();
  v5();
  if (v1 >> 60 == 15)
  {
    v9[1] = MEMORY[0x263F06F78];
    sub_253462A5C(&qword_269CE8728);
    sub_253AF1E74();
    sub_253AF3940();
    uint64_t v6 = sub_2534D969C();
    *unint64_t v7 = v4;
    v7[1] = v0;
    sub_253962224(v6, (uint64_t)v7);
  }
  else
  {
    type metadata accessor for TranscriptProtoControlPayload(0);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *uint64_t v0 = v4;
    v0[1] = v1;
  }
  sub_253B06530();
  sub_25346CAF4();
  sub_2534659CC();
  v8();
  sub_2535B4660();
}

void sub_253AD82E4()
{
}

void sub_253AD82FC()
{
}

uint64_t sub_253AD8324()
{
  return sub_253A9F980();
}

uint64_t sub_253AD833C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return TranscriptProtoArchiveViewPayload.init(handwritten:)(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
}

uint64_t sub_253AD8364()
{
  return ResponseVisual.UIType.LiveActivityPayload.init(transcript:)();
}

uint64_t sub_253AD838C()
{
  return sub_253A9FB88();
}

uint64_t sub_253AD83A4@<X0>(void *a1@<X8>)
{
  return TranscriptProtoLiveActivityPayload.init(handwritten:)(a1);
}

void sub_253AD83CC()
{
}

uint64_t sub_253AD83F4()
{
  return sub_253A9FD60();
}

uint64_t sub_253AD840C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return TranscriptProtoPluginSnippetPayload.init(handwritten:)(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
}

void sub_253AD8434()
{
}

uint64_t sub_253AD844C()
{
  return sub_253A9FF50();
}

void sub_253AD8464()
{
}

uint64_t sub_253AD847C()
{
  return TranscriptProtoResponseType.init(handwritten:)();
}

uint64_t ResponseOutput.ResponseType.init(transcript:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  if (*a1)
  {
    if (*a1 == 1) {
      uint64_t v3 = (unsigned int *)MEMORY[0x263F4C5C8];
    }
    else {
      uint64_t v3 = (unsigned int *)MEMORY[0x263F4C5C0];
    }
  }
  else
  {
    uint64_t v3 = (unsigned int *)MEMORY[0x263F4C5B8];
  }
  uint64_t v4 = *v3;
  sub_253B06440();
  sub_25346CAF4();
  unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 104);
  return v7(a2, v4, v5);
}

uint64_t sub_253AD8528()
{
  return TranscriptProtoVisualOutputOptions.init(handwritten:)();
}

void TranscriptProtoDialogType.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  uint64_t v4 = sub_253462A5C(&qword_269CE2050);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_25348360C();
  sub_253B06450();
  sub_253465998();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_2534B33AC();
  uint64_t v10 = type metadata accessor for TranscriptProtoDialogFormat(v9);
  uint64_t v11 = sub_253AF1CDC(v3, 1, 1, v10);
  type metadata accessor for TranscriptProtoDialogType(v11);
  sub_2539457F0();
  sub_2535B4148();
  sub_2534AF234();
  v12();
  sub_253578368();
  int v14 = v13();
  if (v14 == *MEMORY[0x263F4C5D8])
  {
    sub_253971A70();
    v15();
    uint64_t v17 = *v1;
    uint64_t v16 = v1[1];
    type metadata accessor for TranscriptProtoStaticText(0);
    sub_253AF2500();
    *uint64_t v0 = v17;
    v0[1] = v16;
  }
  else if (v14 == *MEMORY[0x263F4C5D0])
  {
    sub_253971A70();
    v18();
    uint64_t v20 = *v1;
    uint64_t v19 = v1[1];
    type metadata accessor for TranscriptProtoCATDialog(0);
    sub_253AF2500();
    *uint64_t v0 = v20;
    v0[1] = v19;
  }
  else if (v14 == *MEMORY[0x263F4C5F0])
  {
    sub_253971A70();
    v21();
    uint64_t v23 = *v1;
    uint64_t v22 = v1[1];
    type metadata accessor for TranscriptProtoSonicText(0);
    sub_253AF2500();
    *uint64_t v0 = v23;
    v0[1] = v22;
  }
  else if (v14 == *MEMORY[0x263F4C5F8])
  {
    sub_253971A70();
    v24();
    uint64_t v26 = *v1;
    uint64_t v25 = v1[1];
    type metadata accessor for TranscriptProtoGeneratedText(0);
    sub_253AF2500();
    *uint64_t v0 = v26;
    v0[1] = v25;
  }
  else
  {
    if (v14 != *MEMORY[0x263F4C5E8] && v14 != *MEMORY[0x263F4C5E0])
    {
      sub_25394EA00();
      uint64_t v28 = sub_2534D969C();
      sub_253A73498(v28, v29);
      uint64_t v30 = *(void (**)(void))(v7 + 8);
      sub_2534D97B4();
      v30();
      sub_2534D97B4();
      v30();
      sub_253AF1980();
      goto LABEL_13;
    }
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  }
  sub_2534D97B4();
  v27();
  sub_2534D954C();
  swift_storeEnumTagMultiPayload();
  sub_253AF1DA4((uint64_t)v0);
  sub_253961BF0((uint64_t)v0, v3, &qword_269CE2050);
LABEL_13:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_253AD887C()
{
}

void ResponseOutput.VisualOutput.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v9 = sub_253AF258C(v8);
  uint64_t v10 = type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(v9);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  uint64_t v69 = (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  sub_253AF3C28(v14, v15, v16, v17, v18, v19, v20, v21, v61[0]);
  uint64_t v22 = sub_253462A5C(&qword_269CE5120);
  uint64_t v23 = sub_25346CB4C(v22);
  MEMORY[0x270FA5388](v23);
  uint64_t v64 = (char *)v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_253483660();
  uint64_t v26 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(v25);
  uint64_t v27 = sub_25346CB4C(v26);
  MEMORY[0x270FA5388](v27);
  uint64_t v65 = (uint64_t)v61 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_253483660();
  uint64_t v30 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(v29);
  uint64_t v31 = sub_25346CB4C(v30);
  MEMORY[0x270FA5388](v31);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v32);
  sub_2534DA41C();
  uint64_t v33 = sub_253B063E0();
  sub_253465998();
  uint64_t v66 = v34;
  MEMORY[0x270FA5388](v35);
  uint64_t v36 = sub_25397F55C();
  uint64_t v37 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(v36);
  uint64_t v38 = sub_25346CB4C(v37);
  MEMORY[0x270FA5388](v38);
  sub_2534B340C();
  MEMORY[0x270FA5388](v39);
  uint64_t v40 = sub_253971BBC();
  type metadata accessor for TranscriptProtoVisualOutputType(v40);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v41);
  sub_253AF2110();
  sub_25395DA00(v42);
  if (v2)
  {
    sub_253AF1980();
  }
  else
  {
    uint64_t v62 = v4;
    uint64_t v63 = v3;
    uint64_t v43 = v68;
    uint64_t v44 = (uint64_t)v69;
    v61[0] = v0;
    v61[1] = v1;
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v46 = v63;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        uint64_t v49 = sub_253AF21E0();
        sub_253AF19D0(v49, v50);
        sub_253AF1A28(v46, v6);
        swift_bridgeObjectRetain();
        uint64_t v48 = v61[0];
        sub_253B06310();
        sub_253AF1980();
        sub_253AF1980();
        sub_2534DA034();
        sub_253AF1980();
        goto LABEL_10;
      case 2:
        sub_253AF19D0(v7, v65);
        sub_253AF369C();
        sub_253B063D0();
        uint64_t v51 = sub_2536D54B0();
        sub_2534D8B48(v51, v52, v33);
        if (v53)
        {
          sub_253472458(v44, &qword_269CE5120);
          sub_25394EA00();
          uint64_t v54 = sub_2534D969C();
          sub_253A73498(v54, v55);
          sub_253AF1980();
          sub_253AF1980();
        }
        else
        {
          sub_253AF1980();
          sub_253AF1980();
          uint64_t v48 = v44;
          uint64_t v60 = v66;
          uint64_t v59 = v67;
LABEL_11:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 32))(v59, v48, v33);
        }
        break;
      case 3:
        sub_253AF19D0(v7, v43);
        sub_253AF1A28(v43, v44);
        uint64_t v56 = sub_253945CF8();
        sub_25348A9C8(v56, v57);
        swift_bridgeObjectRetain();
        uint64_t v48 = v61[0];
        sub_253B06350();
        sub_253AF1980();
        sub_253AF1980();
        sub_253AF39F0();
        goto LABEL_10;
      default:
        uint64_t v47 = v62;
        sub_253AF19D0(v7, v62);
        sub_253AF1A28(v47, v5);
        swift_bridgeObjectRetain();
        uint64_t v48 = v61[0];
        sub_253AF2860();
        sub_253B06310();
        sub_253AF1980();
        sub_253AF1980();
        sub_253AF39F0();
LABEL_10:
        uint64_t v60 = v66;
        sub_253AF34B0();
        sub_25353CDD4();
        v58();
        uint64_t v59 = v67;
        goto LABEL_11;
    }
  }
  sub_253578DEC();
  sub_2534847C8();
}

uint64_t ResponseOutput.VisualOutput.LiveActivityOutputPayload.init(transcript:)()
{
  return sub_253AD8E88();
}

uint64_t sub_253AD8E88()
{
  sub_253AF2E74();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_2534D9B1C();
  v0(v1);
  return sub_253AF1980();
}

uint64_t ResponseOutput.VisualOutput.InAppResponseOutputPayload.init(transcript:)()
{
  return sub_253AD8E88();
}

void ResponseOutput.VisualOutput.PluginSnippetOutputPayload.init(transcript:)()
{
}

void sub_253AD8F34()
{
  sub_2535B3C98();
  sub_253AF2E74();
  uint64_t v1 = sub_2534D9B1C();
  sub_25348A9C8(v1, v2);
  swift_bridgeObjectRetain();
  sub_2534D9B1C();
  sub_253AF356C();
  v0();
  sub_253AF1980();
  sub_25346CD04();
}

void sub_253AD8F98()
{
}

uint64_t sub_253AD8FB0()
{
  return sub_253AA025C();
}

void TranscriptProtoVisualOutput.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v55 = v0;
  uint64_t v4 = v3;
  sub_253AF226C();
  sub_253B06370();
  sub_253465998();
  uint64_t v51[2] = v6;
  v51[3] = v5;
  MEMORY[0x270FA5388](v5);
  v51[1] = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  sub_253B06390();
  sub_253465998();
  v51[5] = v9;
  v51[6] = v8;
  MEMORY[0x270FA5388](v8);
  v51[4] = (char *)v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  sub_253B063C0();
  sub_253465998();
  uint64_t v52 = v12;
  char v53 = v11;
  MEMORY[0x270FA5388](v11);
  v51[7] = (char *)v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_253483660();
  type metadata accessor for TranscriptProtoVisualOutput(v14);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v15);
  sub_2534B33AC();
  uint64_t v54 = sub_253B06330();
  sub_253465998();
  MEMORY[0x270FA5388](v16);
  sub_25397F55C();
  uint64_t v17 = sub_253B063E0();
  sub_253465998();
  uint64_t v19 = v18;
  MEMORY[0x270FA5388](v20);
  uint64_t v21 = sub_25349888C();
  uint64_t v22 = type metadata accessor for TranscriptProtoVisualOutputType(v21);
  sub_25346CC08(v1, v23, v24, v22);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253971B90();
  sub_253AF21D4();
  sub_2534AF234();
  v25();
  sub_253578368();
  int v27 = v26();
  if (v27 == *MEMORY[0x263F4C598])
  {
    sub_253971A70();
    v28();
    sub_253579264();
    sub_25347FA84();
    uint64_t v30 = v29();
    char v53 = v51;
    MEMORY[0x270FA5388](v30);
    sub_253AF1A80(&qword_269CE1FD0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVisualOutput);
    sub_253B07400();
    sub_2534DA154();
    sub_2534D9A08();
    v31();
    uint64_t v32 = v1;
    sub_253AF1980();
    uint64_t v33 = sub_253579264();
LABEL_5:
    v34(v33);
    goto LABEL_11;
  }
  uint64_t v54 = v4;
  if (v27 == *MEMORY[0x263F4C590])
  {
    sub_253971A70();
    v35();
    sub_253578DF8();
    sub_25347FA84();
    uint64_t v37 = v36();
    MEMORY[0x270FA5388](v37);
    sub_253AF30C4((uint64_t)v51);
    sub_253AF1A80(&qword_269CE1FD0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVisualOutput);
    sub_253AF398C();
    sub_2534D9A08();
    v38();
    uint64_t v32 = v1;
    sub_253AF1980();
    uint64_t v33 = sub_2534D9B10();
    goto LABEL_5;
  }
  if (v27 == *MEMORY[0x263F4C5A8])
  {
    sub_253971A70();
    v39();
    sub_253578DF8();
    sub_25347FA84();
    uint64_t v41 = v40();
    MEMORY[0x270FA5388](v41);
    sub_253AF30C4((uint64_t)v51);
    sub_253AF1A80(&qword_269CE1FD0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVisualOutput);
    sub_253AF398C();
  }
  else
  {
    if (v27 != *MEMORY[0x263F4C5A0])
    {
      sub_25394EA00();
      uint64_t v48 = sub_2534D969C();
      sub_253A73498(v48, v49);
      uint64_t v50 = *(void (**)(void))(v19 + 8);
      sub_2536D3880();
      sub_2534D9A08();
      v50();
      sub_253AF1980();
      sub_2534F8958();
      sub_2534D9A08();
      v50();
      goto LABEL_12;
    }
    sub_253971A70();
    v42();
    sub_253578DF8();
    sub_25347FA84();
    uint64_t v44 = v43();
    char v53 = v51;
    MEMORY[0x270FA5388](v44);
    uint64_t v52 = v17;
    sub_253AF30C4((uint64_t)v51);
    sub_253AF1A80(&qword_269CE1FD0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVisualOutput);
    sub_253B07400();
  }
  sub_2534D9A08();
  v45();
  uint64_t v32 = v1;
  sub_253AF1980();
  uint64_t v46 = sub_253578DF8();
  v47(v46);
LABEL_11:
  sub_253AF19D0(v2, v32);
LABEL_12:
  sub_2534F8A10();
  sub_2534847C8();
}

void sub_253AD9690()
{
  sub_2535B45A0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = sub_253462A5C(&qword_269CDCC18);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_2534B34A4();
  uint64_t v7 = v4();
  uint64_t v9 = v8;
  v2(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v0 = v7;
  v0[1] = v9;
  type metadata accessor for TranscriptProtoVisualOutputType(0);
  sub_2534DA604();
  swift_storeEnumTagMultiPayload();
  sub_2534AF368((uint64_t)v0);
  sub_253AF2634();
  sub_253961BF0(v10, v11, v12);
  sub_2536D30A0();
  sub_2535B4660();
}

uint64_t sub_253AD9768(uint64_t a1)
{
  uint64_t v2 = sub_253B05CC0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_253462A5C(&qword_269CDCC18);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (void *)((char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_253B06380();
  sub_253AF1A80(&qword_269CE8C58, MEMORY[0x263F4C1E0]);
  uint64_t v9 = sub_253B05660();
  unint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v11 >> 60 == 15)
  {
    uint64_t v9 = 0;
    unint64_t v12 = 0xC000000000000000;
  }
  else
  {
    unint64_t v12 = v11;
  }
  type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v8 = v9;
  v8[1] = v12;
  uint64_t v13 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v13);
  return sub_253961BF0((uint64_t)v8, a1, &qword_269CDCC18);
}

uint64_t sub_253AD9954(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDCC18);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_253B06340();
  uint64_t v7 = v6;
  uint64_t v8 = sub_253B06360();
  uint64_t v10 = v9;
  type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v4 = v5;
  v4[1] = v7;
  v4[2] = v8;
  v4[3] = v10;
  uint64_t v11 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  swift_storeEnumTagMultiPayload();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v4, 0, 1, v11);
  return sub_253961BF0((uint64_t)v4, a1, &qword_269CDCC18);
}

void sub_253AD9A5C()
{
}

uint64_t sub_253AD9A74()
{
  return ResponseOutput.VisualOutput.LiveActivityOutputPayload.init(transcript:)();
}

uint64_t sub_253AD9A9C()
{
  return sub_253AA0414();
}

uint64_t TranscriptProtoLiveActivityOutputPayload.init(handwritten:)@<X0>(void *a1@<X8>)
{
  return sub_253AD9B9C(MEMORY[0x263F4C548], (void (*)(void))type metadata accessor for TranscriptProtoLiveActivityOutputPayload, MEMORY[0x263F4C550], a1);
}

uint64_t sub_253AD9AF4@<X0>(void *a1@<X8>)
{
  return TranscriptProtoLiveActivityOutputPayload.init(handwritten:)(a1);
}

uint64_t sub_253AD9B1C()
{
  return ResponseOutput.VisualOutput.InAppResponseOutputPayload.init(transcript:)();
}

uint64_t sub_253AD9B44()
{
  return sub_253AA05EC();
}

uint64_t TranscriptProtoInAppResponseOutputPayload.init(handwritten:)@<X0>(void *a1@<X8>)
{
  return sub_253AD9B9C(MEMORY[0x263F4C580], (void (*)(void))type metadata accessor for TranscriptProtoInAppResponseOutputPayload, MEMORY[0x263F4C588], a1);
}

uint64_t sub_253AD9B9C@<X0>(void (*a1)(void)@<X1>, void (*a2)(void)@<X2>, void (*a3)(void)@<X3>, void *a4@<X8>)
{
  a1();
  sub_253AF2A8C();
  a2(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *a4 = v4;
  a4[1] = v5;
  a3(0);
  sub_25346CAF4();
  uint64_t v9 = sub_253A3F4E8();
  return v10(v9);
}

uint64_t sub_253AD9C3C@<X0>(void *a1@<X8>)
{
  return TranscriptProtoInAppResponseOutputPayload.init(handwritten:)(a1);
}

void sub_253AD9C64()
{
}

uint64_t sub_253AD9C8C()
{
  return sub_253AA07C4();
}

uint64_t TranscriptProtoPluginSnippetOutputPayload.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_253AD9CF8(a1, MEMORY[0x263F4C558], MEMORY[0x263F4C568], (uint64_t)type metadata accessor for TranscriptProtoPluginSnippetOutputPayload, MEMORY[0x263F4C570], a6, a7, a8, a9, a10);
}

uint64_t sub_253AD9CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2535B3C98();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  v20();
  sub_253AF3C1C();
  uint64_t v21 = v17();
  uint64_t v23 = v22;
  v15(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v19 = v10;
  v19[1] = v11;
  void v19[2] = v21;
  void v19[3] = v23;
  v13(0);
  sub_25346CAF4();
  sub_253A3F4E8();
  sub_25346CD04();
  return v26(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10);
}

uint64_t sub_253AD9DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return TranscriptProtoPluginSnippetOutputPayload.init(handwritten:)(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
}

void ResponseOutput.DialogType.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v53 = v1;
  uint64_t v8 = sub_253962754(v7);
  uint64_t v9 = type metadata accessor for TranscriptProtoGeneratedText(v8);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v52 = (uint64_t *)((char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_253483660();
  uint64_t v13 = type metadata accessor for TranscriptProtoSonicText(v12);
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  uint64_t v15 = sub_2534B33AC();
  uint64_t v16 = type metadata accessor for TranscriptProtoCATDialog(v15);
  uint64_t v17 = sub_25346CB4C(v16);
  MEMORY[0x270FA5388](v17);
  sub_25349888C();
  sub_253B06450();
  sub_253465998();
  uint64_t v54 = v18;
  uint64_t v55 = v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = sub_2534D9C00();
  uint64_t v21 = type metadata accessor for TranscriptProtoStaticText(v20);
  uint64_t v22 = sub_25346CB4C(v21);
  MEMORY[0x270FA5388](v22);
  sub_25347FAAC();
  uint64_t v23 = sub_253462A5C(&qword_269CE2050);
  uint64_t v24 = sub_25346CB4C(v23);
  MEMORY[0x270FA5388](v24);
  uint64_t v25 = sub_2534AF2D8();
  uint64_t v26 = type metadata accessor for TranscriptProtoDialogFormat(v25);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v27);
  sub_25346CC54();
  uint64_t v28 = sub_25353CE60();
  sub_253961F60(v28, v29, &qword_269CE2050);
  sub_2534D8B48(v2, 1, v26);
  if (v30)
  {
    sub_253472458(v2, &qword_269CE2050);
    sub_253462A5C(&qword_269CE8730);
    sub_253AF1E74();
    sub_25396263C();
    uint64_t v31 = sub_2534D969C();
    *uint64_t v32 = v26;
    v32[1] = v0;
    sub_253962224(v31, (uint64_t)v32);
LABEL_9:
    sub_253AF1980();
  }
  else
  {
    sub_253AF19D0(v2, v0);
    sub_253AF1980();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 1:
        uint64_t v36 = sub_2536D500C();
        sub_253AF19D0(v36, v37);
        uint64_t v39 = *v4;
        uint64_t v38 = v4[1];
        swift_bridgeObjectRetain();
        sub_253AF1980();
        *uint64_t v3 = v39;
        v3[1] = v38;
        break;
      case 2:
        uint64_t v40 = v52;
        sub_253AF19D0(v0, (uint64_t)v52);
        uint64_t v42 = *v40;
        uint64_t v41 = v40[1];
        swift_bridgeObjectRetain();
        sub_253AF1980();
        *uint64_t v3 = v42;
        v3[1] = v41;
        break;
      case 3:
      case 4:
        sub_25346CCF8();
        v43();
        goto LABEL_9;
      case 5:
        uint64_t v44 = sub_253AF2A54();
        sub_253AF19D0(v44, v45);
        uint64_t v47 = *v5;
        uint64_t v46 = v5[1];
        swift_bridgeObjectRetain();
        sub_253AF1980();
        *uint64_t v3 = v47;
        v3[1] = v46;
        break;
      default:
        sub_253AF19D0(v0, (uint64_t)v6);
        uint64_t v35 = *v6;
        uint64_t v34 = v6[1];
        swift_bridgeObjectRetain();
        sub_253AF1980();
        *uint64_t v3 = v35;
        v3[1] = v34;
        break;
    }
    uint64_t v49 = v54;
    uint64_t v48 = v55;
    sub_25353CDD4();
    v50();
    (*(void (**)(uint64_t, void *, uint64_t))(v48 + 32))(v56, v3, v49);
  }
  sub_253579494();
  sub_2534847C8();
}

void sub_253ADA264()
{
}

uint64_t sub_253ADA27C()
{
  return sub_253AA09B4();
}

void AST.FlatExpr.init(transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ValueMetadata *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_2534847F8();
  a19 = v27;
  a20 = v28;
  uint64_t v259 = v21;
  uint64_t v30 = v29;
  uint64_t v32 = sub_253AF3CC0(v31);
  uint64_t updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(v32);
  uint64_t v34 = sub_25346CB34(updated);
  uint64_t v229 = v35;
  MEMORY[0x270FA5388](v34);
  uint64_t v253 = (uint64_t)v225 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v37);
  uint64_t v252 = (uint64_t)v225 - v38;
  uint64_t v39 = sub_253483660();
  uint64_t v40 = type metadata accessor for AST.Update(v39);
  uint64_t v41 = sub_25346CB34(v40);
  uint64_t v250 = v42;
  MEMORY[0x270FA5388](v41);
  uint64_t v258 = (char *)v225 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_253483660();
  uint64_t v45 = type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(v44);
  uint64_t v46 = sub_25346CB4C(v45);
  MEMORY[0x270FA5388](v46);
  uint64_t v249 = (void *)((char *)v225 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v48 = sub_253483660();
  uint64_t v49 = type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(v48);
  uint64_t v50 = sub_25346CB4C(v49);
  MEMORY[0x270FA5388](v50);
  uint64_t v246 = (uint64_t)v225 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_253483660();
  uint64_t v53 = type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(v52);
  uint64_t v54 = sub_25346CB4C(v53);
  MEMORY[0x270FA5388](v54);
  uint64_t v245 = (uint64_t)v225 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_253483660();
  uint64_t v57 = type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(v56);
  uint64_t v58 = sub_25346CB4C(v57);
  MEMORY[0x270FA5388](v58);
  uint64_t v247 = (uint64_t)v225 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_253483660();
  uint64_t v61 = type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(v60);
  uint64_t v62 = sub_25346CB4C(v61);
  MEMORY[0x270FA5388](v62);
  sub_25346CB04();
  uint64_t v242 = v63;
  uint64_t v64 = sub_253483660();
  uint64_t v65 = type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(v64);
  uint64_t v66 = sub_25346CB4C(v65);
  MEMORY[0x270FA5388](v66);
  uint64_t v243 = (uint64_t)v225 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_253483660();
  uint64_t v69 = type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(v68);
  uint64_t v70 = sub_25346CB4C(v69);
  MEMORY[0x270FA5388](v70);
  uint64_t v72 = sub_2534F8208((uint64_t)v225 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v73 = type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(v72);
  uint64_t v74 = sub_25346CB4C(v73);
  MEMORY[0x270FA5388](v74);
  uint64_t v241 = (uint64_t)v225 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_253483660();
  uint64_t v77 = type metadata accessor for TranscriptProtoASTPickType(v76);
  uint64_t v78 = sub_25346CB4C(v77);
  MEMORY[0x270FA5388](v78);
  sub_25346CB04();
  uint64_t v80 = sub_2534F8208(v79);
  uint64_t v226 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(v80);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v81);
  sub_25346CB04();
  uint64_t v244 = v82;
  uint64_t v83 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v84 = sub_25346CB4C(v83);
  MEMORY[0x270FA5388](v84);
  sub_2534F823C();
  MEMORY[0x270FA5388](v85);
  sub_2534F823C();
  MEMORY[0x270FA5388](v86);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v87);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v88);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v89);
  sub_2534F823C();
  MEMORY[0x270FA5388](v90);
  uint64_t v251 = (char *)v225 - v91;
  sub_2534B324C();
  MEMORY[0x270FA5388](v92);
  sub_253AF225C((uint64_t)v225 - v93);
  sub_253B055C0();
  sub_253465998();
  uint64_t v254 = v95;
  uint64_t v255 = v94;
  MEMORY[0x270FA5388](v94);
  uint64_t v257 = (char *)v225 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_253483660();
  uint64_t v98 = type metadata accessor for TranscriptProtoASTFlatExprSayVariant(v97);
  uint64_t v99 = sub_25346CB4C(v98);
  MEMORY[0x270FA5388](v99);
  uint64_t v248 = (void *)((char *)v225 - ((v100 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v101 = sub_253483660();
  uint64_t v102 = type metadata accessor for TranscriptProtoASTFlatExprCallVariant(v101);
  uint64_t v103 = sub_25346CB4C(v102);
  MEMORY[0x270FA5388](v103);
  sub_25346CB04();
  uint64_t v105 = sub_2534F8208(v104);
  v225[3] = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(v105);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v106);
  sub_25346CB04();
  uint64_t v108 = sub_2534F8208(v107);
  uint64_t v233 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(v108);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v109);
  uint64_t v111 = sub_2534F8208((uint64_t)v225 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v234 = type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(v111);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v112);
  sub_25346CB04();
  uint64_t v114 = sub_2534F8208(v113);
  uint64_t v232 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(v114);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v115);
  uint64_t v117 = sub_2534F8208((uint64_t)v225 - ((v116 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v118 = type metadata accessor for TranscriptProtoASTFlatValue(v117);
  uint64_t v119 = sub_25346CB4C(v118);
  MEMORY[0x270FA5388](v119);
  sub_2534F823C();
  MEMORY[0x270FA5388](v120);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v121);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v122);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v123);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v124);
  sub_2534F882C();
  MEMORY[0x270FA5388](v125);
  sub_2534F8600();
  MEMORY[0x270FA5388](v126);
  sub_2536D4C9C();
  uint64_t v127 = sub_253462A5C(&qword_269CE2320);
  uint64_t v128 = sub_25346CB4C(v127);
  MEMORY[0x270FA5388](v128);
  uint64_t v129 = sub_25348360C();
  uint64_t v130 = type metadata accessor for TranscriptProtoAstflatExprEnum(v129);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v131);
  sub_2534B34A4();
  sub_253961F60(v30, v23, &qword_269CE2320);
  sub_2534D8B48(v23, 1, v130);
  if (v132)
  {
    sub_253472458(v23, &qword_269CE2320);
    a10 = (ValueMetadata *)v130;
    sub_253462A5C(&qword_269CE8738);
    sub_253AF1E74();
    sub_25396263C();
    uint64_t v133 = sub_2534D969C();
    *uint64_t v134 = v130;
    v134[1] = v20;
    sub_253962224(v133, (uint64_t)v134);
  }
  else
  {
    v225[0] = v30;
    uint64_t v135 = sub_253578E58();
    sub_253AF19D0(v135, v136);
    sub_253AF21E0();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v138 = (uint64_t)v258;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        sub_253AF3740(v26, (uint64_t)&v260);
        *uint64_t v256 = *v22;
        sub_253AF282C();
        uint64_t v144 = v259;
        sub_25395DDC4(v24);
        if (v144) {
          goto LABEL_10;
        }
        sub_253462A5C(&qword_269CDDCF0);
        AST.FlatValue.init(transcript:)();
        sub_253AF1D20();
        sub_253AF1980();
        type metadata accessor for AST.FlatExpr(0);
        sub_253971D54();
        goto LABEL_56;
      case 2:
        sub_253AF245C(v26, (uint64_t)&a11);
        *uint64_t v256 = *(unsigned char *)v23;
        uint64_t v145 = v259;
        sub_25395DDC4(v25);
        if (v145) {
          goto LABEL_10;
        }
        sub_253462A5C(&qword_269CDDCE8);
        AST.FlatValue.init(transcript:)();
        sub_25395DDC4(v225[1]);
        AST.FlatValue.init(transcript:)();
        sub_253AF1D20();
        sub_253AF1980();
        type metadata accessor for AST.FlatExpr(0);
        goto LABEL_56;
      case 3:
        uint64_t v146 = v235;
        sub_253AF19D0(v26, (uint64_t)v235);
        uint64_t v147 = v259;
        sub_25395DDC4(v230);
        if (v147)
        {
LABEL_10:
          sub_253AF1D20();
          break;
        }
        uint64_t v148 = v256;
        AST.FlatValue.init(transcript:)();
        uint64_t v214 = &v148[*(int *)(sub_253462A5C(&qword_269CDDCE0) + 48)];
        sub_253AF1D20();
        uint64_t v216 = *v146;
        uint64_t v215 = v146[1];
        swift_bridgeObjectRetain();
        sub_253AF1980();
        void *v214 = v216;
        v214[1] = v215;
        type metadata accessor for AST.FlatExpr(0);
        sub_253AF3D68();
        goto LABEL_56;
      case 4:
        sub_253AF19D0(v26, v236);
        uint64_t v149 = v259;
        sub_25395DDC4(v231);
        if (v149)
        {
          sub_253AF1980();
          break;
        }
        AST.FlatValue.init(transcript:)();
        sub_253962838();
        sub_25395DDC4(v217);
        sub_253462A5C(&qword_269CDDCD8);
        AST.FlatValue.init(transcript:)();
        sub_253AF1980();
        sub_253AF1980();
        type metadata accessor for AST.FlatExpr(0);
        goto LABEL_56;
      case 5:
        sub_253AF245C(v26, (uint64_t)&a10);
        uint64_t v151 = *(void *)v23;
        uint64_t v150 = *(void *)(v23 + 8);
        swift_bridgeObjectRetain();
        uint64_t v152 = swift_bridgeObjectRetain();
        uint64_t v153 = v259;
        uint64_t v154 = sub_253AE8490(v152);
        if (v153)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_253AF1D20();
          break;
        }
        uint64_t v203 = v154;
        swift_bridgeObjectRelease();
        sub_253AF1D20();
        sub_253AF1980();
        char v204 = v256;
        *(void *)uint64_t v256 = v151;
        *((void *)v204 + 1) = v150;
        *((void *)v204 + 2) = v203;
        type metadata accessor for AST.FlatExpr(0);
        goto LABEL_56;
      case 6:
        uint64_t v155 = v248;
        sub_253AF19D0(v26, (uint64_t)v248);
        uint64_t v156 = *v155;
        uint64_t v157 = *(void *)(v156 + 16);
        if (!v157)
        {
          swift_bridgeObjectRetain();
          uint64_t v161 = (ValueMetadata *)MEMORY[0x263F8EE78];
LABEL_61:
          sub_253AF1D20();
          swift_bridgeObjectRelease();
          sub_253AF1980();
          *(void *)uint64_t v256 = v161;
          type metadata accessor for AST.FlatExpr(0);
          sub_253AF34D4();
          goto LABEL_56;
        }
        a10 = (ValueMetadata *)MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        sub_253AF2208();
        sub_2539E809C();
        uint64_t v158 = v255;
        uint64_t v159 = (void (**)(char *, char *, uint64_t))(v254 + 32);
        uint64_t v160 = (ValueMetadata **)(v156 + 40);
        while (1)
        {
          uint64_t v161 = *v160;
          swift_bridgeObjectRetain();
          sub_2534DA5AC();
          sub_253B05560();
          uint64_t v162 = v251;
          sub_253AF3A28();
          sub_253961F60(v163, v164, v165);
          uint64_t v166 = sub_2536D42D4();
          sub_2534D8B48(v166, v167, v158);
          if (v132) {
            break;
          }
          uint64_t v168 = v162;
          uint64_t v169 = *v159;
          (*v159)(v257, v168, v158);
          uint64_t v170 = sub_253971DD4();
          sub_253472458(v170, v171);
          swift_bridgeObjectRelease();
          if ((sub_2539621FC() & 1) == 0)
          {
            sub_253A3E764();
            sub_2539E809C();
            uint64_t v161 = a10;
          }
          unint64_t Kind = v161[1].Kind;
          unint64_t Description = (unint64_t)v161[1].Description;
          if (Kind >= Description >> 1)
          {
            sub_253962434(Description);
            sub_2539E809C();
            uint64_t v161 = a10;
          }
          v160 += 2;
          v161[1].unint64_t Kind = Kind + 1;
          uint64_t v158 = v255;
          sub_253962314();
          v169((char *)(v174 + v175 * Kind), v257, v158);
          a10 = v161;
          if (!--v157) {
            goto LABEL_61;
          }
        }
        uint64_t v208 = sub_2534F8958();
        sub_253472458(v208, v209);
        uint64_t v260 = v158;
        sub_253462A5C(&qword_269CE51E8);
        sub_25396232C();
        sub_253AF2A8C();
        sub_253961DC0();
        uint64_t v210 = sub_2534D969C();
        *uint64_t v211 = &unk_26B248CB0;
        v211[1] = v158;
        sub_253962224(v210, (uint64_t)v211);
        uint64_t v212 = sub_253A3D030();
        sub_253472458(v212, v213);
        swift_bridgeObjectRelease();
        swift_release();
        sub_253AF1D20();
        swift_bridgeObjectRelease();
        break;
      case 7:
        uint64_t v176 = v244;
        sub_253AF19D0(v26, v244);
        uint64_t v177 = *(void *)(v176 + 8);
        swift_bridgeObjectRetain();
        uint64_t v20 = v237;
        sub_253AF2860();
        sub_253B05560();
        swift_bridgeObjectRelease();
        sub_253AF369C();
        uint64_t v178 = v259;
        sub_25395D974();
        if (v178) {
          goto LABEL_44;
        }
        sub_253472458(v20, (uint64_t *)&unk_26B248CB0);
        uint64_t v205 = v176 + *(int *)(v226 + 20);
        uint64_t v206 = v227;
        sub_25395DE14(v227);
        int v218 = *(unsigned __int8 *)(v206 + 8);
        if (v218 == 255)
        {
          a10 = &type metadata for TranscriptProtoAstpickTypeEnum;
          sub_253462A5C(&qword_269CE8698);
          sub_253AF1E74();
          sub_25396263C();
          uint64_t v219 = sub_2534D969C();
          *uint64_t v220 = v177;
          v220[1] = v205;
          sub_253962224(v219, (uint64_t)v220);
          sub_253AF1980();
          sub_253AF1D20();
          sub_253AF1980();
          sub_2534D9B10();
          sub_2534659CC();
          v221();
          goto LABEL_5;
        }
        char v222 = v218 & 1;
        if (v218) {
          uint64_t v223 = 0;
        }
        else {
          uint64_t v223 = *(void *)v206;
        }
        uint64_t v224 = v30 + *(int *)(sub_253462A5C(&qword_269CDDCD0) + 48);
        sub_253AF1980();
        sub_253AF1D20();
        sub_253AF1980();
        *(void *)uint64_t v224 = v223;
        *(unsigned char *)(v224 + 8) = v222;
        type metadata accessor for AST.FlatExpr(0);
        goto LABEL_56;
      case 8:
        sub_253AF19D0(v26, v241);
        sub_253AF2BA8();
        sub_253B05560();
        sub_253AF2748();
        if (v21) {
          goto LABEL_44;
        }
        goto LABEL_66;
      case 9:
        sub_253AF1D20();
        sub_253AF245C(v26, (uint64_t)&a18);
        uint64_t v180 = *(void *)v23;
        uint64_t v179 = *(void *)(v23 + 8);
        char v181 = *(unsigned char *)(v23 + 16);
        char v182 = *(unsigned char *)(v23 + 17);
        swift_bridgeObjectRetain();
        sub_253AF1980();
        uint64_t v183 = v256;
        *(void *)uint64_t v256 = v180;
        *((void *)v183 + 1) = v179;
        v183[16] = v181;
        v183[17] = v182;
        type metadata accessor for AST.FlatExpr(0);
        sub_253AF3D68();
        goto LABEL_56;
      case 10:
        sub_253AF19D0(v26, v243);
        uint64_t v20 = v238;
        sub_253B05560();
        sub_253AF2748();
        if (v21) {
          goto LABEL_44;
        }
        sub_253AF1D20();
        sub_253472458(v20, (uint64_t *)&unk_26B248CB0);
        sub_253AF1980();
        type metadata accessor for AST.FlatExpr(0);
        goto LABEL_56;
      case 11:
        uint64_t v184 = v247;
        sub_253AF19D0(v26, v247);
        if (*(void *)(v184 + 8))
        {
          swift_bridgeObjectRetain();
          uint64_t v185 = v228;
          sub_253B05560();
          uint64_t v186 = (uint64_t)v256;
          uint64_t v187 = v259;
          sub_25395D974();
          if (v187)
          {
            sub_253472458(v185, (uint64_t *)&unk_26B248CB0);
            sub_253AF1980();
            swift_bridgeObjectRelease();
            break;
          }
          sub_253472458(v185, (uint64_t *)&unk_26B248CB0);
          uint64_t v207 = 0;
        }
        else
        {
          uint64_t v207 = 1;
          uint64_t v186 = (uint64_t)v256;
        }
        sub_253AF24D0(v186, v207);
        sub_253AF1980();
        swift_bridgeObjectRelease();
        sub_253AF1980();
        type metadata accessor for AST.FlatExpr(0);
        sub_253AF2628();
        goto LABEL_56;
      case 12:
        sub_253AF1D20();
        sub_253AF19D0(v26, v242);
        swift_bridgeObjectRetain();
        sub_253AF1980();
        uint64_t v188 = sub_253AF3714();
        type metadata accessor for AST.FlatExpr(v188);
        sub_253A3F4E8();
        goto LABEL_56;
      case 13:
        sub_253AF19D0(v26, v245);
        uint64_t v20 = v239;
        sub_253B05560();
        sub_253AF2748();
        if (v21) {
          goto LABEL_44;
        }
        goto LABEL_66;
      case 14:
        sub_253AF19D0(v26, v246);
        uint64_t v20 = v240;
        sub_253B05560();
        sub_253AF2748();
        if (v21)
        {
LABEL_44:
          sub_253AF1D20();
          sub_253472458(v20, (uint64_t *)&unk_26B248CB0);
          break;
        }
LABEL_66:
        sub_253AF1D20();
        sub_253472458(v20, (uint64_t *)&unk_26B248CB0);
        sub_253AF1980();
        type metadata accessor for AST.FlatExpr(0);
        sub_2539446BC();
        goto LABEL_56;
      case 15:
      case 17:
        sub_253AF1D20();
        type metadata accessor for AST.FlatExpr(0);
        sub_253AF2E50();
        swift_storeEnumTagMultiPayload();
        sub_253AF1980();
        goto LABEL_5;
      case 16:
        uint64_t v189 = v249;
        sub_253AF19D0(v26, (uint64_t)v249);
        uint64_t v190 = *v189;
        uint64_t v191 = *(void *)(v190 + 16);
        if (v191)
        {
          a10 = (ValueMetadata *)MEMORY[0x263F8EE78];
          swift_bridgeObjectRetain();
          sub_253AF2208();
          sub_2539E8038();
          sub_2535786F4();
          uint64_t v193 = v190 + v192;
          uint64_t v195 = *(void *)(v194 + 72);
          uint64_t v196 = v259;
          do
          {
            uint64_t v197 = type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant;
            uint64_t v198 = v252;
            sub_253AF1A28(v193, v252);
            uint64_t v199 = v253;
            sub_253AF1A28(v198, v253);
            AST.Update.init(transcript:)(v199);
            if (v196)
            {
              sub_253AF1980();
              swift_release();
              sub_253AF1D20();
              swift_bridgeObjectRelease();
              goto LABEL_4;
            }
            sub_253AF1980();
            if ((sub_2539621FC() & 1) == 0)
            {
              sub_253A3E764();
              sub_2539E8038();
              uint64_t v197 = (uint64_t (*)(uint64_t))a10;
            }
            unint64_t v201 = *((void *)v197 + 2);
            unint64_t v200 = *((void *)v197 + 3);
            if (v201 >= v200 >> 1)
            {
              sub_253962434(v200);
              sub_2539E8038();
              uint64_t v197 = (uint64_t (*)(uint64_t))a10;
            }
            *((void *)v197 + 2) = v201 + 1;
            sub_2539623C4();
            sub_253AF19D0(v138, v202);
            v193 += v195;
            --v191;
          }
          while (v191);
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t v197 = (uint64_t (*)(uint64_t))MEMORY[0x263F8EE78];
        }
        sub_253AF1D20();
        swift_bridgeObjectRelease();
        sub_253AF1980();
        *(void *)uint64_t v256 = v197;
        type metadata accessor for AST.FlatExpr(0);
LABEL_56:
        swift_storeEnumTagMultiPayload();
        goto LABEL_5;
      case 18:
      case 19:
        sub_253AF1D20();
        type metadata accessor for AST.FlatExpr(0);
        sub_253AF2E50();
        goto LABEL_56;
      default:
        uint64_t v139 = sub_2534DA604();
        sub_253AF19D0(v139, v140);
        uint64_t v141 = sub_2534D99FC();
        sub_253AF1A28(v141, v142);
        uint64_t v143 = v259;
        AST.FlatValue.init(transcript:)();
        sub_253AF1D20();
        sub_253AF1980();
        if (v143) {
          goto LABEL_5;
        }
        type metadata accessor for AST.FlatExpr(0);
        sub_253971D44();
        goto LABEL_56;
    }
  }
LABEL_4:
  sub_253AF1980();
LABEL_5:
  sub_253A73FF4();
  sub_2534847C8();
}

void AST.FlatValue.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v64 = v1;
  uint64_t v6 = v5;
  uint64_t v67 = v7;
  uint64_t v8 = type metadata accessor for TranscriptProtoStatementID(0);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v66 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v11);
  sub_253AF2178((uint64_t)&v62 - v12);
  uint64_t v13 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  uint64_t v15 = sub_25348360C();
  uint64_t v16 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(v15);
  uint64_t v17 = sub_25346CB4C(v16);
  MEMORY[0x270FA5388](v17);
  uint64_t v18 = sub_2534D9C00();
  uint64_t v19 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(v18);
  uint64_t v20 = sub_25346CB4C(v19);
  MEMORY[0x270FA5388](v20);
  sub_2534966B0();
  uint64_t v21 = sub_253462A5C(&qword_269CDCBA8);
  uint64_t v22 = sub_25346CB4C(v21);
  MEMORY[0x270FA5388](v22);
  uint64_t v23 = sub_25397F55C();
  uint64_t v24 = type metadata accessor for TranscriptProtoAstflatValueEnum(v23);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v25);
  sub_25347FAAC();
  uint64_t v26 = v6;
  uint64_t v27 = sub_253578D38();
  sub_253961F60(v27, v28, &qword_269CDCBA8);
  uint64_t v29 = sub_2539627D4();
  sub_2534D8B48(v29, v30, v24);
  if (v31)
  {
    sub_253472458(v0, &qword_269CDCBA8);
    sub_253462A5C(&qword_269CE8740);
    sub_253AF1E74();
    sub_25396263C();
    uint64_t v32 = sub_2534D969C();
    *uint64_t v33 = v0;
    v33[1] = v24;
    sub_253962224(v32, (uint64_t)v33);
    sub_253AF1980();
  }
  else
  {
    uint64_t v34 = v65;
    uint64_t v35 = (uint64_t)v66;
    uint64_t v62 = v3;
    uint64_t v63 = v26;
    uint64_t v36 = v67;
    uint64_t v37 = sub_253592678();
    sub_253AF19D0(v37, v38);
    sub_253A3E5C8();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 1:
        uint64_t v41 = *(void *)v4;
        sub_253AF1980();
        uint64_t *v36 = v41;
        type metadata accessor for AST.FlatValue(0);
        sub_253AF2618();
        goto LABEL_19;
      case 2:
        sub_253AF1980();
        uint64_t *v36 = *(void *)v4;
        type metadata accessor for AST.FlatValue(0);
        sub_253AF2A70();
        goto LABEL_19;
      case 3:
      case 6:
        sub_253AF1980();
        sub_253AF2F7C();
        goto LABEL_19;
      case 4:
        uint64_t v42 = sub_253A3D030();
        sub_253AF19D0(v42, v43);
        uint64_t v44 = swift_bridgeObjectRetain();
        uint64_t v45 = v64;
        sub_25394F80C(v44, v46, v47, v48, v49, v50, v51, v52, v62, v63);
        uint64_t v54 = v53;
        sub_253AF1980();
        sub_253AF1980();
        if (v45) {
          break;
        }
        uint64_t *v36 = v54;
        type metadata accessor for AST.FlatValue(0);
        goto LABEL_19;
      case 5:
        sub_253AF2C3C();
        uint64_t v55 = swift_bridgeObjectRetain();
        uint64_t v56 = v64;
        uint64_t v57 = sub_253AE8490(v55);
        swift_bridgeObjectRelease();
        sub_253AF1980();
        sub_253AF1980();
        if (v56) {
          break;
        }
        uint64_t *v36 = v57;
        type metadata accessor for AST.FlatValue(0);
        sub_253AF3D68();
        goto LABEL_19;
      case 7:
        sub_253AF1980();
        sub_253AF2F7C();
        sub_253A3F4E8();
        goto LABEL_19;
      case 8:
        sub_253AF369C();
        sub_253B05560();
        swift_bridgeObjectRelease();
        uint64_t v58 = sub_253B055C0();
        sub_2534D8B48(v2, 1, v58);
        if (v31)
        {
          sub_25394EA00();
          uint64_t v59 = sub_2534D969C();
          sub_253A73498(v59, v60);
          sub_253AF1980();
          sub_253472458(v2, (uint64_t *)&unk_26B248CB0);
        }
        else
        {
          sub_253AF1980();
          sub_25347B88C();
          sub_253578EEC();
          sub_2534D8E14();
          v61();
          type metadata accessor for AST.FlatValue(0);
          sub_253A3F4E8();
LABEL_19:
          swift_storeEnumTagMultiPayload();
        }
        break;
      case 9:
        sub_253AF19D0((uint64_t)v4, v34);
        sub_253AF1A28(v34, v35);
        swift_bridgeObjectRetain();
        sub_253AF1F34();
        sub_253AF1980();
        sub_253AF1980();
        sub_253AF2474();
        type metadata accessor for AST.FlatValue(0);
        goto LABEL_19;
      case 10:
        sub_253AF1980();
        type metadata accessor for AST.FlatValue(0);
        sub_253A3F4E8();
        goto LABEL_19;
      default:
        sub_253AF1980();
        uint64_t v40 = sub_253AF3658(*v4);
        type metadata accessor for AST.FlatValue(v40);
        goto LABEL_19;
    }
  }
  sub_253579494();
  sub_2534847C8();
}

uint64_t AST.InfixOp.init(transcript:)(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t AST.PickType.init(transcript:)(uint64_t *a1)
{
  int v3 = *((unsigned __int8 *)a1 + 8);
  if (v3 == 255)
  {
    sub_253462A5C(&qword_269CE8698);
    sub_253AF2E38();
    sub_253AF2B50();
    uint64_t v4 = sub_2534D969C();
    *uint64_t v5 = v1;
    v5[1] = v2;
    sub_253962224(v4, (uint64_t)v5);
    sub_253AF1980();
  }
  else
  {
    if (v3) {
      uint64_t v2 = 0;
    }
    else {
      uint64_t v2 = *a1;
    }
    sub_253AF1980();
  }
  return v2;
}

#error "253ADC7B8: call analysis failed (funcsize=126)"

#error "253ADC8C4: call analysis failed (funcsize=6)"

uint64_t sub_253ADC8D0()
{
  return sub_253AA0B6C();
}

void TranscriptProtoASTFlatExpr.init(handwritten:)()
{
  sub_2534B3258();
  uint64_t v178 = v4;
  uint64_t v6 = v5;
  uint64_t v7 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v166 = (uint64_t)&v159 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v10);
  uint64_t v169 = (uint64_t)&v159 - v11;
  uint64_t v12 = sub_253483660();
  uint64_t v167 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(v12);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v13);
  uint64_t v168 = (uint64_t *)((char *)&v159 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_253462A5C(&qword_269CE2268);
  uint64_t v16 = sub_25346CB4C(v15);
  MEMORY[0x270FA5388](v16);
  uint64_t v165 = (uint64_t)&v159 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = sub_253B055C0();
  sub_253465998();
  uint64_t v174 = v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v164 = (uint64_t)&v159 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v159 - v22;
  uint64_t v24 = sub_253962344();
  uint64_t v162 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(v24);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v25);
  uint64_t v163 = (uint64_t)&v159 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_253483660();
  uint64_t v28 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(v27);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v29);
  uint64_t v30 = sub_2534B464C();
  uint64_t v160 = (uint64_t (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(v30);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v31);
  uint64_t v161 = (uint64_t)&v159 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_253483660();
  uint64_t v34 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(v33);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v35);
  sub_2534847E0();
  uint64_t v36 = sub_253462A5C(&qword_269CE22E0);
  uint64_t v37 = sub_25346CB4C(v36);
  MEMORY[0x270FA5388](v37);
  uint64_t v170 = (uint64_t)&v159 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v39);
  uint64_t v172 = (char *)&v159 - v40;
  uint64_t v41 = sub_253483660();
  uint64_t v42 = type metadata accessor for AST.FlatValue(v41);
  uint64_t v43 = sub_25346CB4C(v42);
  MEMORY[0x270FA5388](v43);
  sub_2534D8CE4();
  MEMORY[0x270FA5388](v44);
  sub_253578D54();
  MEMORY[0x270FA5388](v45);
  uint64_t v171 = (uint64_t)&v159 - v46;
  sub_2534B324C();
  MEMORY[0x270FA5388](v47);
  uint64_t v173 = (uint64_t)&v159 - v48;
  uint64_t v49 = sub_253483660();
  type metadata accessor for AST.FlatExpr(v49);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v50);
  uint64_t v52 = (unsigned __int8 *)&v159 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_253462A5C(&qword_269CE2320);
  uint64_t v54 = sub_25346CB4C(v53);
  MEMORY[0x270FA5388](v54);
  uint64_t v176 = (char *)&v159 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_253483660();
  type metadata accessor for TranscriptProtoAstflatExprEnum(v56);
  uint64_t v57 = sub_253AF230C();
  uint64_t v175 = v58;
  uint64_t v61 = sub_253AF1CDC(v57, v59, v60, v58);
  type metadata accessor for TranscriptProtoASTFlatExpr(v61);
  uint64_t v177 = v6;
  uint64_t v62 = v178;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v63 = sub_2534DA178();
  sub_253AF1A28(v63, v64);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v73 = *v52;
      uint64_t v74 = sub_253462A5C(&qword_269CDDCF0);
      sub_253AF19D0((uint64_t)&v52[*(int *)(v74 + 48)], v0);
      sub_253AF1A28(v0, v173);
      uint64_t v3 = (uint64_t)v172;
      TranscriptProtoASTFlatValue.init(handwritten:)();
      type metadata accessor for TranscriptProtoASTFlatValue(0);
      sub_253AF25CC(v3, 0);
      sub_253AF25CC((uint64_t)&v2[*(int *)(v34 + 20)], 1);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *uint64_t v2 = v73;
      uint64_t v75 = sub_2535B4148();
      sub_253961BF0(v75, v76, v77);
      sub_253AF32DC((uint64_t)v2);
      sub_253AF1980();
      sub_253AF1980();
      break;
    case 2u:
      LODWORD(v179) = *v52;
      uint64_t v78 = sub_253462A5C(&qword_269CDDCE8);
      uint64_t v79 = (uint64_t)&v52[*(int *)(v78 + 64)];
      uint64_t v80 = v173;
      sub_253AF19D0((uint64_t)&v52[*(int *)(v78 + 48)], v173);
      sub_253AF19D0(v79, v171);
      sub_253AF1A28(v80, v3);
      uint64_t v81 = (uint64_t)v172;
      TranscriptProtoASTFlatValue.init(handwritten:)();
      type metadata accessor for TranscriptProtoASTFlatValue(0);
      sub_253AF24A0(v81, 0);
      uint64_t v82 = sub_253AF3194();
      sub_253AF1A28(v82, v83);
      uint64_t v84 = v170;
      sub_253AF3B60();
      TranscriptProtoASTFlatValue.init(handwritten:)();
      sub_253AF24A0(v84, 0);
      uint64_t v85 = v160;
      uint64_t v3 = v161;
      uint64_t v86 = v161 + *((int *)v160 + 5);
      sub_253945180(v86);
      uint64_t v87 = v3 + *((int *)v85 + 6);
      sub_253945180(v87);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(unsigned char *)uint64_t v3 = v179;
      sub_253961BF0(v81, v86, &qword_269CE22E0);
      sub_253961BF0(v84, v87, &qword_269CE22E0);
      sub_253AF32DC(v3);
      sub_253AF1980();
      sub_253AF1980();
      sub_25353CE6C();
      sub_253AF1980();
      break;
    case 3u:
      uint64_t v88 = &v52[*(int *)(sub_253462A5C(&qword_269CDDCE0) + 48)];
      uint64_t v89 = *(void *)v88;
      uint64_t v90 = *((void *)v88 + 1);
      uint64_t v91 = v173;
      sub_253AF19D0((uint64_t)v52, v173);
      sub_253AF1A28(v91, v171);
      uint64_t v3 = (uint64_t)v172;
      TranscriptProtoASTFlatValue.init(handwritten:)();
      uint64_t v92 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      sub_253AF3AF0();
      uint64_t v93 = (uint64_t)v1 + *(int *)(v28 + 20);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v93, 1, 1, v92);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      sub_253961BF0(v3, v93, &qword_269CE22E0);
      *uint64_t v1 = v89;
      v1[1] = v90;
      sub_253AF32DC((uint64_t)v1);
      sub_253AF1980();
      sub_253AF1980();
      break;
    case 4u:
      uint64_t v94 = (uint64_t)&v52[*(int *)(sub_253462A5C(&qword_269CDDCD8) + 48)];
      uint64_t v95 = (uint64_t)v52;
      uint64_t v96 = v173;
      sub_253AF19D0(v95, v173);
      sub_253AF19D0(v94, v171);
      sub_253AF1A28(v96, v3);
      uint64_t v97 = (uint64_t)v172;
      sub_253AF2770();
      TranscriptProtoASTFlatValue.init(handwritten:)();
      type metadata accessor for TranscriptProtoASTFlatValue(0);
      sub_253AF24A0(v97, 0);
      uint64_t v98 = sub_2535925F4();
      sub_253AF1A28(v98, v99);
      uint64_t v100 = v170;
      TranscriptProtoASTFlatValue.init(handwritten:)();
      sub_253AF24A0(v100, 0);
      uint64_t v3 = v163;
      sub_253945180(v163);
      uint64_t v101 = v3 + *(int *)(v162 + 20);
      sub_253945180(v101);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      sub_253961BF0(v97, v3, &qword_269CE22E0);
      sub_253961BF0(v100, v101, &qword_269CE22E0);
      sub_253AF32DC(v3);
      sub_253AF1980();
      sub_253AF1980();
      sub_253AF1980();
      break;
    case 5u:
      sub_253A67598(*(void *)v52, v65, v66, v67, v68, v69, v70, v71, v159, v160, v161, v162, v163, v164, v165, v166, v167, (uint64_t)v168, v169,
        v170);
      uint64_t v102 = sub_2534D9690();
      type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(v102);
      sub_253AF2228();
      *(void *)uint64_t v3 = v0;
      sub_253AF1980();
      break;
    case 6u:
      uint64_t v103 = *(void *)v52;
      uint64_t v104 = *((void *)v52 + 1);
      uint64_t v105 = sub_253AE7190(*((void *)v52 + 2));
      swift_bridgeObjectRelease();
      type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0);
      uint64_t v3 = (uint64_t)v176;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(void *)uint64_t v3 = v103;
      *(void *)(v3 + 8) = v104;
      *(void *)(v3 + 16) = v105;
      sub_253AF1980();
      break;
    case 7u:
      uint64_t v106 = *(void *)v52;
      uint64_t v107 = *(void *)(*(void *)v52 + 16);
      if (v107)
      {
        uint64_t v180 = MEMORY[0x263F8EE78];
        sub_253AF2FB4();
        sub_2539E6C84();
        sub_2535786F4();
        uint64_t v172 = (char *)v106;
        uint64_t v109 = v106 + v108;
        uint64_t v173 = *(void *)(v110 + 56);
        uint64_t v174 = v111;
        do
        {
          uint64_t v112 = sub_2536D3880();
          ((void (*)(uint64_t))v174)(v112);
          sub_253B05570();
          sub_253AF2A8C();
          sub_253578D2C();
          sub_2534B3470();
          v113();
          uint64_t v114 = v180;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_253579380();
            sub_2539E6C84();
            uint64_t v114 = v180;
          }
          unint64_t v115 = *(void *)(v114 + 16);
          uint64_t v3 = v115 + 1;
          if (v115 >= *(void *)(v114 + 24) >> 1)
          {
            sub_2539E6C84();
            uint64_t v114 = v180;
          }
          *(void *)(v114 + 16) = v3;
          uint64_t v116 = v114 + 16 * v115;
          *(void *)(v116 + 32) = v62;
          *(void *)(v116 + 40) = v2;
          v109 += v173;
          --v107;
        }
        while (v107);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v114 = MEMORY[0x263F8EE78];
      }
      type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0);
      sub_253AF2228();
      *(void *)uint64_t v3 = v114;
      sub_253AF1980();
      break;
    case 8u:
      uint64_t v117 = &v52[*(int *)(sub_253462A5C(&qword_269CDDCD0) + 48)];
      uint64_t v118 = *(void *)v117;
      int v119 = v117[8];
      sub_253A3CF28();
      sub_2534DA2E4();
      sub_25347FA84();
      v120();
      uint64_t v121 = sub_253B05570();
      uint64_t v123 = v122;
      if (v119) {
        uint64_t v118 = 1;
      }
      type metadata accessor for TranscriptProtoASTPickType(0);
      uint64_t v124 = v165;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(void *)uint64_t v124 = v118;
      *(unsigned char *)(v124 + 8) = v119;
      sub_253AF25CC(v124, 0);
      uint64_t v3 = v167;
      uint64_t v125 = v168;
      sub_253AF25CC((uint64_t)v168 + *(int *)(v167 + 20), 1);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *uint64_t v125 = v121;
      v125[1] = v123;
      uint64_t v126 = sub_253A3D030();
      sub_253961BF0(v126, v127, v128);
      sub_253AF32DC((uint64_t)v125);
      sub_253AF1980();
      sub_253AF2A98();
      sub_2534DA4BC();
      v129();
      break;
    case 9u:
      sub_25347FA84();
      v130();
      sub_253B05570();
      uint64_t v131 = sub_253AF2438();
      type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(v131);
      sub_253AF2228();
      *(void *)uint64_t v3 = v0;
      *(void *)(v3 + 8) = v23;
      sub_253AF1980();
      sub_2534D91AC();
      v132();
      break;
    case 0xAu:
      uint64_t v133 = *(void *)v52;
      uint64_t v134 = *((void *)v52 + 1);
      unsigned __int8 v135 = v52[16];
      char v136 = v52[17] & 1;
      type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0);
      uint64_t v3 = (uint64_t)v176;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(void *)uint64_t v3 = v133;
      *(void *)(v3 + 8) = v134;
      *(unsigned char *)(v3 + 16) = v135;
      *(unsigned char *)(v3 + 17) = v136;
      sub_253AF1980();
      break;
    case 0xBu:
      sub_25347FA84();
      v137();
      sub_253B05570();
      uint64_t v138 = sub_253AF2438();
      type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(v138);
      sub_253AF2228();
      *(void *)uint64_t v3 = v0;
      *(void *)(v3 + 8) = v23;
      sub_253AF1980();
      sub_2534D91AC();
      v139();
      break;
    case 0xCu:
      uint64_t v140 = *(void *)v52;
      type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0);
      sub_253AF2228();
      *(void *)uint64_t v3 = v140;
      sub_253AF1980();
      break;
    case 0xDu:
      uint64_t v141 = v169;
      sub_253961F14((uint64_t)v52, v169, (uint64_t *)&unk_26B248CB0);
      uint64_t v142 = v166;
      sub_253AF3720();
      sub_253961F60(v143, v144, v145);
      uint64_t v146 = v179;
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v142, 1, v179) == 1)
      {
        sub_253472458(v142, (uint64_t *)&unk_26B248CB0);
        uint64_t v147 = 0;
        uint64_t v148 = 0;
      }
      else
      {
        uint64_t v147 = sub_253B05570();
        uint64_t v148 = v155;
        (*(void (**)(uint64_t, uint64_t))(v174 + 8))(v142, v146);
      }
      uint64_t v3 = (uint64_t)v176;
      type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(void *)uint64_t v3 = v147;
      *(void *)(v3 + 8) = v148;
      sub_253AF1980();
      sub_253472458(v141, (uint64_t *)&unk_26B248CB0);
      break;
    case 0xEu:
      sub_25347FA84();
      v149();
      sub_253B05570();
      uint64_t v150 = sub_253AF2438();
      type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(v150);
      sub_253AF2228();
      *(void *)uint64_t v3 = v0;
      *(void *)(v3 + 8) = v23;
      sub_253AF1980();
      sub_2534D91AC();
      v151();
      break;
    case 0xFu:
      sub_25347FA84();
      v152();
      sub_253B05570();
      uint64_t v153 = sub_253AF2438();
      type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(v153);
      sub_253AF2228();
      *(void *)uint64_t v3 = v0;
      *(void *)(v3 + 8) = v23;
      sub_253AF1980();
      sub_2534D91AC();
      v154();
      break;
    case 0x10u:
    case 0x12u:
      sub_253AF1980();
      uint64_t v3 = (uint64_t)v176;
      break;
    case 0x11u:
    case 0x13u:
      uint64_t v3 = (uint64_t)v176;
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      sub_253AF1980();
      break;
    default:
      uint64_t v72 = v173;
      sub_253AF19D0((uint64_t)v52, v173);
      sub_253AF1A28(v72, v171);
      uint64_t v3 = (uint64_t)v176;
      TranscriptProtoASTFlatValue.init(handwritten:)();
      sub_253AF1980();
      sub_253AF1980();
      break;
  }
  swift_storeEnumTagMultiPayload();
  sub_253AF25CC(v3, 0);
  uint64_t v156 = sub_253AF25E4();
  sub_253961BF0(v156, v157, v158);
  sub_253465A14();
}

void TranscriptProtoASTFlatValue.init(handwritten:)()
{
  sub_2534B3258();
  uint64_t v4 = sub_253AF21FC(v3);
  type metadata accessor for TranscriptProtoASTFlatValue(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  sub_253AF1C9C(v6, v37);
  sub_253B055C0();
  sub_253465998();
  MEMORY[0x270FA5388](v7);
  sub_2534B464C();
  sub_253B059D0();
  sub_253465998();
  uint64_t v38 = v8;
  MEMORY[0x270FA5388](v9);
  sub_2534B340C();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_2534DA41C();
  uint64_t v12 = type metadata accessor for AST.FlatValue(v11);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_25397F55C();
  type metadata accessor for TranscriptProtoAstflatValueEnum(v14);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v15);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v16);
  sub_2534D9EC0();
  uint64_t v17 = sub_253578D38();
  sub_253AF1A28(v17, v18);
  sub_253945CF8();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      *uint64_t v1 = *v0;
      sub_253AF2048();
      goto LABEL_9;
    case 3u:
    case 6u:
    case 7u:
      uint64_t v21 = v0[1];
      *uint64_t v1 = *v0;
      v1[1] = v21;
      sub_253AF2048();
      goto LABEL_9;
    case 4u:
      sub_253A67288(*v0);
      uint64_t v19 = sub_2534D9690();
      type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(v19);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *uint64_t v1 = v0;
      sub_253AF2048();
      goto LABEL_9;
    case 5u:
      uint64_t v20 = sub_253AE7190(*v0);
      swift_bridgeObjectRelease();
      type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *uint64_t v1 = v20;
      sub_253AF2048();
      goto LABEL_9;
    case 8u:
      sub_253A3CF28();
      sub_25351C5C0();
      sub_25347FA84();
      v29();
      sub_25353CE60();
      sub_2534AF234();
      v30();
      int v31 = sub_253B059C0();
      uint64_t v32 = sub_253B059A0();
      uint64_t v12 = v33;
      type metadata accessor for TranscriptProtoStatementID(0);
      _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
      *(_DWORD *)uint64_t v2 = v31;
      *(void *)(v2 + 8) = v32;
      *(void *)(v2 + 16) = v12;
      uint64_t v34 = *(void (**)(void))(v38 + 8);
      sub_2534DA4BC();
      v34();
      sub_2534DA4BC();
      v34();
      sub_253AF21C8();
      goto LABEL_12;
    case 9u:
      sub_25347FA84();
      v22();
      uint64_t v23 = sub_253B05570();
      uint64_t v25 = v24;
      sub_2534D91AC();
      v26();
      *(void *)uint64_t v2 = v23;
      *(void *)(v2 + 8) = v25;
      sub_253AF21C8();
LABEL_12:
      swift_storeEnumTagMultiPayload();
      uint64_t v35 = sub_253A56AF8();
      sub_253AF19D0(v35, v36);
      goto LABEL_10;
    case 0xAu:
      sub_253AF2048();
      goto LABEL_9;
    default:
      *(unsigned char *)uint64_t v1 = *(unsigned char *)v0;
      sub_253AF2048();
LABEL_9:
      swift_storeEnumTagMultiPayload();
LABEL_10:
      sub_253AF3410();
      sub_253AF1980();
      sub_253AF19D0(v39, v40);
      sub_253472458(v40, &qword_269CDCBA8);
      uint64_t v27 = sub_253AF25E4();
      sub_253AF19D0(v27, v28);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v40, 0, 1, v12);
      sub_253465A14();
      return;
  }
}

uint64_t TranscriptProtoASTInfixOp.init(handwritten:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t TranscriptProtoASTPickType.init(handwritten:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v4 = a2 & 1;
  if (a2) {
    a1 = 1;
  }
  type metadata accessor for TranscriptProtoASTPickType(0);
  uint64_t result = sub_253945118();
  *(void *)a3 = a1;
  *(unsigned char *)(a3 + 8) = v4;
  return result;
}

void sub_253ADDF74()
{
}

void AST.UpdateKind.init(transcript:)(unsigned char *a1@<X8>)
{
}

uint64_t sub_253ADDFA4(uint64_t a1)
{
  return AST.Update.init(transcript:)(a1);
}

uint64_t sub_253ADDFBC()
{
  return sub_253AA0CDC();
}

void TranscriptProtoASTFlatExprUpdateVariant.init(handwritten:)()
{
  sub_2534B3258();
  uint64_t v7 = v6;
  uint64_t v9 = sub_253AF21FC(v8);
  type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(v9);
  sub_2535B3D7C();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_2534AF2D8();
  uint64_t v12 = type metadata accessor for AST.FlatValue(v11);
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  sub_2534B34A4();
  uint64_t v14 = sub_253462A5C(&qword_269CE22E0);
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v16);
  sub_2534D9EC0();
  sub_253AF1A28(v7, v5);
  TranscriptProtoASTFlatValue.init(handwritten:)();
  uint64_t v17 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  uint64_t v18 = sub_253AF1CDC(v4, 0, 1, v17);
  type metadata accessor for AST.Update(v18);
  sub_253AF337C();
  uint64_t v19 = swift_bridgeObjectRetain();
  sub_253A67288(v19, v20, v21, v22, v23, v24, v25, v26, v36, v38);
  uint64_t v28 = v27;
  sub_253AF1A28(v7 + *(int *)(v2 + 28), v5);
  sub_253AF3088();
  TranscriptProtoASTFlatValue.init(handwritten:)();
  sub_253AF24B8(v3, 0);
  char v29 = *(unsigned char *)(v7 + *(int *)(v2 + 24));
  sub_253AF2400(v0 + *(int *)(v1 + 32));
  uint64_t v30 = v0 + *(int *)(v1 + 36);
  uint64_t v31 = sub_253A3D714();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v31, v32, v33, v17);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v34 = sub_2534D9A78();
  sub_253961BF0(v34, v35, &qword_269CE22E0);
  *(void *)uint64_t v0 = v28;
  sub_253961BF0(v3, v30, &qword_269CE22E0);
  *(unsigned char *)(v0 + 8) = v29;
  sub_253AF19D0(v0, v37);
  sub_253AF1980();
  sub_253465A14();
}

void sub_253ADE1E4()
{
}

uint64_t sub_253ADE20C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return TranscriptProtoASTPickType.init(handwritten:)(*(void *)a1, *(unsigned char *)(a1 + 8), a2);
}

uint64_t sub_253ADE240@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = AST.PickType.init(transcript:)(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5 & 1;
  }
  return result;
}

uint64_t sub_253ADE274()
{
  return sub_253AA0E4C(*(void *)v0, *(unsigned char *)(v0 + 8));
}

void sub_253ADE294()
{
}

uint64_t sub_253ADE2AC()
{
  return sub_253AA0F70();
}

void sub_253ADE2C4()
{
}

uint64_t sub_253ADE2EC@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  unsigned __int8 v4 = *a1;
  uint64_t result = AST.InfixOp.init(transcript:)(&v4);
  *a2 = result;
  return result;
}

uint64_t sub_253ADE330@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  return TranscriptProtoASTInfixOp.init(handwritten:)(*a1, a2);
}

void sub_253ADE35C(unsigned char *a1@<X8>)
{
}

void Action.ParameterValue.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v4 = sub_253971B04();
  uint64_t v5 = type metadata accessor for Action.ParameterValue(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v6);
  sub_2534B3294();
  uint64_t v7 = sub_253462A5C(&qword_269CE1BD0);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_2534966B0();
  uint64_t v9 = sub_253462A5C(&qword_269CDCB00);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_2534D8CAC();
  uint64_t v12 = type metadata accessor for TranscriptProtoToolParameterValue(v11);
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_2534D9B74();
  uint64_t v15 = type metadata accessor for ToolParameterValue(v14);
  uint64_t v16 = sub_25346CB4C(v15);
  MEMORY[0x270FA5388](v16);
  sub_253AF2D98();
  sub_25395E7CC(v17);
  if (!v0)
  {
    ToolParameterValue.init(transcript:)();
    uint64_t v18 = type metadata accessor for TranscriptProtoActionParameterValue(0);
    uint64_t v19 = sub_253AF2C24(v18);
    sub_253961F60(v19, v2, &qword_269CE1BD0);
    sub_253AF2570();
    sub_25395A99C();
    uint64_t v20 = v1 + *(int *)(v5 + 20);
    uint64_t v21 = sub_253B06770();
    sub_25346CC08(v20, v22, v23, v21);
    sub_253AF19D0(v3, v1);
    uint64_t v24 = sub_2539627B8();
    sub_253961BF0(v24, v25, v26);
    sub_253AF3228();
  }
  sub_253AF1980();
  sub_253A3C6AC();
  sub_2534847C8();
}

void ToolParameterValue.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v31 = v3;
  sub_253B08E50();
  sub_253465998();
  uint64_t v30 = v4;
  MEMORY[0x270FA5388](v5);
  sub_2534D8CE4();
  MEMORY[0x270FA5388](v6);
  sub_2534F882C();
  MEMORY[0x270FA5388](v7);
  sub_2534B347C();
  uint64_t v8 = sub_253462A5C(&qword_269CE2490);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_253AF2C54();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v11);
  sub_2534B34A4();
  uint64_t v12 = sub_2534D9AA0();
  sub_253961F60(v12, v13, &qword_269CE2490);
  uint64_t v14 = sub_2536D3ACC();
  sub_2534D8B48(v14, v15, v10);
  if (v16)
  {
    sub_253472458(v1, &qword_269CE2490);
    sub_253462A5C(&qword_269CE8748);
    uint64_t v17 = sub_253AF1E74();
    uint64_t v19 = v18;
    sub_253961DC0();
    uint64_t v20 = sub_2534D969C();
    *uint64_t v21 = v17;
    v21[1] = v19;
    sub_253962224(v20, (uint64_t)v21);
    sub_253AF1980();
  }
  else
  {
    uint64_t v22 = sub_253AF3204();
    sub_253AF19D0(v22, v23);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      sub_253578E58();
      sub_25347FA84();
      v25();
      uint64_t v26 = *(void (**)(void))(v30 + 16);
      sub_2534D9724();
      sub_253962F0C();
      v26();
      sub_253962F0C();
      v26();
      sub_253AF2770();
      sub_253B09110();
      if (v0)
      {
        uint64_t v27 = *(void (**)(void))(v30 + 8);
        sub_2534D9A08();
        v27();
        sub_253AF1980();
        sub_2534D9A08();
        v27();
      }
      else
      {
        char v29 = *(void (**)(void))(v30 + 8);
        sub_2534D9A08();
        v29();
        sub_253AF1980();
        sub_2534D9A08();
        v29();
        type metadata accessor for ToolParameterValue(0);
        sub_253AF2628();
        swift_storeEnumTagMultiPayload();
      }
    }
    else
    {
      sub_253AF1980();
      uint64_t v28 = v2[1];
      *uint64_t v31 = *v2;
      v31[1] = v28;
      type metadata accessor for ToolParameterValue(0);
      sub_253971D44();
      swift_storeEnumTagMultiPayload();
    }
  }
  sub_2536D4C48();
  sub_2534847C8();
}

void sub_253ADE8C0()
{
}

uint64_t sub_253ADE8D8()
{
  return sub_253AA10E0();
}

void TranscriptProtoActionParameterValue.init(handwritten:)()
{
  sub_2534847F8();
  sub_253A7402C();
  uint64_t v4 = sub_253462A5C(&qword_269CDCB00);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_2534B3294();
  uint64_t v6 = sub_253462A5C(&qword_269CE1BD0);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_2534D9C00();
  uint64_t v9 = type metadata accessor for ToolParameterValue(v8);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  sub_2534B34A4();
  uint64_t v11 = sub_253462A5C(&qword_269CE1BE0);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_2534B33AC();
  uint64_t v14 = type metadata accessor for TranscriptProtoToolParameterValue(v13);
  uint64_t v15 = sub_253AF1CDC(v0, 1, 1, v14);
  type metadata accessor for TranscriptProtoActionParameterValue(v15);
  sub_253AF337C();
  uint64_t v17 = v0 + v16;
  uint64_t v18 = type metadata accessor for TranscriptProtoPromptSelection(0);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v17, 1, 1, v18);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v19 = sub_253579264();
  sub_253AF1A28(v19, v20);
  TranscriptProtoToolParameterValue.init(handwritten:)();
  if (v1)
  {
    sub_253AF1980();
    sub_253AF1980();
  }
  else
  {
    uint64_t v21 = sub_253AF3268(v3);
    sub_253AF3B34(v21, v22, &qword_269CE1BE0);
    uint64_t v23 = type metadata accessor for Action.ParameterValue(0);
    uint64_t v24 = sub_253A3E348(v23);
    sub_253961F60(v24, v2, &qword_269CDCB00);
    sub_25395FB90();
    sub_253AF1980();
    uint64_t v25 = sub_2534DA154();
    sub_253961BF0(v25, v26, v27);
  }
  sub_253A3C6AC();
  sub_2534847C8();
}

void TranscriptProtoToolParameterValue.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v34 = v2;
  uint64_t v35 = v3;
  v32[4] = type metadata accessor for TranscriptProtoToolParameterValue(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v4);
  sub_25394437C(v5, v32[0]);
  sub_253B08E50();
  sub_253465998();
  v32[1] = v7;
  v32[2] = v6;
  MEMORY[0x270FA5388](v6);
  sub_253AF1BE0(v8, v32[0]);
  sub_253B09120();
  sub_253465998();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  sub_25353CE24();
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_253971BBC();
  type metadata accessor for ToolParameterValue(v13);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v14);
  sub_253AF2C54();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v15);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (uint64_t *)((char *)v32 - v17);
  sub_253AF1A28(v35, (uint64_t)v1);
  sub_253579334();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v22 = v1[1];
    *uint64_t v18 = *v1;
    v18[1] = v22;
    sub_253579270();
    swift_storeEnumTagMultiPayload();
LABEL_6:
    uint64_t v27 = v33;
    sub_253A7388C(v33, 1);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    sub_253AF1980();
    uint64_t v28 = v27;
    uint64_t v29 = v34;
    sub_253AF19D0(v28, v34);
    sub_253472458(v29, &qword_269CE2490);
    uint64_t v30 = sub_2534ACF74();
    sub_253AF19D0(v30, v31);
    sub_253AF202C(v29);
    goto LABEL_7;
  }
  sub_253A3CF28();
  sub_2534D9B10();
  sub_25347FA84();
  v19();
  sub_2534AF234();
  v20();
  sub_253B09100();
  if (!v0)
  {
    uint64_t v23 = *(void (**)(void))(v10 + 8);
    sub_2534DA4BC();
    v23();
    sub_2534D8E14();
    v24();
    sub_2534DA4BC();
    v23();
    sub_253A56AF8();
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = sub_253A3F354();
    sub_253AF19D0(v25, v26);
    goto LABEL_6;
  }
  uint64_t v21 = *(void (**)(void))(v10 + 8);
  sub_2534DA4BC();
  v21();
  sub_253AF1980();
  sub_2534DA4BC();
  v21();
LABEL_7:
  sub_253A3C6AC();
  sub_2534847C8();
}

void sub_253ADEE5C()
{
}

uint64_t sub_253ADEE74@<X0>(void *a1@<X8>)
{
  return ContextRetrieved.init(transcript:)(a1);
}

uint64_t sub_253ADEE8C()
{
  return sub_253AA1260();
}

uint64_t sub_253ADEEA8@<X0>(void *a1@<X8>)
{
  return TranscriptProtoContextRetrieved.init(handwritten:)(a1);
}

void TranscriptProtoRetrievedContextStatement.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v3 = sub_253AF2ED4(v2);
  uint64_t v38 = type metadata accessor for TranscriptProtoRetrievedContextStatement(v3);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v4);
  sub_253AF1C40(v5, v37);
  sub_253B07AB0();
  sub_253465998();
  uint64_t v42 = v7;
  uint64_t v43 = v6;
  MEMORY[0x270FA5388](v6);
  sub_2536D2C5C(v8, v37);
  uint64_t v9 = sub_253462A5C(&qword_269CE21A0);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v40 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_253AF1D50();
  sub_253465998();
  MEMORY[0x270FA5388](v13);
  sub_25346CC54();
  uint64_t v14 = sub_253462A5C(&qword_26B249528);
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534AF234();
  v18();
  int v19 = sub_253B059C0();
  uint64_t v20 = sub_253B059A0();
  uint64_t v22 = v21;
  type metadata accessor for TranscriptProtoStatementID(0);
  sub_253AF3338();
  *(_DWORD *)uint64_t v17 = v19;
  *((void *)v17 + 1) = v20;
  *((void *)v17 + 2) = v22;
  sub_2534F85D4();
  v23();
  uint64_t v24 = sub_253AF1CDC((uint64_t)v17, 0, 1, v1);
  type metadata accessor for RetrievedContextStatement(v24);
  uint64_t v25 = v41;
  sub_2534B3428();
  v26();
  ContextProtoRetrievedContext.init(context:)(v25, v27, v28, v29, v30, v31, v32, v33, v37, v38, SWORD2(v38), SBYTE6(v38), HIBYTE(v38));
  if (v0)
  {
    sub_253AF1980();
    sub_253472458((uint64_t)v17, &qword_26B249528);
  }
  else
  {
    uint64_t v34 = type metadata accessor for ContextProtoRetrievedContext(0);
    sub_253AF1F50(v34);
    uint64_t v35 = sub_253961BF0((uint64_t)v17, v12, &qword_26B249528);
    sub_253AF2670(v35, v36, &qword_269CE21A0);
    sub_253AF19D0(v12, v39);
    sub_253AF1980();
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void sub_253ADF16C()
{
}

void RetrievedContextStatement.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v2 = sub_253962754(v1);
  uint64_t v3 = type metadata accessor for ContextProtoRetrievedContext(v2);
  uint64_t v4 = sub_25346CB4C(v3);
  MEMORY[0x270FA5388](v4);
  sub_253AF1C20(v5, v15);
  sub_253B07AB0();
  sub_253465998();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_253AF1DF4();
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_253AF2344();
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  sub_253AF26A0();
  if (v0)
  {
    sub_253AF1980();
  }
  else
  {
    sub_253AF2EE4();
    sub_253AF241C();
    sub_253AF1980();
    type metadata accessor for TranscriptProtoRetrievedContextStatement(0);
    sub_253AF3300();
    sub_25395E470(v10);
    sub_253AF31F4();
    RetrievedContext.init(transcript:)();
    sub_253AF1980();
    sub_253AF2560();
    v11();
    uint64_t v12 = type metadata accessor for RetrievedContextStatement(0);
    uint64_t v13 = sub_253AF288C(v12);
    v14(v13);
  }
  sub_253A3C6AC();
  sub_2534847C8();
}

void sub_253ADF3B8()
{
}

uint64_t sub_253ADF3D0()
{
  return sub_253AA1460();
}

void TranscriptProtoDynamicEnumerationEntityStatement.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v3 = sub_253AF2ED4(v2);
  v29[1] = type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement(v3);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v4);
  sub_253AF1C40(v5, v29[0]);
  sub_253B081D0();
  sub_253465998();
  v29[6] = v7;
  v29[7] = v6;
  MEMORY[0x270FA5388](v6);
  sub_2536D2C5C(v8, v29[0]);
  uint64_t v9 = sub_253462A5C(&qword_269CE21B8);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  v29[4] = (uint64_t)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_253AF1D50();
  sub_253465998();
  MEMORY[0x270FA5388](v13);
  sub_25346CC54();
  uint64_t v14 = sub_253462A5C(&qword_26B249528);
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534AF234();
  v18();
  int v19 = sub_253B059C0();
  uint64_t v20 = sub_253B059A0();
  uint64_t v22 = v21;
  type metadata accessor for TranscriptProtoStatementID(0);
  sub_253AF3338();
  *(_DWORD *)uint64_t v17 = v19;
  *((void *)v17 + 1) = v20;
  *((void *)v17 + 2) = v22;
  sub_2534F85D4();
  v23();
  uint64_t v24 = sub_253AF1CDC((uint64_t)v17, 0, 1, v1);
  type metadata accessor for DynamicEnumerationEntityStatement(v24);
  sub_2534B3428();
  v25();
  ContextProtoDynamicEnumerationEntity.init(handwritten:)();
  if (v0)
  {
    sub_253AF1980();
    sub_253472458((uint64_t)v17, &qword_26B249528);
  }
  else
  {
    uint64_t v26 = type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
    sub_253AF1F50(v26);
    uint64_t v27 = sub_253961BF0((uint64_t)v17, v12, &qword_26B249528);
    sub_253AF2670(v27, v28, &qword_269CE21B8);
    sub_253AF19D0(v12, v29[3]);
    sub_253AF1980();
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void sub_253ADF694()
{
}

void DynamicEnumerationEntityStatement.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v2 = sub_253962754(v1);
  uint64_t v3 = type metadata accessor for ContextProtoDynamicEnumerationEntity(v2);
  uint64_t v4 = sub_25346CB4C(v3);
  MEMORY[0x270FA5388](v4);
  sub_253AF1C20(v5, v15);
  sub_253B081D0();
  sub_253465998();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_253AF1DF4();
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_253AF2344();
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  sub_253AF26A0();
  if (v0)
  {
    sub_253AF1980();
  }
  else
  {
    sub_253AF2EE4();
    sub_253AF241C();
    sub_253AF1980();
    type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement(0);
    sub_253AF3300();
    sub_25395E560(v10);
    sub_253AF31F4();
    DynamicEnumerationEntity.init(transcript:)();
    sub_253AF1980();
    sub_253AF2560();
    v11();
    uint64_t v12 = type metadata accessor for DynamicEnumerationEntityStatement(0);
    uint64_t v13 = sub_253AF288C(v12);
    v14(v13);
  }
  sub_253A3C6AC();
  sub_2534847C8();
}

void sub_253ADF8E0()
{
}

uint64_t sub_253ADF8F8()
{
  return sub_253AA15E0();
}

uint64_t sub_253ADF910(uint64_t a1)
{
  return EntitySpanMatchResult.init(transcript:)(a1);
}

uint64_t sub_253ADF928()
{
  return sub_253AA1760();
}

uint64_t sub_253ADF944(uint64_t a1)
{
  return TranscriptProtoEntitySpanMatchResult.init(handwritten:)(a1);
}

void ExecutorError.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v3 = sub_253AF381C(v2);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v4);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v5);
  sub_2534B347C();
  uint64_t v6 = sub_253462A5C(&qword_269CE1D70);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_2534B33AC();
  uint64_t v9 = type metadata accessor for TranscriptProtoExecutorErrorEnum(v8);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v10);
  sub_253AF26D0();
  sub_2534D8B48(v0, 1, v9);
  if (v13)
  {
    sub_253472458(v0, &qword_269CE1D70);
    sub_253462A5C(&qword_269CE8750);
    sub_253AF1E74();
    sub_253AF3940();
    uint64_t v11 = sub_2534D969C();
    *uint64_t v12 = v3;
    v12[1] = (uint64_t)&qword_269CE1D70;
    sub_253962224(v11, (uint64_t)v12);
    sub_253AF1980();
  }
  else
  {
    sub_253AF2848();
    sub_2534D8B48(v1, 1, v3);
    if (v13)
    {
      sub_253AF1980();
    }
    else
    {
      sub_253AF317C();
      sub_253AF2804();
      objc_allocWithZone(MEMORY[0x263F087E8]);
      swift_bridgeObjectRetain();
      sub_253AF3480();
      sub_253B05950();
      sub_253AF1980();
      sub_253AF1980();
      sub_253AF2640();
    }
    uint64_t v14 = sub_253B05940();
    sub_253AF3A40(v14);
  }
  sub_2536D3D5C();
  sub_2534847C8();
}

void SessionCoordinatorError.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v1 = sub_2534F8A1C();
  uint64_t v2 = type metadata accessor for TranscriptProtoIntelligenceFlowError(v1);
  uint64_t v3 = sub_25346CB4C(v2);
  MEMORY[0x270FA5388](v3);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_253A737E8();
  type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(v5);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v6);
  sub_253AF2110();
  sub_25395E1B4(v7);
  if (v0)
  {
    sub_253AF1980();
  }
  else
  {
    sub_253578AC4();
    swift_getEnumCaseMultiPayload();
    sub_253AF317C();
    sub_253AF2804();
    objc_allocWithZone(MEMORY[0x263F087E8]);
    swift_bridgeObjectRetain();
    sub_253AF3250();
    sub_253AE436C(v8, v9, v10, 0);
    sub_253B05950();
    sub_253AF1980();
    sub_253AF1980();
    sub_253AF2640();
    type metadata accessor for SessionCoordinatorError();
    sub_2539446BC();
    swift_storeEnumTagMultiPayload();
  }
  sub_253578DEC();
  sub_2534847C8();
}

void PlannerError.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v3 = sub_253AF381C(v2);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v4);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v5);
  sub_2534B347C();
  uint64_t v6 = sub_253462A5C(&qword_269CE1D88);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_2534B33AC();
  uint64_t v9 = type metadata accessor for TranscriptProtoPlannerErrorEnum(v8);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v10);
  sub_253AF26D0();
  sub_2534D8B48(v0, 1, v9);
  if (v13)
  {
    sub_253472458(v0, &qword_269CE1D88);
    sub_253462A5C(&qword_269CE8758);
    sub_253AF1E74();
    sub_253AF3940();
    uint64_t v11 = sub_2534D969C();
    *uint64_t v12 = v3;
    v12[1] = (uint64_t)&qword_269CE1D88;
    sub_253962224(v11, (uint64_t)v12);
    sub_253AF1980();
  }
  else
  {
    sub_253AF2848();
    sub_2534D8B48(v1, 1, v3);
    if (v13)
    {
      sub_253AF1980();
    }
    else
    {
      sub_253AF317C();
      sub_253AF2804();
      objc_allocWithZone(MEMORY[0x263F087E8]);
      swift_bridgeObjectRetain();
      sub_253AF3480();
      sub_253B05950();
      sub_253AF1980();
      sub_253AF1980();
      sub_253AF2640();
    }
    uint64_t v14 = sub_253B05940();
    sub_253AF3A40(v14);
  }
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_253ADFFC8()
{
}

void TranscriptProtoSessionCoordinatorError.init(handwritten:)()
{
  sub_2534B3258();
  uint64_t v3 = sub_253962754(v2);
  uint64_t v4 = type metadata accessor for TranscriptProtoSessionCoordinatorError(v3);
  uint64_t v5 = sub_253AF3CEC(v4);
  MEMORY[0x270FA5388](v5);
  sub_253AF29A4(v6, v22);
  sub_253465998();
  MEMORY[0x270FA5388](v7);
  sub_2534D8CE4();
  MEMORY[0x270FA5388](v8);
  sub_253A74194();
  type metadata accessor for SessionCoordinatorError();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_25397F55C();
  uint64_t v11 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(v10);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v12);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v13);
  sub_2534D9E98();
  uint64_t v14 = sub_25351C5C0();
  sub_253AF1A28(v14, v15);
  sub_2534ACF74();
  swift_getEnumCaseMultiPayload();
  sub_253AF21E0();
  sub_25347FA84();
  v16();
  sub_253AF3914();
  sub_2534AF234();
  v17();
  TranscriptProtoIntelligenceFlowError.init(handwritten:)();
  sub_253A3D518();
  sub_25347FB18();
  v18();
  sub_253971DD4();
  swift_storeEnumTagMultiPayload();
  sub_253AF19D0(v1, v0);
  uint64_t v19 = sub_253A73E04();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v19, v20, v21, v11);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253AF1980();
  sub_253AF19D0(v23, v24);
  sub_253472458(v24, &qword_269CE1D58);
  sub_253AF19D0(v0, v24);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v24, 0, 1, v11);
  sub_253465A14();
}

void TranscriptProtoPlannerError.init(handwritten:)()
{
  sub_2534B3258();
  uint64_t v5 = v4;
  uint64_t v7 = sub_253AF21FC(v6);
  type metadata accessor for TranscriptProtoPlannerError(v7);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_253AF2D54();
  sub_253465998();
  MEMORY[0x270FA5388](v10);
  sub_2534D8CE4();
  MEMORY[0x270FA5388](v11);
  sub_253A74194();
  uint64_t v12 = type metadata accessor for PlannerError();
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_2534B464C();
  uint64_t v15 = type metadata accessor for TranscriptProtoPlannerErrorEnum(v14);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v16);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v17);
  sub_2534B347C();
  sub_253AF1A28(v5, v0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v0, 1, v9) == 1)
  {
    uint64_t v18 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
    sub_253AF3A80(v18);
  }
  else
  {
    sub_25347FA84();
    v19();
    sub_2534AF234();
    v20();
    TranscriptProtoIntelligenceFlowError.init(handwritten:)();
    sub_2534D91AC();
    v21();
    uint64_t v22 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
    sub_253AF3A60(v22);
    sub_253AF19D0(v3, v2);
  }
  sub_253AF2DF8();
  sub_253AF1980();
  sub_253AF19D0(v1, v23);
  sub_253472458(v23, &qword_269CE1D88);
  sub_253AF19D0(v2, v23);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v23, 0, 1, v15);
  sub_253465A14();
}

void TranscriptProtoExecutorError.init(handwritten:)()
{
  sub_2534B3258();
  uint64_t v5 = v4;
  uint64_t v7 = sub_253AF21FC(v6);
  type metadata accessor for TranscriptProtoExecutorError(v7);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_253AF2D54();
  sub_253465998();
  MEMORY[0x270FA5388](v10);
  sub_2534D8CE4();
  MEMORY[0x270FA5388](v11);
  sub_253A74194();
  uint64_t v12 = type metadata accessor for ExecutorError();
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_2534B464C();
  uint64_t v15 = type metadata accessor for TranscriptProtoExecutorErrorEnum(v14);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v16);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v17);
  sub_2534B347C();
  sub_253AF1A28(v5, v0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v0, 1, v9) == 1)
  {
    uint64_t v18 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
    sub_253AF3A80(v18);
  }
  else
  {
    sub_25347FA84();
    v19();
    sub_2534AF234();
    v20();
    TranscriptProtoIntelligenceFlowError.init(handwritten:)();
    sub_2534D91AC();
    v21();
    uint64_t v22 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
    sub_253AF3A60(v22);
    sub_253AF19D0(v3, v2);
  }
  sub_253AF2DF8();
  sub_253AF1980();
  sub_253AF19D0(v1, v23);
  sub_253472458(v23, &qword_269CE1D70);
  sub_253AF19D0(v2, v23);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v23, 0, 1, v15);
  sub_253465A14();
}

void sub_253AE0744()
{
}

void sub_253AE076C()
{
}

void sub_253AE0784()
{
}

void sub_253AE07AC()
{
}

void sub_253AE07C4()
{
}

void sub_253AE07EC()
{
}

void sub_253AE0804()
{
}

void sub_253AE082C(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_253AE0844()
{
  return sub_253AA1888();
}

uint64_t sub_253AE0888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return TranscriptProtoToolRetrievalResponse.init(handwritten:)(a1, a2);
}

void sub_253AE08A0()
{
}

uint64_t sub_253AE08B8()
{
  return sub_253AA19C0();
}

void sub_253AE08D0()
{
}

void sub_253AE08E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  ExternalAgentTextQuery.init(transcript:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_253AE0900()
{
  return sub_253AA1B40();
}

void sub_253AE0918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  TranscriptProtoExternalAgentTextQuery.init(handwritten:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_253AE0930()
{
}

uint64_t sub_253AE0948()
{
  return sub_253AA1CC0();
}

void sub_253AE0960()
{
}

uint64_t sub_253AE0978(uint64_t a1)
{
  return ExternalAgentOutcome.init(transcript:)(a1);
}

uint64_t sub_253AE0990()
{
  return sub_253AA1E40();
}

void sub_253AE09A8()
{
}

uint64_t sub_253AE09C0()
{
  return ExternalAgentRequestRewriteMetadata.init(transcript:)();
}

uint64_t sub_253AE09D8()
{
  return sub_253AA1FC0(*v0, v0[1], v0[2]);
}

uint64_t sub_253AE09F8()
{
  return TranscriptProtoExternalAgentRequestRewriteMetadata.init(handwritten:)();
}

void ActionSuccess.UndoContext.init(transcript:)()
{
  sub_2535B4280();
  sub_253AF226C();
  uint64_t v1 = sub_253B055C0();
  uint64_t v2 = sub_25346CB4C(v1);
  MEMORY[0x270FA5388](v2);
  sub_253465A3C();
  uint64_t v3 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v4 = sub_25346CB4C(v3);
  MEMORY[0x270FA5388](v4);
  sub_2534966B0();
  sub_253B05560();
  sub_25395D974();
  uint64_t v5 = sub_253578D20();
  sub_253472458(v5, v6);
  if (!v0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2534DA178();
    sub_253B05BA0();
  }
  sub_253AF1980();
  sub_2536D4AAC();
  sub_2535B42DC();
}

void sub_253AE0B28()
{
}

uint64_t sub_253AE0B40()
{
  return sub_253AA20F4();
}

void TranscriptProtoUndoContext.init(handwritten:)()
{
  sub_2534847F8();
  sub_253A733C8();
  uint64_t v4 = sub_253B055C0();
  sub_253465998();
  MEMORY[0x270FA5388](v5);
  sub_253A3DD74();
  sub_253B05B90();
  sub_253B05570();
  sub_253AF2AC8();
  sub_2534D9A08();
  v6();
  sub_253B05B70();
  sub_253AF3C1C();
  uint64_t v7 = sub_253B05B80();
  uint64_t v9 = v8;
  type metadata accessor for TranscriptProtoUndoContext(0);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v0 = v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v1;
  v0[4] = v7;
  v0[5] = v9;
  sub_253B05BB0();
  sub_25346CAF4();
  sub_2534659CC();
  v10();
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_253AE0C58()
{
}

uint64_t ActionSuccess.FollowUpAction.init(transcript:)()
{
  uint64_t v1 = sub_253971B04();
  uint64_t v2 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(v1);
  uint64_t v3 = sub_25346CB4C(v2);
  MEMORY[0x270FA5388](v3);
  sub_2534D9C00();
  uint64_t v4 = sub_253B05B10();
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_253AF2900();
  sub_25395D924(v6);
  if (!v0)
  {
    sub_253AF2694();
    ActionSuccess.FollowUpAction.ExecutableAction.init(transcript:)();
    sub_253B05B20();
  }
  return sub_253AF1980();
}

void ActionSuccess.FollowUpAction.ExecutableAction.init(transcript:)()
{
  sub_2534847F8();
  sub_253462A5C(&qword_269CE8688);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_2534D8CAC();
  uint64_t v6 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(v5);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_2534D8CE4();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_253A737E8();
  uint64_t v10 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(v9);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  sub_2534835B0();
  sub_25395D7CC(v0);
  if (v1)
  {
    sub_253AF1980();
  }
  else
  {
    uint64_t v12 = sub_2534DA034();
    sub_253AF19D0(v12, v13);
    sub_253AF1A28(v2, v3);
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_253592678();
    sub_25348A9C8(v14, v15);
    if (qword_269CDB0A8 != -1) {
      swift_once();
    }
    sub_253AEAA78((unint64_t *)&qword_269CE8690);
    sub_253AF21E0();
    sub_253B05000();
    uint64_t v16 = sub_253592678();
    sub_253487D84(v16, v17);
    sub_253B05AE0();
    sub_253AF1980();
    sub_253AF1980();
    sub_253AF2474();
    sub_253B05B10();
    sub_25346CAF4();
    sub_25346CCF8();
    v18();
  }
  sub_253578DEC();
  sub_2534847C8();
}

uint64_t sub_253AE1028()
{
  return ActionSuccess.FollowUpAction.init(transcript:)();
}

uint64_t sub_253AE1040()
{
  return sub_253AA23A4();
}

void TranscriptProtoFollowUpAction.init(handwritten:)()
{
  sub_2535B4280();
  uint64_t v3 = sub_253971B04();
  type metadata accessor for TranscriptProtoFollowUpAction(v3);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v4);
  sub_2534AF2D8();
  uint64_t v5 = sub_253B05B10();
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_2534966B0();
  uint64_t v7 = sub_253462A5C(&qword_269CE0460);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_253AF20CC();
  sub_253B05B30();
  sub_253AF2570();
  TranscriptProtoFollowUpActionExecutableAction.init(handwritten:)();
  if (!v0)
  {
    uint64_t v9 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
    sub_253AF229C(v9);
    sub_253961BF0(v2, v1, &qword_269CE0460);
    sub_253AF3228();
  }
  sub_253B05B40();
  sub_25346CAF4();
  sub_2534659CC();
  v10();
  sub_2535B42DC();
}

void TranscriptProtoFollowUpActionExecutableAction.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  sub_253B05B00();
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_2534D8CE4();
  MEMORY[0x270FA5388](v5);
  sub_253A737E8();
  sub_253B05B10();
  sub_253465998();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_2534B34A4();
  uint64_t v9 = sub_253462A5C(&qword_269CE0458);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_2534D9B74();
  type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(v11);
  uint64_t v12 = sub_253A3E620();
  uint64_t v33 = v13;
  uint64_t v16 = sub_253AF1CDC(v12, v14, v15, v13);
  type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(v16);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253A3D524();
  sub_2534AF234();
  v17();
  sub_253578368();
  if (v18() == *MEMORY[0x263F4C128])
  {
    sub_253971A70();
    v19();
    sub_253578E58();
    sub_25347FA84();
    v20();
    sub_253A73EE8();
    sub_2534D9FA8();
    sub_2534AF234();
    v21();
    sub_253AF3B60();
    TranscriptProtoFollowUpActionExecutableActionLinkAction.init(handwritten:)();
    if (!v0)
    {
      sub_2534B3470();
      v28();
      sub_2534D9220();
      v29();
      sub_2534AD3FC();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, v31, v32, v33);
      sub_253961BF0(v1, v3, &qword_269CE0458);
      goto LABEL_7;
    }
    sub_2534B3470();
    v22();
    sub_2534D9220();
    v23();
  }
  else
  {
    sub_25394EA00();
    uint64_t v24 = sub_2534D969C();
    sub_253A73498(v24, v25);
    uint64_t v26 = *(void (**)(void))(v7 + 8);
    sub_2534B3470();
    v26();
    uint64_t v27 = sub_253AF21D4();
    ((void (*)(uint64_t))v26)(v27);
  }
  sub_253AF1980();
LABEL_7:
  sub_2536D4C48();
  sub_2534847C8();
}

void sub_253AE143C()
{
}

void ActionSuccess.FollowUpAction.ExecutableAction.LinkAction.init(transcript:)()
{
  sub_2534847F8();
  sub_253462A5C(&qword_269CE8688);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v1);
  sub_25346CC6C();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_2536D5500();
  sub_25348A9C8(v2, v3);
  if (qword_269CDB0A8 != -1) {
    swift_once();
  }
  sub_253AEAA78((unint64_t *)&qword_269CE8690);
  sub_253AF3204();
  sub_253B05000();
  uint64_t v4 = sub_2536D5500();
  sub_253487D84(v4, v5);
  if (v0)
  {
    sub_253AF1980();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2535791D8();
    sub_253B05AE0();
    sub_253AF1980();
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void sub_253AE15BC()
{
}

uint64_t sub_253AE15D4()
{
  return sub_253AA255C();
}

void TranscriptProtoFollowUpActionExecutableActionLinkAction.init(handwritten:)()
{
  sub_2534847F8();
  sub_253AF3D74();
  sub_253462A5C(&qword_269CE8688);
  sub_253465998();
  MEMORY[0x270FA5388](v3);
  sub_2534847E0();
  uint64_t v14 = sub_253B05AF0();
  uint64_t v15 = v4;
  sub_253B05AD0();
  if (qword_269CDB0A0 != -1) {
    swift_once();
  }
  sub_253AEAA78(&qword_269CE8760);
  sub_2534D9A44();
  uint64_t v5 = sub_253B050B0();
  if (v1)
  {
    swift_bridgeObjectRelease();
    sub_253B05B00();
    sub_25346CAF4();
    sub_2534659CC();
    v7();
    sub_2534F85D4();
    v8();
  }
  else
  {
    uint64_t v9 = v5;
    uint64_t v10 = v6;
    sub_2534F85D4();
    v11();
    sub_253B05AC0();
    uint64_t v12 = sub_253578A1C();
    type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(v12);
    sub_253AF378C();
    *uint64_t v2 = v14;
    v2[1] = v15;
    v2[2] = v9;
    v2[3] = v10;
    v2[4] = v0;
    sub_253B05B00();
    sub_25346CAF4();
    (*(void (**)(uint64_t))(v13 + 8))(v0);
  }
  sub_2534F8590();
  sub_2534847C8();
}

void sub_253AE17B4()
{
}

void sub_253AE17CC()
{
}

uint64_t sub_253AE17E4()
{
  return sub_253AA2714();
}

void sub_253AE17FC()
{
}

void sub_253AE1814()
{
}

void ClientAction.ShimParameterResolution.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v5 = v4;
  sub_253AF2BE8(v6);
  sub_253B09120();
  sub_253465998();
  uint64_t v48 = v8;
  uint64_t v49 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v50 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_253483660();
  uint64_t v51 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(v10);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v11);
  uint64_t v55 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v13);
  uint64_t v54 = (char *)&v44 - v14;
  sub_2536D3938();
  sub_253465998();
  uint64_t v53 = v15;
  MEMORY[0x270FA5388](v16);
  sub_2534B340C();
  MEMORY[0x270FA5388](v17);
  sub_2534F8600();
  MEMORY[0x270FA5388](v18);
  sub_25351C738();
  MEMORY[0x270FA5388](v19);
  sub_253578D54();
  MEMORY[0x270FA5388](v20);
  uint64_t v21 = sub_2534DA430();
  type metadata accessor for TranscriptProtoShimParameterResolutionEnum(v21);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v22);
  sub_253AF29D0();
  sub_25395E164(v23);
  if (v1)
  {
    sub_253AF1980();
  }
  else
  {
    uint64_t v45 = v2;
    uint64_t v46 = v0;
    uint64_t v25 = (uint64_t)v54;
    uint64_t v24 = (uint64_t)v55;
    uint64_t v47 = v5;
    sub_253578D20();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_253AF19D0(v3, v25);
      sub_253AF1A28(v25, v24);
      sub_25395DCE8();
      sub_253A73EE8();
      sub_253AF3204();
      sub_2534AF234();
      v26();
      sub_253B09110();
      sub_2534D9220();
      v31();
      uint64_t v32 = swift_bridgeObjectRetain();
      sub_25394F2C0(v32, v33, v34, v35, v36, v37, v38, v39, v44, v45);
      uint64_t v41 = v40;
      sub_253AF1980();
      uint64_t v42 = v52;
      sub_2534D8E14();
      v43();
      *(void *)(v42 + *(int *)(type metadata accessor for ClientAction.UnresolvedParameterValue(0) + 20)) = v41;
      sub_253AF1980();
      sub_253AF1980();
    }
    else
    {
      uint64_t v27 = v53;
      sub_253A56AF8();
      sub_25347FA84();
      v28();
      uint64_t v29 = *(void (**)(void))(v27 + 16);
      sub_253535668();
      v29();
      sub_253A3D518();
      sub_253535668();
      v29();
      sub_253B09110();
      uint64_t v30 = *(void (**)(void))(v27 + 8);
      sub_2534DA4BC();
      v30();
      sub_253AF1980();
      sub_2534DA4BC();
      v30();
    }
    type metadata accessor for ClientAction.ShimParameterResolution(0);
    sub_253A3F4E8();
    swift_storeEnumTagMultiPayload();
  }
  sub_253578DEC();
  sub_2534847C8();
}

void ClientAction.UnresolvedParameterValue.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v20 = v1;
  sub_253B08E50();
  sub_253465998();
  MEMORY[0x270FA5388](v2);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v3);
  sub_253AF252C();
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_2534D8CAC();
  type metadata accessor for TranscriptProtoUnresolvedParameterValue(v5);
  sub_25395DCE8();
  if (v0)
  {
    sub_253AF1980();
  }
  else
  {
    sub_2534AF234();
    v6();
    sub_253AF3088();
    sub_253B09110();
    sub_2534B3470();
    v7();
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_25394F2C0(v8, v9, v10, v11, v12, v13, v14, v15, v19, v20);
    uint64_t v17 = v16;
    sub_253AF1980();
    sub_253A3C378();
    v18();
    *(void *)(v21 + *(int *)(type metadata accessor for ClientAction.UnresolvedParameterValue(0) + 20)) = v17;
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void sub_253AE1F2C()
{
}

uint64_t sub_253AE1F44()
{
  return sub_253AA2A7C();
}

void TranscriptProtoShimParameterResolution.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v5 = sub_253AF3810();
  uint64_t v6 = type metadata accessor for ClientAction.UnresolvedParameterValue(v5);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v39 = (uint64_t)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v9);
  uint64_t v40 = (uint64_t)v38 - v10;
  sub_2536D3938();
  sub_253465998();
  v38[1] = v12;
  void v38[2] = v11;
  MEMORY[0x270FA5388](v11);
  sub_253AF1C9C(v13, v38[0]);
  uint64_t v14 = sub_253B09120();
  sub_253465998();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  sub_25353CE24();
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = sub_253971BBC();
  type metadata accessor for ClientAction.ShimParameterResolution(v19);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v20);
  sub_2534835B0();
  uint64_t v21 = sub_253462A5C(&qword_269CDCC60);
  uint64_t v22 = sub_25346CB4C(v21);
  MEMORY[0x270FA5388](v22);
  uint64_t v23 = sub_25348360C();
  type metadata accessor for TranscriptProtoShimParameterResolutionEnum(v23);
  sub_253465A98();
  v38[3] = v24;
  uint64_t v28 = sub_253AF1CDC(v25, v26, v27, v24);
  type metadata accessor for TranscriptProtoShimParameterResolution(v28);
  uint64_t v41 = v4;
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  uint64_t v29 = sub_253AF25E4();
  sub_253AF1A28(v29, v30);
  sub_253579264();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v31 = v0;
    uint64_t v32 = v40;
    sub_253AF19D0(v31, v40);
    sub_253AF1A28(v32, v39);
    sub_253AF3D5C();
    TranscriptProtoUnresolvedParameterValue.init(handwritten:)();
    sub_253AF1980();
    sub_253AF1980();
    if (!v1) {
      goto LABEL_8;
    }
  }
  else
  {
    sub_2535787F4();
    sub_25347FA84();
    v33();
    sub_253578EEC();
    sub_2534AF234();
    v34();
    sub_253B09100();
    if (!v1)
    {
      uint64_t v36 = *(void (**)(void))(v16 + 8);
      sub_2534D91AC();
      v36();
      sub_2534D8E14();
      v37();
      sub_253AF1980();
      sub_2534D91AC();
      v36();
LABEL_8:
      swift_storeEnumTagMultiPayload();
      sub_253A73620(v3);
      sub_253961BF0(v3, v41, &qword_269CDCC60);
      goto LABEL_9;
    }
    uint64_t v35 = *(void (**)(void))(v16 + 8);
    sub_2534D91AC();
    v35();
    sub_253AF1980();
    ((void (*)(uint64_t, uint64_t))v35)(v2, v14);
  }
  sub_253AF1980();
LABEL_9:
  sub_2534F856C();
  sub_2534847C8();
}

void TranscriptProtoUnresolvedParameterValue.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v4 = sub_253AF25F0(v3);
  type metadata accessor for TranscriptProtoUnresolvedParameterValue(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  sub_253AF236C();
  sub_253465998();
  uint64_t v21 = v6;
  MEMORY[0x270FA5388](v6);
  sub_253AF1EE4();
  sub_253465998();
  MEMORY[0x270FA5388](v7);
  sub_25346CC54();
  uint64_t v8 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  sub_2534966B0();
  sub_253AF2300();
  sub_2534AF234();
  v10();
  sub_253B09100();
  if (v1)
  {
    uint64_t v11 = sub_253AF3A08();
    v12(v11);
  }
  else
  {
    sub_25351C3E8();
    v13();
    sub_2534D8E14();
    v14();
    uint64_t v15 = sub_253AF1CDC(v2, 0, 1, v21);
    type metadata accessor for ClientAction.UnresolvedParameterValue(v15);
    uint64_t v16 = swift_bridgeObjectRetain();
    uint64_t v17 = sub_253AC7D1C(v16);
    uint64_t v18 = sub_253AF277C();
    sub_253AF2670(v18, v19, &qword_269CDCBC8);
    *uint64_t v0 = v17;
    sub_253AF19D0((uint64_t)v0, v20);
  }
  sub_253AF1980();
  sub_253A73FF4();
  sub_2534847C8();
}

void sub_253AE2548()
{
}

void sub_253AE2560()
{
}

uint64_t sub_253AE2578()
{
  return sub_253AA2BFC();
}

void sub_253AE2590()
{
}

void sub_253AE25A8()
{
}

uint64_t sub_253AE25C0@<X0>(void *a1@<X8>)
{
  return TranscriptProtoValueDisambiguation.init(handwritten:)(a1);
}

uint64_t ValueDisambiguation.init(transcript:)()
{
  sub_253AF3D74();
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_25394F2C0(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11);
  if (!v0) {
    sub_253B05DE0();
  }
  return sub_253AF1980();
}

uint64_t sub_253AE263C()
{
  return ValueDisambiguation.init(transcript:)();
}

char *sub_253AE2654()
{
  return sub_253AA2D7C();
}

void TranscriptProtoActionFailureFailure.init(handwritten:)()
{
  sub_2534847F8();
  uint64_t v76 = v0;
  uint64_t v4 = v3;
  sub_253AF3810();
  uint64_t v74 = sub_253B05A50();
  sub_253465998();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  char v73 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v9);
  sub_253AF33D0();
  uint64_t v10 = sub_253B05A00();
  sub_253465998();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  sub_25346CC54();
  uint64_t v14 = sub_253462A5C(&qword_269CE04A0);
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  uint64_t v77 = (uint64_t *)((char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_253483660();
  uint64_t v18 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(v17);
  uint64_t v19 = sub_253AF1CDC(v2, 1, 1, v18);
  type metadata accessor for TranscriptProtoActionFailureFailure(v19);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  sub_253AF2300();
  uint64_t v75 = v4;
  sub_2534AF234();
  v20();
  sub_253578368();
  int v22 = v21();
  if (v22 == *MEMORY[0x263F4C050])
  {
    uint64_t v69 = v10;
    sub_253971A70();
    v23();
    uint64_t v71 = v1;
    sub_25347FA84();
    v24();
    sub_2534AF234();
    v25();
    uint64_t v70 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    sub_253AF378C();
    *uint64_t v77 = sub_253B05A20();
    v77[1] = v26;
    uint64_t v77[2] = sub_253B05A40();
    v77[3] = v27;
    uint64_t v28 = sub_253B05A30();
    uint64_t v72 = v18;
    uint64_t v29 = *(void (**)(void))(v6 + 8);
    sub_2534B3470();
    v29();
    v77[4] = v28;
    sub_2534D97B4();
    v30();
    sub_2534B3470();
    v29();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v77, 0, 16, v70);
  }
  else
  {
    if (v22 == *MEMORY[0x263F4BFE8])
    {
      uint64_t v31 = sub_253AF1BC8();
      v32(v31);
      type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      uint64_t v33 = sub_253AF221C();
      uint64_t v35 = 1;
    }
    else if (v22 == *MEMORY[0x263F4C058])
    {
      uint64_t v36 = sub_253AF1BC8();
      v37(v36);
      type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      uint64_t v33 = sub_253AF221C();
      uint64_t v35 = 2;
    }
    else if (v22 == *MEMORY[0x263F4C038])
    {
      uint64_t v38 = sub_253AF1BC8();
      v39(v38);
      type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      uint64_t v33 = sub_253AF221C();
      uint64_t v35 = 3;
    }
    else if (v22 == *MEMORY[0x263F4C008])
    {
      uint64_t v40 = sub_253AF1BC8();
      v41(v40);
      type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      uint64_t v33 = sub_253AF221C();
      uint64_t v35 = 4;
    }
    else if (v22 == *MEMORY[0x263F4C040])
    {
      uint64_t v42 = sub_253AF1BC8();
      v43(v42);
      type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      uint64_t v33 = sub_253AF221C();
      uint64_t v35 = 5;
    }
    else if (v22 == *MEMORY[0x263F4BFF0])
    {
      uint64_t v44 = sub_253AF1BC8();
      v45(v44);
      type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      uint64_t v33 = sub_253AF221C();
      uint64_t v35 = 6;
    }
    else if (v22 == *MEMORY[0x263F4BFF8])
    {
      uint64_t v46 = sub_253AF1BC8();
      v47(v46);
      type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      uint64_t v33 = sub_253AF221C();
      uint64_t v35 = 7;
    }
    else if (v22 == *MEMORY[0x263F4C048])
    {
      uint64_t v48 = sub_253AF1BC8();
      v49(v48);
      type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      uint64_t v33 = sub_253AF221C();
      uint64_t v35 = 8;
    }
    else if (v22 == *MEMORY[0x263F4C060])
    {
      uint64_t v50 = sub_253AF1BC8();
      v51(v50);
      type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      uint64_t v33 = sub_253AF221C();
      uint64_t v35 = 9;
    }
    else if (v22 == *MEMORY[0x263F4C018])
    {
      uint64_t v52 = sub_253AF1BC8();
      v53(v52);
      type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      uint64_t v33 = sub_253AF221C();
      uint64_t v35 = 10;
    }
    else if (v22 == *MEMORY[0x263F4C030])
    {
      uint64_t v54 = sub_253AF1BC8();
      v55(v54);
      type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      uint64_t v33 = sub_253AF221C();
      uint64_t v35 = 11;
    }
    else if (v22 == *MEMORY[0x263F4C068])
    {
      uint64_t v56 = sub_253AF1BC8();
      v57(v56);
      type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      uint64_t v33 = sub_253AF221C();
      uint64_t v35 = 14;
    }
    else if (v22 == *MEMORY[0x263F4C020])
    {
      uint64_t v58 = sub_253AF1BC8();
      v59(v58);
      type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      uint64_t v33 = sub_253AF221C();
      uint64_t v35 = 15;
    }
    else if (v22 == *MEMORY[0x263F4C000])
    {
      sub_2534D97B4();
      v60();
      type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      uint64_t v33 = sub_253AF3A34();
      uint64_t v35 = 12;
    }
    else if (v22 == *MEMORY[0x263F4C010])
    {
      sub_2534D97B4();
      v61();
      type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      uint64_t v33 = sub_253AF3A34();
      uint64_t v35 = 13;
    }
    else
    {
      if (v22 != *MEMORY[0x263F4C028])
      {
        sub_25394EA00();
        uint64_t v66 = sub_2534D969C();
        sub_253A73498(v66, v67);
        uint64_t v68 = *(void (**)(void))(v12 + 8);
        sub_2534D97B4();
        v68();
        sub_2534D97B4();
        v68();
        sub_253AF1980();
        goto LABEL_37;
      }
      sub_2534D97B4();
      v62();
      type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      uint64_t v33 = sub_253AF3A34();
      uint64_t v35 = 16;
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v33, v35, 16, v34);
  }
  sub_253AF202C((uint64_t)v77);
  uint64_t v63 = sub_253592678();
  sub_253961BF0(v63, v64, v65);
LABEL_37:
  sub_253578DEC();
  sub_2534847C8();
}

uint64_t sub_253AE2CCC()
{
  return TranscriptProtoActionFailure.init(handwritten:)();
}

void ActionFailure.Failure.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  uint64_t v5 = sub_253962754(v4);
  uint64_t v6 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(v5);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v7);
  sub_2534B340C();
  MEMORY[0x270FA5388](v8);
  sub_2534D90F4();
  uint64_t v9 = sub_253462A5C(&qword_269CE04A0);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_2534B33AC();
  uint64_t v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(v11);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253961F60(v3, v1, &qword_269CE04A0);
  sub_2534D8B48(v1, 1, v12);
  if (v16)
  {
    sub_253472458(v1, &qword_269CE04A0);
    sub_253462A5C(&qword_269CE8768);
    sub_253AF1E74();
    sub_253AF3940();
    uint64_t v17 = sub_2534D969C();
    *uint64_t v18 = &qword_269CE04A0;
    v18[1] = v0;
    sub_253962224(v17, (uint64_t)v18);
    sub_253AF1980();
  }
  else
  {
    sub_253AF2848();
    int v19 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 16, v6);
    switch(v19)
    {
      case 1:
        sub_253AF1980();
        uint64_t v25 = (unsigned int *)MEMORY[0x263F4BFE8];
        goto LABEL_22;
      case 2:
        sub_253AF1980();
        uint64_t v25 = (unsigned int *)MEMORY[0x263F4C058];
        goto LABEL_22;
      case 3:
        sub_253AF1980();
        uint64_t v25 = (unsigned int *)MEMORY[0x263F4C038];
        goto LABEL_22;
      case 4:
        sub_253AF1980();
        uint64_t v25 = (unsigned int *)MEMORY[0x263F4C008];
        goto LABEL_22;
      case 5:
        sub_253AF1980();
        uint64_t v25 = (unsigned int *)MEMORY[0x263F4C040];
        goto LABEL_22;
      case 6:
        sub_253AF1980();
        uint64_t v25 = (unsigned int *)MEMORY[0x263F4BFF0];
        goto LABEL_22;
      case 7:
        sub_253AF1980();
        uint64_t v25 = (unsigned int *)MEMORY[0x263F4BFF8];
        goto LABEL_22;
      case 8:
        sub_253AF1980();
        uint64_t v25 = (unsigned int *)MEMORY[0x263F4C048];
        goto LABEL_22;
      case 9:
        sub_253AF1980();
        uint64_t v25 = (unsigned int *)MEMORY[0x263F4C060];
        goto LABEL_22;
      case 10:
        sub_253AF1980();
        uint64_t v25 = (unsigned int *)MEMORY[0x263F4C018];
        goto LABEL_22;
      case 11:
        sub_253AF1980();
        uint64_t v25 = (unsigned int *)MEMORY[0x263F4C030];
        goto LABEL_22;
      case 12:
        sub_253AF1980();
        uint64_t v25 = (unsigned int *)MEMORY[0x263F4C000];
        goto LABEL_22;
      case 13:
        sub_253AF1980();
        uint64_t v25 = (unsigned int *)MEMORY[0x263F4C010];
        goto LABEL_22;
      case 14:
        sub_253AF1980();
        uint64_t v25 = (unsigned int *)MEMORY[0x263F4C068];
        goto LABEL_22;
      case 15:
        sub_253AF1980();
        uint64_t v25 = (unsigned int *)MEMORY[0x263F4C020];
        goto LABEL_22;
      case 16:
        sub_253AF1980();
        uint64_t v25 = (unsigned int *)MEMORY[0x263F4C028];
LABEL_22:
        uint64_t v26 = *v25;
        sub_253B05A00();
        sub_25346CAF4();
        (*(void (**)(uint64_t, uint64_t))(v27 + 104))(v29, v26);
        break;
      default:
        uint64_t v20 = sub_253AF21D4();
        sub_253AF19D0(v20, v21);
        sub_253AF2BF4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v22 = v29;
        sub_2534DA5AC();
        sub_253AF356C();
        MEMORY[0x25A264A10]();
        sub_253AF1980();
        sub_253AF1980();
        sub_253AF3BB0();
        uint64_t v23 = *MEMORY[0x263F4C050];
        sub_253B05A00();
        sub_25346CAF4();
        (*(void (**)(uint64_t, uint64_t))(v24 + 104))(v22, v23);
        break;
    }
  }
  sub_2536D3D5C();
  sub_2534847C8();
}

uint64_t sub_253AE3288()
{
  return ActionFailure.init(transcript:)();
}

uint64_t sub_253AE32A0()
{
  return sub_253AA2F80();
}

void ActionFailure.DeveloperDefinedError.init(transcript:)()
{
  sub_2535B4280();
  sub_253AF3138();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_253AF259C();
  MEMORY[0x25A264A10](v0);
  sub_253AF1980();
  sub_2535B42DC();
}

void sub_253AE3334()
{
}

uint64_t TranscriptProtoActionFailureDeveloperDefinedError.init(handwritten:)()
{
  uint64_t v2 = sub_253AF226C();
  type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(v2);
  sub_253AF378C();
  *uint64_t v0 = sub_253B05A20();
  v0[1] = v3;
  v0[2] = sub_253B05A40();
  v0[3] = v4;
  sub_253B05A30();
  sub_253AF35AC();
  sub_253B05A50();
  sub_25346CAF4();
  sub_2534659CC();
  uint64_t result = v5();
  v0[4] = v1;
  return result;
}

void sub_253AE33CC()
{
}

void sub_253AE33E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  UndoRedoRequest.init(transcript:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_253AE33FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  TranscriptProtoUndoRedoRequest.init(handwritten:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_253AE3414()
{
}

void sub_253AE342C()
{
}

uint64_t sub_253AE3444(unsigned __int8 *a1)
{
  return AppRequirement.init(transcript:)(a1);
}

void sub_253AE345C()
{
}

uint64_t sub_253AE3474(unsigned char *a1)
{
  return PermissionRequirement.init(transcript:)(a1);
}

void sub_253AE348C()
{
}

uint64_t sub_253AE34A4()
{
  return TranscriptProtoSystemPromptResolutionRequirementResolution.init(handwritten:)();
}

uint64_t sub_253AE34D8@<X0>(char *a1@<X0>, unsigned char *a2@<X8>)
{
  return RequestContent.SystemPromptResolution.RequirementResolution.init(transcript:)(a1, a2);
}

uint64_t sub_253AE34F0()
{
  return sub_253AA3138(*v0);
}

uint64_t sub_253AE350C()
{
  return RequestContent.SystemPromptResolution.ActionCancellation.init(transcript:)();
}

uint64_t sub_253AE3524()
{
  return sub_253AA3244();
}

void sub_253AE353C()
{
}

void sub_253AE3554()
{
}

uint64_t sub_253AE356C()
{
  return sub_253AA3344();
}

void sub_253AE3584()
{
}

void sub_253AE359C()
{
}

#error "253AE3794: call analysis failed (funcsize=202)"

void sub_253AE391C()
{
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant.init(handwritten:)(uint64_t a1)
{
  uint64_t v3 = sub_253AF226C();
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(v3);
  uint64_t result = _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *uint64_t v1 = a1;
  return result;
}

uint64_t sub_253AE397C(uint64_t *a1)
{
  return TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant.init(handwritten:)(*a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.init(handwritten:)@<X0>(void *a1@<X8>)
{
  return sub_253AE3B48((uint64_t (*)(void))sub_253AC7D1C, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant, a1);
}

uint64_t sub_253AE39D8@<X0>(void *a1@<X8>)
{
  return TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.init(handwritten:)(a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.init(handwritten:)@<X0>(void *a1@<X8>)
{
  return sub_253AE3B48((uint64_t (*)(void))sub_253A59C0C, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant, a1);
}

uint64_t sub_253AE3A34@<X0>(void *a1@<X8>)
{
  return TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.init(handwritten:)(a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant.init(handwritten:)@<X0>(void *a1@<X8>)
{
  return sub_253AE3B48((uint64_t (*)(void))sub_253A6302C, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant, a1);
}

uint64_t sub_253AE3A90@<X0>(void *a1@<X8>)
{
  return TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant.init(handwritten:)(a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.init(handwritten:)@<X0>(void *a1@<X8>)
{
  return sub_253AE3B48((uint64_t (*)(void))sub_253A63CA4, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant, a1);
}

uint64_t sub_253AE3AEC@<X0>(void *a1@<X8>)
{
  return TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.init(handwritten:)(a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.init(handwritten:)@<X0>(void *a1@<X8>)
{
  return sub_253AE3B48((uint64_t (*)(void))sub_253A63FB8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant, a1);
}

uint64_t sub_253AE3B48@<X0>(uint64_t (*a1)(void)@<X1>, void (*a2)(uint64_t)@<X2>, void *a3@<X8>)
{
  uint64_t result = a1();
  if (!v3)
  {
    uint64_t v8 = sub_253AF35AC();
    a2(v8);
    uint64_t result = sub_253945118();
    *a3 = v4;
  }
  return result;
}

uint64_t sub_253AE3B9C@<X0>(void *a1@<X8>)
{
  return TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.init(handwritten:)(a1);
}

uint64_t sub_253AE3BB8(uint64_t a1, uint64_t a2)
{
  sub_253472458(a1, &qword_269CE25A0);
  sub_253AF1A28(a2, a1);
  DecorationPrePlannerPayloaduint64_t Enum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, DecorationPrePlannerPayloadEnum);
}

uint64_t sub_253AE3C34(uint64_t a1)
{
  return TranscriptProtoQueryDecorationPrePlannerResultPayload.init(handwritten:)(a1);
}

void sub_253AE3C4C()
{
}

uint64_t sub_253AE3C64()
{
  return sub_253AA34C4();
}

void sub_253AE3C7C()
{
}

uint64_t sub_253AE3C94()
{
  return sub_253AA3644();
}

void QueryDecorationPrePlannerResultPayload.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v77 = v6;
  uint64_t v78 = v2;
  uint64_t DecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
  uint64_t v8 = sub_25346CB4C(DecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
  MEMORY[0x270FA5388](v8);
  uint64_t v76 = (uint64_t (*)(uint64_t))((char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_253483660();
  uint64_t DecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(v10);
  uint64_t v12 = sub_25346CB4C(DecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
  MEMORY[0x270FA5388](v12);
  uint64_t v75 = (uint64_t)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_253483660();
  uint64_t DecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(v14);
  uint64_t v16 = sub_25346CB4C(DecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = sub_2534D8CAC();
  uint64_t DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(v17);
  uint64_t v19 = sub_25346CB4C(DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
  MEMORY[0x270FA5388](v19);
  uint64_t v20 = sub_25349888C();
  uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(v20);
  uint64_t v22 = sub_25346CB4C(DecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
  MEMORY[0x270FA5388](v22);
  uint64_t v23 = sub_2534D9B74();
  uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(v23);
  uint64_t v25 = sub_25346CB4C(DecorationPrePlannerResultPayloadRepeatedStringVariant);
  MEMORY[0x270FA5388](v25);
  sub_25346CC54();
  uint64_t v26 = sub_253462A5C(&qword_269CE25A0);
  uint64_t v27 = sub_25346CB4C(v26);
  MEMORY[0x270FA5388](v27);
  uint64_t v28 = sub_25397F55C();
  DecorationPrePlannerPayloaduint64_t Enum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(v28);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v30);
  sub_2534966B0();
  uint64_t v31 = sub_25353CE6C();
  sub_253961F60(v31, v32, &qword_269CE25A0);
  uint64_t v33 = sub_2539627D4();
  sub_2534D8B48(v33, v34, DecorationPrePlannerPayloadEnum);
  if (v35)
  {
    sub_253472458(v0, &qword_269CE25A0);
    sub_253462A5C(&qword_269CE8770);
    sub_253AF1E74();
    sub_25396263C();
    uint64_t v36 = sub_2534D969C();
    *uint64_t v37 = v0;
    v37[1] = (uint64_t)v1;
    sub_253962224(v36, (uint64_t)v37);
LABEL_4:
    sub_253AF1980();
  }
  else
  {
    sub_253AF19D0(v0, v4);
    sub_2535B4148();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v39 = v78;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        sub_253AF19D0(v4, v5);
        uint64_t v41 = swift_bridgeObjectRetain();
        sub_25394F2C0(v41, v42, v43, v44, v45, v46, v47, v48, v75, (uint64_t)v76);
        sub_253AF3664();
        sub_253AF1980();
        sub_253AF1980();
        if (!v39)
        {
          char v40 = 1;
          goto LABEL_18;
        }
        break;
      case 2:
        sub_253AF2848();
        uint64_t v49 = swift_bridgeObjectRetain();
        sub_253950474(v49, v50, v51, v52, v53, v54, v55, v56, v75, (uint64_t)v76);
        sub_253AF3664();
        sub_253AF1980();
        sub_253AF1980();
        if (!v39)
        {
          char v40 = 2;
          goto LABEL_18;
        }
        break;
      case 3:
        sub_253AF19D0(v4, v3);
        uint64_t v57 = swift_bridgeObjectRetain();
        sub_2539507F4(v57, v58, v59, v60, v61, v62, v63, v64, v75, v76);
        sub_253AF3664();
        sub_253AF1980();
        sub_253AF1980();
        if (!v39)
        {
          char v40 = 3;
          goto LABEL_18;
        }
        break;
      case 4:
        sub_253AF19D0(v4, v75);
        swift_bridgeObjectRetain();
        sub_25394FB40();
        sub_253AF3664();
        sub_253AF1980();
        sub_253AF1980();
        if (!v39)
        {
          char v40 = 4;
          goto LABEL_18;
        }
        break;
      case 5:
        sub_253AF19D0(v4, (uint64_t)v76);
        uint64_t v65 = swift_bridgeObjectRetain();
        sub_253950F80(v65, v66, v67, v68, v69, v70, v71, v72, v75, v76);
        if (v39)
        {
          sub_253AF1980();
          goto LABEL_4;
        }
        uint64_t v4 = v73;
        sub_253AF1980();
        sub_253AF1980();
        char v40 = 5;
        goto LABEL_18;
      default:
        sub_253AF1980();
        sub_253AF3B1C();
        uint64_t v4 = *v1;
        swift_bridgeObjectRetain();
        sub_253AF1980();
        char v40 = 0;
LABEL_18:
        uint64_t v74 = v77;
        *uint64_t v77 = v4;
        *((unsigned char *)v74 + 8) = v40;
        break;
    }
  }
  sub_253579494();
  sub_2534847C8();
}

void sub_253AE426C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  QueryDecorationPrePlannerResult.init(transcript:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_253AE4284()
{
  return sub_253AA37C4();
}

void sub_253AE429C()
{
}

uint64_t sub_253AE42B4()
{
  return sub_253AA3944(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_253AE42D4()
{
  return TranscriptProtoActionFailureDeveloperDefinedError.init(handwritten:)();
}

void sub_253AE42EC()
{
}

uint64_t sub_253AE4304()
{
  return sub_253AA3A78();
}

uint64_t sub_253AE431C()
{
  return TranscriptProtoContinuePlanning.init(handwritten:)();
}

uint64_t sub_253AE4344()
{
  return ContinuePlanning.init(transcript:)();
}

id sub_253AE436C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)sub_253B096D0();
  swift_bridgeObjectRelease();
  if (a4)
  {
    uint64_t v8 = (void *)sub_253B09570();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = 0;
  }
  id v9 = objc_msgSend(v4, sel_initWithDomain_code_userInfo_, v7, a3, v8);

  return v9;
}

uint64_t sub_253AE441C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_253462A5C(&qword_269CE8C38);
  char v37 = a2;
  uint64_t v6 = sub_253B0A240();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_39;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  char v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  if (!v10) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v15 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v15 | (v14 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v14 << 6))
  {
    uint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * i);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    uint64_t v24 = *(void *)(*(void *)(v5 + 56) + 8 * i);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_253B0A5F0();
    sub_253B09630();
    uint64_t result = sub_253B0A630();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v12 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v12 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t v33 = (void *)(*(void *)(v7 + 48) + 16 * v28);
    *uint64_t v33 = v23;
    v33[1] = v22;
    *(void *)(*(void *)(v7 + 56) + 8 * v28) = v24;
    ++*(void *)(v7 + 16);
    if (v10) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      goto LABEL_41;
    }
    if (v17 >= v11)
    {
      swift_release();
      uint64_t v3 = v35;
      uint64_t v18 = (void *)(v5 + 64);
      goto LABEL_34;
    }
    uint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v36 + 8 * v17);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v17 + 1;
      if (v17 + 1 >= v11) {
        goto LABEL_32;
      }
      unint64_t v19 = *(void *)(v36 + 8 * v14);
      if (!v19) {
        break;
      }
    }
LABEL_18:
    unint64_t v10 = (v19 - 1) & v19;
  }
  int64_t v20 = v17 + 2;
  if (v20 < v11)
  {
    unint64_t v19 = *(void *)(v36 + 8 * v20);
    if (!v19)
    {
      while (1)
      {
        int64_t v14 = v20 + 1;
        if (__OFADD__(v20, 1)) {
          goto LABEL_42;
        }
        if (v14 >= v11) {
          goto LABEL_32;
        }
        unint64_t v19 = *(void *)(v36 + 8 * v14);
        ++v20;
        if (v19) {
          goto LABEL_18;
        }
      }
    }
    int64_t v14 = v20;
    goto LABEL_18;
  }
LABEL_32:
  swift_release();
  uint64_t v3 = v35;
LABEL_34:
  if (v37)
  {
    uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
    if (v34 >= 64) {
      sub_253AE5AC4(0, (unint64_t)(v34 + 63) >> 6, v18);
    }
    else {
      *uint64_t v18 = -1 << v34;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_39:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void sub_253AE4714(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_253462A5C(&qword_269CE8CB8);
  sub_2534DA5AC();
  char v32 = a2;
  uint64_t v33 = (void *)sub_253B0A240();
  if (*(void *)(v5 + 16))
  {
    sub_253AF2E5C();
    BOOL v31 = v8;
    uint64_t v9 = -1;
    if (v6 < 64) {
      uint64_t v9 = ~(-1 << v6);
    }
    unint64_t v10 = v9 & v7;
    char v29 = v2;
    int64_t v30 = (unint64_t)(v6 + 63) >> 6;
    swift_retain();
    int64_t v11 = 0;
    if (!v10) {
      goto LABEL_6;
    }
LABEL_5:
    unint64_t v12 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      int64_t v20 = (uint64_t *)(*(void *)(v5 + 48) + 48 * i);
      uint64_t v22 = *v20;
      uint64_t v21 = v20[1];
      uint64_t v23 = v20[2];
      uint64_t v24 = v20[3];
      uint64_t v25 = v20[4];
      uint64_t v26 = v20[5];
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * i);
      if ((v32 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v34[0] = v22;
      v34[1] = v21;
      v34[2] = v23;
      v34[3] = v24;
      v34[4] = v25;
      v34[5] = v26;
      sub_253AE5998((uint64_t)v34, v27, v33);
      if (v10) {
        goto LABEL_5;
      }
LABEL_6:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1))
      {
        __break(1u);
LABEL_30:
        __break(1u);
        return;
      }
      if (v14 >= v30) {
        goto LABEL_23;
      }
      unint64_t v15 = v31[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v30) {
          goto LABEL_23;
        }
        unint64_t v15 = v31[v11];
        if (!v15)
        {
          sub_253AF350C();
          if (v18 == v19)
          {
LABEL_23:
            swift_release();
            uint64_t v3 = v29;
            if (v32)
            {
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 > 63) {
                sub_253AF3538(v28);
              }
              else {
                *BOOL v31 = -1 << v28;
              }
              *(void *)(v5 + 16) = 0;
            }
            break;
          }
          unint64_t v15 = v31[v16];
          if (!v15)
          {
            while (1)
            {
              int64_t v11 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_30;
              }
              if (v11 >= v17) {
                goto LABEL_23;
              }
              unint64_t v15 = v31[v11];
              ++v16;
              if (v15) {
                goto LABEL_18;
              }
            }
          }
          int64_t v11 = v16;
        }
      }
LABEL_18:
      unint64_t v10 = (v15 - 1) & v15;
    }
  }
  swift_release();
  *uint64_t v3 = v33;
}

uint64_t sub_253AE492C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_253462A5C(&qword_26B24A3C0);
  char v37 = a2;
  uint64_t v6 = sub_253B0A240();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_39;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  if (!v10) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v13 << 6))
  {
    int64_t v20 = (uint64_t *)(*(void *)(v5 + 48) + 16 * i);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    uint64_t v23 = *(void *)(*(void *)(v5 + 56) + 8 * i);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_253B0A5F0();
    sub_253B09630();
    uint64_t result = sub_253B0A630();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) == 0)
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v29 || (v28 & 1) == 0)
      {
        BOOL v30 = v26 == v29;
        if (v26 == v29) {
          unint64_t v26 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v26);
        if (v31 != -1)
        {
          unint64_t v27 = __clz(__rbit64(~v31)) + (v26 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    unint64_t v27 = __clz(__rbit64((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v11 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    char v32 = (void *)(*(void *)(v7 + 48) + 16 * v27);
    *char v32 = v22;
    v32[1] = v21;
    *(void *)(*(void *)(v7 + 56) + 8 * v27) = v23;
    ++*(void *)(v7 + 16);
    if (v10) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v16 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      goto LABEL_41;
    }
    if (v16 >= v35)
    {
      swift_release();
      uint64_t v3 = v34;
      int64_t v17 = (void *)(v5 + 64);
      goto LABEL_34;
    }
    int64_t v17 = (void *)(v5 + 64);
    unint64_t v18 = *(void *)(v36 + 8 * v16);
    ++v13;
    if (!v18)
    {
      int64_t v13 = v16 + 1;
      if (v16 + 1 >= v35) {
        goto LABEL_32;
      }
      unint64_t v18 = *(void *)(v36 + 8 * v13);
      if (!v18) {
        break;
      }
    }
LABEL_18:
    unint64_t v10 = (v18 - 1) & v18;
  }
  int64_t v19 = v16 + 2;
  if (v19 < v35)
  {
    unint64_t v18 = *(void *)(v36 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        int64_t v13 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          goto LABEL_42;
        }
        if (v13 >= v35) {
          goto LABEL_32;
        }
        unint64_t v18 = *(void *)(v36 + 8 * v13);
        ++v19;
        if (v18) {
          goto LABEL_18;
        }
      }
    }
    int64_t v13 = v19;
    goto LABEL_18;
  }
LABEL_32:
  swift_release();
  uint64_t v3 = v34;
LABEL_34:
  if (v37)
  {
    uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
    if (v33 >= 64) {
      sub_253AE5AC4(0, (unint64_t)(v33 + 63) >> 6, v17);
    }
    else {
      *int64_t v17 = -1 << v33;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_39:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void sub_253AE4C28()
{
  sub_2534B3258();
  uint64_t v3 = v1;
  int v5 = v4;
  sub_253578A1C();
  uint64_t v57 = sub_253B05870();
  sub_253465998();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  uint64_t v56 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  uint64_t v10 = sub_253B05830();
  sub_253465998();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  sub_2534835B0();
  uint64_t v14 = *v1;
  sub_253462A5C(&qword_269CE8CA8);
  sub_253A3E5C8();
  int v54 = v5;
  uint64_t v15 = sub_253B0A240();
  if (!*(void *)(v14 + 16)) {
    goto LABEL_38;
  }
  sub_253AF344C();
  uint64_t v48 = v16;
  sub_253AF29F0();
  uint64_t v46 = v1;
  uint64_t v47 = v17;
  uint64_t v49 = v7 + 16;
  uint64_t v50 = v12 + 16;
  uint64_t v52 = v7;
  uint64_t v53 = v12;
  unint64_t v18 = (void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
  uint64_t v55 = v7 + 32;
  uint64_t v19 = v15 + 64;
  swift_retain();
  uint64_t v20 = 0;
  uint64_t v51 = v14;
  if (!v2) {
    goto LABEL_4;
  }
LABEL_3:
  sub_253AF3CF8();
  for (uint64_t i = v21 | (v20 << 6); ; uint64_t i = v29 + (v20 << 6))
  {
    uint64_t v30 = *(void *)(v53 + 72);
    if (v54)
    {
      (*v18)(v0, *(void *)(v14 + 48) + v30 * i, v10);
      sub_253AF3CD8();
      sub_2534D8E14();
      v31();
    }
    else
    {
      sub_2534B3428();
      v32();
      sub_253AF3CD8();
      (*(void (**)(char *))(v33 + 16))(v56);
    }
    sub_253AF1A80((unint64_t *)&qword_269CDB438, MEMORY[0x263F84700]);
    sub_253B095C0();
    sub_253AF28CC();
    unint64_t v37 = (v36 << v34) & ~*(void *)(v19 + 8 * v35);
    if (!v37)
    {
      sub_253AF270C();
      while (++v40 != v41 || (v39 & 1) == 0)
      {
        BOOL v42 = v40 == v41;
        if (v40 == v41) {
          uint64_t v40 = 0;
        }
        v39 |= v42;
        uint64_t v43 = *(void *)(v19 + 8 * v40);
        if (v43 != -1)
        {
          unint64_t v38 = __clz(__rbit64(~v43)) + (v40 << 6);
          goto LABEL_29;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return;
    }
    unint64_t v38 = __clz(__rbit64(v37)) | v34 & 0x7FFFFFFFFFFFFFC0;
LABEL_29:
    *(void *)(v19 + ((v38 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v38;
    (*v18)(*(void *)(v15 + 48) + v30 * v38, v0, v10);
    sub_2534D8E14();
    v44();
    ++*(void *)(v15 + 16);
    uint64_t v14 = v51;
    if (v2) {
      goto LABEL_3;
    }
LABEL_4:
    uint64_t v23 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      goto LABEL_40;
    }
    if (v23 >= v47)
    {
      swift_release();
      uint64_t v3 = v46;
      uint64_t v24 = v48;
      goto LABEL_33;
    }
    uint64_t v24 = v48;
    ++v20;
    if (!v48[v23])
    {
      uint64_t v20 = v23 + 1;
      if (v23 + 1 >= v47) {
        goto LABEL_31;
      }
      if (!v48[v20]) {
        break;
      }
    }
LABEL_16:
    sub_253AF34E4();
  }
  sub_253AF350C();
  if (v27 != v28)
  {
    if (!v24[v25])
    {
      while (1)
      {
        uint64_t v20 = v25 + 1;
        if (__OFADD__(v25, 1)) {
          goto LABEL_41;
        }
        if (v20 >= v26) {
          goto LABEL_31;
        }
        ++v25;
        if (v24[v20]) {
          goto LABEL_16;
        }
      }
    }
    uint64_t v20 = v25;
    goto LABEL_16;
  }
LABEL_31:
  swift_release();
  uint64_t v3 = v46;
LABEL_33:
  if (v54)
  {
    sub_253AF30E4();
    if (v27 != v28) {
      *uint64_t v24 = -1 << v45;
    }
    else {
      sub_253AF3538(v45);
    }
    *(void *)(v14 + 16) = 0;
  }
LABEL_38:
  swift_release();
  *uint64_t v3 = v15;
  sub_253465A14();
}

void sub_253AE5004()
{
}

uint64_t sub_253AE504C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_253462A5C(&qword_269CE8C90);
  char v37 = a2;
  uint64_t v6 = sub_253B0A240();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_39;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  if (!v10) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v13 << 6))
  {
    uint64_t v20 = (uint64_t *)(*(void *)(v5 + 48) + 16 * i);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    uint64_t v23 = *(void *)(*(void *)(v5 + 56) + 8 * i);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_253B0A5F0();
    swift_bridgeObjectRetain();
    sub_253B09630();
    swift_bridgeObjectRelease();
    uint64_t result = sub_253B0A630();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) == 0)
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v29 || (v28 & 1) == 0)
      {
        BOOL v30 = v26 == v29;
        if (v26 == v29) {
          unint64_t v26 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v26);
        if (v31 != -1)
        {
          unint64_t v27 = __clz(__rbit64(~v31)) + (v26 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    unint64_t v27 = __clz(__rbit64((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v11 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    char v32 = (void *)(*(void *)(v7 + 48) + 16 * v27);
    *char v32 = v22;
    v32[1] = v21;
    *(void *)(*(void *)(v7 + 56) + 8 * v27) = v23;
    ++*(void *)(v7 + 16);
    if (v10) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v16 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      goto LABEL_41;
    }
    if (v16 >= v35)
    {
      swift_release();
      uint64_t v3 = v34;
      uint64_t v17 = (void *)(v5 + 64);
      goto LABEL_34;
    }
    uint64_t v17 = (void *)(v5 + 64);
    unint64_t v18 = *(void *)(v36 + 8 * v16);
    ++v13;
    if (!v18)
    {
      int64_t v13 = v16 + 1;
      if (v16 + 1 >= v35) {
        goto LABEL_32;
      }
      unint64_t v18 = *(void *)(v36 + 8 * v13);
      if (!v18) {
        break;
      }
    }
LABEL_18:
    unint64_t v10 = (v18 - 1) & v18;
  }
  int64_t v19 = v16 + 2;
  if (v19 < v35)
  {
    unint64_t v18 = *(void *)(v36 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        int64_t v13 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          goto LABEL_42;
        }
        if (v13 >= v35) {
          goto LABEL_32;
        }
        unint64_t v18 = *(void *)(v36 + 8 * v13);
        ++v19;
        if (v18) {
          goto LABEL_18;
        }
      }
    }
    int64_t v13 = v19;
    goto LABEL_18;
  }
LABEL_32:
  swift_release();
  uint64_t v3 = v34;
LABEL_34:
  if (v37)
  {
    uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
    if (v33 >= 64) {
      sub_253AE5AC4(0, (unint64_t)(v33 + 63) >> 6, v17);
    }
    else {
      *uint64_t v17 = -1 << v33;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_39:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void sub_253AE5358()
{
  sub_2534B3258();
  uint64_t v1 = v0;
  int v3 = v2;
  sub_2534D9690();
  uint64_t v53 = sub_253B09120();
  sub_253465998();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  uint64_t v52 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v0;
  sub_253462A5C(&qword_269CE8C88);
  sub_253A3F354();
  int v51 = v3;
  uint64_t v9 = sub_253B0A240();
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  sub_253AF344C();
  uint64_t v48 = v12;
  if (v10 < 64) {
    uint64_t v13 = ~(-1 << v10);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v11;
  uint64_t v46 = v0;
  int64_t v47 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v49 = v5 + 16;
  uint64_t v50 = v5;
  uint64_t v15 = v9 + 64;
  swift_retain();
  int64_t v16 = 0;
  if (!v14) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v16 << 6))
  {
    uint64_t v26 = v8;
    unint64_t v27 = (uint64_t *)(*(void *)(v8 + 48) + 16 * i);
    uint64_t v28 = *v27;
    uint64_t v29 = v27[1];
    if (v51)
    {
      sub_2539627E0();
      v30();
    }
    else
    {
      sub_2534B3428();
      v31();
      swift_bridgeObjectRetain();
    }
    sub_253B0A5F0();
    sub_253B09630();
    sub_253B0A630();
    sub_253AF28CC();
    if (((v34 << v33) & ~*(void *)(v15 + 8 * v32)) == 0)
    {
      sub_253AF270C();
      while (++v36 != v37 || (v35 & 1) == 0)
      {
        BOOL v38 = v36 == v37;
        if (v36 == v37) {
          uint64_t v36 = 0;
        }
        v35 |= v38;
        if (*(void *)(v15 + 8 * v36) != -1)
        {
          sub_253AF3C84();
          goto LABEL_32;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return;
    }
    sub_253AF3C98();
LABEL_32:
    sub_253AF3B4C();
    *(void *)(v15 + v39) |= v40;
    BOOL v42 = (void *)(*(void *)(v9 + 48) + 16 * v41);
    void *v42 = v28;
    v42[1] = v29;
    sub_2539627E0();
    v43();
    ++*(void *)(v9 + 16);
    uint64_t v8 = v26;
    if (v14) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_43;
    }
    if (v19 >= v47)
    {
      swift_release();
      uint64_t v1 = v46;
      uint64_t v20 = v48;
      goto LABEL_36;
    }
    uint64_t v20 = v48;
    unint64_t v21 = v48[v19];
    ++v16;
    if (!v21)
    {
      int64_t v16 = v19 + 1;
      if (v19 + 1 >= v47) {
        goto LABEL_34;
      }
      unint64_t v21 = v48[v16];
      if (!v21) {
        break;
      }
    }
LABEL_19:
    unint64_t v14 = (v21 - 1) & v21;
  }
  sub_253AF350C();
  if (v24 != v25)
  {
    unint64_t v21 = v20[v22];
    if (!v21)
    {
      while (1)
      {
        int64_t v16 = v22 + 1;
        if (__OFADD__(v22, 1)) {
          goto LABEL_44;
        }
        if (v16 >= v23) {
          goto LABEL_34;
        }
        unint64_t v21 = v20[v16];
        ++v22;
        if (v21) {
          goto LABEL_19;
        }
      }
    }
    int64_t v16 = v22;
    goto LABEL_19;
  }
LABEL_34:
  swift_release();
  uint64_t v1 = v46;
LABEL_36:
  if (v51)
  {
    sub_253AF30E4();
    if (v24 != v25) {
      *uint64_t v20 = -1 << v44;
    }
    else {
      sub_253AF3518(v44);
    }
    *(void *)(v8 + 16) = 0;
  }
LABEL_41:
  swift_release();
  *uint64_t v1 = v9;
  sub_253465A14();
}

void sub_253AE5680()
{
}

void sub_253AE56C8()
{
  sub_2534B3258();
  uint64_t v51 = v2;
  uint64_t v54 = v3;
  uint64_t v5 = v4;
  uint64_t v6 = v0;
  int v8 = v7;
  uint64_t v9 = sub_253578A1C();
  uint64_t v11 = v10(v9);
  sub_25346CB34(v11);
  uint64_t v52 = v12;
  sub_253963118();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v48 - v14;
  int64_t v16 = (void *)*v0;
  sub_253462A5C(v5);
  sub_2534DA5AC();
  int v53 = v8;
  unint64_t v17 = (void *)sub_253B0A240();
  if (!v16[2]) {
    goto LABEL_38;
  }
  sub_253AF2E5C();
  uint64_t v50 = v18;
  sub_253AF29F0();
  uint64_t v48 = v0;
  uint64_t v49 = v19;
  uint64_t v20 = v17 + 8;
  swift_retain();
  uint64_t v21 = 0;
  if (!v1) {
    goto LABEL_4;
  }
LABEL_3:
  sub_253AF3CF8();
  for (uint64_t i = v22 | (v21 << 6); ; uint64_t i = v30 + (v21 << 6))
  {
    uint64_t v31 = (uint64_t *)(v16[6] + 16 * i);
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    uint64_t v34 = *(void *)(v52 + 72);
    uint64_t v35 = v16[7] + v34 * i;
    if (v53)
    {
      sub_253AF19D0(v35, (uint64_t)v15);
    }
    else
    {
      sub_253AF1A28(v35, (uint64_t)v15);
      swift_bridgeObjectRetain();
    }
    sub_253B0A5F0();
    sub_253AF3720();
    sub_253B09630();
    sub_253B0A630();
    sub_253AF28CC();
    if (((v38 << v37) & ~v20[v36]) == 0)
    {
      sub_253AF270C();
      while (++v40 != v41 || (v39 & 1) == 0)
      {
        BOOL v42 = v40 == v41;
        if (v40 == v41) {
          uint64_t v40 = 0;
        }
        v39 |= v42;
        if (v20[v40] != -1)
        {
          sub_253AF3C84();
          goto LABEL_29;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return;
    }
    sub_253AF3C98();
LABEL_29:
    sub_253AF3B4C();
    *(void *)((char *)v20 + v43) |= v44;
    uint64_t v46 = (void *)(v17[6] + 16 * v45);
    *uint64_t v46 = v33;
    v46[1] = v32;
    sub_253AF19D0((uint64_t)v15, v17[7] + v34 * v45);
    ++v17[2];
    if (v1) {
      goto LABEL_3;
    }
LABEL_4:
    uint64_t v24 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      goto LABEL_40;
    }
    if (v24 >= v49)
    {
      swift_release();
      uint64_t v6 = v48;
      char v25 = v50;
      goto LABEL_33;
    }
    char v25 = v50;
    ++v21;
    if (!v50[v24])
    {
      uint64_t v21 = v24 + 1;
      if (v24 + 1 >= v49) {
        goto LABEL_31;
      }
      if (!v50[v21]) {
        break;
      }
    }
LABEL_16:
    sub_253AF34E4();
  }
  sub_253AF350C();
  if (v28 != v29)
  {
    if (!v25[v26])
    {
      while (1)
      {
        uint64_t v21 = v26 + 1;
        if (__OFADD__(v26, 1)) {
          goto LABEL_41;
        }
        if (v21 >= v27) {
          goto LABEL_31;
        }
        ++v26;
        if (v25[v21]) {
          goto LABEL_16;
        }
      }
    }
    uint64_t v21 = v26;
    goto LABEL_16;
  }
LABEL_31:
  swift_release();
  uint64_t v6 = v48;
LABEL_33:
  if (v53)
  {
    sub_253AF30E4();
    if (v28 != v29) {
      *char v25 = -1 << v47;
    }
    else {
      sub_253AF3518(v47);
    }
    _OWORD v16[2] = 0;
  }
LABEL_38:
  swift_release();
  *uint64_t v6 = v17;
  sub_253465A14();
}

__n128 sub_253AE5998(uint64_t a1, uint64_t a2, void *a3)
{
  sub_253B0A5F0();
  swift_bridgeObjectRetain();
  sub_253B09630();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_253B09630();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_253B09630();
  swift_bridgeObjectRelease();
  sub_253B0A630();
  unint64_t v6 = sub_253B09F80();
  *(void *)((char *)a3 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
  uint64_t v7 = a3[6] + 48 * v6;
  long long v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 16) = v8;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v7 + 32) = result;
  *(void *)(a3[7] + 8 * v6) = a2;
  ++a3[2];
  return result;
}

uint64_t sub_253AE5AC4(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

void sub_253AE5AE0(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  for (uint64_t i = (uint64_t *)(swift_bridgeObjectRetain() + 48); ; i += 3)
  {
    uint64_t v8 = *(i - 2);
    uint64_t v7 = *(i - 1);
    uint64_t v9 = *i;
    uint64_t v10 = (void *)*a3;
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_25396E0AC();
    uint64_t v13 = v10[2];
    BOOL v14 = (v11 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_253B0A550();
      __break(1u);
      goto LABEL_20;
    }
    char v16 = v11;
    if (v10[3] < v15) {
      break;
    }
    if (a2)
    {
      if (v11) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_253462A5C(&qword_269CE8C40);
      sub_253B0A1A0();
      if (v16) {
        goto LABEL_14;
      }
    }
LABEL_10:
    uint64_t v19 = (void *)*a3;
    *(void *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    uint64_t v20 = (void *)(v19[6] + 16 * v12);
    *uint64_t v20 = v8;
    v20[1] = v7;
    *(void *)(v19[7] + 8 * v12) = v9;
    uint64_t v21 = v19[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_18;
    }
    void v19[2] = v23;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_253AE441C(v15, a2 & 1);
  unint64_t v17 = sub_25396E0AC();
  if ((v16 & 1) != (v18 & 1)) {
    goto LABEL_19;
  }
  unint64_t v12 = v17;
  if ((v16 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v24 = (void *)swift_allocError();
  swift_willThrow();
  id v25 = v24;
  sub_253462A5C(&qword_26B24A590);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_20:
  sub_253B0A000();
  sub_253B09860();
  sub_253B0A170();
  sub_253B09860();
  sub_253B0A1D0();
  __break(1u);
}

void sub_253AE5DA8(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v5 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
  while (1)
  {
    uint64_t v7 = *(v5 - 2);
    uint64_t v6 = *(v5 - 1);
    uint64_t v8 = *v5;
    uint64_t v9 = (void *)*a3;
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_25396E0AC();
    uint64_t v12 = v9[2];
    BOOL v13 = (v10 & 1) == 0;
    uint64_t v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_253B0A550();
      __break(1u);
      goto LABEL_20;
    }
    char v15 = v10;
    if (v9[3] < v14) {
      break;
    }
    if (a2)
    {
      if (v10) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_253462A5C(&qword_269CE8CB0);
      sub_253B0A1A0();
      if (v15) {
        goto LABEL_14;
      }
    }
LABEL_10:
    char v18 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    uint64_t v19 = (void *)(v18[6] + 16 * v11);
    *uint64_t v19 = v7;
    v19[1] = v6;
    *(void *)(v18[7] + 8 * v11) = v8;
    uint64_t v20 = v18[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_18;
    }
    v5 += 3;
    _OWORD v18[2] = v22;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_253AE492C(v14, a2 & 1);
  unint64_t v16 = sub_25396E0AC();
  if ((v15 & 1) != (v17 & 1)) {
    goto LABEL_19;
  }
  unint64_t v11 = v16;
  if ((v15 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v23 = (void *)swift_allocError();
  swift_willThrow();
  id v24 = v23;
  sub_253462A5C(&qword_26B24A590);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_20:
  sub_253B0A000();
  sub_253B09860();
  sub_253B0A170();
  sub_253B09860();
  sub_253B0A1D0();
  __break(1u);
}

void sub_253AE6070(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v5 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
  while (1)
  {
    uint64_t v7 = *(v5 - 2);
    uint64_t v6 = *(v5 - 1);
    uint64_t v8 = *v5;
    uint64_t v9 = (void *)*a3;
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_25396DF8C();
    uint64_t v12 = v9[2];
    BOOL v13 = (v10 & 1) == 0;
    uint64_t v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_253B0A550();
      __break(1u);
      goto LABEL_20;
    }
    char v15 = v10;
    if (v9[3] < v14) {
      break;
    }
    if (a2)
    {
      if (v10) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_253462A5C(&qword_269CE8C98);
      sub_253B0A1A0();
      if (v15) {
        goto LABEL_14;
      }
    }
LABEL_10:
    char v18 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    uint64_t v19 = (void *)(v18[6] + 16 * v11);
    *uint64_t v19 = v7;
    v19[1] = v6;
    *(void *)(v18[7] + 8 * v11) = v8;
    uint64_t v20 = v18[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_18;
    }
    v5 += 3;
    _OWORD v18[2] = v22;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_253AE504C(v14, a2 & 1);
  unint64_t v16 = sub_25396DF8C();
  if ((v15 & 1) != (v17 & 1)) {
    goto LABEL_19;
  }
  unint64_t v11 = v16;
  if ((v15 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v23 = (void *)swift_allocError();
  swift_willThrow();
  id v24 = v23;
  sub_253462A5C(&qword_26B24A590);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_20:
  sub_253B0A000();
  sub_253B09860();
  sub_253B0A170();
  sub_253B09860();
  sub_253B0A1D0();
  __break(1u);
}

uint64_t sub_253AE6338(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v60 = sub_253B08E50();
  uint64_t v4 = *(void *)(v60 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v60);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v59 = (char *)&v42 - v8;
  uint64_t v9 = sub_253B09120();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  BOOL v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  char v15 = (char *)&v42 - v14;
  sub_253462A5C(&qword_269CE8C80);
  uint64_t result = sub_253B0A230();
  uint64_t v17 = result;
  int64_t v18 = 0;
  uint64_t v49 = v10;
  uint64_t v50 = a1;
  uint64_t v21 = *(void *)(a1 + 64);
  uint64_t v20 = a1 + 64;
  uint64_t v19 = v21;
  uint64_t v22 = 1 << *(unsigned char *)(v20 - 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & v19;
  uint64_t v42 = v20;
  int64_t v43 = (unint64_t)(v22 + 63) >> 6;
  uint64_t v47 = v10 + 16;
  uint64_t v48 = (void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v58 = v4 + 32;
  uint64_t v45 = result + 64;
  uint64_t v46 = v4;
  uint64_t v51 = result;
  uint64_t v44 = v13;
  if (!v24) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v55 = (v24 - 1) & v24;
  int64_t v56 = v18;
  for (unint64_t i = __clz(__rbit64(v24)) | (v18 << 6); ; unint64_t i = __clz(__rbit64(v28)) + (v27 << 6))
  {
    uint64_t v30 = *(void *)(v50 + 56);
    uint64_t v31 = (uint64_t *)(*(void *)(v50 + 48) + 16 * i);
    uint64_t v32 = v31[1];
    uint64_t v57 = *v31;
    uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v49 + 16);
    v33(v15, v30 + *(void *)(v49 + 72) * i, v9);
    v33(v13, (unint64_t)v15, v9);
    swift_bridgeObjectRetain();
    sub_253B09100();
    if (v2)
    {
      uint64_t v40 = *v48;
      (*v48)(v13, v9);
      swift_bridgeObjectRelease();
      uint64_t v41 = v51;
      swift_release();
      v40(v15, v9);
      return v41;
    }
    uint64_t v52 = 0;
    uint64_t v54 = v32;
    uint64_t v34 = *v48;
    (*v48)(v13, v9);
    uint64_t v35 = v46;
    int v53 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
    v53(v59, v7, v60);
    v34(v15, v9);
    *(void *)(v45 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v17 = v51;
    uint64_t v36 = (void *)(*(void *)(v51 + 48) + 16 * i);
    uint64_t v37 = v54;
    void *v36 = v57;
    v36[1] = v37;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v53)(*(void *)(v17 + 56) + *(void *)(v35 + 72) * i, v59, v60);
    uint64_t v38 = *(void *)(v17 + 16);
    BOOL v26 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v26)
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    *(void *)(v17 + 16) = v39;
    uint64_t v2 = v52;
    BOOL v13 = v44;
    unint64_t v24 = v55;
    int64_t v18 = v56;
    if (v55) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v26 = __OFADD__(v18, 1);
    int64_t v27 = v18 + 1;
    if (v26) {
      goto LABEL_28;
    }
    if (v27 >= v43) {
      return v17;
    }
    unint64_t v28 = *(void *)(v42 + 8 * v27);
    if (!v28) {
      break;
    }
LABEL_15:
    uint64_t v55 = (v28 - 1) & v28;
    int64_t v56 = v27;
  }
  int64_t v29 = v27 + 1;
  if (v27 + 1 >= v43) {
    return v17;
  }
  unint64_t v28 = *(void *)(v42 + 8 * v29);
  if (v28) {
    goto LABEL_14;
  }
  int64_t v29 = v27 + 2;
  if (v27 + 2 >= v43) {
    return v17;
  }
  unint64_t v28 = *(void *)(v42 + 8 * v29);
  if (v28) {
    goto LABEL_14;
  }
  int64_t v29 = v27 + 3;
  if (v27 + 3 >= v43) {
    return v17;
  }
  unint64_t v28 = *(void *)(v42 + 8 * v29);
  if (v28)
  {
LABEL_14:
    int64_t v27 = v29;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v27 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v27 >= v43) {
      return v51;
    }
    unint64_t v28 = *(void *)(v42 + 8 * v27);
    ++v29;
    if (v28) {
      goto LABEL_15;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_253AE67D4(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDCB00);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v50 = (uint64_t)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_253462A5C(&qword_269CE1BD0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v49 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ToolParameterValue(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v54 = (uint64_t)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253462A5C(&qword_269CE1BE0);
  MEMORY[0x270FA5388](v8 - 8);
  int v53 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for TranscriptProtoActionParameterValue(0);
  uint64_t v48 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for Action.ParameterValue(0);
  uint64_t v51 = *(void *)(v47 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v47);
  uint64_t v57 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  char v15 = (char *)&v44 - v14;
  sub_253462A5C(&qword_269CE84A8);
  uint64_t result = sub_253B0A230();
  uint64_t v17 = result;
  int64_t v18 = 0;
  uint64_t v55 = a1;
  uint64_t v56 = result;
  uint64_t v21 = *(void *)(a1 + 64);
  uint64_t v20 = a1 + 64;
  uint64_t v19 = v21;
  uint64_t v22 = 1 << *(unsigned char *)(v20 - 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & v19;
  uint64_t v44 = v20;
  int64_t v45 = (unint64_t)(v22 + 63) >> 6;
  uint64_t v46 = result + 64;
  if (!v24) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v58 = (v24 - 1) & v24;
  int64_t v59 = v18;
  unint64_t v25 = __clz(__rbit64(v24)) | (v18 << 6);
  uint64_t v26 = (uint64_t)v57;
  while (1)
  {
    uint64_t v31 = *(void *)(v55 + 56);
    uint64_t v32 = (uint64_t *)(*(void *)(v55 + 48) + 16 * v25);
    uint64_t v33 = v32[1];
    uint64_t v60 = *v32;
    sub_253AF1A28(v31 + *(void *)(v51 + 72) * v25, (uint64_t)v15);
    sub_253AF1A28((uint64_t)v15, v26);
    uint64_t v34 = type metadata accessor for TranscriptProtoToolParameterValue(0);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v11, 1, 1, v34);
    uint64_t v35 = (uint64_t)&v11[*(int *)(v52 + 20)];
    uint64_t v36 = type metadata accessor for TranscriptProtoPromptSelection(0);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v35, 1, 1, v36);
    uint64_t v61 = v33;
    swift_bridgeObjectRetain();
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    sub_253AF1A28(v26, v54);
    uint64_t v37 = (uint64_t)v53;
    uint64_t v38 = v62;
    TranscriptProtoToolParameterValue.init(handwritten:)();
    if (v38)
    {
      sub_253AF1980();
      sub_253AF1980();
      swift_bridgeObjectRelease();
      uint64_t v17 = v56;
      swift_release();
      sub_253AF1980();
      return v17;
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v37, 0, 1, v34);
    sub_253961BF0(v37, (uint64_t)v11, &qword_269CE1BE0);
    sub_253961F60(v26 + *(int *)(v47 + 20), v50, &qword_269CDCB00);
    uint64_t v39 = (uint64_t)v49;
    sub_25395FB90();
    uint64_t v62 = 0;
    sub_253AF1980();
    sub_253961BF0(v39, v35, &qword_269CE1BD0);
    sub_253AF1980();
    *(void *)(v46 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    uint64_t v17 = v56;
    uint64_t v40 = (void *)(*(void *)(v56 + 48) + 16 * v25);
    uint64_t v41 = v61;
    *uint64_t v40 = v60;
    v40[1] = v41;
    uint64_t result = sub_253AF19D0((uint64_t)v11, *(void *)(v17 + 56) + *(void *)(v48 + 72) * v25);
    uint64_t v42 = *(void *)(v17 + 16);
    BOOL v27 = __OFADD__(v42, 1);
    uint64_t v43 = v42 + 1;
    if (v27)
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    *(void *)(v17 + 16) = v43;
    unint64_t v24 = v58;
    int64_t v18 = v59;
    if (v58) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v27 = __OFADD__(v18, 1);
    int64_t v28 = v18 + 1;
    uint64_t v26 = (uint64_t)v57;
    if (v27) {
      goto LABEL_28;
    }
    if (v28 >= v45) {
      return v17;
    }
    unint64_t v29 = *(void *)(v44 + 8 * v28);
    if (!v29) {
      break;
    }
LABEL_15:
    uint64_t v58 = (v29 - 1) & v29;
    int64_t v59 = v28;
    unint64_t v25 = __clz(__rbit64(v29)) + (v28 << 6);
  }
  int64_t v30 = v28 + 1;
  if (v28 + 1 >= v45) {
    return v17;
  }
  unint64_t v29 = *(void *)(v44 + 8 * v30);
  if (v29) {
    goto LABEL_14;
  }
  int64_t v30 = v28 + 2;
  if (v28 + 2 >= v45) {
    return v17;
  }
  unint64_t v29 = *(void *)(v44 + 8 * v30);
  if (v29) {
    goto LABEL_14;
  }
  int64_t v30 = v28 + 3;
  if (v28 + 3 >= v45) {
    return v17;
  }
  unint64_t v29 = *(void *)(v44 + 8 * v30);
  if (v29)
  {
LABEL_14:
    int64_t v28 = v30;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v28 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v28 >= v45) {
      return v56;
    }
    unint64_t v29 = *(void *)(v44 + 8 * v28);
    ++v30;
    if (v29) {
      goto LABEL_15;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void sub_253AE6E3C()
{
  sub_2534847F8();
  uint64_t v1 = sub_2534D9690();
  type metadata accessor for TranscriptProtoStatementID(v1);
  sub_253465998();
  uint64_t v47 = v3;
  uint64_t v48 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v44 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_253AF1D50();
  sub_253465998();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v43 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v9);
  uint64_t v42 = (char *)&v35 - v10;
  sub_253462A5C(&qword_269CE8C60);
  sub_253B0A230();
  uint64_t v49 = v0;
  sub_253AF2058();
  uint64_t v36 = v0 + 64;
  uint64_t v37 = v12;
  uint64_t v45 = v6;
  uint64_t v39 = v6 + 8;
  uint64_t v40 = v6 + 16;
  uint64_t v38 = v13 + 64;
  uint64_t v41 = v13;
  uint64_t v14 = v6;
  uint64_t v15 = (uint64_t)v44;
  if (!v16) {
    goto LABEL_3;
  }
LABEL_2:
  sub_2534D9474();
  uint64_t v50 = v17;
  uint64_t v51 = v18;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    unint64_t v25 = (uint64_t *)(*(void *)(v49 + 48) + 16 * i);
    uint64_t v53 = *v25;
    uint64_t v52 = v25[1];
    uint64_t v26 = v52;
    BOOL v27 = *(void (**)(void))(v14 + 16);
    uint64_t v28 = v40;
    sub_253962874();
    v27();
    sub_253962874();
    v27();
    swift_bridgeObjectRetain();
    LODWORD(v27) = sub_253B059C0();
    sub_253B059A0();
    sub_253AF2AC8();
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_DWORD *)uint64_t v15 = v27;
    *(void *)(v15 + 8) = v28;
    *(void *)(v15 + 16) = v26;
    unint64_t v29 = *(void (**)(void))(v14 + 8);
    sub_253578828();
    sub_2534D9220();
    v29();
    sub_2534D9B1C();
    sub_2534D9220();
    v29();
    *(void *)(v38 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v30 = v41;
    uint64_t v31 = (void *)(*(void *)(v41 + 48) + 16 * i);
    uint64_t v32 = v52;
    *uint64_t v31 = v53;
    v31[1] = v32;
    sub_253AF19D0(v15, *(void *)(v30 + 56) + *(void *)(v47 + 72) * i);
    sub_253AF2AE0();
    if (v34)
    {
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    *(void *)(v30 + 16) = v33;
    uint64_t v11 = v51;
    if (v50) {
      goto LABEL_2;
    }
LABEL_3:
    uint64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_22;
    }
    if (v21 >= v37) {
      goto LABEL_20;
    }
    unint64_t v22 = *(void *)(v36 + 8 * v21);
    uint64_t v23 = v11 + 1;
    if (!v22)
    {
      uint64_t v23 = v11 + 2;
      if (v11 + 2 >= v37) {
        goto LABEL_20;
      }
      unint64_t v22 = *(void *)(v36 + 8 * v23);
      if (!v22)
      {
        uint64_t v23 = v11 + 3;
        if (v11 + 3 >= v37) {
          goto LABEL_20;
        }
        unint64_t v22 = *(void *)(v36 + 8 * v23);
        if (!v22) {
          break;
        }
      }
    }
LABEL_16:
    uint64_t v50 = (v22 - 1) & v22;
    uint64_t v51 = v23;
  }
  uint64_t v24 = v11 + 4;
  if (v11 + 4 >= v37)
  {
LABEL_20:
    sub_2534847C8();
    return;
  }
  unint64_t v22 = *(void *)(v36 + 8 * v24);
  if (v22)
  {
    uint64_t v23 = v11 + 4;
    goto LABEL_16;
  }
  while (1)
  {
    uint64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v37) {
      goto LABEL_20;
    }
    unint64_t v22 = *(void *)(v36 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_16;
    }
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_253AE7190(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  uint64_t v39 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v38 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for AST.FlatValue(0);
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v36 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v32 - v7;
  sub_253462A5C(&qword_269CE8C48);
  uint64_t result = sub_253B0A230();
  uint64_t v10 = (void *)result;
  int64_t v11 = 0;
  uint64_t v40 = a1;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v13 = a1 + 64;
  uint64_t v12 = v14;
  uint64_t v15 = 1 << *(unsigned char *)(v13 - 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v12;
  uint64_t v33 = v13;
  int64_t v34 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v35 = result + 64;
  uint64_t v18 = (uint64_t)v36;
  if ((v16 & v12) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v19 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v11 << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v40 + 48) + 16 * i);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    sub_253AF1A28(*(void *)(v40 + 56) + *(void *)(v37 + 72) * i, (uint64_t)v8);
    sub_253AF1A28((uint64_t)v8, v18);
    swift_bridgeObjectRetain();
    uint64_t v27 = (uint64_t)v38;
    TranscriptProtoASTFlatValue.init(handwritten:)(v18);
    sub_253AF1980();
    *(void *)(v35 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v28 = (void *)(v10[6] + 16 * i);
    *uint64_t v28 = v25;
    v28[1] = v26;
    uint64_t result = sub_253AF19D0(v27, v10[7] + *(void *)(v39 + 72) * i);
    uint64_t v29 = v10[2];
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (v30)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v10[2] = v31;
    if (v17) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_24;
    }
    if (v21 >= v34) {
      return (uint64_t)v10;
    }
    unint64_t v22 = *(void *)(v33 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v34) {
        return (uint64_t)v10;
      }
      unint64_t v22 = *(void *)(v33 + 8 * v11);
      if (!v22)
      {
        int64_t v11 = v21 + 2;
        if (v21 + 2 >= v34) {
          return (uint64_t)v10;
        }
        unint64_t v22 = *(void *)(v33 + 8 * v11);
        if (!v22) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v17 = (v22 - 1) & v22;
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v34) {
    return (uint64_t)v10;
  }
  unint64_t v22 = *(void *)(v33 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v34) {
      return (uint64_t)v10;
    }
    unint64_t v22 = *(void *)(v33 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_253AE751C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for TranscriptProtoShimParameter(0);
  uint64_t v37 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v41 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ClientAction.ShimParameter(0);
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v39 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v34 - v8;
  sub_253462A5C(&qword_269CE8C70);
  uint64_t result = sub_253B0A230();
  uint64_t v11 = result;
  int64_t v12 = 0;
  uint64_t v42 = a1;
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v14 = a1 + 64;
  uint64_t v13 = v15;
  uint64_t v16 = 1 << *(unsigned char *)(v14 - 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v13;
  uint64_t v34 = v14;
  int64_t v35 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v36 = result + 64;
  uint64_t v38 = result;
  if ((v17 & v13) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (unint64_t i = v19 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v12 << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v42 + 48) + 16 * i);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    sub_253AF1A28(*(void *)(v42 + 56) + *(void *)(v40 + 72) * i, (uint64_t)v9);
    sub_253AF1A28((uint64_t)v9, v39);
    swift_bridgeObjectRetain();
    uint64_t v27 = (uint64_t)v41;
    TranscriptProtoShimParameter.init(handwritten:)();
    if (v1)
    {
      swift_bridgeObjectRelease();
      uint64_t v11 = v38;
      swift_release();
      sub_253AF1980();
      return v11;
    }
    sub_253AF1980();
    *(void *)(v36 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v28 = v37;
    uint64_t v29 = v38;
    BOOL v30 = (void *)(*(void *)(v38 + 48) + 16 * i);
    *BOOL v30 = v25;
    v30[1] = v26;
    uint64_t v31 = *(void *)(v29 + 56) + *(void *)(v28 + 72) * i;
    uint64_t v11 = v29;
    uint64_t result = sub_253AF19D0(v27, v31);
    uint64_t v32 = *(void *)(v11 + 16);
    BOOL v21 = __OFADD__(v32, 1);
    uint64_t v33 = v32 + 1;
    if (v21)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    *(void *)(v11 + 16) = v33;
    if (v18) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v21 = __OFADD__(v12++, 1);
    if (v21) {
      goto LABEL_27;
    }
    if (v12 >= v35) {
      return v11;
    }
    unint64_t v22 = *(void *)(v34 + 8 * v12);
    if (!v22) {
      break;
    }
LABEL_15:
    unint64_t v18 = (v22 - 1) & v22;
  }
  int64_t v23 = v12 + 1;
  if (v12 + 1 >= v35) {
    return v11;
  }
  unint64_t v22 = *(void *)(v34 + 8 * v23);
  if (v22) {
    goto LABEL_14;
  }
  int64_t v23 = v12 + 2;
  if (v12 + 2 >= v35) {
    return v11;
  }
  unint64_t v22 = *(void *)(v34 + 8 * v23);
  if (v22) {
    goto LABEL_14;
  }
  int64_t v23 = v12 + 3;
  if (v12 + 3 >= v35) {
    return v11;
  }
  unint64_t v22 = *(void *)(v34 + 8 * v23);
  if (v22)
  {
LABEL_14:
    int64_t v12 = v23;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v12 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v12 >= v35) {
      return v11;
    }
    unint64_t v22 = *(void *)(v34 + 8 * v12);
    ++v23;
    if (v22) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_253AE78F0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for TranscriptProtoShimParameterResolution(0);
  uint64_t v37 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v41 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ClientAction.ShimParameterResolution(0);
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v39 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v34 - v8;
  sub_253462A5C(&qword_269CE8C78);
  uint64_t result = sub_253B0A230();
  uint64_t v11 = result;
  int64_t v12 = 0;
  uint64_t v42 = a1;
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v14 = a1 + 64;
  uint64_t v13 = v15;
  uint64_t v16 = 1 << *(unsigned char *)(v14 - 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v13;
  uint64_t v34 = v14;
  int64_t v35 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v36 = result + 64;
  uint64_t v38 = result;
  if ((v17 & v13) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (unint64_t i = v19 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v12 << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v42 + 48) + 16 * i);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    sub_253AF1A28(*(void *)(v42 + 56) + *(void *)(v40 + 72) * i, (uint64_t)v9);
    sub_253AF1A28((uint64_t)v9, v39);
    swift_bridgeObjectRetain();
    uint64_t v27 = (uint64_t)v41;
    TranscriptProtoShimParameterResolution.init(handwritten:)();
    if (v1)
    {
      swift_bridgeObjectRelease();
      uint64_t v11 = v38;
      swift_release();
      sub_253AF1980();
      return v11;
    }
    sub_253AF1980();
    *(void *)(v36 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v28 = v37;
    uint64_t v29 = v38;
    BOOL v30 = (void *)(*(void *)(v38 + 48) + 16 * i);
    *BOOL v30 = v25;
    v30[1] = v26;
    uint64_t v31 = *(void *)(v29 + 56) + *(void *)(v28 + 72) * i;
    uint64_t v11 = v29;
    uint64_t result = sub_253AF19D0(v27, v31);
    uint64_t v32 = *(void *)(v11 + 16);
    BOOL v21 = __OFADD__(v32, 1);
    uint64_t v33 = v32 + 1;
    if (v21)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    *(void *)(v11 + 16) = v33;
    if (v18) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v21 = __OFADD__(v12++, 1);
    if (v21) {
      goto LABEL_27;
    }
    if (v12 >= v35) {
      return v11;
    }
    unint64_t v22 = *(void *)(v34 + 8 * v12);
    if (!v22) {
      break;
    }
LABEL_15:
    unint64_t v18 = (v22 - 1) & v22;
  }
  int64_t v23 = v12 + 1;
  if (v12 + 1 >= v35) {
    return v11;
  }
  unint64_t v22 = *(void *)(v34 + 8 * v23);
  if (v22) {
    goto LABEL_14;
  }
  int64_t v23 = v12 + 2;
  if (v12 + 2 >= v35) {
    return v11;
  }
  unint64_t v22 = *(void *)(v34 + 8 * v23);
  if (v22) {
    goto LABEL_14;
  }
  int64_t v23 = v12 + 3;
  if (v12 + 3 >= v35) {
    return v11;
  }
  unint64_t v22 = *(void *)(v34 + 8 * v23);
  if (v22)
  {
LABEL_14:
    int64_t v12 = v23;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v12 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v12 >= v35) {
      return v11;
    }
    unint64_t v22 = *(void *)(v34 + 8 * v12);
    ++v23;
    if (v22) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_253AE7CC4(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDCB00);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v64 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_253462A5C(&qword_269CE1BD0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v63 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_253B08E50();
  uint64_t v6 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v80 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_253B09120();
  uint64_t v8 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_253462A5C(&qword_269CDCBC8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v62 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for TranscriptProtoParameterValue(0);
  uint64_t v61 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v74 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_253B06280();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v68 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v81 = (char *)&v55 - v18;
  sub_253462A5C(&qword_269CE8C68);
  uint64_t result = sub_253B0A230();
  int64_t v20 = 0;
  uint64_t v72 = a1;
  uint64_t v21 = *(void *)(a1 + 64);
  uint64_t v56 = a1 + 64;
  uint64_t v22 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & v21;
  int64_t v57 = (unint64_t)(v22 + 63) >> 6;
  uint64_t v65 = v15 + 16;
  uint64_t v66 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v60 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v69 = v15;
  uint64_t v67 = (void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v73 = result;
  uint64_t v59 = result + 64;
  uint64_t v58 = v10;
  uint64_t v25 = v68;
  if (!v24) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v75 = (v24 - 1) & v24;
  int64_t v76 = v20;
  unint64_t v26 = __clz(__rbit64(v24)) | (v20 << 6);
  uint64_t v27 = (uint64_t)v74;
  uint64_t v28 = v81;
  while (1)
  {
    uint64_t v33 = *(void *)(v72 + 56);
    uint64_t v34 = (uint64_t *)(*(void *)(v72 + 48) + 16 * v26);
    uint64_t v35 = v34[1];
    uint64_t v77 = *v34;
    uint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v69 + 16);
    v36(v28, v33 + *(void *)(v69 + 72) * v26, v14);
    v36(v25, (unint64_t)v28, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v27, 1, 1, v79);
    uint64_t v37 = v14;
    uint64_t v38 = v27 + *(int *)(v70 + 20);
    uint64_t v39 = type metadata accessor for TranscriptProtoPromptSelection(0);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v38, 1, 1, v39);
    uint64_t v78 = v35;
    swift_bridgeObjectRetain();
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    sub_253B06270();
    uint64_t v40 = v82;
    sub_253B09100();
    uint64_t v82 = v40;
    if (v40)
    {
      (*v66)(v10, v71);
      uint64_t v52 = *v67;
      (*v67)(v25, v37);
      sub_253AF1980();
      swift_bridgeObjectRelease();
      uint64_t v53 = v37;
      uint64_t v54 = v73;
      swift_release();
      v52(v28, v53);
      return v54;
    }
    (*v66)(v10, v71);
    uint64_t v41 = (uint64_t)v62;
    uint64_t v42 = v37;
    uint64_t v43 = v79;
    (*v60)(v62, v80, v79);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v41, 0, 1, v43);
    sub_253961BF0(v41, v27, &qword_269CDCBC8);
    sub_253B06250();
    uint64_t v44 = (uint64_t)v63;
    uint64_t v45 = v82;
    sub_25395FB90();
    uint64_t v46 = *v67;
    (*v67)(v25, v42);
    sub_253961BF0(v44, v38, &qword_269CE1BD0);
    v46(v81, v42);
    *(void *)(v59 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t v47 = v73;
    uint64_t v48 = (void *)(*(void *)(v73 + 48) + 16 * v26);
    uint64_t v49 = v78;
    *uint64_t v48 = v77;
    v48[1] = v49;
    uint64_t result = sub_253AF19D0(v27, *(void *)(v47 + 56) + *(void *)(v61 + 72) * v26);
    uint64_t v50 = *(void *)(v47 + 16);
    BOOL v29 = __OFADD__(v50, 1);
    uint64_t v51 = v50 + 1;
    if (v29) {
      break;
    }
    uint64_t v14 = v42;
    *(void *)(v47 + 16) = v51;
    uint64_t v82 = v45;
    uint64_t v10 = v58;
    unint64_t v24 = v75;
    int64_t v20 = v76;
    if (v75) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v29 = __OFADD__(v20, 1);
    int64_t v30 = v20 + 1;
    uint64_t v27 = (uint64_t)v74;
    uint64_t v28 = v81;
    if (v29) {
      goto LABEL_28;
    }
    if (v30 >= v57) {
      return v73;
    }
    unint64_t v31 = *(void *)(v56 + 8 * v30);
    if (!v31)
    {
      int64_t v32 = v30 + 1;
      if (v30 + 1 >= v57) {
        return v73;
      }
      unint64_t v31 = *(void *)(v56 + 8 * v32);
      if (v31) {
        goto LABEL_14;
      }
      int64_t v32 = v30 + 2;
      if (v30 + 2 >= v57) {
        return v73;
      }
      unint64_t v31 = *(void *)(v56 + 8 * v32);
      if (v31)
      {
LABEL_14:
        int64_t v30 = v32;
        goto LABEL_15;
      }
      int64_t v32 = v30 + 3;
      if (v30 + 3 < v57)
      {
        unint64_t v31 = *(void *)(v56 + 8 * v32);
        if (!v31)
        {
          while (1)
          {
            int64_t v30 = v32 + 1;
            if (__OFADD__(v32, 1)) {
              goto LABEL_29;
            }
            if (v30 >= v57) {
              return v73;
            }
            unint64_t v31 = *(void *)(v56 + 8 * v30);
            ++v32;
            if (v31) {
              goto LABEL_15;
            }
          }
        }
        goto LABEL_14;
      }
      return v73;
    }
LABEL_15:
    uint64_t v75 = (v31 - 1) & v31;
    int64_t v76 = v30;
    unint64_t v26 = __clz(__rbit64(v31)) + (v30 << 6);
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_253AE8490(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for AST.FlatValue(0);
  uint64_t v40 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v44 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v42 = (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v37 - v8;
  sub_253462A5C(&qword_269CE8C50);
  uint64_t result = sub_253B0A230();
  uint64_t v11 = result;
  int64_t v12 = 0;
  uint64_t v45 = a1;
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v14 = a1 + 64;
  uint64_t v13 = v15;
  uint64_t v16 = 1 << *(unsigned char *)(v14 - 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v13;
  uint64_t v37 = v14;
  int64_t v38 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v39 = result + 64;
  uint64_t v41 = result;
  if ((v17 & v13) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (unint64_t i = v19 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v12 << 6))
  {
    unint64_t v24 = (uint64_t *)(*(void *)(v45 + 48) + 16 * i);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    sub_253AF1A28(*(void *)(v45 + 56) + *(void *)(v43 + 72) * i, (uint64_t)v9);
    uint64_t v27 = (uint64_t)v9;
    uint64_t v28 = v9;
    uint64_t v29 = v42;
    sub_253AF1A28(v27, v42);
    swift_bridgeObjectRetain();
    uint64_t v30 = (uint64_t)v44;
    AST.FlatValue.init(transcript:)(v29);
    if (v1)
    {
      swift_bridgeObjectRelease();
      uint64_t v11 = v41;
      swift_release();
      sub_253AF1980();
      return v11;
    }
    sub_253AF1980();
    *(void *)(v39 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v31 = v40;
    uint64_t v32 = v41;
    uint64_t v33 = (void *)(*(void *)(v41 + 48) + 16 * i);
    *uint64_t v33 = v25;
    v33[1] = v26;
    uint64_t v34 = *(void *)(v32 + 56) + *(void *)(v31 + 72) * i;
    uint64_t v11 = v32;
    uint64_t result = sub_253AF19D0(v30, v34);
    uint64_t v35 = *(void *)(v11 + 16);
    BOOL v21 = __OFADD__(v35, 1);
    uint64_t v36 = v35 + 1;
    if (v21)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    uint64_t v9 = v28;
    *(void *)(v11 + 16) = v36;
    if (v18) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v21 = __OFADD__(v12++, 1);
    if (v21) {
      goto LABEL_27;
    }
    if (v12 >= v38) {
      return v11;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v12);
    if (!v22) {
      break;
    }
LABEL_15:
    unint64_t v18 = (v22 - 1) & v22;
  }
  int64_t v23 = v12 + 1;
  if (v12 + 1 >= v38) {
    return v11;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v23);
  if (v22) {
    goto LABEL_14;
  }
  int64_t v23 = v12 + 2;
  if (v12 + 2 >= v38) {
    return v11;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v23);
  if (v22) {
    goto LABEL_14;
  }
  int64_t v23 = v12 + 3;
  if (v12 + 3 >= v38) {
    return v11;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v23);
  if (v22)
  {
LABEL_14:
    int64_t v12 = v23;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v12 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v12 >= v38) {
      return v11;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v12);
    ++v23;
    if (v22) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_253AE8864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  sub_253AF367C();
  uint64_t v56 = sub_253B09120();
  sub_253465998();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  sub_253AF1C40(v14, v51);
  uint64_t v15 = sub_253B08E50();
  sub_253465998();
  uint64_t v17 = v16;
  MEMORY[0x270FA5388](v18);
  uint64_t v59 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v20);
  sub_253A3B8EC();
  MEMORY[0x270FA5388](v21);
  sub_253AF2178((uint64_t)&v51 - v22);
  sub_253462A5C(&qword_269CE8C88);
  sub_253B0A230();
  uint64_t v61 = v10;
  sub_253AF2058();
  uint64_t v51 = v10 + 64;
  uint64_t v52 = v24;
  uint64_t v60 = v17;
  uint64_t v57 = v17 + 16;
  uint64_t v58 = (void (**)(void))(v17 + 8);
  uint64_t v54 = v25 + 64;
  uint64_t v55 = v12;
  uint64_t v53 = v12 + 32;
  uint64_t v62 = v25;
  if (!v26) {
    goto LABEL_3;
  }
LABEL_2:
  sub_2534D9474();
  uint64_t v64 = v27;
  uint64_t v65 = v28;
  unint64_t v30 = v29 | (v28 << 6);
  uint64_t v31 = v63;
  while (1)
  {
    int64_t v38 = (uint64_t *)(*(void *)(v61 + 48) + 16 * v30);
    uint64_t v40 = *v38;
    uint64_t v39 = v38[1];
    uint64_t v41 = *(void (**)(uint64_t, unint64_t, uint64_t))(v60 + 16);
    v41(v31, *(void *)(v61 + 56) + *(void *)(v60 + 72) * v30, v15);
    uint64_t v42 = sub_253A3E5C8();
    ((void (*)(uint64_t))v41)(v42);
    sub_253AF32C0();
    ((void (*)(void))v41)();
    swift_bridgeObjectRetain();
    sub_253B09110();
    if (a10)
    {
      uint64_t v50 = *v58;
      sub_253A3F354();
      sub_2534D91A0();
      v50();
      swift_bridgeObjectRelease();
      swift_release();
      sub_2534D91A0();
      v50();
LABEL_22:
      sub_2534847C8();
      return;
    }
    uint64_t v43 = *v58;
    sub_253A3F354();
    sub_2534DA4BC();
    v43();
    sub_253AF21E0();
    sub_2534DA4BC();
    v43();
    *(void *)(v54 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    uint64_t v44 = v62;
    uint64_t v45 = (void *)(*(void *)(v62 + 48) + 16 * v30);
    *uint64_t v45 = v40;
    v45[1] = v39;
    sub_2534D8E14();
    v46();
    uint64_t v47 = *(void *)(v44 + 16);
    BOOL v32 = __OFADD__(v47, 1);
    uint64_t v48 = v47 + 1;
    if (v32)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    *(void *)(v44 + 16) = v48;
    uint64_t v23 = v65;
    if (v64) {
      goto LABEL_2;
    }
LABEL_3:
    BOOL v32 = __OFADD__(v23, 1);
    uint64_t v33 = v23 + 1;
    uint64_t v31 = v63;
    if (v32) {
      goto LABEL_25;
    }
    if (v33 >= v52) {
      goto LABEL_22;
    }
    if (!*(void *)(v51 + 8 * v33))
    {
      if (v33 + 1 >= v52) {
        goto LABEL_22;
      }
      if (!*(void *)(v51 + 8 * (v33 + 1)))
      {
        if (v33 + 2 >= v52) {
          goto LABEL_22;
        }
        if (!*(void *)(v51 + 8 * (v33 + 2)))
        {
          uint64_t v34 = v33 + 3;
          if (v33 + 3 >= v52) {
            goto LABEL_22;
          }
          if (!*(void *)(v51 + 8 * v34)) {
            break;
          }
        }
      }
    }
LABEL_12:
    sub_253AF34F8();
    uint64_t v64 = v35;
    uint64_t v65 = v36;
    unint64_t v30 = v37 + (v36 << 6);
  }
  while (1)
  {
    uint64_t v49 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v49 >= v52) {
      goto LABEL_22;
    }
    ++v34;
    if (*(void *)(v51 + 8 * v49)) {
      goto LABEL_12;
    }
  }
LABEL_26:
  __break(1u);
}

void sub_253AE8BF4()
{
}

void sub_253AE8C0C()
{
  sub_2534847F8();
  sub_2534D9690();
  sub_253B059D0();
  sub_253465998();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = sub_253AF1C9C(v3, v1);
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementID(v4);
  uint64_t v6 = sub_25346CB34(v5);
  uint64_t v46 = v7;
  MEMORY[0x270FA5388](v6);
  sub_2535B39C8();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  sub_253AF3C3C(v9, v10, v11, v12, v13, v14, v15, v16, v40);
  sub_253462A5C(&qword_269CDDCA0);
  uint64_t v17 = sub_253B0A230();
  int64_t v18 = 0;
  uint64_t v47 = v0;
  uint64_t v21 = *(void *)(v0 + 64);
  uint64_t v20 = v0 + 64;
  uint64_t v19 = v21;
  uint64_t v22 = 1 << *(unsigned char *)(v20 - 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & v19;
  uint64_t v41 = v20;
  int64_t v42 = (unint64_t)(v22 + 63) >> 6;
  uint64_t v43 = v17 + 64;
  uint64_t v44 = v17;
  if ((v23 & v19) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v25 = __clz(__rbit64(v24));
  v24 &= v24 - 1;
  int64_t v48 = v18;
  for (unint64_t i = v25 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v28)) + (v29 << 6))
  {
    uint64_t v31 = (uint64_t *)(*(void *)(v47 + 48) + 16 * i);
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    sub_253AF1A28(*(void *)(v47 + 56) + *(void *)(v46 + 72) * i, v45);
    sub_253AF3A28();
    sub_253AF1A28(v34, v35);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_253B059B0();
    sub_253AF1980();
    sub_253578EEC();
    sub_253AF1980();
    *(void *)(v43 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v36 = (void *)(*(void *)(v44 + 48) + 16 * i);
    void *v36 = v33;
    v36[1] = v32;
    sub_2534D8E14();
    v37();
    sub_253AF2AE0();
    if (v39)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    *(void *)(v44 + 16) = v38;
    int64_t v18 = v48;
    if (v24) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v27 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      goto LABEL_24;
    }
    if (v27 >= v42) {
      goto LABEL_22;
    }
    unint64_t v28 = *(void *)(v41 + 8 * v27);
    int64_t v29 = v18 + 1;
    if (!v28)
    {
      int64_t v29 = v18 + 2;
      if (v18 + 2 >= v42) {
        goto LABEL_22;
      }
      unint64_t v28 = *(void *)(v41 + 8 * v29);
      if (!v28)
      {
        int64_t v29 = v18 + 3;
        if (v18 + 3 >= v42) {
          goto LABEL_22;
        }
        unint64_t v28 = *(void *)(v41 + 8 * v29);
        if (!v28) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v24 = (v28 - 1) & v28;
    int64_t v48 = v29;
  }
  uint64_t v30 = v18 + 4;
  if (v18 + 4 >= v42)
  {
LABEL_22:
    sub_2534847C8();
    return;
  }
  unint64_t v28 = *(void *)(v41 + 8 * v30);
  if (v28)
  {
    int64_t v29 = v18 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v29 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v29 >= v42) {
      goto LABEL_22;
    }
    unint64_t v28 = *(void *)(v41 + 8 * v29);
    ++v30;
    if (v28) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_253AE8F30(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ClientAction.ShimParameter(0);
  uint64_t v37 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v41 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoShimParameter(0);
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v39 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v34 - v8;
  sub_253462A5C(&qword_269CE83C0);
  uint64_t result = sub_253B0A230();
  uint64_t v11 = result;
  int64_t v12 = 0;
  uint64_t v42 = a1;
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v14 = a1 + 64;
  uint64_t v13 = v15;
  uint64_t v16 = 1 << *(unsigned char *)(v14 - 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v13;
  uint64_t v34 = v14;
  int64_t v35 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v36 = result + 64;
  uint64_t v38 = result;
  if ((v17 & v13) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (unint64_t i = v19 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v12 << 6))
  {
    unint64_t v24 = (uint64_t *)(*(void *)(v42 + 48) + 16 * i);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    sub_253AF1A28(*(void *)(v42 + 56) + *(void *)(v40 + 72) * i, (uint64_t)v9);
    sub_253AF1A28((uint64_t)v9, v39);
    swift_bridgeObjectRetain();
    uint64_t v27 = (uint64_t)v41;
    ClientAction.ShimParameter.init(transcript:)();
    if (v1)
    {
      swift_bridgeObjectRelease();
      uint64_t v11 = v38;
      swift_release();
      sub_253AF1980();
      return v11;
    }
    sub_253AF1980();
    *(void *)(v36 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v28 = v37;
    uint64_t v29 = v38;
    uint64_t v30 = (void *)(*(void *)(v38 + 48) + 16 * i);
    *uint64_t v30 = v25;
    v30[1] = v26;
    uint64_t v31 = *(void *)(v29 + 56) + *(void *)(v28 + 72) * i;
    uint64_t v11 = v29;
    uint64_t result = sub_253AF19D0(v27, v31);
    uint64_t v32 = *(void *)(v11 + 16);
    BOOL v21 = __OFADD__(v32, 1);
    uint64_t v33 = v32 + 1;
    if (v21)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    *(void *)(v11 + 16) = v33;
    if (v18) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v21 = __OFADD__(v12++, 1);
    if (v21) {
      goto LABEL_27;
    }
    if (v12 >= v35) {
      return v11;
    }
    unint64_t v22 = *(void *)(v34 + 8 * v12);
    if (!v22) {
      break;
    }
LABEL_15:
    unint64_t v18 = (v22 - 1) & v22;
  }
  int64_t v23 = v12 + 1;
  if (v12 + 1 >= v35) {
    return v11;
  }
  unint64_t v22 = *(void *)(v34 + 8 * v23);
  if (v22) {
    goto LABEL_14;
  }
  int64_t v23 = v12 + 2;
  if (v12 + 2 >= v35) {
    return v11;
  }
  unint64_t v22 = *(void *)(v34 + 8 * v23);
  if (v22) {
    goto LABEL_14;
  }
  int64_t v23 = v12 + 3;
  if (v12 + 3 >= v35) {
    return v11;
  }
  unint64_t v22 = *(void *)(v34 + 8 * v23);
  if (v22)
  {
LABEL_14:
    int64_t v12 = v23;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v12 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v12 >= v35) {
      return v11;
    }
    unint64_t v22 = *(void *)(v34 + 8 * v12);
    ++v23;
    if (v22) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_253AE9304(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v106 = sub_253B06770();
  uint64_t v4 = *(void *)(v106 - 8);
  MEMORY[0x270FA5388](v106);
  uint64_t v81 = (void *)((char *)v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v98 = type metadata accessor for TranscriptProtoPromptSelection(0);
  uint64_t v6 = MEMORY[0x270FA5388](v98);
  uint64_t v84 = (uint64_t)v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v95 = (uint64_t)v79 - v8;
  uint64_t v9 = sub_253462A5C(&qword_269CE1BD0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v97 = (uint64_t)v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v105 = (uint64_t)v79 - v12;
  uint64_t v13 = sub_253462A5C(&qword_269CDCB00);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v87 = (char *)v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_253462A5C(&qword_269CE1BE0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v101 = (uint64_t)v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = (ValueMetadata *)type metadata accessor for TranscriptProtoToolParameterValue(0);
  MEMORY[0x270FA5388](v104);
  uint64_t v99 = (uint64_t)v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for ToolParameterValue(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for Action.ParameterValue(0);
  uint64_t v91 = *(void *)(v21 - 8);
  uint64_t v92 = v21;
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v90 = (char *)v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v89 = (uint64_t)v79 - v24;
  uint64_t v96 = type metadata accessor for TranscriptProtoActionParameterValue(0);
  uint64_t v100 = *(void *)(v96 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v96);
  uint64_t v111 = (uint64_t)v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)v79 - v27;
  sub_253462A5C(&qword_269CE83D0);
  uint64_t result = sub_253B0A230();
  int64_t v30 = 0;
  uint64_t v102 = a1;
  uint64_t v31 = *(void *)(a1 + 64);
  uint64_t v85 = a1 + 64;
  uint64_t v32 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v33 = -1;
  if (v32 < 64) {
    uint64_t v33 = ~(-1 << v32);
  }
  unint64_t v34 = v33 & v31;
  int64_t v86 = (unint64_t)(v32 + 63) >> 6;
  v79[2] = *MEMORY[0x263F4C6E0];
  uint64_t v82 = (void (**)(void *, void, uint64_t))(v4 + 104);
  v79[1] = *MEMORY[0x263F4C6E8];
  unsigned int v80 = *MEMORY[0x263F4C6D8];
  uint64_t v83 = (void (**)(uint64_t, void *, uint64_t))(v4 + 32);
  uint64_t v88 = result + 64;
  uint64_t v103 = result;
  uint64_t v93 = v20;
  uint64_t v94 = v28;
  if (!v34) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v109 = (v34 - 1) & v34;
  int64_t v110 = v30;
  unint64_t v35 = __clz(__rbit64(v34)) | (v30 << 6);
  uint64_t v36 = v106;
  while (1)
  {
    uint64_t v41 = (uint64_t *)(*(void *)(v102 + 48) + 16 * v35);
    uint64_t v42 = *v41;
    uint64_t v43 = v41[1];
    sub_253AF1A28(*(void *)(v102 + 56) + *(void *)(v100 + 72) * v35, (uint64_t)v28);
    uint64_t v44 = v111;
    sub_253AF1A28((uint64_t)v28, v111);
    uint64_t v45 = v44;
    uint64_t v46 = v101;
    sub_253961F60(v45, v101, &qword_269CE1BE0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v46, 1, (uint64_t)v104) == 1)
    {
      swift_bridgeObjectRetain();
      sub_253472458(v46, &qword_269CE1BE0);
      uint64_t v113 = v104;
      sub_253462A5C(&qword_269CE5050);
      uint64_t v70 = sub_253B09730();
      uint64_t v72 = v71;
      sub_253961DC0();
      swift_allocError();
      *(void *)uint64_t v73 = v70;
      *(void *)(v73 + 8) = v72;
      *(unsigned char *)(v73 + 16) = 0;
      swift_willThrow();
LABEL_36:
      sub_253AF1980();
      uint64_t v74 = v103;
      goto LABEL_37;
    }
    sub_253AF19D0(v46, v99);
    swift_bridgeObjectRetain();
    ToolParameterValue.init(transcript:)();
    if (v2) {
      goto LABEL_36;
    }
    uint64_t v47 = v105;
    sub_253961F60(v111 + *(int *)(v96 + 20), v105, &qword_269CE1BD0);
    uint64_t v48 = v97;
    sub_253961F60(v47, v97, &qword_269CE1BD0);
    int v49 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v48, 1, v98);
    uint64_t v107 = 0;
    uint64_t v108 = v43;
    if (v49 == 1)
    {
      sub_253472458(v47, &qword_269CE1BD0);
      sub_253472458(v48, &qword_269CE1BD0);
      uint64_t v50 = 1;
      uint64_t v51 = (uint64_t)v93;
      uint64_t v28 = v94;
      uint64_t v52 = (uint64_t)v87;
      goto LABEL_32;
    }
    uint64_t v53 = v95;
    sub_253AF19D0(v48, v95);
    uint64_t v54 = v53;
    uint64_t v55 = v84;
    sub_253AF1A28(v54, v84);
    uint64_t v56 = v55;
    if (*(unsigned char *)(v55 + 9))
    {
      uint64_t v113 = &type metadata for TranscriptProtoPromptSelectionEnum;
      sub_253462A5C(&qword_269CE86E0);
      uint64_t v75 = sub_253B09730();
      uint64_t v77 = v76;
      sub_253961DC0();
      swift_allocError();
      *(void *)uint64_t v78 = v75;
      *(void *)(v78 + 8) = v77;
      *(unsigned char *)(v78 + 16) = 0;
      swift_willThrow();
      sub_253AF1980();
      sub_253472458(v47, &qword_269CE1BD0);
      sub_253AF1980();
      sub_253AF1980();
      sub_253AF1980();
      uint64_t v74 = v103;
LABEL_37:
      swift_bridgeObjectRelease();
      swift_release();
      sub_253AF1980();
      return v74;
    }
    uint64_t v57 = *(void *)v55;
    if (*(unsigned char *)(v56 + 8))
    {
      sub_253AF1980();
      uint64_t v51 = (uint64_t)v93;
      uint64_t v52 = (uint64_t)v87;
      uint64_t v58 = v81;
      uint64_t v60 = v57 ? &v112 : (char *)&v111 + 4;
      uint64_t v36 = v106;
      (*v82)(v81, *((unsigned int *)v60 - 64), v106);
      uint64_t v59 = v94;
    }
    else
    {
      sub_253AF1980();
      uint64_t v58 = v81;
      *uint64_t v81 = v57;
      uint64_t v36 = v106;
      (*v82)(v58, v80, v106);
      uint64_t v51 = (uint64_t)v93;
      uint64_t v59 = v94;
      uint64_t v52 = (uint64_t)v87;
    }
    sub_253472458(v105, &qword_269CE1BD0);
    sub_253AF1980();
    (*v83)(v52, v58, v36);
    uint64_t v50 = 0;
    uint64_t v28 = v59;
LABEL_32:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v52, v50, 1, v36);
    uint64_t v61 = (uint64_t)v90;
    uint64_t v62 = (uint64_t)&v90[*(int *)(v92 + 20)];
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v62, 1, 1, v36);
    sub_253AF19D0(v51, v61);
    sub_253961BF0(v52, v62, &qword_269CDCB00);
    uint64_t v63 = v61;
    uint64_t v64 = v89;
    sub_253AF19D0(v63, v89);
    sub_253AF1980();
    sub_253AF1980();
    *(void *)(v88 + ((v35 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v35;
    uint64_t v65 = v103;
    uint64_t v66 = (void *)(*(void *)(v103 + 48) + 16 * v35);
    uint64_t v67 = v108;
    *uint64_t v66 = v42;
    v66[1] = v67;
    uint64_t result = sub_253AF19D0(v64, *(void *)(v65 + 56) + *(void *)(v91 + 72) * v35);
    uint64_t v68 = *(void *)(v65 + 16);
    BOOL v37 = __OFADD__(v68, 1);
    uint64_t v69 = v68 + 1;
    if (v37) {
      break;
    }
    *(void *)(v65 + 16) = v69;
    uint64_t v2 = v107;
    unint64_t v34 = v109;
    int64_t v30 = v110;
    if (v109) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v37 = __OFADD__(v30, 1);
    int64_t v38 = v30 + 1;
    uint64_t v36 = v106;
    if (v37) {
      goto LABEL_42;
    }
    if (v38 >= v86) {
      return v103;
    }
    unint64_t v39 = *(void *)(v85 + 8 * v38);
    if (!v39)
    {
      int64_t v40 = v38 + 1;
      if (v38 + 1 >= v86) {
        return v103;
      }
      unint64_t v39 = *(void *)(v85 + 8 * v40);
      if (v39) {
        goto LABEL_14;
      }
      int64_t v40 = v38 + 2;
      if (v38 + 2 >= v86) {
        return v103;
      }
      unint64_t v39 = *(void *)(v85 + 8 * v40);
      if (v39)
      {
LABEL_14:
        int64_t v38 = v40;
        goto LABEL_15;
      }
      int64_t v40 = v38 + 3;
      if (v38 + 3 < v86)
      {
        unint64_t v39 = *(void *)(v85 + 8 * v40);
        if (!v39)
        {
          while (1)
          {
            int64_t v38 = v40 + 1;
            if (__OFADD__(v40, 1)) {
              goto LABEL_43;
            }
            if (v38 >= v86) {
              return v103;
            }
            unint64_t v39 = *(void *)(v85 + 8 * v38);
            ++v40;
            if (v39) {
              goto LABEL_15;
            }
          }
        }
        goto LABEL_14;
      }
      return v103;
    }
LABEL_15:
    uint64_t v109 = (v39 - 1) & v39;
    int64_t v110 = v38;
    unint64_t v35 = __clz(__rbit64(v39)) + (v38 << 6);
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

void sub_253AE9ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ValueMetadata *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_2534847F8();
  a19 = v25;
  a20 = v26;
  uint64_t v157 = v21;
  sub_2534D9690();
  uint64_t v153 = sub_253B06770();
  uint64_t v27 = sub_25346CB34(v153);
  uint64_t v155 = v28;
  MEMORY[0x270FA5388](v27);
  sub_25346CB04();
  uint64_t v30 = sub_2534F8208(v29);
  uint64_t v31 = type metadata accessor for TranscriptProtoPromptSelection(v30);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v32);
  sub_2534F823C();
  MEMORY[0x270FA5388](v33);
  uint64_t v137 = (uint64_t)v122 - v34;
  uint64_t v35 = sub_253462A5C(&qword_269CE1BD0);
  uint64_t v36 = sub_25346CB4C(v35);
  MEMORY[0x270FA5388](v36);
  uint64_t v141 = (uint64_t)v122 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v38);
  sub_2534D9EC0();
  uint64_t v39 = sub_253462A5C(&qword_269CDCB00);
  uint64_t v40 = sub_25346CB4C(v39);
  MEMORY[0x270FA5388](v40);
  sub_2534D8F5C((uint64_t)v122 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v43 = sub_25346CB4C(v42);
  MEMORY[0x270FA5388](v43);
  uint64_t v149 = (uint64_t)v122 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_2536D3938();
  sub_253465998();
  uint64_t v46 = v45;
  MEMORY[0x270FA5388](v47);
  uint64_t v147 = (char *)v122 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v49);
  uint64_t v146 = (char *)v122 - v50;
  v122[2] = sub_253B09120();
  sub_253465998();
  v122[1] = v51;
  MEMORY[0x270FA5388](v52);
  uint64_t v156 = (char *)v122 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  uint64_t v136 = sub_253B06280();
  sub_253465998();
  uint64_t v55 = v54;
  MEMORY[0x270FA5388](v56);
  uint64_t v58 = sub_2534F8208((uint64_t)v122 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v140 = type metadata accessor for TranscriptProtoParameterValue(v58);
  sub_253465998();
  uint64_t v148 = v59;
  MEMORY[0x270FA5388](v60);
  sub_2534D9C38();
  MEMORY[0x270FA5388](v61);
  sub_2535B3D6C();
  sub_253462A5C(&qword_269CE8CA0);
  uint64_t v62 = v22;
  sub_253B0A230();
  uint64_t v150 = v20;
  uint64_t v130 = v20 + 64;
  sub_253AF2058();
  uint64_t v131 = v63;
  uint64_t v144 = v46 + 16;
  uint64_t v145 = v46 + 32;
  uint64_t v143 = v46 + 8;
  int v124 = *MEMORY[0x263F4C6E0];
  uint64_t v127 = v155 + 104;
  int v123 = *MEMORY[0x263F4C6E8];
  int v125 = *MEMORY[0x263F4C6D8];
  uint64_t v128 = v155 + 32;
  sub_253AF325C(v64 + 64);
  uint64_t v135 = v55;
  uint64_t v133 = v55 + 32;
  uint64_t v129 = v23;
  uint64_t v142 = v31;
  uint64_t v151 = v66;
  uint64_t v138 = v22;
  uint64_t v139 = v24;
  if (!v67) {
    goto LABEL_3;
  }
LABEL_2:
  sub_2534D9474();
  uint64_t v154 = v68;
  uint64_t v155 = v69;
  unint64_t v71 = v70 | (v69 << 6);
  uint64_t v72 = v152;
  while (1)
  {
    uint64_t v83 = (uint64_t *)(*(void *)(v150 + 48) + 16 * v71);
    uint64_t v84 = *v83;
    uint64_t v85 = v83[1];
    sub_253AF1A28(*(void *)(v150 + 56) + *(void *)(v148 + 72) * v71, v24);
    uint64_t v86 = sub_253A3E5C8();
    sub_253AF1A28(v86, v87);
    uint64_t v88 = v149;
    sub_253961F60(v62, v149, &qword_269CDCBC8);
    sub_2534D8B48(v88, 1, v72);
    if (v89)
    {
      swift_bridgeObjectRetain();
      sub_253472458(v88, &qword_269CDCBC8);
      a10 = (ValueMetadata *)v72;
      sub_253462A5C(&qword_269CE5170);
      sub_253AF1E74();
      sub_253AF2B50();
      uint64_t v116 = sub_2534D969C();
      uint64_t *v117 = v88;
      v117[1] = v72;
      sub_253962224(v116, (uint64_t)v117);
      sub_253AF1980();
LABEL_35:
      swift_bridgeObjectRelease();
      swift_release();
      sub_253AF1980();
LABEL_36:
      sub_2536D3D5C();
      sub_2534847C8();
      return;
    }
    sub_25353CE60();
    sub_2534D8E14();
    v90();
    sub_253579334();
    sub_2534B3428();
    v91();
    swift_bridgeObjectRetain();
    uint64_t v92 = v157;
    sub_253B09110();
    uint64_t v157 = v92;
    if (v92)
    {
      sub_2534659CC();
      v118();
      sub_253AF1980();
      goto LABEL_35;
    }
    sub_2534659CC();
    v93();
    sub_253961F60(v62 + *(int *)(v140 + 20), v23, &qword_269CE1BD0);
    uint64_t v94 = v141;
    sub_253961F60(v23, v141, &qword_269CE1BD0);
    uint64_t v95 = sub_253AF34BC();
    sub_2534D8B48(v95, v96, v142);
    if (v89)
    {
      uint64_t v97 = v85;
      uint64_t v98 = v23;
      uint64_t v99 = sub_253A3E5D4();
      sub_253472458(v99, v100);
      uint64_t v101 = sub_2535793C0();
      sub_253472458(v101, v102);
      uint64_t v103 = 1;
      uint64_t v104 = v132;
    }
    else
    {
      uint64_t v105 = v137;
      sub_253AF19D0(v94, v137);
      sub_253AF1D68(v105, (uint64_t)&a10);
      uint64_t v106 = v105;
      if (*(unsigned char *)(v105 + 9))
      {
        a10 = &type metadata for TranscriptProtoPromptSelectionEnum;
        sub_253462A5C(&qword_269CE86E0);
        sub_253AF1E74();
        sub_253AF2B50();
        uint64_t v119 = sub_2534D969C();
        uint64_t *v120 = v105;
        v120[1] = v72;
        sub_253962224(v119, (uint64_t)v120);
        sub_253AF1980();
        sub_253472458(v23, &qword_269CE1BD0);
        sub_253AF1980();
        sub_253AF1980();
        sub_2534659CC();
        v121();
        goto LABEL_35;
      }
      uint64_t v107 = *(void *)v105;
      if (*(unsigned char *)(v106 + 8))
      {
        sub_253AF1980();
        sub_2534DA678();
        uint64_t v97 = v85;
      }
      else
      {
        uint64_t v97 = v85;
        sub_253AF1980();
        *uint64_t v126 = v107;
        sub_2534DA678();
      }
      sub_25346CCF8();
      v109();
      uint64_t v98 = v129;
      sub_253472458(v129, &qword_269CE1BD0);
      sub_253AF1980();
      uint64_t v104 = v132;
      sub_253AF3144();
      sub_2534D8E14();
      v110();
      uint64_t v103 = 0;
    }
    sub_253944448(v104, v103);
    sub_253578C34();
    sub_253B06260();
    uint64_t v62 = v138;
    sub_253AF1980();
    uint64_t v24 = v139;
    sub_253AF1980();
    *(void *)(v134 + ((v71 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v71;
    uint64_t v111 = v151;
    char v112 = (void *)(*(void *)(v151 + 48) + 16 * v71);
    *char v112 = v84;
    v112[1] = v97;
    sub_2534D8E14();
    v113();
    uint64_t v114 = *(void *)(v111 + 16);
    BOOL v73 = __OFADD__(v114, 1);
    uint64_t v115 = v114 + 1;
    if (v73) {
      break;
    }
    *(void *)(v111 + 16) = v115;
    uint64_t v23 = v98;
    uint64_t v65 = v155;
    if (v154) {
      goto LABEL_2;
    }
LABEL_3:
    BOOL v73 = __OFADD__(v65, 1);
    uint64_t v74 = v65 + 1;
    uint64_t v72 = v152;
    if (v73) {
      goto LABEL_41;
    }
    if (v74 >= v131) {
      goto LABEL_36;
    }
    if (!*(void *)(v130 + 8 * v74))
    {
      sub_253AF3240();
      if (v75 == v73) {
        goto LABEL_36;
      }
      sub_253AF31B0();
      if (!v76)
      {
        sub_253AF3240();
        if (v75 == v73) {
          goto LABEL_36;
        }
        sub_253AF31B0();
        if (!v77)
        {
          sub_253AF3240();
          if (v75 == v73) {
            goto LABEL_36;
          }
          sub_253AF31B0();
          if (!v79)
          {
            do
            {
              uint64_t v108 = v78 + 1;
              if (__OFADD__(v78, 1)) {
                goto LABEL_42;
              }
              if (v108 >= v131) {
                goto LABEL_36;
              }
              ++v78;
            }
            while (!*(void *)(v130 + 8 * v108));
          }
        }
      }
    }
    sub_253AF34F8();
    uint64_t v154 = v80;
    uint64_t v155 = v81;
    unint64_t v71 = v82 + (v81 << 6);
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

uint64_t sub_253AEA8DC(uint64_t a1, void *a2)
{
  return sub_253AA40C0(a1, v2[6], v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_253AEA904(uint64_t a1, void *a2)
{
  return sub_253AA433C(a1, v2[5], v2[2], v2[3], v2[4], a2);
}

uint64_t sub_253AEA928(uint64_t a1)
{
  return sub_253AA4520(a1, v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_253AEA94C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Candidate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_253AEA9B0(uint64_t a1)
{
  return sub_253AD9954(a1);
}

uint64_t sub_253AEA9CC(uint64_t a1)
{
  return sub_253AD9768(a1);
}

void sub_253AEA9E8()
{
}

void sub_253AEAA30()
{
}

uint64_t sub_253AEAA78(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25347907C(&qword_269CE8688);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_253AEAAC0(uint64_t a1)
{
  return sub_253AE3BB8(a1, *(void *)(v1 + 16));
}

unint64_t sub_253AEAAE0()
{
  unint64_t result = qword_269CE8778;
  if (!qword_269CE8778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8778);
  }
  return result;
}

_UNKNOWN **sub_253AEAB2C()
{
  return &protocol witness table for TranscriptProtoSpeechRequestCandidate;
}

uint64_t sub_253AEAB38(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8780, (void (*)(uint64_t))type metadata accessor for SpeechRequestCandidate);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEAB90()
{
  return sub_253AF1A80(&qword_269CE1B28, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSpeechRequestCandidate);
}

_UNKNOWN **sub_253AEABD8()
{
  return &protocol witness table for TranscriptProtoEvent;
}

uint64_t sub_253AEABE4(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8788, (void (*)(uint64_t))type metadata accessor for Session.Event);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEAC3C()
{
  return sub_253AF1A80(&qword_26B2491D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoEvent);
}

_UNKNOWN **sub_253AEAC84()
{
  return &protocol witness table for TranscriptProtoTranscript;
}

uint64_t sub_253AEAC90(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8790, (void (*)(uint64_t))type metadata accessor for Session.Transcript);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEACE8()
{
  return sub_253AF1A80(&qword_269CE26C8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTranscript);
}

_UNKNOWN **sub_253AEAD30()
{
  return &protocol witness table for TranscriptProtoTimepoint;
}

uint64_t sub_253AEAD3C(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8798, (void (*)(uint64_t))type metadata accessor for Timepoint);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEAD94()
{
  return sub_253AF1A80(&qword_26B249490, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTimepoint);
}

_UNKNOWN **sub_253AEADDC()
{
  return &protocol witness table for TranscriptProtoParticipantID;
}

unint64_t sub_253AEADE8(uint64_t a1)
{
  unint64_t result = sub_253AEAE10();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEAE10()
{
  unint64_t result = qword_269CE87A0;
  if (!qword_269CE87A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE87A0);
  }
  return result;
}

uint64_t sub_253AEAE5C()
{
  return sub_253AF1A80(&qword_26B2496D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParticipantID);
}

_UNKNOWN **sub_253AEAEA4()
{
  return &protocol witness table for TranscriptProtoSpanID;
}

unint64_t sub_253AEAEB0(uint64_t a1)
{
  unint64_t result = sub_253AEAED8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEAED8()
{
  unint64_t result = qword_269CE87A8;
  if (!qword_269CE87A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE87A8);
  }
  return result;
}

uint64_t sub_253AEAF24()
{
  return sub_253AF1A80(&qword_26B2492A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSpanID);
}

_UNKNOWN **sub_253AEAF6C()
{
  return &protocol witness table for TranscriptProtoPayload;
}

uint64_t sub_253AEAF78(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE87B0, (void (*)(uint64_t))type metadata accessor for Session.Event.Payload);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEAFD0()
{
  return sub_253AF1A80(&qword_26B249380, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPayload);
}

_UNKNOWN **sub_253AEB018()
{
  return &protocol witness table for TranscriptProtoSessionStart;
}

uint64_t sub_253AEB024(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE87B8, (void (*)(uint64_t))type metadata accessor for SessionStart);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEB07C()
{
  return sub_253AF1A80(&qword_26B249608, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSessionStart);
}

_UNKNOWN **sub_253AEB0C4()
{
  return &protocol witness table for TranscriptProtoDeviceDetails;
}

uint64_t sub_253AEB0D0(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE87C0, MEMORY[0x263F4C178]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEB128()
{
  return sub_253AF1A80(&qword_269CE3830, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDeviceDetails);
}

_UNKNOWN **sub_253AEB170()
{
  return &protocol witness table for TranscriptProtoDeviceDetailsDeviceType;
}

uint64_t sub_253AEB17C(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE87C8, MEMORY[0x263F4C170]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEB1D4()
{
  return sub_253AF1A80(&qword_269CE3818, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
}

_UNKNOWN **sub_253AEB21C()
{
  return &protocol witness table for TranscriptProtoLocaleSettings;
}

uint64_t sub_253AEB228(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE87D0, MEMORY[0x263F4C228]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEB280()
{
  return sub_253AF1A80(&qword_26B249780, (void (*)(uint64_t))type metadata accessor for TranscriptProtoLocaleSettings);
}

_UNKNOWN **sub_253AEB2C8()
{
  return &protocol witness table for TranscriptProtoContextPrewarmRequest;
}

unint64_t sub_253AEB2D4(uint64_t a1)
{
  unint64_t result = sub_253AEB2FC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEB2FC()
{
  unint64_t result = qword_269CE87D8;
  if (!qword_269CE87D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE87D8);
  }
  return result;
}

uint64_t sub_253AEB348()
{
  return sub_253AF1A80(&qword_269CE2958, (void (*)(uint64_t))type metadata accessor for TranscriptProtoContextPrewarmRequest);
}

_UNKNOWN **sub_253AEB390()
{
  return &protocol witness table for TranscriptProtoContextPrewarmCompleted;
}

unint64_t sub_253AEB39C(uint64_t a1)
{
  unint64_t result = sub_253AEB3C4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEB3C4()
{
  unint64_t result = qword_269CE87E0;
  if (!qword_269CE87E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE87E0);
  }
  return result;
}

uint64_t sub_253AEB410()
{
  return sub_253AF1A80(&qword_269CE2970, (void (*)(uint64_t))type metadata accessor for TranscriptProtoContextPrewarmCompleted);
}

_UNKNOWN **sub_253AEB458()
{
  return &protocol witness table for TranscriptProtoSpeechQuery;
}

unint64_t sub_253AEB464(uint64_t a1)
{
  unint64_t result = sub_253AEB48C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEB48C()
{
  unint64_t result = qword_269CE87E8;
  if (!qword_269CE87E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE87E8);
  }
  return result;
}

uint64_t sub_253AEB4D8()
{
  return sub_253AF1A80(&qword_269CE39D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSpeechQuery);
}

_UNKNOWN **sub_253AEB520()
{
  return &protocol witness table for TranscriptProtoTextQuery;
}

uint64_t sub_253AEB52C(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE87F0, (void (*)(uint64_t))type metadata accessor for TextQuery);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEB584()
{
  return sub_253AF1A80(&qword_269CE39A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTextQuery);
}

_UNKNOWN **sub_253AEB5CC()
{
  return &protocol witness table for TranscriptProtoRequest;
}

uint64_t sub_253AEB5D8(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE87F8, (void (*)(uint64_t))type metadata accessor for Request);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEB630()
{
  return sub_253AF1A80(&qword_269CE26F0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequest);
}

_UNKNOWN **sub_253AEB678()
{
  return &protocol witness table for TranscriptProtoRequestContent;
}

uint64_t sub_253AEB684(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8800, (void (*)(uint64_t))type metadata accessor for RequestContent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEB6DC()
{
  return sub_253AF1A80(&qword_269CE2708, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestContent);
}

_UNKNOWN **sub_253AEB724()
{
  return &protocol witness table for TranscriptProtoRequestContentStopContent;
}

unint64_t sub_253AEB730(uint64_t a1)
{
  unint64_t result = sub_253AEB758();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEB758()
{
  unint64_t result = qword_269CE8808;
  if (!qword_269CE8808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8808);
  }
  return result;
}

uint64_t sub_253AEB7A4()
{
  return sub_253AF1A80(&qword_269CE2720, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestContentStopContent);
}

_UNKNOWN **sub_253AEB7EC()
{
  return &protocol witness table for TranscriptProtoRequestContentTextContent;
}

uint64_t sub_253AEB7F8(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8810, (void (*)(uint64_t))type metadata accessor for RequestContent.TextContent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEB850()
{
  return sub_253AF1A80(&qword_269CE2738, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestContentTextContent);
}

_UNKNOWN **sub_253AEB898()
{
  return &protocol witness table for TranscriptProtoRequestContentSpeechContent;
}

unint64_t sub_253AEB8A4(uint64_t a1)
{
  unint64_t result = sub_253AEB8CC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEB8CC()
{
  unint64_t result = qword_269CE8818;
  if (!qword_269CE8818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8818);
  }
  return result;
}

uint64_t sub_253AEB918()
{
  return sub_253AF1A80(&qword_269CE2750, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestContentSpeechContent);
}

_UNKNOWN **sub_253AEB960()
{
  return &protocol witness table for TranscriptProtoExternalAgentRequest;
}

uint64_t sub_253AEB96C(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8820, (void (*)(uint64_t))type metadata accessor for ExternalAgentRequest);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEB9C4()
{
  return sub_253AF1A80(&qword_269CE2778, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentRequest);
}

_UNKNOWN **sub_253AEBA0C()
{
  return &protocol witness table for TranscriptProtoRequestPrescribedPlan;
}

uint64_t sub_253AEBA18(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8828, (void (*)(uint64_t))type metadata accessor for RequestPrescribedPlan);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEBA70()
{
  return sub_253AF1A80(&qword_269CE27A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlan);
}

_UNKNOWN **sub_253AEBAB8()
{
  return &protocol witness table for TranscriptProtoRequestPrescribedPlanSearchTool;
}

unint64_t sub_253AEBAC4(uint64_t a1)
{
  unint64_t result = sub_253AEBAEC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEBAEC()
{
  unint64_t result = qword_269CE8830;
  if (!qword_269CE8830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8830);
  }
  return result;
}

uint64_t sub_253AEBB38()
{
  return sub_253AF1A80(&qword_269CE27C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
}

_UNKNOWN **sub_253AEBB80()
{
  return &protocol witness table for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool;
}

unint64_t sub_253AEBB8C(uint64_t a1)
{
  unint64_t result = sub_253AEBBB4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEBBB4()
{
  unint64_t result = qword_269CE8838;
  if (!qword_269CE8838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8838);
  }
  return result;
}

uint64_t sub_253AEBC00()
{
  return sub_253AF1A80(&qword_269CE27D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
}

_UNKNOWN **sub_253AEBC48()
{
  return &protocol witness table for TranscriptProtoRequestPrescribedPlanTextTool;
}

unint64_t sub_253AEBC54(uint64_t a1)
{
  unint64_t result = sub_253AEBC7C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEBC7C()
{
  unint64_t result = qword_269CE8840;
  if (!qword_269CE8840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8840);
  }
  return result;
}

uint64_t sub_253AEBCC8()
{
  return sub_253AF1A80(&qword_269CE27F0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool);
}

_UNKNOWN **sub_253AEBD10()
{
  return &protocol witness table for TranscriptProtoRequestPrescribedPlanConvertTool;
}

unint64_t sub_253AEBD1C(uint64_t a1)
{
  unint64_t result = sub_253AEBD44();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEBD44()
{
  unint64_t result = qword_269CE8848;
  if (!qword_269CE8848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8848);
  }
  return result;
}

uint64_t sub_253AEBD90()
{
  return sub_253AF1A80(&qword_269CE2808, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool);
}

_UNKNOWN **sub_253AEBDD8()
{
  return &protocol witness table for TranscriptProtoRequestPrescribedPlanDisplayTool;
}

unint64_t sub_253AEBDE4(uint64_t a1)
{
  unint64_t result = sub_253AEBE0C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEBE0C()
{
  unint64_t result = qword_269CE8850;
  if (!qword_269CE8850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8850);
  }
  return result;
}

uint64_t sub_253AEBE58()
{
  return sub_253AF1A80(&qword_269CE2820, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool);
}

_UNKNOWN **sub_253AEBEA0()
{
  return &protocol witness table for TranscriptProtoRequestPrescribedPlanKnowledgeTool;
}

unint64_t sub_253AEBEAC(uint64_t a1)
{
  unint64_t result = sub_253AEBED4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEBED4()
{
  unint64_t result = qword_269CE8858;
  if (!qword_269CE8858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8858);
  }
  return result;
}

uint64_t sub_253AEBF20()
{
  return sub_253AF1A80(&qword_269CE2838, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
}

_UNKNOWN **sub_253AEBF68()
{
  return &protocol witness table for TranscriptProtoRequestPrescribedPlanOpenTool;
}

uint64_t sub_253AEBF74(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8860, (void (*)(uint64_t))type metadata accessor for RequestPrescribedPlan.OpenTool);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEBFCC()
{
  return sub_253AF1A80(&qword_269CE2850, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool);
}

_UNKNOWN **sub_253AEC014()
{
  return &protocol witness table for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool;
}

unint64_t sub_253AEC020(uint64_t a1)
{
  unint64_t result = sub_253AEC048();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEC048()
{
  unint64_t result = qword_269CE8868;
  if (!qword_269CE8868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8868);
  }
  return result;
}

uint64_t sub_253AEC094()
{
  return sub_253AF1A80(&qword_269CE2868, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool);
}

_UNKNOWN **sub_253AEC0DC()
{
  return &protocol witness table for TranscriptProtoAction;
}

uint64_t sub_253AEC0E8(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8870, (void (*)(uint64_t))type metadata accessor for Action);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEC140()
{
  return sub_253AF1A80(&qword_269CE0418, (void (*)(uint64_t))type metadata accessor for TranscriptProtoAction);
}

_UNKNOWN **sub_253AEC188()
{
  return &protocol witness table for TranscriptProtoActionCancellation;
}

uint64_t sub_253AEC194(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8878, (void (*)(uint64_t))type metadata accessor for ActionCancellation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEC1EC()
{
  return sub_253AF1A80(&qword_269CE28A0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionCancellation);
}

_UNKNOWN **sub_253AEC234()
{
  return &protocol witness table for TranscriptProtoClientAction;
}

uint64_t sub_253AEC240(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8880, (void (*)(uint64_t))type metadata accessor for ClientAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEC298()
{
  return sub_253AF1A80(&qword_269CE2A38, (void (*)(uint64_t))type metadata accessor for TranscriptProtoClientAction);
}

_UNKNOWN **sub_253AEC2E0()
{
  return &protocol witness table for TranscriptProtoShimParameter;
}

uint64_t sub_253AEC2EC(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8888, (void (*)(uint64_t))type metadata accessor for ClientAction.ShimParameter);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEC344()
{
  return sub_253AF1A80(&qword_269CE1CE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoShimParameter);
}

_UNKNOWN **sub_253AEC38C()
{
  return &protocol witness table for TranscriptProtoPersonQuery;
}

unint64_t sub_253AEC398(uint64_t a1)
{
  unint64_t result = sub_253AEC3C0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEC3C0()
{
  unint64_t result = qword_269CE8890;
  if (!qword_269CE8890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8890);
  }
  return result;
}

uint64_t sub_253AEC40C()
{
  return sub_253AF1A80(&qword_269CE2A70, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPersonQuery);
}

_UNKNOWN **sub_253AEC454()
{
  return &protocol witness table for TranscriptProtoHandle;
}

unint64_t sub_253AEC460(uint64_t a1)
{
  unint64_t result = sub_253AEC488();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEC488()
{
  unint64_t result = qword_269CE8898;
  if (!qword_269CE8898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8898);
  }
  return result;
}

uint64_t sub_253AEC4D4()
{
  return sub_253AF1A80(&qword_269CE2A88, (void (*)(uint64_t))type metadata accessor for TranscriptProtoHandle);
}

_UNKNOWN **sub_253AEC51C()
{
  return &protocol witness table for TranscriptProtoQueryStep;
}

uint64_t sub_253AEC528(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE88A0, (void (*)(uint64_t))type metadata accessor for QueryStep);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEC580()
{
  return sub_253AF1A80(&qword_269CE2ED8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryStep);
}

_UNKNOWN **sub_253AEC5C8()
{
  return &protocol witness table for TranscriptProtoVariableStep;
}

uint64_t sub_253AEC5D4(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE88A8, (void (*)(uint64_t))type metadata accessor for VariableStep);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEC62C()
{
  return sub_253AF1A80(&qword_269CE32D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVariableStep);
}

_UNKNOWN **sub_253AEC674()
{
  return &protocol witness table for TranscriptProtoIntelligenceFlowError;
}

uint64_t sub_253AEC680(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE88B0, MEMORY[0x263F4BF78]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEC6D8()
{
  return sub_253AF1A80(&qword_269CE2B10, (void (*)(uint64_t))type metadata accessor for TranscriptProtoIntelligenceFlowError);
}

_UNKNOWN **sub_253AEC720()
{
  return &protocol witness table for TranscriptProtoSystemPromptResolution;
}

uint64_t sub_253AEC72C(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE88B8, (void (*)(uint64_t))type metadata accessor for RequestContent.SystemPromptResolution);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEC784()
{
  return sub_253AF1A80(&qword_269CE3160, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolution);
}

_UNKNOWN **sub_253AEC7CC()
{
  return &protocol witness table for TranscriptProtoActionStepResult;
}

uint64_t sub_253AEC7D8(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE88C0, (void (*)(uint64_t))type metadata accessor for ActionStepResult);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEC830()
{
  return sub_253AF1A80(&qword_269CE29B8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionStepResult);
}

_UNKNOWN **sub_253AEC878()
{
  return &protocol witness table for TranscriptProtoStatementResult;
}

uint64_t sub_253AEC884(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE88C8, (void (*)(uint64_t))type metadata accessor for StatementResult);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEC8DC()
{
  return sub_253AF1A80(&qword_269CE1C90, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementResult);
}

_UNKNOWN **sub_253AEC924()
{
  return &protocol witness table for TranscriptProtoQueryStepResults;
}

uint64_t sub_253AEC930(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE88D0, (void (*)(uint64_t))type metadata accessor for QueryStepResults);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEC988()
{
  return sub_253AF1A80(&qword_269CE2F00, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryStepResults);
}

_UNKNOWN **sub_253AEC9D0()
{
  return &protocol witness table for TranscriptProtoActionResponse;
}

uint64_t sub_253AEC9DC(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE88D8, MEMORY[0x263F4C1F0]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AECA34()
{
  return sub_253AF1A80(&qword_269CE3190, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionResponse);
}

_UNKNOWN **sub_253AECA7C()
{
  return &protocol witness table for TranscriptProtoSystemResponse;
}

uint64_t sub_253AECA88(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE88E0, MEMORY[0x263F4C6B8]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AECAE0()
{
  return sub_253AF1A80(&qword_269CE37D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemResponse);
}

_UNKNOWN **sub_253AECB28()
{
  return &protocol witness table for TranscriptProtoInterpretedStatementResult;
}

uint64_t sub_253AECB34(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE88E8, MEMORY[0x263F4CBB8]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AECB8C()
{
  return sub_253AF1A80(&qword_269CE24B8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoInterpretedStatementResult);
}

_UNKNOWN **sub_253AECBD4()
{
  return &protocol witness table for TranscriptProtoActionResolverRequest;
}

uint64_t sub_253AECBE0(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE88F0, (void (*)(uint64_t))type metadata accessor for ActionResolverRequest);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AECC38()
{
  return sub_253AF1A80(&qword_269CE31A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionResolverRequest);
}

_UNKNOWN **sub_253AECC80()
{
  return &protocol witness table for TranscriptProtoResponseGenerationRequest;
}

unint64_t sub_253AECC8C(uint64_t a1)
{
  unint64_t result = sub_253AECCB4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AECCB4()
{
  unint64_t result = qword_269CE88F8;
  if (!qword_269CE88F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE88F8);
  }
  return result;
}

uint64_t sub_253AECD00()
{
  return sub_253AF1A80(&qword_269CE29F8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseGenerationRequest);
}

_UNKNOWN **sub_253AECD48()
{
  return &protocol witness table for TranscriptProtoClientInitiatedClientAction;
}

unint64_t sub_253AECD54(uint64_t a1)
{
  unint64_t result = sub_253AECD7C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AECD7C()
{
  unint64_t result = qword_269CE8900;
  if (!qword_269CE8900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8900);
  }
  return result;
}

uint64_t sub_253AECDC8()
{
  return sub_253AF1A80(&qword_269CE3248, (void (*)(uint64_t))type metadata accessor for TranscriptProtoClientInitiatedClientAction);
}

_UNKNOWN **sub_253AECE10()
{
  return &protocol witness table for TranscriptProtoSafetyModeRelease;
}

unint64_t sub_253AECE1C(uint64_t a1)
{
  unint64_t result = sub_253AECE44();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AECE44()
{
  unint64_t result = qword_269CE8908;
  if (!qword_269CE8908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8908);
  }
  return result;
}

uint64_t sub_253AECE90()
{
  return sub_253AF1A80(&qword_269CE31F8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSafetyModeRelease);
}

_UNKNOWN **sub_253AECED8()
{
  return &protocol witness table for TranscriptProtoSafetyModeException;
}

unint64_t sub_253AECEE4(uint64_t a1)
{
  unint64_t result = sub_253AECF0C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AECF0C()
{
  unint64_t result = qword_269CE8910;
  if (!qword_269CE8910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8910);
  }
  return result;
}

uint64_t sub_253AECF58()
{
  return sub_253AF1A80(&qword_269CE3210, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSafetyModeException);
}

_UNKNOWN **sub_253AECFA0()
{
  return &protocol witness table for TranscriptProtoVariableSetter;
}

uint64_t sub_253AECFAC(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8918, (void (*)(uint64_t))type metadata accessor for VariableSetter);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AED004()
{
  return sub_253AF1A80(&qword_269CE2230, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVariableSetter);
}

_UNKNOWN **sub_253AED04C()
{
  return &protocol witness table for TranscriptProtoSystemPromptResolutionUserAction;
}

uint64_t sub_253AED058(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8920, (void (*)(uint64_t))type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AED0B0()
{
  return sub_253AF1A80(&qword_269CE3278, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
}

_UNKNOWN **sub_253AED0F8()
{
  return &protocol witness table for TranscriptProtoActionResult;
}

uint64_t sub_253AED104(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8928, (void (*)(uint64_t))type metadata accessor for ActionResult);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AED15C()
{
  return sub_253AF1A80(&qword_269CE2988, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionResult);
}

_UNKNOWN **sub_253AED1A4()
{
  return &protocol witness table for TranscriptProtoStatementResultPayload;
}

uint64_t sub_253AED1B0(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8930, (void (*)(uint64_t))type metadata accessor for StatementResultPayload);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AED208()
{
  return sub_253AF1A80(&qword_269CE29D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementResultPayload);
}

_UNKNOWN **sub_253AED250()
{
  return &protocol witness table for TranscriptProtoResponseOutput;
}

uint64_t sub_253AED25C(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8938, MEMORY[0x263F4C608]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AED2B4()
{
  return sub_253AF1A80(&qword_269CE2F30, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseOutput);
}

_UNKNOWN **sub_253AED2FC()
{
  return &protocol witness table for TranscriptProtoQueryResults;
}

unint64_t sub_253AED308(uint64_t a1)
{
  unint64_t result = sub_253AED330();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AED330()
{
  unint64_t result = qword_269CE8940;
  if (!qword_269CE8940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8940);
  }
  return result;
}

uint64_t sub_253AED37C()
{
  return sub_253AF1A80(&qword_269CE1FB8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryResults);
}

_UNKNOWN **sub_253AED3C4()
{
  return &protocol witness table for TranscriptProtoParameterQuery;
}

uint64_t sub_253AED3D0(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8948, (void (*)(uint64_t))type metadata accessor for ParameterQuery);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AED428()
{
  return sub_253AF1A80(&qword_269CE1F80, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterQuery);
}

_UNKNOWN **sub_253AED470()
{
  return &protocol witness table for TranscriptProtoActionParameterContext;
}

uint64_t sub_253AED47C(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8950, (void (*)(uint64_t))type metadata accessor for ActionParameterContext);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AED4D4()
{
  return sub_253AF1A80(&qword_269CE2AF8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionParameterContext);
}

_UNKNOWN **sub_253AED51C()
{
  return &protocol witness table for TranscriptProtoActionConfirmation;
}

uint64_t sub_253AED528(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8958, MEMORY[0x263F4C950]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AED580()
{
  return sub_253AF1A80(&qword_269CE28D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionConfirmation);
}

_UNKNOWN **sub_253AED5C8()
{
  return &protocol witness table for TranscriptProtoActionConfirmationSystemStyle;
}

uint64_t sub_253AED5D4(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8960, MEMORY[0x263F4C948]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AED62C()
{
  return sub_253AF1A80(&qword_269CE28E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionConfirmationSystemStyle);
}

_UNKNOWN **sub_253AED674()
{
  return &protocol witness table for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement;
}

uint64_t sub_253AED680(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8968, MEMORY[0x263F4C938]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AED6D8()
{
  return sub_253AF1A80(&qword_269CE2900, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement);
}

_UNKNOWN **sub_253AED720()
{
  return &protocol witness table for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource;
}

uint64_t sub_253AED72C(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8970, MEMORY[0x263F4C930]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AED784()
{
  return sub_253AF1A80(&qword_269CE2918, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource);
}

_UNKNOWN **sub_253AED7CC()
{
  return &protocol witness table for TranscriptProtoParameterValue;
}

uint64_t sub_253AED7D8(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8978, MEMORY[0x263F4C530]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AED830()
{
  return sub_253AF1A80(&qword_269CE1BF8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterValue);
}

_UNKNOWN **sub_253AED878()
{
  return &protocol witness table for TranscriptProtoPromptSelection;
}

uint64_t sub_253AED884(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8980, MEMORY[0x263F4C6F0]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AED8DC()
{
  return sub_253AF1A80(&qword_269CE28B8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPromptSelection);
}

_UNKNOWN **sub_253AED924()
{
  return &protocol witness table for TranscriptProtoParameterNeedsValue;
}

uint64_t sub_253AED930(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8988, MEMORY[0x263F4C998]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AED988()
{
  return sub_253AF1A80(&qword_269CE2D60, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterNeedsValue);
}

_UNKNOWN **sub_253AED9D0()
{
  return &protocol witness table for TranscriptProtoParameterConfirmation;
}

uint64_t sub_253AED9DC(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8990, MEMORY[0x263F4CA98]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEDA34()
{
  return sub_253AF1A80(&qword_269CE2D08, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterConfirmation);
}

_UNKNOWN **sub_253AEDA7C()
{
  return &protocol witness table for TranscriptProtoParameterDisambiguation;
}

uint64_t sub_253AEDA88(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8998, MEMORY[0x263F4CB78]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEDAE0()
{
  return sub_253AF1A80(&qword_269CE2D20, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterDisambiguation);
}

_UNKNOWN **sub_253AEDB28()
{
  return &protocol witness table for TranscriptProtoParameterNotAllowed;
}

uint64_t sub_253AEDB34(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE89A0, MEMORY[0x263F4C9B8]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEDB8C()
{
  return sub_253AF1A80(&qword_269CE2D78, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterNotAllowed);
}

_UNKNOWN **sub_253AEDBD4()
{
  return &protocol witness table for TranscriptProtoCandidate;
}

uint64_t sub_253AEDBE0(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE89A8, (void (*)(uint64_t))type metadata accessor for Candidate);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEDC38()
{
  return sub_253AF1A80(&qword_269CE1F70, (void (*)(uint64_t))type metadata accessor for TranscriptProtoCandidate);
}

_UNKNOWN **sub_253AEDC80()
{
  return &protocol witness table for TranscriptProtoQueryPredicate;
}

uint64_t sub_253AEDC8C(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE89B0, (void (*)(uint64_t))type metadata accessor for QueryPredicate);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEDCE4()
{
  return sub_253AF1A80(&qword_269CE1F48, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryPredicate);
}

_UNKNOWN **sub_253AEDD2C()
{
  return &protocol witness table for TranscriptProtoCandidatePromptStatus;
}

unint64_t sub_253AEDD38(uint64_t a1)
{
  unint64_t result = sub_253AEDD60();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEDD60()
{
  unint64_t result = qword_269CE89B8;
  if (!qword_269CE89B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE89B8);
  }
  return result;
}

uint64_t sub_253AEDDAC()
{
  return sub_253AF1A80(&qword_269CE2A20, (void (*)(uint64_t))type metadata accessor for TranscriptProtoCandidatePromptStatus);
}

_UNKNOWN **sub_253AEDDF4()
{
  return &protocol witness table for TranscriptProtoPlan;
}

unint64_t sub_253AEDE00(uint64_t a1)
{
  unint64_t result = sub_253AEDE28();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEDE28()
{
  unint64_t result = qword_269CE89C0;
  if (!qword_269CE89C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE89C0);
  }
  return result;
}

uint64_t sub_253AEDE74()
{
  return sub_253AF1A80(&qword_269CE2DC8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPlan);
}

_UNKNOWN **sub_253AEDEBC()
{
  return &protocol witness table for TranscriptProtoRecoverableError;
}

unint64_t sub_253AEDEC8(uint64_t a1)
{
  unint64_t result = sub_253AEDEF0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEDEF0()
{
  unint64_t result = qword_269CE89C8;
  if (!qword_269CE89C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE89C8);
  }
  return result;
}

uint64_t sub_253AEDF3C()
{
  return sub_253AF1A80(&qword_269CE2DE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRecoverableError);
}

_UNKNOWN **sub_253AEDF84()
{
  return &protocol witness table for TranscriptProtoPlanGenerationError;
}

unint64_t sub_253AEDF90(uint64_t a1)
{
  unint64_t result = sub_253AEDFB8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEDFB8()
{
  unint64_t result = qword_269CE89D0;
  if (!qword_269CE89D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE89D0);
  }
  return result;
}

uint64_t sub_253AEE004()
{
  return sub_253AF1A80(&qword_269CE2DF8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPlanGenerationError);
}

_UNKNOWN **sub_253AEE04C()
{
  return &protocol witness table for TranscriptProtoPlanGenerationModelOutputError;
}

unint64_t sub_253AEE058(uint64_t a1)
{
  unint64_t result = sub_253AEE080();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEE080()
{
  unint64_t result = qword_269CE89D8;
  if (!qword_269CE89D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE89D8);
  }
  return result;
}

uint64_t sub_253AEE0CC()
{
  return sub_253AF1A80(&qword_269CE2E10, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
}

_UNKNOWN **sub_253AEE114()
{
  return &protocol witness table for TranscriptProtoDecompositionResult;
}

unint64_t sub_253AEE120(uint64_t a1)
{
  unint64_t result = sub_253AEE148();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEE148()
{
  unint64_t result = qword_269CE89E0;
  if (!qword_269CE89E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE89E0);
  }
  return result;
}

uint64_t sub_253AEE194()
{
  return sub_253AF1A80(&qword_269CE2AE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDecompositionResult);
}

_UNKNOWN **sub_253AEE1DC()
{
  return &protocol witness table for TranscriptProtoExpression;
}

uint64_t sub_253AEE1E8(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE89E8, (void (*)(uint64_t))type metadata accessor for Expression);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEE240()
{
  return sub_253AF1A80(&qword_269CE3518, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExpression);
}

_UNKNOWN **sub_253AEE288()
{
  return &protocol witness table for TranscriptProtoValueExpression;
}

unint64_t sub_253AEE294(uint64_t a1)
{
  unint64_t result = sub_253AEE2BC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEE2BC()
{
  unint64_t result = qword_269CE89F0;
  if (!qword_269CE89F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE89F0);
  }
  return result;
}

uint64_t sub_253AEE308()
{
  return sub_253AF1A80(&qword_269CE3530, (void (*)(uint64_t))type metadata accessor for TranscriptProtoValueExpression);
}

_UNKNOWN **sub_253AEE350()
{
  return &protocol witness table for TranscriptProtoPrefixExpression;
}

uint64_t sub_253AEE35C(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE89F8, (void (*)(uint64_t))type metadata accessor for PrefixExpression);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEE3B4()
{
  return sub_253AF1A80(&qword_269CE3560, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPrefixExpression);
}

_UNKNOWN **sub_253AEE3FC()
{
  return &protocol witness table for TranscriptProtoInfixExpression;
}

uint64_t sub_253AEE408(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8A00, (void (*)(uint64_t))type metadata accessor for InfixExpression);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEE460()
{
  return sub_253AF1A80(&qword_269CE3578, (void (*)(uint64_t))type metadata accessor for TranscriptProtoInfixExpression);
}

_UNKNOWN **sub_253AEE4A8()
{
  return &protocol witness table for TranscriptProtoIndexExpression;
}

uint64_t sub_253AEE4B4(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8A08, (void (*)(uint64_t))type metadata accessor for IndexExpression);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEE50C()
{
  return sub_253AF1A80(&qword_269CE35A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoIndexExpression);
}

_UNKNOWN **sub_253AEE554()
{
  return &protocol witness table for TranscriptProtoUpdateParametersExpression;
}

uint64_t sub_253AEE560(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8A10, (void (*)(uint64_t))type metadata accessor for UpdateParametersExpression);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEE5B8()
{
  return sub_253AF1A80(&qword_269CE35C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUpdateParametersExpression);
}

_UNKNOWN **sub_253AEE600()
{
  return &protocol witness table for TranscriptProtoUpdateParameterExpression_UpdateParameter;
}

uint64_t sub_253AEE60C(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8A18, (void (*)(uint64_t))type metadata accessor for UpdateParametersExpression.UpdateParameter);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEE664()
{
  return sub_253AF1A80(&qword_269CE23D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
}

_UNKNOWN **sub_253AEE6AC()
{
  return &protocol witness table for TranscriptProtoGlobalToolIdentifier;
}

unint64_t sub_253AEE6B8(uint64_t a1)
{
  unint64_t result = sub_253AEE6E0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEE6E0()
{
  unint64_t result = qword_269CE8A20;
  if (!qword_269CE8A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8A20);
  }
  return result;
}

uint64_t sub_253AEE72C()
{
  return sub_253AF1A80(&qword_269CE2438, (void (*)(uint64_t))type metadata accessor for TranscriptProtoGlobalToolIdentifier);
}

_UNKNOWN **sub_253AEE774()
{
  return &protocol witness table for TranscriptProtoCallExpression;
}

unint64_t sub_253AEE780(uint64_t a1)
{
  unint64_t result = sub_253AEE7A8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEE7A8()
{
  unint64_t result = qword_269CE8A28;
  if (!qword_269CE8A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8A28);
  }
  return result;
}

uint64_t sub_253AEE7F4()
{
  return sub_253AF1A80(&qword_269CE35F8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoCallExpression);
}

_UNKNOWN **sub_253AEE83C()
{
  return &protocol witness table for TranscriptProtoSayExpression;
}

unint64_t sub_253AEE848(uint64_t a1)
{
  unint64_t result = sub_253AEE870();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEE870()
{
  unint64_t result = qword_269CE8A30;
  if (!qword_269CE8A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8A30);
  }
  return result;
}

uint64_t sub_253AEE8BC()
{
  return sub_253AF1A80(&qword_269CE3610, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSayExpression);
}

_UNKNOWN **sub_253AEE904()
{
  return &protocol witness table for TranscriptProtoPickExpression;
}

uint64_t sub_253AEE910(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8A38, (void (*)(uint64_t))type metadata accessor for PickExpression);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEE968()
{
  return sub_253AF1A80(&qword_269CE3628, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPickExpression);
}

_UNKNOWN **sub_253AEE9B0()
{
  return &protocol witness table for TranscriptProtoConfirmExpression;
}

uint64_t sub_253AEE9BC(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8A40, (void (*)(uint64_t))type metadata accessor for ConfirmExpression);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEEA14()
{
  return sub_253AF1A80(&qword_269CE3640, (void (*)(uint64_t))type metadata accessor for TranscriptProtoConfirmExpression);
}

_UNKNOWN **sub_253AEEA5C()
{
  return &protocol witness table for TranscriptProtoSearchExpression;
}

unint64_t sub_253AEEA68(uint64_t a1)
{
  unint64_t result = sub_253AEEA90();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEEA90()
{
  unint64_t result = qword_269CE8A48;
  if (!qword_269CE8A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8A48);
  }
  return result;
}

uint64_t sub_253AEEADC()
{
  return sub_253AF1A80(&qword_269CE3658, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSearchExpression);
}

_UNKNOWN **sub_253AEEB24()
{
  return &protocol witness table for TranscriptProtoStructuredSearchExpression;
}

unint64_t sub_253AEEB30(uint64_t a1)
{
  unint64_t result = sub_253AEEB58();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEEB58()
{
  unint64_t result = qword_269CE8A50;
  if (!qword_269CE8A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8A50);
  }
  return result;
}

uint64_t sub_253AEEBA4()
{
  return sub_253AF1A80(&qword_269CE3670, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStructuredSearchExpression);
}

_UNKNOWN **sub_253AEEBEC()
{
  return &protocol witness table for TranscriptProtoPickOneExpression;
}

uint64_t sub_253AEEBF8(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8A58, (void (*)(uint64_t))type metadata accessor for PickOneExpression);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEEC50()
{
  return sub_253AF1A80(&qword_269CE3688, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPickOneExpression);
}

_UNKNOWN **sub_253AEEC98()
{
  return &protocol witness table for TranscriptProtoResolveToolExpression;
}

unint64_t sub_253AEECA4(uint64_t a1)
{
  unint64_t result = sub_253AEECCC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AEECCC()
{
  unint64_t result = qword_269CE8A60;
  if (!qword_269CE8A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8A60);
  }
  return result;
}

uint64_t sub_253AEED18()
{
  return sub_253AF1A80(&qword_269CE36A0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResolveToolExpression);
}

_UNKNOWN **sub_253AEED60()
{
  return &protocol witness table for TranscriptProtoUndoExpression;
}

uint64_t sub_253AEED6C(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8A68, (void (*)(uint64_t))type metadata accessor for UndoExpression);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEEDC4()
{
  return sub_253AF1A80(&qword_269CE36B8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUndoExpression);
}

_UNKNOWN **sub_253AEEE0C()
{
  return &protocol witness table for TranscriptProtoRejectExpression;
}

uint64_t sub_253AEEE18(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8A70, (void (*)(uint64_t))type metadata accessor for RejectExpression);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEEE70()
{
  return sub_253AF1A80(&qword_269CE36D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRejectExpression);
}

_UNKNOWN **sub_253AEEEB8()
{
  return &protocol witness table for TranscriptProtoCancelExpression;
}

uint64_t sub_253AEEEC4(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8A78, (void (*)(uint64_t))type metadata accessor for CancelExpression);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEEF1C()
{
  return sub_253AF1A80(&qword_269CE36E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoCancelExpression);
}

_UNKNOWN **sub_253AEEF64()
{
  return &protocol witness table for TranscriptProtoOpenExpression;
}

uint64_t sub_253AEEF70(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8A80, (void (*)(uint64_t))type metadata accessor for OpenExpression);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEEFC8()
{
  return sub_253AF1A80(&qword_269CE3760, (void (*)(uint64_t))type metadata accessor for TranscriptProtoOpenExpression);
}

_UNKNOWN **sub_253AEF010()
{
  return &protocol witness table for TranscriptProtoProgramStatement;
}

uint64_t sub_253AEF01C(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8A88, (void (*)(uint64_t))type metadata accessor for ProgramStatement);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEF074()
{
  return sub_253AF1A80(&qword_269CE1EC0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoProgramStatement);
}

_UNKNOWN **sub_253AEF0BC()
{
  return &protocol witness table for TranscriptProtoStatementID;
}

uint64_t sub_253AEF0C8(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8A90, MEMORY[0x263F4BF98]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEF120()
{
  return sub_253AF1A80(&qword_269CE1FE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
}

_UNKNOWN **sub_253AEF168()
{
  return &protocol witness table for TranscriptProtoActionOutcome;
}

uint64_t sub_253AEF174(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8A98, MEMORY[0x263F4C108]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEF1CC()
{
  return sub_253AF1A80(&qword_269CE2B88, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionOutcome);
}

_UNKNOWN **sub_253AEF214()
{
  return &protocol witness table for TranscriptProtoActionRequirement;
}

uint64_t sub_253AEF220(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8AA0, MEMORY[0x263F4C818]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEF278()
{
  return sub_253AF1A80(&qword_269CE2BA0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionRequirement);
}

_UNKNOWN **sub_253AEF2C0()
{
  return &protocol witness table for TranscriptProtoStatementOutcome;
}

uint64_t sub_253AEF2CC(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8AA8, MEMORY[0x263F4C7E0]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEF324()
{
  return sub_253AF1A80(&qword_269CE0410, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementOutcome);
}

_UNKNOWN **sub_253AEF36C()
{
  return &protocol witness table for TranscriptProtoActionSuccess;
}

uint64_t sub_253AEF378(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8AB0, MEMORY[0x263F4C158]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEF3D0()
{
  return sub_253AF1A80(&qword_269CE2C90, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionSuccess);
}

_UNKNOWN **sub_253AEF418()
{
  return &protocol witness table for TranscriptProtoResponseManifest;
}

uint64_t sub_253AEF424(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8AB8, MEMORY[0x263F4C768]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEF47C()
{
  return sub_253AF1A80(&qword_269CE0400, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseManifest);
}

_UNKNOWN **sub_253AEF4C4()
{
  return &protocol witness table for TranscriptProtoResponseParameter;
}

uint64_t sub_253AEF4D0(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8AC0, MEMORY[0x263F4C898]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEF528()
{
  return sub_253AF1A80(&qword_269CE2098, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseParameter);
}

_UNKNOWN **sub_253AEF570()
{
  return &protocol witness table for TranscriptProtoResponseDialog;
}

uint64_t sub_253AEF57C(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8AC8, MEMORY[0x263F4C538]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEF5D4()
{
  return sub_253AF1A80(&qword_269CE2F18, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseDialog);
}

_UNKNOWN **sub_253AEF61C()
{
  return &protocol witness table for TranscriptProtoResponseVisual;
}

uint64_t sub_253AEF628(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8AD0, MEMORY[0x263F4C6B0]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEF680()
{
  return sub_253AF1A80(&qword_269CE3098, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseVisual);
}

_UNKNOWN **sub_253AEF6C8()
{
  return &protocol witness table for TranscriptProtoUIType;
}

uint64_t sub_253AEF6D4(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8AD8, MEMORY[0x263F4C680]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEF72C()
{
  return sub_253AF1A80(&qword_269CE20C8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUIType);
}

_UNKNOWN **sub_253AEF774()
{
  return &protocol witness table for TranscriptProtoUILabel;
}

uint64_t sub_253AEF780(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8AE0, MEMORY[0x263F4C6A8]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEF7D8()
{
  return sub_253AF1A80(&qword_269CE20D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUILabel);
}

_UNKNOWN **sub_253AEF820()
{
  return &protocol witness table for TranscriptProtoResponseVisualOptions;
}

uint64_t sub_253AEF82C(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8AE8, MEMORY[0x263F4C610]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEF884()
{
  return sub_253AF1A80(&qword_269CE30B0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseVisualOptions);
}

_UNKNOWN **sub_253AEF8CC()
{
  return &protocol witness table for TranscriptProtoUIConfirmationLabel;
}

uint64_t sub_253AEF8D8(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8AF0, MEMORY[0x263F4C6A0]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEF930()
{
  return sub_253AF1A80(&qword_269CE30E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUIConfirmationLabel);
}

_UNKNOWN **sub_253AEF978()
{
  return &protocol witness table for TranscriptProtoArchiveViewPayload;
}

uint64_t sub_253AEF984(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8AF8, MEMORY[0x263F4C638]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEF9DC()
{
  return sub_253AF1A80(&qword_269CE3100, (void (*)(uint64_t))type metadata accessor for TranscriptProtoArchiveViewPayload);
}

_UNKNOWN **sub_253AEFA24()
{
  return &protocol witness table for TranscriptProtoLiveActivityPayload;
}

uint64_t sub_253AEFA30(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8B00, MEMORY[0x263F4C650]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEFA88()
{
  return sub_253AF1A80(&qword_269CE3118, (void (*)(uint64_t))type metadata accessor for TranscriptProtoLiveActivityPayload);
}

_UNKNOWN **sub_253AEFAD0()
{
  return &protocol witness table for TranscriptProtoPluginSnippetPayload;
}

uint64_t sub_253AEFADC(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8B08, MEMORY[0x263F4C670]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEFB34()
{
  return sub_253AF1A80(&qword_269CE3130, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPluginSnippetPayload);
}

_UNKNOWN **sub_253AEFB7C()
{
  return &protocol witness table for TranscriptProtoControlPayload;
}

uint64_t sub_253AEFB88(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8B10, MEMORY[0x263F4C630]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEFBE0()
{
  return sub_253AF1A80(&qword_269CE3148, (void (*)(uint64_t))type metadata accessor for TranscriptProtoControlPayload);
}

_UNKNOWN **sub_253AEFC28()
{
  return &protocol witness table for TranscriptProtoVisualOutput;
}

uint64_t sub_253AEFC34(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8B18, MEMORY[0x263F4C5B0]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEFC8C()
{
  return sub_253AF1A80(&qword_269CE1FD0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVisualOutput);
}

_UNKNOWN **sub_253AEFCD4()
{
  return &protocol witness table for TranscriptProtoLiveActivityOutputPayload;
}

uint64_t sub_253AEFCE0(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8B20, MEMORY[0x263F4C550]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEFD38()
{
  return sub_253AF1A80(&qword_269CE2F70, (void (*)(uint64_t))type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
}

_UNKNOWN **sub_253AEFD80()
{
  return &protocol witness table for TranscriptProtoInAppResponseOutputPayload;
}

uint64_t sub_253AEFD8C(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8B28, MEMORY[0x263F4C588]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEFDE4()
{
  return sub_253AF1A80(&qword_269CE2F88, (void (*)(uint64_t))type metadata accessor for TranscriptProtoInAppResponseOutputPayload);
}

_UNKNOWN **sub_253AEFE2C()
{
  return &protocol witness table for TranscriptProtoPluginSnippetOutputPayload;
}

uint64_t sub_253AEFE38(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8B30, MEMORY[0x263F4C570]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEFE90()
{
  return sub_253AF1A80(&qword_269CE2FB8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPluginSnippetOutputPayload);
}

_UNKNOWN **sub_253AEFED8()
{
  return &protocol witness table for TranscriptProtoDialogType;
}

uint64_t sub_253AEFEE4(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8B38, MEMORY[0x263F4C600]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEFF3C()
{
  return sub_253AF1A80(&qword_269CE2FD0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDialogType);
}

_UNKNOWN **sub_253AEFF84()
{
  return &protocol witness table for TranscriptProtoASTFlatExpr;
}

uint64_t sub_253AEFF90(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8B40, (void (*)(uint64_t))type metadata accessor for AST.FlatExpr);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AEFFE8()
{
  return sub_253AF1A80(&qword_269CE3490, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatExpr);
}

_UNKNOWN **sub_253AF0030()
{
  return &protocol witness table for TranscriptProtoASTFlatExprUpdateVariant;
}

uint64_t sub_253AF003C(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8B48, (void (*)(uint64_t))type metadata accessor for AST.Update);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AF0094()
{
  return sub_253AF1A80(&qword_269CE22B8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant);
}

_UNKNOWN **sub_253AF00DC()
{
  return &protocol witness table for TranscriptProtoASTPickType;
}

unint64_t sub_253AF00E8(uint64_t a1)
{
  unint64_t result = sub_253AF0110();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AF0110()
{
  unint64_t result = qword_269CE8B50;
  if (!qword_269CE8B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8B50);
  }
  return result;
}

uint64_t sub_253AF015C()
{
  return sub_253AF1A80(&qword_269CE33A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTPickType);
}

_UNKNOWN **sub_253AF01A4()
{
  return &protocol witness table for TranscriptProtoASTFlatValue;
}

uint64_t sub_253AF01B0(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8B58, (void (*)(uint64_t))type metadata accessor for AST.FlatValue);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AF0208()
{
  return sub_253AF1A80(&qword_269CE2240, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatValue);
}

_UNKNOWN **sub_253AF0250()
{
  return &protocol witness table for TranscriptProtoActionParameterValue;
}

uint64_t sub_253AF025C(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8B60, (void (*)(uint64_t))type metadata accessor for Action.ParameterValue);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AF02B4()
{
  return sub_253AF1A80(&qword_269CE1BA8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionParameterValue);
}

_UNKNOWN **sub_253AF02FC()
{
  return &protocol witness table for TranscriptProtoContextRetrieved;
}

unint64_t sub_253AF0308(uint64_t a1)
{
  unint64_t result = sub_253AF0330();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AF0330()
{
  unint64_t result = qword_269CE8B68;
  if (!qword_269CE8B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8B68);
  }
  return result;
}

uint64_t sub_253AF037C()
{
  return sub_253AF1A80(&qword_269CE31C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoContextRetrieved);
}

_UNKNOWN **sub_253AF03C4()
{
  return &protocol witness table for TranscriptProtoRetrievedContextStatement;
}

uint64_t sub_253AF03D0(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8B70, (void (*)(uint64_t))type metadata accessor for RetrievedContextStatement);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AF0428()
{
  return sub_253AF1A80(&qword_269CE2188, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRetrievedContextStatement);
}

_UNKNOWN **sub_253AF0470()
{
  return &protocol witness table for TranscriptProtoDynamicEnumerationEntityStatement;
}

uint64_t sub_253AF047C(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8B78, (void (*)(uint64_t))type metadata accessor for DynamicEnumerationEntityStatement);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AF04D4()
{
  return sub_253AF1A80(&qword_269CE2548, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement);
}

_UNKNOWN **sub_253AF051C()
{
  return &protocol witness table for TranscriptProtoEntitySpanMatchResult;
}

unint64_t sub_253AF0528(uint64_t a1)
{
  unint64_t result = sub_253AF0550();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AF0550()
{
  unint64_t result = qword_269CE8B80;
  if (!qword_269CE8B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8B80);
  }
  return result;
}

uint64_t sub_253AF059C()
{
  return sub_253AF1A80(&qword_269CE37A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoEntitySpanMatchResult);
}

_UNKNOWN **sub_253AF05E4()
{
  return &protocol witness table for TranscriptProtoToolRetrievalResponse;
}

unint64_t sub_253AF05F0(uint64_t a1)
{
  unint64_t result = sub_253AF0618();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AF0618()
{
  unint64_t result = qword_269CE8B88;
  if (!qword_269CE8B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8B88);
  }
  return result;
}

uint64_t sub_253AF0664()
{
  return sub_253AF1A80(&qword_269CE37C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoToolRetrievalResponse);
}

_UNKNOWN **sub_253AF06AC()
{
  return &protocol witness table for TranscriptProtoToolParameterValue;
}

uint64_t sub_253AF06B8(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8B90, (void (*)(uint64_t))type metadata accessor for ToolParameterValue);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AF0710()
{
  return sub_253AF1A80(&qword_269CE3790, (void (*)(uint64_t))type metadata accessor for TranscriptProtoToolParameterValue);
}

_UNKNOWN **sub_253AF0758()
{
  return &protocol witness table for TranscriptProtoExternalAgentTextQuery;
}

uint64_t sub_253AF0764(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8B98, (void (*)(uint64_t))type metadata accessor for ExternalAgentTextQuery);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AF07BC()
{
  return sub_253AF1A80(&qword_269CE39C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentTextQuery);
}

_UNKNOWN **sub_253AF0804()
{
  return &protocol witness table for TranscriptProtoExternalAgentSpeechQuery;
}

uint64_t sub_253AF0810(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8BA0, (void (*)(uint64_t))type metadata accessor for ExternalAgentSpeechQuery);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AF0868()
{
  return sub_253AF1A80(&qword_269CE39F0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
}

_UNKNOWN **sub_253AF08B0()
{
  return &protocol witness table for TranscriptProtoExternalAgentOutcome;
}

uint64_t sub_253AF08BC(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8BA8, (void (*)(uint64_t))type metadata accessor for ExternalAgentOutcome);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AF0914()
{
  return sub_253AF1A80(&qword_269CE29A0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentOutcome);
}

_UNKNOWN **sub_253AF095C()
{
  return &protocol witness table for TranscriptProtoExternalAgentRequestRewriteMetadata;
}

unint64_t sub_253AF0968(uint64_t a1)
{
  unint64_t result = sub_253AF0990();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AF0990()
{
  unint64_t result = qword_269CE8BB0;
  if (!qword_269CE8BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8BB0);
  }
  return result;
}

uint64_t sub_253AF09DC()
{
  return sub_253AF1A80(&qword_269CE2790, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
}

_UNKNOWN **sub_253AF0A24()
{
  return &protocol witness table for TranscriptProtoUndoContext;
}

uint64_t sub_253AF0A30(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8BB8, MEMORY[0x263F4C140]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AF0A88()
{
  return sub_253AF1A80(&qword_269CE2CA8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUndoContext);
}

_UNKNOWN **sub_253AF0AD0()
{
  return &protocol witness table for TranscriptProtoFollowUpAction;
}

uint64_t sub_253AF0ADC(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8BC0, MEMORY[0x263F4C138]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AF0B34()
{
  return sub_253AF1A80(&qword_269CE2CC0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoFollowUpAction);
}

_UNKNOWN **sub_253AF0B7C()
{
  return &protocol witness table for TranscriptProtoFollowUpActionExecutableAction;
}

uint64_t sub_253AF0B88(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8BC8, MEMORY[0x263F4C130]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AF0BE0()
{
  return sub_253AF1A80(&qword_269CE2CD8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoFollowUpActionExecutableAction);
}

_UNKNOWN **sub_253AF0C28()
{
  return &protocol witness table for TranscriptProtoFollowUpActionExecutableActionLinkAction;
}

uint64_t sub_253AF0C34(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8BD0, MEMORY[0x263F4C120]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AF0C8C()
{
  return sub_253AF1A80(&qword_269CE2CF0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction);
}

_UNKNOWN **sub_253AF0CD4()
{
  return &protocol witness table for TranscriptProtoShimParameterResolution;
}

uint64_t sub_253AF0CE0(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8BD8, (void (*)(uint64_t))type metadata accessor for ClientAction.ShimParameterResolution);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AF0D38()
{
  return sub_253AF1A80(&qword_269CE1CD0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoShimParameterResolution);
}

_UNKNOWN **sub_253AF0D80()
{
  return &protocol witness table for TranscriptProtoUnresolvedParameterValue;
}

uint64_t sub_253AF0D8C(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8BE0, (void (*)(uint64_t))type metadata accessor for ClientAction.UnresolvedParameterValue);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AF0DE4()
{
  return sub_253AF1A80(&qword_269CE2AB0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUnresolvedParameterValue);
}

_UNKNOWN **sub_253AF0E2C()
{
  return &protocol witness table for TranscriptProtoValueDisambiguation;
}

uint64_t sub_253AF0E38(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8BE8, MEMORY[0x263F4C9E8]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AF0E90()
{
  return sub_253AF1A80(&qword_269CE2D38, (void (*)(uint64_t))type metadata accessor for TranscriptProtoValueDisambiguation);
}

_UNKNOWN **sub_253AF0ED8()
{
  return &protocol witness table for TranscriptProtoActionFailure;
}

uint64_t sub_253AF0EE4(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8BF0, MEMORY[0x263F4C098]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AF0F3C()
{
  return sub_253AF1A80(&qword_269CE2C48, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionFailure);
}

_UNKNOWN **sub_253AF0F84()
{
  return &protocol witness table for TranscriptProtoSystemPromptResolutionRequirementResolution;
}

unint64_t sub_253AF0F90(uint64_t a1)
{
  unint64_t result = sub_253AF0FB8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AF0FB8()
{
  unint64_t result = qword_269CE8BF8;
  if (!qword_269CE8BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8BF8);
  }
  return result;
}

uint64_t sub_253AF1004()
{
  return sub_253AF1A80(&qword_269CE32A8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
}

_UNKNOWN **sub_253AF104C()
{
  return &protocol witness table for TranscriptProtoSystemPromptResolutionActionCancellation;
}

unint64_t sub_253AF1058(uint64_t a1)
{
  unint64_t result = sub_253AF1080();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AF1080()
{
  unint64_t result = qword_269CE8C00;
  if (!qword_269CE8C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8C00);
  }
  return result;
}

uint64_t sub_253AF10CC()
{
  return sub_253AF1A80(&qword_269CE3290, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation);
}

_UNKNOWN **sub_253AF1114()
{
  return &protocol witness table for TranscriptProtoTypeConversionRequest;
}

uint64_t sub_253AF1120(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8C08, (void (*)(uint64_t))type metadata accessor for TypeConversionRequest);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AF1178()
{
  return sub_253AF1A80(&qword_269CE38A0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTypeConversionRequest);
}

_UNKNOWN **sub_253AF11C0()
{
  return &protocol witness table for TranscriptProtoTypeConversionResult;
}

uint64_t sub_253AF11CC(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8C10, (void (*)(uint64_t))type metadata accessor for TypeConversionResult);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AF1224()
{
  return sub_253AF1A80(&qword_269CE38B8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoTypeConversionResult);
}

_UNKNOWN **sub_253AF126C()
{
  return &protocol witness table for TranscriptProtoQueryDecorationResult;
}

uint64_t sub_253AF1278(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8C18, (void (*)(uint64_t))type metadata accessor for QueryDecorationResult);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AF12D0()
{
  return sub_253AF1A80(&qword_269CE38D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationResult);
}

_UNKNOWN **sub_253AF1318()
{
  return &protocol witness table for TranscriptProtoQueryDecorationPrePlannerResult;
}

uint64_t sub_253AF1324(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8C20, (void (*)(uint64_t))type metadata accessor for QueryDecorationPrePlannerResult);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AF137C()
{
  return sub_253AF1A80(&qword_269CE38E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
}

_UNKNOWN **sub_253AF13C4()
{
  return &protocol witness table for TranscriptProtoQueryDecorationPrePlannerResultPayload;
}

unint64_t sub_253AF13D0(uint64_t a1)
{
  unint64_t result = sub_253AF13F8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_253AF13F8()
{
  unint64_t result = qword_269CE8C28;
  if (!qword_269CE8C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8C28);
  }
  return result;
}

uint64_t sub_253AF1444()
{
  return sub_253AF1A80(&qword_269CE3990, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
}

_UNKNOWN **sub_253AF148C()
{
  return &protocol witness table for TranscriptProtoActionFailureDeveloperDefinedError;
}

uint64_t sub_253AF1498(uint64_t a1)
{
  uint64_t result = sub_253AF1A80(&qword_269CE8C30, MEMORY[0x263F4C088]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253AF14F0()
{
  return sub_253AF1A80(&qword_269CE2C78, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
}

uint64_t dispatch thunk of ConvertibleFromHandwrittenProtocol.init(handwritten:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for HandwrittenConversion()
{
  return &type metadata for HandwrittenConversion;
}

unsigned char *storeEnumTagSinglePayload for HandwrittenConversion.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253AF163CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HandwrittenConversion.Error()
{
  return &type metadata for HandwrittenConversion.Error;
}

uint64_t sub_253AF1674(uint64_t a1)
{
  return a1;
}

uint64_t sub_253AF16C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_253AF1714(uint64_t a1)
{
  return a1;
}

uint64_t sub_253AF175C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_253AF17B8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_253AF1814(uint64_t a1)
{
  return a1;
}

uint64_t sub_253AF1860(uint64_t a1)
{
  return a1;
}

void *sub_253AF188C(void *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  swift_bridgeObjectRetain();
  sub_2539EDEE4(v2, v3, v4);
  return a1;
}

uint64_t *sub_253AF18EC(uint64_t *a1)
{
  return a1;
}

void *sub_253AF1920(void *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  swift_bridgeObjectRelease();
  sub_253961E40(v2, v3, v4);
  return a1;
}

uint64_t sub_253AF1980()
{
  uint64_t v1 = sub_2534D9690();
  v2(v1);
  sub_25346CAF4();
  sub_2534659CC();
  v3();
  return v0;
}

uint64_t sub_253AF19D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_253578A1C();
  v4(v3);
  sub_25346CAF4();
  sub_2534D8E14();
  v5();
  return a2;
}

uint64_t sub_253AF1A28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_253578A1C();
  v4(v3);
  sub_25346CAF4();
  sub_2534B3428();
  v5();
  return a2;
}

uint64_t sub_253AF1A80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

IntelligenceFlowPlannerSupport::TranscriptProtoHandle::Kind __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> TranscriptProtoHandle.Kind.init(handwritten:)(IntelligenceFlowPlannerSupport::ClientAction::PersonQuery::Handle::Kind handwritten)
{
  return ClientAction.PersonQuery.Handle.Kind.init(transcript:)((IntelligenceFlowPlannerSupport::TranscriptProtoHandle::Kind)handwritten);
}

IntelligenceFlowPlannerSupport::PrefixExpression::PrefixOp __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> PrefixExpression.PrefixOp.init(transcript:)(IntelligenceFlowPlannerSupport::TranscriptProtoPrefixExpression_PrefixOp transcript)
{
  return ClientAction.PersonQuery.Handle.Kind.init(transcript:)((IntelligenceFlowPlannerSupport::TranscriptProtoHandle::Kind)transcript);
}

IntelligenceFlowPlannerSupport::InfixExpression::InfixOp __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> InfixExpression.InfixOp.init(transcript:)(IntelligenceFlowPlannerSupport::TranscriptProtoInfixExpression_InfixOp transcript)
{
  return ClientAction.PersonQuery.Handle.Kind.init(transcript:)((IntelligenceFlowPlannerSupport::TranscriptProtoHandle::Kind)transcript);
}

uint64_t TranscriptProtoSafetyModeRelease.init(handwritten:)()
{
  return TranscriptProtoRequestContentStopContent.init(handwritten:)();
}

uint64_t TranscriptProtoSystemPromptResolutionActionCancellation.init(handwritten:)()
{
  return TranscriptProtoRequestContentStopContent.init(handwritten:)();
}

uint64_t sub_253AF1B50(char *a1)
{
  return sub_253AD01F4(a1);
}

void sub_253AF1B80(unsigned char *a1@<X8>)
{
}

uint64_t sub_253AF1B98@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_253ADE330(a1, a2);
}

uint64_t sub_253AF1BB0()
{
  return sub_253AF1980();
}

uint64_t sub_253AF1BC8()
{
  return *(void *)(v0 - 96);
}

uint64_t sub_253AF1BE0@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_253AF1C00@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_253AF1C20@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 72) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_253AF1C40@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_253AF1C6C()
{
  return v0;
}

uint64_t sub_253AF1C88()
{
  return v0;
}

uint64_t sub_253AF1C9C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_253AF1CBC()
{
  return v0;
}

uint64_t sub_253AF1CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return 0;
}

uint64_t sub_253AF1CF4()
{
  return 0;
}

uint64_t sub_253AF1D08()
{
  return sub_253AF1980();
}

uint64_t sub_253AF1D20()
{
  return sub_253AF1980();
}

uint64_t sub_253AF1D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_253AF19D0(a1, v3);
}

uint64_t sub_253AF1D50()
{
  return sub_253B059D0();
}

uint64_t sub_253AF1D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_253AF1A28(a1, v3);
}

uint64_t sub_253AF1D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 160) = (char *)&a9 - v9;
  return 0;
}

uint64_t sub_253AF1D98()
{
  return 0;
}

uint64_t sub_253AF1DA4(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v1);
}

uint64_t sub_253AF1DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_253AF19D0(a1, v3);
}

void sub_253AF1DD8(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 88) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_253AF1DF4()
{
  return type metadata accessor for TranscriptProtoStatementID(0);
}

uint64_t sub_253AF1E1C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 88) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_253AF1E48(uint64_t a1, uint64_t a2)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, a2, 1, v2);
}

uint64_t sub_253AF1E60()
{
  return v0;
}

uint64_t sub_253AF1E74()
{
  return sub_253B09730();
}

uint64_t sub_253AF1E8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_253AF1A28(a1, v3);
}

uint64_t sub_253AF1EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 232) = (char *)&a9 - v9;
  return 0;
}

uint64_t sub_253AF1EBC()
{
  return sub_253B059D0();
}

uint64_t sub_253AF1EE4()
{
  return sub_253B09120();
}

uint64_t sub_253AF1F0C()
{
  return sub_253B059D0();
}

uint64_t sub_253AF1F34()
{
  return sub_253B059B0();
}

uint64_t sub_253AF1F50(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, 0, 1, a1);
  uint64_t v5 = *(void *)(v3 - 128);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v5, 1, 1, v1);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v5 + *(int *)(*(void *)(v3 - 136) + 20), 1, 1, a1);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253AF1FC8@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_253AF1FE8@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_253AF2008()
{
  return sub_253AF1980();
}

uint64_t sub_253AF2020()
{
  return v0;
}

uint64_t sub_253AF202C(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v1);
}

uint64_t sub_253AF2048()
{
  return v0;
}

uint64_t sub_253AF2080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 128) = (char *)&a9 - v9;
  return 0;
}

uint64_t sub_253AF2098()
{
  return 0;
}

uint64_t sub_253AF20A4()
{
  return sub_253B059D0();
}

uint64_t sub_253AF20E8()
{
  return sub_253B059D0();
}

void sub_253AF212C()
{
  *(void *)(v0 + 8 * (v1 >> 6) + 64) |= 1 << v1;
}

uint64_t sub_253AF2150@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 72) = a1;
  return 0;
}

uint64_t sub_253AF215C(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v1);
}

void sub_253AF2178(uint64_t a1@<X8>)
{
  *(void *)(v1 - 104) = a1;
}

uint64_t sub_253AF2184()
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v0 + *(int *)(v1 + 28), 1, 1, v2);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253AF21D4()
{
  return v0;
}

uint64_t sub_253AF21E0()
{
  return v0;
}

uint64_t sub_253AF21EC()
{
  return v0;
}

uint64_t sub_253AF21FC@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 96) = a1;
  return 0;
}

uint64_t sub_253AF2208()
{
  return 0;
}

uint64_t sub_253AF221C()
{
  return *(void *)(v0 - 72);
}

uint64_t sub_253AF2228()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253AF2244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 200) = (char *)&a9 - v9;
  return 0;
}

uint64_t sub_253AF225C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 168) = a1;
  return 0;
}

uint64_t sub_253AF226C()
{
  return 0;
}

uint64_t sub_253AF2278()
{
  return v0;
}

uint64_t sub_253AF2284()
{
  return v0;
}

uint64_t sub_253AF2290()
{
  return 0;
}

uint64_t sub_253AF229C(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, 0, 1, a1);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253AF22F0()
{
  return v0;
}

uint64_t sub_253AF2300()
{
  return v0;
}

uint64_t sub_253AF230C()
{
  return v0;
}

uint64_t sub_253AF231C()
{
  return type metadata accessor for TranscriptProtoStatementID(0);
}

uint64_t sub_253AF2344()
{
  return sub_253B059D0();
}

uint64_t sub_253AF236C()
{
  return sub_253B08E50();
}

uint64_t sub_253AF2394()
{
  return sub_253B08E50();
}

uint64_t sub_253AF23BC()
{
  return sub_253B09120();
}

uint64_t sub_253AF23E4()
{
  return v0;
}

uint64_t sub_253AF2400(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 1, 1, v1);
}

uint64_t sub_253AF241C()
{
  return sub_253B059B0();
}

uint64_t sub_253AF2438()
{
  return 0;
}

uint64_t sub_253AF2448()
{
  return 0;
}

uint64_t sub_253AF245C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_253AF19D0(a1, v3);
}

uint64_t sub_253AF2474()
{
  return sub_253AF1980();
}

uint64_t sub_253AF248C()
{
  return v0;
}

uint64_t sub_253AF24A0(uint64_t a1, uint64_t a2)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, a2, 1, v2);
}

uint64_t sub_253AF24B8(uint64_t a1, uint64_t a2)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, a2, 1, v2);
}

uint64_t sub_253AF24D0(uint64_t a1, uint64_t a2)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, a2, 1, v2);
}

uint64_t sub_253AF24E8()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253AF2500()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

void sub_253AF2518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 216) = (char *)&a9 - v9;
}

uint64_t sub_253AF252C()
{
  return sub_253B09120();
}

uint64_t sub_253AF254C@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_253AF2570()
{
  return v0;
}

uint64_t sub_253AF258C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 104) = a1;
  return 0;
}

uint64_t sub_253AF259C()
{
  return v0;
}

uint64_t sub_253AF25CC(uint64_t a1, uint64_t a2)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, a2, 1, v2);
}

uint64_t sub_253AF25E4()
{
  return v0;
}

uint64_t sub_253AF25F0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 104) = a1;
  return 0;
}

uint64_t sub_253AF25FC()
{
  return sub_253B059B0();
}

uint64_t sub_253AF2618()
{
  return v0;
}

uint64_t sub_253AF2628()
{
  return v0;
}

uint64_t sub_253AF2640()
{
  return sub_253AF1980();
}

uint64_t sub_253AF2670(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_253961BF0(v4, v3, a3);
}

uint64_t sub_253AF2688()
{
  return v0;
}

uint64_t sub_253AF2694()
{
  return v0;
}

void sub_253AF26A0()
{
  sub_25395E074(v0);
}

uint64_t sub_253AF26D0()
{
  return sub_253961F60(v0, v2, v1);
}

uint64_t sub_253AF2720()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

void sub_253AF2748()
{
  sub_25395D974();
}

uint64_t sub_253AF2770()
{
  return v0;
}

uint64_t sub_253AF277C()
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v0 + *(int *)(v1 + 20), 1, 1, v2);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253AF27C0()
{
  return 0;
}

uint64_t sub_253AF27D0()
{
  uint64_t v5 = *(void *)(v3 - 152);
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 8) = v0;
  *(unsigned char *)(v5 + 16) = v2;
  return type metadata accessor for RequestPrescribedPlan(0);
}

uint64_t sub_253AF27F0@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_253AF2804()
{
  return sub_253AF1A28(v0, v1);
}

uint64_t sub_253AF281C()
{
  return v0;
}

uint64_t sub_253AF283C()
{
  return v0;
}

uint64_t sub_253AF2848()
{
  return sub_253AF19D0(v0, v1);
}

uint64_t sub_253AF2860()
{
  return v0;
}

uint64_t sub_253AF2870()
{
  return v0;
}

uint64_t sub_253AF2880()
{
  return 0;
}

uint64_t sub_253AF288C(uint64_t a1)
{
  return v1 + *(int *)(a1 + 20);
}

uint64_t sub_253AF28AC()
{
  return sub_253B09120();
}

void sub_253AF2920()
{
  sub_25395E074(v0);
}

uint64_t sub_253AF294C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
}

uint64_t sub_253AF2978@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 88) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_253B06850();
}

uint64_t sub_253AF29A4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_253B05940();
}

uint64_t sub_253AF2A10()
{
  return v0;
}

uint64_t sub_253AF2A1C()
{
  return sub_253B059B0();
}

uint64_t sub_253AF2A38()
{
  return sub_253B059B0();
}

uint64_t sub_253AF2A54()
{
  return v0;
}

uint64_t sub_253AF2A60()
{
  return v0;
}

uint64_t sub_253AF2A70()
{
  return v0;
}

uint64_t sub_253AF2A98()
{
  return v0;
}

uint64_t sub_253AF2AA4()
{
  return v0;
}

uint64_t sub_253AF2AB0()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

unint64_t sub_253AF2B50()
{
  return sub_253961DC0();
}

uint64_t sub_253AF2B68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + a1);
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  return sub_25396DF48(v4, v5);
}

uint64_t sub_253AF2B90()
{
  return sub_253AF1980();
}

uint64_t sub_253AF2BD0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_253AF2BE8@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 112) = a1;
  return 0;
}

uint64_t sub_253AF2BF4()
{
  return sub_253AF1A28(v0, v1);
}

uint64_t sub_253AF2C0C()
{
  return sub_253AF1980();
}

uint64_t sub_253AF2C24(uint64_t a1)
{
  return v1 + *(int *)(a1 + 20);
}

uint64_t sub_253AF2C3C()
{
  return sub_253AF19D0(v1, v0);
}

uint64_t sub_253AF2C54()
{
  return type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
}

uint64_t sub_253AF2C7C()
{
  return sub_253B08E50();
}

uint64_t sub_253AF2CA4()
{
  return *(void *)v0;
}

uint64_t sub_253AF2CDC()
{
  return sub_253B059D0();
}

uint64_t sub_253AF2D04()
{
  return type metadata accessor for RequestContent.TextContent(0);
}

uint64_t sub_253AF2D2C()
{
  return sub_253B05A00();
}

uint64_t sub_253AF2D54()
{
  return sub_253B05940();
}

uint64_t sub_253AF2DB4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_253AF2DF8()
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v0, 1, 1, v1);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253AF2E38()
{
  return sub_253B09730();
}

uint64_t sub_253AF2E50()
{
  return *(void *)(v0 - 128);
}

uint64_t sub_253AF2E8C()
{
  return type metadata accessor for TranscriptProtoStatementID(0);
}

uint64_t sub_253AF2ED4@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 120) = a1;
  return 0;
}

uint64_t sub_253AF2EE4()
{
  *(void *)(v3 - 112) = v2;
  *(void *)(v3 - 104) = v1;
  *(void *)(v3 - 120) = v0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_253AF2F18()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253AF2F30()
{
  uint64_t v3 = *(void *)(v1 - 176);
  uint64_t v4 = *(void *)(v1 - 208);
  return sub_253961E40(v3, v4, v0);
}

uint64_t sub_253AF2F60()
{
  return 0;
}

void sub_253AF2F70()
{
  *(void *)(v1 - 72) = v0;
}

uint64_t sub_253AF2F7C()
{
  uint64_t v3 = v1[1];
  *uint64_t v0 = *v1;
  v0[1] = v3;
  return type metadata accessor for AST.FlatValue(0);
}

unint64_t sub_253AF2F98()
{
  uint64_t v4 = *(void *)(v1 - 104);
  uint64_t v3 = *(void *)(v1 - 96);
  int v5 = *(_DWORD *)(v1 - 84);
  return sub_25396E204(v3, v0, v4, v5);
}

BOOL sub_253AF2FDC@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void sub_253AF2FF4()
{
  sub_2539E83BC();
}

BOOL sub_253AF3018@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void sub_253AF3040()
{
  sub_2539E6964();
}

void sub_253AF3064()
{
  sub_2539E6A90();
}

uint64_t sub_253AF3088()
{
  return v0;
}

uint64_t sub_253AF30AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_253AF1A28(a1, v3);
}

void sub_253AF30C4(uint64_t a1@<X8>)
{
  *(void *)(a1 - 16) = v1;
}

uint64_t sub_253AF30D4()
{
  return v0;
}

uint64_t sub_253AF30F4@<X0>(uint64_t a1@<X8>)
{
  return a1 + *(void *)(*(void *)(v1 - 256) + 72) * v2;
}

uint64_t sub_253AF3114()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_253AF3144()
{
  return v0;
}

uint64_t sub_253AF3150()
{
  return v0;
}

uint64_t sub_253AF3160()
{
  return type metadata accessor for TranscriptProtoStatementID(0);
}

uint64_t sub_253AF317C()
{
  return sub_253AF19D0(v1, v0);
}

uint64_t sub_253AF3194()
{
  return v0;
}

uint64_t sub_253AF31A4()
{
  return v0;
}

uint64_t sub_253AF31F4()
{
  return v0;
}

uint64_t sub_253AF3204()
{
  return v0;
}

uint64_t sub_253AF3210()
{
  uint64_t v3 = *(void *)(v1 - 88);
  return sub_253AF19D0(v0, v3);
}

uint64_t sub_253AF3228()
{
  return sub_253AF19D0(v1, v0);
}

void sub_253AF325C(uint64_t a1@<X8>)
{
  *(void *)(v1 - 288) = a1;
}

uint64_t sub_253AF3268(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v1);
}

uint64_t sub_253AF3284(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253AF32DC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 136);
  return sub_253AF19D0(a1, v3);
}

uint64_t sub_253AF3318(uint64_t a1)
{
  return v1 + *(int *)(a1 + 20);
}

uint64_t sub_253AF3328()
{
  return 0;
}

uint64_t sub_253AF3338()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253AF3364()
{
  return sub_253AF1980();
}

uint64_t sub_253AF3388()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253AF33AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 136) = (char *)&a9 - v9;
  return sub_253B08F30();
}

uint64_t sub_253AF33D0()
{
  return 0;
}

uint64_t sub_253AF33E8(uint64_t result)
{
  *(void *)(v2 - 88) = v1;
  *(void *)(v2 - 72) = result;
  return result;
}

uint64_t sub_253AF33F4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_253AF3410()
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v0, 1, 1, v1);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253AF3464()
{
  return sub_253B059B0();
}

id sub_253AF3480()
{
  return sub_253AE436C(v0, v1, v2, 0);
}

uint64_t sub_253AF34A4()
{
  return v0;
}

uint64_t sub_253AF34B0()
{
  return v0;
}

uint64_t sub_253AF34BC()
{
  return v0;
}

uint64_t sub_253AF34C8()
{
  return *(void *)(v0 - 232);
}

uint64_t sub_253AF34D4()
{
  return v0;
}

uint64_t sub_253AF3518@<X0>(uint64_t a1@<X8>)
{
  return sub_253AE5AC4(0, (unint64_t)(a1 + 63) >> 6, v1);
}

uint64_t sub_253AF3538@<X0>(uint64_t a1@<X8>)
{
  return sub_253AE5AC4(0, (unint64_t)(a1 + 63) >> 6, v1);
}

uint64_t sub_253AF3558()
{
  *(void *)uint64_t v0 = v4;
  *(void *)(v0 + 8) = v2;
  *(void *)(v0 + 16) = v3;
  *(unsigned char *)(v0 + 24) = v5;
  return v1;
}

uint64_t sub_253AF3578@<X0>(uint64_t a1@<X8>)
{
  return a1 + *(void *)(*(void *)(v1 - 256) + 72) * v2;
}

uint64_t sub_253AF35AC()
{
  return 0;
}

uint64_t sub_253AF35B8()
{
  return v0;
}

uint64_t sub_253AF35CC()
{
  return v0;
}

uint64_t sub_253AF35E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_253AF1A28(a1, v3);
}

uint64_t sub_253AF35F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_253AF19D0(a1, v3);
}

uint64_t sub_253AF3610()
{
  **(unsigned char **)(v1 - 128) = *v0;
  return type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
}

void sub_253AF3630()
{
  *(unsigned char *)uint64_t v0 = v3;
  *(void *)(v0 + 8) = v4;
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = v5;
  *(void *)(v0 + 32) = v2;
}

uint64_t sub_253AF3644()
{
  return 0;
}

uint64_t sub_253AF3658@<X0>(char a1@<W8>)
{
  *uint64_t v1 = a1;
  return 0;
}

void sub_253AF367C()
{
  *(void *)(v1 - 72) = v0;
}

uint64_t sub_253AF36A8()
{
  return 0;
}

uint64_t sub_253AF36BC()
{
  return 0;
}

uint64_t sub_253AF36D0()
{
  return sub_253AF1980();
}

uint64_t sub_253AF36E8()
{
  return swift_bridgeObjectRelease();
}

void sub_253AF3700()
{
  *uint64_t v0 = v4;
  v0[1] = v1;
  v0[2] = v5;
  v0[3] = v2;
  v0[4] = v6;
  v0[5] = v3;
}

uint64_t sub_253AF3714()
{
  *uint64_t v1 = v0;
  return 0;
}

uint64_t sub_253AF372C()
{
  return v0;
}

uint64_t sub_253AF3740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_253AF19D0(a1, v3);
}

uint64_t sub_253AF3758()
{
  return v0;
}

uint64_t sub_253AF378C()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253AF37A4@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 136) = a1;
  return 0;
}

uint64_t sub_253AF37B0()
{
  uint64_t v5 = *(void **)(v3 - 232);
  *uint64_t v5 = v2;
  v5[1] = v0;
  v5[2] = v1;
  return type metadata accessor for Session.Event.Payload(0);
}

uint64_t sub_253AF37D0()
{
  return 0;
}

uint64_t sub_253AF37DC()
{
  uint64_t v2 = *(void **)(v0 - 232);
  *uint64_t v2 = 0;
  v2[1] = 0xE000000000000000;
  return type metadata accessor for Session.Event.Payload(0);
}

uint64_t sub_253AF3810()
{
  return 0;
}

uint64_t sub_253AF381C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 88) = a1;
  return type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
}

uint64_t sub_253AF3850()
{
  return 0;
}

uint64_t sub_253AF3864()
{
  return v0;
}

void sub_253AF3890()
{
  *(void *)(v1 - 304) = v0;
}

uint64_t sub_253AF389C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 144) = a1;
  return 0;
}

void sub_253AF38B0()
{
  uint64_t v2 = (void *)(v1 + *(int *)(v0 + 24));
  *uint64_t v2 = 0;
  v2[1] = 0;
  v2[2] = 0;
}

uint64_t sub_253AF38C4()
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v0, 1, 1, v1);
}

uint64_t sub_253AF38E4()
{
  return sub_253AF19D0(v1, v0);
}

uint64_t sub_253AF38FC()
{
  return sub_253AF1980();
}

unint64_t sub_253AF3940()
{
  return sub_253961DC0();
}

void sub_253AF3958(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  *(void *)(v3 - 352) = v2 + 40;
}

uint64_t sub_253AF396C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  *(void *)(v3 - 360) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_253AF398C()
{
  return sub_253B07400();
}

uint64_t sub_253AF39AC()
{
  return v0;
}

uint64_t sub_253AF39C4()
{
  return v0;
}

uint64_t sub_253AF39D8()
{
  return sub_253AF1980();
}

uint64_t sub_253AF39F0()
{
  return sub_253AF1980();
}

uint64_t sub_253AF3A08()
{
  return v0;
}

uint64_t sub_253AF3A1C()
{
  return v0;
}

uint64_t sub_253AF3A34()
{
  return v0;
}

uint64_t sub_253AF3A40(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, v1, 1, a1);
}

uint64_t sub_253AF3A60(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 0, 1, a1);
}

uint64_t sub_253AF3A80(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
}

uint64_t sub_253AF3AA0(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 0, 1, a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_253AF3AD8()
{
  return sub_253AF19D0(v1, v0);
}

uint64_t sub_253AF3AF0()
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 0, 1, v0);
}

uint64_t sub_253AF3B10()
{
  return v0;
}

uint64_t sub_253AF3B1C()
{
  return sub_253AF19D0(v1, v0);
}

uint64_t sub_253AF3B34(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_253961BF0(v4, v3, a3);
}

uint64_t sub_253AF3B60()
{
  return v0;
}

uint64_t sub_253AF3B6C()
{
  uint64_t v3 = *(void *)(v1 - 72);
  return sub_253AF19D0(v0, v3);
}

uint64_t sub_253AF3B84()
{
  return v0;
}

uint64_t sub_253AF3B90()
{
  return sub_253B095A0();
}

uint64_t sub_253AF3BB0()
{
  return sub_253AF1980();
}

uint64_t sub_253AF3BDC()
{
  *(void *)(v1 - 96) = v0;
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253AF3BFC(uint64_t a1, unsigned char *a2)
{
  *a2 = 2;
  return swift_willThrow();
}

void sub_253AF3C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 96) = (char *)&a9 - v9;
}

void sub_253AF3C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 128) = (char *)&a9 - v9;
}

void sub_253AF3C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 176) = (char *)&a9 - v9;
}

uint64_t sub_253AF3C64()
{
  return sub_253B059D0();
}

void sub_253AF3CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 - 72) = a3;
}

uint64_t sub_253AF3CC0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 128) = a1;
  return 0;
}

uint64_t sub_253AF3CCC(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_253AF3CEC(uint64_t a1)
{
  uint64_t result = a1 - 8;
  *(void *)(v1 - 96) = result;
  return result;
}

uint64_t sub_253AF3D18(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 1, 1, v1);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253AF3D50()
{
  return v0;
}

uint64_t sub_253AF3D5C()
{
  return v0;
}

uint64_t sub_253AF3D68()
{
  return v0;
}

uint64_t ConvertibleFromToolKitProtocol.init(toolkit:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  sub_2534727C4();
  uint64_t v35 = v3;
  MEMORY[0x270FA5388](v4);
  sub_25346CB04();
  uint64_t v37 = v5;
  uint64_t v36 = v6;
  uint64_t v39 = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_253B09E00();
  sub_2534727C4();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v34 - v12;
  sub_2534727C4();
  uint64_t v15 = v14;
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)v34 - v20;
  sub_2534AF234();
  v22();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v23 = *(void (**)(void))(v10 + 8);
    sub_253A8E80C();
    v23();
    sub_253A8E80C();
    v23();
    uint64_t v24 = 1;
    uint64_t v25 = v38;
    uint64_t v26 = v39;
  }
  else
  {
    v34[1] = a1;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v21, v13, AssociatedTypeWitness);
    sub_2534AF234();
    v27();
    uint64_t v28 = v40;
    uint64_t v26 = v39;
    (*(void (**)(char *, uint64_t))(v36 + 16))(v19, v39);
    if (v28)
    {
      sub_253A8E80C();
      v29();
      sub_2534D97B4();
      return v30();
    }
    sub_253A8E80C();
    v32();
    sub_2534D97B4();
    v33();
    uint64_t v25 = v38;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v38, v37, v26);
    uint64_t v24 = 0;
  }
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v25, v24, 1, v26);
}

uint64_t ToolDefinition.init(transcript:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_253462A5C(&qword_26B241270);
  MEMORY[0x270FA5388](v2 - 8);
  sub_25346CB04();
  uint64_t v40 = v3;
  uint64_t v43 = sub_253462A5C(&qword_26B24A348);
  sub_2534727C4();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  sub_25346CC44();
  uint64_t v9 = (uint64_t *)(v8 - v7);
  sub_253B08BC0();
  sub_2534727C4();
  uint64_t v44 = v10;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v12);
  sub_253B08F30();
  sub_2534727C4();
  MEMORY[0x270FA5388](v13);
  sub_25346CC44();
  sub_253B08B30();
  sub_2534727C4();
  uint64_t v41 = v15;
  uint64_t v42 = v14;
  MEMORY[0x270FA5388](v14);
  sub_25346CC44();
  uint64_t v18 = v17 - v16;
  if (qword_269CDB098 != -1) {
    swift_once();
  }
  sub_253B0A710();
  if (v46)
  {
    sub_253B08BA0();
    swift_getKeyPath();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_253B08F20();
    *(void *)(v19 + 24) = v20;
    *uint64_t v9 = v19;
    (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v9, *MEMORY[0x263F7FE98], v43);
    sub_253AF51B4();
    sub_2535735D0();
    sub_253B08DA0();
    swift_release();
    sub_2534D97B4();
    v21();
    uint64_t v22 = *(void (**)(void))(v44 + 8);
    sub_2534D97B4();
    v22();
    ToolDatabase.tools(query:)();
    if (v45)
    {
      swift_release();
      sub_2534659CC();
      v24();
      sub_2534D97B4();
      return ((uint64_t (*)(void))v22)();
    }
    uint64_t v29 = v23;
    sub_2534D97B4();
    v22();
    uint64_t v30 = v40;
    sub_25398122C(v29);
    swift_bridgeObjectRelease();
    uint64_t v31 = v42;
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v40, 1, v42) == 1)
    {
      sub_253AF5204(v40);
      uint64_t v32 = sub_253B08F20();
      uint64_t v34 = v33;
      sub_253961DC0();
      swift_allocError();
      *(void *)uint64_t v35 = v32;
      *(void *)(v35 + 8) = v34;
      *(unsigned char *)(v35 + 16) = 1;
      swift_willThrow();
      swift_release();
      sub_2534659CC();
      return v36();
    }
    sub_2534659CC();
    v39();
    swift_release();
  }
  else
  {
    sub_2534AF234();
    v26();
    sub_253B08B20();
    if (v45)
    {
      uint64_t v27 = sub_253AF58D4();
      return v28(v27);
    }
    uint64_t v37 = sub_253AF58D4();
    v38(v37);
    uint64_t v30 = v18;
    uint64_t v31 = v42;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))(a1, v30, v31);
}

uint64_t AssistantSchemaIdentifier.init(transcript:)(uint64_t a1)
{
  return sub_253AF557C(a1, MEMORY[0x263F80338], MEMORY[0x263F80C20]);
}

uint64_t ToolKitProtoToolDefinition.Version1.init(toolkit:)(uint64_t a1)
{
  return sub_253AF47AC(a1, MEMORY[0x263F7FEC8], MEMORY[0x263F7FED0]);
}

uint64_t ToolKitProtoAssistantSchemaIdentifier.init(toolkit:)(uint64_t a1)
{
  return sub_253AF56C0(a1, MEMORY[0x263F80C18], MEMORY[0x263F80C28]);
}

uint64_t TypeIdentifier.init(transcript:)(uint64_t a1)
{
  return sub_253AF557C(a1, MEMORY[0x263F80300], MEMORY[0x263F80758]);
}

uint64_t TypeDefinition.init(transcript:)(uint64_t a1)
{
  return sub_253AF557C(a1, MEMORY[0x263F802E8], MEMORY[0x263F805D8]);
}

uint64_t TypeInstance.init(transcript:)(uint64_t a1)
{
  return sub_253AF557C(a1, MEMORY[0x263F802D0], MEMORY[0x263F80570]);
}

uint64_t TypedValue.init(transcript:)(uint64_t a1)
{
  return sub_253AF557C(a1, MEMORY[0x263F802B0], MEMORY[0x263F804E0]);
}

uint64_t ToolKitProtoTypeInstance.init(toolkit:)(uint64_t a1)
{
  return sub_253AF47AC(a1, MEMORY[0x263F80568], MEMORY[0x263F80578]);
}

uint64_t ToolKitProtoTypedValue.init(toolkit:)(uint64_t a1)
{
  return sub_253AF47AC(a1, MEMORY[0x263F804D8], MEMORY[0x263F80508]);
}

uint64_t ToolKitProtoTypeIdentifier.init(toolkit:)(uint64_t a1)
{
  return sub_253AF56C0(a1, MEMORY[0x263F80750], MEMORY[0x263F80768]);
}

uint64_t ToolKitProtoTypeDefinition.Version1.init(toolkit:)(uint64_t a1)
{
  return sub_253AF47AC(a1, MEMORY[0x263F805D0], MEMORY[0x263F805E8]);
}

uint64_t sub_253AF47AC(uint64_t a1, void (*a2)(void), void (*a3)(void))
{
  a2();
  a3(0);
  sub_25347B88C();
  sub_2534659CC();
  return v4();
}

uint64_t Dictionary<>.init(toolkit:)()
{
  swift_getAssociatedTypeWitness();
  uint64_t v0 = sub_253B095B0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Array<A>.init<A>(toolkit:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_253462A5C(&qword_26B24A590);
  sub_25394D850();
  if (v3)
  {
    sub_25347B88C();
    sub_2534659CC();
    v7();
  }
  else
  {
    sub_253B09B80();
    swift_getWitnessTable();
    a2 = sub_253B09B90();
    sub_25347B88C();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, a3);
  }
  return a2;
}

uint64_t SecureCodable.init(transcript:)(uint64_t a1, unint64_t a2)
{
  if (qword_269CDB0A8 != -1) {
    swift_once();
  }
  sub_253B09160();
  swift_getWitnessTable();
  sub_253B05000();
  return sub_253487D84(a1, a2);
}

uint64_t SecureCodable.encodeTranscriptBytes()()
{
  if (qword_269CDB0A0 != -1) {
    swift_once();
  }
  swift_getWitnessTable();
  return sub_253B050B0();
}

uint64_t sub_253AF4B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v14 = (char *)&v17 - v13;
  (*(void (**)(char *, uint64_t))(v15 + 16))((char *)&v17 - v13, a1);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a5 + 16))(v14, a3, a5);
  if (v7) {
    *a7 = v7;
  }
  return result;
}

uint64_t Set<>.init(toolkit:)()
{
  swift_getAssociatedTypeWitness();
  sub_253B09B80();
  sub_253462A5C(&qword_26B24A590);
  swift_getWitnessTable();
  sub_253A480D4();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0)
  {
    sub_253B09B80();
    swift_getWitnessTable();
    return sub_253B09C70();
  }
  return result;
}

uint64_t sub_253AF4E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v13 = (char *)&v16 - v12;
  (*(void (**)(char *, uint64_t))(v14 + 16))((char *)&v16 - v12, a1);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a4 + 16))(v13, a3, a4);
  if (v6) {
    *a6 = v6;
  }
  return result;
}

uint64_t sub_253AF4F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v11 = (char *)v14 - v10;
  (*(void (**)(char *, uint64_t))(v12 + 16))((char *)v14 - v10, a1);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(a6 + 16))(v11, a4, a6);
}

uint64_t sub_253AF505C()
{
  sub_253462A5C(&qword_269CE8CD0);
  swift_allocObject();
  uint64_t result = sub_253B0A700();
  qword_269CE8CC0 = result;
  return result;
}

uint64_t static ToolKitConversion.$loadFromToolDatabase.getter()
{
  if (qword_269CDB098 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t static ToolKitConversion.loadFromToolDatabase.getter()
{
  if (qword_269CDB098 != -1) {
    swift_once();
  }
  sub_253B0A710();
  return v1;
}

uint64_t sub_253AF517C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t sub_253AF51B4()
{
  unint64_t result = qword_26B24A350;
  if (!qword_26B24A350)
  {
    sub_253B08BC0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B24A350);
  }
  return result;
}

uint64_t sub_253AF5204(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_26B241270);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_253AF5264(uint64_t a1)
{
  return sub_253AF4F40(a1, v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_253AF5288(uint64_t a1, void *a2)
{
  return sub_253AF4B98(a1, v2[6], v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_253AF52B0(uint64_t a1)
{
  return sub_253AF5308(a1, &qword_269CDB088, &qword_269D7B678, &qword_269D7B688);
}

uint64_t sub_253AF52DC(uint64_t a1)
{
  return sub_253AF5308(a1, &qword_269CDB090, &qword_269D7B680, &qword_269D7B690);
}

uint64_t sub_253AF5308(uint64_t a1, void *a2, void *a3, void *a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  *a4 = *a3;
  return swift_retain();
}

uint64_t sub_253AF5360(uint64_t a1, void *a2)
{
  return sub_253AF4E18(a1, v2[5], v2[2], v2[3], v2[4], a2);
}

BOOL static ToolKitConversion.Error.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ToolKitConversion.Error.hash(into:)()
{
  return sub_253B0A600();
}

uint64_t ToolKitConversion.Error.hashValue.getter()
{
  return sub_253B0A630();
}

uint64_t sub_253AF541C(uint64_t a1)
{
  return TypedValue.init(transcript:)(a1);
}

uint64_t sub_253AF5434(uint64_t a1)
{
  return ToolKitProtoTypedValue.init(toolkit:)(a1);
}

uint64_t sub_253AF544C(uint64_t a1)
{
  return TypeInstance.init(transcript:)(a1);
}

uint64_t sub_253AF5464(uint64_t a1)
{
  return ToolKitProtoTypeInstance.init(toolkit:)(a1);
}

uint64_t sub_253AF547C(uint64_t a1)
{
  return TypeIdentifier.init(transcript:)(a1);
}

uint64_t sub_253AF5494(uint64_t a1)
{
  return ToolKitProtoTypeIdentifier.init(toolkit:)(a1);
}

uint64_t sub_253AF54AC@<X0>(uint64_t a1@<X8>)
{
  return ToolDefinition.init(transcript:)(a1);
}

uint64_t sub_253AF54C4(uint64_t a1)
{
  return ToolKitProtoToolDefinition.Version1.init(toolkit:)(a1);
}

uint64_t sub_253AF54DC(uint64_t a1)
{
  return TypeDefinition.init(transcript:)(a1);
}

uint64_t sub_253AF54F4(uint64_t a1)
{
  return ToolKitProtoTypeDefinition.Version1.init(toolkit:)(a1);
}

uint64_t sub_253AF550C(uint64_t a1)
{
  return AssistantSchemaIdentifier.init(transcript:)(a1);
}

uint64_t sub_253AF5524(uint64_t a1)
{
  return ToolKitProtoAssistantSchemaIdentifier.init(toolkit:)(a1);
}

uint64_t TypeDisplayRepresentation.init(transcript:)(uint64_t a1)
{
  return sub_253AF557C(a1, MEMORY[0x263F80348], MEMORY[0x263F80C60]);
}

uint64_t sub_253AF557C(uint64_t a1, uint64_t (*a2)(void), void (*a3)(char *))
{
  uint64_t v5 = a2(0);
  sub_2534727C4();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v13 - v9;
  sub_2534AF234();
  v11();
  a3(v10);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v5);
}

uint64_t sub_253AF5668(uint64_t a1)
{
  return TypeDisplayRepresentation.init(transcript:)(a1);
}

uint64_t ToolKitProtoTypeDisplayRepresentation.init(toolkit:)(uint64_t a1)
{
  return sub_253AF56C0(a1, MEMORY[0x263F80C58], MEMORY[0x263F80C68]);
}

uint64_t sub_253AF56C0(uint64_t a1, void (*a2)(void), void (*a3)(void))
{
  a2();
  a3(0);
  sub_25347B88C();
  sub_2534659CC();
  return v4();
}

unint64_t sub_253AF5734()
{
  unint64_t result = qword_269CE8CC8;
  if (!qword_269CE8CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8CC8);
  }
  return result;
}

uint64_t sub_253AF5780(uint64_t a1)
{
  return ToolKitProtoTypeDisplayRepresentation.init(toolkit:)(a1);
}

uint64_t dispatch thunk of ConvertibleFromToolKitProtocol.init(toolkit:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for ToolKitConversion()
{
  return &type metadata for ToolKitConversion;
}

unsigned char *storeEnumTagSinglePayload for ToolKitConversion.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253AF589CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ToolKitConversion.Error()
{
  return &type metadata for ToolKitConversion.Error;
}

uint64_t sub_253AF58D4()
{
  return v0;
}

uint64_t AsyncFIFOQueue.perform<A>(_:)()
{
  sub_253477168();
  v1[5] = v2;
  v1[6] = v0;
  v1[3] = v3;
  v1[4] = v4;
  v1[2] = v5;
  sub_253B07040();
  v1[7] = sub_253AF5BE0();
  uint64_t v7 = sub_253B09BA0();
  v1[8] = v7;
  v1[9] = v6;
  return MEMORY[0x270FA2498](sub_253AF597C, v7, v6);
}

uint64_t sub_253AF597C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 80) = v4;
  long long v5 = *(_OWORD *)(v0 + 24);
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v1;
  *(_OWORD *)(v4 + 32) = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_253AF5A80;
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v8, v1, v2, 0x286D726F66726570, 0xEB00000000293A5FLL, sub_253AF5DAC, v4, v7);
}

uint64_t sub_253AF5A80()
{
  sub_253477168();
  sub_253477088();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253477158();
  *long long v5 = v4;
  v3[12] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v6 = v3[8];
    uint64_t v7 = v3[9];
    return MEMORY[0x270FA2498](sub_253AF5B84, v6, v7);
  }
  else
  {
    swift_task_dealloc();
    sub_2534771C0();
    return v8();
  }
}

uint64_t sub_253AF5B84()
{
  sub_253477168();
  swift_task_dealloc();
  sub_2534771C0();
  return v0();
}

unint64_t sub_253AF5BE0()
{
  unint64_t result = qword_269CDED78;
  if (!qword_269CDED78)
  {
    sub_253B07040();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CDED78);
  }
  return result;
}

uint64_t sub_253AF5C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_25347907C(&qword_26B24A590);
  uint64_t v9 = sub_253B09BD0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v16 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - v11, a1, v9);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = (char *)swift_allocObject();
  *((void *)v14 + 2) = a5;
  *((void *)v14 + 3) = a3;
  *((void *)v14 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v14[v13], v12, v9);
  swift_retain();
  sub_253B07020();
  return swift_release();
}

uint64_t sub_253AF5DAC(uint64_t a1)
{
  return sub_253AF5C30(a1, v1[3], v1[4], v1[5], v1[2]);
}

uint64_t sub_253AF5DB8(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a3;
  v4[4] = a4;
  v4[5] = *(void *)(a4 - 8);
  v4[6] = swift_task_alloc();
  uint64_t v6 = swift_task_alloc();
  v4[7] = v6;
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)a1 + *a1);
  uint64_t v7 = (void *)swift_task_alloc();
  v4[8] = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_253AF5F00;
  return v9(v6);
}

uint64_t sub_253AF5F00()
{
  sub_253477168();
  sub_253477088();
  uint64_t v2 = *v1;
  sub_253477158();
  *uint64_t v3 = v2;
  *(void *)(v4 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    long long v5 = sub_253AF60CC;
  }
  else {
    long long v5 = sub_253AF5FE4;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_253AF5FE4()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 16))(v0[6], v1, v2);
  sub_25347907C(&qword_26B24A590);
  sub_253B09BD0();
  sub_253B09BC0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  return v4();
}

uint64_t sub_253AF60CC()
{
  *(void *)(v0 + 16) = *(void *)(v0 + 72);
  sub_25347907C(&qword_26B24A590);
  sub_253B09BD0();
  sub_253B09BB0();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  return v1();
}

uint64_t sub_253AF6178()
{
  sub_25347907C(&qword_26B24A590);
  uint64_t v1 = sub_253B09BD0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_253AF6264()
{
  uint64_t v2 = v0[2];
  sub_25347907C(&qword_26B24A590);
  uint64_t v3 = *(void *)(sub_253B09BD0() - 8);
  uint64_t v4 = (int *)v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = (uint64_t)v0 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_253476FC0;
  return sub_253AF5DB8(v4, v5, v6, v2);
}

uint64_t CNContact.toHandles.getter()
{
  uint64_t v3 = v0;
  unint64_t v4 = MEMORY[0x263F8EE78];
  uint64_t v49 = MEMORY[0x263F8EE78];
  id v5 = objc_msgSend(v0, sel_phoneNumbers);
  uint64_t v6 = sub_253462A5C((uint64_t *)&unk_269CE8CF0);
  unint64_t v7 = sub_253B09A60();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_253B0A210();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    unint64_t v27 = MEMORY[0x263F8EE78];
    goto LABEL_15;
  }
  uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v8) {
    goto LABEL_14;
  }
LABEL_3:
  unint64_t v47 = v4;
  uint64_t result = sub_253B0A0F0();
  if (v8 < 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v45 = v6;
  uint64_t v46 = v3;
  uint64_t v10 = 0;
  do
  {
    if ((v7 & 0xC000000000000001) != 0) {
      id v11 = (id)MEMORY[0x25A269060](v10, v7);
    }
    else {
      id v11 = *(id *)(v7 + 8 * v10 + 32);
    }
    uint64_t v12 = v11;
    if (objc_msgSend(v11, sel_label, v45, v46))
    {
      sub_253B096E0();
      sub_253AF804C();
      id v13 = objc_msgSend(v12, sel_value);
      id v14 = objc_msgSend(v13, sel_stringValue);

      uint64_t v15 = sub_253B096E0();
      uint64_t v17 = v16;

      uint64_t v18 = (void *)sub_253B096D0();
      swift_bridgeObjectRelease();
      id v19 = objc_allocWithZone(MEMORY[0x263F0FD20]);
      id v20 = sub_253AF7AC8(v15, v17, 2, v18);
    }
    else
    {
      id v21 = objc_msgSend(v12, sel_value);
      id v22 = objc_msgSend(v21, sel_stringValue);

      uint64_t v23 = sub_253B096E0();
      uint64_t v25 = v24;

      id v26 = objc_allocWithZone(MEMORY[0x263F0FD20]);
      id v20 = sub_253473FAC(v23, v25, 2);
    }
    uint64_t v1 = (uint64_t)v20;

    ++v10;
    sub_253B0A0C0();
    sub_253B0A100();
    sub_253B0A110();
    sub_253B0A0D0();
  }
  while (v8 != v10);
  unint64_t v27 = v47;
  swift_bridgeObjectRelease();
  unint64_t v4 = MEMORY[0x263F8EE78];
  uint64_t v3 = v46;
LABEL_15:
  sub_253478C10(v27);
  id v28 = objc_msgSend(v3, sel_emailAddresses);
  unint64_t v29 = sub_253B09A60();

  if (!(v29 >> 62))
  {
    uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v30) {
      goto LABEL_17;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    unint64_t v44 = MEMORY[0x263F8EE78];
LABEL_29:
    sub_253478C10(v44);
    return v49;
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_253B0A210();
  swift_bridgeObjectRelease();
  if (!v30) {
    goto LABEL_28;
  }
LABEL_17:
  unint64_t v48 = v4;
  uint64_t result = sub_253B0A0F0();
  if ((v30 & 0x8000000000000000) == 0)
  {
    uint64_t v31 = 0;
    do
    {
      if ((v29 & 0xC000000000000001) != 0) {
        id v32 = (id)MEMORY[0x25A269060](v31, v29);
      }
      else {
        id v32 = *(id *)(v29 + 8 * v31 + 32);
      }
      uint64_t v33 = v32;
      id v34 = objc_msgSend(v32, sel_label);
      if (v34)
      {
        uint64_t v35 = v34;
        sub_253B096E0();

        id v36 = objc_msgSend(v33, sel_value);
        sub_253B096E0();
        sub_253AF804C();
        uint64_t v37 = (void *)sub_253B096D0();
        swift_bridgeObjectRelease();
        id v38 = objc_allocWithZone(MEMORY[0x263F0FD20]);
        sub_253AF7AC8(v1, v2, 1, v37);
      }
      else
      {
        id v39 = objc_msgSend(v33, sel_value);
        uint64_t v40 = sub_253B096E0();
        uint64_t v42 = v41;

        id v43 = objc_allocWithZone(MEMORY[0x263F0FD20]);
        sub_253473FAC(v40, v42, 1);
      }

      ++v31;
      sub_253B0A0C0();
      sub_253B0A100();
      sub_253B0A110();
      sub_253B0A0D0();
    }
    while (v30 != v31);
    unint64_t v44 = v48;
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t CNContact.toNameComponents.getter()
{
  uint64_t v2 = sub_253462A5C(&qword_269CDB520);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  id v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)&v22 - v6;
  uint64_t v8 = sub_253B052B0();
  sub_253465998();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  sub_253465A3C();
  sub_253B052A0();
  id v12 = objc_msgSend(v0, sel_givenName);
  sub_253B096E0();
  sub_253AF804C();
  sub_253AF803C();
  sub_253B05210();
  id v13 = objc_msgSend(v0, sel_familyName);
  sub_253B096E0();
  sub_253AF804C();
  sub_253AF803C();
  sub_253B05220();
  id v14 = objc_msgSend(v0, sel_nickname);
  sub_253B096E0();
  sub_253AF804C();
  sub_253AF803C();
  sub_253B05290();
  id v15 = objc_msgSend(v0, sel_namePrefix);
  sub_253B096E0();
  sub_253AF804C();
  sub_253AF803C();
  sub_253B05250();
  id v16 = objc_msgSend(v0, sel_nameSuffix);
  sub_253B096E0();
  sub_253AF804C();
  sub_253AF803C();
  sub_253B05260();
  id v17 = objc_msgSend(v0, sel_middleName);
  sub_253B096E0();
  sub_253AF804C();
  sub_253AF803C();
  sub_253B05230();
  sub_253B052A0();
  id v18 = objc_msgSend(v0, sel_phoneticGivenName);
  sub_253B096E0();
  sub_253AF804C();
  sub_253B05210();
  id v19 = objc_msgSend(v0, sel_phoneticFamilyName);
  sub_253B096E0();
  sub_253AF804C();
  sub_253B05220();
  id v20 = objc_msgSend(v0, sel_phoneticMiddleName);
  sub_253B096E0();

  sub_253B05230();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v5, v1, v8);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v5, 0, 1, v8);
  sub_253B05240();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v8);
  sub_253B05280();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v1, v8);
}

id CNContact.toImage.getter()
{
  uint64_t v1 = sub_253AF7CD0(v0);
  if (v2 >> 60 == 15) {
    return 0;
  }
  uint64_t v4 = v1;
  unint64_t v5 = v2;
  sub_253AF7D34();
  return sub_253AF6BDC(v4, v5);
}

id sub_253AF6BDC(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = (void *)sub_253B05430();
  id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_imageWithImageData_, v4);
  sub_253487D84(a1, a2);

  return v5;
}

uint64_t CNContact.toINPerson.getter()
{
  uint64_t v2 = sub_253462A5C(&qword_269CDB520);
  MEMORY[0x270FA5388](v2 - 8);
  sub_253465A3C();
  uint64_t v29 = sub_253B052B0();
  sub_253465998();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x263F8EE78];
  unint64_t v8 = CNContact.toHandles.getter();
  uint64_t v30 = v7;
  CNContact.toNameComponents.getter();
  id v28 = v0;
  uint64_t result = (uint64_t)CNContact.toImage.getter();
  uint64_t v10 = (void *)result;
  if (!(v8 >> 62))
  {
    uint64_t v11 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
LABEL_14:

    (*(void (**)(char *, uint64_t))(v4 + 8))(v30, v29);
    return v31;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_253B0A210();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v11) {
    goto LABEL_13;
  }
LABEL_3:
  if (v11 >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v25 = v4;
    unint64_t v26 = v8 & 0xC000000000000001;
    id v13 = (void (**)(uint64_t, char *, uint64_t))(v4 + 16);
    unint64_t v27 = v8;
    do
    {
      if (v26) {
        id v14 = (id)MEMORY[0x25A269060](v12, v8);
      }
      else {
        id v14 = *(id *)(v8 + 8 * v12 + 32);
      }
      id v15 = v14;
      uint64_t v16 = v29;
      (*v13)(v1, v30, v29);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 0, 1, v16);
      id v17 = v15;
      id v18 = v10;
      id v19 = objc_msgSend(v28, sel_identifier);
      uint64_t v20 = sub_253B096E0();
      uint64_t v22 = v21;

      id v23 = objc_allocWithZone(MEMORY[0x263F0FD18]);
      sub_253AF7B4C(v17, v1, 0, 0, v10, v20, v22, 0, 0);
      MEMORY[0x25A268A40]();
      if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_253B09AD0();
      }
      ++v12;
      sub_253B09B30();
      sub_253B09AA0();

      unint64_t v8 = v27;
    }
    while (v11 != v12);
    swift_bridgeObjectRelease();
    uint64_t v10 = v18;
    uint64_t v4 = v25;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

unint64_t static ContactHelper.fetchContactWithIdentifiers(identifiers:)(uint64_t a1)
{
  uint64_t v66 = *MEMORY[0x263EF8340];
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEA58]), sel_init);
  uint64_t v65 = MEMORY[0x263F8EE78];
  sub_253462A5C(&qword_269CDB5A8);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_253B6DEB0;
  uint64_t v4 = (void *)*MEMORY[0x263EFDFE0];
  uint64_t v5 = (void *)*MEMORY[0x263EFE040];
  uint64_t v6 = (void **)MEMORY[0x263EFDFC8];
  *(void *)(v3 + 32) = *MEMORY[0x263EFDFE0];
  *(void *)(v3 + 40) = v5;
  unint64_t v7 = *v6;
  unint64_t v8 = (void *)*MEMORY[0x263EFE038];
  *(void *)(v3 + 48) = *v6;
  *(void *)(v3 + 56) = v8;
  uint64_t v9 = (void *)*MEMORY[0x263EFDFB8];
  uint64_t v10 = (void *)*MEMORY[0x263EFE048];
  *(void *)(v3 + 64) = *MEMORY[0x263EFDFB8];
  *(void *)(v3 + 72) = v10;
  uint64_t v55 = v10;
  uint64_t v11 = (void **)MEMORY[0x263EFE090];
  uint64_t v56 = (void *)*MEMORY[0x263EFE050];
  uint64_t v57 = (void *)*MEMORY[0x263EFE088];
  *(void *)(v3 + 80) = *MEMORY[0x263EFE050];
  *(void *)(v3 + 88) = v57;
  uint64_t v58 = *v11;
  uint64_t v59 = (void *)*MEMORY[0x263EFE080];
  *(void *)(v3 + 96) = *v11;
  *(void *)(v3 + 104) = v59;
  uint64_t v60 = (void *)*MEMORY[0x263EFE070];
  uint64_t v61 = (void *)*MEMORY[0x263EFDF80];
  *(void *)(v3 + 112) = *MEMORY[0x263EFE070];
  *(void *)(v3 + 120) = v61;
  uint64_t v62 = (void *)*MEMORY[0x263EFE0F8];
  uint64_t v63 = (void *)*MEMORY[0x263EFDFF8];
  *(void *)(v3 + 128) = *MEMORY[0x263EFE0F8];
  *(void *)(v3 + 136) = v63;
  unint64_t v64 = v3;
  sub_253B09AA0();
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    id v13 = v4;
    id v14 = v5;
    id v15 = v7;
    id v16 = v8;
    id v17 = v9;
    id v18 = v55;
    id v19 = v56;
    id v20 = v57;
    id v21 = v58;
    id v22 = v59;
    id v23 = v60;
    id v24 = v61;
    id v25 = v62;
    id v26 = v63;
    swift_bridgeObjectRetain();
    uint64_t v27 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      id v28 = (void *)sub_253B096D0();
      swift_bridgeObjectRelease();
      sub_253462A5C(&qword_269CE8D70);
      uint64_t v29 = (void *)sub_253B09A50();
      unint64_t v64 = 0;
      id v30 = objc_msgSend(v2, sel_unifiedContactWithIdentifier_keysToFetch_error_, v28, v29, &v64);

      if (v30)
      {
        id v31 = (id)v64;
      }
      else
      {
        id v32 = (id)v64;
        uint64_t v33 = (void *)sub_253B052D0();

        swift_willThrow();
      }
      MEMORY[0x25A268A40](v31);
      if (*(void *)(v65 + 16) >= *(void *)(v65 + 24) >> 1) {
        sub_253B09AD0();
      }
      v27 += 16;
      sub_253B09B30();
      sub_253B09AA0();
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v34 = v65;
  }
  else
  {
    id v35 = v4;
    id v36 = v5;
    id v37 = v7;
    id v38 = v8;
    id v39 = v9;
    id v40 = v55;
    id v41 = v56;
    id v42 = v57;
    id v43 = v58;
    id v44 = v59;
    id v45 = v60;
    id v46 = v61;
    id v47 = v62;
    id v48 = v63;
    swift_bridgeObjectRelease();
    uint64_t v34 = MEMORY[0x263F8EE78];
  }
  unint64_t v64 = MEMORY[0x263F8EE78];
  uint64_t v49 = *(void *)(v34 + 16);
  if (v49)
  {
    swift_bridgeObjectRetain_n();
    for (uint64_t i = 0; i != v49; ++i)
    {
      uint64_t v51 = *(void **)(v34 + 8 * i + 32);
      if (v51)
      {
        id v52 = v51;
        MEMORY[0x25A268A40]();
        if (*(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_253B09AD0();
        }
        sub_253B09B30();
        sub_253B09AA0();
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v53 = v64;
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v53 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v53;
}

const void *static ContactHelper.getContactIdentifiers(matches:)(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x263F8EE88];
  uint64_t v9 = MEMORY[0x263F8EE88];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v4 = *(void *)(sub_253B07B60() - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_253AF7498((uint64_t)&v9);
      v5 += v6;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    uint64_t v1 = v9;
  }
  unint64_t v7 = sub_25350BF80(v1);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_253AF7498(uint64_t a1)
{
  uint64_t v49 = a1;
  uint64_t v52 = sub_253B07770();
  uint64_t v50 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v2 = (char *)&v44 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_253B090B0();
  uint64_t v47 = *(void *)(v3 - 8);
  uint64_t v48 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_253B09080();
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v46 = v6;
  MEMORY[0x270FA5388](v6);
  id v44 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253462A5C(&qword_269CDB3F8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_253B09120();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  id v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  id v17 = (char *)&v44 - v16;
  sub_253B07B40();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11) == 1)
  {
    sub_253AF7FD8((uint64_t)v10);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    if ((*(unsigned int (**)(char *, uint64_t))(v12 + 88))(v15, v11) == *MEMORY[0x263F804E8])
    {
      (*(void (**)(char *, uint64_t))(v12 + 96))(v15, v11);
      uint64_t v18 = swift_projectBox();
      uint64_t v20 = v47;
      uint64_t v19 = v48;
      (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v5, v18, v48);
      if ((*(unsigned int (**)(char *, uint64_t))(v20 + 88))(v5, v19) == *MEMORY[0x263F80480])
      {
        (*(void (**)(char *, uint64_t))(v20 + 96))(v5, v19);
        id v21 = v44;
        uint64_t v22 = v45;
        id v23 = v5;
        uint64_t v24 = v46;
        (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v44, v23, v46);
        swift_release();
        id v25 = (void *)sub_253B09070();
        uint64_t v26 = sub_253AF7D74(v25);
        if (v27)
        {
          sub_2539E09A0((uint64_t)v51, v26, v27);
          swift_bridgeObjectRelease();
        }
        (*(void (**)(char *, uint64_t))(v22 + 8))(v21, v24);
        (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
        (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v19);
        swift_release();
      }
    }
    else
    {
      id v28 = *(void (**)(char *, uint64_t))(v12 + 8);
      v28(v17, v11);
      v28(v15, v11);
    }
  }
  uint64_t v29 = v52;
  uint64_t v30 = sub_253B07B50();
  uint64_t v31 = *(void *)(v30 + 16);
  if (!v31) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v32 = v50 + 16;
  uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v50 + 16);
  unint64_t v34 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  uint64_t v50 = v30;
  unint64_t v35 = v30 + v34;
  id v36 = (void (**)(char *, uint64_t))(v32 - 8);
  uint64_t v37 = *(void *)(v32 + 56);
  while (1)
  {
    v33(v2, v35, v29);
    if (sub_253B07730() == 0x73746361746E6F43 && v38 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    char v40 = sub_253B0A4C0();
    swift_bridgeObjectRelease();
    if (v40) {
      break;
    }
    uint64_t v29 = v52;
    (*v36)(v2, v52);
    v35 += v37;
    if (!--v31) {
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v29 = v52;
LABEL_22:
  uint64_t v42 = sub_253B07750();
  sub_2539E09A0((uint64_t)v51, v42, v43);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))*v36)(v2, v29);
}

id sub_253AF7AC8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  if (a2)
  {
    uint64_t v8 = (void *)sub_253B096D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = 0;
  }
  id v9 = objc_msgSend(v5, sel_initWithValue_type_label_, v8, a3, a4);

  return v9;
}

id sub_253AF7B4C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = v9;
  uint64_t v16 = sub_253B052B0();
  id v17 = 0;
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v16) != 1)
  {
    id v17 = (void *)sub_253B05270();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
  if (a4)
  {
    uint64_t v18 = (void *)sub_253B096D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = 0;
  }
  if (!a7)
  {
    uint64_t v19 = 0;
    if (a9) {
      goto LABEL_8;
    }
LABEL_10:
    uint64_t v20 = 0;
    goto LABEL_11;
  }
  uint64_t v19 = (void *)sub_253B096D0();
  swift_bridgeObjectRelease();
  if (!a9) {
    goto LABEL_10;
  }
LABEL_8:
  uint64_t v20 = (void *)sub_253B096D0();
  swift_bridgeObjectRelease();
LABEL_11:
  id v21 = objc_msgSend(v10, sel_initWithPersonHandle_nameComponents_displayName_image_contactIdentifier_customIdentifier_, a1, v17, v18, a5, v19, v20);

  return v21;
}

uint64_t sub_253AF7CD0(void *a1)
{
  id v1 = objc_msgSend(a1, sel_imageData);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_253B05450();

  return v3;
}

unint64_t sub_253AF7D34()
{
  unint64_t result = qword_269CE8D00;
  if (!qword_269CE8D00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269CE8D00);
  }
  return result;
}

uint64_t sub_253AF7D74(void *a1)
{
  id v2 = objc_msgSend(a1, sel_contactIdentifier);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_253B096E0();

  return v3;
}

uint64_t (*sub_253AF7DE4())()
{
  id v1 = sub_253AF8064();
  id v2 = (void *)sub_253AF8084((uint64_t)v1);
  *(void *)(v0 + 32) = sub_253AF7EC8(v2, v3, v4);
  return sub_253AF7E30;
}

uint64_t (*sub_253AF7E34())()
{
  id v1 = sub_253AF8064();
  id v2 = (void *)sub_253AF8084((uint64_t)v1);
  *(void *)(v0 + 32) = sub_253AF7F48(v2, v3, v4);
  return sub_253AF7E30;
}

void sub_253AF7E80(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_253AF7EC8(void *a1, uint64_t a2, uint64_t a3))()
{
  unint64_t v6 = a3 & 0xC000000000000001;
  sub_2534741E8(a2, (a3 & 0xC000000000000001) == 0, a3);
  if (v6) {
    id v7 = (id)MEMORY[0x25A269060](a2, a3);
  }
  else {
    id v7 = *(id *)(a3 + 8 * a2 + 32);
  }
  *a1 = v7;
  return j__s30IntelligenceFlowPlannerSupport13FailedPayloadVwxx;
}

void (*sub_253AF7F48(void *a1, uint64_t a2, uint64_t a3))(id *a1)
{
  unint64_t v6 = a3 & 0xC000000000000001;
  sub_2534741E8(a2, (a3 & 0xC000000000000001) == 0, a3);
  if (v6) {
    id v7 = (id)MEMORY[0x25A269060](a2, a3);
  }
  else {
    id v7 = *(id *)(a3 + 8 * a2 + 32);
  }
  *a1 = v7;
  return destroy for FailedPayload;
}

ValueMetadata *type metadata accessor for ContactHelper()
{
  return &type metadata for ContactHelper;
}

uint64_t sub_253AF7FD8(uint64_t a1)
{
  uint64_t v2 = sub_253462A5C(&qword_269CDB3F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_253AF803C()
{
  return v0;
}

void sub_253AF804C()
{
}

void *sub_253AF8064()
{
  return malloc(0x28uLL);
}

uint64_t sub_253AF8084(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Encodable.ifps_jsonString()()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_253B09720();
  MEMORY[0x270FA5388](v3 - 8);
  sub_25346CC44();
  uint64_t v6 = v5 - v4;
  sub_253B050E0();
  swift_allocObject();
  sub_253B050D0();
  uint64_t v7 = sub_253B050B0();
  unint64_t v9 = v8;
  swift_release();
  if (!v1)
  {
    sub_253B09710();
    uint64_t v10 = sub_253B09700();
    if (v11)
    {
      uint64_t v6 = v10;
      uint64_t v2 = v11;
    }
    else
    {
      sub_25352634C();
      swift_allocError();
      *(void *)uint64_t v14 = 0xD00000000000007FLL;
      *(void *)(v14 + 8) = 0x8000000253B0CA60;
      *(_OWORD *)(v14 + 16) = xmmword_253B33720;
      *(void *)(v14 + 32) = 0x8000000253B0CAE0;
      swift_willThrow();
    }
    sub_253487D84(v7, v9);
  }
  uint64_t v12 = v6;
  uint64_t v13 = v2;
  result._object = v13;
  result._countAndFlagsBits = v12;
  return result;
}

uint64_t sub_253AF8220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v27 = sub_253B05070();
  sub_2534727C4();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  sub_25346CC44();
  uint64_t v9 = v8 - v7;
  uint64_t v25 = sub_253B05050();
  sub_2534727C4();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  sub_25346CC44();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_253B05090();
  sub_2534727C4();
  uint64_t v18 = v17;
  MEMORY[0x270FA5388](v19);
  sub_25346CC44();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = sub_253B050C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v22, a1, v16);
  swift_retain();
  sub_253B050A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v15, a2, v25);
  sub_253B05060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v9, a3, v27);
  sub_253B05080();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a3, v27);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v25);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a1, v16);
  return v23;
}

uint64_t sub_253AF843C(uint64_t a1, void *a2)
{
  uint64_t v35 = a1;
  id v36 = a2;
  uint64_t v2 = sub_253B089F0();
  _DWORD v30[2] = *(void *)(v2 - 8);
  v30[3] = v2;
  MEMORY[0x270FA5388](v2);
  v30[1] = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_253462A5C(&qword_269CE8490);
  MEMORY[0x270FA5388](v4 - 8);
  char v40 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_253B05650();
  uint64_t v33 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  unint64_t v34 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_253B054E0();
  uint64_t v7 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v37 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_253B054C0();
  uint64_t v9 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_253B054A0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_253B054B0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_253B054F0();
  uint64_t v31 = *(void *)(v20 - 8);
  uint64_t v32 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v16;
  uint64_t v24 = (uint64_t)v40;
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x263F072A0], v23);
  uint64_t v25 = v39;
  uint64_t v26 = v12;
  uint64_t v27 = v37;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F07288], v26);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F072B8], v38);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v27, *MEMORY[0x263F072C8], v41);
  sub_253B05640();
  uint64_t result = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v24, 1, v25);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v34, v24, v25);
    sub_253B054D0();
    sub_253AF8F74();
    uint64_t v29 = v32;
    sub_253B05530();
    sub_253472068(v36, v36[3]);
    sub_253B0A670();
    sub_253471F14((uint64_t)v42, v42[3]);
    sub_253B0A4E0();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v22, v29);
    swift_bridgeObjectRelease();
    return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v42);
  }
  return result;
}

uint64_t sub_253AF8B54()
{
  uint64_t v0 = sub_253B05070();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_253B05050();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_253B05090();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_253B050E0();
  *uint64_t v10 = sub_253AF843C;
  v10[1] = 0;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F06190], v7);
  sub_253B05040();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F06150], v0);
  uint64_t result = sub_253AF8220((uint64_t)v10, (uint64_t)v6, (uint64_t)v3);
  qword_26B24A640 = result;
  return result;
}

Swift::String __swiftcall Encodable.ifps_jsonPrettyPrinted()()
{
  uint64_t v0 = sub_253B09720();
  MEMORY[0x270FA5388](v0 - 8);
  sub_25346CC44();
  if (qword_26B248C50 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_253B050B0();
  unint64_t v3 = v2;
  sub_253B09710();
  uint64_t v4 = sub_253B09700();
  if (v5)
  {
    uint64_t v6 = v4;
    unint64_t v7 = v5;
    sub_253487D84(v1, v3);
  }
  else
  {
    sub_253487D84(v1, v3);
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  uint64_t v8 = v6;
  uint64_t v9 = (void *)v7;
  result._object = v9;
  result._countAndFlagsBits = v8;
  return result;
}

uint64_t Encodable.ifps_recode<A>()()
{
  sub_253B050E0();
  swift_allocObject();
  sub_253B050D0();
  uint64_t v1 = sub_253B050B0();
  unint64_t v3 = v2;
  uint64_t result = swift_release();
  if (!v0)
  {
    sub_253B05020();
    swift_allocObject();
    sub_253B05010();
    sub_253B05000();
    swift_release();
    return sub_253487D84(v1, v3);
  }
  return result;
}

unint64_t sub_253AF8F74()
{
  unint64_t result = qword_269CE8D78;
  if (!qword_269CE8D78)
  {
    sub_253B054F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8D78);
  }
  return result;
}

uint64_t sub_253AF8FC4(void *a1)
{
  sub_253472068(a1, a1[3]);
  sub_253B0A670();
  type metadata accessor for TranscriptProtoTranscript(0);
  sub_253AF9658(&qword_269CE26C8);
  uint64_t v2 = sub_253B073D0();
  if (!v1)
  {
    uint64_t v4 = v2;
    unint64_t v5 = v3;
    sub_253471F14((uint64_t)v7, v8);
    sub_253487D38();
    sub_253B0A4F0();
    sub_253487D84(v4, v5);
  }
  return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v7);
}

uint64_t CodableProtoMessage.encode(to:)(void *a1)
{
  sub_253472068(a1, a1[3]);
  sub_253B0A670();
  _s30IntelligenceFlowPlannerSupport16SearchExpressionV5query24isLowConfidenceKnowledge7pickOne28shouldOpenResultIfApplicableACSS_S3btcfcfA1__0();
  uint64_t v2 = sub_253B073D0();
  if (!v1)
  {
    uint64_t v4 = v2;
    unint64_t v5 = v3;
    sub_253471F14((uint64_t)v7, v8);
    sub_253487D38();
    sub_253B0A4F0();
    sub_253487D84(v4, v5);
  }
  return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v7);
}

uint64_t sub_253AF91C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_253B071D0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoTranscript(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253472068(a1, a1[3]);
  sub_253B0A650();
  if (!v2)
  {
    sub_253472068(v12, v12[3]);
    sub_2539EB8B4();
    sub_253B0A4D0();
    uint64_t v11 = 0;
    memset(v10, 0, sizeof(v10));
    sub_253B071C0();
    sub_253AF9658(&qword_269CE26C8);
    sub_253B073C0();
    sub_253AF96CC((uint64_t)v8, a2);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v12);
  }
  return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)a1);
}

uint64_t CodableProtoMessage.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v21[6] = a3;
  uint64_t v17 = a4;
  uint64_t v7 = sub_253B071D0();
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253472068(a1, a1[3]);
  sub_253B0A650();
  if (!v4)
  {
    uint64_t v15 = v9;
    uint64_t v16 = a2;
    sub_253472068(v21, v21[3]);
    sub_2539EB8B4();
    sub_253B0A4D0();
    uint64_t v20 = 0;
    long long v18 = 0u;
    long long v19 = 0u;
    uint64_t v12 = v16;
    _s30IntelligenceFlowPlannerSupport16SearchExpressionV5query24isLowConfidenceKnowledge7pickOne28shouldOpenResultIfApplicableACSS_S3btcfcfA1__0();
    sub_253A8D2B8();
    sub_253B073C0();
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v17, v11, v12);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v21);
  }
  return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)a1);
}

uint64_t sub_253AF95CC(void *a1)
{
  a1[1] = sub_253AF9658(&qword_269CE26C8);
  a1[2] = sub_253AF9658(&qword_269CE8D80);
  uint64_t result = sub_253AF9658(&qword_269CE8D88);
  a1[3] = result;
  return result;
}

uint64_t sub_253AF9658(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for TranscriptProtoTranscript(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_253AF969C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_253AF91C8(a1, a2);
}

uint64_t sub_253AF96B4(void *a1)
{
  return sub_253AF8FC4(a1);
}

uint64_t sub_253AF96CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoTranscript(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Collection.at(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_2534727C4();
  uint64_t v4 = v3;
  sub_253963118();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v17[-v6];
  sub_253B09CB0();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  char v8 = sub_253B099D0();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, AssociatedTypeWitness);
  if (v8)
  {
    uint64_t v9 = (void (*)(unsigned char *, void))sub_253B09D30();
    uint64_t v11 = v10;
    uint64_t v12 = swift_getAssociatedTypeWitness();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(a1, v11, v12);
    v9(v17, 0);
    uint64_t v13 = a1;
    uint64_t v14 = 0;
    uint64_t v15 = v12;
  }
  else
  {
    uint64_t v15 = swift_getAssociatedTypeWitness();
    uint64_t v13 = a1;
    uint64_t v14 = 1;
  }
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v13, v14, 1, v15);
}

uint64_t Collection.intersperse(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a1;
  sub_2534727C4();
  uint64_t v32 = v6;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  sub_2534727C4();
  uint64_t v35 = v11;
  uint64_t v36 = v10;
  sub_253963118();
  MEMORY[0x270FA5388](v12);
  uint64_t v33 = (char *)&v32 - v13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = sub_253B09E00();
  sub_2534727C4();
  uint64_t v17 = v16;
  sub_253963118();
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v32 - v19;
  sub_2534727C4();
  uint64_t v22 = v21;
  sub_253963118();
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v32 - v24;
  sub_253B09D00();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v15);
    return sub_253B09B00();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v25, v20, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v9, v3, a2);
    uint64_t v27 = v33;
    sub_253B09D10();
    sub_253AFA0E8(AssociatedTypeWitness, AssociatedTypeWitness);
    swift_allocObject();
    uint64_t v28 = sub_253B09AB0();
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 16))(v29, v25, AssociatedTypeWitness);
    uint64_t v30 = sub_253B09B80();
    uint64_t v37 = v28;
    MEMORY[0x270FA5388](v30);
    *(&v32 - 4) = a2;
    *(&v32 - 3) = a3;
    *(&v32 - 2) = v34;
    uint64_t v31 = v36;
    swift_getAssociatedConformanceWitness();
    sub_253B099A0();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v27, v31);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v25, AssociatedTypeWitness);
    return v38;
  }
}

uint64_t sub_253AF9CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v9((char *)&v11 - v7, a3, AssociatedTypeWitness);
  sub_253B09B80();
  sub_253B09B40();
  v9(v8, a2, AssociatedTypeWitness);
  return sub_253B09B40();
}

uint64_t Collection.sliding2Window()(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_2534727C4();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  sub_253963118();
  MEMORY[0x270FA5388](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v2, a1);
  sub_253B09D10();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_253B09B90();
  sub_253B09E00();
  sub_253B0A160();
  swift_bridgeObjectRelease();
  sub_253B0A490();
  swift_allocObject();
  sub_253B09AB0();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v11, 1, 1, AssociatedTypeWitness);
  sub_253B09B80();
  uint64_t v12 = sub_253B09AF0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14[1] = v12;
  swift_getWitnessTable();
  sub_253B0A530();
  return swift_bridgeObjectRelease();
}

uint64_t sub_253AFA0E8(uint64_t a1, uint64_t a2)
{
  if (sub_253AFA16C(a2))
  {
    return sub_253462A5C(&qword_269CDB5A8);
  }
  else
  {
    return sub_253B0A490();
  }
}

uint64_t sub_253AFA14C(uint64_t a1, uint64_t a2)
{
  return sub_253AF9CFC(a1, a2, *(void *)(v2 + 32));
}

uint64_t sub_253AFA16C(uint64_t a1)
{
  if (swift_isClassType()) {
    return a1;
  }
  else {
    return 0;
  }
}

uint64_t sub_253AFA19C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Expression(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ProgramStatement(0);
  uint64_t v23 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v22 = (uint64_t)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v20 - v10;
  uint64_t v12 = MEMORY[0x263F8EE78];
  uint64_t v25 = MEMORY[0x263F8EE78];
  uint64_t v21 = *(void *)(a1 + 16);
  if (v21)
  {
    v20[0] = v1;
    unint64_t v13 = 0;
    v20[1] = v3;
    while (v13 < *(void *)(a1 + 16))
    {
      unint64_t v14 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      uint64_t v15 = *(void *)(v23 + 72);
      sub_253AFDC60(a1 + v14 + v15 * v13, (uint64_t)v11, (void (*)(void))type metadata accessor for ProgramStatement);
      sub_253AFDC60((uint64_t)&v11[*(int *)(v24 + 20)], (uint64_t)v5, (void (*)(void))type metadata accessor for Expression);
      unsigned int v16 = swift_getEnumCaseMultiPayload() - 5;
      sub_253AFDC0C((uint64_t)v5, (void (*)(void))type metadata accessor for Expression);
      if (v16 >= 2)
      {
        uint64_t result = sub_253AFDC0C((uint64_t)v11, (void (*)(void))type metadata accessor for ProgramStatement);
      }
      else
      {
        uint64_t v17 = a1;
        sub_253AFEC90((uint64_t)v11, v22, (void (*)(void))type metadata accessor for ProgramStatement);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_2539E85EC();
        }
        uint64_t v18 = v25;
        unint64_t v19 = *(void *)(v25 + 16);
        if (v19 >= *(void *)(v25 + 24) >> 1)
        {
          sub_2539E85EC();
          uint64_t v18 = v25;
        }
        *(void *)(v18 + 16) = v19 + 1;
        uint64_t result = sub_253AFEC90(v22, v18 + v14 + v19 * v15, (void (*)(void))type metadata accessor for ProgramStatement);
        a1 = v17;
      }
      if (v21 == ++v13)
      {
        uint64_t v12 = v25;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t AST.InfixOp.toInfixOp.getter@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result;
  return result;
}

void AST.UpdateKind.toUpdateKind.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t ExpressionConverter.transcript.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2534B45B0(v1, a1, &qword_269CE8D90);
}

uint64_t ExpressionConverter.transcript.setter(uint64_t a1)
{
  return sub_2535BC290(a1, v1, &qword_269CE8D90);
}

uint64_t (*ExpressionConverter.transcript.modify())()
{
  return nullsub_1;
}

uint64_t ExpressionConverter.init(transcript:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for Session.Transcript(0);
  sub_253465A98();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, v5, v6, v7);
  return sub_2535BC290(a1, a2, &qword_269CE8D90);
}

uint64_t ExpressionConverter.toExpression(from:)@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v232 = a2;
  uint64_t v236 = a1;
  uint64_t v5 = type metadata accessor for UndoExpression(0);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_25346CB04();
  uint64_t v213 = v7;
  uint64_t v8 = sub_253462A5C(&qword_269CDB460);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v10);
  sub_2534B35DC();
  uint64_t v212 = v11;
  uint64_t v12 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  sub_2534659D8();
  uint64_t v224 = v14;
  sub_2534B324C();
  MEMORY[0x270FA5388](v15);
  sub_2534B35DC();
  uint64_t v225 = v16;
  uint64_t v17 = sub_253462A5C(&qword_269CE8D98);
  uint64_t v18 = sub_25346CB4C(v17);
  MEMORY[0x270FA5388](v18);
  sub_25346CB04();
  uint64_t v223 = v19;
  uint64_t v222 = type metadata accessor for AST.Update(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v20);
  sub_25346CB04();
  sub_2534F8208(v21);
  sub_253B055C0();
  sub_253465998();
  uint64_t v230 = v23;
  uint64_t v231 = v22;
  MEMORY[0x270FA5388](v22);
  sub_2534659D8();
  uint64_t v220 = v24;
  sub_2534B324C();
  MEMORY[0x270FA5388](v25);
  sub_2534B3318();
  uint64_t v219 = v26;
  sub_2534B324C();
  MEMORY[0x270FA5388](v27);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v28);
  sub_2534B3318();
  uint64_t v218 = v29;
  sub_2534B324C();
  MEMORY[0x270FA5388](v30);
  sub_2534B3318();
  uint64_t v217 = v31;
  sub_2534B324C();
  MEMORY[0x270FA5388](v32);
  sub_2534B3318();
  uint64_t v221 = v33;
  sub_2534B324C();
  MEMORY[0x270FA5388](v34);
  sub_2534B35DC();
  sub_2534F8208(v35);
  sub_253B059D0();
  sub_253465998();
  uint64_t v228 = v37;
  uint64_t v229 = v36;
  MEMORY[0x270FA5388](v36);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v38);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v39);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v40);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v41);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v42);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v43);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v44);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v45);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v46);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v47);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v48);
  sub_2534B3318();
  uint64_t v226 = v49;
  sub_2534B324C();
  MEMORY[0x270FA5388](v50);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v51);
  sub_2534B35DC();
  uint64_t v53 = sub_2534F8208(v52);
  uint64_t v227 = type metadata accessor for AST.FlatValue(v53);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v54);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v55);
  sub_2534B3318();
  sub_2534F823C();
  uint64_t v57 = MEMORY[0x270FA5388](v56);
  uint64_t v59 = (void *)((char *)v206 - v58);
  MEMORY[0x270FA5388](v57);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v60);
  sub_2535B45C8();
  uint64_t v62 = MEMORY[0x270FA5388](v61);
  unint64_t v64 = (char *)v206 - v63;
  uint64_t v65 = MEMORY[0x270FA5388](v62);
  uint64_t v67 = (char *)v206 - v66;
  uint64_t v68 = MEMORY[0x270FA5388](v65);
  uint64_t v70 = (char *)v206 - v69;
  uint64_t v71 = MEMORY[0x270FA5388](v68);
  BOOL v73 = (char *)v206 - v72;
  MEMORY[0x270FA5388](v71);
  char v75 = (char *)v206 - v74;
  type metadata accessor for AST.FlatExpr(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v76);
  sub_253465A3C();
  sub_253AFDC60(v236, (uint64_t)v3, (void (*)(void))type metadata accessor for AST.FlatExpr);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      char v81 = *v3;
      uint64_t v82 = sub_253462A5C(&qword_269CDDCF0);
      sub_253AFEC90((uint64_t)&v3[*(int *)(v82 + 48)], (uint64_t)v67, (void (*)(void))type metadata accessor for AST.FlatValue);
      uint64_t v83 = v233;
      AST.FlatValue.toStatementId.getter();
      uint64_t result = sub_253AFDC0C((uint64_t)v67, (void (*)(void))type metadata accessor for AST.FlatValue);
      if (!v83)
      {
        *uint64_t v232 = v81;
        type metadata accessor for PrefixExpression(0);
        sub_2534D8E14();
        v85();
        type metadata accessor for Expression(0);
        sub_253A3F4E8();
        return swift_storeEnumTagMultiPayload();
      }
      return result;
    case 2:
      uint64_t v86 = *v3;
      uint64_t v87 = sub_253462A5C(&qword_269CDDCE8);
      uint64_t v88 = (uint64_t)&v3[*(int *)(v87 + 64)];
      sub_253AFEC90((uint64_t)&v3[*(int *)(v87 + 48)], (uint64_t)v64, (void (*)(void))type metadata accessor for AST.FlatValue);
      sub_253AFEC90(v88, v4, (void (*)(void))type metadata accessor for AST.FlatValue);
      AST.InfixOp.toInfixOp.getter(v86, &v234);
      char v89 = v234;
      uint64_t v90 = v233;
      AST.FlatValue.toStatementId.getter();
      if (!v90)
      {
        uint64_t v91 = v206[1];
        AST.FlatValue.toStatementId.getter();
        sub_253AFDC0C(v4, (void (*)(void))type metadata accessor for AST.FlatValue);
        sub_253AFDC0C((uint64_t)v64, (void (*)(void))type metadata accessor for AST.FlatValue);
        uint64_t v194 = v232;
        *uint64_t v232 = v89;
        uint64_t v195 = type metadata accessor for InfixExpression(0);
        uint64_t v196 = v229;
        uint64_t v197 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v228 + 32);
        v197(&v194[*(int *)(v195 + 20)], v226, v229);
        v197(&v194[*(int *)(v195 + 24)], v91, v196);
        type metadata accessor for Expression(0);
        return swift_storeEnumTagMultiPayload();
      }
      sub_253AFDC0C(v4, (void (*)(void))type metadata accessor for AST.FlatValue);
      uint64_t v92 = (uint64_t)v64;
      return sub_253AFDC0C(v92, (void (*)(void))type metadata accessor for AST.FlatValue);
    case 3:
      uint64_t v93 = &v3[*(int *)(sub_253462A5C(&qword_269CDDCE0) + 48)];
      uint64_t v95 = *(void *)v93;
      uint64_t v94 = *((void *)v93 + 1);
      uint64_t v96 = v214;
      sub_253AFEC90((uint64_t)v3, v214, (void (*)(void))type metadata accessor for AST.FlatValue);
      uint64_t v97 = v233;
      AST.FlatValue.toStatementId.getter();
      if (v97)
      {
        uint64_t v98 = type metadata accessor for AST.FlatValue;
        uint64_t v99 = v96;
        goto LABEL_41;
      }
      *uint64_t v59 = v95;
      v59[1] = v94;
      swift_storeEnumTagMultiPayload();
      uint64_t v104 = v59;
      AST.FlatValue.toStatementId.getter();
      sub_253AFDC0C((uint64_t)v59, (void (*)(void))type metadata accessor for AST.FlatValue);
      sub_253AFDC0C(v96, (void (*)(void))type metadata accessor for AST.FlatValue);
      uint64_t v198 = sub_253AFEE44();
      goto LABEL_56;
    case 4:
      uint64_t v100 = (uint64_t)&v3[*(int *)(sub_253462A5C(&qword_269CDDCD8) + 48)];
      uint64_t v101 = v216;
      sub_253AFEC90((uint64_t)v3, v216, (void (*)(void))type metadata accessor for AST.FlatValue);
      uint64_t v102 = v215;
      sub_253AFEC90(v100, v215, (void (*)(void))type metadata accessor for AST.FlatValue);
      uint64_t v103 = v233;
      AST.FlatValue.toStatementId.getter();
      if (v103)
      {
        sub_253AFDC0C(v102, (void (*)(void))type metadata accessor for AST.FlatValue);
        uint64_t v92 = v101;
        return sub_253AFDC0C(v92, (void (*)(void))type metadata accessor for AST.FlatValue);
      }
      uint64_t v104 = (void *)v102;
      AST.FlatValue.toStatementId.getter();
      sub_253AFDC0C(v102, (void (*)(void))type metadata accessor for AST.FlatValue);
      sub_253AFDC0C(v101, (void (*)(void))type metadata accessor for AST.FlatValue);
      uint64_t v198 = sub_253AFEE44();
LABEL_56:
      type metadata accessor for AST.FlatValue(v198);
      uint64_t v199 = type metadata accessor for IndexExpression(0);
      type metadata accessor for AST.FlatValue((uint64_t)v104 + *(int *)(v199 + 20));
      type metadata accessor for Expression(0);
      sub_253A3F4E8();
      return swift_storeEnumTagMultiPayload();
    case 5:
      uint64_t v105 = *(void *)v3;
      uint64_t v106 = v223;
      sub_2539814D8(*(void *)v3);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v106, 1, v222) == 1)
      {
        swift_bridgeObjectRelease();
        sub_253472458(v106, &qword_269CE8D98);
        sub_253AFEDD0();
        uint64_t v107 = sub_253AFED40();
        sub_253AFEE24(v107, v108);
        sub_253AFED94(v110, v109 + 25);
        return swift_willThrow();
      }
      uint64_t v164 = v210;
      sub_253AFEC90(v106, v210, (void (*)(void))type metadata accessor for AST.Update);
      uint64_t v165 = sub_253AFEDB8();
      uint64_t v167 = sub_253AFC614(v165, v166);
      if (!v2)
      {
        MEMORY[0x270FA5388](v167);
        v206[-2] = v106;
        sub_25396499C();
        uint64_t v203 = v202;
        sub_253AFDC0C(v164, (void (*)(void))type metadata accessor for AST.Update);
        swift_bridgeObjectRelease();
        uint64_t v204 = sub_253AFECF0();
        v205(v204);
        *(void *)(v105 + *(int *)(type metadata accessor for UpdateParametersExpression(0) + 20)) = v203;
        type metadata accessor for Expression(0);
        sub_2539446BC();
        return swift_storeEnumTagMultiPayload();
      }
      uint64_t v98 = type metadata accessor for AST.Update;
      uint64_t v99 = v164;
LABEL_41:
      sub_253AFDC0C(v99, (void (*)(void))v98);
      return swift_bridgeObjectRelease();
    case 6:
      uint64_t v112 = *(void *)v3;
      uint64_t v111 = *((void *)v3 + 1);
      uint64_t v113 = *((void *)v3 + 2);
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      sub_253AFEE0C();
      uint64_t v114 = v233;
      uint64_t v116 = sub_253AFD838((void (*)(uint64_t))sub_253AFD4DC, v115, v113);
      if (v114)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      uint64_t v177 = v116;
      swift_bridgeObjectRelease();
      uint64_t v178 = v232;
      *(void *)uint64_t v232 = v112;
      v178[1] = v111;
      v178[2] = 0;
      v178[3] = 0;
      v178[4] = v177;
      type metadata accessor for Expression(0);
      sub_253A3F4E8();
      return swift_storeEnumTagMultiPayload();
    case 7:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      sub_253AFEE0C();
      uint64_t v117 = v233;
      sub_253964B24();
      if (v117) {
        return swift_bridgeObjectRelease();
      }
      uint64_t v179 = v118;
      swift_bridgeObjectRelease();
      *(void *)uint64_t v232 = v179;
      type metadata accessor for Expression(0);
      sub_2539446BC();
      return swift_storeEnumTagMultiPayload();
    case 8:
      uint64_t v119 = &v3[*(int *)(sub_253462A5C(&qword_269CDDCD0) + 48)];
      uint64_t v120 = *(void *)v119;
      unsigned __int8 v121 = v119[8];
      uint64_t v122 = v221;
      sub_25347FA84();
      v123();
      if (v121)
      {
        sub_253AFEDD0();
        uint64_t v124 = sub_253AFED40();
        sub_253AFEE24(v124, v125);
        sub_253AFED94(v126, v127);
        swift_willThrow();
LABEL_43:
        uint64_t v169 = sub_253AFED28();
        return v170(v169);
      }
      uint64_t v168 = v233;
      sub_253AFB9EC(v122, v208);
      if (v168) {
        goto LABEL_43;
      }
      uint64_t v183 = sub_253AFED28();
      v184(v183);
      uint64_t v185 = v232;
      sub_2534D8E14();
      v186();
      *(void *)&v185[*(int *)(type metadata accessor for PickExpression(0) + 20)] = v120;
      type metadata accessor for Expression(0);
      sub_253A3F4E8();
      return swift_storeEnumTagMultiPayload();
    case 9:
      sub_253AFED84();
      uint64_t v128 = sub_253AFED10();
      v129(v128);
      sub_253AFED60((uint64_t)&v237);
      if (!v2) {
        goto LABEL_31;
      }
      goto LABEL_33;
    case 10:
      uint64_t v130 = *((void *)v3 + 1);
      unsigned __int8 v131 = v3[16];
      unsigned __int8 v132 = v3[17] & 1;
      uint64_t v133 = v232;
      *(void *)uint64_t v232 = *(void *)v3;
      *((void *)v133 + 1) = v130;
      v133[16] = v131;
      *(_WORD *)(v133 + 17) = v132;
      type metadata accessor for Expression(0);
      sub_2539446BC();
      return swift_storeEnumTagMultiPayload();
    case 11:
      sub_253AFED84();
      uint64_t v134 = sub_253AFED10();
      v135(v134);
      sub_253AFED60((uint64_t)&v238);
      if (!v2) {
        goto LABEL_31;
      }
      goto LABEL_33;
    case 12:
      ResolveToolExpression.init(toolIds:)(*(Swift::OpaquePointer *)v3);
      *(void *)uint64_t v232 = v234;
      type metadata accessor for Expression(0);
      sub_2539446BC();
      return swift_storeEnumTagMultiPayload();
    case 13:
      uint64_t v136 = v225;
      sub_25397F4F4((uint64_t)v3, v225);
      uint64_t v137 = v224;
      sub_2534B45B0(v136, v224, (uint64_t *)&unk_26B248CB0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v137, 1, v231) == 1)
      {
        sub_253472458(v137, (uint64_t *)&unk_26B248CB0);
        uint64_t v138 = v211;
        sub_253465A98();
        uint64_t v139 = v229;
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v140, v141, v142, v229);
        uint64_t v143 = v213;
        sub_253465A98();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v144, v145, v146, v139);
        sub_2535BC290(v138, v143, &qword_269CDB460);
        sub_253AFEC90(v143, (uint64_t)v232, (void (*)(void))type metadata accessor for UndoExpression);
        sub_253472458(v136, (uint64_t *)&unk_26B248CB0);
        type metadata accessor for Expression(0);
        sub_253A3F4E8();
        return swift_storeEnumTagMultiPayload();
      }
      uint64_t v171 = v209;
      sub_25347FA84();
      v172();
      uint64_t v173 = v212;
      uint64_t v174 = v233;
      sub_253AFB9EC(v171, v212);
      if (v174)
      {
        uint64_t v175 = sub_25351C404();
        v176(v175);
        return sub_253472458(v136, (uint64_t *)&unk_26B248CB0);
      }
      uint64_t v187 = v229;
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v173, 0, 1, v229);
      uint64_t v188 = v213;
      sub_253465A98();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v189, v190, v191, v187);
      sub_2535BC290(v173, v188, &qword_269CDB460);
      sub_253AFEC90(v188, (uint64_t)v232, (void (*)(void))type metadata accessor for UndoExpression);
      uint64_t v192 = sub_25351C404();
      v193(v192);
      sub_253472458(v136, (uint64_t *)&unk_26B248CB0);
      type metadata accessor for Expression(0);
      sub_2539446BC();
      return swift_storeEnumTagMultiPayload();
    case 14:
      sub_253AFED84();
      uint64_t v147 = sub_253AFED10();
      v148(v147);
      sub_253AFED60((uint64_t)&v239);
      if (!v2) {
        goto LABEL_31;
      }
      goto LABEL_33;
    case 15:
      sub_253AFED84();
      uint64_t v153 = sub_253AFED10();
      v154(v153);
      uint64_t v155 = sub_253AFEDB8();
      sub_253AFCEB4(v155, v156);
      if (!v2)
      {
LABEL_31:
        uint64_t v149 = sub_25397F720();
        v150(v149);
        uint64_t v151 = sub_253AFECF0();
        v152(v151);
        type metadata accessor for Expression(0);
        sub_2539446BC();
        return swift_storeEnumTagMultiPayload();
      }
LABEL_33:
      uint64_t v157 = sub_25397F720();
      return v158(v157);
    case 16:
    case 17:
    case 18:
    case 19:
      type metadata accessor for Expression(0);
      sub_253AF2E50();
      return swift_storeEnumTagMultiPayload();
    default:
      sub_253AFEC90((uint64_t)v3, (uint64_t)v75, (void (*)(void))type metadata accessor for AST.FlatValue);
      sub_253AFDC60((uint64_t)v75, (uint64_t)v73, (void (*)(void))type metadata accessor for AST.FlatValue);
      if (swift_getEnumCaseMultiPayload() == 8)
      {
        sub_253AFDC0C((uint64_t)v75, (void (*)(void))type metadata accessor for AST.FlatValue);
        uint64_t v78 = v229;
        uint64_t v79 = *(void (**)(uint64_t, char *, uint64_t))(v228 + 32);
        uint64_t v80 = v207;
        v79((uint64_t)v207, v73, v229);
        v79((uint64_t)v232, v80, v78);
        type metadata accessor for Expression(0);
        sub_253A3F4E8();
        return swift_storeEnumTagMultiPayload();
      }
      sub_253AFDC0C((uint64_t)v73, (void (*)(void))type metadata accessor for AST.FlatValue);
      sub_253AFDC60((uint64_t)v75, (uint64_t)v70, (void (*)(void))type metadata accessor for AST.FlatValue);
      if (swift_getEnumCaseMultiPayload() != 9)
      {
        sub_253AFDC0C((uint64_t)v70, (void (*)(void))type metadata accessor for AST.FlatValue);
        uint64_t v180 = v233;
        AST.FlatValue.toValueExpression.getter((uint64_t)&v234);
        uint64_t result = sub_253AFDC0C((uint64_t)v75, (void (*)(void))type metadata accessor for AST.FlatValue);
        if (v180) {
          return result;
        }
        char v181 = v235;
        char v182 = v232;
        *(_OWORD *)uint64_t v232 = v234;
        v182[16] = v181;
        type metadata accessor for Expression(0);
        sub_2539446BC();
        return swift_storeEnumTagMultiPayload();
      }
      uint64_t v159 = v206[0];
      sub_25347FA84();
      v160();
      uint64_t v161 = v233;
      sub_253AFB9EC(v159, (uint64_t)v232);
      if (!v161)
      {
        uint64_t v200 = sub_253AFED28();
        v201(v200);
        sub_253AFDC0C((uint64_t)v75, (void (*)(void))type metadata accessor for AST.FlatValue);
        type metadata accessor for Expression(0);
        sub_2539446BC();
        return swift_storeEnumTagMultiPayload();
      }
      uint64_t v162 = sub_253AFED28();
      v163(v162);
      uint64_t v92 = (uint64_t)v75;
      return sub_253AFDC0C(v92, (void (*)(void))type metadata accessor for AST.FlatValue);
  }
}

uint64_t sub_253AFB9EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v3 = v2;
  uint64_t v37 = type metadata accessor for Session.Event.Payload(0);
  MEMORY[0x270FA5388](v37);
  uint64_t v38 = (uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for StatementResult(0);
  MEMORY[0x270FA5388](v34);
  uint64_t v35 = (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_253462A5C(&qword_269CE8D90);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_253462A5C(&qword_269CE8468);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_253462A5C(&qword_269CE8488);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Session.Event(0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B45B0(v3, (uint64_t)v9, &qword_269CE8D90);
  uint64_t v19 = type metadata accessor for Session.Transcript(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v19) == 1)
  {
    uint64_t v20 = &qword_269CE8D90;
    uint64_t v21 = (uint64_t)v9;
LABEL_5:
    sub_253472458(v21, v20);
    type metadata accessor for ExpressionConverterError(0);
    sub_253AFD46C();
    swift_allocError();
    uint64_t v24 = v23;
    uint64_t v25 = sub_253B055C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v24, a1, v25);
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  swift_bridgeObjectRetain();
  sub_253AFDC0C((uint64_t)v9, (void (*)(void))type metadata accessor for Session.Transcript);
  sub_253A40504();
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_253462A5C(&qword_269CE8470);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v22) == 1)
  {
    uint64_t v20 = &qword_269CE8468;
    uint64_t v21 = (uint64_t)v12;
    goto LABEL_5;
  }
  sub_253AFEC90((uint64_t)&v12[*(int *)(v22 + 48)], (uint64_t)&v15[*(int *)(v13 + 48)], (void (*)(void))type metadata accessor for Session.Event);
  sub_253AFEC90((uint64_t)&v15[*(int *)(v13 + 48)], (uint64_t)v18, (void (*)(void))type metadata accessor for Session.Event);
  uint64_t v27 = v38;
  sub_253AFDC60((uint64_t)&v18[*(int *)(v16 + 28)], v38, (void (*)(void))type metadata accessor for Session.Event.Payload);
  if (swift_getEnumCaseMultiPayload() == 31)
  {
    sub_253AFDC0C((uint64_t)v18, (void (*)(void))type metadata accessor for Session.Event);
    uint64_t v28 = v27;
    uint64_t v29 = v35;
    sub_253AFEC90(v28, v35, (void (*)(void))type metadata accessor for StatementResult);
    uint64_t v30 = v29 + *(int *)(v34 + 28);
    uint64_t v31 = sub_253B059D0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v36, v30, v31);
    return sub_253AFDC0C(v29, (void (*)(void))type metadata accessor for StatementResult);
  }
  else
  {
    sub_253AFDC0C(v27, (void (*)(void))type metadata accessor for Session.Event.Payload);
    type metadata accessor for ExpressionConverterError(0);
    sub_253AFD46C();
    swift_allocError();
    *uint64_t v32 = 0xD000000000000027;
    v32[1] = 0x8000000253B13E70;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return sub_253AFDC0C((uint64_t)v18, (void (*)(void))type metadata accessor for Session.Event);
  }
}

uint64_t AST.FlatValue.toValueExpression.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1;
  sub_253B059D0();
  sub_253465998();
  uint64_t v48 = v5;
  MEMORY[0x270FA5388](v6);
  sub_2534727F8();
  uint64_t v9 = v7 - v8;
  MEMORY[0x270FA5388](v10);
  sub_2534B35DC();
  uint64_t v49 = v11;
  uint64_t v12 = type metadata accessor for AST.FlatValue(0);
  sub_253465998();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  sub_2534727F8();
  uint64_t v18 = v16 - v17;
  MEMORY[0x270FA5388](v19);
  sub_2535B45C8();
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (uint64_t *)((char *)&v41 - v21);
  sub_253AFDC60(v3, (uint64_t)&v41 - v21, (void (*)(void))type metadata accessor for AST.FlatValue);
  uint64_t v47 = v12;
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      *(void *)a1 = *v22;
      *(void *)(a1 + 8) = 0;
      char v24 = 1;
      goto LABEL_20;
    case 2:
      *(void *)a1 = *v22;
      *(void *)(a1 + 8) = 0;
      char v24 = 2;
      goto LABEL_20;
    case 3:
      uint64_t v25 = v22[1];
      *(void *)a1 = *v22;
      *(void *)(a1 + 8) = v25;
      char v24 = 3;
      goto LABEL_20;
    case 4:
      uint64_t v46 = v9;
      uint64_t v26 = *v22;
      uint64_t v27 = *(void *)(*v22 + 16);
      if (v27)
      {
        uint64_t v42 = a1;
        uint64_t v52 = MEMORY[0x263F8EE78];
        sub_2539E7ADC();
        uint64_t v28 = v26 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
        uint64_t v29 = *(void *)(v14 + 72);
        uint64_t v43 = v26;
        uint64_t v44 = v29;
        uint64_t v30 = (void (**)(void))(v48 + 32);
        uint64_t v45 = v2;
        do
        {
          sub_253AFDC60(v28, v2, (void (*)(void))type metadata accessor for AST.FlatValue);
          sub_253AFDC60(v2, v18, (void (*)(void))type metadata accessor for AST.FlatValue);
          if (swift_getEnumCaseMultiPayload() != 8)
          {
            sub_253AFDC0C(v18, (void (*)(void))type metadata accessor for AST.FlatValue);
            sub_253AFEDD0();
            sub_253AFED40();
            uint64_t v39 = v38;
            unint64_t v50 = 0;
            unint64_t v51 = 0xE000000000000000;
            sub_253B0A000();
            swift_bridgeObjectRelease();
            unint64_t v50 = 0xD000000000000018;
            unint64_t v51 = 0x8000000253B13DC0;
            AST.FlatValue.description.getter();
            sub_253B09860();
            swift_bridgeObjectRelease();
            unint64_t v40 = v51;
            *uint64_t v39 = v50;
            v39[1] = v40;
            swift_storeEnumTagMultiPayload();
            swift_willThrow();
            sub_253AFDC0C(v2, (void (*)(void))type metadata accessor for AST.FlatValue);
            swift_bridgeObjectRelease();
            return swift_release();
          }
          uint64_t v31 = *v30;
          sub_253AFEDFC();
          v31();
          sub_253AFEDFC();
          v31();
          sub_253AFDC0C(v2, (void (*)(void))type metadata accessor for AST.FlatValue);
          uint64_t v32 = v52;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2539E7ADC();
            uint64_t v32 = v52;
          }
          unint64_t v33 = *(void *)(v32 + 16);
          if (v33 >= *(void *)(v32 + 24) >> 1)
          {
            sub_2539E7ADC();
            uint64_t v32 = v52;
          }
          *(void *)(v32 + 16) = v33 + 1;
          sub_253AFEDFC();
          v31();
          uint64_t v52 = v32;
          uint64_t v2 = v45;
          v28 += v44;
          --v27;
        }
        while (v27);
        uint64_t result = swift_bridgeObjectRelease();
        a1 = v42;
      }
      else
      {
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v32 = MEMORY[0x263F8EE78];
      }
      *(void *)a1 = v32;
      *(void *)(a1 + 8) = 0;
      *(unsigned char *)(a1 + 16) = 4;
      return result;
    case 5:
    case 7:
      swift_bridgeObjectRelease();
      goto LABEL_18;
    case 6:
      uint64_t v34 = v22[1];
      *(void *)a1 = *v22;
      *(void *)(a1 + 8) = v34;
      char v24 = 5;
      goto LABEL_20;
    case 8:
    case 9:
      sub_253AFDC0C((uint64_t)v22, (void (*)(void))type metadata accessor for AST.FlatValue);
LABEL_18:
      sub_253AFEDD0();
      sub_253AFED40();
      uint64_t v36 = v35;
      unint64_t v50 = 0;
      unint64_t v51 = 0xE000000000000000;
      sub_253B0A000();
      swift_bridgeObjectRelease();
      unint64_t v50 = 0x2065707954;
      unint64_t v51 = 0xE500000000000000;
      AST.FlatValue.description.getter();
      sub_253B09860();
      swift_bridgeObjectRelease();
      sub_253B09860();
      unint64_t v37 = v51;
      unint64_t *v36 = v50;
      v36[1] = v37;
      swift_storeEnumTagMultiPayload();
      return swift_willThrow();
    case 10:
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      char v24 = 6;
LABEL_20:
      *(unsigned char *)(a1 + 16) = v24;
      return result;
    default:
      *(void *)a1 = *(unsigned __int8 *)v22;
      *(void *)(a1 + 8) = 0;
      *(unsigned char *)(a1 + 16) = 0;
      return result;
  }
}

uint64_t AST.FlatValue.toStatementId.getter()
{
  type metadata accessor for AST.FlatValue(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v2);
  sub_253465A3C();
  sub_253AFDC60(v0, v1, (void (*)(void))type metadata accessor for AST.FlatValue);
  if (swift_getEnumCaseMultiPayload() == 8)
  {
    sub_253B059D0();
    sub_25346CAF4();
    sub_2534D8E14();
    return v3();
  }
  else
  {
    sub_253AFDC0C(v1, (void (*)(void))type metadata accessor for AST.FlatValue);
    type metadata accessor for ExpressionConverterError(0);
    sub_253AFD46C();
    swift_allocError();
    uint64_t v6 = v5;
    sub_253B0A000();
    swift_bridgeObjectRelease();
    AST.FlatValue.description.getter();
    sub_253B09860();
    swift_bridgeObjectRelease();
    *uint64_t v6 = 0xD000000000000018;
    v6[1] = 0x8000000253B13DC0;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
}

uint64_t sub_253AFC614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_253B055C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AST.FlatValue(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253AFDC60(a1, (uint64_t)v10, (void (*)(void))type metadata accessor for AST.FlatValue);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 9)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_253AFCEB4((uint64_t)v7, a2);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else if (EnumCaseMultiPayload == 8)
  {
    uint64_t v12 = sub_253B059D0();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a2, v10, v12);
  }
  else
  {
    type metadata accessor for ExpressionConverterError(0);
    sub_253AFD46C();
    swift_allocError();
    *uint64_t v14 = 0xD000000000000025;
    v14[1] = 0x8000000253B13E40;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return sub_253AFDC0C((uint64_t)v10, (void (*)(void))type metadata accessor for AST.FlatValue);
  }
}

uint64_t sub_253AFC86C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, void *a3@<X8>)
{
  unint64_t v33 = a2;
  uint64_t v31 = a3;
  uint64_t v4 = sub_253B059D0();
  uint64_t v30 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_253462A5C(&qword_269CE8DD8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AST.FlatValue(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (uint64_t *)((char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v16 = (int *)type metadata accessor for AST.Update(0);
  uint64_t v17 = *(void *)(a1 + v16[5]);
  if (*(void *)(v17 + 16) != 1) {
    goto LABEL_4;
  }
  sub_253981504(v17);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10) == 1)
  {
    sub_253472458((uint64_t)v9, &qword_269CE8DD8);
LABEL_4:
    type metadata accessor for ExpressionConverterError(0);
    sub_253AFD46C();
    uint64_t v18 = swift_allocError();
    *uint64_t v19 = 0xD000000000000026;
    v19[1] = 0x8000000253B13DE0;
    swift_storeEnumTagMultiPayload();
    uint64_t result = swift_willThrow();
    goto LABEL_5;
  }
  sub_253AFEC90((uint64_t)v9, (uint64_t)v15, (void (*)(void))type metadata accessor for AST.FlatValue);
  sub_253AFDC60((uint64_t)v15, (uint64_t)v13, (void (*)(void))type metadata accessor for AST.FlatValue);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v22 = *v13;
    uint64_t v21 = v13[1];
    uint64_t v23 = v16[7];
    char v24 = *(unsigned char *)(a1 + v16[6]);
    uint64_t v25 = v32;
    sub_253AFC614(a1 + v23, (uint64_t)v6);
    uint64_t v18 = v25;
    sub_253AFDC0C((uint64_t)v15, (void (*)(void))type metadata accessor for AST.FlatValue);
    if (!v25)
    {
      uint64_t v27 = v31;
      *uint64_t v31 = v22;
      v27[1] = v21;
      void v27[2] = 0;
      *((unsigned char *)v27 + 24) = 1;
      *((unsigned char *)v27 + 25) = v24;
      uint64_t updated = type metadata accessor for UpdateParametersExpression.UpdateParameter(0);
      return (*(uint64_t (**)(char *, char *, uint64_t))(v30 + 32))((char *)v27 + *(int *)(updated + 28), v6, v4);
    }
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    sub_253AFDC0C((uint64_t)v13, (void (*)(void))type metadata accessor for AST.FlatValue);
    type metadata accessor for ExpressionConverterError(0);
    sub_253AFD46C();
    uint64_t v18 = swift_allocError();
    *uint64_t v26 = 0xD000000000000029;
    v26[1] = 0x8000000253B13E10;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    uint64_t result = sub_253AFDC0C((uint64_t)v15, (void (*)(void))type metadata accessor for AST.FlatValue);
  }
LABEL_5:
  *unint64_t v33 = v18;
  return result;
}

uint64_t sub_253AFCC20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_253B055C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AST.FlatValue(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253AFDC60(a1, (uint64_t)v10, (void (*)(void))type metadata accessor for AST.FlatValue);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 9)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_253AFCEB4((uint64_t)v7, a2);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else if (EnumCaseMultiPayload == 8)
  {
    uint64_t v12 = sub_253B059D0();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a2, v10, v12);
  }
  else
  {
    type metadata accessor for ExpressionConverterError(0);
    sub_253AFD46C();
    swift_allocError();
    *uint64_t v14 = 0xD000000000000025;
    v14[1] = 0x8000000253B13E40;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return sub_253AFDC0C((uint64_t)v10, (void (*)(void))type metadata accessor for AST.FlatValue);
  }
}

uint64_t sub_253AFCE80@<X0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t result = sub_253AFB9EC(a1, a3);
  if (v3) {
    *a2 = v3;
  }
  return result;
}

uint64_t sub_253AFCEB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v3 = v2;
  uint64_t v41 = a1;
  uint64_t v4 = sub_253462A5C(&qword_269CE5320);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v38 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ProgramStatement(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v39 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for Session.Event.Payload(0);
  MEMORY[0x270FA5388](v40);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_253462A5C(&qword_269CE8D90);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_253462A5C(&qword_269CE8468);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_253462A5C(&qword_269CE8488);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Session.Event(0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B45B0(v3, (uint64_t)v12, &qword_269CE8D90);
  uint64_t v22 = type metadata accessor for Session.Transcript(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v22) == 1)
  {
    sub_253472458((uint64_t)v12, &qword_269CE8D90);
    uint64_t v23 = v41;
LABEL_9:
    type metadata accessor for ExpressionConverterError(0);
    sub_253AFD46C();
    swift_allocError();
    uint64_t v33 = v32;
    uint64_t v34 = sub_253B055C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v33, v23, v34);
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  swift_bridgeObjectRetain();
  sub_253AFDC0C((uint64_t)v12, (void (*)(void))type metadata accessor for Session.Transcript);
  uint64_t v23 = v41;
  sub_253A40504();
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_253462A5C(&qword_269CE8470);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v24) == 1)
  {
    sub_253472458((uint64_t)v15, &qword_269CE8468);
    goto LABEL_9;
  }
  sub_253AFEC90((uint64_t)&v15[*(int *)(v24 + 48)], (uint64_t)&v18[*(int *)(v16 + 48)], (void (*)(void))type metadata accessor for Session.Event);
  sub_253AFEC90((uint64_t)&v18[*(int *)(v16 + 48)], (uint64_t)v21, (void (*)(void))type metadata accessor for Session.Event);
  sub_253AFDC60((uint64_t)&v21[*(int *)(v19 + 28)], (uint64_t)v9, (void (*)(void))type metadata accessor for Session.Event.Payload);
  if (swift_getEnumCaseMultiPayload() != 4)
  {
    sub_253AFDC0C((uint64_t)v21, (void (*)(void))type metadata accessor for Session.Event);
    sub_253AFDC0C((uint64_t)v9, (void (*)(void))type metadata accessor for Session.Event.Payload);
    goto LABEL_9;
  }
  uint64_t v25 = swift_bridgeObjectRetain();
  uint64_t v26 = v37;
  uint64_t v27 = sub_253AFA19C(v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = v38;
  sub_2534B3E18(v27, v38);
  swift_bridgeObjectRelease();
  uint64_t v29 = (uint64_t)v39;
  sub_253A8FB1C(0xD000000000000080, 0x8000000253B13EA0, 169, 0xD00000000000001BLL, 0x8000000253B13F30);
  sub_253472458(v28, &qword_269CE5320);
  uint64_t result = sub_253AFDC0C((uint64_t)v21, (void (*)(void))type metadata accessor for Session.Event);
  if (!v26)
  {
    uint64_t v31 = sub_253B059D0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v36, v29, v31);
    return sub_253AFDC0C(v29, (void (*)(void))type metadata accessor for ProgramStatement);
  }
  return result;
}

uint64_t type metadata accessor for ExpressionConverterError(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE8DC0);
}

unint64_t sub_253AFD46C()
{
  unint64_t result = qword_269CE8DA0;
  if (!qword_269CE8DA0)
  {
    type metadata accessor for ExpressionConverterError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE8DA0);
  }
  return result;
}

uint64_t sub_253AFD4BC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_253AFCE80(a1, a2, a3);
}

uint64_t sub_253AFD4DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_253AFCC20(a1, a2);
}

uint64_t sub_253AFD4F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253B055C0();
  sub_253465998();
  uint64_t v32 = v5;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ExpressionConverterError(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v9);
  sub_2534727F8();
  uint64_t v12 = v10 - v11;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (uint64_t *)((char *)&v31 - v14);
  uint64_t v16 = sub_253462A5C(&qword_269CE8DD0);
  uint64_t v17 = sub_25346CB4C(v16);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = &v20[*(int *)(v18 + 56)];
  sub_253AFDC60(a1, (uint64_t)v20, (void (*)(void))type metadata accessor for ExpressionConverterError);
  sub_253AFDC60(a2, (uint64_t)v21, (void (*)(void))type metadata accessor for ExpressionConverterError);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_253AFDC60((uint64_t)v20, (uint64_t)v15, (void (*)(void))type metadata accessor for ExpressionConverterError);
    uint64_t v27 = *v15;
    uint64_t v26 = v15[1];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      if (v27 == *(void *)v21 && v26 == *((void *)v21 + 1))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v29 = sub_253B0A4C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v29 & 1) == 0)
        {
          sub_253AFDC0C((uint64_t)v20, (void (*)(void))type metadata accessor for ExpressionConverterError);
          goto LABEL_8;
        }
      }
      sub_253AFDC0C((uint64_t)v20, (void (*)(void))type metadata accessor for ExpressionConverterError);
      char v24 = 1;
      return v24 & 1;
    }
    swift_bridgeObjectRelease();
LABEL_7:
    sub_253472458((uint64_t)v20, &qword_269CE8DD0);
LABEL_8:
    char v24 = 0;
    return v24 & 1;
  }
  uint64_t v22 = v32;
  sub_253AFDC60((uint64_t)v20, v12, (void (*)(void))type metadata accessor for ExpressionConverterError);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v12, v4);
    goto LABEL_7;
  }
  sub_25347FA84();
  v23();
  char v24 = sub_253B055A0();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v22 + 8);
  v25(v8, v4);
  v25((char *)v12, v4);
  sub_253AFDC0C((uint64_t)v20, (void (*)(void))type metadata accessor for ExpressionConverterError);
  return v24 & 1;
}

uint64_t sub_253AFD838(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v36 = sub_253B059D0();
  uint64_t v5 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AST.FlatValue(0);
  uint64_t v37 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v42 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253462A5C(&qword_269CDDCA0);
  uint64_t result = sub_253B0A230();
  int64_t v11 = 0;
  uint64_t v40 = a3;
  uint64_t v41 = result;
  uint64_t v12 = *(void *)(a3 + 64);
  uint64_t v31 = a3 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  uint64_t v34 = result + 64;
  uint64_t v35 = v5;
  int64_t v32 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v33 = v5 + 32;
  if ((v14 & v12) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v16 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  unint64_t v17 = v16 | (v11 << 6);
  uint64_t v18 = (uint64_t)v42;
  while (1)
  {
    uint64_t v22 = (uint64_t *)(*(void *)(v40 + 48) + 16 * v17);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    sub_253AFDC60(*(void *)(v40 + 56) + *(void *)(v37 + 72) * v17, v18, (void (*)(void))type metadata accessor for AST.FlatValue);
    swift_bridgeObjectRetain();
    v38(v18);
    if (v3)
    {
      swift_bridgeObjectRelease();
      uint64_t v29 = v41;
      swift_release();
      sub_253AFDC0C(v18, (void (*)(void))type metadata accessor for AST.FlatValue);
      return v29;
    }
    sub_253AFDC0C(v18, (void (*)(void))type metadata accessor for AST.FlatValue);
    *(void *)(v34 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v25 = v41;
    uint64_t v26 = (void *)(*(void *)(v41 + 48) + 16 * v17);
    *uint64_t v26 = v24;
    v26[1] = v23;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v35 + 32))(*(void *)(v25 + 56) + *(void *)(v35 + 72) * v17, v7, v36);
    uint64_t v27 = *(void *)(v25 + 16);
    BOOL v19 = __OFADD__(v27, 1);
    uint64_t v28 = v27 + 1;
    if (v19) {
      break;
    }
    *(void *)(v25 + 16) = v28;
    if (v15) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v19 = __OFADD__(v11++, 1);
    uint64_t v18 = (uint64_t)v42;
    if (v19) {
      goto LABEL_28;
    }
    if (v11 >= v32) {
      return v41;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v11);
    if (!v20)
    {
      int64_t v21 = v11 + 1;
      if (v11 + 1 >= v32) {
        return v41;
      }
      unint64_t v20 = *(void *)(v31 + 8 * v21);
      if (v20) {
        goto LABEL_14;
      }
      int64_t v21 = v11 + 2;
      if (v11 + 2 >= v32) {
        return v41;
      }
      unint64_t v20 = *(void *)(v31 + 8 * v21);
      if (v20)
      {
LABEL_14:
        int64_t v11 = v21;
        goto LABEL_15;
      }
      int64_t v21 = v11 + 3;
      if (v11 + 3 < v32)
      {
        unint64_t v20 = *(void *)(v31 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v11 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_29;
            }
            if (v11 >= v32) {
              return v41;
            }
            unint64_t v20 = *(void *)(v31 + 8 * v11);
            ++v21;
            if (v20) {
              goto LABEL_15;
            }
          }
        }
        goto LABEL_14;
      }
      return v41;
    }
LABEL_15:
    unint64_t v15 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v11 << 6);
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_253AFDBEC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return sub_253AFC86C(a1, a2, a3);
}

uint64_t sub_253AFDC0C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_25346CAF4();
  sub_2534659CC();
  v3();
  return a1;
}

uint64_t sub_253AFDC60(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25346CAF4();
  uint64_t v4 = sub_2534B4668();
  v5(v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for ExpressionConverter(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(sub_253462A5C(&qword_269CE8D90) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = (int *)type metadata accessor for Session.Transcript(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, (uint64_t)v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v9 = sub_253B055C0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      uint64_t v10 = v7[5];
      int64_t v11 = (uint64_t *)((char *)a1 + v10);
      uint64_t v12 = (uint64_t *)((char *)a2 + v10);
      uint64_t v13 = v12[1];
      void *v11 = *v12;
      v11[1] = v13;
      uint64_t v14 = v7[6];
      unint64_t v15 = (uint64_t *)((char *)a1 + v14);
      unint64_t v16 = (uint64_t *)((char *)a2 + v14);
      uint64_t v17 = v16[1];
      *unint64_t v15 = *v16;
      v15[1] = v17;
      uint64_t v18 = v7[7];
      BOOL v19 = (uint64_t *)((char *)a1 + v18);
      unint64_t v20 = (uint64_t *)((char *)a2 + v18);
      uint64_t v21 = v20[1];
      *BOOL v19 = *v20;
      v19[1] = v21;
      *(uint64_t *)((char *)a1 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, (uint64_t)v7);
    }
  }
  return a1;
}

uint64_t destroy for ExpressionConverter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Session.Transcript(0);
  uint64_t result = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = sub_253B055C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for ExpressionConverter(char *a1, char *a2)
{
  uint64_t v4 = (int *)type metadata accessor for Session.Transcript(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, (uint64_t)v4))
  {
    uint64_t v5 = sub_253462A5C(&qword_269CE8D90);
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_253B055C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = v4[5];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = *((void *)v9 + 1);
    *(void *)uint64_t v8 = *(void *)v9;
    *((void *)v8 + 1) = v10;
    uint64_t v11 = v4[6];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    uint64_t v14 = *((void *)v13 + 1);
    *(void *)uint64_t v12 = *(void *)v13;
    *((void *)v12 + 1) = v14;
    uint64_t v15 = v4[7];
    unint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    uint64_t v18 = *((void *)v17 + 1);
    *(void *)unint64_t v16 = *(void *)v17;
    *((void *)v16 + 1) = v18;
    *(void *)&a1[v4[8]] = *(void *)&a2[v4[8]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, (uint64_t)v4);
  }
  return a1;
}

char *assignWithCopy for ExpressionConverter(char *a1, char *a2)
{
  uint64_t v4 = (int *)type metadata accessor for Session.Transcript(0);
  int v5 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, (uint64_t)v4);
  int v6 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, (uint64_t)v4);
  if (!v5)
  {
    if (!v6)
    {
      uint64_t v19 = sub_253B055C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24))(a1, a2, v19);
      uint64_t v20 = v4[5];
      uint64_t v21 = &a1[v20];
      uint64_t v22 = &a2[v20];
      *(void *)uint64_t v21 = *(void *)v22;
      *((void *)v21 + 1) = *((void *)v22 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v23 = v4[6];
      uint64_t v24 = &a1[v23];
      uint64_t v25 = &a2[v23];
      *(void *)uint64_t v24 = *(void *)v25;
      *((void *)v24 + 1) = *((void *)v25 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v26 = v4[7];
      uint64_t v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      *(void *)uint64_t v27 = *(void *)v28;
      *((void *)v27 + 1) = *((void *)v28 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&a1[v4[8]] = *(void *)&a2[v4[8]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_253AFDC0C((uint64_t)a1, (void (*)(void))type metadata accessor for Session.Transcript);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    uint64_t v17 = sub_253462A5C(&qword_269CE8D90);
    memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  uint64_t v7 = sub_253B055C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  uint64_t v8 = v4[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)uint64_t v9 = *(void *)v10;
  *((void *)v9 + 1) = *((void *)v10 + 1);
  uint64_t v11 = v4[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  uint64_t v14 = v4[7];
  uint64_t v15 = &a1[v14];
  unint64_t v16 = &a2[v14];
  *(void *)uint64_t v15 = *(void *)v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  *(void *)&a1[v4[8]] = *(void *)&a2[v4[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, (uint64_t)v4);
  return a1;
}

char *initializeWithTake for ExpressionConverter(char *a1, char *a2)
{
  uint64_t v4 = (int *)type metadata accessor for Session.Transcript(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, (uint64_t)v4))
  {
    uint64_t v5 = sub_253462A5C(&qword_269CE8D90);
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_253B055C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    *(_OWORD *)&a1[v4[5]] = *(_OWORD *)&a2[v4[5]];
    *(_OWORD *)&a1[v4[6]] = *(_OWORD *)&a2[v4[6]];
    *(_OWORD *)&a1[v4[7]] = *(_OWORD *)&a2[v4[7]];
    *(void *)&a1[v4[8]] = *(void *)&a2[v4[8]];
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, (uint64_t)v4);
  }
  return a1;
}

char *assignWithTake for ExpressionConverter(char *a1, char *a2)
{
  uint64_t v4 = (int *)type metadata accessor for Session.Transcript(0);
  int v5 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, (uint64_t)v4);
  int v6 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, (uint64_t)v4);
  if (!v5)
  {
    if (!v6)
    {
      uint64_t v10 = sub_253B055C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(a1, a2, v10);
      uint64_t v11 = v4[5];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v15 = *(void *)v13;
      uint64_t v14 = *((void *)v13 + 1);
      *(void *)uint64_t v12 = v15;
      *((void *)v12 + 1) = v14;
      swift_bridgeObjectRelease();
      uint64_t v16 = v4[6];
      uint64_t v17 = &a1[v16];
      uint64_t v18 = &a2[v16];
      uint64_t v20 = *(void *)v18;
      uint64_t v19 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = v20;
      *((void *)v17 + 1) = v19;
      swift_bridgeObjectRelease();
      uint64_t v21 = v4[7];
      uint64_t v22 = &a1[v21];
      uint64_t v23 = &a2[v21];
      uint64_t v25 = *(void *)v23;
      uint64_t v24 = *((void *)v23 + 1);
      *(void *)uint64_t v22 = v25;
      *((void *)v22 + 1) = v24;
      swift_bridgeObjectRelease();
      *(void *)&a1[v4[8]] = *(void *)&a2[v4[8]];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_253AFDC0C((uint64_t)a1, (void (*)(void))type metadata accessor for Session.Transcript);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    uint64_t v8 = sub_253462A5C(&qword_269CE8D90);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    return a1;
  }
  uint64_t v7 = sub_253B055C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
  *(_OWORD *)&a1[v4[5]] = *(_OWORD *)&a2[v4[5]];
  *(_OWORD *)&a1[v4[6]] = *(_OWORD *)&a2[v4[6]];
  *(_OWORD *)&a1[v4[7]] = *(_OWORD *)&a2[v4[7]];
  *(void *)&a1[v4[8]] = *(void *)&a2[v4[8]];
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, (uint64_t)v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExpressionConverter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253AFE598);
}

uint64_t sub_253AFE598(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253462A5C(&qword_269CE8D90);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ExpressionConverter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253AFE5F8);
}

uint64_t sub_253AFE5F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253462A5C(&qword_269CE8D90);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ExpressionConverter(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE8DA8);
}

void sub_253AFE668()
{
  sub_253AFE6F4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_253AFE6F4()
{
  if (!qword_269CE8DB8)
  {
    type metadata accessor for Session.Transcript(255);
    unint64_t v0 = sub_253B09E00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269CE8DB8);
    }
  }
}

uint64_t *sub_253AFE74C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_253B055C0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253AFE84C(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_253B055C0();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

void *sub_253AFE8DC(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_253B055C0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_253AFE98C(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_253AFDC0C((uint64_t)a1, (void (*)(void))type metadata accessor for ExpressionConverterError);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_253B055C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_253AFEA68(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_253B055C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_253AFEB20(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_253AFDC0C((uint64_t)a1, (void (*)(void))type metadata accessor for ExpressionConverterError);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_253B055C0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_253AFEBFC()
{
  uint64_t result = sub_253B055C0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_253AFEC90(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25346CAF4();
  sub_2534D8E14();
  v4();
  return a2;
}

uint64_t sub_253AFECF0()
{
  return *(void *)(v0 - 128);
}

uint64_t sub_253AFED10()
{
  return v0;
}

uint64_t sub_253AFED28()
{
  return v0;
}

uint64_t sub_253AFED40()
{
  return swift_allocError();
}

uint64_t sub_253AFED60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(a1 - 256);
  return sub_253AFB9EC(v1, v3);
}

uint64_t sub_253AFED94@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_253AFEDB8()
{
  return v0;
}

unint64_t sub_253AFEDD0()
{
  type metadata accessor for ExpressionConverterError(0);
  return sub_253AFD46C();
}

uint64_t sub_253AFEE24(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_253AFEE44()
{
  return *(void *)(v0 - 128);
}

uint64_t Optional.if_unwrap(file:line:function:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v25 = a4;
  uint64_t v24 = a3;
  sub_2534727C4();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v18, v17);
  uint64_t v19 = *(void *)(a6 + 16);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v19) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(a7, v16, v19);
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, a6);
  sub_25352634C();
  swift_allocError();
  *uint64_t v20 = a1;
  v20[1] = a2;
  uint64_t v21 = v25;
  void v20[2] = v24;
  v20[3] = v21;
  v20[4] = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

void __swiftcall UnwrappedNilError.init(file:line:function:)(IntelligenceFlowPlannerSupport::UnwrappedNilError *__return_ptr retstr, Swift::String file, Swift::Int line, Swift::String function)
{
  retstr->file = file;
  retstr->line = line;
  retstr->function = function;
}

uint64_t Optional.asyncMap<A>(_:)()
{
  sub_253477168();
  uint64_t v3 = v2;
  v1[6] = v4;
  v1[7] = v0;
  v1[4] = v5;
  v1[5] = v2;
  v1[2] = v6;
  v1[3] = v7;
  sub_2534727C4();
  v1[8] = v8;
  v1[9] = sub_253472828();
  v1[10] = *(void *)(v3 + 16);
  sub_2534727C4();
  v1[11] = v9;
  v1[12] = sub_253472828();
  sub_25347719C();
  return MEMORY[0x270FA2498](v10, v11, v12);
}

uint64_t sub_253AFF0B0()
{
  uint64_t v3 = sub_253AFFA30();
  v4(v3);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v0, 1, (uint64_t)v1) == 1)
  {
    uint64_t v5 = v2[6];
    uint64_t v6 = v2[2];
    uint64_t v7 = sub_253AFFA50();
    v8(v7);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v6, 1, 1, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    sub_253529DC4();
    return v9();
  }
  else
  {
    uint64_t v11 = sub_253AFFA64();
    v12(v11);
    uint64_t v15 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
    uint64_t v13 = (void *)swift_task_alloc();
    v2[13] = v13;
    *uint64_t v13 = v2;
    v13[1] = sub_253AFF220;
    uint64_t v14 = sub_253AFFA80();
    return v15(v14);
  }
}

uint64_t sub_253AFF220()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253535478();
  *uint64_t v5 = v4;
  *(void *)(v6 + 112) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_253AFF300()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = sub_253AFFA50();
  v4(v3);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, 0, 1, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_253529DC4();
  return v5();
}

uint64_t Optional.asyncFlatMap<A>(_:)()
{
  sub_253477168();
  uint64_t v3 = v2;
  v1[6] = v4;
  v1[7] = v0;
  v1[4] = v5;
  v1[5] = v2;
  v1[2] = v6;
  v1[3] = v7;
  sub_2534727C4();
  v1[8] = v8;
  v1[9] = sub_253472828();
  v1[10] = *(void *)(v3 + 16);
  sub_2534727C4();
  v1[11] = v9;
  v1[12] = sub_253472828();
  sub_25347719C();
  return MEMORY[0x270FA2498](v10, v11, v12);
}

uint64_t sub_253AFF454()
{
  uint64_t v3 = sub_253AFFA30();
  v4(v3);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v0, 1, (uint64_t)v1) == 1)
  {
    uint64_t v5 = v2[6];
    uint64_t v6 = v2[2];
    (*(void (**)(void, void))(v2[8] + 8))(v2[9], v2[5]);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v6, 1, 1, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    sub_253529DC4();
    return v7();
  }
  else
  {
    uint64_t v9 = sub_253AFFA64();
    v10(v9);
    uint64_t v13 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
    uint64_t v11 = (void *)swift_task_alloc();
    v2[13] = v11;
    void *v11 = v2;
    v11[1] = sub_253AFF5C0;
    uint64_t v12 = sub_253AFFA80();
    return v13(v12);
  }
}

uint64_t sub_253AFF5C0()
{
  sub_253477168();
  sub_253477088();
  sub_253535478();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253535478();
  *uint64_t v5 = v4;
  *(void *)(v6 + 112) = v0;
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_253AFF6A0()
{
  sub_253477168();
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_253529DC4();
  return v1();
}

uint64_t sub_253AFF71C()
{
  sub_253477168();
  uint64_t v1 = sub_253AFFA50();
  v2(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

unint64_t UnwrappedNilError.description.getter()
{
  return 0xD000000000000012;
}

uint64_t destroy for UnwrappedNilError()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UnwrappedNilError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for UnwrappedNilError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UnwrappedNilError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for UnwrappedNilError()
{
  return &type metadata for UnwrappedNilError;
}

uint64_t sub_253AFFA30()
{
  return *(void *)(v0 + 72);
}

uint64_t sub_253AFFA50()
{
  return v0;
}

uint64_t sub_253AFFA64()
{
  return *(void *)(v0 + 96);
}

uint64_t sub_253AFFA80()
{
  return *(void *)(v0 + 16);
}

uint64_t Peekable.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = a3 + *(int *)(type metadata accessor for Peekable() + 36);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v6, 1, 1, AssociatedTypeWitness);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);
  return v8(a3, a1, a2);
}

uint64_t type metadata accessor for Peekable()
{
  return sub_253B00E64();
}

uint64_t Peekable.next()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_253B09E00();
  sub_253465998();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v14 - v10;
  uint64_t v12 = v2 + *(int *)(a1 + 36);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v14 - v10, v12, v6);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
    return sub_253B09E70();
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a2, v11, AssociatedTypeWitness);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v6);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v12, 1, 1, AssociatedTypeWitness);
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a2, 0, 1, AssociatedTypeWitness);
  }
}

uint64_t Peekable.peek()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v20 = *(void *)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_253B09E00();
  sub_253465998();
  uint64_t v7 = v6;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v20 - v12;
  uint64_t v14 = v2 + *(int *)(a1 + 36);
  uint64_t v15 = *(void (**)(uint64_t))(v7 + 16);
  sub_253B00E94();
  v15(v16);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v5);
    sub_253B09E70();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v14, v11, v5);
    sub_253B00E94();
    return ((uint64_t (*)(uint64_t))v15)(v17);
  }
  else
  {
    uint64_t v19 = v21;
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v21, v13, AssociatedTypeWitness);
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v19, 0, 1, AssociatedTypeWitness);
  }
}

uint64_t sub_253AFFED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_253AFFED8()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t v0 = sub_253B09E00();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v0;
}

uint64_t *sub_253AFFFD4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10;
  uint64_t v12 = v7 + v10;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v13 = *(void *)(v9 + 64);
  }
  else {
    size_t v13 = *(void *)(v9 + 64) + 1;
  }
  int v14 = *(_DWORD *)(v6 + 80) | v10;
  uint64_t v15 = v14;
  int v16 = v14 & 0x100000;
  if (v15 > 7 || v16 != 0 || (v12 & ~v11) + v13 > 0x18)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v15 + 16) & ~v15));
    swift_retain();
  }
  else
  {
    uint64_t v20 = AssociatedTypeWitness;
    uint64_t v21 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    uint64_t v22 = (const void *)(((unint64_t)a2 + v12) & v21);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v20))
    {
      memcpy((void *)(((unint64_t)a1 + v12) & v21), v22, v13);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v9 + 16))(((unint64_t)a1 + v12) & v21, v22, v20);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(((unint64_t)a1 + v12) & v21, 0, 1, v20);
    }
  }
  return a1;
}

uint64_t sub_253B001A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(uint64_t, void))v3)(a1, *(void *)(a2 + 16));
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v6 = (v4 + a1 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t result = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, 1, AssociatedTypeWitness);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 8);
    return v8(v6, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_253B002C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  int v10 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v8 + 84)) {
      size_t v12 = *(void *)(v8 + 64);
    }
    else {
      size_t v12 = *(void *)(v8 + 64) + 1;
    }
    memcpy(v10, v11, v12);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, AssociatedTypeWitness);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_253B003FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  int v10 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v11 = (const void *)((v6 + v9 + a2) & ~v9);
  LODWORD(v6) = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, AssociatedTypeWitness);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, AssociatedTypeWitness);
  if (v6)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, AssociatedTypeWitness);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, AssociatedTypeWitness);
      return a1;
    }
    int v13 = *(_DWORD *)(v8 + 84);
    size_t v14 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(v10, v11, AssociatedTypeWitness);
      return a1;
    }
    int v16 = *(void (**)(void *, uint64_t))(v8 + 8);
    uint64_t v15 = v8 + 8;
    v16(v10, AssociatedTypeWitness);
    int v13 = *(_DWORD *)(v15 + 76);
    size_t v14 = *(void *)(v15 + 56);
  }
  if (v13) {
    size_t v17 = v14;
  }
  else {
    size_t v17 = v14 + 1;
  }
  memcpy(v10, v11, v17);
  return a1;
}

uint64_t sub_253B00598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  int v10 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v8 + 84)) {
      size_t v12 = *(void *)(v8 + 64);
    }
    else {
      size_t v12 = *(void *)(v8 + 64) + 1;
    }
    memcpy(v10, v11, v12);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v10, v11, AssociatedTypeWitness);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_253B006D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  int v10 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v11 = (const void *)((v6 + v9 + a2) & ~v9);
  LODWORD(v6) = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, AssociatedTypeWitness);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, AssociatedTypeWitness);
  if (v6)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v10, v11, AssociatedTypeWitness);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, AssociatedTypeWitness);
      return a1;
    }
    int v13 = *(_DWORD *)(v8 + 84);
    size_t v14 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(v10, v11, AssociatedTypeWitness);
      return a1;
    }
    int v16 = *(void (**)(void *, uint64_t))(v8 + 8);
    uint64_t v15 = v8 + 8;
    v16(v10, AssociatedTypeWitness);
    int v13 = *(_DWORD *)(v15 + 76);
    size_t v14 = *(void *)(v15 + 56);
  }
  if (v13) {
    size_t v17 = v14;
  }
  else {
    size_t v17 = v14 + 1;
  }
  memcpy(v10, v11, v17);
  return a1;
}

uint64_t sub_253B00870(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v10) {
    unsigned int v11 = v10 - 1;
  }
  else {
    unsigned int v11 = 0;
  }
  if (v11 <= v7) {
    unsigned int v12 = v7;
  }
  else {
    unsigned int v12 = v11;
  }
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  if (v10) {
    uint64_t v14 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  else {
    uint64_t v14 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v15 = *(void *)(v6 + 64) + v13;
  if (a2 <= v12) {
    goto LABEL_30;
  }
  uint64_t v16 = v14 + (v15 & ~v13);
  char v17 = 8 * v16;
  if (v16 <= 3)
  {
    unsigned int v19 = ((a2 - v12 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      int v18 = *(_DWORD *)((char *)a1 + v16);
      if (!v18) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v19 > 0xFF)
    {
      int v18 = *(unsigned __int16 *)((char *)a1 + v16);
      if (!*(unsigned __int16 *)((char *)a1 + v16)) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v19 < 2)
    {
LABEL_30:
      if (v12)
      {
        if (v7 >= v11)
        {
          return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, v7, v5);
        }
        else
        {
          unsigned int v23 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(((unint64_t)a1 + v15) & ~v13, v10, AssociatedTypeWitness);
          if (v23 >= 2) {
            return v23 - 1;
          }
          else {
            return 0;
          }
        }
      }
      return 0;
    }
  }
  int v18 = *((unsigned __int8 *)a1 + v16);
  if (!*((unsigned char *)a1 + v16)) {
    goto LABEL_30;
  }
LABEL_20:
  int v20 = (v18 - 1) << v17;
  if (v16 > 3) {
    int v20 = 0;
  }
  if (v16)
  {
    if (v16 <= 3) {
      int v21 = v16;
    }
    else {
      int v21 = 4;
    }
    switch(v21)
    {
      case 2:
        int v22 = *a1;
        break;
      case 3:
        int v22 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v22 = *(_DWORD *)a1;
        break;
      default:
        int v22 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v22 = 0;
  }
  return v12 + (v22 | v20) + 1;
}

void sub_253B00AD4(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  int v11 = 0;
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = *(unsigned int *)(v12 + 84);
  unsigned int v14 = v13 - 1;
  if (!v13) {
    unsigned int v14 = 0;
  }
  if (v14 <= v9) {
    unsigned int v15 = v9;
  }
  else {
    unsigned int v15 = v14;
  }
  uint64_t v16 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v17 = *(void *)(v8 + 64) + v16;
  uint64_t v18 = v17 & ~v16;
  if (v13) {
    size_t v19 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  else {
    size_t v19 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + 1;
  }
  size_t v20 = v18 + v19;
  char v21 = 8 * (v18 + v19);
  if (a3 > v15)
  {
    if (v20 <= 3)
    {
      unsigned int v22 = ((a3 - v15 + ~(-1 << v21)) >> v21) + 1;
      if (HIWORD(v22))
      {
        int v11 = 4;
      }
      else if (v22 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v22 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  if (v15 < a2)
  {
    unsigned int v23 = ~v15 + a2;
    if (v20 < 4)
    {
      int v24 = (v23 >> v21) + 1;
      if (v20)
      {
        int v25 = v23 & ~(-1 << v21);
        bzero(a1, v20);
        if (v20 == 3)
        {
          *(_WORD *)a1 = v25;
          a1[2] = BYTE2(v25);
        }
        else if (v20 == 2)
        {
          *(_WORD *)a1 = v25;
        }
        else
        {
          *a1 = v25;
        }
      }
    }
    else
    {
      bzero(a1, v20);
      *(_DWORD *)a1 = v23;
      int v24 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v20] = v24;
        return;
      case 2:
        *(_WORD *)&a1[v20] = v24;
        return;
      case 3:
        goto LABEL_57;
      case 4:
        *(_DWORD *)&a1[v20] = v24;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v20] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v20] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_57:
      __break(1u);
      JUMPOUT(0x253B00E2CLL);
    case 4:
      *(_DWORD *)&a1[v20] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (!a2) {
        return;
      }
LABEL_29:
      if (v9 >= v14)
      {
        uint64_t v30 = (uint64_t)a1;
        uint64_t v31 = a2;
        uint64_t v13 = v9;
        uint64_t AssociatedTypeWitness = v7;
      }
      else
      {
        uint64_t v26 = (unsigned char *)((unint64_t)&a1[v17] & ~v16);
        if (v14 < a2)
        {
          if (v19 <= 3) {
            int v27 = ~(-1 << (8 * v19));
          }
          else {
            int v27 = -1;
          }
          if (v19)
          {
            int v28 = v27 & (~v14 + a2);
            if (v19 <= 3) {
              int v29 = v19;
            }
            else {
              int v29 = 4;
            }
            bzero(v26, v19);
            switch(v29)
            {
              case 2:
                *(_WORD *)uint64_t v26 = v28;
                break;
              case 3:
                *(_WORD *)uint64_t v26 = v28;
                _OWORD v26[2] = BYTE2(v28);
                break;
              case 4:
                *(_DWORD *)uint64_t v26 = v28;
                break;
              default:
                *uint64_t v26 = v28;
                break;
            }
          }
          return;
        }
        uint64_t v31 = (a2 + 1);
        uint64_t v30 = (uint64_t)v26;
      }
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, v31, v13, AssociatedTypeWitness);
      return;
  }
}

uint64_t sub_253B00E64()
{
  return swift_getGenericMetadata();
}

uint64_t Result<>.asyncMap<A>(_:)()
{
  sub_253477168();
  sub_253B015C8(v1, v2, v3, v4, v5);
  v0[9] = v6;
  uint64_t v7 = sub_253472828();
  sub_253B015F8(v7);
  v0[11] = v8;
  v0[12] = sub_253472828();
  sub_25347719C();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_253B00F44()
{
  uint64_t v1 = sub_253B01624();
  v2(v1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(void, void, void))(*(void *)(*(void *)(v0[5] + 24) - 8) + 32))(v0[2], v0[12], *(void *)(v0[5] + 24));
    sub_253B0A640();
    swift_storeEnumTagMultiPayload();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_2534771C0();
    return v3();
  }
  else
  {
    uint64_t v5 = sub_253B01648();
    v6(v5);
    sub_253B01614();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[13] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_253B010D0;
    uint64_t v8 = sub_253B01664();
    return v9(v8);
  }
}

uint64_t sub_253B010D0()
{
  sub_253477168();
  sub_253477088();
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v0, v1, v2);
}

uint64_t sub_253B011A0()
{
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
  sub_253B0A640();
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  return v1();
}

uint64_t Result<>.asyncFlatMap<A>(_:)()
{
  sub_253477168();
  sub_253B015C8(v1, v2, v3, v4, v5);
  v0[9] = v6;
  uint64_t v7 = sub_253472828();
  sub_253B015F8(v7);
  v0[11] = v8;
  v0[12] = sub_253472828();
  sub_25347719C();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_253B012F4()
{
  uint64_t v1 = sub_253B01624();
  v2(v1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(void, void, void))(*(void *)(*(void *)(v0[5] + 24) - 8) + 32))(v0[2], v0[12], *(void *)(v0[5] + 24));
    sub_253B0A640();
    swift_storeEnumTagMultiPayload();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_2534771C0();
    return v3();
  }
  else
  {
    uint64_t v5 = sub_253B01648();
    v6(v5);
    sub_253B01614();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[13] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_253B0147C;
    uint64_t v8 = sub_253B01664();
    return v9(v8);
  }
}

uint64_t sub_253B0147C()
{
  sub_253477168();
  sub_253477088();
  swift_task_dealloc();
  sub_25347719C();
  return MEMORY[0x270FA2498](v0, v1, v2);
}

uint64_t sub_253B0154C()
{
  sub_253477168();
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2534771C0();
  return v1();
}

uint64_t sub_253B015C8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = result;
  v6[3] = a2;
  v6[8] = *(void *)(a4 + 16);
  return result;
}

uint64_t sub_253B015F8(uint64_t result)
{
  *(void *)(v1 + 80) = result;
  return result;
}

uint64_t sub_253B01624()
{
  return *(void *)(v0 + 96);
}

uint64_t sub_253B01648()
{
  return *(void *)(v0 + 80);
}

uint64_t sub_253B01664()
{
  return *(void *)(v0 + 16);
}

void sub_253B0167C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_253B0A5F0();
    sub_253B09630();
    uint64_t v6 = sub_253B0A630();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v8 = v6 & ~v7;
    sub_253A3C804();
    if (v9)
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      if ((*v11 != a1 || v11[1] != a2) && (sub_253B0A4C0() & 1) == 0)
      {
        uint64_t v13 = ~v7;
        uint64_t v14 = (v8 + 1) & v13;
        sub_253A3C804();
        if (v15)
        {
          do
          {
            uint64_t v16 = (void *)(v10 + 16 * v14);
            if (*v16 == a1 && v16[1] == a2) {
              break;
            }
            if (sub_253B0A4C0()) {
              break;
            }
            uint64_t v14 = (v14 + 1) & v13;
            sub_253A3C804();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

uint64_t sub_253B01790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_253B0A5F0();
    sub_253B09630();
    uint64_t v6 = sub_253B0A630();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_253B0A4C0() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_253B0A4C0() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

void sub_253B018C8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    unint64_t v4 = sub_253B0A5E0() & ~(-1 << *(unsigned char *)(a2 + 32));
    if (((*(void *)(a2 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0
      && *(void *)(*(void *)(a2 + 48) + 8 * v4) != a1)
    {
      sub_253B035D8();
      if (v7)
      {
        do
        {
          if (*(void *)(v5 + 8 * v6) == a1) {
            break;
          }
          sub_253B035D8();
        }
        while ((v8 & 1) != 0);
      }
    }
  }
}

uint64_t String.quotedForPython.getter()
{
  return 34;
}

uint64_t String.quoted.getter()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_253B09890();
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    do
    {
      BOOL v4 = v2 == 34 && v3 == 0xE100000000000000;
      if (v4 || (sub_253B0A4C0() & 1) != 0) {
        sub_253B09860();
      }
      MEMORY[0x25A268850](v2, v3);
      swift_bridgeObjectRelease();
      uint64_t v2 = sub_253B09890();
      uint64_t v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_253B09860();
  return 34;
}

unint64_t String.toLowerSnakeCase.getter(uint64_t a1, unint64_t a2)
{
  return sub_253B01F34(0, a1, a2);
}

unint64_t sub_253B01ADC(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0) {
      uint64_t v3 = HIBYTE(a3) & 0xF;
    }
    else {
      uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
      uint64_t v4 = 11;
    }
    unint64_t v5 = v4 | (v3 << 16);
    uint64_t result = sub_253B09830();
    if (v6) {
      uint64_t result = v5;
    }
    if (4 * v3 >= result >> 14)
    {
      uint64_t v7 = sub_253B09940();
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_253B01BB0(uint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_253B01ADC(1uLL, a1, a2);
  uint64_t v6 = v5;
  uint64_t v7 = sub_253B09E30();
  if (v7)
  {
    uint64_t v8 = v7;
    unsigned int v22 = sub_253B034C0(v7, 0);
    uint64_t v9 = v8 & ~(v8 >> 63);
    swift_bridgeObjectRetain();
    uint64_t v10 = 4;
    while (1)
    {
      if (!v9)
      {
        __break(1u);
        goto LABEL_13;
      }
      if ((v4 ^ v6) < 0x4000) {
        break;
      }
      uint64_t v11 = &v22[v10];
      uint64_t v12 = sub_253B09E40();
      uint64_t v23 = v13;
      unint64_t v4 = sub_253B09E10();
      uint64_t *v11 = v12;
      v11[1] = v23;
      --v9;
      v10 += 2;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        uint64_t v14 = (uint64_t)v22;
        goto LABEL_8;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_253B01DBC(v14);
    swift_release();
    swift_bridgeObjectRetain();
    uint64_t v16 = v15;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
LABEL_13:
      sub_2535233B4();
      uint64_t v16 = v20;
    }
    unint64_t v17 = *(void *)(v16 + 16);
    if (v17 >= *(void *)(v16 + 24) >> 1)
    {
      sub_2535233B4();
      uint64_t v16 = v21;
    }
    *(void *)(v16 + 16) = v17 + 1;
    uint64_t v18 = v16 + 16 * v17;
    *(void *)(v18 + 32) = 0;
    *(void *)(v18 + 40) = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    return a1;
  }
  return result;
}

uint64_t sub_253B01DBC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
    sub_2539E7BE8();
    uint64_t v2 = v10;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain_n();
      sub_253462A5C(&qword_269CDE578);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2539E7BE8();
        uint64_t v2 = v10;
      }
      unint64_t v5 = *(void *)(v2 + 16);
      if (v5 >= *(void *)(v2 + 24) >> 1)
      {
        sub_2539E7BE8();
        uint64_t v2 = v10;
      }
      v4 += 16;
      *(void *)(v2 + 16) = v5 + 1;
      uint64_t v6 = v2 + 16 * v5;
      *(void *)(v6 + 32) = v8;
      *(void *)(v6 + 40) = v9;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_253B01EFC()
{
  uint64_t result = sub_25353D118(0xD00000000000003ELL, 0x8000000253B13F70);
  qword_269CE8E80 = result;
  return result;
}

unint64_t sub_253B01F34(int a1, uint64_t a2, unint64_t a3)
{
  int v79 = a1;
  uint64_t v78 = sub_253B0A6B0();
  sub_253465998();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_253B05120();
  sub_253465998();
  uint64_t v8 = v7;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v74 - v13;
  uint64_t v15 = swift_allocObject();
  uint64_t v74 = v15;
  *(void *)(v15 + 16) = MEMORY[0x263F8EE78];
  uint64_t v16 = (uint64_t *)(v15 + 16);
  uint64_t v17 = sub_253B09800();
  sub_253B02628(v17);
  uint64_t v80 = a2;
  unint64_t v81 = a3;
  sub_253B05100();
  sub_25346C800();
  uint64_t v18 = sub_253B09EB0();
  unint64_t v20 = v19;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v76 = v8 + 8;
  uint64_t v77 = v6;
  char v75 = v21;
  v21(v14, v6);
  uint64_t v22 = sub_253B01BB0(v18, v20);
  unint64_t v24 = v23;
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = HIBYTE(v24) & 0xF;
  uint64_t v80 = v22;
  unint64_t v81 = v24;
  if ((v24 & 0x2000000000000000) == 0) {
    uint64_t v27 = v22 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v82 = 0;
  uint64_t v83 = v27;
  uint64_t v84 = v26;
  unint64_t v85 = 0;
  char v86 = 0;
  swift_beginAccess();
  unint64_t result = sub_253B09890();
  if (!v29)
  {
LABEL_66:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v69 = sub_2534B3D1C(*v16);
    if (v70)
    {
      if (v69 == 95 && v70 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v72 = sub_253B0A4C0();
        swift_bridgeObjectRelease();
        if ((v72 & 1) == 0) {
          goto LABEL_75;
        }
      }
      sub_253B03610();
      sub_253A42548();
      swift_endAccess();
      swift_bridgeObjectRelease();
    }
LABEL_75:
    uint64_t v80 = *(void *)(v74 + 16);
    swift_bridgeObjectRetain();
    sub_253462A5C(&qword_269CE8E88);
    sub_25350D86C(&qword_269CE8E90, &qword_269CE8E88);
    uint64_t v73 = sub_253B09920();
    swift_release();
    return v73;
  }
  uint64_t v30 = result;
  uint64_t v31 = v29;
  char v32 = 0;
  while (1)
  {
    unint64_t v33 = *(void *)(v84 + 16);
    if (v85 == v33)
    {
      swift_bridgeObjectRelease();
      goto LABEL_66;
    }
    if (v85 >= v33) {
      break;
    }
    uint64_t v34 = *(void *)(v84 + 16 * v85++ + 40);
    swift_bridgeObjectRetain();
    if (v79)
    {
      sub_253B050F0();
      swift_bridgeObjectRetain();
      sub_253981354();
      uint64_t v36 = v35;
      swift_bridgeObjectRelease();
      if ((v36 & 0x100000000) != 0) {
        int v37 = 0;
      }
      else {
        int v37 = sub_253B05110();
      }
      v75(v12, v77);
    }
    else
    {
      int v37 = 0;
    }
    if (qword_269CDB0B8 != -1) {
      swift_once();
    }
    if ((sub_253B01790(v30, v31, qword_269CE8E80) | v37))
    {
      if ((sub_253B0365C() & 1) == 0) {
        goto LABEL_24;
      }
      unint64_t result = sub_253B03644();
      if ((result & 0x100000000) != 0) {
        goto LABEL_78;
      }
      sub_253B0A6C0();
      char v38 = sub_253B0A690();
      uint64_t v39 = sub_253B03578();
      v40(v39);
      if ((v38 & 1) == 0)
      {
LABEL_24:
        if ((sub_253B0362C() & 1) == 0) {
          goto LABEL_30;
        }
        if ((sub_253B0365C() & 1) == 0) {
          goto LABEL_84;
        }
        unint64_t result = sub_253B03644();
        if ((result & 0x100000000) != 0) {
          goto LABEL_80;
        }
        sub_253B0A6C0();
        char v41 = sub_253B0A6A0();
        uint64_t v42 = sub_253B03578();
        v43(v42);
        if ((v41 & 1) == 0)
        {
LABEL_84:
          if (sub_253B0362C() & 1) != 0 && (sub_253B09600())
          {
LABEL_30:
            swift_bridgeObjectRelease();
            goto LABEL_47;
          }
        }
      }
      if ((v32 & 1) == 0) {
        goto LABEL_45;
      }
      if (!v34) {
        goto LABEL_47;
      }
      sub_253578D38();
      if (sub_253B09620())
      {
        uint64_t v44 = sub_253578D38();
        unint64_t result = sub_253B033E0(v44, v45);
        if ((result & 0x100000000) != 0) {
          goto LABEL_81;
        }
        sub_253B0A6C0();
        char v46 = sub_253B0A690();
        uint64_t v47 = sub_253B03578();
        v48(v47);
        if (v46) {
          goto LABEL_30;
        }
      }
      sub_253578D38();
      if (sub_253B09610())
      {
        sub_253578D38();
        char v55 = sub_253B09650();
        swift_bridgeObjectRelease();
        if (v55)
        {
LABEL_47:
          uint64_t v56 = sub_253B095E0();
          unint64_t v58 = v57;
          sub_253B03610();
          sub_253478674(v56, v58);
LABEL_48:
          swift_endAccess();
          goto LABEL_49;
        }
      }
      else
      {
LABEL_45:
        swift_bridgeObjectRelease();
      }
      sub_253B0268C(v74);
      goto LABEL_47;
    }
    swift_bridgeObjectRelease();
    uint64_t v49 = *(void *)(*v16 + 16);
    if (v49)
    {
      uint64_t v50 = *v16 + 16 * v49;
      BOOL v51 = *(void *)(v50 + 16) == 95 && *(void *)(v50 + 24) == 0xE100000000000000;
      if (!v51 && (sub_253B0A4C0() & 1) == 0)
      {
        sub_253B03610();
        uint64_t v52 = *v16;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_253523380();
          uint64_t v52 = v67;
        }
        unint64_t v53 = *(void *)(v52 + 16);
        if (v53 >= *(void *)(v52 + 24) >> 1)
        {
          sub_253523380();
          uint64_t v52 = v68;
        }
        *(void *)(v52 + 16) = v53 + 1;
        uint64_t v54 = v52 + 16 * v53;
        *(void *)(v54 + 32) = 95;
        *(void *)(v54 + 40) = 0xE100000000000000;
        *uint64_t v16 = v52;
        goto LABEL_48;
      }
    }
LABEL_49:
    if (sub_253B0365C())
    {
      unint64_t result = sub_253B03644();
      if ((result & 0x100000000) != 0) {
        goto LABEL_77;
      }
      sub_253B0A6C0();
      char v59 = sub_253B0A690();
      uint64_t v60 = sub_253B03578();
      v61(v60);
      if (v59) {
        goto LABEL_59;
      }
    }
    if ((sub_253B0362C() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      if (v86 == 1) {
        goto LABEL_66;
      }
      char v32 = 0;
      goto LABEL_63;
    }
    if (sub_253B0365C())
    {
      unint64_t result = sub_253B03644();
      if ((result & 0x100000000) != 0) {
        goto LABEL_79;
      }
      sub_253B0A6C0();
      char v62 = sub_253B0A6A0();
      uint64_t v63 = sub_253B03578();
      v64(v63);
      if (v62) {
        goto LABEL_59;
      }
    }
    if ((sub_253B0362C() & 1) == 0)
    {
LABEL_59:
      swift_bridgeObjectRelease();
      if (v86) {
        goto LABEL_66;
      }
      char v32 = 1;
    }
    else
    {
      char v65 = sub_253B09600();
      swift_bridgeObjectRelease();
      if (v86) {
        goto LABEL_66;
      }
      char v32 = v65 ^ 1;
    }
LABEL_63:
    unint64_t result = sub_253B09890();
    uint64_t v30 = result;
    uint64_t v31 = v66;
    if (!v66) {
      goto LABEL_66;
    }
  }
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
  return result;
}

void sub_253B02628(uint64_t a1)
{
  uint64_t v3 = *v1;
  if (!swift_isUniquelyReferenced_nonNull_native() || a1 > *(void *)(v3 + 24) >> 1)
  {
    sub_253523380();
    uint64_t v3 = v4;
  }
  *uint64_t v1 = v3;
}

uint64_t sub_253B0268C(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  uint64_t result = *(void *)(a1 + 16);
  if (*(void *)(result + 16))
  {
    uint64_t v4 = sub_2534B3D1C(result);
    if (!v5)
    {
LABEL_8:
      swift_beginAccess();
      sub_2539DFA7C();
      uint64_t v8 = *(void *)(*v2 + 16);
      sub_2539DFB50(v8);
      uint64_t v9 = *v2;
      *(void *)(v9 + 16) = v8 + 1;
      uint64_t v10 = v9 + 16 * v8;
      *(void *)(v10 + 32) = 95;
      *(void *)(v10 + 40) = 0xE100000000000000;
      return swift_endAccess();
    }
    if (v4 != 95 || v5 != 0xE100000000000000)
    {
      char v7 = sub_253B0A4C0();
      uint64_t result = swift_bridgeObjectRelease();
      if (v7) {
        return result;
      }
      goto LABEL_8;
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t String.toLowerSnakeCaseRetainSymbols.getter(uint64_t a1, unint64_t a2)
{
  return sub_253B01F34(1, a1, a2);
}

uint64_t String.toTitleCase.getter(uint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_253B02AFC(0x7FFFFFFFFFFFFFFFLL, 1, a1, a2);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v39 = a1;
    unint64_t v40 = a2;
    v45[0] = MEMORY[0x263F8EE78];
    uint64_t v6 = v45;
    sub_2539E6C84();
    uint64_t v7 = v45[0];
    uint64_t v8 = v4 + 56;
    while (1)
    {
      unint64_t v9 = *(void *)(v8 - 24);
      unint64_t v10 = *(void *)(v8 - 16);
      swift_bridgeObjectRetain_n();
      uint64_t v11 = sub_253B03590();
      unint64_t v13 = (v12 & 1) != 0 ? v10 : v11;
      if (v13 >> 14 < v9 >> 14) {
        break;
      }
      uint64_t v41 = v5;
      uint64_t v42 = v7;
      uint64_t v14 = sub_253B03674(v9, v13);
      uint64_t v16 = v15;
      uint64_t v18 = v17;
      uint64_t v20 = v19;
      swift_bridgeObjectRelease();
      uint64_t v21 = MEMORY[0x25A268760](v14, v16, v18, v20);
      uint64_t v4 = v22;
      swift_bridgeObjectRelease();
      uint64_t v43 = v21;
      unint64_t v44 = v4;
      sub_25346C800();
      uint64_t v6 = (uint64_t *)sub_253B09EA0();
      uint64_t v5 = v23;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      unint64_t v24 = sub_253B03590();
      if (v25) {
        unint64_t v24 = v10;
      }
      if (v10 >> 14 < v24 >> 14) {
        goto LABEL_21;
      }
      uint64_t v26 = sub_253B03674(v24, v10);
      uint64_t v28 = v27;
      uint64_t v30 = v29;
      uint64_t v32 = v31;
      swift_bridgeObjectRelease();
      MEMORY[0x25A268760](v26, v28, v30, v32);
      swift_bridgeObjectRelease();
      uint64_t v43 = (uint64_t)v6;
      unint64_t v44 = v5;
      swift_bridgeObjectRetain();
      uint64_t v6 = &v43;
      sub_253B09860();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v33 = v43;
      uint64_t v4 = v44;
      uint64_t v7 = v42;
      v45[0] = v42;
      unint64_t v34 = *(void *)(v42 + 16);
      if (v34 >= *(void *)(v42 + 24) >> 1)
      {
        uint64_t v6 = v45;
        sub_2539E6C84();
        uint64_t v7 = v45[0];
      }
      *(void *)(v7 + 16) = v34 + 1;
      uint64_t v35 = v7 + 16 * v34;
      *(void *)(v35 + 32) = v33;
      *(void *)(v35 + 40) = v4;
      v8 += 32;
      uint64_t v5 = v41 - 1;
      if (v41 == 1)
      {
        swift_bridgeObjectRelease();
        a1 = v39;
        a2 = v40;
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    swift_once();
LABEL_17:
    char v37 = sub_253B01790(v4, (uint64_t)v6, qword_269CE8E80);
    swift_bridgeObjectRelease();
    if ((v37 & 1) == 0)
    {
      uint64_t v43 = 95;
      unint64_t v44 = 0xE100000000000000;
      sub_253B09860();
      swift_bridgeObjectRelease();
      return v43;
    }
    return v5;
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = MEMORY[0x263F8EE78];
LABEL_15:
  uint64_t v43 = v7;
  sub_253462A5C(&qword_269CDC550);
  sub_25350D86C((unint64_t *)&qword_269CDC558, &qword_269CDC550);
  uint64_t v5 = sub_253B096A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_2539815B4(a1, a2);
  uint64_t v6 = v36;
  swift_bridgeObjectRelease();
  if (v6)
  {
    if (qword_269CDB0B8 == -1) {
      goto LABEL_17;
    }
    goto LABEL_22;
  }
  return v5;
}

uint64_t sub_253B02AFC(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  if ((a1 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = MEMORY[0x263F8EE78];
    uint64_t v43 = v7 + 16;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = 15;
    uint64_t v9 = HIBYTE(a4) & 0xF;
    if (!a1 || ((a4 & 0x2000000000000000) != 0 ? (uint64_t v10 = HIBYTE(a4) & 0xF) : (uint64_t v10 = a3 & 0xFFFFFFFFFFFFLL), !v10))
    {
      if ((a4 & 0x2000000000000000) == 0) {
        uint64_t v9 = a3 & 0xFFFFFFFFFFFFLL;
      }
      uint64_t v31 = 7;
      if (((a4 >> 60) & ((a3 & 0x800000000000000) == 0)) != 0) {
        uint64_t v31 = 11;
      }
      sub_253B03290(v31 | (v9 << 16), v8, a2 & 1, v7);
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(v7 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      swift_release();
      return v11;
    }
    uint64_t v42 = a1;
    unint64_t v48 = 4 * v10;
    uint64_t v11 = MEMORY[0x263F8EE78];
    unint64_t v12 = 15;
    unint64_t v13 = 15;
    uint64_t v14 = 15;
    do
    {
      uint64_t v15 = sub_253B09910();
      uint64_t v17 = v16;
      if (qword_269CDB0B8 != -1) {
        swift_once();
      }
      char v18 = sub_253B01790(v15, v17, qword_269CE8E80);
      swift_bridgeObjectRelease();
      if (v18)
      {
        unint64_t v19 = sub_253B09810();
      }
      else
      {
        char v20 = (v13 >> 14 == v12 >> 14) & a2;
        if (!v20)
        {
          if (v12 >> 14 < v13 >> 14) {
            goto LABEL_37;
          }
          uint64_t v21 = sub_253B09940();
          uint64_t v45 = v22;
          uint64_t v46 = v21;
          uint64_t v24 = v23;
          uint64_t v44 = v25;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_253523BA4();
            uint64_t v11 = v29;
          }
          unint64_t v26 = *(void *)(v11 + 16);
          if (v26 >= *(void *)(v11 + 24) >> 1)
          {
            sub_253523BA4();
            uint64_t v11 = v30;
          }
          *(void *)(v11 + 16) = v26 + 1;
          uint64_t v27 = (void *)(v11 + 32 * v26);
          v27[4] = v46;
          v27[5] = v45;
          v27[6] = v24;
          v27[7] = v44;
          *(void *)uint64_t v43 = v11;
        }
        unint64_t v19 = sub_253B09810();
        *(void *)(v8 + 16) = v19;
        if (v20)
        {
          unint64_t v13 = v19;
          uint64_t v14 = v19;
        }
        else
        {
          unint64_t v13 = v19;
          uint64_t v14 = v19;
          if (*(void *)(v11 + 16) == v42) {
            break;
          }
        }
      }
      BOOL v28 = v48 == v19 >> 14;
      unint64_t v12 = v19;
      unint64_t v19 = v14;
    }
    while (!v28);
    if (v48 == v13 >> 14 && (a2 & 1) != 0)
    {
      swift_bridgeObjectRelease();
LABEL_35:
      swift_bridgeObjectRetain();
      swift_release();
      swift_release();
      return v11;
    }
    if (v48 >= v19 >> 14)
    {
      uint64_t v32 = sub_253B09940();
      uint64_t v34 = v33;
      uint64_t v36 = v35;
      uint64_t v38 = v37;
      swift_bridgeObjectRelease();
      sub_2539DFAC4();
      uint64_t v39 = *(void *)(*(void *)v43 + 16);
      sub_2539DFB98(v39);
      uint64_t v11 = *(void *)v43;
      *(void *)(v11 + 16) = v39 + 1;
      unint64_t v40 = (void *)(v11 + 32 * v39);
      v40[4] = v32;
      v40[5] = v34;
      uint64_t v40[6] = v36;
      v40[7] = v38;
      *(void *)uint64_t v43 = v11;
      goto LABEL_35;
    }
  }
LABEL_37:
  uint64_t result = sub_253B0A1C0();
  __break(1u);
  return result;
}

uint64_t String.escapedForPython.getter()
{
  sub_25346C800();
  sub_253B09EC0();
  uint64_t v2 = v1;
  sub_253B03538();
  sub_253B035BC();
  uint64_t v5 = (uint64_t)&v5;
  uint64_t v6 = v0;
  sub_253B03538();
  sub_253B035F4();
  uint64_t v5 = (uint64_t)&v5;
  uint64_t v6 = v2;
  sub_253B03538();
  sub_253B035BC();
  uint64_t v5 = (uint64_t)&v5;
  uint64_t v6 = v0;
  sub_253B03538();
  sub_253B035F4();
  uint64_t v5 = (uint64_t)&v5;
  uint64_t v6 = v2;
  sub_253B03538();
  sub_253B035BC();
  uint64_t v5 = (uint64_t)&v5;
  uint64_t v6 = v0;
  sub_253B03538();
  sub_253B035F4();
  uint64_t v5 = (uint64_t)&v5;
  uint64_t v6 = v2;
  sub_253B03538();
  sub_253B035BC();
  uint64_t v5 = (uint64_t)&v5;
  uint64_t v6 = v0;
  uint64_t v3 = sub_253B03538();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t String.indented.getter()
{
  return 538976288;
}

uint64_t String.blockIndented.getter()
{
  sub_253B09860();
  sub_25346C800();
  uint64_t v0 = sub_253B09EC0();
  swift_bridgeObjectRelease();
  return v0;
}

Swift::String __swiftcall String.truncateForPrompting(allowedLength:)(Swift::Int allowedLength)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  Swift::Int v6 = sub_253B09800();
  swift_bridgeObjectRetain();
  if (v6 > allowedLength)
  {
    uint64_t v7 = sub_253467EBC(allowedLength);
    uint64_t v20 = MEMORY[0x25A268760](v7);
    uint64_t v21 = v8;
    sub_253B09840();
    uint64_t v9 = MEMORY[0x25A268E50](v20, v21);
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
    uint64_t v4 = MEMORY[0x25A268760](v9, v11, v13, v15);
    uint64_t v3 = v16;
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = v4;
  char v18 = v3;
  result._object = v18;
  result._countAndFlagsBits = v17;
  return result;
}

uint64_t sub_253B03290(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_253B09940();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    sub_2539DFAC4();
    uint64_t v14 = *(void *)(*(void *)(a4 + 16) + 16);
    sub_2539DFB98(v14);
    uint64_t v15 = *(void *)(a4 + 16);
    *(void *)(v15 + 16) = v14 + 1;
    uint64_t v16 = (void *)(v15 + 32 * v14);
    v16[4] = v7;
    uint64_t v16[5] = v9;
    void v16[6] = v11;
    v16[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_253B0A1C0();
  __break(1u);
  return result;
}

uint64_t sub_253B03398()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_253B033D0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

unint64_t sub_253B033E0(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    sub_2539E9FE8();
    if ((a2 & 0x1000000000000000) != 0)
    {
      unsigned int v5 = sub_253B09FF0();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
        sub_253B0A0A0();
      }
      unsigned int v5 = sub_253B0A0B0();
    }
  }
  else
  {
    unsigned int v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

void *sub_253B034C0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_253462A5C(&qword_269CDE568);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * ((uint64_t)(v5 - 32) / 16);
  return v4;
}

uint64_t sub_253B03538()
{
  return sub_253B09EC0();
}

uint64_t sub_253B03578()
{
  return v0;
}

uint64_t sub_253B03590()
{
  return MEMORY[0x270F9E4B0](v2, 1, v3, v2, v3, v0, v1);
}

uint64_t sub_253B035BC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_253B035F4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_253B03610()
{
  return swift_beginAccess();
}

uint64_t sub_253B0362C()
{
  return sub_253B09610();
}

unint64_t sub_253B03644()
{
  return sub_253B033E0(v0, v1);
}

uint64_t sub_253B0365C()
{
  return sub_253B09620();
}

uint64_t sub_253B03674(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270F9E508](a1, a2, v4, v5, v2, v3);
}

uint64_t ToolDefinition.promptDefinition.getter()
{
  uint64_t v1 = sub_253B09150();
  sub_253465998();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_253B092E0();
  sub_253465998();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = 543581540;
  unint64_t v33 = 0xE400000000000000;
  sub_253B08B00();
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_253B09860();
  uint64_t v13 = sub_253B08A80();
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    unint64_t v26 = v6;
    uint64_t v27 = v3;
    uint64_t v28 = v0;
    uint64_t v29 = v1;
    uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v15 = v9 + 16;
    uint64_t v16 = v17;
    unint64_t v18 = (*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64);
    v25[1] = v13;
    unint64_t v19 = v13 + v18;
    uint64_t v20 = *(void *)(v15 + 56);
    do
    {
      v16(v12, v19, v7);
      uint64_t v30 = sub_253B092D0();
      uint64_t v31 = v21;
      sub_253B09860();
      sub_253B09860();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v12, v7);
      v19 += v20;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    uint64_t v1 = v29;
    uint64_t v6 = v26;
    uint64_t v3 = v27;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = *(void *)(sub_253B08A80() + 16);
  swift_bridgeObjectRelease();
  if (v22) {
    sub_2534CFBC8(2);
  }
  uint64_t v23 = sub_253B09860();
  MEMORY[0x25A267A70](v23);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
  sub_253B09860();
  sub_253B09860();
  return v32;
}

uint64_t TypeIdentifier.pythonType.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_253B091F0();
  sub_253465998();
  uint64_t v4 = v3;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t)&v38 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v38 - v11;
  uint64_t v13 = *(void (**)(void))(v4 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v13)((char *)&v38 - v11, v1, v2);
  int v14 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v12, v2);
  if (v14 != *MEMORY[0x263F80760])
  {
    if (v14 == *MEMORY[0x263F80748])
    {
      sub_253B03EEC();
      v13();
      sub_253B03F00();
      v19();
      uint64_t v20 = sub_253B091A0();
      uint64_t v21 = swift_projectBox();
      uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 88))(v21, v20);
      if (v22 == *MEMORY[0x263F80658])
      {
        swift_release();
        uint64_t v9 = 0x7972657551;
        goto LABEL_69;
      }
      uint64_t v9 = v22;
      if (v22 == *MEMORY[0x263F80638]
        || v22 == *MEMORY[0x263F80618]
        || v22 == *MEMORY[0x263F80670]
        || v22 == *MEMORY[0x263F80650])
      {
        goto LABEL_22;
      }
      if (v22 == *MEMORY[0x263F80678])
      {
        swift_release();
        uint64_t v9 = 0x79636E6572727543;
        goto LABEL_69;
      }
      if (v22 == *MEMORY[0x263F80648])
      {
        swift_release();
        uint64_t v9 = 1701603654;
        goto LABEL_69;
      }
      BOOL v30 = v22 == *MEMORY[0x263F80680] || v22 == *MEMORY[0x263F80610];
      BOOL v31 = v30 || v22 == *MEMORY[0x263F80628];
      if (v31 || v22 == *MEMORY[0x263F80668]) {
        goto LABEL_22;
      }
      if (v22 == *MEMORY[0x263F80660])
      {
        swift_release();
        uint64_t v9 = 0x6E6F73726550;
        goto LABEL_69;
      }
      if (v22 == *MEMORY[0x263F80690])
      {
        swift_release();
        uint64_t v9 = 0x72616D6563616C50;
        goto LABEL_69;
      }
      BOOL v34 = v22 == *MEMORY[0x263F80630] || v22 == *MEMORY[0x263F80640];
      if (v34 || v22 == *MEMORY[0x263F80688])
      {
LABEL_22:
        sub_253B03F10();
        swift_release();
        goto LABEL_69;
      }
      int v36 = *MEMORY[0x263F80620];
      swift_release();
      if (v9 == v36)
      {
        uint64_t v9 = 0x6D6572757361654DLL;
        goto LABEL_69;
      }
    }
    else if (v14 == *MEMORY[0x263F80740])
    {
      sub_253B03EEC();
      v13();
      sub_253B03F00();
      v23();
      uint64_t v9 = *(void *)(*(void *)v9 + 32);
      swift_bridgeObjectRetain();
      swift_release();
      goto LABEL_69;
    }
LABEL_68:
    sub_253B03F10();
    goto LABEL_69;
  }
  sub_253B03EEC();
  v13();
  sub_253B03F00();
  v15();
  uint64_t v16 = sub_253B091B0();
  uint64_t v17 = swift_projectBox();
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 88))(v17, v16);
  if (v18 != *MEMORY[0x263F80708])
  {
    uint64_t v9 = v18;
    if (v18 == *MEMORY[0x263F806F0])
    {
      swift_release();
      uint64_t v9 = 1819242338;
      goto LABEL_69;
    }
    if (v18 == *MEMORY[0x263F80710])
    {
      swift_release();
      uint64_t v9 = 0x74616F6C66;
      goto LABEL_69;
    }
    if (v18 == *MEMORY[0x263F80720]
      || v18 == *MEMORY[0x263F806F8]
      || v18 == *MEMORY[0x263F806C0]
      || v18 == *MEMORY[0x263F806E8])
    {
      uint64_t v9 = 7500915;
      swift_release();
      goto LABEL_69;
    }
    if (v18 == *MEMORY[0x263F80698])
    {
      swift_release();
      uint64_t v9 = 1952672100;
      goto LABEL_69;
    }
    int v33 = *MEMORY[0x263F806D0];
    swift_release();
    if (v9 == v33)
    {
      uint64_t v9 = 7500915;
      goto LABEL_69;
    }
    goto LABEL_68;
  }
  swift_release();
  uint64_t v9 = 1701736270;
LABEL_69:
  (*(void (**)(char *, uint64_t))(v4 + 8))(v12, v2);
  return v9;
}

uint64_t TypeIdentifier.pythonDefinition.getter()
{
  return 0;
}

uint64_t sub_253B03F24(void *a1)
{
  uint64_t v3 = sub_253B05390();
  sub_253465998();
  uint64_t v5 = v4;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v19 - v10;
  sub_253B04504((uint64_t)v19 - v10);
  sub_253B04F7C();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v9, v11, v3);
  id v12 = sub_253B046D4((uint64_t)v9, a1);
  if (v1)
  {
    uint64_t v13 = sub_253B04FBC();
    return v14(v13);
  }
  else
  {
    id v16 = v12;
    uint64_t v17 = sub_253B04FBC();
    v18(v17);
    type metadata accessor for SbertQuantizedEmbeddingModel();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v16;
  }
  return result;
}

uint64_t sub_253B040BC()
{
  return sub_253B04A10((uint64_t)&unk_270341A40);
}

id sub_253B040C8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x64695F6E656B6F74 && a2 == 0xE900000000000073;
  if (v3 || (sub_253B0A4C0() & 1) != 0)
  {
    uint64_t v6 = (void *)(v2 + 16);
    return objc_msgSend(self, sel_featureValueWithMultiArray_, *v6);
  }
  BOOL v7 = a1 == 0x5F676E6964646170 && a2 == 0xEC0000006B73616DLL;
  if (v7 || (sub_253B0A4C0() & 1) != 0)
  {
    uint64_t v6 = (void *)(v2 + 24);
    return objc_msgSend(self, sel_featureValueWithMultiArray_, *v6);
  }
  return 0;
}

uint64_t sub_253B041E8()
{
  return v0;
}

uint64_t sub_253B04210()
{
  sub_253B041E8();
  return MEMORY[0x270FA0228](v0, 32, 7);
}

uint64_t type metadata accessor for SbertQuantizedEmbeddingModelInput()
{
  return self;
}

void sub_253B04268()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = (void *)sub_253B096D0();
  id v3 = objc_msgSend(v1, sel_featureValueForName_, v2);

  if (!v3)
  {
    __break(1u);
    goto LABEL_5;
  }
  id v4 = objc_msgSend(v3, sel_multiArrayValue);

  if (!v4) {
LABEL_5:
  }
    __break(1u);
}

uint64_t sub_253B0436C()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_featureNames);
  uint64_t v2 = sub_253B09C50();

  return v2;
}

id sub_253B043C4()
{
  id v1 = *(void **)(v0 + 16);
  uint64_t v2 = (void *)sub_253B096D0();
  id v3 = objc_msgSend(v1, sel_featureValueForName_, v2);

  return v3;
}

id sub_253B0442C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v5 = sub_253B096E0();
  uint64_t v7 = v6;
  swift_retain();
  uint64_t v8 = (void *)a4(v5, v7);
  swift_release();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_253B044A8()
{
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t type metadata accessor for SbertQuantizedEmbeddingModelOutput()
{
  return self;
}

uint64_t sub_253B04504@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_253B05390();
  sub_253465998();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253462A5C((uint64_t *)&unk_26B248C70);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v12 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  id v13 = sub_253B04EA4(0xD00000000000001CLL, 0x8000000253B6E1A0, 0x636C65646F6D6C6DLL, 0xE800000000000000, v12);
  if (v13)
  {
    int v14 = v13;
    sub_253B05340();

    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v15(v10, v7, v2);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v2);
    uint64_t result = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v2);
    if (result != 1)
    {

      return ((uint64_t (*)(uint64_t, char *, uint64_t))v15)(a1, v10, v2);
    }
  }
  else
  {
    uint64_t result = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 1, 1, v2);
  }
  __break(1u);
  return result;
}

id sub_253B046D4(uint64_t a1, void *a2)
{
  v10[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = (void *)sub_253B05320();
  v10[0] = 0;
  id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_modelWithContentsOfURL_configuration_error_, v4, a2, v10);

  if (v5)
  {
    id v6 = v10[0];
  }
  else
  {
    id v7 = v10[0];
    sub_253B052D0();

    swift_willThrow();
  }

  uint64_t v8 = sub_253B05390();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
  return v5;
}

uint64_t sub_253B047F4(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00DC8]), sel_init);
  uint64_t v3 = sub_253B04860(a1, (uint64_t)v2);

  return v3;
}

uint64_t sub_253B04860(uint64_t a1, uint64_t a2)
{
  v12[1] = *(id *)MEMORY[0x263EF8340];
  id v5 = *(void **)(v2 + 16);
  v12[0] = 0;
  id v6 = objc_msgSend(v5, sel_predictionFromFeatures_options_error_, a1, a2, v12);
  id v7 = v12[0];
  if (v6)
  {
    id v8 = v6;
    type metadata accessor for SbertQuantizedEmbeddingModelOutput();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v8;
    id v9 = v7;
  }
  else
  {
    id v10 = v12[0];
    sub_253B052D0();

    swift_willThrow();
  }
  return v3;
}

uint64_t sub_253B04938(void *a1, void *a2)
{
  type metadata accessor for SbertQuantizedEmbeddingModelInput();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = sub_253B047F4(v4);
  swift_release();
  return v7;
}

uint64_t sub_253B049B4()
{
  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t type metadata accessor for SbertQuantizedEmbeddingModel()
{
  return self;
}

uint64_t sub_253B04A10(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = MEMORY[0x263F8EE88];
    goto LABEL_25;
  }
  sub_253462A5C(&qword_269CDB3E0);
  uint64_t result = sub_253B09FC0();
  uint64_t v3 = result;
  uint64_t v24 = *(void *)(a1 + 16);
  if (!v24)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return v3;
  }
  unint64_t v4 = 0;
  uint64_t v5 = result + 56;
  while (v4 < *(void *)(a1 + 16))
  {
    id v6 = (uint64_t *)(a1 + 32 + 16 * v4);
    uint64_t v8 = *v6;
    uint64_t v7 = v6[1];
    sub_253B0A5F0();
    swift_bridgeObjectRetain();
    sub_253B09630();
    uint64_t result = sub_253B0A630();
    uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v10 = result & ~v9;
    unint64_t v11 = v10 >> 6;
    uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
    uint64_t v13 = 1 << v10;
    if (((1 << v10) & v12) != 0)
    {
      uint64_t v14 = *(void *)(v3 + 48);
      uint64_t v15 = (void *)(v14 + 16 * v10);
      BOOL v16 = *v15 == v8 && v15[1] == v7;
      if (v16 || (uint64_t result = sub_253B0A4C0(), (result & 1) != 0))
      {
LABEL_11:
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      uint64_t v17 = ~v9;
      while (1)
      {
        unint64_t v10 = (v10 + 1) & v17;
        unint64_t v11 = v10 >> 6;
        uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
        uint64_t v13 = 1 << v10;
        if ((v12 & (1 << v10)) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * v10);
        if (*v18 != v8 || v18[1] != v7)
        {
          uint64_t result = sub_253B0A4C0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_11;
      }
    }
    *(void *)(v5 + 8 * v11) = v13 | v12;
    uint64_t v20 = (void *)(*(void *)(v3 + 48) + 16 * v10);
    *uint64_t v20 = v8;
    v20[1] = v7;
    uint64_t v21 = *(void *)(v3 + 16);
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_27;
    }
    *(void *)(v3 + 16) = v23;
LABEL_22:
    if (++v4 == v24) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_253B04BE0(uint64_t a1)
{
  uint64_t v2 = sub_253B08A20();
  sub_253465998();
  uint64_t v32 = v3;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  int v36 = (char *)&v27 - v8;
  if (!*(void *)(a1 + 16))
  {
    uint64_t v10 = MEMORY[0x263F8EE88];
    goto LABEL_16;
  }
  sub_253462A5C(&qword_269CE8E98);
  uint64_t result = sub_253B09FC0();
  uint64_t v10 = result;
  uint64_t v31 = *(void *)(a1 + 16);
  if (!v31)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return v10;
  }
  unint64_t v11 = 0;
  uint64_t v30 = a1 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
  uint64_t v34 = v32 + 16;
  uint64_t v35 = result + 56;
  uint64_t v12 = (void (**)(char *, uint64_t))(v32 + 8);
  uint64_t v28 = a1;
  uint64_t v29 = (uint64_t (**)(uint64_t, char *, uint64_t))(v32 + 32);
  while (v11 < *(void *)(a1 + 16))
  {
    uint64_t v13 = *(void *)(v32 + 72);
    uint64_t v14 = *(void (**)(void))(v32 + 16);
    sub_253B04FEC();
    v14();
    sub_253B04F38(&qword_269CE8EA0);
    uint64_t v15 = sub_253B095C0() & ~(-1 << *(unsigned char *)(v10 + 32));
    sub_253B04FD4();
    if ((v18 & v17) != 0)
    {
      unint64_t v33 = v11;
      uint64_t v20 = ~v19;
      while (1)
      {
        sub_253B04FEC();
        v14();
        sub_253B04F38(&qword_269CE8EA8);
        char v21 = sub_253B096B0();
        BOOL v22 = *v12;
        (*v12)(v7, v2);
        if (v21) {
          break;
        }
        uint64_t v15 = (v15 + 1) & v20;
        sub_253B04FD4();
        if ((v17 & v18) == 0)
        {
          a1 = v28;
          unint64_t v11 = v33;
          goto LABEL_10;
        }
      }
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v22)(v36, v2);
      a1 = v28;
      unint64_t v11 = v33;
    }
    else
    {
LABEL_10:
      uint64_t v23 = v36;
      *(void *)(v35 + 8 * v16) = v18 | v17;
      uint64_t result = (*v29)(*(void *)(v10 + 48) + v15 * v13, v23, v2);
      uint64_t v24 = *(void *)(v10 + 16);
      BOOL v25 = __OFADD__(v24, 1);
      uint64_t v26 = v24 + 1;
      if (v25) {
        goto LABEL_18;
      }
      *(void *)(v10 + 16) = v26;
    }
    if (++v11 == v31) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

id sub_253B04EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = (void *)sub_253B096D0();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)sub_253B096D0();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(a5, sel_URLForResource_withExtension_, v6, v7);

  return v8;
}

uint64_t sub_253B04F38(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_253B08A20();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_253B04F7C()
{
  unint64_t result = qword_269CE8EB0;
  if (!qword_269CE8EB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269CE8EB0);
  }
  return result;
}

uint64_t sub_253B04FBC()
{
  return v0;
}

uint64_t sub_253B05000()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_253B05010()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_253B05020()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_253B05030()
{
  return MEMORY[0x270EEDE28]();
}

uint64_t sub_253B05040()
{
  return MEMORY[0x270EEDE38]();
}

uint64_t sub_253B05050()
{
  return MEMORY[0x270EEDE58]();
}

uint64_t sub_253B05060()
{
  return MEMORY[0x270EEDE70]();
}

uint64_t sub_253B05070()
{
  return MEMORY[0x270EEDE80]();
}

uint64_t sub_253B05080()
{
  return MEMORY[0x270EEDE90]();
}

uint64_t sub_253B05090()
{
  return MEMORY[0x270EEDEA0]();
}

uint64_t sub_253B050A0()
{
  return MEMORY[0x270EEDEB8]();
}

uint64_t sub_253B050B0()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_253B050C0()
{
  return MEMORY[0x270EEDF20]();
}

uint64_t sub_253B050D0()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_253B050E0()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_253B050F0()
{
  return MEMORY[0x270EEE0C0]();
}

uint64_t sub_253B05100()
{
  return MEMORY[0x270EEE188]();
}

uint64_t sub_253B05110()
{
  return MEMORY[0x270EEE200]();
}

uint64_t sub_253B05120()
{
  return MEMORY[0x270EEE258]();
}

uint64_t sub_253B05130()
{
  return MEMORY[0x270EEE438]();
}

uint64_t sub_253B05140()
{
  return MEMORY[0x270EEE440]();
}

uint64_t sub_253B05150()
{
  return MEMORY[0x270EEE450]();
}

uint64_t sub_253B05160()
{
  return MEMORY[0x270EEE618]();
}

uint64_t sub_253B05170()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_253B05180()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_253B05190()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_253B051A0()
{
  return MEMORY[0x270EEE688]();
}

uint64_t sub_253B051B0()
{
  return MEMORY[0x270EEEA60]();
}

uint64_t sub_253B051C0()
{
  return MEMORY[0x270EEEDD8]();
}

uint64_t sub_253B051D0()
{
  return MEMORY[0x270EEEEA8]();
}

uint64_t sub_253B051E0()
{
  return MEMORY[0x270EEF238]();
}

uint64_t sub_253B051F0()
{
  return MEMORY[0x270EEF250]();
}

uint64_t sub_253B05200()
{
  return MEMORY[0x270EEF268]();
}

uint64_t sub_253B05210()
{
  return MEMORY[0x270EEF330]();
}

uint64_t sub_253B05220()
{
  return MEMORY[0x270EEF358]();
}

uint64_t sub_253B05230()
{
  return MEMORY[0x270EEF378]();
}

uint64_t sub_253B05240()
{
  return MEMORY[0x270EEF388]();
}

uint64_t sub_253B05250()
{
  return MEMORY[0x270EEF3A8]();
}

uint64_t sub_253B05260()
{
  return MEMORY[0x270EEF3C0]();
}

uint64_t sub_253B05270()
{
  return MEMORY[0x270EEF3F0]();
}

uint64_t sub_253B05280()
{
  return MEMORY[0x270EEF400]();
}

uint64_t sub_253B05290()
{
  return MEMORY[0x270EEF428]();
}

uint64_t sub_253B052A0()
{
  return MEMORY[0x270EEF450]();
}

uint64_t sub_253B052B0()
{
  return MEMORY[0x270EEF460]();
}

uint64_t sub_253B052C0()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_253B052D0()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_253B052E0()
{
  return MEMORY[0x270EEF8F8]();
}

uint64_t sub_253B052F0()
{
  return MEMORY[0x270EEFC10]();
}

uint64_t sub_253B05300()
{
  return MEMORY[0x270EEFC58]();
}

uint64_t sub_253B05310()
{
  return MEMORY[0x270EEFCB0]();
}

uint64_t sub_253B05320()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_253B05330()
{
  return MEMORY[0x270EEFD78]();
}

uint64_t sub_253B05340()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_253B05350()
{
  return MEMORY[0x270EEFE68]();
}

uint64_t sub_253B05360()
{
  return MEMORY[0x270EEFE80]();
}

uint64_t sub_253B05370()
{
  return MEMORY[0x270EEFF18]();
}

uint64_t sub_253B05380()
{
  return MEMORY[0x270EEFF40]();
}

uint64_t sub_253B05390()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_253B053A0()
{
  return MEMORY[0x270EEFF98]();
}

uint64_t sub_253B053B0()
{
  return MEMORY[0x270EEFFB0]();
}

uint64_t sub_253B053C0()
{
  return MEMORY[0x270EEFFB8]();
}

uint64_t sub_253B053D0()
{
  return MEMORY[0x270EEFFC8]();
}

uint64_t sub_253B053E0()
{
  return MEMORY[0x270EF0008]();
}

uint64_t sub_253B053F0()
{
  return MEMORY[0x270EF0090]();
}

uint64_t sub_253B05400()
{
  return MEMORY[0x270EF0098]();
}

uint64_t sub_253B05410()
{
  return MEMORY[0x270EF00B0]();
}

uint64_t sub_253B05420()
{
  return MEMORY[0x270EF00D8]();
}

uint64_t sub_253B05430()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_253B05440()
{
  return MEMORY[0x270EF0158]();
}

uint64_t sub_253B05450()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_253B05460()
{
  return MEMORY[0x270EF01B0]();
}

uint64_t sub_253B05470()
{
  return MEMORY[0x270EF01C0]();
}

uint64_t sub_253B05480()
{
  return MEMORY[0x270EF0210]();
}

uint64_t sub_253B05490()
{
  return MEMORY[0x270EF0790]();
}

uint64_t sub_253B054A0()
{
  return MEMORY[0x270EF07E8]();
}

uint64_t sub_253B054B0()
{
  return MEMORY[0x270EF07F8]();
}

uint64_t sub_253B054C0()
{
  return MEMORY[0x270EF0808]();
}

uint64_t sub_253B054D0()
{
  return MEMORY[0x270EF0820]();
}

uint64_t sub_253B054E0()
{
  return MEMORY[0x270EF0840]();
}

uint64_t sub_253B054F0()
{
  return MEMORY[0x270EF0890]();
}

uint64_t sub_253B05500()
{
  return MEMORY[0x270EF0AF8]();
}

uint64_t sub_253B05510()
{
  return MEMORY[0x270EF0B88]();
}

uint64_t sub_253B05520()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_253B05530()
{
  return MEMORY[0x270EF0C20]();
}

uint64_t sub_253B05540()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_253B05550()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_253B05560()
{
  return MEMORY[0x270EF0C58]();
}

uint64_t sub_253B05570()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_253B05580()
{
  return MEMORY[0x270EF0C70]();
}

uint64_t sub_253B05590()
{
  return MEMORY[0x270F3D6A0]();
}

uint64_t sub_253B055A0()
{
  return MEMORY[0x270EF0CB0]();
}

uint64_t _s30IntelligenceFlowPlannerSupport20PlatformPnRTelemetryC7startedy10Foundation4UUIDVAA12StartedStateO_0aE7Library0aB11IdentifiersVSgAGtFZfA1__0()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_253B055C0()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_253B055D0()
{
  return MEMORY[0x270EF0D78]();
}

uint64_t sub_253B055E0()
{
  return MEMORY[0x270EF0D80]();
}

uint64_t sub_253B055F0()
{
  return MEMORY[0x270EF0EE0]();
}

uint64_t sub_253B05600()
{
  return MEMORY[0x270EF0EF8]();
}

uint64_t sub_253B05610()
{
  return MEMORY[0x270EF0F40]();
}

uint64_t sub_253B05620()
{
  return MEMORY[0x270EF0FA0]();
}

uint64_t sub_253B05630()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_253B05640()
{
  return MEMORY[0x270EF15A8]();
}

uint64_t sub_253B05650()
{
  return MEMORY[0x270EF1608]();
}

uint64_t sub_253B05660()
{
  return MEMORY[0x270F739E0]();
}

uint64_t sub_253B05680()
{
  return MEMORY[0x270F286C0]();
}

uint64_t sub_253B05690()
{
  return MEMORY[0x270F286C8]();
}

uint64_t sub_253B056A0()
{
  return MEMORY[0x270F83A10]();
}

uint64_t sub_253B056B0()
{
  return MEMORY[0x270F83A18]();
}

uint64_t sub_253B056C0()
{
  return MEMORY[0x270F83A20]();
}

uint64_t sub_253B056D0()
{
  return MEMORY[0x270F83A28]();
}

uint64_t sub_253B056E0()
{
  return MEMORY[0x270F83A58]();
}

uint64_t sub_253B056F0()
{
  return MEMORY[0x270F83A68]();
}

uint64_t sub_253B05700()
{
  return MEMORY[0x270F83A70]();
}

uint64_t sub_253B05710()
{
  return MEMORY[0x270F83A90]();
}

uint64_t sub_253B05720()
{
  return MEMORY[0x270F83AA8]();
}

uint64_t sub_253B05730()
{
  return MEMORY[0x270F83AB0]();
}

uint64_t sub_253B05740()
{
  return MEMORY[0x270F83AB8]();
}

uint64_t sub_253B05750()
{
  return MEMORY[0x270F83AC8]();
}

uint64_t sub_253B05760()
{
  return MEMORY[0x270F83AD0]();
}

uint64_t sub_253B05770()
{
  return MEMORY[0x270F83AE8]();
}

uint64_t sub_253B05780()
{
  return MEMORY[0x270F83B20]();
}

uint64_t sub_253B05790()
{
  return MEMORY[0x270F83B28]();
}

uint64_t sub_253B057A0()
{
  return MEMORY[0x270F83B30]();
}

uint64_t sub_253B057B0()
{
  return MEMORY[0x270F83B38]();
}

uint64_t sub_253B057C0()
{
  return MEMORY[0x270F83B40]();
}

uint64_t sub_253B057D0()
{
  return MEMORY[0x270F83B48]();
}

uint64_t sub_253B057E0()
{
  return MEMORY[0x270F83B70]();
}

uint64_t sub_253B057F0()
{
  return MEMORY[0x270F83B78]();
}

uint64_t sub_253B05800()
{
  return MEMORY[0x270F83B80]();
}

uint64_t sub_253B05810()
{
  return MEMORY[0x270F83B88]();
}

uint64_t sub_253B05820()
{
  return MEMORY[0x270F83B90]();
}

uint64_t sub_253B05830()
{
  return MEMORY[0x270F83B98]();
}

uint64_t sub_253B05840()
{
  return MEMORY[0x270F83BA0]();
}

uint64_t sub_253B05850()
{
  return MEMORY[0x270F83BA8]();
}

uint64_t sub_253B05860()
{
  return MEMORY[0x270F83BB0]();
}

uint64_t sub_253B05870()
{
  return MEMORY[0x270F83BB8]();
}

uint64_t sub_253B05880()
{
  return MEMORY[0x270F83BC0]();
}

uint64_t sub_253B05890()
{
  return MEMORY[0x270F83BF8]();
}

uint64_t sub_253B058A0()
{
  return MEMORY[0x270F83C08]();
}

uint64_t sub_253B058B0()
{
  return MEMORY[0x270F3D6E8]();
}

uint64_t sub_253B058C0()
{
  return MEMORY[0x270F3D6F8]();
}

uint64_t sub_253B058D0()
{
  return MEMORY[0x270F3D700]();
}

uint64_t sub_253B058E0()
{
  return MEMORY[0x270F3D708]();
}

uint64_t sub_253B058F0()
{
  return MEMORY[0x270F3D710]();
}

uint64_t sub_253B05900()
{
  return MEMORY[0x270F3D718]();
}

uint64_t sub_253B05910()
{
  return MEMORY[0x270F3D720]();
}

uint64_t sub_253B05920()
{
  return MEMORY[0x270F3D760]();
}

uint64_t sub_253B05930()
{
  return MEMORY[0x270F3D768]();
}

uint64_t sub_253B05940()
{
  return MEMORY[0x270F3D778]();
}

uint64_t sub_253B05950()
{
  return MEMORY[0x270F3D780]();
}

uint64_t sub_253B05960()
{
  return MEMORY[0x270F3D7D0]();
}

uint64_t sub_253B05970()
{
  return MEMORY[0x270F3D7D8]();
}

uint64_t sub_253B05980()
{
  return MEMORY[0x270F3D7E0]();
}

uint64_t _s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0()
{
  return MEMORY[0x270F3D7F0]();
}

uint64_t sub_253B059A0()
{
  return MEMORY[0x270F3D7F8]();
}

uint64_t sub_253B059B0()
{
  return MEMORY[0x270F3D800]();
}

uint64_t sub_253B059C0()
{
  return MEMORY[0x270F3D808]();
}

uint64_t sub_253B059D0()
{
  return MEMORY[0x270F3D810]();
}

uint64_t sub_253B059E0()
{
  return MEMORY[0x270F3D8B0]();
}

uint64_t sub_253B059F0()
{
  return MEMORY[0x270F3D8B8]();
}

uint64_t sub_253B05A00()
{
  return MEMORY[0x270F3D8C8]();
}

uint64_t sub_253B05A10()
{
  return MEMORY[0x270F3D8D0]();
}

uint64_t sub_253B05A20()
{
  return MEMORY[0x270F3D8D8]();
}

uint64_t sub_253B05A30()
{
  return MEMORY[0x270F3D8E0]();
}

uint64_t sub_253B05A40()
{
  return MEMORY[0x270F3D8E8]();
}

uint64_t sub_253B05A50()
{
  return MEMORY[0x270F3D8F0]();
}

uint64_t sub_253B05A60()
{
  return MEMORY[0x270F3D900]();
}

uint64_t sub_253B05A70()
{
  return MEMORY[0x270F3D908]();
}

uint64_t sub_253B05A80()
{
  return MEMORY[0x270F3D910]();
}

uint64_t sub_253B05A90()
{
  return MEMORY[0x270F3D918]();
}

uint64_t sub_253B05AA0()
{
  return MEMORY[0x270F3D920]();
}

uint64_t sub_253B05AB0()
{
  return MEMORY[0x270F3D928]();
}

uint64_t sub_253B05AC0()
{
  return MEMORY[0x270F3D930]();
}

uint64_t sub_253B05AD0()
{
  return MEMORY[0x270F3D938]();
}

uint64_t sub_253B05AE0()
{
  return MEMORY[0x270F3D940]();
}

uint64_t sub_253B05AF0()
{
  return MEMORY[0x270F3D948]();
}

uint64_t sub_253B05B00()
{
  return MEMORY[0x270F3D950]();
}

uint64_t sub_253B05B10()
{
  return MEMORY[0x270F3D958]();
}

uint64_t sub_253B05B20()
{
  return MEMORY[0x270F3D960]();
}

uint64_t sub_253B05B30()
{
  return MEMORY[0x270F3D968]();
}

uint64_t sub_253B05B40()
{
  return MEMORY[0x270F3D970]();
}

uint64_t sub_253B05B50()
{
  return MEMORY[0x270F3D978]();
}

uint64_t sub_253B05B60()
{
  return MEMORY[0x270F3D980]();
}

uint64_t sub_253B05B70()
{
  return MEMORY[0x270F3D988]();
}

uint64_t sub_253B05B80()
{
  return MEMORY[0x270F3D990]();
}

uint64_t sub_253B05B90()
{
  return MEMORY[0x270F3D998]();
}

uint64_t sub_253B05BA0()
{
  return MEMORY[0x270F3D9A0]();
}

uint64_t sub_253B05BB0()
{
  return MEMORY[0x270F3D9A8]();
}

uint64_t sub_253B05BC0()
{
  return MEMORY[0x270F3D9B0]();
}

uint64_t sub_253B05BD0()
{
  return MEMORY[0x270F3D9B8]();
}

uint64_t sub_253B05BE0()
{
  return MEMORY[0x270F3D9C0]();
}

uint64_t sub_253B05BF0()
{
  return MEMORY[0x270F3D9D8]();
}

uint64_t sub_253B05C00()
{
  return MEMORY[0x270F3D9E8]();
}

uint64_t sub_253B05C10()
{
  return MEMORY[0x270F3D9F0]();
}

uint64_t sub_253B05C20()
{
  return MEMORY[0x270F3D9F8]();
}

uint64_t sub_253B05C30()
{
  return MEMORY[0x270F3DA08]();
}

uint64_t sub_253B05C40()
{
  return MEMORY[0x270F3DA28]();
}

uint64_t sub_253B05C50()
{
  return MEMORY[0x270F3DA30]();
}

uint64_t sub_253B05C60()
{
  return MEMORY[0x270F3DA38]();
}

uint64_t sub_253B05C70()
{
  return MEMORY[0x270F3DA40]();
}

uint64_t sub_253B05C80()
{
  return MEMORY[0x270F3DA48]();
}

uint64_t sub_253B05C90()
{
  return MEMORY[0x270F3DA50]();
}

uint64_t sub_253B05CA0()
{
  return MEMORY[0x270F3DA58]();
}

uint64_t sub_253B05CB0()
{
  return MEMORY[0x270F3DA60]();
}

uint64_t sub_253B05CC0()
{
  return MEMORY[0x270F3DA70]();
}

uint64_t sub_253B05CD0()
{
  return MEMORY[0x270F3DAA8]();
}

uint64_t sub_253B05CE0()
{
  return MEMORY[0x270F3DAC8]();
}

uint64_t sub_253B05CF0()
{
  return MEMORY[0x270F3DAE8]();
}

uint64_t sub_253B05D00()
{
  return MEMORY[0x270F3DAF0]();
}

uint64_t sub_253B05D10()
{
  return MEMORY[0x270F3DB18]();
}

uint64_t sub_253B05D20()
{
  return MEMORY[0x270F3DB20]();
}

uint64_t sub_253B05D30()
{
  return MEMORY[0x270F3DB28]();
}

uint64_t sub_253B05D40()
{
  return MEMORY[0x270F3DB30]();
}

uint64_t sub_253B05D50()
{
  return MEMORY[0x270F3DB38]();
}

uint64_t sub_253B05D60()
{
  return MEMORY[0x270F3DB40]();
}

uint64_t sub_253B05D70()
{
  return MEMORY[0x270F3DB48]();
}

uint64_t sub_253B05D80()
{
  return MEMORY[0x270F3DB88]();
}

uint64_t sub_253B05D90()
{
  return MEMORY[0x270F3DB90]();
}

uint64_t _s16IntelligenceFlow14MessagePayloadO14RequestContentO04StopF0V0aB14PlannerSupportE4ifpsAghDOAFV_tcfC_0()
{
  return MEMORY[0x270F3DC18]();
}

uint64_t sub_253B05DB0()
{
  return MEMORY[0x270F3DC20]();
}

uint64_t sub_253B05DC0()
{
  return MEMORY[0x270F3DC28]();
}

uint64_t sub_253B05DD0()
{
  return MEMORY[0x270F3DC30]();
}

uint64_t sub_253B05DE0()
{
  return MEMORY[0x270F3DC38]();
}

uint64_t sub_253B05DF0()
{
  return MEMORY[0x270F3DC40]();
}

uint64_t sub_253B05E00()
{
  return MEMORY[0x270F3DC48]();
}

uint64_t sub_253B05E10()
{
  return MEMORY[0x270F3DC50]();
}

uint64_t sub_253B05E20()
{
  return MEMORY[0x270F3DC58]();
}

uint64_t sub_253B05E30()
{
  return MEMORY[0x270F3DC60]();
}

uint64_t sub_253B05E40()
{
  return MEMORY[0x270F3DC68]();
}

uint64_t sub_253B05E50()
{
  return MEMORY[0x270F3DC88]();
}

uint64_t sub_253B05E60()
{
  return MEMORY[0x270F3DC90]();
}

uint64_t sub_253B05E70()
{
  return MEMORY[0x270F3DC98]();
}

uint64_t sub_253B05E80()
{
  return MEMORY[0x270F3DCA0]();
}

uint64_t sub_253B05E90()
{
  return MEMORY[0x270F3DCA8]();
}

uint64_t sub_253B05EA0()
{
  return MEMORY[0x270F3DCB0]();
}

uint64_t sub_253B05EB0()
{
  return MEMORY[0x270F3DCB8]();
}

uint64_t sub_253B05EC0()
{
  return MEMORY[0x270F3DCC0]();
}

uint64_t sub_253B05ED0()
{
  return MEMORY[0x270F3DCC8]();
}

uint64_t sub_253B05EE0()
{
  return MEMORY[0x270F3DCD0]();
}

uint64_t sub_253B05EF0()
{
  return MEMORY[0x270F3DD48]();
}

uint64_t sub_253B05F00()
{
  return MEMORY[0x270F3DD70]();
}

uint64_t sub_253B05F10()
{
  return MEMORY[0x270F3DD78]();
}

uint64_t sub_253B05F20()
{
  return MEMORY[0x270F3DD80]();
}

uint64_t sub_253B05F30()
{
  return MEMORY[0x270F3DD88]();
}

uint64_t sub_253B05F40()
{
  return MEMORY[0x270F3DD90]();
}

uint64_t sub_253B05F50()
{
  return MEMORY[0x270F3DDA8]();
}

uint64_t sub_253B05F60()
{
  return MEMORY[0x270F3DDB0]();
}

uint64_t sub_253B05F70()
{
  return MEMORY[0x270F3DDB8]();
}

uint64_t sub_253B05F80()
{
  return MEMORY[0x270F3DDC0]();
}

uint64_t sub_253B05F90()
{
  return MEMORY[0x270F3DDC8]();
}

uint64_t sub_253B05FA0()
{
  return MEMORY[0x270F3DDD0]();
}

uint64_t sub_253B05FB0()
{
  return MEMORY[0x270F3DDD8]();
}

uint64_t sub_253B05FC0()
{
  return MEMORY[0x270F3DDE0]();
}

uint64_t sub_253B05FD0()
{
  return MEMORY[0x270F3DDE8]();
}

uint64_t sub_253B05FE0()
{
  return MEMORY[0x270F3DDF0]();
}

uint64_t sub_253B05FF0()
{
  return MEMORY[0x270F3DDF8]();
}

uint64_t sub_253B06000()
{
  return MEMORY[0x270F3DE00]();
}

uint64_t sub_253B06010()
{
  return MEMORY[0x270F3DE08]();
}

uint64_t sub_253B06020()
{
  return MEMORY[0x270F3DE10]();
}

uint64_t sub_253B06030()
{
  return MEMORY[0x270F3DE18]();
}

uint64_t sub_253B06040()
{
  return MEMORY[0x270F3DE20]();
}

uint64_t sub_253B06050()
{
  return MEMORY[0x270F3DE28]();
}

uint64_t sub_253B06060()
{
  return MEMORY[0x270F3DE30]();
}

uint64_t sub_253B06070()
{
  return MEMORY[0x270F3DE38]();
}

uint64_t sub_253B06080()
{
  return MEMORY[0x270F3DE40]();
}

uint64_t sub_253B06090()
{
  return MEMORY[0x270F3DE48]();
}

uint64_t sub_253B060A0()
{
  return MEMORY[0x270F3DE50]();
}

uint64_t sub_253B060B0()
{
  return MEMORY[0x270F3DE58]();
}

uint64_t sub_253B060C0()
{
  return MEMORY[0x270F3DE60]();
}

uint64_t sub_253B060D0()
{
  return MEMORY[0x270F3DE68]();
}

uint64_t sub_253B060E0()
{
  return MEMORY[0x270F3DE70]();
}

uint64_t sub_253B060F0()
{
  return MEMORY[0x270F3DE78]();
}

uint64_t sub_253B06100()
{
  return MEMORY[0x270F3DE80]();
}

uint64_t sub_253B06110()
{
  return MEMORY[0x270F3DE88]();
}

uint64_t sub_253B06120()
{
  return MEMORY[0x270F3DE90]();
}

uint64_t sub_253B06130()
{
  return MEMORY[0x270F3DE98]();
}

uint64_t sub_253B06140()
{
  return MEMORY[0x270F3DEA0]();
}

uint64_t sub_253B06150()
{
  return MEMORY[0x270F3DED0]();
}

uint64_t sub_253B06160()
{
  return MEMORY[0x270F3DED8]();
}

uint64_t sub_253B06170()
{
  return MEMORY[0x270F3DF08]();
}

uint64_t sub_253B06180()
{
  return MEMORY[0x270F3DF10]();
}

uint64_t sub_253B06190()
{
  return MEMORY[0x270F3DF18]();
}

uint64_t sub_253B061A0()
{
  return MEMORY[0x270F3DF48]();
}

uint64_t sub_253B061B0()
{
  return MEMORY[0x270F3DF50]();
}

uint64_t sub_253B061C0()
{
  return MEMORY[0x270F3DF58]();
}

uint64_t sub_253B061D0()
{
  return MEMORY[0x270F3DF60]();
}

uint64_t sub_253B061E0()
{
  return MEMORY[0x270F3DF90]();
}

uint64_t sub_253B061F0()
{
  return MEMORY[0x270F3DF98]();
}

uint64_t sub_253B06200()
{
  return MEMORY[0x270F3DFA0]();
}

uint64_t sub_253B06210()
{
  return MEMORY[0x270F3DFA8]();
}

uint64_t sub_253B06220()
{
  return MEMORY[0x270F3DFB0]();
}

uint64_t sub_253B06230()
{
  return MEMORY[0x270F3DFB8]();
}

uint64_t sub_253B06240()
{
  return MEMORY[0x270F3DFC8]();
}

uint64_t sub_253B06250()
{
  return MEMORY[0x270F3DFE8]();
}

uint64_t sub_253B06260()
{
  return MEMORY[0x270F3DFF0]();
}

uint64_t sub_253B06270()
{
  return MEMORY[0x270F3DFF8]();
}

uint64_t sub_253B06280()
{
  return MEMORY[0x270F3E000]();
}

uint64_t sub_253B06290()
{
  return MEMORY[0x270F3E018]();
}

uint64_t sub_253B062A0()
{
  return MEMORY[0x270F3E028]();
}

uint64_t sub_253B062B0()
{
  return MEMORY[0x270F3E050]();
}

uint64_t sub_253B062C0()
{
  return MEMORY[0x270F3E058]();
}

uint64_t sub_253B062D0()
{
  return MEMORY[0x270F3E068]();
}

uint64_t sub_253B062E0()
{
  return MEMORY[0x270F3E080]();
}

uint64_t sub_253B062F0()
{
  return MEMORY[0x270F3E088]();
}

uint64_t sub_253B06300()
{
  return MEMORY[0x270F3E090]();
}

uint64_t sub_253B06310()
{
  return MEMORY[0x270F3E098]();
}

uint64_t sub_253B06320()
{
  return MEMORY[0x270F3E0A0]();
}

uint64_t sub_253B06330()
{
  return MEMORY[0x270F3E0A8]();
}

uint64_t sub_253B06340()
{
  return MEMORY[0x270F3E0B0]();
}

uint64_t sub_253B06350()
{
  return MEMORY[0x270F3E0B8]();
}

uint64_t sub_253B06360()
{
  return MEMORY[0x270F3E0C0]();
}

uint64_t sub_253B06370()
{
  return MEMORY[0x270F3E0C8]();
}

uint64_t sub_253B06380()
{
  return MEMORY[0x270F3E0D0]();
}

uint64_t sub_253B06390()
{
  return MEMORY[0x270F3E0E0]();
}

uint64_t sub_253B063A0()
{
  return MEMORY[0x270F3E0E8]();
}

uint64_t sub_253B063B0()
{
  return MEMORY[0x270F3E0F0]();
}

uint64_t sub_253B063C0()
{
  return MEMORY[0x270F3E0F8]();
}

uint64_t sub_253B063D0()
{
  return MEMORY[0x270F3E100]();
}

uint64_t sub_253B063E0()
{
  return MEMORY[0x270F3E108]();
}

uint64_t sub_253B063F0()
{
  return MEMORY[0x270F3E110]();
}

uint64_t sub_253B06400()
{
  return MEMORY[0x270F3E118]();
}

uint64_t sub_253B06410()
{
  return MEMORY[0x270F3E120]();
}

uint64_t sub_253B06420()
{
  return MEMORY[0x270F3E128]();
}

uint64_t sub_253B06430()
{
  return MEMORY[0x270F3E138]();
}

uint64_t sub_253B06440()
{
  return MEMORY[0x270F3E140]();
}

uint64_t sub_253B06450()
{
  return MEMORY[0x270F3E150]();
}

uint64_t sub_253B06460()
{
  return MEMORY[0x270F3E158]();
}

uint64_t sub_253B06470()
{
  return MEMORY[0x270F3E160]();
}

uint64_t sub_253B06480()
{
  return MEMORY[0x270F3E168]();
}

uint64_t sub_253B06490()
{
  return MEMORY[0x270F3E170]();
}

uint64_t sub_253B064A0()
{
  return MEMORY[0x270F3E178]();
}

uint64_t sub_253B064B0()
{
  return MEMORY[0x270F3E180]();
}

uint64_t sub_253B064C0()
{
  return MEMORY[0x270F3E188]();
}

uint64_t sub_253B064D0()
{
  return MEMORY[0x270F3E190]();
}

uint64_t sub_253B064E0()
{
  return MEMORY[0x270F3E198]();
}

uint64_t sub_253B064F0()
{
  return MEMORY[0x270F3E1A0]();
}

uint64_t sub_253B06500()
{
  return MEMORY[0x270F3E1B0]();
}

uint64_t sub_253B06510()
{
  return MEMORY[0x270F3E1B8]();
}

uint64_t sub_253B06520()
{
  return MEMORY[0x270F3E1C0]();
}

uint64_t sub_253B06530()
{
  return MEMORY[0x270F3E1C8]();
}

uint64_t sub_253B06540()
{
  return MEMORY[0x270F3E1D0]();
}

uint64_t sub_253B06550()
{
  return MEMORY[0x270F3E1D8]();
}

uint64_t sub_253B06560()
{
  return MEMORY[0x270F3E1E0]();
}

uint64_t sub_253B06570()
{
  return MEMORY[0x270F3E1E8]();
}

uint64_t sub_253B06580()
{
  return MEMORY[0x270F3E1F0]();
}

uint64_t sub_253B06590()
{
  return MEMORY[0x270F3E1F8]();
}

uint64_t sub_253B065A0()
{
  return MEMORY[0x270F3E200]();
}

uint64_t sub_253B065B0()
{
  return MEMORY[0x270F3E208]();
}

uint64_t sub_253B065C0()
{
  return MEMORY[0x270F3E210]();
}

uint64_t sub_253B065D0()
{
  return MEMORY[0x270F3E218]();
}

uint64_t sub_253B065E0()
{
  return MEMORY[0x270F3E220]();
}

uint64_t sub_253B065F0()
{
  return MEMORY[0x270F3E228]();
}

uint64_t sub_253B06600()
{
  return MEMORY[0x270F3E230]();
}

uint64_t sub_253B06610()
{
  return MEMORY[0x270F3E238]();
}

uint64_t sub_253B06620()
{
  return MEMORY[0x270F3E248]();
}

uint64_t sub_253B06630()
{
  return MEMORY[0x270F3E250]();
}

uint64_t sub_253B06640()
{
  return MEMORY[0x270F3E258]();
}

uint64_t sub_253B06650()
{
  return MEMORY[0x270F3E260]();
}

uint64_t sub_253B06660()
{
  return MEMORY[0x270F3E268]();
}

uint64_t sub_253B06670()
{
  return MEMORY[0x270F3E270]();
}

uint64_t sub_253B06680()
{
  return MEMORY[0x270F3E280]();
}

uint64_t sub_253B06690()
{
  return MEMORY[0x270F3E288]();
}

uint64_t sub_253B066A0()
{
  return MEMORY[0x270F3E298]();
}

uint64_t sub_253B066B0()
{
  return MEMORY[0x270F3E2A0]();
}

uint64_t sub_253B066C0()
{
  return MEMORY[0x270F3E2A8]();
}

uint64_t sub_253B066D0()
{
  return MEMORY[0x270F3E2B0]();
}

uint64_t sub_253B066E0()
{
  return MEMORY[0x270F3E2B8]();
}

uint64_t sub_253B066F0()
{
  return MEMORY[0x270F3E2C0]();
}

uint64_t sub_253B06700()
{
  return MEMORY[0x270F3E2C8]();
}

uint64_t sub_253B06710()
{
  return MEMORY[0x270F3E2D0]();
}

uint64_t sub_253B06720()
{
  return MEMORY[0x270F3E2D8]();
}

uint64_t sub_253B06730()
{
  return MEMORY[0x270F3E2E8]();
}

uint64_t sub_253B06740()
{
  return MEMORY[0x270F3E2F0]();
}

uint64_t sub_253B06750()
{
  return MEMORY[0x270F3E2F8]();
}

uint64_t sub_253B06760()
{
  return MEMORY[0x270F3E300]();
}

uint64_t sub_253B06770()
{
  return MEMORY[0x270F3E308]();
}

uint64_t sub_253B06780()
{
  return MEMORY[0x270F3E398]();
}

uint64_t sub_253B06790()
{
  return MEMORY[0x270F3E3A0]();
}

uint64_t sub_253B067A0()
{
  return MEMORY[0x270F3E3A8]();
}

uint64_t sub_253B067B0()
{
  return MEMORY[0x270F3E3B0]();
}

uint64_t sub_253B067C0()
{
  return MEMORY[0x270F3E3B8]();
}

uint64_t sub_253B067D0()
{
  return MEMORY[0x270F3E3D8]();
}

uint64_t sub_253B067E0()
{
  return MEMORY[0x270F3E3E0]();
}

uint64_t sub_253B067F0()
{
  return MEMORY[0x270F3E3E8]();
}

uint64_t sub_253B06800()
{
  return MEMORY[0x270F3E408]();
}

uint64_t sub_253B06810()
{
  return MEMORY[0x270F3E410]();
}

uint64_t sub_253B06820()
{
  return MEMORY[0x270F3E428]();
}

uint64_t sub_253B06830()
{
  return MEMORY[0x270F3E448]();
}

uint64_t sub_253B06840()
{
  return MEMORY[0x270F3E450]();
}

uint64_t sub_253B06850()
{
  return MEMORY[0x270F3E458]();
}

uint64_t sub_253B06860()
{
  return MEMORY[0x270F3E468]();
}

uint64_t sub_253B06870()
{
  return MEMORY[0x270F3E498]();
}

uint64_t sub_253B06880()
{
  return MEMORY[0x270F3E4A0]();
}

uint64_t sub_253B06890()
{
  return MEMORY[0x270F3E4A8]();
}

uint64_t sub_253B068A0()
{
  return MEMORY[0x270F3E4B0]();
}

uint64_t sub_253B068B0()
{
  return MEMORY[0x270F3E4B8]();
}

uint64_t sub_253B068C0()
{
  return MEMORY[0x270F3E4C0]();
}

uint64_t sub_253B068D0()
{
  return MEMORY[0x270F3E4C8]();
}

uint64_t sub_253B068E0()
{
  return MEMORY[0x270F3E4D0]();
}

uint64_t sub_253B068F0()
{
  return MEMORY[0x270F3E4D8]();
}

uint64_t sub_253B06900()
{
  return MEMORY[0x270F3E4E0]();
}

uint64_t sub_253B06910()
{
  return MEMORY[0x270F3E4E8]();
}

uint64_t sub_253B06920()
{
  return MEMORY[0x270F3E4F0]();
}

uint64_t sub_253B06930()
{
  return MEMORY[0x270F3E4F8]();
}

uint64_t sub_253B06940()
{
  return MEMORY[0x270F3E500]();
}

uint64_t sub_253B06950()
{
  return MEMORY[0x270F3E508]();
}

uint64_t sub_253B06960()
{
  return MEMORY[0x270F3E510]();
}

uint64_t sub_253B06970()
{
  return MEMORY[0x270F3E518]();
}

uint64_t sub_253B06980()
{
  return MEMORY[0x270F3E520]();
}

uint64_t sub_253B06990()
{
  return MEMORY[0x270F3E528]();
}

uint64_t sub_253B069A0()
{
  return MEMORY[0x270F3E530]();
}

uint64_t sub_253B069B0()
{
  return MEMORY[0x270F3E538]();
}

uint64_t sub_253B069C0()
{
  return MEMORY[0x270F3E540]();
}

uint64_t sub_253B069D0()
{
  return MEMORY[0x270F3E548]();
}

uint64_t sub_253B069E0()
{
  return MEMORY[0x270F3E550]();
}

uint64_t sub_253B069F0()
{
  return MEMORY[0x270F3E558]();
}

uint64_t sub_253B06A00()
{
  return MEMORY[0x270F3E560]();
}

uint64_t sub_253B06A10()
{
  return MEMORY[0x270F3E568]();
}

uint64_t sub_253B06A20()
{
  return MEMORY[0x270F3E570]();
}

uint64_t sub_253B06A30()
{
  return MEMORY[0x270F3E578]();
}

uint64_t sub_253B06A40()
{
  return MEMORY[0x270F3E580]();
}

uint64_t sub_253B06A50()
{
  return MEMORY[0x270F3E590]();
}

uint64_t sub_253B06A60()
{
  return MEMORY[0x270F3E598]();
}

uint64_t sub_253B06A70()
{
  return MEMORY[0x270F3E5A0]();
}

uint64_t sub_253B06A80()
{
  return MEMORY[0x270F3E5A8]();
}

uint64_t sub_253B06A90()
{
  return MEMORY[0x270F3E5B0]();
}

uint64_t sub_253B06AA0()
{
  return MEMORY[0x270F3E5B8]();
}

uint64_t sub_253B06AB0()
{
  return MEMORY[0x270F3E5C0]();
}

uint64_t sub_253B06AC0()
{
  return MEMORY[0x270F3E5C8]();
}

uint64_t sub_253B06AD0()
{
  return MEMORY[0x270F3E5D0]();
}

uint64_t sub_253B06AE0()
{
  return MEMORY[0x270F3E5E0]();
}

uint64_t sub_253B06AF0()
{
  return MEMORY[0x270F3E5E8]();
}

uint64_t sub_253B06B00()
{
  return MEMORY[0x270F3E608]();
}

uint64_t sub_253B06B10()
{
  return MEMORY[0x270F3E610]();
}

uint64_t sub_253B06B20()
{
  return MEMORY[0x270F3E618]();
}

uint64_t sub_253B06B30()
{
  return MEMORY[0x270F3E620]();
}

uint64_t sub_253B06B40()
{
  return MEMORY[0x270F3E650]();
}

uint64_t sub_253B06B50()
{
  return MEMORY[0x270F3E658]();
}

uint64_t sub_253B06B60()
{
  return MEMORY[0x270F3E660]();
}

uint64_t sub_253B06B70()
{
  return MEMORY[0x270F3E668]();
}

uint64_t sub_253B06B80()
{
  return MEMORY[0x270F3E670]();
}

uint64_t sub_253B06B90()
{
  return MEMORY[0x270F3E678]();
}

uint64_t sub_253B06BA0()
{
  return MEMORY[0x270F3E680]();
}

uint64_t sub_253B06BB0()
{
  return MEMORY[0x270F3E688]();
}

uint64_t sub_253B06BC0()
{
  return MEMORY[0x270F3E690]();
}

uint64_t sub_253B06BD0()
{
  return MEMORY[0x270F3E698]();
}

uint64_t sub_253B06BE0()
{
  return MEMORY[0x270F3E6A0]();
}

uint64_t sub_253B06BF0()
{
  return MEMORY[0x270F3E6F0]();
}

uint64_t sub_253B06C00()
{
  return MEMORY[0x270F3E6F8]();
}

uint64_t sub_253B06C10()
{
  return MEMORY[0x270F3E700]();
}

uint64_t sub_253B06C20()
{
  return MEMORY[0x270F3E708]();
}

uint64_t sub_253B06C30()
{
  return MEMORY[0x270F3E710]();
}

uint64_t sub_253B06C40()
{
  return MEMORY[0x270F3E718]();
}

uint64_t sub_253B06C50()
{
  return MEMORY[0x270F3E720]();
}

uint64_t sub_253B06C60()
{
  return MEMORY[0x270F3E728]();
}

uint64_t sub_253B06C70()
{
  return MEMORY[0x270F3E758]();
}

uint64_t sub_253B06C80()
{
  return MEMORY[0x270F3E760]();
}

uint64_t sub_253B06C90()
{
  return MEMORY[0x270F3E768]();
}

uint64_t sub_253B06CA0()
{
  return MEMORY[0x270F3E770]();
}

uint64_t sub_253B06CB0()
{
  return MEMORY[0x270F3E780]();
}

uint64_t sub_253B06CC0()
{
  return MEMORY[0x270F3E788]();
}

uint64_t sub_253B06CD0()
{
  return MEMORY[0x270F3E7C8]();
}

uint64_t sub_253B06CE0()
{
  return MEMORY[0x270F3E7D0]();
}

uint64_t sub_253B06CF0()
{
  return MEMORY[0x270F3E808]();
}

uint64_t sub_253B06D00()
{
  return MEMORY[0x270F3E838]();
}

uint64_t sub_253B06D10()
{
  return MEMORY[0x270F3E848]();
}

uint64_t sub_253B06D20()
{
  return MEMORY[0x270F3E8A8]();
}

uint64_t sub_253B06D30()
{
  return MEMORY[0x270F3E8B0]();
}

uint64_t sub_253B06D40()
{
  return MEMORY[0x270F3E8B8]();
}

uint64_t sub_253B06D50()
{
  return MEMORY[0x270F3E8C0]();
}

uint64_t sub_253B06D60()
{
  return MEMORY[0x270F3E8C8]();
}

uint64_t sub_253B06D70()
{
  return MEMORY[0x270F3E8D0]();
}

uint64_t sub_253B06D80()
{
  return MEMORY[0x270F3E8F8]();
}

uint64_t sub_253B06D90()
{
  return MEMORY[0x270F3E900]();
}

uint64_t sub_253B06DA0()
{
  return MEMORY[0x270F3E908]();
}

uint64_t sub_253B06DB0()
{
  return MEMORY[0x270F3E930]();
}

uint64_t sub_253B06DC0()
{
  return MEMORY[0x270F3E938]();
}

uint64_t sub_253B06DD0()
{
  return MEMORY[0x270F3E940]();
}

uint64_t sub_253B06DE0()
{
  return MEMORY[0x270F3E948]();
}

uint64_t sub_253B06DF0()
{
  return MEMORY[0x270F3E950]();
}

uint64_t sub_253B06E00()
{
  return MEMORY[0x270F3E958]();
}

uint64_t sub_253B06E10()
{
  return MEMORY[0x270F3E960]();
}

uint64_t sub_253B06E20()
{
  return MEMORY[0x270F3E968]();
}

uint64_t sub_253B06E30()
{
  return MEMORY[0x270F3E970]();
}

uint64_t _s16IntelligenceFlow22SystemPromptResolutionV18ActionCancellationV0aB14PlannerSupportE4ifpsAeF14RequestContentOABVADV_tcfC_0()
{
  return MEMORY[0x270F3E978]();
}

uint64_t sub_253B06E50()
{
  return MEMORY[0x270F3E980]();
}

uint64_t sub_253B06E60()
{
  return MEMORY[0x270F3E988]();
}

uint64_t sub_253B06E70()
{
  return MEMORY[0x270F3E990]();
}

uint64_t sub_253B06E80()
{
  return MEMORY[0x270F3E9A8]();
}

uint64_t sub_253B06E90()
{
  return MEMORY[0x270F3E9B0]();
}

uint64_t sub_253B06EA0()
{
  return MEMORY[0x270F3E9B8]();
}

uint64_t sub_253B06EB0()
{
  return MEMORY[0x270F3E9C0]();
}

uint64_t sub_253B06EC0()
{
  return MEMORY[0x270F3E9C8]();
}

uint64_t sub_253B06ED0()
{
  return MEMORY[0x270F3EA48]();
}

uint64_t sub_253B06EE0()
{
  return MEMORY[0x270F3EA50]();
}

uint64_t sub_253B06EF0()
{
  return MEMORY[0x270F3EA58]();
}

uint64_t sub_253B06F00()
{
  return MEMORY[0x270F3EA60]();
}

uint64_t sub_253B06F10()
{
  return MEMORY[0x270F3EA68]();
}

uint64_t sub_253B06F20()
{
  return MEMORY[0x270F3EA70]();
}

uint64_t sub_253B06F30()
{
  return MEMORY[0x270F3EA78]();
}

uint64_t sub_253B06F40()
{
  return MEMORY[0x270F3EA80]();
}

uint64_t sub_253B06F50()
{
  return MEMORY[0x270F3EC20]();
}

uint64_t sub_253B06F60()
{
  return MEMORY[0x270F3EC28]();
}

uint64_t sub_253B06F70()
{
  return MEMORY[0x270F3EC30]();
}

uint64_t sub_253B06F80()
{
  return MEMORY[0x270F3EC38]();
}

uint64_t sub_253B06F90()
{
  return MEMORY[0x270F3EC40]();
}

uint64_t sub_253B06FA0()
{
  return MEMORY[0x270F3EC48]();
}

uint64_t sub_253B06FB0()
{
  return MEMORY[0x270F3EC50]();
}

uint64_t sub_253B06FC0()
{
  return MEMORY[0x270F3EC58]();
}

uint64_t sub_253B06FD0()
{
  return MEMORY[0x270F3EC60]();
}

uint64_t sub_253B06FE0()
{
  return MEMORY[0x270F3EC68]();
}

uint64_t sub_253B06FF0()
{
  return MEMORY[0x270F3EC70]();
}

uint64_t sub_253B07000()
{
  return MEMORY[0x270F3EC78]();
}

uint64_t sub_253B07010()
{
  return MEMORY[0x270F3EC80]();
}

uint64_t sub_253B07020()
{
  return MEMORY[0x270F57F48]();
}

uint64_t sub_253B07030()
{
  return MEMORY[0x270F57F50]();
}

uint64_t sub_253B07040()
{
  return MEMORY[0x270F57F58]();
}

uint64_t sub_253B07050()
{
  return MEMORY[0x270FA2A68]();
}

uint64_t sub_253B07060()
{
  return MEMORY[0x270FA2AA0]();
}

uint64_t sub_253B07070()
{
  return MEMORY[0x270FA2AB8]();
}

uint64_t sub_253B07080()
{
  return MEMORY[0x270F41CE8]();
}

uint64_t sub_253B07090()
{
  return MEMORY[0x270F41CF0]();
}

uint64_t sub_253B070A0()
{
  return MEMORY[0x270F41CF8]();
}

uint64_t sub_253B070B0()
{
  return MEMORY[0x270F41D00]();
}

uint64_t sub_253B070C0()
{
  return MEMORY[0x270F44650]();
}

uint64_t sub_253B070D0()
{
  return MEMORY[0x270F44658]();
}

uint64_t sub_253B070E0()
{
  return MEMORY[0x270F44678]();
}

uint64_t sub_253B070F0()
{
  return MEMORY[0x270F44680]();
}

uint64_t sub_253B07100()
{
  return MEMORY[0x270F446A0]();
}

uint64_t sub_253B07110()
{
  return MEMORY[0x270F44A00]();
}

uint64_t sub_253B07120()
{
  return MEMORY[0x270F44A08]();
}

uint64_t sub_253B07130()
{
  return MEMORY[0x270F44A10]();
}

uint64_t sub_253B07140()
{
  return MEMORY[0x270F44A18]();
}

uint64_t _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0()
{
  return MEMORY[0x270F44A20]();
}

uint64_t sub_253B07160()
{
  return MEMORY[0x270F44A28]();
}

uint64_t sub_253B07170()
{
  return MEMORY[0x270F44A70]();
}

uint64_t sub_253B07180()
{
  return MEMORY[0x270F44A78]();
}

uint64_t sub_253B07190()
{
  return MEMORY[0x270F44A80]();
}

uint64_t sub_253B071A0()
{
  return MEMORY[0x270F44A90]();
}

uint64_t sub_253B071B0()
{
  return MEMORY[0x270F44A98]();
}

uint64_t sub_253B071C0()
{
  return MEMORY[0x270F44AA8]();
}

uint64_t sub_253B071D0()
{
  return MEMORY[0x270F44AB0]();
}

uint64_t sub_253B071E0()
{
  return MEMORY[0x270F44AD8]();
}

uint64_t sub_253B07210()
{
  return MEMORY[0x270F44B00]();
}

uint64_t sub_253B07220()
{
  return MEMORY[0x270F44B08]();
}

uint64_t sub_253B07230()
{
  return MEMORY[0x270F44B10]();
}

uint64_t sub_253B07240()
{
  return MEMORY[0x270F44B20]();
}

uint64_t sub_253B07250()
{
  return MEMORY[0x270F44B30]();
}

uint64_t sub_253B07260()
{
  return MEMORY[0x270F44B38]();
}

uint64_t sub_253B07270()
{
  return MEMORY[0x270F44B40]();
}

uint64_t sub_253B07280()
{
  return MEMORY[0x270F44B48]();
}

uint64_t sub_253B07290()
{
  return MEMORY[0x270F44B50]();
}

uint64_t sub_253B072A0()
{
  return MEMORY[0x270F44B78]();
}

uint64_t sub_253B072B0()
{
  return MEMORY[0x270F44B88]();
}

uint64_t sub_253B072C0()
{
  return MEMORY[0x270F44B90]();
}

uint64_t sub_253B072D0()
{
  return MEMORY[0x270F44B98]();
}

uint64_t sub_253B072E0()
{
  return MEMORY[0x270F44BA0]();
}

uint64_t sub_253B072F0()
{
  return MEMORY[0x270F44BA8]();
}

uint64_t sub_253B07300()
{
  return MEMORY[0x270F44BB0]();
}

uint64_t sub_253B07310()
{
  return MEMORY[0x270F44BC0]();
}

uint64_t sub_253B07320()
{
  return MEMORY[0x270F44BD8]();
}

uint64_t sub_253B07330()
{
  return MEMORY[0x270F44BF0]();
}

uint64_t sub_253B07340()
{
  return MEMORY[0x270F44BF8]();
}

uint64_t sub_253B07350()
{
  return MEMORY[0x270F44C08]();
}

uint64_t sub_253B07360()
{
  return MEMORY[0x270F44C18]();
}

uint64_t sub_253B07370()
{
  return MEMORY[0x270F44C20]();
}

uint64_t sub_253B07380()
{
  return MEMORY[0x270F44C38]();
}

uint64_t sub_253B07390()
{
  return MEMORY[0x270F44C80]();
}

uint64_t sub_253B073A0()
{
  return MEMORY[0x270F44C88]();
}

uint64_t sub_253B073B0()
{
  return MEMORY[0x270F44C98]();
}

uint64_t sub_253B073C0()
{
  return MEMORY[0x270F44CA0]();
}

uint64_t sub_253B073D0()
{
  return MEMORY[0x270F44CA8]();
}

uint64_t sub_253B073E0()
{
  return MEMORY[0x270F44CC0]();
}

uint64_t sub_253B073F0()
{
  return MEMORY[0x270F44CD8]();
}

uint64_t sub_253B07400()
{
  return MEMORY[0x270F44CE0]();
}

uint64_t sub_253B07410()
{
  return MEMORY[0x270F44D00]();
}

uint64_t sub_253B07420()
{
  return MEMORY[0x270F44D08]();
}

uint64_t sub_253B07430()
{
  return MEMORY[0x270F44D20]();
}

uint64_t sub_253B07440()
{
  return MEMORY[0x270F44D60]();
}

uint64_t sub_253B07450()
{
  return MEMORY[0x270F44D68]();
}

uint64_t sub_253B07460()
{
  return MEMORY[0x270F44D88]();
}

uint64_t sub_253B07470()
{
  return MEMORY[0x270F44D90]();
}

uint64_t sub_253B07480()
{
  return MEMORY[0x270F44D98]();
}

uint64_t sub_253B07490()
{
  return MEMORY[0x270F44DA0]();
}

uint64_t sub_253B074A0()
{
  return MEMORY[0x270F44DB0]();
}

uint64_t sub_253B074B0()
{
  return MEMORY[0x270F44DC8]();
}

uint64_t sub_253B074C0()
{
  return MEMORY[0x270F44DD8]();
}

uint64_t sub_253B074D0()
{
  return MEMORY[0x270F44DE0]();
}

uint64_t sub_253B074E0()
{
  return MEMORY[0x270F44DE8]();
}

uint64_t sub_253B074F0()
{
  return MEMORY[0x270F44DF0]();
}

uint64_t sub_253B07500()
{
  return MEMORY[0x270F44E00]();
}

uint64_t sub_253B07510()
{
  return MEMORY[0x270F44E10]();
}

uint64_t sub_253B07520()
{
  return MEMORY[0x270F44E18]();
}

uint64_t sub_253B07530()
{
  return MEMORY[0x270F44E20]();
}

uint64_t sub_253B07540()
{
  return MEMORY[0x270F44E28]();
}

uint64_t sub_253B07550()
{
  return MEMORY[0x270F41198]();
}

uint64_t sub_253B07560()
{
  return MEMORY[0x270F411A0]();
}

uint64_t sub_253B07570()
{
  return MEMORY[0x270F411A8]();
}

uint64_t sub_253B07580()
{
  return MEMORY[0x270F411B0]();
}

uint64_t sub_253B07590()
{
  return MEMORY[0x270F411B8]();
}

uint64_t sub_253B075A0()
{
  return MEMORY[0x270F411C0]();
}

uint64_t sub_253B075B0()
{
  return MEMORY[0x270F411C8]();
}

uint64_t sub_253B075C0()
{
  return MEMORY[0x270F411D8]();
}

uint64_t sub_253B075D0()
{
  return MEMORY[0x270F411E0]();
}

uint64_t sub_253B075E0()
{
  return MEMORY[0x270F411E8]();
}

uint64_t sub_253B075F0()
{
  return MEMORY[0x270F411F0]();
}

uint64_t sub_253B07600()
{
  return MEMORY[0x270F411F8]();
}

uint64_t sub_253B07610()
{
  return MEMORY[0x270F41208]();
}

uint64_t sub_253B07620()
{
  return MEMORY[0x270F41210]();
}

uint64_t sub_253B07630()
{
  return MEMORY[0x270F41218]();
}

uint64_t sub_253B07640()
{
  return MEMORY[0x270F41220]();
}

uint64_t sub_253B07650()
{
  return MEMORY[0x270F41228]();
}

uint64_t sub_253B07660()
{
  return MEMORY[0x270F41230]();
}

uint64_t sub_253B07670()
{
  return MEMORY[0x270F41238]();
}

uint64_t sub_253B07680()
{
  return MEMORY[0x270F41250]();
}

uint64_t sub_253B07690()
{
  return MEMORY[0x270F41258]();
}

uint64_t sub_253B076A0()
{
  return MEMORY[0x270F41260]();
}

uint64_t sub_253B076B0()
{
  return MEMORY[0x270F41268]();
}

uint64_t sub_253B076C0()
{
  return MEMORY[0x270F41270]();
}

uint64_t sub_253B076D0()
{
  return MEMORY[0x270F41278]();
}

uint64_t sub_253B076E0()
{
  return MEMORY[0x270F41280]();
}

uint64_t sub_253B076F0()
{
  return MEMORY[0x270F41288]();
}

uint64_t sub_253B07700()
{
  return MEMORY[0x270F41290]();
}

uint64_t sub_253B07710()
{
  return MEMORY[0x270F41298]();
}

uint64_t sub_253B07720()
{
  return MEMORY[0x270F412A0]();
}

uint64_t sub_253B07730()
{
  return MEMORY[0x270F412A8]();
}

uint64_t sub_253B07740()
{
  return MEMORY[0x270F412B0]();
}

uint64_t sub_253B07750()
{
  return MEMORY[0x270F412B8]();
}

uint64_t sub_253B07760()
{
  return MEMORY[0x270F412C0]();
}

uint64_t sub_253B07770()
{
  return MEMORY[0x270F412C8]();
}

uint64_t sub_253B07780()
{
  return MEMORY[0x270F412D8]();
}

uint64_t sub_253B07790()
{
  return MEMORY[0x270F412E0]();
}

uint64_t sub_253B077A0()
{
  return MEMORY[0x270F41300]();
}

uint64_t sub_253B077B0()
{
  return MEMORY[0x270F41338]();
}

uint64_t sub_253B077C0()
{
  return MEMORY[0x270F41358]();
}

uint64_t _s30IntelligenceFlowPlannerSupport9ToolQueryV6OutputV2eeoiySbAE_AEtFZ_0()
{
  return MEMORY[0x270F41398]();
}

uint64_t sub_253B077E0()
{
  return MEMORY[0x270F413A0]();
}

uint64_t sub_253B077F0()
{
  return MEMORY[0x270F413A8]();
}

uint64_t sub_253B07800()
{
  return MEMORY[0x270F413B0]();
}

uint64_t sub_253B07810()
{
  return MEMORY[0x270F413B8]();
}

uint64_t sub_253B07820()
{
  return MEMORY[0x270F413C0]();
}

uint64_t sub_253B07830()
{
  return MEMORY[0x270F413D8]();
}

uint64_t sub_253B07840()
{
  return MEMORY[0x270F413E0]();
}

uint64_t sub_253B07850()
{
  return MEMORY[0x270F413E8]();
}

uint64_t sub_253B07860()
{
  return MEMORY[0x270F41400]();
}

uint64_t sub_253B07870()
{
  return MEMORY[0x270F41408]();
}

uint64_t sub_253B07880()
{
  return MEMORY[0x270F41410]();
}

uint64_t sub_253B07890()
{
  return MEMORY[0x270F41418]();
}

uint64_t sub_253B078A0()
{
  return MEMORY[0x270F41428]();
}

uint64_t sub_253B078B0()
{
  return MEMORY[0x270F41430]();
}

uint64_t sub_253B078C0()
{
  return MEMORY[0x270F41438]();
}

uint64_t sub_253B078D0()
{
  return MEMORY[0x270F41440]();
}

uint64_t sub_253B078E0()
{
  return MEMORY[0x270F41448]();
}

uint64_t sub_253B078F0()
{
  return MEMORY[0x270F41450]();
}

uint64_t sub_253B07900()
{
  return MEMORY[0x270F41458]();
}

uint64_t sub_253B07910()
{
  return MEMORY[0x270F41460]();
}

uint64_t sub_253B07920()
{
  return MEMORY[0x270F41468]();
}

uint64_t sub_253B07930()
{
  return MEMORY[0x270F41470]();
}

uint64_t sub_253B07940()
{
  return MEMORY[0x270F41478]();
}

uint64_t sub_253B07950()
{
  return MEMORY[0x270F41480]();
}

uint64_t sub_253B07960()
{
  return MEMORY[0x270F41488]();
}

uint64_t sub_253B07970()
{
  return MEMORY[0x270F41490]();
}

uint64_t sub_253B07980()
{
  return MEMORY[0x270F41498]();
}

uint64_t sub_253B07990()
{
  return MEMORY[0x270F414A0]();
}

uint64_t sub_253B079A0()
{
  return MEMORY[0x270F414A8]();
}

uint64_t sub_253B079B0()
{
  return MEMORY[0x270F414B0]();
}

uint64_t sub_253B079C0()
{
  return MEMORY[0x270F414B8]();
}

uint64_t sub_253B079D0()
{
  return MEMORY[0x270F414C0]();
}

uint64_t sub_253B079E0()
{
  return MEMORY[0x270F414C8]();
}

uint64_t sub_253B079F0()
{
  return MEMORY[0x270F414D0]();
}

uint64_t sub_253B07A00()
{
  return MEMORY[0x270F414D8]();
}

uint64_t sub_253B07A10()
{
  return MEMORY[0x270F414E0]();
}

uint64_t sub_253B07A20()
{
  return MEMORY[0x270F414E8]();
}

uint64_t sub_253B07A30()
{
  return MEMORY[0x270F414F0]();
}

uint64_t sub_253B07A40()
{
  return MEMORY[0x270F41500]();
}

uint64_t sub_253B07A50()
{
  return MEMORY[0x270F41508]();
}

uint64_t sub_253B07A60()
{
  return MEMORY[0x270F41510]();
}

uint64_t sub_253B07A70()
{
  return MEMORY[0x270F41518]();
}

uint64_t sub_253B07A80()
{
  return MEMORY[0x270F41530]();
}

uint64_t sub_253B07A90()
{
  return MEMORY[0x270F41540]();
}

uint64_t sub_253B07AA0()
{
  return MEMORY[0x270F41548]();
}

uint64_t sub_253B07AB0()
{
  return MEMORY[0x270F41550]();
}

uint64_t sub_253B07AC0()
{
  return MEMORY[0x270F41558]();
}

uint64_t sub_253B07AD0()
{
  return MEMORY[0x270F41560]();
}

uint64_t sub_253B07AE0()
{
  return MEMORY[0x270F41568]();
}

uint64_t sub_253B07AF0()
{
  return MEMORY[0x270F41570]();
}

uint64_t sub_253B07B00()
{
  return MEMORY[0x270F41578]();
}

uint64_t sub_253B07B10()
{
  return MEMORY[0x270F41580]();
}

uint64_t sub_253B07B20()
{
  return MEMORY[0x270F41588]();
}

uint64_t sub_253B07B30()
{
  return MEMORY[0x270F41590]();
}

uint64_t sub_253B07B40()
{
  return MEMORY[0x270F41598]();
}

uint64_t sub_253B07B50()
{
  return MEMORY[0x270F415A0]();
}

uint64_t sub_253B07B60()
{
  return MEMORY[0x270F415B0]();
}

uint64_t sub_253B07B70()
{
  return MEMORY[0x270F415B8]();
}

uint64_t sub_253B07B80()
{
  return MEMORY[0x270F415C0]();
}

uint64_t sub_253B07B90()
{
  return MEMORY[0x270F415C8]();
}

uint64_t sub_253B07BA0()
{
  return MEMORY[0x270F415D0]();
}

uint64_t sub_253B07BB0()
{
  return MEMORY[0x270F415D8]();
}

uint64_t sub_253B07BC0()
{
  return MEMORY[0x270F415E0]();
}

uint64_t sub_253B07BD0()
{
  return MEMORY[0x270F415E8]();
}

uint64_t sub_253B07BE0()
{
  return MEMORY[0x270F415F0]();
}

uint64_t sub_253B07BF0()
{
  return MEMORY[0x270F415F8]();
}

uint64_t sub_253B07C00()
{
  return MEMORY[0x270F41600]();
}

uint64_t sub_253B07C10()
{
  return MEMORY[0x270F41608]();
}

uint64_t sub_253B07C20()
{
  return MEMORY[0x270F41610]();
}

uint64_t sub_253B07C30()
{
  return MEMORY[0x270F41618]();
}

uint64_t sub_253B07C40()
{
  return MEMORY[0x270F41620]();
}

uint64_t sub_253B07C50()
{
  return MEMORY[0x270F41628]();
}

uint64_t sub_253B07C60()
{
  return MEMORY[0x270F41630]();
}

uint64_t sub_253B07C70()
{
  return MEMORY[0x270F41638]();
}

uint64_t sub_253B07C80()
{
  return MEMORY[0x270F41640]();
}

uint64_t sub_253B07C90()
{
  return MEMORY[0x270F41648]();
}

uint64_t sub_253B07CA0()
{
  return MEMORY[0x270F41650]();
}

uint64_t sub_253B07CB0()
{
  return MEMORY[0x270F41658]();
}

uint64_t sub_253B07CC0()
{
  return MEMORY[0x270F41660]();
}

uint64_t sub_253B07CD0()
{
  return MEMORY[0x270F41668]();
}

uint64_t sub_253B07CE0()
{
  return MEMORY[0x270F41670]();
}

uint64_t sub_253B07CF0()
{
  return MEMORY[0x270F41678]();
}

uint64_t sub_253B07D00()
{
  return MEMORY[0x270F41680]();
}

uint64_t sub_253B07D10()
{
  return MEMORY[0x270F41688]();
}

uint64_t sub_253B07D20()
{
  return MEMORY[0x270F41690]();
}

uint64_t sub_253B07D30()
{
  return MEMORY[0x270F416A0]();
}

uint64_t sub_253B07D40()
{
  return MEMORY[0x270F416A8]();
}

uint64_t sub_253B07D50()
{
  return MEMORY[0x270F416B0]();
}

uint64_t sub_253B07D60()
{
  return MEMORY[0x270F416B8]();
}

uint64_t sub_253B07D70()
{
  return MEMORY[0x270F416C0]();
}

uint64_t sub_253B07D80()
{
  return MEMORY[0x270F416D0]();
}

uint64_t sub_253B07D90()
{
  return MEMORY[0x270F416D8]();
}

uint64_t sub_253B07DA0()
{
  return MEMORY[0x270F416E0]();
}

uint64_t sub_253B07DB0()
{
  return MEMORY[0x270F416E8]();
}

uint64_t sub_253B07DC0()
{
  return MEMORY[0x270F416F0]();
}

uint64_t sub_253B07DD0()
{
  return MEMORY[0x270F416F8]();
}

uint64_t sub_253B07DE0()
{
  return MEMORY[0x270F41700]();
}

uint64_t sub_253B07DF0()
{
  return MEMORY[0x270F41708]();
}

uint64_t sub_253B07E00()
{
  return MEMORY[0x270F41710]();
}

uint64_t sub_253B07E10()
{
  return MEMORY[0x270F41718]();
}

uint64_t sub_253B07E20()
{
  return MEMORY[0x270F41720]();
}

uint64_t sub_253B07E30()
{
  return MEMORY[0x270F41728]();
}

uint64_t sub_253B07E40()
{
  return MEMORY[0x270F41730]();
}

uint64_t sub_253B07E50()
{
  return MEMORY[0x270F41738]();
}

uint64_t sub_253B07E60()
{
  return MEMORY[0x270F41740]();
}

uint64_t sub_253B07E70()
{
  return MEMORY[0x270F41748]();
}

uint64_t sub_253B07E80()
{
  return MEMORY[0x270F41750]();
}

uint64_t sub_253B07E90()
{
  return MEMORY[0x270F41758]();
}

uint64_t sub_253B07EA0()
{
  return MEMORY[0x270F41760]();
}

uint64_t sub_253B07EB0()
{
  return MEMORY[0x270F41768]();
}

uint64_t sub_253B07EC0()
{
  return MEMORY[0x270F41770]();
}

uint64_t sub_253B07ED0()
{
  return MEMORY[0x270F41778]();
}

uint64_t sub_253B07EE0()
{
  return MEMORY[0x270F41780]();
}

uint64_t sub_253B07EF0()
{
  return MEMORY[0x270F41788]();
}

uint64_t sub_253B07F00()
{
  return MEMORY[0x270F41790]();
}

uint64_t sub_253B07F10()
{
  return MEMORY[0x270F41798]();
}

uint64_t sub_253B07F20()
{
  return MEMORY[0x270F417A0]();
}

uint64_t sub_253B07F30()
{
  return MEMORY[0x270F417A8]();
}

uint64_t sub_253B07F40()
{
  return MEMORY[0x270F417B0]();
}

uint64_t sub_253B07F50()
{
  return MEMORY[0x270F417B8]();
}

uint64_t sub_253B07F60()
{
  return MEMORY[0x270F417C0]();
}

uint64_t sub_253B07F70()
{
  return MEMORY[0x270F417C8]();
}

uint64_t sub_253B07F80()
{
  return MEMORY[0x270F417D0]();
}

uint64_t sub_253B07F90()
{
  return MEMORY[0x270F417D8]();
}

uint64_t sub_253B07FA0()
{
  return MEMORY[0x270F417E0]();
}

uint64_t sub_253B07FB0()
{
  return MEMORY[0x270F417F0]();
}

uint64_t sub_253B07FC0()
{
  return MEMORY[0x270F417F8]();
}

uint64_t sub_253B07FD0()
{
  return MEMORY[0x270F41800]();
}

uint64_t sub_253B07FE0()
{
  return MEMORY[0x270F41808]();
}

uint64_t sub_253B07FF0()
{
  return MEMORY[0x270F41810]();
}

uint64_t sub_253B08000()
{
  return MEMORY[0x270F41818]();
}

uint64_t sub_253B08010()
{
  return MEMORY[0x270F41820]();
}

uint64_t sub_253B08020()
{
  return MEMORY[0x270F41828]();
}

uint64_t sub_253B08030()
{
  return MEMORY[0x270F41830]();
}

uint64_t sub_253B08040()
{
  return MEMORY[0x270F41838]();
}

uint64_t sub_253B08050()
{
  return MEMORY[0x270F41848]();
}

uint64_t sub_253B08060()
{
  return MEMORY[0x270F41850]();
}

uint64_t sub_253B08070()
{
  return MEMORY[0x270F41858]();
}

uint64_t sub_253B08080()
{
  return MEMORY[0x270F41868]();
}

uint64_t sub_253B08090()
{
  return MEMORY[0x270F41870]();
}

uint64_t sub_253B080A0()
{
  return MEMORY[0x270F41878]();
}

uint64_t sub_253B080B0()
{
  return MEMORY[0x270F41880]();
}

uint64_t sub_253B080C0()
{
  return MEMORY[0x270F41890]();
}

uint64_t sub_253B080D0()
{
  return MEMORY[0x270F41898]();
}

uint64_t sub_253B080E0()
{
  return MEMORY[0x270F418A0]();
}

uint64_t sub_253B080F0()
{
  return MEMORY[0x270F418A8]();
}

uint64_t sub_253B08100()
{
  return MEMORY[0x270F418B0]();
}

uint64_t sub_253B08110()
{
  return MEMORY[0x270F418B8]();
}

uint64_t sub_253B08120()
{
  return MEMORY[0x270F418D0]();
}

uint64_t sub_253B08130()
{
  return MEMORY[0x270F418D8]();
}

uint64_t sub_253B08140()
{
  return MEMORY[0x270F41900]();
}

uint64_t sub_253B08150()
{
  return MEMORY[0x270F41908]();
}

uint64_t sub_253B08160()
{
  return MEMORY[0x270F41920]();
}

uint64_t sub_253B08170()
{
  return MEMORY[0x270F41928]();
}

uint64_t sub_253B08180()
{
  return MEMORY[0x270F41938]();
}

uint64_t sub_253B08190()
{
  return MEMORY[0x270F41950]();
}

uint64_t sub_253B081A0()
{
  return MEMORY[0x270F41958]();
}

uint64_t sub_253B081B0()
{
  return MEMORY[0x270F41960]();
}

uint64_t sub_253B081C0()
{
  return MEMORY[0x270F41968]();
}

uint64_t sub_253B081D0()
{
  return MEMORY[0x270F41970]();
}

uint64_t sub_253B081E0()
{
  return MEMORY[0x270F41978]();
}

uint64_t sub_253B08200()
{
  return MEMORY[0x270F41988]();
}

uint64_t sub_253B08210()
{
  return MEMORY[0x270F41990]();
}

uint64_t sub_253B08220()
{
  return MEMORY[0x270F41998]();
}

uint64_t sub_253B08230()
{
  return MEMORY[0x270F419A0]();
}

uint64_t sub_253B08240()
{
  return MEMORY[0x270F419A8]();
}

uint64_t sub_253B08250()
{
  return MEMORY[0x270F419B0]();
}

uint64_t sub_253B08260()
{
  return MEMORY[0x270F419B8]();
}

uint64_t sub_253B08270()
{
  return MEMORY[0x270F419C0]();
}

uint64_t sub_253B08280()
{
  return MEMORY[0x270F419C8]();
}

uint64_t sub_253B08290()
{
  return MEMORY[0x270F419D0]();
}

uint64_t sub_253B082A0()
{
  return MEMORY[0x270F419D8]();
}

uint64_t sub_253B082B0()
{
  return MEMORY[0x270F419E0]();
}

uint64_t sub_253B082C0()
{
  return MEMORY[0x270F419E8]();
}

uint64_t sub_253B082D0()
{
  return MEMORY[0x270F419F0]();
}

uint64_t sub_253B082E0()
{
  return MEMORY[0x270F419F8]();
}

uint64_t sub_253B082F0()
{
  return MEMORY[0x270F41A28]();
}

uint64_t sub_253B08300()
{
  return MEMORY[0x270F41A30]();
}

uint64_t sub_253B08310()
{
  return MEMORY[0x270F41A50]();
}

uint64_t sub_253B08320()
{
  return MEMORY[0x270F41A68]();
}

uint64_t sub_253B08330()
{
  return MEMORY[0x270F41A80]();
}

uint64_t sub_253B08340()
{
  return MEMORY[0x270F41AA0]();
}

uint64_t sub_253B08350()
{
  return MEMORY[0x270F41AB8]();
}

uint64_t sub_253B08360()
{
  return MEMORY[0x270F41AC8]();
}

uint64_t sub_253B08370()
{
  return MEMORY[0x270F41AD0]();
}

uint64_t sub_253B08380()
{
  return MEMORY[0x270F41AE0]();
}

uint64_t sub_253B08390()
{
  return MEMORY[0x270F41AF0]();
}

uint64_t sub_253B083A0()
{
  return MEMORY[0x270F41AF8]();
}

uint64_t sub_253B083B0()
{
  return MEMORY[0x270F57648]();
}

uint64_t sub_253B083C0()
{
  return MEMORY[0x270F57690]();
}

uint64_t sub_253B083D0()
{
  return MEMORY[0x270F57698]();
}

uint64_t sub_253B083E0()
{
  return MEMORY[0x270F576A0]();
}

uint64_t sub_253B083F0()
{
  return MEMORY[0x270F576A8]();
}

uint64_t sub_253B08400()
{
  return MEMORY[0x270F576B0]();
}

uint64_t sub_253B08410()
{
  return MEMORY[0x270F57730]();
}

uint64_t sub_253B08440()
{
  return MEMORY[0x270F57758]();
}

uint64_t sub_253B08450()
{
  return MEMORY[0x270F57760]();
}

uint64_t sub_253B08470()
{
  return MEMORY[0x270F57780]();
}

uint64_t sub_253B08480()
{
  return MEMORY[0x270F41EE8]();
}

uint64_t sub_253B08490()
{
  return MEMORY[0x270F41F00]();
}

uint64_t sub_253B084A0()
{
  return MEMORY[0x270F41F18]();
}

uint64_t sub_253B084B0()
{
  return MEMORY[0x270F41F28]();
}

uint64_t sub_253B084C0()
{
  return MEMORY[0x270F41F38]();
}

uint64_t sub_253B084D0()
{
  return MEMORY[0x270F41F40]();
}

uint64_t sub_253B084E0()
{
  return MEMORY[0x270F41F48]();
}

uint64_t sub_253B084F0()
{
  return MEMORY[0x270F41F58]();
}

uint64_t sub_253B08500()
{
  return MEMORY[0x270F41F60]();
}

uint64_t sub_253B08510()
{
  return MEMORY[0x270F41F70]();
}

uint64_t sub_253B08520()
{
  return MEMORY[0x270F41F78]();
}

uint64_t sub_253B08530()
{
  return MEMORY[0x270F41F80]();
}

uint64_t sub_253B08540()
{
  return MEMORY[0x270F41F90]();
}

uint64_t sub_253B08550()
{
  return MEMORY[0x270F41FA0]();
}

uint64_t sub_253B08560()
{
  return MEMORY[0x270F41FB0]();
}

uint64_t sub_253B08570()
{
  return MEMORY[0x270F41FB8]();
}

uint64_t sub_253B08580()
{
  return MEMORY[0x270F41FC0]();
}

uint64_t sub_253B08590()
{
  return MEMORY[0x270F41FC8]();
}

uint64_t sub_253B085A0()
{
  return MEMORY[0x270F41FD0]();
}

uint64_t sub_253B085B0()
{
  return MEMORY[0x270F41FD8]();
}

uint64_t sub_253B085C0()
{
  return MEMORY[0x270F41FE0]();
}

uint64_t sub_253B085D0()
{
  return MEMORY[0x270F41FE8]();
}

uint64_t sub_253B085E0()
{
  return MEMORY[0x270F41FF0]();
}

uint64_t sub_253B085F0()
{
  return MEMORY[0x270F43230]();
}

uint64_t sub_253B08600()
{
  return MEMORY[0x270F43240]();
}

uint64_t sub_253B08610()
{
  return MEMORY[0x270F43250]();
}

uint64_t sub_253B08620()
{
  return MEMORY[0x270F43258]();
}

uint64_t sub_253B08630()
{
  return MEMORY[0x270F43260]();
}

uint64_t sub_253B08640()
{
  return MEMORY[0x270F432B0]();
}

uint64_t sub_253B08650()
{
  return MEMORY[0x270F432E0]();
}

uint64_t sub_253B08660()
{
  return MEMORY[0x270F432E8]();
}

uint64_t sub_253B08670()
{
  return MEMORY[0x270F432F0]();
}

uint64_t sub_253B08680()
{
  return MEMORY[0x270F432F8]();
}

uint64_t sub_253B08690()
{
  return MEMORY[0x270F43308]();
}

uint64_t sub_253B086A0()
{
  return MEMORY[0x270F43310]();
}

uint64_t sub_253B086B0()
{
  return MEMORY[0x270F43318]();
}

uint64_t sub_253B086C0()
{
  return MEMORY[0x270F43320]();
}

uint64_t sub_253B086D0()
{
  return MEMORY[0x270F43328]();
}

uint64_t sub_253B086E0()
{
  return MEMORY[0x270F43338]();
}

uint64_t sub_253B086F0()
{
  return MEMORY[0x270F43348]();
}

uint64_t sub_253B08700()
{
  return MEMORY[0x270F43350]();
}

uint64_t sub_253B08710()
{
  return MEMORY[0x270F43358]();
}

uint64_t sub_253B08720()
{
  return MEMORY[0x270F43360]();
}

uint64_t sub_253B08730()
{
  return MEMORY[0x270F43368]();
}

uint64_t sub_253B08740()
{
  return MEMORY[0x270F43370]();
}

uint64_t sub_253B08750()
{
  return MEMORY[0x270F43378]();
}

uint64_t sub_253B08760()
{
  return MEMORY[0x270F43380]();
}

uint64_t sub_253B08770()
{
  return MEMORY[0x270F43388]();
}

uint64_t sub_253B08780()
{
  return MEMORY[0x270F43390]();
}

uint64_t sub_253B08790()
{
  return MEMORY[0x270F43398]();
}

uint64_t sub_253B087A0()
{
  return MEMORY[0x270F433A0]();
}

uint64_t sub_253B087B0()
{
  return MEMORY[0x270F433A8]();
}

uint64_t sub_253B087C0()
{
  return MEMORY[0x270F433B0]();
}

uint64_t sub_253B087D0()
{
  return MEMORY[0x270F433B8]();
}

uint64_t sub_253B087E0()
{
  return MEMORY[0x270F433C0]();
}

uint64_t sub_253B087F0()
{
  return MEMORY[0x270F433C8]();
}

uint64_t sub_253B08800()
{
  return MEMORY[0x270F433D0]();
}

uint64_t sub_253B08810()
{
  return MEMORY[0x270F433D8]();
}

uint64_t sub_253B08820()
{
  return MEMORY[0x270F433E0]();
}

uint64_t sub_253B08830()
{
  return MEMORY[0x270F433E8]();
}

uint64_t sub_253B08840()
{
  return MEMORY[0x270F433F0]();
}

uint64_t sub_253B08850()
{
  return MEMORY[0x270F433F8]();
}

uint64_t sub_253B08860()
{
  return MEMORY[0x270F43400]();
}

uint64_t sub_253B08870()
{
  return MEMORY[0x270F43408]();
}

uint64_t sub_253B08880()
{
  return MEMORY[0x270F43418]();
}

uint64_t sub_253B08890()
{
  return MEMORY[0x270F43420]();
}

uint64_t sub_253B088A0()
{
  return MEMORY[0x270F43428]();
}

uint64_t sub_253B088B0()
{
  return MEMORY[0x270F43438]();
}

uint64_t sub_253B088C0()
{
  return MEMORY[0x270F43530]();
}

uint64_t sub_253B088D0()
{
  return MEMORY[0x270F43558]();
}

uint64_t sub_253B088E0()
{
  return MEMORY[0x270F43580]();
}

uint64_t sub_253B088F0()
{
  return MEMORY[0x270F44208]();
}

uint64_t sub_253B08900()
{
  return MEMORY[0x270F44210]();
}

uint64_t sub_253B08910()
{
  return MEMORY[0x270FA2CC0]();
}

uint64_t sub_253B08920()
{
  return MEMORY[0x270FA2CE8]();
}

uint64_t sub_253B08930()
{
  return MEMORY[0x270FA2CF8]();
}

uint64_t sub_253B08940()
{
  return MEMORY[0x270FA2D00]();
}

uint64_t sub_253B08950()
{
  return MEMORY[0x270FA2D30]();
}

uint64_t sub_253B08960()
{
  return MEMORY[0x270FA2D58]();
}

uint64_t sub_253B08970()
{
  return MEMORY[0x270FA2D88]();
}

uint64_t sub_253B08980()
{
  return MEMORY[0x270FA2D90]();
}

uint64_t sub_253B08990()
{
  return MEMORY[0x270FA2DB0]();
}

uint64_t sub_253B089A0()
{
  return MEMORY[0x270FA2DD0]();
}

uint64_t sub_253B089B0()
{
  return MEMORY[0x270FA2DE0]();
}

uint64_t sub_253B089C0()
{
  return MEMORY[0x270FA2DF0]();
}

uint64_t sub_253B089D0()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_253B089E0()
{
  return MEMORY[0x270FA2E18]();
}

uint64_t sub_253B089F0()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_253B08A00()
{
  return MEMORY[0x270EE7670]();
}

uint64_t sub_253B08A10()
{
  return MEMORY[0x270F7F908]();
}

uint64_t sub_253B08A20()
{
  return MEMORY[0x270F7F910]();
}

uint64_t sub_253B08A30()
{
  return MEMORY[0x270F7F920]();
}

uint64_t sub_253B08A40()
{
  return MEMORY[0x270F7F938]();
}

uint64_t sub_253B08A50()
{
  return MEMORY[0x270F7F940]();
}

uint64_t sub_253B08A60()
{
  return MEMORY[0x270F7F948]();
}

uint64_t sub_253B08A70()
{
  return MEMORY[0x270F7F968]();
}

uint64_t sub_253B08A80()
{
  return MEMORY[0x270F7F970]();
}

uint64_t sub_253B08A90()
{
  return MEMORY[0x270F7F980]();
}

uint64_t sub_253B08AA0()
{
  return MEMORY[0x270F7F988]();
}

uint64_t sub_253B08AB0()
{
  return MEMORY[0x270F7F9A8]();
}

uint64_t sub_253B08AC0()
{
  return MEMORY[0x270F7F9B0]();
}

uint64_t sub_253B08AD0()
{
  return MEMORY[0x270F7F9C0]();
}

uint64_t sub_253B08AE0()
{
  return MEMORY[0x270F7F9C8]();
}

uint64_t sub_253B08AF0()
{
  return MEMORY[0x270F7F9D8]();
}

uint64_t sub_253B08B00()
{
  return MEMORY[0x270F7F9E0]();
}

uint64_t sub_253B08B10()
{
  return MEMORY[0x270F7F9F0]();
}

uint64_t sub_253B08B20()
{
  return MEMORY[0x270F7F9F8]();
}

uint64_t sub_253B08B30()
{
  return MEMORY[0x270F7FA08]();
}

uint64_t sub_253B08B40()
{
  return MEMORY[0x270F7FA28]();
}

uint64_t sub_253B08B50()
{
  return MEMORY[0x270F7FA30]();
}

uint64_t sub_253B08B60()
{
  return MEMORY[0x270F7FB08]();
}

uint64_t sub_253B08B70()
{
  return MEMORY[0x270F7FB10]();
}

uint64_t sub_253B08B80()
{
  return MEMORY[0x270F7FB18]();
}

uint64_t sub_253B08B90()
{
  return MEMORY[0x270F7FB28]();
}

uint64_t sub_253B08BA0()
{
  return MEMORY[0x270F7FB40]();
}

uint64_t sub_253B08BB0()
{
  return MEMORY[0x270F7FB48]();
}

uint64_t sub_253B08BC0()
{
  return MEMORY[0x270F7FB58]();
}

uint64_t sub_253B08BD0()
{
  return MEMORY[0x270F7FBB8]();
}

uint64_t sub_253B08BF0()
{
  return MEMORY[0x270F7FBC8]();
}

uint64_t sub_253B08CA0()
{
  return MEMORY[0x270F7FCB0]();
}

uint64_t sub_253B08CB0()
{
  return MEMORY[0x270F7FCB8]();
}

uint64_t sub_253B08CC0()
{
  return MEMORY[0x270F7FCC0]();
}

uint64_t sub_253B08CD0()
{
  return MEMORY[0x270F7FCC8]();
}

uint64_t sub_253B08CE0()
{
  return MEMORY[0x270F7FCD0]();
}

uint64_t sub_253B08CF0()
{
  return MEMORY[0x270F7FCD8]();
}

uint64_t sub_253B08D00()
{
  return MEMORY[0x270F7FCE0]();
}

uint64_t sub_253B08D10()
{
  return MEMORY[0x270F7FCE8]();
}

uint64_t sub_253B08D20()
{
  return MEMORY[0x270F7FCF0]();
}

uint64_t sub_253B08D30()
{
  return MEMORY[0x270F7FCF8]();
}

uint64_t sub_253B08D40()
{
  return MEMORY[0x270F7FD00]();
}

uint64_t sub_253B08D50()
{
  return MEMORY[0x270F7FD10]();
}

uint64_t sub_253B08D70()
{
  return MEMORY[0x270F7FD28]();
}

uint64_t sub_253B08D80()
{
  return MEMORY[0x270F7FD30]();
}

uint64_t sub_253B08D90()
{
  return MEMORY[0x270F7FD38]();
}

uint64_t sub_253B08DA0()
{
  return MEMORY[0x270F7FD68]();
}

uint64_t sub_253B08DB0()
{
  return MEMORY[0x270F7FD70]();
}

uint64_t sub_253B08DC0()
{
  return MEMORY[0x270F7FD78]();
}

uint64_t sub_253B08DD0()
{
  return MEMORY[0x270F7FD80]();
}

uint64_t sub_253B08DE0()
{
  return MEMORY[0x270F7FD88]();
}

uint64_t sub_253B08DF0()
{
  return MEMORY[0x270F7FD90]();
}

uint64_t sub_253B08E00()
{
  return MEMORY[0x270F7FD98]();
}

uint64_t sub_253B08E10()
{
  return MEMORY[0x270F7FDA0]();
}

uint64_t sub_253B08E20()
{
  return MEMORY[0x270F7FDA8]();
}

uint64_t sub_253B08E30()
{
  return MEMORY[0x270F7FDB0]();
}

uint64_t sub_253B08E40()
{
  return MEMORY[0x270F7FDB8]();
}

uint64_t sub_253B08E50()
{
  return MEMORY[0x270F7FDC0]();
}

uint64_t sub_253B08E60()
{
  return MEMORY[0x270F7FDC8]();
}

uint64_t sub_253B08E70()
{
  return MEMORY[0x270F7FDD0]();
}

uint64_t sub_253B08E80()
{
  return MEMORY[0x270F7FDD8]();
}

uint64_t sub_253B08E90()
{
  return MEMORY[0x270F7FDE0]();
}

uint64_t sub_253B08EA0()
{
  return MEMORY[0x270F7FDE8]();
}

uint64_t sub_253B08EB0()
{
  return MEMORY[0x270F7FDF0]();
}

uint64_t sub_253B08EC0()
{
  return MEMORY[0x270F7FDF8]();
}

uint64_t sub_253B08ED0()
{
  return MEMORY[0x270F7FE00]();
}

uint64_t sub_253B08EE0()
{
  return MEMORY[0x270F7FE08]();
}

uint64_t sub_253B08EF0()
{
  return MEMORY[0x270F7FE10]();
}

uint64_t sub_253B08F00()
{
  return MEMORY[0x270F7FE18]();
}

uint64_t sub_253B08F10()
{
  return MEMORY[0x270F7FE20]();
}

uint64_t sub_253B08F20()
{
  return MEMORY[0x270F7FE28]();
}

uint64_t sub_253B08F30()
{
  return MEMORY[0x270F7FE30]();
}

uint64_t sub_253B08F40()
{
  return MEMORY[0x270F7FE38]();
}

uint64_t sub_253B08F50()
{
  return MEMORY[0x270F7FE40]();
}

uint64_t sub_253B08F60()
{
  return MEMORY[0x270F7FE48]();
}

uint64_t sub_253B08F70()
{
  return MEMORY[0x270F7FE50]();
}

uint64_t sub_253B08F80()
{
  return MEMORY[0x270F7FE60]();
}

uint64_t sub_253B08F90()
{
  return MEMORY[0x270F7FE70]();
}

uint64_t sub_253B08FA0()
{
  return MEMORY[0x270F7FE88]();
}

uint64_t sub_253B08FB0()
{
  return MEMORY[0x270F7FE98]();
}

uint64_t sub_253B08FC0()
{
  return MEMORY[0x270F7FEB0]();
}

uint64_t sub_253B08FD0()
{
  return MEMORY[0x270F7FEB8]();
}

uint64_t sub_253B08FE0()
{
  return MEMORY[0x270F7FEC0]();
}

uint64_t sub_253B08FF0()
{
  return MEMORY[0x270F7FED8]();
}

uint64_t sub_253B09000()
{
  return MEMORY[0x270F7FEE8]();
}

uint64_t sub_253B09010()
{
  return MEMORY[0x270F7FEF0]();
}

uint64_t sub_253B09020()
{
  return MEMORY[0x270F7FF08]();
}

uint64_t sub_253B09030()
{
  return MEMORY[0x270F7FF40]();
}

uint64_t sub_253B09040()
{
  return MEMORY[0x270F7FF48]();
}

uint64_t sub_253B09050()
{
  return MEMORY[0x270F7FF58]();
}

uint64_t sub_253B09060()
{
  return MEMORY[0x270F7FF78]();
}

uint64_t sub_253B09070()
{
  return MEMORY[0x270F7FF80]();
}

uint64_t sub_253B09080()
{
  return MEMORY[0x270F7FF88]();
}

uint64_t sub_253B09090()
{
  return MEMORY[0x270F7FF98]();
}

uint64_t sub_253B090A0()
{
  return MEMORY[0x270F7FFA0]();
}

uint64_t sub_253B090B0()
{
  return MEMORY[0x270F7FFA8]();
}

uint64_t sub_253B090C0()
{
  return MEMORY[0x270F7FFC8]();
}

uint64_t sub_253B090D0()
{
  return MEMORY[0x270F7FFD0]();
}

uint64_t sub_253B090E0()
{
  return MEMORY[0x270F7FFE0]();
}

uint64_t sub_253B090F0()
{
  return MEMORY[0x270F7FFE8]();
}

uint64_t sub_253B09100()
{
  return MEMORY[0x270F7FFF0]();
}

uint64_t sub_253B09110()
{
  return MEMORY[0x270F7FFF8]();
}

uint64_t sub_253B09120()
{
  return MEMORY[0x270F80000]();
}

uint64_t sub_253B09130()
{
  return MEMORY[0x270F80038]();
}

uint64_t sub_253B09140()
{
  return MEMORY[0x270F80040]();
}

uint64_t sub_253B09150()
{
  return MEMORY[0x270F80048]();
}

uint64_t sub_253B09160()
{
  return MEMORY[0x270F80070]();
}

uint64_t sub_253B09170()
{
  return MEMORY[0x270F800A0]();
}

uint64_t sub_253B09180()
{
  return MEMORY[0x270F800A8]();
}

uint64_t sub_253B09190()
{
  return MEMORY[0x270F800B0]();
}

uint64_t sub_253B091A0()
{
  return MEMORY[0x270F800C0]();
}

uint64_t sub_253B091B0()
{
  return MEMORY[0x270F800C8]();
}

uint64_t sub_253B091C0()
{
  return MEMORY[0x270F800D0]();
}

uint64_t sub_253B091D0()
{
  return MEMORY[0x270F800E0]();
}

uint64_t sub_253B091E0()
{
  return MEMORY[0x270F800E8]();
}

uint64_t sub_253B091F0()
{
  return MEMORY[0x270F800F0]();
}

uint64_t sub_253B09200()
{
  return MEMORY[0x270F3EF78]();
}

uint64_t sub_253B09210()
{
  return MEMORY[0x270F3EF80]();
}

uint64_t sub_253B09220()
{
  return MEMORY[0x270F80168]();
}

uint64_t sub_253B09230()
{
  return MEMORY[0x270F80308]();
}

uint64_t sub_253B09240()
{
  return MEMORY[0x270F80310]();
}

uint64_t sub_253B09250()
{
  return MEMORY[0x270F80318]();
}

uint64_t sub_253B09260()
{
  return MEMORY[0x270F80328]();
}

uint64_t sub_253B09270()
{
  return MEMORY[0x270F80330]();
}

uint64_t sub_253B09280()
{
  return MEMORY[0x270F80338]();
}

uint64_t sub_253B09290()
{
  return MEMORY[0x270F80340]();
}

uint64_t sub_253B092A0()
{
  return MEMORY[0x270F80348]();
}

uint64_t sub_253B092B0()
{
  return MEMORY[0x270F80358]();
}

uint64_t sub_253B092C0()
{
  return MEMORY[0x270F80360]();
}

uint64_t sub_253B092D0()
{
  return MEMORY[0x270F803A0]();
}

uint64_t sub_253B092E0()
{
  return MEMORY[0x270F803B8]();
}

uint64_t sub_253B092F0()
{
  return MEMORY[0x270F803C0]();
}

uint64_t sub_253B09300()
{
  return MEMORY[0x270F803C8]();
}

uint64_t sub_253B09310()
{
  return MEMORY[0x270F803D0]();
}

uint64_t sub_253B09320()
{
  return MEMORY[0x270F803E0]();
}

uint64_t sub_253B09330()
{
  return MEMORY[0x270F80460]();
}

uint64_t sub_253B09340()
{
  return MEMORY[0x270F804A8]();
}

uint64_t sub_253B09350()
{
  return MEMORY[0x270F804B0]();
}

uint64_t sub_253B09360()
{
  return MEMORY[0x270F804B8]();
}

uint64_t sub_253B09370()
{
  return MEMORY[0x270F804C0]();
}

uint64_t sub_253B09380()
{
  return MEMORY[0x270F804C8]();
}

uint64_t sub_253B09390()
{
  return MEMORY[0x270F804D0]();
}

uint64_t sub_253B093A0()
{
  return MEMORY[0x270F804D8]();
}

uint64_t sub_253B093B0()
{
  return MEMORY[0x270F804E0]();
}

uint64_t sub_253B093C0()
{
  return MEMORY[0x270F804E8]();
}

uint64_t sub_253B093D0()
{
  return MEMORY[0x270F804F0]();
}

uint64_t sub_253B093E0()
{
  return MEMORY[0x270F805B8]();
}

uint64_t sub_253B093F0()
{
  return MEMORY[0x270F805C0]();
}

uint64_t sub_253B09400()
{
  return MEMORY[0x270F805C8]();
}

uint64_t sub_253B09410()
{
  return MEMORY[0x270F805D0]();
}

uint64_t sub_253B09420()
{
  return MEMORY[0x270F805D8]();
}

uint64_t sub_253B09430()
{
  return MEMORY[0x270F805E0]();
}

uint64_t sub_253B09440()
{
  return MEMORY[0x270F805E8]();
}

uint64_t sub_253B09450()
{
  return MEMORY[0x270F80638]();
}

uint64_t sub_253B09460()
{
  return MEMORY[0x270F80640]();
}

uint64_t sub_253B09470()
{
  return MEMORY[0x270F80658]();
}

uint64_t sub_253B09480()
{
  return MEMORY[0x270F80668]();
}

uint64_t sub_253B09490()
{
  return MEMORY[0x270F80670]();
}

uint64_t sub_253B094A0()
{
  return MEMORY[0x270F80678]();
}

uint64_t sub_253B094B0()
{
  return MEMORY[0x270F806A8]();
}

uint64_t sub_253B094C0()
{
  return MEMORY[0x270EEAA78]();
}

uint64_t sub_253B094D0()
{
  return MEMORY[0x270EEAA80]();
}

uint64_t sub_253B094E0()
{
  return MEMORY[0x270EEAA98]();
}

uint64_t sub_253B094F0()
{
  return MEMORY[0x270EEAAA0]();
}

uint64_t sub_253B09500()
{
  return MEMORY[0x270EEAAA8]();
}

uint64_t sub_253B09510()
{
  return MEMORY[0x270EEB070]();
}

uint64_t sub_253B09520()
{
  return MEMORY[0x270EEB078]();
}

uint64_t sub_253B09530()
{
  return MEMORY[0x270EEB088]();
}

uint64_t sub_253B09540()
{
  return MEMORY[0x270EEB090]();
}

uint64_t sub_253B09550()
{
  return MEMORY[0x270EEB0B8]();
}

uint64_t sub_253B09560()
{
  return MEMORY[0x270EEB0E0]();
}

uint64_t sub_253B09570()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_253B09580()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_253B09590()
{
  return MEMORY[0x270F9D060]();
}

uint64_t sub_253B095A0()
{
  return MEMORY[0x270F9D0A8]();
}

uint64_t sub_253B095B0()
{
  return MEMORY[0x270F9D1C0]();
}

uint64_t sub_253B095C0()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_253B095D0()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_253B095E0()
{
  return MEMORY[0x270F9D360]();
}

uint64_t sub_253B095F0()
{
  return MEMORY[0x270F9D380]();
}

uint64_t sub_253B09600()
{
  return MEMORY[0x270F9D388]();
}

uint64_t sub_253B09610()
{
  return MEMORY[0x270F9D390]();
}

uint64_t sub_253B09620()
{
  return MEMORY[0x270F9D3A8]();
}

uint64_t sub_253B09630()
{
  return MEMORY[0x270F9D3C0]();
}

uint64_t sub_253B09640()
{
  return MEMORY[0x270F9D3C8]();
}

uint64_t sub_253B09650()
{
  return MEMORY[0x270F9D3D0]();
}

uint64_t sub_253B09660()
{
  return MEMORY[0x270FA2B48]();
}

uint64_t sub_253B09670()
{
  return MEMORY[0x270F9D410]();
}

uint64_t sub_253B09680()
{
  return MEMORY[0x270F9D428]();
}

uint64_t sub_253B09690()
{
  return MEMORY[0x270F9D458]();
}

uint64_t sub_253B096A0()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_253B096B0()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_253B096C0()
{
  return MEMORY[0x270EF1870]();
}

uint64_t sub_253B096D0()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_253B096E0()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_253B096F0()
{
  return MEMORY[0x270EF19F8]();
}

uint64_t sub_253B09700()
{
  return MEMORY[0x270EF1A10]();
}

uint64_t sub_253B09710()
{
  return MEMORY[0x270EF1AA8]();
}

uint64_t sub_253B09720()
{
  return MEMORY[0x270EF1AD0]();
}

uint64_t sub_253B09730()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_253B09740()
{
  return MEMORY[0x270F9D5F8]();
}

uint64_t sub_253B09750()
{
  return MEMORY[0x270F9D600]();
}

uint64_t sub_253B09760()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_253B09780()
{
  return MEMORY[0x270F9D670]();
}

uint64_t sub_253B09790()
{
  return MEMORY[0x270F9D678]();
}

uint64_t sub_253B097A0()
{
  return MEMORY[0x270F9D680]();
}

uint64_t sub_253B097B0()
{
  return MEMORY[0x270F9D6B0]();
}

uint64_t sub_253B097C0()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_253B097D0()
{
  return MEMORY[0x270F9D700]();
}

uint64_t sub_253B097E0()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_253B097F0()
{
  return MEMORY[0x270F9D718]();
}

uint64_t sub_253B09800()
{
  return MEMORY[0x270F9D740]();
}

uint64_t sub_253B09810()
{
  return MEMORY[0x270F9D748]();
}

uint64_t sub_253B09820()
{
  return MEMORY[0x270F9D750]();
}

uint64_t sub_253B09830()
{
  return MEMORY[0x270F9D758]();
}

uint64_t sub_253B09840()
{
  return MEMORY[0x270F9D788]();
}

uint64_t sub_253B09850()
{
  return MEMORY[0x270F9D790]();
}

uint64_t sub_253B09860()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_253B09870()
{
  return MEMORY[0x270F9D7A0]();
}

uint64_t sub_253B09890()
{
  return MEMORY[0x270F9D7D8]();
}

uint64_t sub_253B098A0()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_253B098B0()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_253B098C0()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_253B098D0()
{
  return MEMORY[0x270F9D808]();
}

uint64_t sub_253B098E0()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_253B098F0()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_253B09900()
{
  return MEMORY[0x270F9D898]();
}

uint64_t sub_253B09910()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_253B09920()
{
  return MEMORY[0x270F9D8D8]();
}

uint64_t sub_253B09930()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_253B09940()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_253B09950()
{
  return MEMORY[0x270EF1B50]();
}

uint64_t sub_253B09960()
{
  return MEMORY[0x270F9D8F8]();
}

uint64_t sub_253B09970()
{
  return MEMORY[0x270F9D908]();
}

uint64_t sub_253B09980()
{
  return MEMORY[0x270F9D938]();
}

uint64_t sub_253B09990()
{
  return MEMORY[0x270F9D980]();
}

uint64_t sub_253B099A0()
{
  return MEMORY[0x270F9D9A0]();
}

uint64_t sub_253B099B0()
{
  return MEMORY[0x270F9D9E0]();
}

uint64_t sub_253B099C0()
{
  return MEMORY[0x270F9D9F0]();
}

uint64_t sub_253B099D0()
{
  return MEMORY[0x270F9DA18]();
}

uint64_t sub_253B099E0()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_253B099F0()
{
  return MEMORY[0x270F9DAC8]();
}

uint64_t sub_253B09A00()
{
  return MEMORY[0x270F9DAE0]();
}

uint64_t sub_253B09A10()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_253B09A20()
{
  return MEMORY[0x270F9DB48]();
}

uint64_t sub_253B09A30()
{
  return MEMORY[0x270F9DB60]();
}

uint64_t sub_253B09A40()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_253B09A50()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_253B09A60()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_253B09A70()
{
  return MEMORY[0x270F9DBA8]();
}

uint64_t sub_253B09A80()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_253B09A90()
{
  return MEMORY[0x270F83C18]();
}

uint64_t sub_253B09AA0()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_253B09AB0()
{
  return MEMORY[0x270F9DBC8]();
}

uint64_t sub_253B09AC0()
{
  return MEMORY[0x270F9DBD0]();
}

uint64_t sub_253B09AD0()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_253B09AE0()
{
  return MEMORY[0x270F9DBF8]();
}

uint64_t sub_253B09AF0()
{
  return MEMORY[0x270F9DC00]();
}

uint64_t sub_253B09B00()
{
  return MEMORY[0x270F9DC10]();
}

uint64_t sub_253B09B10()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_253B09B20()
{
  return MEMORY[0x270F9DC30]();
}

uint64_t sub_253B09B30()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_253B09B40()
{
  return MEMORY[0x270F9DC88]();
}

uint64_t sub_253B09B60()
{
  return MEMORY[0x270F9DCA8]();
}

uint64_t sub_253B09B70()
{
  return MEMORY[0x270F9DCB8]();
}

uint64_t sub_253B09B80()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_253B09B90()
{
  return MEMORY[0x270F9DD08]();
}

uint64_t sub_253B09BA0()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_253B09BB0()
{
  return MEMORY[0x270FA1E18]();
}

uint64_t sub_253B09BC0()
{
  return MEMORY[0x270FA1E20]();
}

uint64_t sub_253B09BD0()
{
  return MEMORY[0x270FA1E28]();
}

uint64_t sub_253B09BE0()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_253B09BF0()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_253B09C10()
{
  return MEMORY[0x270FA2040]();
}

uint64_t sub_253B09C30()
{
  return MEMORY[0x270F9DD60]();
}

uint64_t sub_253B09C40()
{
  return MEMORY[0x270EF1C98]();
}

uint64_t sub_253B09C50()
{
  return MEMORY[0x270EF1CC0]();
}

uint64_t sub_253B09C60()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_253B09C70()
{
  return MEMORY[0x270F9DFE8]();
}

uint64_t sub_253B09C80()
{
  return MEMORY[0x270F9E080]();
}

uint64_t sub_253B09C90()
{
  return MEMORY[0x270F3EF88]();
}

uint64_t sub_253B09CA0()
{
  return MEMORY[0x270F9E0A0]();
}

uint64_t sub_253B09CB0()
{
  return MEMORY[0x270F9E0C0]();
}

uint64_t sub_253B09CC0()
{
  return MEMORY[0x270F9E0D8]();
}

uint64_t sub_253B09CD0()
{
  return MEMORY[0x270F9E0E0]();
}

uint64_t sub_253B09CE0()
{
  return MEMORY[0x270F9E0F0]();
}

uint64_t sub_253B09CF0()
{
  return MEMORY[0x270F9E138]();
}

uint64_t sub_253B09D00()
{
  return MEMORY[0x270F9E140]();
}

uint64_t sub_253B09D10()
{
  return MEMORY[0x270F9E190]();
}

uint64_t sub_253B09D20()
{
  return MEMORY[0x270F9E1A8]();
}

uint64_t sub_253B09D30()
{
  return MEMORY[0x270F9E1E0]();
}

uint64_t sub_253B09D40()
{
  return MEMORY[0x270FA10E0]();
}

uint64_t sub_253B09D50()
{
  return MEMORY[0x270EE7918]();
}

uint64_t sub_253B09D60()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_253B09D70()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_253B09D80()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_253B09D90()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_253B09DA0()
{
  return MEMORY[0x270FA2E90]();
}

uint64_t sub_253B09DB0()
{
  return MEMORY[0x270FA2EA8]();
}

uint64_t sub_253B09DC0()
{
  return MEMORY[0x270EF2198]();
}

uint64_t sub_253B09DD0()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_253B09DE0()
{
  return MEMORY[0x270FA2EC8]();
}

uint64_t sub_253B09DF0()
{
  return MEMORY[0x270F9E3B0]();
}

uint64_t sub_253B09E00()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_253B09E10()
{
  return MEMORY[0x270F9E4A0]();
}

uint64_t sub_253B09E30()
{
  return MEMORY[0x270F9E4E8]();
}

uint64_t sub_253B09E40()
{
  return MEMORY[0x270F9E4F8]();
}

uint64_t sub_253B09E50()
{
  return MEMORY[0x270F9E500]();
}

uint64_t sub_253B09E70()
{
  return MEMORY[0x270F9E518]();
}

uint64_t sub_253B09E80()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_253B09E90()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_253B09EA0()
{
  return MEMORY[0x270EF2410]();
}

uint64_t sub_253B09EB0()
{
  return MEMORY[0x270EF2478]();
}

uint64_t sub_253B09EC0()
{
  return MEMORY[0x270EF24A0]();
}

uint64_t sub_253B09ED0()
{
  return MEMORY[0x270EF2560]();
}

uint64_t sub_253B09EE0()
{
  return MEMORY[0x270EF2568]();
}

uint64_t sub_253B09EF0()
{
  return MEMORY[0x270FA13A0]();
}

uint64_t sub_253B09F00()
{
  return MEMORY[0x270F9E658]();
}

uint64_t sub_253B09F20()
{
  return MEMORY[0x270F9E740]();
}

uint64_t sub_253B09F30()
{
  return MEMORY[0x270F9E798]();
}

uint64_t sub_253B09F50()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_253B09F60()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_253B09F70()
{
  return MEMORY[0x270F9E7F8]();
}

uint64_t sub_253B09F80()
{
  return MEMORY[0x270F9E800]();
}

uint64_t sub_253B09F90()
{
  return MEMORY[0x270F9E890]();
}

uint64_t sub_253B09FA0()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_253B09FB0()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_253B09FC0()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_253B09FD0()
{
  return MEMORY[0x270F9E988]();
}

uint64_t sub_253B09FF0()
{
  return MEMORY[0x270F9E9A0]();
}

uint64_t sub_253B0A000()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_253B0A010()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_253B0A020()
{
  return MEMORY[0x270F9E9E0]();
}

uint64_t sub_253B0A030()
{
  return MEMORY[0x270F9E9E8]();
}

uint64_t sub_253B0A040()
{
  return MEMORY[0x270F9EA30]();
}

uint64_t sub_253B0A050()
{
  return MEMORY[0x270F9EA38]();
}

uint64_t sub_253B0A060()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_253B0A070()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_253B0A080()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_253B0A090()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_253B0A0A0()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_253B0A0B0()
{
  return MEMORY[0x270F9EB30]();
}

uint64_t sub_253B0A0C0()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_253B0A0D0()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_253B0A0E0()
{
  return MEMORY[0x270F9EBD8]();
}

uint64_t sub_253B0A0F0()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_253B0A100()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_253B0A110()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_253B0A120()
{
  return MEMORY[0x270F9EC48]();
}

uint64_t sub_253B0A130()
{
  return MEMORY[0x270F9EC88]();
}

uint64_t sub_253B0A140()
{
  return MEMORY[0x270F9EC90]();
}

uint64_t sub_253B0A150()
{
  return MEMORY[0x270F9ED00]();
}

uint64_t sub_253B0A160()
{
  return MEMORY[0x270F9ED68]();
}

uint64_t sub_253B0A170()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_253B0A180()
{
  return MEMORY[0x270F9EDA8]();
}

uint64_t sub_253B0A190()
{
  return MEMORY[0x270F9EF08]();
}

uint64_t sub_253B0A1A0()
{
  return MEMORY[0x270F9EF18]();
}

uint64_t sub_253B0A1B0()
{
  return MEMORY[0x270F9EF20]();
}

uint64_t sub_253B0A1C0()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_253B0A1D0()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_253B0A1E0()
{
  return MEMORY[0x270F9F060]();
}

uint64_t sub_253B0A1F0()
{
  return MEMORY[0x270F9F070]();
}

uint64_t sub_253B0A200()
{
  return MEMORY[0x270F9F078]();
}

uint64_t sub_253B0A210()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_253B0A220()
{
  return MEMORY[0x270F9F088]();
}

uint64_t sub_253B0A230()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_253B0A240()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_253B0A250()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_253B0A260()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_253B0A270()
{
  return MEMORY[0x270F9F140]();
}

uint64_t sub_253B0A280()
{
  return MEMORY[0x270F9F158]();
}

uint64_t sub_253B0A290()
{
  return MEMORY[0x270F9F170]();
}

uint64_t sub_253B0A2A0()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_253B0A2C0()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_253B0A2D0()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_253B0A2E0()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_253B0A2F0()
{
  return MEMORY[0x270F9F278]();
}

uint64_t sub_253B0A300()
{
  return MEMORY[0x270F9F290]();
}

uint64_t sub_253B0A310()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_253B0A320()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_253B0A330()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_253B0A340()
{
  return MEMORY[0x270F9F2F8]();
}

uint64_t sub_253B0A350()
{
  return MEMORY[0x270F9F300]();
}

uint64_t sub_253B0A360()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_253B0A370()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_253B0A380()
{
  return MEMORY[0x270F9F358]();
}

uint64_t sub_253B0A390()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_253B0A3A0()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_253B0A3B0()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_253B0A3C0()
{
  return MEMORY[0x270F9F3B8]();
}

uint64_t sub_253B0A3D0()
{
  return MEMORY[0x270F9F3D0]();
}

uint64_t sub_253B0A3E0()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_253B0A3F0()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_253B0A400()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_253B0A410()
{
  return MEMORY[0x270F9F438]();
}

uint64_t sub_253B0A420()
{
  return MEMORY[0x270F9F440]();
}

uint64_t sub_253B0A430()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_253B0A440()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_253B0A450()
{
  return MEMORY[0x270F9F498]();
}

uint64_t sub_253B0A460()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_253B0A470()
{
  return MEMORY[0x270F9F4D0]();
}

uint64_t sub_253B0A480()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_253B0A490()
{
  return MEMORY[0x270F9F4F8]();
}

uint64_t sub_253B0A4A0()
{
  return MEMORY[0x270F9F730]();
}

uint64_t sub_253B0A4B0()
{
  return MEMORY[0x270F9F7C8]();
}

uint64_t sub_253B0A4C0()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_253B0A4D0()
{
  return MEMORY[0x270F9F818]();
}

uint64_t sub_253B0A4E0()
{
  return MEMORY[0x270F9F878]();
}

uint64_t sub_253B0A4F0()
{
  return MEMORY[0x270F9F8A8]();
}

uint64_t sub_253B0A500()
{
  return MEMORY[0x270F9F920]();
}

uint64_t sub_253B0A510()
{
  return MEMORY[0x270F9FA40]();
}

uint64_t sub_253B0A530()
{
  return MEMORY[0x270F9FAB8]();
}

uint64_t sub_253B0A540()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_253B0A550()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_253B0A580()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_253B0A590()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_253B0A5A0()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_253B0A5B0()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_253B0A5C0()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_253B0A5D0()
{
  return MEMORY[0x270F9FC30]();
}

uint64_t sub_253B0A5E0()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_253B0A5F0()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_253B0A600()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_253B0A610()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_253B0A620()
{
  return MEMORY[0x270F9FC80]();
}

uint64_t sub_253B0A630()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_253B0A640()
{
  return MEMORY[0x270F9FCF8]();
}

uint64_t sub_253B0A650()
{
  return MEMORY[0x270F9FD60]();
}

uint64_t sub_253B0A660()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_253B0A670()
{
  return MEMORY[0x270F9FD88]();
}

uint64_t sub_253B0A680()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_253B0A690()
{
  return MEMORY[0x270F9FE70]();
}

uint64_t sub_253B0A6A0()
{
  return MEMORY[0x270F9FF18]();
}

uint64_t sub_253B0A6B0()
{
  return MEMORY[0x270F9FF30]();
}

uint64_t sub_253B0A6C0()
{
  return MEMORY[0x270F9FF38]();
}

uint64_t sub_253B0A6F0()
{
  return MEMORY[0x270FA00C0]();
}

uint64_t sub_253B0A700()
{
  return MEMORY[0x270FA23A8]();
}

uint64_t sub_253B0A710()
{
  return MEMORY[0x270FA23B8]();
}

uint64_t sub_253B0A720()
{
  return MEMORY[0x270FA0128]();
}

{
  return MEMORY[0x270F9A3C0]();
}

{
  return MEMORY[0x270F9A3C8]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x270FA0170]();
}

void bzero(void *a1, size_t a2)
{
}

__uint64_t clock_gettime_nsec_np(clockid_t __clock_id)
{
  return MEMORY[0x270ED8EF8](*(void *)&__clock_id);
}

void free(void *a1)
{
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x270EDA138]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x270F9A880](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x270FA0218]();
}

uint64_t swift_deallocBox()
{
  return MEMORY[0x270FA0220]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_deallocUninitializedObject()
{
  return MEMORY[0x270FA0248]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x270FA2420]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x270FA2428]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x270FA0410]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x270FA0418]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x270FA0430]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x270FA0468]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x270FA0470]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x270FA0490]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x270FA04F8]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x270FA0588]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return MEMORY[0x270EDB7D8](a1, a2, a3, a4, a5);
}