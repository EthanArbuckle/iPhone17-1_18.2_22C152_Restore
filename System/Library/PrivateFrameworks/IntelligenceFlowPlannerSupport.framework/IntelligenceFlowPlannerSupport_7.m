uint64_t initializeWithTake for TranscriptProtoSystemResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  _OWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int EnumCaseMultiPayload;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  long long v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _OWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  long long v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  unsigned char *v89;
  uint64_t v90;
  uint64_t v91;
  unsigned char *v92;
  uint64_t v93;
  uint64_t v94;
  unsigned char *v95;
  uint64_t v96;
  long long v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  void *v132;
  int *v133;
  uint64_t v134;
  uint64_t v135;
  _OWORD *v136;
  _OWORD *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  _OWORD *v151;
  _OWORD *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  unsigned char *v165;
  unsigned char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unsigned char *v170;
  unsigned char *v171;
  uint64_t v172;
  uint64_t v173;
  _OWORD *v174;
  _OWORD *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  long long v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  _DWORD *v193;
  _DWORD *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unsigned char *v206;
  unsigned char *v207;
  uint64_t v208;
  unsigned char *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  unsigned char *v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  void *v218;
  char *v219;
  _OWORD *v220;
  char *v221;
  char *v222;
  char *v223;
  char *v224;
  char *v225;
  int *__dst;
  unsigned char *__dsta;
  char *__dstb;
  char *__dstc;
  void *__dstd;
  void *__dste;
  char *__dstf;
  char *__dstg;
  char *__dsth;
  char *__dsti;
  char *__dstj;
  char *__dstk;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = a3[7];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_253462A5C(&qword_269CE0388);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_83;
  }
  v11 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v11))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *v7 = *v8;
        v18 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        v19 = *(int *)(v18 + 20);
        __dsta = (char *)v7 + v19;
        v20 = (char *)v8 + v19;
        v21 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21))
        {
          v22 = sub_253462A5C(&qword_269CE0480);
          memcpy(__dsta, v20, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          v216 = v21;
          v218 = (void *)v18;
          v46 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v46))
          {
            v47 = sub_253462A5C(&qword_269CE0478);
            v48 = (uint64_t)__dsta;
            memcpy(__dsta, v20, *(void *)(*(void *)(v47 - 8) + 64));
          }
          else
          {
            *(_OWORD *)__dsta = *(_OWORD *)v20;
            __dsta[16] = v20[16];
            v67 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            v68 = *(int *)(v67 + 24);
            v207 = &__dsta[v68];
            v208 = v67;
            v213 = v20;
            v69 = &v20[v68];
            v70 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            v210 = v46;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v69, 1, v70))
            {
              v71 = sub_253462A5C(&qword_269CE0470);
              memcpy(v207, v69, *(void *)(*(void *)(v71 - 8) + 64));
            }
            else
            {
              *v207 = *v69;
              v88 = *(int *)(v70 + 20);
              v206 = &v207[v88];
              v89 = &v69[v88];
              v90 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v90 - 8) + 32))(v206, v89, v90);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v207, 0, 1, v70);
            }
            v91 = *(int *)(v208 + 28);
            v48 = (uint64_t)__dsta;
            v92 = &__dsta[v91];
            v20 = v213;
            v209 = &v213[v91];
            v93 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v93 - 8) + 32))(v92, v209, v93);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v210);
          }
          v94 = *(int *)(v216 + 20);
          __dste = (void *)(v48 + v94);
          v95 = &v20[v94];
          v96 = sub_253B07160();
          (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v96 - 8) + 32))(__dste, v95, v96);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v48, 0, 1, v216);
          v18 = (uint64_t)v218;
        }
        v26 = *(int *)(v18 + 24);
        goto LABEL_81;
      case 2u:
        *(_OWORD *)v7 = *(_OWORD *)v8;
        v23 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_80;
      case 3u:
        *(_OWORD *)v7 = *(_OWORD *)v8;
        v7[2] = v8[2];
        *((unsigned char *)v7 + 24) = *((unsigned char *)v8 + 24);
        v24 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_14;
      case 4u:
        *(_OWORD *)v7 = *(_OWORD *)v8;
        v25 = v8[3];
        v7[2] = v8[2];
        v7[3] = v25;
        *((unsigned char *)v7 + 32) = *((unsigned char *)v8 + 32);
        v26 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_81;
      case 5u:
        *(_OWORD *)v7 = *(_OWORD *)v8;
        *((unsigned char *)v7 + 16) = *((unsigned char *)v8 + 16);
        v24 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_14:
        v27 = v24;
        v28 = *(int *)(v24 + 24);
        __dstb = (char *)v7 + v28;
        v29 = (char *)v8 + v28;
        v30 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v30))
        {
          v31 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(__dstb, v29, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(__dstb, v29, v30);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstb, 0, 1, v30);
        }
        v26 = *(int *)(v27 + 28);
        goto LABEL_81;
      case 6u:
        *(_OWORD *)v7 = *(_OWORD *)v8;
        v32 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        v33 = *(int *)(v32 + 20);
        __dstc = (char *)v7 + v33;
        v34 = (char *)v8 + v33;
        v35 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v34, 1, v35))
        {
          v36 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(__dstc, v34, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(__dstc, v34, v35);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstc, 0, 1, v35);
        }
        v26 = *(int *)(v32 + 24);
        goto LABEL_81;
      case 7u:
        v37 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v37))
        {
          v38 = sub_253462A5C(&qword_269CE0498);
          memcpy(v7, v8, *(void *)(*(void *)(v38 - 8) + 64));
          goto LABEL_79;
        }
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            *(unsigned char *)v7 = *(unsigned char *)v8;
            v76 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            v77 = (char *)v7 + v76;
            v78 = (char *)v8 + v76;
            v79 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
            goto LABEL_53;
          }
          if (!EnumCaseMultiPayload)
          {
            *(unsigned char *)v7 = *(unsigned char *)v8;
            v50 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            v51 = (char *)v7 + v50;
            v52 = (char *)v8 + v50;
            v53 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
LABEL_53:
            swift_storeEnumTagMultiPayload();
            goto LABEL_78;
          }
          memcpy(v7, v8, *(void *)(*(void *)(v37 - 8) + 64));
LABEL_78:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v37);
LABEL_79:
          v23 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_80:
          v26 = *(int *)(v23 + 20);
LABEL_81:
          v123 = (char *)v7 + v26;
          v124 = (char *)v8 + v26;
          v125 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 32))(v123, v124, v125);
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v11);
          goto LABEL_82;
        }
        v74 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v74))
        {
          v75 = sub_253462A5C(&qword_269CE0490);
          memcpy(v7, v8, *(void *)(*(void *)(v75 - 8) + 64));
LABEL_77:
          v119 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          v120 = (char *)v7 + v119;
          v121 = (char *)v8 + v119;
          v122 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 32))(v120, v121, v122);
          swift_storeEnumTagMultiPayload();
          goto LABEL_78;
        }
        v108 = swift_getEnumCaseMultiPayload();
        if (v108 == 1)
        {
          v112 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v112))
          {
            v113 = sub_253462A5C(&qword_269CE0488);
            memcpy(v7, v8, *(void *)(*(void *)(v113 - 8) + 64));
          }
          else
          {
            *(unsigned char *)v7 = *(unsigned char *)v8;
            v114 = *(int *)(v112 + 20);
            v222 = (char *)v8 + v114;
            __dstg = (char *)v7 + v114;
            v115 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 32))(__dstg, v222, v115);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v112);
          }
          v116 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          v117 = (char *)v7 + v116;
          __dsth = (char *)v8 + v116;
          v118 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 32))(v117, __dsth, v118);
        }
        else
        {
          if (v108)
          {
            memcpy(v7, v8, *(void *)(*(void *)(v74 - 8) + 64));
LABEL_76:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v74);
            goto LABEL_77;
          }
          *(_OWORD *)v7 = *(_OWORD *)v8;
          v109 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          v110 = (char *)v7 + v109;
          __dstf = (char *)v8 + v109;
          v111 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 32))(v110, __dstf, v111);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_76;
      case 8u:
        *v7 = *v8;
        *(_OWORD *)(v7 + 1) = *(_OWORD *)(v8 + 1);
        v26 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        goto LABEL_81;
      case 9u:
        v39 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v39))
        {
          v40 = sub_253462A5C(&qword_269CE04A8);
          memcpy(v7, v8, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          v54 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v54))
          {
            v55 = sub_253462A5C(&qword_269CE04A0);
            memcpy(v7, v8, *(void *)(*(void *)(v55 - 8) + 64));
          }
          else
          {
            v66 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 16, v66))
            {
              memcpy(v7, v8, *(void *)(*(void *)(v54 - 8) + 64));
            }
            else
            {
              v80 = *((_OWORD *)v8 + 1);
              *(_OWORD *)v7 = *(_OWORD *)v8;
              *((_OWORD *)v7 + 1) = v80;
              v7[4] = v8[4];
              v81 = *(int *)(v66 + 28);
              __dstd = (void *)v66;
              v82 = (char *)v7 + v81;
              v221 = (char *)v8 + v81;
              v83 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32))(v82, v221, v83);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 16, (uint64_t)__dstd);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v54);
          }
          v84 = *(int *)(v39 + 20);
          v85 = (char *)v7 + v84;
          v86 = (char *)v8 + v84;
          v87 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v85, v86, v87);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v39);
        }
        v23 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_80;
      case 0xAu:
        *v7 = *v8;
        v23 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
        goto LABEL_80;
      default:
        *(unsigned char *)v7 = *(unsigned char *)v8;
        *(_WORD *)((char *)v7 + 1) = *(_WORD *)((char *)v8 + 1);
        __dst = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        v13 = __dst[7];
        v14 = (char *)v7 + v13;
        v15 = (char *)v8 + v13;
        v16 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16))
        {
          v17 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v14, 0, 1, v16);
        }
        v41 = __dst[8];
        v42 = (_OWORD *)((char *)v7 + v41);
        v43 = (_OWORD *)((char *)v8 + v41);
        v44 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v43, 1, v44))
        {
          v45 = sub_253462A5C(&qword_269CE0450);
          memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
        }
        else
        {
          v56 = v43[1];
          *v42 = *v43;
          v42[1] = v56;
          v42[2] = v43[2];
          v57 = *(int *)(v44 + 28);
          v219 = (char *)v42 + v57;
          v58 = (char *)v43 + v57;
          v59 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v219, v58, v59);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v42, 0, 1, v44);
        }
        v60 = __dst[9];
        v220 = (_OWORD *)((char *)v7 + v60);
        v61 = (_OWORD *)((char *)v8 + v60);
        v62 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v61, 1, v62))
        {
          v63 = sub_253462A5C(&qword_269CE0468);
          memcpy(v220, v61, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          v64 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          v217 = v62;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v61, 1, v64))
          {
            v65 = sub_253462A5C(&qword_269CE0460);
            memcpy(v220, v61, *(void *)(*(void *)(v65 - 8) + 64));
          }
          else
          {
            v214 = v64;
            v72 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v61, 1, v72))
            {
              v73 = sub_253462A5C(&qword_269CE0458);
              memcpy(v220, v61, *(void *)(*(void *)(v73 - 8) + 64));
            }
            else
            {
              v97 = v61[1];
              *v220 = *v61;
              v220[1] = v97;
              *((void *)v220 + 4) = *((void *)v61 + 4);
              v98 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
              v211 = v72;
              v99 = (char *)v220 + v98;
              v100 = (char *)v61 + v98;
              v101 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v99, v100, v101);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v220, 0, 1, v211);
            }
            v102 = *(int *)(v214 + 20);
            v212 = (char *)v220 + v102;
            v103 = (char *)v61 + v102;
            v104 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 32))(v212, v103, v104);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v220, 0, 1, v214);
            v62 = v217;
          }
          v105 = *(int *)(v62 + 20);
          v215 = (char *)v220 + v105;
          v106 = (char *)v61 + v105;
          v107 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 32))(v215, v106, v107);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v220, 0, 1, v217);
        }
        *(_OWORD *)((char *)v7 + __dst[10]) = *(_OWORD *)((char *)v8 + __dst[10]);
        v26 = __dst[11];
        goto LABEL_81;
    }
  }
  v12 = sub_253462A5C(&qword_269CE04B0);
  memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_82:
  v126 = *(int *)(v9 + 20);
  v127 = (char *)v7 + v126;
  v128 = (char *)v8 + v126;
  v129 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 32))(v127, v128, v129);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_83:
  v130 = a3[8];
  v131 = (void *)(a1 + v130);
  v132 = (void *)(a2 + v130);
  v133 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v132, 1, (uint64_t)v133))
  {
    v134 = sub_253462A5C(&qword_269CE24C8);
    memcpy(v131, v132, *(void *)(*(void *)(v134 - 8) + 64));
  }
  else
  {
    *v131 = *v132;
    *((unsigned char *)v131 + 8) = *((unsigned char *)v132 + 8);
    v131[2] = v132[2];
    v135 = v133[7];
    v136 = (_OWORD *)((char *)v131 + v135);
    v137 = (_OWORD *)((char *)v132 + v135);
    v138 = type metadata accessor for TranscriptProtoDialogType(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v137, 1, v138))
    {
      v139 = sub_253462A5C(&qword_269CE2010);
      memcpy(v136, v137, *(void *)(*(void *)(v139 - 8) + 64));
    }
    else
    {
      v140 = type metadata accessor for TranscriptProtoDialogFormat(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v137, 1, v140))
      {
        v141 = sub_253462A5C(&qword_269CE2050);
        memcpy(v136, v137, *(void *)(*(void *)(v141 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *v136 = *v137;
            v143 = type metadata accessor for TranscriptProtoSonicText(0);
            goto LABEL_95;
          case 2u:
            *v136 = *v137;
            v143 = type metadata accessor for TranscriptProtoGeneratedText(0);
            goto LABEL_95;
          case 3u:
          case 4u:
            v142 = sub_253B07160();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v142 - 8) + 32))(v136, v137, v142);
            goto LABEL_96;
          case 5u:
            *v136 = *v137;
            v143 = type metadata accessor for TranscriptProtoCATDialog(0);
            goto LABEL_95;
          default:
            *v136 = *v137;
            v143 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_95:
            v144 = *(int *)(v143 + 20);
            v223 = (char *)v137 + v144;
            __dsti = (char *)v136 + v144;
            v145 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 32))(__dsti, v223, v145);
LABEL_96:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v136, 0, 1, v140);
            break;
        }
      }
      v146 = *(int *)(v138 + 20);
      v147 = (char *)v136 + v146;
      v148 = (char *)v137 + v146;
      v149 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 32))(v147, v148, v149);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v136, 0, 1, v138);
    }
    v150 = v133[8];
    v151 = (_OWORD *)((char *)v131 + v150);
    v152 = (_OWORD *)((char *)v132 + v150);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v132 + v150, 1, v138))
    {
      v153 = sub_253462A5C(&qword_269CE2010);
      memcpy(v151, v152, *(void *)(*(void *)(v153 - 8) + 64));
    }
    else
    {
      v154 = type metadata accessor for TranscriptProtoDialogFormat(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v152, 1, v154))
      {
        v155 = sub_253462A5C(&qword_269CE2050);
        memcpy(v151, v152, *(void *)(*(void *)(v155 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *v151 = *v152;
            v157 = type metadata accessor for TranscriptProtoSonicText(0);
            goto LABEL_108;
          case 2u:
            *v151 = *v152;
            v157 = type metadata accessor for TranscriptProtoGeneratedText(0);
            goto LABEL_108;
          case 3u:
          case 4u:
            v156 = sub_253B07160();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v156 - 8) + 32))(v151, v152, v156);
            goto LABEL_109;
          case 5u:
            *v151 = *v152;
            v157 = type metadata accessor for TranscriptProtoCATDialog(0);
            goto LABEL_108;
          default:
            *v151 = *v152;
            v157 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_108:
            v158 = *(int *)(v157 + 20);
            v224 = (char *)v152 + v158;
            __dstj = (char *)v151 + v158;
            v159 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 32))(__dstj, v224, v159);
LABEL_109:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v151, 0, 1, v154);
            break;
        }
      }
      v160 = *(int *)(v138 + 20);
      v161 = (char *)v151 + v160;
      v162 = (char *)v152 + v160;
      v163 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 32))(v161, v162, v163);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v151, 0, 1, v138);
    }
    v164 = v133[9];
    v165 = (char *)v131 + v164;
    v166 = (char *)v132 + v164;
    v167 = type metadata accessor for TranscriptProtoVisualOutputOptions(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v166, 1, v167))
    {
      v168 = sub_253462A5C(&qword_269CE2000);
      memcpy(v165, v166, *(void *)(*(void *)(v168 - 8) + 64));
    }
    else
    {
      *v165 = *v166;
      v169 = *(int *)(v167 + 20);
      v170 = &v165[v169];
      v171 = &v166[v169];
      v172 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v172 - 8) + 32))(v170, v171, v172);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v165, 0, 1, v167);
    }
    v173 = v133[10];
    v174 = (_OWORD *)((char *)v131 + v173);
    v175 = (_OWORD *)((char *)v132 + v173);
    v176 = type metadata accessor for TranscriptProtoVisualOutput(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v175, 1, v176))
    {
      v177 = sub_253462A5C(&qword_269CE1FF0);
      memcpy(v174, v175, *(void *)(*(void *)(v177 - 8) + 64));
    }
    else
    {
      v178 = type metadata accessor for TranscriptProtoVisualOutputType(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v175, 1, v178))
      {
        v179 = sub_253462A5C(&qword_269CDCC18);
        memcpy(v174, v175, *(void *)(*(void *)(v179 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *v174 = *v175;
            v180 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
            goto LABEL_122;
          case 2u:
            *v174 = *v175;
            v180 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
            goto LABEL_122;
          case 3u:
            v182 = v175[1];
            *v174 = *v175;
            v174[1] = v182;
            v181 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
            goto LABEL_124;
          default:
            *v174 = *v175;
            v180 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_122:
            v181 = *(int *)(v180 + 20);
LABEL_124:
            v225 = (char *)v175 + v181;
            __dstk = (char *)v174 + v181;
            v183 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v183 - 8) + 32))(__dstk, v225, v183);
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v174, 0, 1, v178);
            break;
        }
      }
      v184 = *(int *)(v176 + 20);
      v185 = (char *)v174 + v184;
      v186 = (char *)v175 + v184;
      v187 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v187 - 8) + 32))(v185, v186, v187);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v174, 0, 1, v176);
    }
    *(_OWORD *)((char *)v131 + v133[11]) = *(_OWORD *)((char *)v132 + v133[11]);
    v188 = v133[12];
    v189 = (char *)v131 + v188;
    v190 = (char *)v132 + v188;
    v191 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 32))(v189, v190, v191);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v131, 0, 1, (uint64_t)v133);
  }
  v192 = a3[9];
  v193 = (_DWORD *)(a1 + v192);
  v194 = (_DWORD *)(a2 + v192);
  v195 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v194, 1, v195))
  {
    v196 = sub_253462A5C(&qword_26B249528);
    memcpy(v193, v194, *(void *)(*(void *)(v196 - 8) + 64));
  }
  else
  {
    *v193 = *v194;
    *(_OWORD *)(v193 + 2) = *(_OWORD *)(v194 + 2);
    v197 = *(int *)(v195 + 24);
    v198 = (char *)v193 + v197;
    v199 = (char *)v194 + v197;
    v200 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 32))(v198, v199, v200);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v193, 0, 1, v195);
  }
  v201 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  v202 = a1 + v201;
  v203 = a2 + v201;
  v204 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v204 - 8) + 32))(v202, v203, v204);
  return a1;
}

void *assignWithTake for TranscriptProtoSystemResponse(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[4];
  a1[3] = a2[3];
  a1[4] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[7];
  v9 = (void *)((char *)a1 + v8);
  v10 = (void *)((char *)a2 + v8);
  uint64_t v11 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v11);
  int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v14 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v14))
      {
        uint64_t v15 = sub_253462A5C(&qword_269CE04B0);
        memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
LABEL_224:
        uint64_t v365 = *(int *)(v11 + 20);
        v366 = (char *)v9 + v365;
        v367 = (char *)v10 + v365;
        uint64_t v368 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v368 - 8) + 32))(v366, v367, v368);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
        goto LABEL_247;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          void *v9 = *v10;
          uint64_t v36 = type metadata accessor for TranscriptProtoActionConfirmation(0);
          uint64_t v37 = *(int *)(v36 + 20);
          __dstb = (char *)v9 + v37;
          v38 = (char *)v10 + v37;
          uint64_t v39 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, v39))
          {
            uint64_t v40 = sub_253462A5C(&qword_269CE0480);
            memcpy(__dstb, v38, *(void *)(*(void *)(v40 - 8) + 64));
          }
          else
          {
            uint64_t v669 = v39;
            v676 = (void *)v36;
            uint64_t v87 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, v87))
            {
              uint64_t v88 = sub_253462A5C(&qword_269CE0478);
              uint64_t v89 = (uint64_t)__dstb;
              memcpy(__dstb, v38, *(void *)(*(void *)(v88 - 8) + 64));
            }
            else
            {
              *(_OWORD *)__dstb = *(_OWORD *)v38;
              __dstb[16] = v38[16];
              uint64_t v159 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
              uint64_t v160 = *(int *)(v159 + 24);
              v644 = &__dstb[v160];
              uint64_t v647 = v159;
              v659 = v38;
              v161 = &v38[v160];
              uint64_t v162 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
              uint64_t v653 = v87;
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v161, 1, v162))
              {
                uint64_t v163 = sub_253462A5C(&qword_269CE0470);
                memcpy(v644, v161, *(void *)(*(void *)(v163 - 8) + 64));
              }
              else
              {
                unsigned char *v644 = *v161;
                uint64_t v212 = *(int *)(v162 + 20);
                v642 = &v644[v212];
                v213 = &v161[v212];
                uint64_t v214 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v214 - 8) + 32))(v642, v213, v214);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v644, 0, 1, v162);
              }
              uint64_t v215 = *(int *)(v647 + 28);
              uint64_t v89 = (uint64_t)__dstb;
              v216 = &__dstb[v215];
              v38 = v659;
              v649 = &v659[v215];
              uint64_t v217 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v217 - 8) + 32))(v216, v649, v217);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstb, 0, 1, v653);
            }
            uint64_t v218 = *(int *)(v669 + 20);
            __dstl = (void *)(v89 + v218);
            v219 = &v38[v218];
            uint64_t v220 = sub_253B07160();
            (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v220 - 8) + 32))(__dstl, v219, v220);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v89, 0, 1, v669);
            uint64_t v36 = (uint64_t)v676;
          }
          uint64_t v44 = *(int *)(v36 + 24);
          goto LABEL_223;
        case 2u:
          *(_OWORD *)v9 = *(_OWORD *)v10;
          uint64_t v41 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
          goto LABEL_222;
        case 3u:
          *(_OWORD *)v9 = *(_OWORD *)v10;
          v9[2] = v10[2];
          *((unsigned char *)v9 + 24) = *((unsigned char *)v10 + 24);
          uint64_t v42 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
          goto LABEL_29;
        case 4u:
          *(_OWORD *)v9 = *(_OWORD *)v10;
          uint64_t v43 = v10[3];
          v9[2] = v10[2];
          v9[3] = v43;
          *((unsigned char *)v9 + 32) = *((unsigned char *)v10 + 32);
          uint64_t v44 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
          goto LABEL_223;
        case 5u:
          *(_OWORD *)v9 = *(_OWORD *)v10;
          *((unsigned char *)v9 + 16) = *((unsigned char *)v10 + 16);
          uint64_t v42 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_29:
          uint64_t v45 = v42;
          uint64_t v46 = *(int *)(v42 + 24);
          __dstc = (char *)v9 + v46;
          v47 = (char *)v10 + v46;
          uint64_t v48 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v47, 1, v48))
          {
            uint64_t v49 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(__dstc, v47, *(void *)(*(void *)(v49 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(__dstc, v47, v48);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstc, 0, 1, v48);
          }
          uint64_t v44 = *(int *)(v45 + 28);
          goto LABEL_223;
        case 6u:
          *(_OWORD *)v9 = *(_OWORD *)v10;
          uint64_t v50 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
          uint64_t v51 = *(int *)(v50 + 20);
          __dstd = (char *)v9 + v51;
          v52 = (char *)v10 + v51;
          uint64_t v53 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v53))
          {
            uint64_t v54 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(__dstd, v52, *(void *)(*(void *)(v54 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(__dstd, v52, v53);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstd, 0, 1, v53);
          }
          uint64_t v44 = *(int *)(v50 + 24);
          goto LABEL_223;
        case 7u:
          uint64_t v55 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v55))
          {
            uint64_t v56 = sub_253462A5C(&qword_269CE0498);
            memcpy(v9, v10, *(void *)(*(void *)(v56 - 8) + 64));
            goto LABEL_221;
          }
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload != 2)
          {
            if (EnumCaseMultiPayload == 1)
            {
              *(unsigned char *)v9 = *(unsigned char *)v10;
              uint64_t v179 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
              v180 = (char *)v9 + v179;
              v181 = (char *)v10 + v179;
              uint64_t v182 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 32))(v180, v181, v182);
              goto LABEL_120;
            }
            if (!EnumCaseMultiPayload)
            {
              *(unsigned char *)v9 = *(unsigned char *)v10;
              uint64_t v91 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
              v92 = (char *)v9 + v91;
              v93 = (char *)v10 + v91;
              uint64_t v94 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 32))(v92, v93, v94);
LABEL_120:
              swift_storeEnumTagMultiPayload();
              goto LABEL_220;
            }
            memcpy(v9, v10, *(void *)(*(void *)(v55 - 8) + 64));
LABEL_220:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v55);
LABEL_221:
            uint64_t v41 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_222:
            uint64_t v44 = *(int *)(v41 + 20);
LABEL_223:
            v362 = (char *)v9 + v44;
            v363 = (char *)v10 + v44;
            uint64_t v364 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v364 - 8) + 32))(v362, v363, v364);
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v14);
            goto LABEL_224;
          }
          uint64_t v177 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v177))
          {
            uint64_t v178 = sub_253462A5C(&qword_269CE0490);
            memcpy(v9, v10, *(void *)(*(void *)(v178 - 8) + 64));
LABEL_219:
            uint64_t v358 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
            v359 = (char *)v9 + v358;
            v360 = (char *)v10 + v358;
            uint64_t v361 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v361 - 8) + 32))(v359, v360, v361);
            swift_storeEnumTagMultiPayload();
            goto LABEL_220;
          }
          int v258 = swift_getEnumCaseMultiPayload();
          if (v258 == 1)
          {
            uint64_t v307 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v307))
            {
              uint64_t v308 = sub_253462A5C(&qword_269CE0488);
              memcpy(v9, v10, *(void *)(*(void *)(v308 - 8) + 64));
            }
            else
            {
              *(unsigned char *)v9 = *(unsigned char *)v10;
              uint64_t v353 = *(int *)(v307 + 20);
              v686 = (char *)v10 + v353;
              __dstu = (char *)v9 + v353;
              uint64_t v354 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v354 - 8) + 32))(__dstu, v686, v354);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v307);
            }
            uint64_t v355 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
            v356 = (char *)v9 + v355;
            __dstv = (char *)v10 + v355;
            uint64_t v357 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v357 - 8) + 32))(v356, __dstv, v357);
          }
          else
          {
            if (v258)
            {
              memcpy(v9, v10, *(void *)(*(void *)(v177 - 8) + 64));
LABEL_218:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v177);
              goto LABEL_219;
            }
            *(_OWORD *)v9 = *(_OWORD *)v10;
            uint64_t v259 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
            v260 = (char *)v9 + v259;
            __dsto = (char *)v10 + v259;
            uint64_t v261 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v261 - 8) + 32))(v260, __dsto, v261);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_218;
        case 8u:
          void *v9 = *v10;
          *(_OWORD *)(v9 + 1) = *(_OWORD *)(v10 + 1);
          uint64_t v44 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
          goto LABEL_223;
        case 9u:
          uint64_t v57 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v57))
          {
            uint64_t v58 = sub_253462A5C(&qword_269CE04A8);
            memcpy(v9, v10, *(void *)(*(void *)(v58 - 8) + 64));
          }
          else
          {
            uint64_t v95 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v95))
            {
              uint64_t v96 = sub_253462A5C(&qword_269CE04A0);
              memcpy(v9, v10, *(void *)(*(void *)(v96 - 8) + 64));
            }
            else
            {
              uint64_t v164 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 16, v164))
              {
                memcpy(v9, v10, *(void *)(*(void *)(v95 - 8) + 64));
              }
              else
              {
                long long v221 = *((_OWORD *)v10 + 1);
                *(_OWORD *)v9 = *(_OWORD *)v10;
                *((_OWORD *)v9 + 1) = v221;
                v9[4] = v10[4];
                uint64_t v222 = *(int *)(v164 + 28);
                __dstm = (void *)v164;
                v223 = (char *)v9 + v222;
                v683 = (char *)v10 + v222;
                uint64_t v224 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 32))(v223, v683, v224);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 16, (uint64_t)__dstm);
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v95);
            }
            uint64_t v225 = *(int *)(v57 + 20);
            v226 = (char *)v9 + v225;
            v227 = (char *)v10 + v225;
            uint64_t v228 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v228 - 8) + 32))(v226, v227, v228);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v57);
          }
          uint64_t v41 = type metadata accessor for TranscriptProtoActionFailure(0);
          goto LABEL_222;
        case 0xAu:
          void *v9 = *v10;
          uint64_t v41 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
          goto LABEL_222;
        default:
          *(unsigned char *)v9 = *(unsigned char *)v10;
          *(_WORD *)((char *)v9 + 1) = *(_WORD *)((char *)v10 + 1);
          __dsta = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
          uint64_t v25 = __dsta[7];
          v26 = (char *)v9 + v25;
          v27 = (char *)v10 + v25;
          uint64_t v28 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v28))
          {
            uint64_t v29 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v28);
          }
          uint64_t v82 = __dsta[8];
          v83 = (_OWORD *)((char *)v9 + v82);
          v84 = (_OWORD *)((char *)v10 + v82);
          uint64_t v85 = type metadata accessor for TranscriptProtoUndoContext(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v85))
          {
            uint64_t v86 = sub_253462A5C(&qword_269CE0450);
            memcpy(v83, v84, *(void *)(*(void *)(v86 - 8) + 64));
          }
          else
          {
            long long v97 = v84[1];
            _OWORD *v83 = *v84;
            v83[1] = v97;
            v83[2] = v84[2];
            uint64_t v98 = *(int *)(v85 + 28);
            v677 = (char *)v83 + v98;
            v99 = (char *)v84 + v98;
            uint64_t v100 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v677, v99, v100);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v85);
          }
          uint64_t v101 = __dsta[9];
          v678 = (_OWORD *)((char *)v9 + v101);
          v102 = (_OWORD *)((char *)v10 + v101);
          uint64_t v103 = type metadata accessor for TranscriptProtoFollowUpAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v102, 1, v103))
          {
            uint64_t v104 = sub_253462A5C(&qword_269CE0468);
            memcpy(v678, v102, *(void *)(*(void *)(v104 - 8) + 64));
          }
          else
          {
            uint64_t v105 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
            uint64_t v670 = v103;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v102, 1, v105))
            {
              uint64_t v106 = sub_253462A5C(&qword_269CE0460);
              memcpy(v678, v102, *(void *)(*(void *)(v106 - 8) + 64));
            }
            else
            {
              uint64_t v660 = v105;
              uint64_t v165 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v102, 1, v165))
              {
                uint64_t v166 = sub_253462A5C(&qword_269CE0458);
                memcpy(v678, v102, *(void *)(*(void *)(v166 - 8) + 64));
              }
              else
              {
                long long v229 = v102[1];
                _OWORD *v678 = *v102;
                v678[1] = v229;
                *((void *)v678 + 4) = *((void *)v102 + 4);
                uint64_t v230 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                              + 28);
                uint64_t v655 = v165;
                v231 = (char *)v678 + v230;
                v232 = (char *)v102 + v230;
                uint64_t v233 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v233 - 8) + 32))(v231, v232, v233);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v678, 0, 1, v655);
              }
              uint64_t v234 = *(int *)(v660 + 20);
              v656 = (char *)v678 + v234;
              v235 = (char *)v102 + v234;
              uint64_t v236 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v236 - 8) + 32))(v656, v235, v236);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v678, 0, 1, v660);
              uint64_t v103 = v670;
            }
            uint64_t v237 = *(int *)(v103 + 20);
            v662 = (char *)v678 + v237;
            v238 = (char *)v102 + v237;
            uint64_t v239 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v239 - 8) + 32))(v662, v238, v239);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v678, 0, 1, v670);
          }
          *(_OWORD *)((char *)v9 + __dsta[10]) = *(_OWORD *)((char *)v10 + __dsta[10]);
          uint64_t v44 = __dsta[11];
          goto LABEL_223;
      }
    }
LABEL_7:
    uint64_t v16 = sub_253462A5C(&qword_269CE0388);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_247;
  }
  if (v13)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  uint64_t v17 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  int v18 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v17);
  int v19 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v17);
  if (!v18)
  {
    if (v19)
    {
      sub_2536FA73C();
      goto LABEL_18;
    }
    if (a1 == a2) {
      goto LABEL_246;
    }
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        void *v9 = *v10;
        v742 = (int *)type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v112 = v742[5];
        v113 = (char *)v9 + v112;
        v114 = (char *)v10 + v112;
        uint64_t v115 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v114, 1, v115))
        {
          uint64_t v116 = sub_253462A5C(&qword_269CE0480);
          memcpy(v113, v114, *(void *)(*(void *)(v116 - 8) + 64));
        }
        else
        {
          v682 = (int *)v115;
          __dsth = v113;
          uint64_t v188 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v114, 1, v188))
          {
            uint64_t v189 = sub_253462A5C(&qword_269CE0478);
            uint64_t v190 = (uint64_t)__dsth;
            memcpy(__dsth, v114, *(void *)(*(void *)(v189 - 8) + 64));
          }
          else
          {
            uint64_t v673 = v188;
            *(_OWORD *)__dsth = *(_OWORD *)v114;
            __dsth[16] = v114[16];
            uint64_t v271 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v272 = *(int *)(v271 + 24);
            v657 = &__dsth[v272];
            uint64_t v663 = v271;
            v273 = &v114[v272];
            uint64_t v274 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v273, 1, v274))
            {
              uint64_t v275 = sub_253462A5C(&qword_269CE0470);
              memcpy(v657, v273, *(void *)(*(void *)(v275 - 8) + 64));
            }
            else
            {
              unsigned char *v657 = *v273;
              uint64_t v320 = *(int *)(v274 + 20);
              v646 = &v657[v320];
              v652 = &v273[v320];
              uint64_t v321 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v321 - 8) + 32))(v646, v652, v321);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v657, 0, 1, v274);
            }
            uint64_t v322 = *(int *)(v663 + 28);
            uint64_t v190 = (uint64_t)__dsth;
            v323 = &__dsth[v322];
            v666 = &v114[v322];
            uint64_t v324 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v324 - 8) + 32))(v323, v666, v324);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsth, 0, 1, v673);
          }
          uint64_t v325 = v682[5];
          __dstt = (void *)(v190 + v325);
          v326 = &v114[v325];
          uint64_t v327 = sub_253B07160();
          (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v327 - 8) + 32))(__dstt, v326, v327);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v190, 0, 1, (uint64_t)v682);
        }
        uint64_t v328 = v742[6];
        v329 = (char *)v9 + v328;
        v330 = (char *)v10 + v328;
        uint64_t v331 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v331 - 8) + 32))(v329, v330, v331);
        goto LABEL_245;
      case 2u:
        *(_OWORD *)v9 = *(_OWORD *)v10;
        uint64_t v117 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
        v118 = (char *)v9 + v117;
        v119 = (char *)v10 + v117;
        uint64_t v120 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 32))(v118, v119, v120);
        goto LABEL_245;
      case 3u:
        *(_OWORD *)v9 = *(_OWORD *)v10;
        v9[2] = v10[2];
        *((unsigned char *)v9 + 24) = *((unsigned char *)v10 + 24);
        uint64_t v121 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        uint64_t v122 = *(int *)(v121 + 24);
        v743 = (char *)v9 + v122;
        v123 = (char *)v10 + v122;
        uint64_t v124 = sub_253B08E50();
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v123, 1, v124)) {
          goto LABEL_127;
        }
        goto LABEL_84;
      case 4u:
        *(_OWORD *)v9 = *(_OWORD *)v10;
        uint64_t v126 = v10[3];
        v9[2] = v10[2];
        v9[3] = v126;
        *((unsigned char *)v9 + 32) = *((unsigned char *)v10 + 32);
        uint64_t v127 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        v128 = (char *)v9 + v127;
        v129 = (char *)v10 + v127;
        uint64_t v130 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 32))(v128, v129, v130);
        goto LABEL_245;
      case 5u:
        *(_OWORD *)v9 = *(_OWORD *)v10;
        *((unsigned char *)v9 + 16) = *((unsigned char *)v10 + 16);
        uint64_t v121 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
        uint64_t v131 = *(int *)(v121 + 24);
        v743 = (char *)v9 + v131;
        v123 = (char *)v10 + v131;
        uint64_t v124 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v123, 1, v124))
        {
LABEL_84:
          uint64_t v125 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v743, v123, *(void *)(*(void *)(v125 - 8) + 64));
        }
        else
        {
LABEL_127:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 32))(v743, v123, v124);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v743, 0, 1, v124);
        }
        uint64_t v191 = *(int *)(v121 + 28);
        v192 = (char *)v9 + v191;
        v193 = (char *)v10 + v191;
        uint64_t v194 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v194 - 8) + 32))(v192, v193, v194);
        goto LABEL_245;
      case 6u:
        *(_OWORD *)v9 = *(_OWORD *)v10;
        uint64_t v132 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v133 = *(int *)(v132 + 20);
        v744 = (char *)v9 + v133;
        v134 = (char *)v10 + v133;
        uint64_t v135 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v134, 1, v135))
        {
          uint64_t v136 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v744, v134, *(void *)(*(void *)(v136 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 32))(v744, v134, v135);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v744, 0, 1, v135);
        }
        uint64_t v195 = *(int *)(v132 + 24);
        v196 = (char *)v9 + v195;
        v197 = (char *)v10 + v195;
        uint64_t v198 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 32))(v196, v197, v198);
        goto LABEL_245;
      case 7u:
        uint64_t v137 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v137))
        {
          uint64_t v138 = sub_253462A5C(&qword_269CE0498);
          memcpy(v9, v10, *(void *)(*(void *)(v138 - 8) + 64));
          goto LABEL_244;
        }
        int v199 = swift_getEnumCaseMultiPayload();
        if (v199 != 2)
        {
          if (v199 == 1)
          {
            *(unsigned char *)v9 = *(unsigned char *)v10;
            uint64_t v299 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            v300 = (char *)v9 + v299;
            v301 = (char *)v10 + v299;
            uint64_t v302 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v302 - 8) + 32))(v300, v301, v302);
          }
          else
          {
            if (v199)
            {
              memcpy(v9, v10, *(void *)(*(void *)(v137 - 8) + 64));
              goto LABEL_243;
            }
            *(unsigned char *)v9 = *(unsigned char *)v10;
            uint64_t v200 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            v201 = (char *)v9 + v200;
            v202 = (char *)v10 + v200;
            uint64_t v203 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v203 - 8) + 32))(v201, v202, v203);
          }
LABEL_242:
          swift_storeEnumTagMultiPayload();
LABEL_243:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v137);
LABEL_244:
          uint64_t v392 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
          v393 = (char *)v9 + v392;
          v394 = (char *)v10 + v392;
          uint64_t v395 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v395 - 8) + 32))(v393, v394, v395);
LABEL_245:
          swift_storeEnumTagMultiPayload();
          goto LABEL_246;
        }
        uint64_t v297 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v297))
        {
          uint64_t v298 = sub_253462A5C(&qword_269CE0490);
          memcpy(v9, v10, *(void *)(*(void *)(v298 - 8) + 64));
LABEL_241:
          uint64_t v388 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          v389 = (char *)v9 + v388;
          v390 = (char *)v10 + v388;
          uint64_t v391 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v391 - 8) + 32))(v389, v390, v391);
          goto LABEL_242;
        }
        int v347 = swift_getEnumCaseMultiPayload();
        if (v347 == 1)
        {
          uint64_t v369 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v369))
          {
            uint64_t v370 = sub_253462A5C(&qword_269CE0488);
            memcpy(v9, v10, *(void *)(*(void *)(v370 - 8) + 64));
          }
          else
          {
            *(unsigned char *)v9 = *(unsigned char *)v10;
            uint64_t v383 = *(int *)(v369 + 20);
            __dsty = (char *)v10 + v383;
            v747 = (char *)v9 + v383;
            uint64_t v384 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v384 - 8) + 32))(v747, __dsty, v384);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v369);
          }
          uint64_t v385 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          v386 = (char *)v9 + v385;
          v748 = (char *)v10 + v385;
          uint64_t v387 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v387 - 8) + 32))(v386, v748, v387);
        }
        else
        {
          if (v347)
          {
            memcpy(v9, v10, *(void *)(*(void *)(v297 - 8) + 64));
LABEL_240:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v297);
            goto LABEL_241;
          }
          *(_OWORD *)v9 = *(_OWORD *)v10;
          uint64_t v348 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          v349 = (char *)v9 + v348;
          v746 = (char *)v10 + v348;
          uint64_t v350 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v350 - 8) + 32))(v349, v746, v350);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_240;
      case 8u:
        void *v9 = *v10;
        *(_OWORD *)(v9 + 1) = *(_OWORD *)(v10 + 1);
        uint64_t v139 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        v140 = (char *)v9 + v139;
        v141 = (char *)v10 + v139;
        uint64_t v142 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v140, v141, v142);
        goto LABEL_245;
      case 9u:
        uint64_t v143 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v143))
        {
          uint64_t v144 = sub_253462A5C(&qword_269CE04A8);
          memcpy(v9, v10, *(void *)(*(void *)(v144 - 8) + 64));
        }
        else
        {
          uint64_t v204 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v204))
          {
            uint64_t v205 = sub_253462A5C(&qword_269CE04A0);
            memcpy(v9, v10, *(void *)(*(void *)(v205 - 8) + 64));
          }
          else
          {
            uint64_t v262 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 16, v262))
            {
              memcpy(v9, v10, *(void *)(*(void *)(v204 - 8) + 64));
            }
            else
            {
              long long v309 = *((_OWORD *)v10 + 1);
              *(_OWORD *)v9 = *(_OWORD *)v10;
              *((_OWORD *)v9 + 1) = v309;
              v9[4] = v10[4];
              uint64_t v310 = *(int *)(v262 + 28);
              __dsts = (char *)v10 + v310;
              v745 = (char *)v9 + v310;
              uint64_t v311 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v311 - 8) + 32))(v745, __dsts, v311);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 16, v262);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v204);
          }
          uint64_t v312 = *(int *)(v143 + 20);
          v313 = (char *)v9 + v312;
          v314 = (char *)v10 + v312;
          uint64_t v315 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v315 - 8) + 32))(v313, v314, v315);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v143);
        }
        uint64_t v316 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
        v317 = (char *)v9 + v316;
        v318 = (char *)v10 + v316;
        uint64_t v319 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v319 - 8) + 32))(v317, v318, v319);
        goto LABEL_245;
      case 0xAu:
        void *v9 = *v10;
        uint64_t v145 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
        v146 = (char *)v9 + v145;
        v147 = (char *)v10 + v145;
        uint64_t v148 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 32))(v146, v147, v148);
        goto LABEL_245;
      default:
        *(unsigned char *)v9 = *(unsigned char *)v10;
        *(_WORD *)((char *)v9 + 1) = *(_WORD *)((char *)v10 + 1);
        v741 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v31 = v741[7];
        v32 = (char *)v9 + v31;
        v33 = (char *)v10 + v31;
        uint64_t v34 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v33, 1, v34))
        {
          uint64_t v35 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v32, 0, 1, v34);
        }
        uint64_t v183 = v741[8];
        v184 = (_OWORD *)((char *)v9 + v183);
        v185 = (_OWORD *)((char *)v10 + v183);
        uint64_t v186 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v185, 1, v186))
        {
          uint64_t v187 = sub_253462A5C(&qword_269CE0450);
          memcpy(v184, v185, *(void *)(*(void *)(v187 - 8) + 64));
        }
        else
        {
          long long v242 = v185[1];
          _OWORD *v184 = *v185;
          v184[1] = v242;
          v184[2] = v185[2];
          uint64_t v243 = *(int *)(v186 + 28);
          __dstn = (char *)v184 + v243;
          v244 = (char *)v185 + v243;
          uint64_t v245 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v245 - 8) + 32))(__dstn, v244, v245);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v184, 0, 1, v186);
        }
        uint64_t v246 = v741[9];
        v247 = (_OWORD *)((char *)v9 + v246);
        v248 = (_OWORD *)((char *)v10 + v246);
        uint64_t v249 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v248, 1, v249))
        {
          uint64_t v250 = sub_253462A5C(&qword_269CE0468);
          memcpy(v247, v248, *(void *)(*(void *)(v250 - 8) + 64));
        }
        else
        {
          v684 = (int *)type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          __dsti = (void *)v249;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v248, 1, (uint64_t)v684))
          {
            uint64_t v251 = sub_253462A5C(&qword_269CE0460);
            memcpy(v247, v248, *(void *)(*(void *)(v251 - 8) + 64));
          }
          else
          {
            uint64_t v674 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v248, 1, v674))
            {
              uint64_t v296 = sub_253462A5C(&qword_269CE0458);
              memcpy(v247, v248, *(void *)(*(void *)(v296 - 8) + 64));
            }
            else
            {
              long long v332 = v248[1];
              uint64_t v333 = (uint64_t)v247;
              _OWORD *v247 = *v248;
              v247[1] = v332;
              *((void *)v247 + 4) = *((void *)v248 + 4);
              uint64_t v334 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              v335 = (char *)v247 + v334;
              v667 = (char *)v248 + v334;
              uint64_t v336 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v336 - 8) + 32))(v335, v667, v336);
              v247 = (_OWORD *)v333;
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v333, 0, 1, v674);
            }
            uint64_t v337 = v684[5];
            v668 = (char *)v248 + v337;
            v675 = (char *)v247 + v337;
            uint64_t v338 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v338 - 8) + 32))(v675, v668, v338);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v247, 0, 1, (uint64_t)v684);
            uint64_t v249 = (uint64_t)__dsti;
          }
          uint64_t v339 = *(int *)(v249 + 20);
          v340 = (char *)v247 + v339;
          v341 = (char *)v248 + v339;
          uint64_t v342 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v342 - 8) + 32))(v340, v341, v342);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v247, 0, 1, (uint64_t)__dsti);
        }
        *(_OWORD *)((char *)v9 + v741[10]) = *(_OWORD *)((char *)v10 + v741[10]);
        uint64_t v343 = v741[11];
        v344 = (char *)v9 + v343;
        v345 = (char *)v10 + v343;
        uint64_t v346 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v346 - 8) + 32))(v344, v345, v346);
        goto LABEL_245;
    }
  }
  if (v19)
  {
LABEL_18:
    uint64_t v30 = sub_253462A5C(&qword_269CE04B0);
    memcpy(v9, v10, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_246;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      void *v9 = *v10;
      uint64_t v59 = type metadata accessor for TranscriptProtoActionConfirmation(0);
      uint64_t v60 = *(int *)(v59 + 20);
      __dste = (char *)v9 + v60;
      v61 = (char *)v10 + v60;
      uint64_t v62 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v61, 1, v62))
      {
        uint64_t v63 = sub_253462A5C(&qword_269CE0480);
        memcpy(__dste, v61, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        uint64_t v671 = v62;
        v679 = (void *)v59;
        uint64_t v149 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v61, 1, v149))
        {
          uint64_t v150 = sub_253462A5C(&qword_269CE0478);
          uint64_t v151 = (uint64_t)__dste;
          memcpy(__dste, v61, *(void *)(*(void *)(v150 - 8) + 64));
        }
        else
        {
          *(_OWORD *)__dste = *(_OWORD *)v61;
          __dste[16] = v61[16];
          uint64_t v206 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
          uint64_t v207 = *(int *)(v206 + 24);
          v645 = &__dste[v207];
          uint64_t v648 = v206;
          v661 = v61;
          v208 = &v61[v207];
          uint64_t v209 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
          uint64_t v654 = v149;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v208, 1, v209))
          {
            uint64_t v210 = sub_253462A5C(&qword_269CE0470);
            memcpy(v645, v208, *(void *)(*(void *)(v210 - 8) + 64));
          }
          else
          {
            unsigned char *v645 = *v208;
            uint64_t v276 = *(int *)(v209 + 20);
            v643 = &v645[v276];
            v277 = &v208[v276];
            uint64_t v278 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v278 - 8) + 32))(v643, v277, v278);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v645, 0, 1, v209);
          }
          uint64_t v279 = *(int *)(v648 + 28);
          uint64_t v151 = (uint64_t)__dste;
          v280 = &__dste[v279];
          v61 = v661;
          v650 = &v661[v279];
          uint64_t v281 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v281 - 8) + 32))(v280, v650, v281);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dste, 0, 1, v654);
        }
        uint64_t v282 = *(int *)(v671 + 20);
        __dstq = (void *)(v151 + v282);
        v283 = &v61[v282];
        uint64_t v284 = sub_253B07160();
        (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v284 - 8) + 32))(__dstq, v283, v284);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v151, 0, 1, v671);
        uint64_t v59 = (uint64_t)v679;
      }
      uint64_t v67 = *(int *)(v59 + 24);
      goto LABEL_236;
    case 2u:
      *(_OWORD *)v9 = *(_OWORD *)v10;
      uint64_t v64 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
      goto LABEL_235;
    case 3u:
      *(_OWORD *)v9 = *(_OWORD *)v10;
      v9[2] = v10[2];
      *((unsigned char *)v9 + 24) = *((unsigned char *)v10 + 24);
      uint64_t v65 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
      goto LABEL_47;
    case 4u:
      *(_OWORD *)v9 = *(_OWORD *)v10;
      uint64_t v66 = v10[3];
      v9[2] = v10[2];
      v9[3] = v66;
      *((unsigned char *)v9 + 32) = *((unsigned char *)v10 + 32);
      uint64_t v67 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
      goto LABEL_236;
    case 5u:
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((unsigned char *)v9 + 16) = *((unsigned char *)v10 + 16);
      uint64_t v65 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_47:
      uint64_t v68 = v65;
      uint64_t v69 = *(int *)(v65 + 24);
      __dstf = (char *)v9 + v69;
      v70 = (char *)v10 + v69;
      uint64_t v71 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v70, 1, v71))
      {
        uint64_t v72 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(__dstf, v70, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(__dstf, v70, v71);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstf, 0, 1, v71);
      }
      uint64_t v67 = *(int *)(v68 + 28);
      goto LABEL_236;
    case 6u:
      *(_OWORD *)v9 = *(_OWORD *)v10;
      uint64_t v73 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
      uint64_t v74 = *(int *)(v73 + 20);
      __dstg = (char *)v9 + v74;
      v75 = (char *)v10 + v74;
      uint64_t v76 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v75, 1, v76))
      {
        uint64_t v77 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(__dstg, v75, *(void *)(*(void *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32))(__dstg, v75, v76);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstg, 0, 1, v76);
      }
      uint64_t v67 = *(int *)(v73 + 24);
      goto LABEL_236;
    case 7u:
      uint64_t v78 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v78))
      {
        uint64_t v79 = sub_253462A5C(&qword_269CE0498);
        memcpy(v9, v10, *(void *)(*(void *)(v79 - 8) + 64));
        goto LABEL_234;
      }
      int v152 = swift_getEnumCaseMultiPayload();
      switch(v152)
      {
        case 2:
          uint64_t v252 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v252))
          {
            uint64_t v253 = sub_253462A5C(&qword_269CE0490);
            memcpy(v9, v10, *(void *)(*(void *)(v253 - 8) + 64));
LABEL_232:
            uint64_t v376 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
            v377 = (char *)v9 + v376;
            v378 = (char *)v10 + v376;
            uint64_t v379 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v379 - 8) + 32))(v377, v378, v379);
            swift_storeEnumTagMultiPayload();
            goto LABEL_233;
          }
          int v303 = swift_getEnumCaseMultiPayload();
          if (v303 == 1)
          {
            uint64_t v351 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v351))
            {
              uint64_t v352 = sub_253462A5C(&qword_269CE0488);
              memcpy(v9, v10, *(void *)(*(void *)(v352 - 8) + 64));
            }
            else
            {
              *(unsigned char *)v9 = *(unsigned char *)v10;
              uint64_t v371 = *(int *)(v351 + 20);
              v687 = (char *)v10 + v371;
              __dstw = (char *)v9 + v371;
              uint64_t v372 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v372 - 8) + 32))(__dstw, v687, v372);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v351);
            }
            uint64_t v373 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
            v374 = (char *)v9 + v373;
            __dstx = (char *)v10 + v373;
            uint64_t v375 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v375 - 8) + 32))(v374, __dstx, v375);
          }
          else
          {
            if (v303)
            {
              memcpy(v9, v10, *(void *)(*(void *)(v252 - 8) + 64));
LABEL_231:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v252);
              goto LABEL_232;
            }
            *(_OWORD *)v9 = *(_OWORD *)v10;
            uint64_t v304 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
            v305 = (char *)v9 + v304;
            __dstr = (char *)v10 + v304;
            uint64_t v306 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v306 - 8) + 32))(v305, __dstr, v306);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_231;
        case 1:
          *(unsigned char *)v9 = *(unsigned char *)v10;
          uint64_t v254 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
          v255 = (char *)v9 + v254;
          v256 = (char *)v10 + v254;
          uint64_t v257 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v257 - 8) + 32))(v255, v256, v257);
          goto LABEL_164;
        case 0:
          *(unsigned char *)v9 = *(unsigned char *)v10;
          uint64_t v153 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
          v154 = (char *)v9 + v153;
          v155 = (char *)v10 + v153;
          uint64_t v156 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 32))(v154, v155, v156);
LABEL_164:
          swift_storeEnumTagMultiPayload();
          goto LABEL_233;
      }
      memcpy(v9, v10, *(void *)(*(void *)(v78 - 8) + 64));
LABEL_233:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v78);
LABEL_234:
      uint64_t v64 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_235:
      uint64_t v67 = *(int *)(v64 + 20);
LABEL_236:
      v380 = (char *)v9 + v67;
      v381 = (char *)v10 + v67;
      uint64_t v382 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v382 - 8) + 32))(v380, v381, v382);
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v17);
LABEL_246:
      uint64_t v396 = *(int *)(v11 + 20);
      v397 = (char *)v9 + v396;
      v398 = (char *)v10 + v396;
      uint64_t v399 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v399 - 8) + 40))(v397, v398, v399);
LABEL_247:
      uint64_t v400 = a3[8];
      uint64_t v401 = (uint64_t)a1 + v400;
      uint64_t v402 = (uint64_t)a2 + v400;
      v403 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
      int v404 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v401, 1, (uint64_t)v403);
      int v405 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v402, 1, (uint64_t)v403);
      if (!v404)
      {
        if (v405)
        {
          sub_2536FA73C();
          goto LABEL_253;
        }
        *(void *)uint64_t v401 = *(void *)v402;
        swift_bridgeObjectRelease();
        *(unsigned char *)(v401 + 8) = *(unsigned char *)(v402 + 8);
        *(void *)(v401 + 16) = *(void *)(v402 + 16);
        swift_bridgeObjectRelease();
        uint64_t v412 = v403[7];
        v413 = (_OWORD *)(v401 + v412);
        v414 = (_OWORD *)(v402 + v412);
        uint64_t v415 = type metadata accessor for TranscriptProtoDialogType(0);
        int v416 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v413, 1, v415);
        int v417 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v414, 1, v415);
        if (v416)
        {
          if (!v417)
          {
            uint64_t v418 = type metadata accessor for TranscriptProtoDialogFormat(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v414, 1, v418))
            {
              uint64_t v419 = sub_253462A5C(&qword_269CE2050);
              memcpy(v413, v414, *(void *)(*(void *)(v419 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  _OWORD *v413 = *v414;
                  uint64_t v482 = type metadata accessor for TranscriptProtoSonicText(0);
                  goto LABEL_317;
                case 2u:
                  _OWORD *v413 = *v414;
                  uint64_t v482 = type metadata accessor for TranscriptProtoGeneratedText(0);
                  goto LABEL_317;
                case 3u:
                case 4u:
                  uint64_t v428 = sub_253B07160();
                  (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v428 - 8) + 32))(v413, v414, v428);
                  goto LABEL_318;
                case 5u:
                  _OWORD *v413 = *v414;
                  uint64_t v482 = type metadata accessor for TranscriptProtoCATDialog(0);
                  goto LABEL_317;
                default:
                  _OWORD *v413 = *v414;
                  uint64_t v482 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_317:
                  uint64_t v483 = *(int *)(v482 + 20);
                  v692 = (char *)v414 + v483;
                  __dstbc = (char *)v413 + v483;
                  uint64_t v484 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v484 - 8) + 32))(__dstbc, v692, v484);
LABEL_318:
                  swift_storeEnumTagMultiPayload();
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v413, 0, 1, v418);
                  break;
              }
            }
            uint64_t v485 = *(int *)(v415 + 20);
            v486 = (char *)v413 + v485;
            v487 = (char *)v414 + v485;
            uint64_t v488 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v488 - 8) + 32))(v486, v487, v488);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v413, 0, 1, v415);
LABEL_332:
            uint64_t v507 = v403[8];
            v508 = (_OWORD *)(v401 + v507);
            v509 = (_OWORD *)(v402 + v507);
            int v510 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v401 + v507, 1, v415);
            int v511 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v509, 1, v415);
            if (v510)
            {
              if (!v511)
              {
                uint64_t v512 = type metadata accessor for TranscriptProtoDialogFormat(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v509, 1, v512))
                {
                  uint64_t v513 = sub_253462A5C(&qword_269CE2050);
                  memcpy(v508, v509, *(void *)(*(void *)(v513 - 8) + 64));
                }
                else
                {
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 1u:
                      _OWORD *v508 = *v509;
                      uint64_t v524 = type metadata accessor for TranscriptProtoSonicText(0);
                      goto LABEL_355;
                    case 2u:
                      _OWORD *v508 = *v509;
                      uint64_t v524 = type metadata accessor for TranscriptProtoGeneratedText(0);
                      goto LABEL_355;
                    case 3u:
                    case 4u:
                      uint64_t v519 = sub_253B07160();
                      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v519 - 8) + 32))(v508, v509, v519);
                      goto LABEL_356;
                    case 5u:
                      _OWORD *v508 = *v509;
                      uint64_t v524 = type metadata accessor for TranscriptProtoCATDialog(0);
                      goto LABEL_355;
                    default:
                      _OWORD *v508 = *v509;
                      uint64_t v524 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_355:
                      uint64_t v525 = *(int *)(v524 + 20);
                      v698 = (char *)v509 + v525;
                      __dstbd = (char *)v508 + v525;
                      uint64_t v526 = sub_253B07160();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v526 - 8) + 32))(__dstbd, v698, v526);
LABEL_356:
                      swift_storeEnumTagMultiPayload();
                      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v508, 0, 1, v512);
                      break;
                  }
                }
                uint64_t v527 = *(int *)(v415 + 20);
                v528 = (char *)v508 + v527;
                v529 = (char *)v509 + v527;
                uint64_t v530 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v530 - 8) + 32))(v528, v529, v530);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v508, 0, 1, v415);
LABEL_366:
                uint64_t v539 = v403[9];
                v540 = (unsigned char *)(v401 + v539);
                v541 = (unsigned char *)(v402 + v539);
                uint64_t v542 = type metadata accessor for TranscriptProtoVisualOutputOptions(0);
                int v543 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v540, 1, v542);
                int v544 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v541, 1, v542);
                if (v543)
                {
                  if (!v544)
                  {
                    unsigned char *v540 = *v541;
                    uint64_t v545 = *(int *)(v542 + 20);
                    v546 = &v540[v545];
                    v547 = &v541[v545];
                    uint64_t v548 = sub_253B07160();
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v548 - 8) + 32))(v546, v547, v548);
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v540, 0, 1, v542);
                    goto LABEL_372;
                  }
                }
                else
                {
                  if (!v544)
                  {
                    unsigned char *v540 = *v541;
                    uint64_t v559 = *(int *)(v542 + 20);
                    v560 = &v540[v559];
                    v561 = &v541[v559];
                    uint64_t v562 = sub_253B07160();
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v562 - 8) + 40))(v560, v561, v562);
LABEL_372:
                    uint64_t v550 = v403[10];
                    v551 = (_OWORD *)(v401 + v550);
                    v552 = (_OWORD *)(v402 + v550);
                    uint64_t v553 = type metadata accessor for TranscriptProtoVisualOutput(0);
                    int v554 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v551, 1, v553);
                    int v555 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v552, 1, v553);
                    if (v554)
                    {
                      if (!v555)
                      {
                        uint64_t v556 = type metadata accessor for TranscriptProtoVisualOutputType(0);
                        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v552, 1, v556))
                        {
                          uint64_t v557 = sub_253462A5C(&qword_269CDCC18);
                          memcpy(v551, v552, *(void *)(*(void *)(v557 - 8) + 64));
                        }
                        else
                        {
                          switch(swift_getEnumCaseMultiPayload())
                          {
                            case 1u:
                              _OWORD *v551 = *v552;
                              uint64_t v567 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
                              goto LABEL_391;
                            case 2u:
                              _OWORD *v551 = *v552;
                              uint64_t v567 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
                              goto LABEL_391;
                            case 3u:
                              long long v570 = v552[1];
                              _OWORD *v551 = *v552;
                              v551[1] = v570;
                              uint64_t v569 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0)
                                            + 24);
                              goto LABEL_393;
                            default:
                              _OWORD *v551 = *v552;
                              uint64_t v567 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_391:
                              uint64_t v569 = *(int *)(v567 + 20);
LABEL_393:
                              v700 = (char *)v552 + v569;
                              __dstbe = (char *)v551 + v569;
                              uint64_t v571 = sub_253B07160();
                              (*(void (**)(char *, char *, uint64_t))(*(void *)(v571 - 8) + 32))(__dstbe, v700, v571);
                              swift_storeEnumTagMultiPayload();
                              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v551, 0, 1, v556);
                              break;
                          }
                        }
                        uint64_t v572 = *(int *)(v553 + 20);
                        v573 = (char *)v551 + v572;
                        v574 = (char *)v552 + v572;
                        uint64_t v575 = sub_253B07160();
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v575 - 8) + 32))(v573, v574, v575);
                        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v551, 0, 1, v553);
                        goto LABEL_405;
                      }
                      goto LABEL_378;
                    }
                    if (v555)
                    {
                      sub_2536FA73C();
LABEL_378:
                      uint64_t v558 = sub_253462A5C(&qword_269CE1FF0);
                      memcpy(v551, v552, *(void *)(*(void *)(v558 - 8) + 64));
LABEL_405:
                      uint64_t v587 = v403[11];
                      v588 = (void *)(v401 + v587);
                      v589 = (uint64_t *)(v402 + v587);
                      uint64_t v591 = *v589;
                      uint64_t v590 = v589[1];
                      void *v588 = v591;
                      v588[1] = v590;
                      swift_bridgeObjectRelease();
                      uint64_t v592 = v403[12];
                      uint64_t v593 = v401 + v592;
                      uint64_t v594 = v402 + v592;
                      uint64_t v595 = sub_253B07160();
                      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v595 - 8) + 40))(v593, v594, v595);
                      goto LABEL_406;
                    }
                    v751 = a3;
                    uint64_t v563 = type metadata accessor for TranscriptProtoVisualOutputType(0);
                    int v564 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v551, 1, v563);
                    __dstk = (void *)v563;
                    int v565 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v552, 1, v563);
                    if (v564)
                    {
                      if (!v565)
                      {
                        switch(swift_getEnumCaseMultiPayload())
                        {
                          case 1u:
                            _OWORD *v551 = *v552;
                            uint64_t v566 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
                            goto LABEL_400;
                          case 2u:
                            _OWORD *v551 = *v552;
                            uint64_t v566 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
                            goto LABEL_400;
                          case 3u:
                            long long v580 = v552[1];
                            _OWORD *v551 = *v552;
                            v551[1] = v580;
                            uint64_t v579 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0)
                                          + 24);
                            goto LABEL_402;
                          default:
                            _OWORD *v551 = *v552;
                            uint64_t v566 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_400:
                            uint64_t v579 = *(int *)(v566 + 20);
LABEL_402:
                            v581 = (char *)v551 + v579;
                            v702 = (char *)v552 + v579;
                            uint64_t v582 = sub_253B07160();
                            (*(void (**)(char *, char *, uint64_t))(*(void *)(v582 - 8) + 32))(v581, v702, v582);
                            swift_storeEnumTagMultiPayload();
                            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v551, 0, 1, (uint64_t)__dstk);
                            break;
                        }
                        goto LABEL_403;
                      }
                    }
                    else
                    {
                      if (!v565)
                      {
                        a3 = v751;
                        if (a1 != a2)
                        {
                          sub_2536FA73C();
                          switch(swift_getEnumCaseMultiPayload())
                          {
                            case 1u:
                              _OWORD *v551 = *v552;
                              uint64_t v622 = *(int *)(type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0)
                                            + 20);
                              v623 = (char *)v551 + v622;
                              v703 = (char *)v552 + v622;
                              uint64_t v624 = sub_253B07160();
                              (*(void (**)(char *, char *, uint64_t))(*(void *)(v624 - 8) + 32))(v623, v703, v624);
                              break;
                            case 2u:
                              _OWORD *v551 = *v552;
                              uint64_t v625 = *(int *)(type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0)
                                            + 20);
                              v626 = (char *)v551 + v625;
                              v704 = (char *)v552 + v625;
                              uint64_t v627 = sub_253B07160();
                              (*(void (**)(char *, char *, uint64_t))(*(void *)(v627 - 8) + 32))(v626, v704, v627);
                              break;
                            case 3u:
                              long long v628 = v552[1];
                              _OWORD *v551 = *v552;
                              v551[1] = v628;
                              uint64_t v629 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0)
                                            + 24);
                              v630 = (char *)v551 + v629;
                              v705 = (char *)v552 + v629;
                              uint64_t v631 = sub_253B07160();
                              (*(void (**)(char *, char *, uint64_t))(*(void *)(v631 - 8) + 32))(v630, v705, v631);
                              break;
                            default:
                              _OWORD *v551 = *v552;
                              uint64_t v576 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0)
                                            + 20);
                              v577 = (char *)v551 + v576;
                              v701 = (char *)v552 + v576;
                              uint64_t v578 = sub_253B07160();
                              (*(void (**)(char *, char *, uint64_t))(*(void *)(v578 - 8) + 32))(v577, v701, v578);
                              break;
                          }
                          swift_storeEnumTagMultiPayload();
                        }
                        goto LABEL_404;
                      }
                      sub_2536FA73C();
                    }
                    uint64_t v568 = sub_253462A5C(&qword_269CDCC18);
                    memcpy(v551, v552, *(void *)(*(void *)(v568 - 8) + 64));
LABEL_403:
                    a3 = v751;
LABEL_404:
                    uint64_t v583 = *(int *)(v553 + 20);
                    v584 = (char *)v551 + v583;
                    v585 = (char *)v552 + v583;
                    uint64_t v586 = sub_253B07160();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v586 - 8) + 40))(v584, v585, v586);
                    goto LABEL_405;
                  }
                  sub_2536FA73C();
                }
                uint64_t v549 = sub_253462A5C(&qword_269CE2000);
                memcpy(v540, v541, *(void *)(*(void *)(v549 - 8) + 64));
                goto LABEL_372;
              }
LABEL_338:
              uint64_t v514 = sub_253462A5C(&qword_269CE2010);
              memcpy(v508, v509, *(void *)(*(void *)(v514 - 8) + 64));
              goto LABEL_366;
            }
            if (v511)
            {
              sub_2536FA73C();
              goto LABEL_338;
            }
            v750 = a3;
            uint64_t v515 = type metadata accessor for TranscriptProtoDialogFormat(0);
            int v516 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v508, 1, v515);
            int v517 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v509, 1, v515);
            if (v516)
            {
              if (!v517)
              {
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 1u:
                    _OWORD *v508 = *v509;
                    uint64_t v531 = type metadata accessor for TranscriptProtoSonicText(0);
                    goto LABEL_362;
                  case 2u:
                    _OWORD *v508 = *v509;
                    uint64_t v531 = type metadata accessor for TranscriptProtoGeneratedText(0);
                    goto LABEL_362;
                  case 3u:
                  case 4u:
                    uint64_t v518 = sub_253B07160();
                    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v518 - 8) + 32))(v508, v509, v518);
                    goto LABEL_363;
                  case 5u:
                    _OWORD *v508 = *v509;
                    uint64_t v531 = type metadata accessor for TranscriptProtoCATDialog(0);
                    goto LABEL_362;
                  default:
                    _OWORD *v508 = *v509;
                    uint64_t v531 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_362:
                    uint64_t v532 = *(int *)(v531 + 20);
                    v533 = (char *)v508 + v532;
                    v699 = (char *)v509 + v532;
                    uint64_t v534 = sub_253B07160();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v534 - 8) + 32))(v533, v699, v534);
LABEL_363:
                    swift_storeEnumTagMultiPayload();
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v508, 0, 1, v515);
                    break;
                }
                goto LABEL_364;
              }
            }
            else
            {
              if (!v517)
              {
                a3 = v750;
                if (a1 != a2)
                {
                  sub_2536FA73C();
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 1u:
                      _OWORD *v508 = *v509;
                      uint64_t v632 = *(int *)(type metadata accessor for TranscriptProtoSonicText(0) + 20);
                      v633 = (char *)v508 + v632;
                      v706 = (char *)v509 + v632;
                      uint64_t v634 = sub_253B07160();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v634 - 8) + 32))(v633, v706, v634);
                      break;
                    case 2u:
                      _OWORD *v508 = *v509;
                      uint64_t v635 = *(int *)(type metadata accessor for TranscriptProtoGeneratedText(0) + 20);
                      v636 = (char *)v508 + v635;
                      v707 = (char *)v509 + v635;
                      uint64_t v637 = sub_253B07160();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v637 - 8) + 32))(v636, v707, v637);
                      break;
                    case 3u:
                    case 4u:
                      uint64_t v638 = sub_253B07160();
                      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v638 - 8) + 32))(v508, v509, v638);
                      break;
                    case 5u:
                      _OWORD *v508 = *v509;
                      uint64_t v639 = *(int *)(type metadata accessor for TranscriptProtoCATDialog(0) + 20);
                      v640 = (char *)v508 + v639;
                      v708 = (char *)v509 + v639;
                      uint64_t v641 = sub_253B07160();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v641 - 8) + 32))(v640, v708, v641);
                      break;
                    default:
                      _OWORD *v508 = *v509;
                      uint64_t v521 = *(int *)(type metadata accessor for TranscriptProtoStaticText(0) + 20);
                      v522 = (char *)v508 + v521;
                      v697 = (char *)v509 + v521;
                      uint64_t v523 = sub_253B07160();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v523 - 8) + 32))(v522, v697, v523);
                      break;
                  }
                  swift_storeEnumTagMultiPayload();
                }
                goto LABEL_365;
              }
              sub_2536FA73C();
            }
            uint64_t v520 = sub_253462A5C(&qword_269CE2050);
            memcpy(v508, v509, *(void *)(*(void *)(v520 - 8) + 64));
LABEL_364:
            a3 = v750;
LABEL_365:
            uint64_t v535 = *(int *)(v415 + 20);
            v536 = (char *)v508 + v535;
            v537 = (char *)v509 + v535;
            uint64_t v538 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v538 - 8) + 40))(v536, v537, v538);
            goto LABEL_366;
          }
LABEL_262:
          uint64_t v422 = sub_253462A5C(&qword_269CE2010);
          memcpy(v413, v414, *(void *)(*(void *)(v422 - 8) + 64));
          goto LABEL_332;
        }
        if (v417)
        {
          sub_2536FA73C();
          goto LABEL_262;
        }
        v749 = (void *)v415;
        uint64_t v424 = type metadata accessor for TranscriptProtoDialogFormat(0);
        int v425 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v413, 1, v424);
        __dstj = (void *)v424;
        int v426 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v414, 1, v424);
        if (v425)
        {
          uint64_t v415 = (uint64_t)v749;
          if (!v426)
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                _OWORD *v413 = *v414;
                uint64_t v489 = type metadata accessor for TranscriptProtoSonicText(0);
                goto LABEL_324;
              case 2u:
                _OWORD *v413 = *v414;
                uint64_t v489 = type metadata accessor for TranscriptProtoGeneratedText(0);
                goto LABEL_324;
              case 3u:
              case 4u:
                uint64_t v427 = sub_253B07160();
                (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v427 - 8) + 32))(v413, v414, v427);
                goto LABEL_325;
              case 5u:
                _OWORD *v413 = *v414;
                uint64_t v489 = type metadata accessor for TranscriptProtoCATDialog(0);
                goto LABEL_324;
              default:
                _OWORD *v413 = *v414;
                uint64_t v489 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_324:
                uint64_t v490 = *(int *)(v489 + 20);
                v491 = (char *)v413 + v490;
                v693 = (char *)v414 + v490;
                uint64_t v492 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v492 - 8) + 32))(v491, v693, v492);
LABEL_325:
                swift_storeEnumTagMultiPayload();
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v413, 0, 1, (uint64_t)__dstj);
                uint64_t v415 = (uint64_t)v749;
                break;
            }
            goto LABEL_331;
          }
        }
        else
        {
          uint64_t v415 = (uint64_t)v749;
          if (!v426)
          {
            if (a1 != a2)
            {
              sub_2536FA73C();
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  _OWORD *v413 = *v414;
                  uint64_t v493 = *(int *)(type metadata accessor for TranscriptProtoSonicText(0) + 20);
                  v494 = (char *)v413 + v493;
                  v694 = (char *)v414 + v493;
                  uint64_t v495 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v495 - 8) + 32))(v494, v694, v495);
                  break;
                case 2u:
                  _OWORD *v413 = *v414;
                  uint64_t v496 = *(int *)(type metadata accessor for TranscriptProtoGeneratedText(0) + 20);
                  v497 = (char *)v413 + v496;
                  v695 = (char *)v414 + v496;
                  uint64_t v498 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v498 - 8) + 32))(v497, v695, v498);
                  break;
                case 3u:
                case 4u:
                  uint64_t v499 = sub_253B07160();
                  (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v499 - 8) + 32))(v413, v414, v499);
                  break;
                case 5u:
                  _OWORD *v413 = *v414;
                  uint64_t v500 = *(int *)(type metadata accessor for TranscriptProtoCATDialog(0) + 20);
                  v501 = (char *)v413 + v500;
                  v696 = (char *)v414 + v500;
                  uint64_t v502 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v502 - 8) + 32))(v501, v696, v502);
                  break;
                default:
                  _OWORD *v413 = *v414;
                  uint64_t v479 = *(int *)(type metadata accessor for TranscriptProtoStaticText(0) + 20);
                  v480 = (char *)v413 + v479;
                  v691 = (char *)v414 + v479;
                  uint64_t v481 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v481 - 8) + 32))(v480, v691, v481);
                  break;
              }
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_331;
          }
          sub_2536FA73C();
        }
        uint64_t v429 = sub_253462A5C(&qword_269CE2050);
        memcpy(v413, v414, *(void *)(*(void *)(v429 - 8) + 64));
LABEL_331:
        uint64_t v503 = *(int *)(v415 + 20);
        v504 = (char *)v413 + v503;
        v505 = (char *)v414 + v503;
        uint64_t v506 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v506 - 8) + 40))(v504, v505, v506);
        goto LABEL_332;
      }
      if (v405)
      {
LABEL_253:
        uint64_t v411 = sub_253462A5C(&qword_269CE24C8);
        memcpy((void *)v401, (const void *)v402, *(void *)(*(void *)(v411 - 8) + 64));
        goto LABEL_406;
      }
      *(void *)uint64_t v401 = *(void *)v402;
      *(unsigned char *)(v401 + 8) = *(unsigned char *)(v402 + 8);
      *(void *)(v401 + 16) = *(void *)(v402 + 16);
      uint64_t v406 = v403[7];
      v407 = (_OWORD *)(v401 + v406);
      v408 = (_OWORD *)(v402 + v406);
      uint64_t v409 = type metadata accessor for TranscriptProtoDialogType(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v408, 1, v409))
      {
        uint64_t v410 = sub_253462A5C(&qword_269CE2010);
        memcpy(v407, v408, *(void *)(*(void *)(v410 - 8) + 64));
      }
      else
      {
        uint64_t v420 = type metadata accessor for TranscriptProtoDialogFormat(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v408, 1, v420))
        {
          uint64_t v421 = sub_253462A5C(&qword_269CE2050);
          memcpy(v407, v408, *(void *)(*(void *)(v421 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              _OWORD *v407 = *v408;
              uint64_t v430 = type metadata accessor for TranscriptProtoSonicText(0);
              goto LABEL_278;
            case 2u:
              _OWORD *v407 = *v408;
              uint64_t v430 = type metadata accessor for TranscriptProtoGeneratedText(0);
              goto LABEL_278;
            case 3u:
            case 4u:
              uint64_t v423 = sub_253B07160();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v423 - 8) + 32))(v407, v408, v423);
              goto LABEL_279;
            case 5u:
              _OWORD *v407 = *v408;
              uint64_t v430 = type metadata accessor for TranscriptProtoCATDialog(0);
              goto LABEL_278;
            default:
              _OWORD *v407 = *v408;
              uint64_t v430 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_278:
              uint64_t v431 = *(int *)(v430 + 20);
              v688 = (char *)v408 + v431;
              __dstz = (char *)v407 + v431;
              uint64_t v432 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v432 - 8) + 32))(__dstz, v688, v432);
LABEL_279:
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v407, 0, 1, v420);
              break;
          }
        }
        uint64_t v433 = *(int *)(v409 + 20);
        v434 = (char *)v407 + v433;
        v435 = (char *)v408 + v433;
        uint64_t v436 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v436 - 8) + 32))(v434, v435, v436);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v407, 0, 1, v409);
      }
      uint64_t v437 = v403[8];
      v438 = (_OWORD *)(v401 + v437);
      v439 = (_OWORD *)(v402 + v437);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v402 + v437, 1, v409))
      {
        uint64_t v440 = sub_253462A5C(&qword_269CE2010);
        memcpy(v438, v439, *(void *)(*(void *)(v440 - 8) + 64));
      }
      else
      {
        uint64_t v441 = type metadata accessor for TranscriptProtoDialogFormat(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v439, 1, v441))
        {
          uint64_t v442 = sub_253462A5C(&qword_269CE2050);
          memcpy(v438, v439, *(void *)(*(void *)(v442 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              _OWORD *v438 = *v439;
              uint64_t v444 = type metadata accessor for TranscriptProtoSonicText(0);
              goto LABEL_291;
            case 2u:
              _OWORD *v438 = *v439;
              uint64_t v444 = type metadata accessor for TranscriptProtoGeneratedText(0);
              goto LABEL_291;
            case 3u:
            case 4u:
              uint64_t v443 = sub_253B07160();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v443 - 8) + 32))(v438, v439, v443);
              goto LABEL_292;
            case 5u:
              _OWORD *v438 = *v439;
              uint64_t v444 = type metadata accessor for TranscriptProtoCATDialog(0);
              goto LABEL_291;
            default:
              _OWORD *v438 = *v439;
              uint64_t v444 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_291:
              uint64_t v445 = *(int *)(v444 + 20);
              v689 = (char *)v439 + v445;
              __dstba = (char *)v438 + v445;
              uint64_t v446 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v446 - 8) + 32))(__dstba, v689, v446);
LABEL_292:
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v438, 0, 1, v441);
              break;
          }
        }
        uint64_t v447 = *(int *)(v409 + 20);
        v448 = (char *)v438 + v447;
        v449 = (char *)v439 + v447;
        uint64_t v450 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v450 - 8) + 32))(v448, v449, v450);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v438, 0, 1, v409);
      }
      uint64_t v451 = v403[9];
      v452 = (unsigned char *)(v401 + v451);
      v453 = (unsigned char *)(v402 + v451);
      uint64_t v454 = type metadata accessor for TranscriptProtoVisualOutputOptions(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v453, 1, v454))
      {
        uint64_t v455 = sub_253462A5C(&qword_269CE2000);
        memcpy(v452, v453, *(void *)(*(void *)(v455 - 8) + 64));
      }
      else
      {
        unsigned char *v452 = *v453;
        uint64_t v456 = *(int *)(v454 + 20);
        v457 = &v452[v456];
        v458 = &v453[v456];
        uint64_t v459 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v459 - 8) + 32))(v457, v458, v459);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v452, 0, 1, v454);
      }
      uint64_t v460 = v403[10];
      v461 = (_OWORD *)(v401 + v460);
      v462 = (_OWORD *)(v402 + v460);
      uint64_t v463 = type metadata accessor for TranscriptProtoVisualOutput(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v462, 1, v463))
      {
        uint64_t v464 = sub_253462A5C(&qword_269CE1FF0);
        memcpy(v461, v462, *(void *)(*(void *)(v464 - 8) + 64));
      }
      else
      {
        uint64_t v465 = type metadata accessor for TranscriptProtoVisualOutputType(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v462, 1, v465))
        {
          uint64_t v466 = sub_253462A5C(&qword_269CDCC18);
          memcpy(v461, v462, *(void *)(*(void *)(v466 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              _OWORD *v461 = *v462;
              uint64_t v467 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
              goto LABEL_305;
            case 2u:
              _OWORD *v461 = *v462;
              uint64_t v467 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
              goto LABEL_305;
            case 3u:
              long long v469 = v462[1];
              _OWORD *v461 = *v462;
              v461[1] = v469;
              uint64_t v468 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
              goto LABEL_307;
            default:
              _OWORD *v461 = *v462;
              uint64_t v467 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_305:
              uint64_t v468 = *(int *)(v467 + 20);
LABEL_307:
              v690 = (char *)v462 + v468;
              __dstbb = (char *)v461 + v468;
              uint64_t v470 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v470 - 8) + 32))(__dstbb, v690, v470);
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v461, 0, 1, v465);
              break;
          }
        }
        uint64_t v471 = *(int *)(v463 + 20);
        v472 = (char *)v461 + v471;
        v473 = (char *)v462 + v471;
        uint64_t v474 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v474 - 8) + 32))(v472, v473, v474);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v461, 0, 1, v463);
      }
      *(_OWORD *)(v401 + v403[11]) = *(_OWORD *)(v402 + v403[11]);
      uint64_t v475 = v403[12];
      uint64_t v476 = v401 + v475;
      uint64_t v477 = v402 + v475;
      uint64_t v478 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v478 - 8) + 32))(v476, v477, v478);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v401, 0, 1, (uint64_t)v403);
LABEL_406:
      uint64_t v596 = a3[9];
      uint64_t v597 = (uint64_t)a1 + v596;
      uint64_t v598 = (uint64_t)a2 + v596;
      uint64_t v599 = type metadata accessor for TranscriptProtoStatementID(0);
      int v600 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v597, 1, v599);
      int v601 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v598, 1, v599);
      if (!v600)
      {
        if (!v601)
        {
          *(_DWORD *)uint64_t v597 = *(_DWORD *)v598;
          uint64_t v617 = *(void *)(v598 + 16);
          *(void *)(v597 + 8) = *(void *)(v598 + 8);
          *(void *)(v597 + 16) = v617;
          swift_bridgeObjectRelease();
          uint64_t v618 = *(int *)(v599 + 24);
          uint64_t v619 = v597 + v618;
          uint64_t v620 = v598 + v618;
          uint64_t v621 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v621 - 8) + 40))(v619, v620, v621);
          goto LABEL_412;
        }
        sub_2536FA73C();
        goto LABEL_411;
      }
      if (v601)
      {
LABEL_411:
        uint64_t v606 = sub_253462A5C(&qword_26B249528);
        memcpy((void *)v597, (const void *)v598, *(void *)(*(void *)(v606 - 8) + 64));
        goto LABEL_412;
      }
      *(_DWORD *)uint64_t v597 = *(_DWORD *)v598;
      *(_OWORD *)(v597 + 8) = *(_OWORD *)(v598 + 8);
      uint64_t v602 = *(int *)(v599 + 24);
      uint64_t v603 = v597 + v602;
      uint64_t v604 = v598 + v602;
      uint64_t v605 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v605 - 8) + 32))(v603, v604, v605);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v597, 0, 1, v599);
LABEL_412:
      uint64_t v607 = a3[10];
      v608 = (void *)((char *)a1 + v607);
      v609 = (void *)((char *)a2 + v607);
      uint64_t v611 = *v609;
      uint64_t v610 = v609[1];
      void *v608 = v611;
      v608[1] = v610;
      swift_bridgeObjectRelease();
      uint64_t v612 = a3[11];
      v613 = (char *)a1 + v612;
      v614 = (char *)a2 + v612;
      uint64_t v615 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v615 - 8) + 40))(v613, v614, v615);
      return a1;
    case 8u:
      void *v9 = *v10;
      *(_OWORD *)(v9 + 1) = *(_OWORD *)(v10 + 1);
      uint64_t v67 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
      goto LABEL_236;
    case 9u:
      uint64_t v80 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v80))
      {
        uint64_t v81 = sub_253462A5C(&qword_269CE04A8);
        memcpy(v9, v10, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        uint64_t v157 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v157))
        {
          uint64_t v158 = sub_253462A5C(&qword_269CE04A0);
          memcpy(v9, v10, *(void *)(*(void *)(v158 - 8) + 64));
        }
        else
        {
          uint64_t v211 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 16, v211))
          {
            memcpy(v9, v10, *(void *)(*(void *)(v157 - 8) + 64));
          }
          else
          {
            long long v263 = *((_OWORD *)v10 + 1);
            *(_OWORD *)v9 = *(_OWORD *)v10;
            *((_OWORD *)v9 + 1) = v263;
            v9[4] = v10[4];
            uint64_t v264 = *(int *)(v211 + 28);
            __dstp = (void *)v211;
            v265 = (char *)v9 + v264;
            v685 = (char *)v10 + v264;
            uint64_t v266 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v266 - 8) + 32))(v265, v685, v266);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 16, (uint64_t)__dstp);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v157);
        }
        uint64_t v267 = *(int *)(v80 + 20);
        v268 = (char *)v9 + v267;
        v269 = (char *)v10 + v267;
        uint64_t v270 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v270 - 8) + 32))(v268, v269, v270);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v80);
      }
      uint64_t v64 = type metadata accessor for TranscriptProtoActionFailure(0);
      goto LABEL_235;
    case 0xAu:
      void *v9 = *v10;
      uint64_t v64 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
      goto LABEL_235;
    default:
      *(unsigned char *)v9 = *(unsigned char *)v10;
      *(_WORD *)((char *)v9 + 1) = *(_WORD *)((char *)v10 + 1);
      __dst = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
      uint64_t v20 = __dst[7];
      v21 = (char *)v9 + v20;
      v22 = (char *)v10 + v20;
      uint64_t v23 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v23))
      {
        uint64_t v24 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v21, 0, 1, v23);
      }
      uint64_t v107 = __dst[8];
      v108 = (_OWORD *)((char *)v9 + v107);
      v109 = (_OWORD *)((char *)v10 + v107);
      uint64_t v110 = type metadata accessor for TranscriptProtoUndoContext(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v109, 1, v110))
      {
        uint64_t v111 = sub_253462A5C(&qword_269CE0450);
        memcpy(v108, v109, *(void *)(*(void *)(v111 - 8) + 64));
      }
      else
      {
        long long v167 = v109[1];
        _OWORD *v108 = *v109;
        v108[1] = v167;
        v108[2] = v109[2];
        uint64_t v168 = *(int *)(v110 + 28);
        v680 = (char *)v108 + v168;
        v169 = (char *)v109 + v168;
        uint64_t v170 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 32))(v680, v169, v170);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v108, 0, 1, v110);
      }
      uint64_t v171 = __dst[9];
      v681 = (_OWORD *)((char *)v9 + v171);
      v172 = (_OWORD *)((char *)v10 + v171);
      uint64_t v173 = type metadata accessor for TranscriptProtoFollowUpAction(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v172, 1, v173))
      {
        uint64_t v174 = sub_253462A5C(&qword_269CE0468);
        memcpy(v681, v172, *(void *)(*(void *)(v174 - 8) + 64));
      }
      else
      {
        uint64_t v175 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
        uint64_t v672 = v173;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v172, 1, v175))
        {
          uint64_t v176 = sub_253462A5C(&qword_269CE0460);
          memcpy(v681, v172, *(void *)(*(void *)(v176 - 8) + 64));
        }
        else
        {
          uint64_t v240 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v172, 1, v240))
          {
            uint64_t v241 = sub_253462A5C(&qword_269CE0458);
            memcpy(v681, v172, *(void *)(*(void *)(v241 - 8) + 64));
          }
          else
          {
            long long v285 = v172[1];
            _OWORD *v681 = *v172;
            v681[1] = v285;
            *((void *)v681 + 4) = *((void *)v172 + 4);
            uint64_t v286 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
            v651 = (char *)v681 + v286;
            uint64_t v658 = v240;
            v287 = (char *)v172 + v286;
            uint64_t v288 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v288 - 8) + 32))(v651, v287, v288);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v681, 0, 1, v658);
          }
          uint64_t v664 = v175;
          uint64_t v289 = *(int *)(v175 + 20);
          v290 = (char *)v681 + v289;
          v291 = (char *)v172 + v289;
          uint64_t v292 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v292 - 8) + 32))(v290, v291, v292);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v681, 0, 1, v664);
          uint64_t v173 = v672;
        }
        uint64_t v293 = *(int *)(v173 + 20);
        v665 = (char *)v681 + v293;
        v294 = (char *)v172 + v293;
        uint64_t v295 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v295 - 8) + 32))(v665, v294, v295);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v681, 0, 1, v672);
      }
      *(_OWORD *)((char *)v9 + __dst[10]) = *(_OWORD *)((char *)v10 + __dst[10]);
      uint64_t v67 = __dst[11];
      goto LABEL_236;
  }
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253918DD4);
}

uint64_t sub_253918DD4()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*(void *)(v1 + 8));
  }
  sub_2535E2460();
  sub_253462A5C(&qword_269CE0388);
  sub_2535782A8();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    sub_2535E256C();
  }
  else
  {
    sub_253462A5C(&qword_269CE24C8);
    sub_2535782A8();
    if (*(_DWORD *)(v6 + 84) == v0)
    {
      sub_2535E27E4();
    }
    else
    {
      sub_253462A5C(&qword_26B249528);
      sub_2535782A8();
      if (*(_DWORD *)(v7 + 84) == v0)
      {
        sub_253945148();
      }
      else
      {
        sub_253B07160();
        sub_25394532C();
      }
    }
  }
  uint64_t v8 = sub_2535E22C8(v5);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, v9, v10);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253918EC8);
}

void sub_253918EC8()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E24BC();
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_269CE0388);
    sub_2535782A8();
    if (*(_DWORD *)(v2 + 84) == v0)
    {
      sub_2535E26E4();
    }
    else
    {
      sub_253462A5C(&qword_269CE24C8);
      sub_2535782A8();
      if (*(_DWORD *)(v4 + 84) == v0)
      {
        sub_2535E2830();
      }
      else
      {
        sub_253462A5C(&qword_26B249528);
        sub_2535782A8();
        if (*(_DWORD *)(v5 + 84) == v0)
        {
          sub_25394519C();
        }
        else
        {
          sub_253B07160();
          sub_2539453D4();
        }
      }
    }
    uint64_t v6 = sub_2535E2234(v3);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v6, v7, v8, v9);
  }
}

void sub_253918FA4()
{
  sub_253760A08(319, &qword_26B249908, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementOutcome);
  if (v0 <= 0x3F)
  {
    sub_253760A08(319, &qword_26B249818, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseOutput);
    if (v1 <= 0x3F)
    {
      sub_253760A08(319, &qword_26B249530, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
      if (v2 <= 0x3F)
      {
        sub_253B07160();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoInterpretedStatementResult(void *a1, void *a2, int *a3)
{
  unint64_t v3 = a2;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = a3;
  uint64_t v7 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v3, 1, v7))
  {
    uint64_t v10 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v3, 1, v10))
    {
      uint64_t v11 = sub_253462A5C(&qword_269CE04B0);
      memcpy(a1, v3, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_83:
      uint64_t v173 = *(int *)(v7 + 20);
      uint64_t v174 = (char *)a1 + v173;
      uint64_t v175 = (char *)v3 + v173;
      uint64_t v176 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16))(v174, v175, v176);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
      goto LABEL_84;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *v3;
        uint64_t v18 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v19 = *(int *)(v18 + 20);
        uint64_t v20 = (void *)((char *)a1 + v19);
        v21 = (void *)((char *)v3 + v19);
        uint64_t v22 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v22))
        {
          uint64_t v23 = sub_253462A5C(&qword_269CE0480);
          memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          uint64_t v66 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v66))
          {
            uint64_t v67 = sub_253462A5C(&qword_269CE0478);
            memcpy(v20, v21, *(void *)(*(void *)(v67 - 8) + 64));
          }
          else
          {
            uint64_t v236 = v66;
            uint64_t v96 = v21[1];
            *uint64_t v20 = *v21;
            v20[1] = v96;
            *((unsigned char *)v20 + 16) = *((unsigned char *)v21 + 16);
            uint64_t v230 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v97 = *(int *)(v230 + 24);
            __dst = (char *)v20 + v97;
            __src = (char *)v21 + v97;
            uint64_t v98 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__src, 1, v98))
            {
              uint64_t v99 = sub_253462A5C(&qword_269CE0470);
              memcpy(__dst, __src, *(void *)(*(void *)(v99 - 8) + 64));
            }
            else
            {
              unsigned char *__dst = *__src;
              uint64_t v119 = *(int *)(v98 + 20);
              uint64_t v224 = &__dst[v119];
              __srch = &__src[v119];
              uint64_t v120 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v120 - 8) + 16))(v224, __srch, v120);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v98);
            }
            uint64_t v121 = *(int *)(v230 + 28);
            uint64_t v122 = (char *)v20 + v121;
            __srci = (char *)v21 + v121;
            uint64_t v123 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 16))(v122, __srci, v123);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, v236);
          }
          uint64_t v124 = *(int *)(v22 + 20);
          uint64_t v125 = (char *)v20 + v124;
          uint64_t v126 = (char *)v21 + v124;
          uint64_t v127 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16))(v125, v126, v127);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, v22);
        }
        goto LABEL_35;
      case 2u:
        uint64_t v24 = v3[1];
        *a1 = *v3;
        a1[1] = v24;
        uint64_t v25 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
        __srcb = (char *)a1 + v25;
        v26 = (char *)v3 + v25;
        uint64_t v27 = sub_253B07160();
        uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v28(__srcb, v26, v27);
        goto LABEL_82;
      case 3u:
        uint64_t v29 = v3[1];
        *a1 = *v3;
        a1[1] = v29;
        a1[2] = v3[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)v3 + 24);
        uint64_t v30 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        uint64_t v31 = *(int *)(v30 + 24);
        v32 = (char *)a1 + v31;
        v33 = (char *)v3 + v31;
        uint64_t v34 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v33, 1, v34)) {
          goto LABEL_14;
        }
        goto LABEL_31;
      case 4u:
        uint64_t v36 = v3[1];
        *a1 = *v3;
        a1[1] = v36;
        uint64_t v37 = v3[3];
        a1[2] = v3[2];
        a1[3] = v37;
        *((unsigned char *)a1 + 32) = *((unsigned char *)v3 + 32);
        uint64_t v38 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        uint64_t v233 = (char *)v3 + v38;
        __srcc = (char *)a1 + v38;
        uint64_t v39 = sub_253B07160();
        uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v40(__srcc, v233, v39);
        goto LABEL_82;
      case 5u:
        uint64_t v41 = v3[1];
        *a1 = *v3;
        a1[1] = v41;
        *((unsigned char *)a1 + 16) = *((unsigned char *)v3 + 16);
        uint64_t v30 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
        uint64_t v42 = *(int *)(v30 + 24);
        v32 = (char *)a1 + v42;
        v33 = (char *)v3 + v42;
        uint64_t v34 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v33, 1, v34))
        {
LABEL_14:
          uint64_t v35 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
LABEL_31:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v32, 0, 1, v34);
        }
        uint64_t v68 = *(int *)(v30 + 28);
        uint64_t v69 = (char *)a1 + v68;
        v70 = (char *)v3 + v68;
        uint64_t v71 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
        goto LABEL_82;
      case 6u:
        uint64_t v43 = v3[1];
        *a1 = *v3;
        a1[1] = v43;
        uint64_t v18 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v44 = *(int *)(v18 + 20);
        uint64_t v45 = (char *)a1 + v44;
        uint64_t v46 = (char *)v3 + v44;
        uint64_t v47 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v46, 1, v47))
        {
          uint64_t v48 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v45, 0, 1, v47);
        }
LABEL_35:
        uint64_t v72 = *(int *)(v18 + 24);
        uint64_t v73 = (char *)a1 + v72;
        uint64_t v74 = (char *)v3 + v72;
        uint64_t v75 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v73, v74, v75);
        goto LABEL_82;
      case 7u:
        uint64_t v49 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v3, 1, v49))
        {
          uint64_t v50 = sub_253462A5C(&qword_269CE0498);
          memcpy(a1, v3, *(void *)(*(void *)(v50 - 8) + 64));
          goto LABEL_81;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            *(unsigned char *)a1 = *(unsigned char *)v3;
            uint64_t v103 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v104 = (char *)a1 + v103;
            uint64_t v105 = (char *)v3 + v103;
            uint64_t v106 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 16))(v104, v105, v106);
          }
          else
          {
            if (EnumCaseMultiPayload)
            {
              memcpy(a1, v3, *(void *)(*(void *)(v49 - 8) + 64));
              goto LABEL_80;
            }
            *(unsigned char *)a1 = *(unsigned char *)v3;
            uint64_t v77 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v78 = (char *)a1 + v77;
            uint64_t v79 = (char *)v3 + v77;
            uint64_t v80 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v78, v79, v80);
          }
LABEL_79:
          swift_storeEnumTagMultiPayload();
LABEL_80:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v49);
LABEL_81:
          uint64_t v169 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
          uint64_t v170 = (char *)a1 + v169;
          uint64_t v171 = (char *)v3 + v169;
          uint64_t v172 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v172 - 8) + 16))(v170, v171, v172);
LABEL_82:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v10);
          goto LABEL_83;
        }
        uint64_t v101 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v3, 1, v101))
        {
          uint64_t v102 = sub_253462A5C(&qword_269CE0490);
          memcpy(a1, v3, *(void *)(*(void *)(v102 - 8) + 64));
LABEL_78:
          uint64_t v165 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v166 = (char *)a1 + v165;
          long long v167 = (char *)v3 + v165;
          uint64_t v168 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16))(v166, v167, v168);
          goto LABEL_79;
        }
        int v151 = swift_getEnumCaseMultiPayload();
        if (v151 == 1)
        {
          uint64_t v155 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v3, 1, v155))
          {
            uint64_t v156 = sub_253462A5C(&qword_269CE0488);
            memcpy(a1, v3, *(void *)(*(void *)(v156 - 8) + 64));
          }
          else
          {
            *(unsigned char *)a1 = *(unsigned char *)v3;
            uint64_t v157 = *(int *)(v155 + 20);
            uint64_t v158 = (char *)a1 + v157;
            uint64_t v159 = (char *)v3 + v157;
            uint64_t v160 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 16))(v158, v159, v160);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v155);
          }
          uint64_t v161 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v162 = (char *)a1 + v161;
          uint64_t v163 = (char *)v3 + v161;
          uint64_t v164 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 16))(v162, v163, v164);
        }
        else
        {
          if (v151)
          {
            memcpy(a1, v3, *(void *)(*(void *)(v101 - 8) + 64));
LABEL_77:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v101);
            goto LABEL_78;
          }
          uint64_t v152 = v3[1];
          *a1 = *v3;
          a1[1] = v152;
          uint64_t v153 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v239 = (char *)v3 + v153;
          __srck = (char *)a1 + v153;
          uint64_t v154 = sub_253B07160();
          v232 = *(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 16);
          swift_bridgeObjectRetain();
          v232(__srck, v239, v154);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_77;
      case 8u:
        uint64_t v51 = v3[1];
        *a1 = *v3;
        a1[1] = v51;
        a1[2] = v3[2];
        uint64_t v52 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        uint64_t v234 = (char *)v3 + v52;
        __srcd = (char *)a1 + v52;
        uint64_t v53 = sub_253B07160();
        uint64_t v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v54(__srcd, v234, v53);
        goto LABEL_82;
      case 9u:
        uint64_t v55 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v3, 1, v55))
        {
          uint64_t v56 = sub_253462A5C(&qword_269CE04A8);
          memcpy(a1, v3, *(void *)(*(void *)(v56 - 8) + 64));
        }
        else
        {
          uint64_t v81 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v3, 1, v81))
          {
            uint64_t v82 = sub_253462A5C(&qword_269CE04A0);
            memcpy(a1, v3, *(void *)(*(void *)(v82 - 8) + 64));
          }
          else
          {
            uint64_t v95 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v3, 16, v95))
            {
              memcpy(a1, v3, *(void *)(*(void *)(v81 - 8) + 64));
            }
            else
            {
              uint64_t v107 = v3[1];
              *a1 = *v3;
              a1[1] = v107;
              uint64_t v108 = v3[3];
              a1[2] = v3[2];
              a1[3] = v108;
              a1[4] = v3[4];
              uint64_t v109 = *(int *)(v95 + 28);
              v238 = (char *)v3 + v109;
              __srcg = (char *)a1 + v109;
              uint64_t v110 = sub_253B07160();
              v227 = *(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v227(__srcg, v238, v110);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v95);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v81);
          }
          uint64_t v111 = *(int *)(v55 + 20);
          uint64_t v112 = (char *)a1 + v111;
          v113 = (char *)v3 + v111;
          uint64_t v114 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 16))(v112, v113, v114);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v55);
        }
        uint64_t v115 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
        uint64_t v116 = (char *)a1 + v115;
        uint64_t v117 = (char *)v3 + v115;
        uint64_t v118 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16))(v116, v117, v118);
        goto LABEL_82;
      case 0xAu:
        *a1 = *v3;
        uint64_t v57 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
        __srce = (char *)a1 + v57;
        uint64_t v58 = (char *)v3 + v57;
        uint64_t v59 = sub_253B07160();
        uint64_t v60 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
        swift_bridgeObjectRetain();
        v60(__srce, v58, v59);
        goto LABEL_82;
      default:
        *(unsigned char *)a1 = *(unsigned char *)v3;
        *(_WORD *)((char *)a1 + 1) = *(_WORD *)((char *)v3 + 1);
        int v12 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v13 = v12[7];
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)v3 + v13;
        uint64_t v16 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16))
        {
          uint64_t v17 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v14, 0, 1, v16);
        }
        uint64_t v61 = v12[8];
        uint64_t v62 = (void *)((char *)a1 + v61);
        uint64_t v63 = (void *)((char *)v3 + v61);
        uint64_t v64 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v63, 1, v64))
        {
          uint64_t v65 = sub_253462A5C(&qword_269CE0450);
          memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
        }
        else
        {
          __srcf = v12;
          uint64_t v83 = v63[1];
          *uint64_t v62 = *v63;
          v62[1] = v83;
          uint64_t v84 = v63[3];
          v62[2] = v63[2];
          v62[3] = v84;
          uint64_t v85 = v63[5];
          v62[4] = v63[4];
          v62[5] = v85;
          uint64_t v86 = *(int *)(v64 + 28);
          long long v229 = (char *)v63 + v86;
          v235 = (char *)v62 + v86;
          uint64_t v87 = sub_253B07160();
          __dsta = *(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16);
          int v12 = __srcf;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __dsta(v235, v229, v87);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v62, 0, 1, v64);
        }
        uint64_t v88 = v12[9];
        uint64_t v89 = (void *)((char *)a1 + v88);
        v90 = (void *)((char *)v3 + v88);
        uint64_t v91 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v90, 1, v91))
        {
          uint64_t v92 = sub_253462A5C(&qword_269CE0468);
          memcpy(v89, v90, *(void *)(*(void *)(v92 - 8) + 64));
        }
        else
        {
          uint64_t v93 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v90, 1, v93))
          {
            uint64_t v94 = sub_253462A5C(&qword_269CE0460);
            memcpy(v89, v90, *(void *)(*(void *)(v94 - 8) + 64));
          }
          else
          {
            uint64_t v231 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            uint64_t v237 = v93;
            __srca = v12;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v90, 1, v231))
            {
              uint64_t v100 = sub_253462A5C(&qword_269CE0458);
              memcpy(v89, v90, *(void *)(*(void *)(v100 - 8) + 64));
            }
            else
            {
              uint64_t v128 = v90[1];
              *uint64_t v89 = *v90;
              v89[1] = v128;
              uint64_t v129 = v90[2];
              unint64_t v130 = v90[3];
              swift_bridgeObjectRetain();
              sub_25348A9C8(v129, v130);
              v89[2] = v129;
              v89[3] = v130;
              v89[4] = v90[4];
              uint64_t v131 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              uint64_t v132 = (char *)v89 + v131;
              uint64_t v228 = (char *)v90 + v131;
              uint64_t v133 = sub_253B07160();
              v134 = v132;
              uint64_t v93 = v237;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16))(v134, v228, v133);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v89, 0, 1, v231);
            }
            uint64_t v135 = *(int *)(v93 + 20);
            uint64_t v136 = (char *)v89 + v135;
            uint64_t v137 = (char *)v90 + v135;
            uint64_t v138 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16))(v136, v137, v138);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v89, 0, 1, v237);
            int v12 = __srca;
          }
          uint64_t v139 = *(int *)(v91 + 20);
          v140 = (char *)v89 + v139;
          v141 = (char *)v90 + v139;
          uint64_t v142 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 16))(v140, v141, v142);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v89, 0, 1, v91);
        }
        uint64_t v143 = v12[10];
        uint64_t v144 = (void *)((char *)a1 + v143);
        uint64_t v145 = (void *)((char *)v3 + v143);
        uint64_t v146 = v145[1];
        *uint64_t v144 = *v145;
        v144[1] = v146;
        uint64_t v147 = v12[11];
        __srcj = (char *)a1 + v147;
        uint64_t v148 = (char *)v3 + v147;
        uint64_t v149 = sub_253B07160();
        uint64_t v150 = *(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16);
        swift_bridgeObjectRetain();
        v150(__srcj, v148, v149);
        goto LABEL_82;
    }
  }
  uint64_t v8 = sub_253462A5C(&qword_269CE0388);
  memcpy(a1, v3, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_84:
  uint64_t v177 = v6[5];
  uint64_t v178 = (void *)((char *)a1 + v177);
  uint64_t v179 = (void *)((char *)v3 + v177);
  uint64_t v180 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v179, 1, v180))
  {
    uint64_t v181 = sub_253462A5C(&qword_26B249528);
    memcpy(v178, v179, *(void *)(*(void *)(v181 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v178 = *(_DWORD *)v179;
    uint64_t v182 = v179[2];
    v178[1] = v179[1];
    v178[2] = v182;
    uint64_t v183 = *(int *)(v180 + 24);
    v184 = (char *)v178 + v183;
    __srcl = (char *)v179 + v183;
    uint64_t v185 = sub_253B07160();
    uint64_t v186 = *(void (**)(char *, char *, uint64_t))(*(void *)(v185 - 8) + 16);
    swift_bridgeObjectRetain();
    v186(v184, __srcl, v185);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v178, 0, 1, v180);
  }
  uint64_t v187 = v6[6];
  uint64_t v188 = (void *)((char *)a1 + v187);
  uint64_t v189 = (void *)((char *)v3 + v187);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v3 + v187, 1, v180))
  {
    uint64_t v190 = sub_253462A5C(&qword_26B249528);
    memcpy(v188, v189, *(void *)(*(void *)(v190 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v188 = *(_DWORD *)v189;
    uint64_t v191 = v189[2];
    v188[1] = v189[1];
    v188[2] = v191;
    uint64_t v192 = *(int *)(v180 + 24);
    v193 = (char *)v188 + v192;
    __srcm = (char *)v189 + v192;
    uint64_t v194 = sub_253B07160();
    uint64_t v195 = a1;
    v196 = v3;
    v197 = v6;
    uint64_t v198 = *(void (**)(char *, char *, uint64_t))(*(void *)(v194 - 8) + 16);
    swift_bridgeObjectRetain();
    v198(v193, __srcm, v194);
    uint64_t v6 = v197;
    unint64_t v3 = v196;
    a1 = v195;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v188, 0, 1, v180);
  }
  uint64_t v199 = v6[7];
  uint64_t v200 = v6[8];
  v201 = (void *)((char *)a1 + v199);
  v202 = (void *)((char *)v3 + v199);
  uint64_t v203 = v202[1];
  void *v201 = *v202;
  v201[1] = v203;
  uint64_t v204 = (void *)((char *)a1 + v200);
  uint64_t v205 = (void *)((char *)v3 + v200);
  uint64_t v206 = v205[1];
  *uint64_t v204 = *v205;
  v204[1] = v206;
  uint64_t v207 = v6[9];
  v208 = (void *)((char *)a1 + v207);
  uint64_t v209 = (void *)((char *)v3 + v207);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v209, 1, v180))
  {
    uint64_t v210 = sub_253462A5C(&qword_26B249528);
    memcpy(v208, v209, *(void *)(*(void *)(v210 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v208 = *(_DWORD *)v209;
    uint64_t v211 = v209[2];
    v208[1] = v209[1];
    v208[2] = v211;
    uint64_t v212 = *(int *)(v180 + 24);
    v213 = (char *)v208 + v212;
    __srcn = (char *)v209 + v212;
    uint64_t v214 = sub_253B07160();
    uint64_t v215 = a1;
    v216 = v3;
    uint64_t v217 = v6;
    uint64_t v218 = *(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 16);
    swift_bridgeObjectRetain();
    v218(v213, __srcn, v214);
    uint64_t v6 = v217;
    unint64_t v3 = v216;
    a1 = v215;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v208, 0, 1, v180);
  }
  uint64_t v219 = v6[10];
  uint64_t v220 = (char *)a1 + v219;
  long long v221 = (char *)v3 + v219;
  uint64_t v222 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v222 - 8) + 16))(v220, v221, v222);
  return a1;
}

uint64_t destroy for TranscriptProtoInterpretedStatementResult(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    uint64_t v5 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v5))
    {
LABEL_58:
      uint64_t v66 = a1 + *(int *)(v4 + 20);
      uint64_t v67 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v67 - 8) + 8))(v66, v67);
      goto LABEL_59;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v7 = a1 + v6[7];
        uint64_t v8 = sub_253B08E50();
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v8)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
        }
        uint64_t v9 = a1 + v6[8];
        uint64_t v10 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, 1, v10))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v11 = v9 + *(int *)(v10 + 28);
          uint64_t v12 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
        }
        uint64_t v13 = a1 + v6[9];
        uint64_t v14 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v13, 1, v14))
        {
          uint64_t v15 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v13, 1, v15))
          {
            uint64_t v16 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v13, 1, v16))
            {
              swift_bridgeObjectRelease();
              sub_253487D84(*(void *)(v13 + 16), *(void *)(v13 + 24));
              uint64_t v17 = v13
                  + *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
              uint64_t v18 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
            }
            uint64_t v19 = v13 + *(int *)(v15 + 20);
            uint64_t v20 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
          }
          uint64_t v21 = v13 + *(int *)(v14 + 20);
          uint64_t v22 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
        }
        swift_bridgeObjectRelease();
        uint64_t v23 = v6[11];
        goto LABEL_57;
      case 1u:
        swift_bridgeObjectRelease();
        uint64_t v24 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v25 = a1 + *(int *)(v24 + 20);
        uint64_t v26 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v25, 1, v26))
        {
          uint64_t v27 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v25, 1, v27))
          {
            swift_bridgeObjectRelease();
            uint64_t v28 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v29 = v25 + *(int *)(v28 + 24);
            uint64_t v30 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v29, 1, v30))
            {
              uint64_t v31 = v29 + *(int *)(v30 + 20);
              uint64_t v32 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
            }
            uint64_t v33 = v25 + *(int *)(v28 + 28);
            uint64_t v34 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
          }
          uint64_t v35 = v25 + *(int *)(v26 + 20);
          uint64_t v36 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
        }
        goto LABEL_30;
      case 2u:
        swift_bridgeObjectRelease();
        uint64_t v37 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_56;
      case 3u:
        swift_bridgeObjectRelease();
        uint64_t v38 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_25;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_57;
      case 5u:
        swift_bridgeObjectRelease();
        uint64_t v38 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_25:
        uint64_t v39 = v38;
        uint64_t v40 = a1 + *(int *)(v38 + 24);
        uint64_t v41 = sub_253B08E50();
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v40, 1, v41)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
        }
        uint64_t v23 = *(int *)(v39 + 28);
        goto LABEL_57;
      case 6u:
        swift_bridgeObjectRelease();
        uint64_t v24 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v42 = a1 + *(int *)(v24 + 20);
        uint64_t v43 = sub_253B08E50();
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v42, 1, v43)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v42, v43);
        }
LABEL_30:
        uint64_t v23 = *(int *)(v24 + 24);
        goto LABEL_57;
      case 7u:
        uint64_t v44 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v44)) {
          goto LABEL_55;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v46 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
          }
          else
          {
            if (EnumCaseMultiPayload) {
              goto LABEL_55;
            }
            uint64_t v46 = type metadata accessor for TranscriptProtoAppRequirement(0);
          }
LABEL_54:
          uint64_t v62 = a1 + *(int *)(v46 + 20);
          uint64_t v63 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8))(v62, v63);
LABEL_55:
          uint64_t v37 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_56:
          uint64_t v23 = *(int *)(v37 + 20);
LABEL_57:
          uint64_t v64 = a1 + v23;
          uint64_t v65 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v65 - 8) + 8))(v64, v65);
          goto LABEL_58;
        }
        uint64_t v54 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v54)) {
          goto LABEL_53;
        }
        int v55 = swift_getEnumCaseMultiPayload();
        if (v55 == 1)
        {
          uint64_t v57 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v57))
          {
            uint64_t v58 = a1 + *(int *)(v57 + 20);
            uint64_t v59 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v59 - 8) + 8))(v58, v59);
          }
          uint64_t v56 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
        }
        else
        {
          if (v55)
          {
LABEL_53:
            uint64_t v46 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
            goto LABEL_54;
          }
          swift_bridgeObjectRelease();
          uint64_t v56 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
        }
        uint64_t v60 = a1 + *(int *)(v56 + 20);
        uint64_t v61 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v60, v61);
        goto LABEL_53;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        goto LABEL_57;
      case 9u:
        uint64_t v47 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v47))
        {
          uint64_t v48 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v48))
          {
            uint64_t v49 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 16, v49))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v50 = a1 + *(int *)(v49 + 28);
              uint64_t v51 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v51 - 8) + 8))(v50, v51);
            }
          }
          uint64_t v52 = a1 + *(int *)(v47 + 20);
          uint64_t v53 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v52, v53);
        }
        uint64_t v37 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_56;
      case 0xAu:
        swift_bridgeObjectRelease();
        uint64_t v37 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
        goto LABEL_56;
      default:
        goto LABEL_58;
    }
  }
LABEL_59:
  uint64_t v68 = a1 + a2[5];
  uint64_t v69 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v68, 1, v69))
  {
    swift_bridgeObjectRelease();
    uint64_t v70 = v68 + *(int *)(v69 + 24);
    uint64_t v71 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v71 - 8) + 8))(v70, v71);
  }
  uint64_t v72 = a1 + a2[6];
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v72, 1, v69))
  {
    swift_bridgeObjectRelease();
    uint64_t v73 = v72 + *(int *)(v69 + 24);
    uint64_t v74 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v74 - 8) + 8))(v73, v74);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v75 = a1 + a2[9];
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v75, 1, v69))
  {
    swift_bridgeObjectRelease();
    uint64_t v76 = v75 + *(int *)(v69 + 24);
    uint64_t v77 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v77 - 8) + 8))(v76, v77);
  }
  uint64_t v78 = a1 + a2[10];
  uint64_t v79 = sub_253B07160();
  uint64_t v80 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8);
  return v80(v78, v79);
}

void *initializeWithCopy for TranscriptProtoInterpretedStatementResult(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE0388);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    goto LABEL_82;
  }
  uint64_t v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v8))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v16 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v17 = *(int *)(v16 + 20);
        uint64_t v18 = (void *)((char *)a1 + v17);
        uint64_t v19 = (void *)((char *)a2 + v17);
        uint64_t v20 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
        {
          uint64_t v21 = sub_253462A5C(&qword_269CE0480);
          memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          uint64_t v64 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v64))
          {
            uint64_t v65 = sub_253462A5C(&qword_269CE0478);
            memcpy(v18, v19, *(void *)(*(void *)(v65 - 8) + 64));
          }
          else
          {
            uint64_t v234 = v64;
            uint64_t v94 = v19[1];
            *uint64_t v18 = *v19;
            v18[1] = v94;
            *((unsigned char *)v18 + 16) = *((unsigned char *)v19 + 16);
            uint64_t v228 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v95 = *(int *)(v228 + 24);
            __dst = (char *)v18 + v95;
            __src = (char *)v19 + v95;
            uint64_t v96 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__src, 1, v96))
            {
              uint64_t v97 = sub_253462A5C(&qword_269CE0470);
              memcpy(__dst, __src, *(void *)(*(void *)(v97 - 8) + 64));
            }
            else
            {
              unsigned char *__dst = *__src;
              uint64_t v117 = *(int *)(v96 + 20);
              uint64_t v222 = &__dst[v117];
              __srch = &__src[v117];
              uint64_t v118 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v118 - 8) + 16))(v222, __srch, v118);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v96);
            }
            uint64_t v119 = *(int *)(v228 + 28);
            uint64_t v120 = (char *)v18 + v119;
            __srci = (char *)v19 + v119;
            uint64_t v121 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 16))(v120, __srci, v121);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v234);
          }
          uint64_t v122 = *(int *)(v20 + 20);
          uint64_t v123 = (char *)v18 + v122;
          uint64_t v124 = (char *)v19 + v122;
          uint64_t v125 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 16))(v123, v124, v125);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
        }
        goto LABEL_33;
      case 2u:
        uint64_t v22 = a2[1];
        *a1 = *a2;
        a1[1] = v22;
        uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
        __srcb = (char *)a1 + v23;
        uint64_t v24 = (char *)a2 + v23;
        uint64_t v25 = sub_253B07160();
        uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
        swift_bridgeObjectRetain();
        v26(__srcb, v24, v25);
        goto LABEL_80;
      case 3u:
        uint64_t v27 = a2[1];
        *a1 = *a2;
        a1[1] = v27;
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        uint64_t v28 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        uint64_t v29 = *(int *)(v28 + 24);
        uint64_t v30 = (char *)a1 + v29;
        uint64_t v31 = (char *)a2 + v29;
        uint64_t v32 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v31, 1, v32)) {
          goto LABEL_12;
        }
        goto LABEL_29;
      case 4u:
        uint64_t v34 = a2[1];
        *a1 = *a2;
        a1[1] = v34;
        uint64_t v35 = a2[3];
        a1[2] = a2[2];
        a1[3] = v35;
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v36 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        uint64_t v231 = (char *)a2 + v36;
        __srcc = (char *)a1 + v36;
        uint64_t v37 = sub_253B07160();
        uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v38(__srcc, v231, v37);
        goto LABEL_80;
      case 5u:
        uint64_t v39 = a2[1];
        *a1 = *a2;
        a1[1] = v39;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v28 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
        uint64_t v40 = *(int *)(v28 + 24);
        uint64_t v30 = (char *)a1 + v40;
        uint64_t v31 = (char *)a2 + v40;
        uint64_t v32 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v31, 1, v32))
        {
LABEL_12:
          uint64_t v33 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
LABEL_29:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v30, 0, 1, v32);
        }
        uint64_t v66 = *(int *)(v28 + 28);
        uint64_t v67 = (char *)a1 + v66;
        uint64_t v68 = (char *)a2 + v66;
        uint64_t v69 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
        goto LABEL_80;
      case 6u:
        uint64_t v41 = a2[1];
        *a1 = *a2;
        a1[1] = v41;
        uint64_t v16 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v42 = *(int *)(v16 + 20);
        uint64_t v43 = (char *)a1 + v42;
        uint64_t v44 = (char *)a2 + v42;
        uint64_t v45 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v44, 1, v45))
        {
          uint64_t v46 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v43, 0, 1, v45);
        }
LABEL_33:
        uint64_t v70 = *(int *)(v16 + 24);
        uint64_t v71 = (char *)a1 + v70;
        uint64_t v72 = (char *)a2 + v70;
        uint64_t v73 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
        goto LABEL_80;
      case 7u:
        uint64_t v47 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v47))
        {
          uint64_t v48 = sub_253462A5C(&qword_269CE0498);
          memcpy(a1, a2, *(void *)(*(void *)(v48 - 8) + 64));
          goto LABEL_79;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v101 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v102 = (char *)a1 + v101;
            uint64_t v103 = (char *)a2 + v101;
            uint64_t v104 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16))(v102, v103, v104);
          }
          else
          {
            if (EnumCaseMultiPayload)
            {
              memcpy(a1, a2, *(void *)(*(void *)(v47 - 8) + 64));
              goto LABEL_78;
            }
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v75 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v76 = (char *)a1 + v75;
            uint64_t v77 = (char *)a2 + v75;
            uint64_t v78 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
          }
LABEL_77:
          swift_storeEnumTagMultiPayload();
LABEL_78:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v47);
LABEL_79:
          uint64_t v167 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
          uint64_t v168 = (char *)a1 + v167;
          uint64_t v169 = (char *)a2 + v167;
          uint64_t v170 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 16))(v168, v169, v170);
LABEL_80:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v8);
          goto LABEL_81;
        }
        uint64_t v99 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v99))
        {
          uint64_t v100 = sub_253462A5C(&qword_269CE0490);
          memcpy(a1, a2, *(void *)(*(void *)(v100 - 8) + 64));
LABEL_76:
          uint64_t v163 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v164 = (char *)a1 + v163;
          uint64_t v165 = (char *)a2 + v163;
          uint64_t v166 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 16))(v164, v165, v166);
          goto LABEL_77;
        }
        int v149 = swift_getEnumCaseMultiPayload();
        if (v149 == 1)
        {
          uint64_t v153 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v153))
          {
            uint64_t v154 = sub_253462A5C(&qword_269CE0488);
            memcpy(a1, a2, *(void *)(*(void *)(v154 - 8) + 64));
          }
          else
          {
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v155 = *(int *)(v153 + 20);
            uint64_t v156 = (char *)a1 + v155;
            uint64_t v157 = (char *)a2 + v155;
            uint64_t v158 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 16))(v156, v157, v158);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v153);
          }
          uint64_t v159 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v160 = (char *)a1 + v159;
          uint64_t v161 = (char *)a2 + v159;
          uint64_t v162 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 16))(v160, v161, v162);
        }
        else
        {
          if (v149)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v99 - 8) + 64));
LABEL_75:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v99);
            goto LABEL_76;
          }
          uint64_t v150 = a2[1];
          *a1 = *a2;
          a1[1] = v150;
          uint64_t v151 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v237 = (char *)a2 + v151;
          __srck = (char *)a1 + v151;
          uint64_t v152 = sub_253B07160();
          uint64_t v230 = *(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 16);
          swift_bridgeObjectRetain();
          v230(__srck, v237, v152);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_75;
      case 8u:
        uint64_t v49 = a2[1];
        *a1 = *a2;
        a1[1] = v49;
        a1[2] = a2[2];
        uint64_t v50 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        v232 = (char *)a2 + v50;
        __srcd = (char *)a1 + v50;
        uint64_t v51 = sub_253B07160();
        uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v52(__srcd, v232, v51);
        goto LABEL_80;
      case 9u:
        uint64_t v53 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v53))
        {
          uint64_t v54 = sub_253462A5C(&qword_269CE04A8);
          memcpy(a1, a2, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          uint64_t v79 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v79))
          {
            uint64_t v80 = sub_253462A5C(&qword_269CE04A0);
            memcpy(a1, a2, *(void *)(*(void *)(v80 - 8) + 64));
          }
          else
          {
            uint64_t v93 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v93))
            {
              memcpy(a1, a2, *(void *)(*(void *)(v79 - 8) + 64));
            }
            else
            {
              uint64_t v105 = a2[1];
              *a1 = *a2;
              a1[1] = v105;
              uint64_t v106 = a2[3];
              a1[2] = a2[2];
              a1[3] = v106;
              a1[4] = a2[4];
              uint64_t v107 = *(int *)(v93 + 28);
              uint64_t v236 = (char *)a2 + v107;
              __srcg = (char *)a1 + v107;
              uint64_t v108 = sub_253B07160();
              uint64_t v225 = *(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v225(__srcg, v236, v108);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v93);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v79);
          }
          uint64_t v109 = *(int *)(v53 + 20);
          uint64_t v110 = (char *)a1 + v109;
          uint64_t v111 = (char *)a2 + v109;
          uint64_t v112 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16))(v110, v111, v112);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v53);
        }
        uint64_t v113 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
        uint64_t v114 = (char *)a1 + v113;
        uint64_t v115 = (char *)a2 + v113;
        uint64_t v116 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 16))(v114, v115, v116);
        goto LABEL_80;
      case 0xAu:
        *a1 = *a2;
        uint64_t v55 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
        __srce = (char *)a1 + v55;
        uint64_t v56 = (char *)a2 + v55;
        uint64_t v57 = sub_253B07160();
        uint64_t v58 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16);
        swift_bridgeObjectRetain();
        v58(__srce, v56, v57);
        goto LABEL_80;
      default:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(_WORD *)((char *)a1 + 1) = *(_WORD *)((char *)a2 + 1);
        uint64_t v10 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v11 = v10[7];
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
        {
          uint64_t v15 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
        }
        uint64_t v59 = v10[8];
        uint64_t v60 = (void *)((char *)a1 + v59);
        uint64_t v61 = (void *)((char *)a2 + v59);
        uint64_t v62 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v61, 1, v62))
        {
          uint64_t v63 = sub_253462A5C(&qword_269CE0450);
          memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          __srcf = v10;
          uint64_t v81 = v61[1];
          *uint64_t v60 = *v61;
          v60[1] = v81;
          uint64_t v82 = v61[3];
          v60[2] = v61[2];
          v60[3] = v82;
          uint64_t v83 = v61[5];
          v60[4] = v61[4];
          v60[5] = v83;
          uint64_t v84 = *(int *)(v62 + 28);
          v227 = (char *)v61 + v84;
          uint64_t v233 = (char *)v60 + v84;
          uint64_t v85 = sub_253B07160();
          __dsta = *(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16);
          uint64_t v10 = __srcf;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __dsta(v233, v227, v85);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v60, 0, 1, v62);
        }
        uint64_t v86 = v10[9];
        uint64_t v87 = (void *)((char *)a1 + v86);
        uint64_t v88 = (void *)((char *)a2 + v86);
        uint64_t v89 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v89))
        {
          uint64_t v90 = sub_253462A5C(&qword_269CE0468);
          memcpy(v87, v88, *(void *)(*(void *)(v90 - 8) + 64));
        }
        else
        {
          uint64_t v91 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v91))
          {
            uint64_t v92 = sub_253462A5C(&qword_269CE0460);
            memcpy(v87, v88, *(void *)(*(void *)(v92 - 8) + 64));
          }
          else
          {
            uint64_t v229 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            uint64_t v235 = v91;
            __srca = v10;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v229))
            {
              uint64_t v98 = sub_253462A5C(&qword_269CE0458);
              memcpy(v87, v88, *(void *)(*(void *)(v98 - 8) + 64));
            }
            else
            {
              uint64_t v126 = v88[1];
              *uint64_t v87 = *v88;
              v87[1] = v126;
              uint64_t v127 = v88[2];
              unint64_t v128 = v88[3];
              swift_bridgeObjectRetain();
              sub_25348A9C8(v127, v128);
              v87[2] = v127;
              v87[3] = v128;
              v87[4] = v88[4];
              uint64_t v129 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              unint64_t v130 = (char *)v87 + v129;
              v226 = (char *)v88 + v129;
              uint64_t v131 = sub_253B07160();
              uint64_t v132 = v130;
              uint64_t v91 = v235;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16))(v132, v226, v131);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v229);
            }
            uint64_t v133 = *(int *)(v91 + 20);
            v134 = (char *)v87 + v133;
            uint64_t v135 = (char *)v88 + v133;
            uint64_t v136 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 16))(v134, v135, v136);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v235);
            uint64_t v10 = __srca;
          }
          uint64_t v137 = *(int *)(v89 + 20);
          uint64_t v138 = (char *)v87 + v137;
          uint64_t v139 = (char *)v88 + v137;
          uint64_t v140 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v89);
        }
        uint64_t v141 = v10[10];
        uint64_t v142 = (void *)((char *)a1 + v141);
        uint64_t v143 = (void *)((char *)a2 + v141);
        uint64_t v144 = v143[1];
        *uint64_t v142 = *v143;
        v142[1] = v144;
        uint64_t v145 = v10[11];
        __srcj = (char *)a1 + v145;
        uint64_t v146 = (char *)a2 + v145;
        uint64_t v147 = sub_253B07160();
        uint64_t v148 = *(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 16);
        swift_bridgeObjectRetain();
        v148(__srcj, v146, v147);
        goto LABEL_80;
    }
  }
  uint64_t v9 = sub_253462A5C(&qword_269CE04B0);
  memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_81:
  uint64_t v171 = *(int *)(v6 + 20);
  uint64_t v172 = (char *)a1 + v171;
  uint64_t v173 = (char *)a2 + v171;
  uint64_t v174 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 16))(v172, v173, v174);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_82:
  uint64_t v175 = a3[5];
  uint64_t v176 = (void *)((char *)a1 + v175);
  uint64_t v177 = (void *)((char *)a2 + v175);
  uint64_t v178 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v177, 1, v178))
  {
    uint64_t v179 = sub_253462A5C(&qword_26B249528);
    memcpy(v176, v177, *(void *)(*(void *)(v179 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v176 = *(_DWORD *)v177;
    uint64_t v180 = v177[2];
    v176[1] = v177[1];
    v176[2] = v180;
    uint64_t v181 = *(int *)(v178 + 24);
    uint64_t v182 = (char *)v176 + v181;
    __srcl = (char *)v177 + v181;
    uint64_t v183 = sub_253B07160();
    v184 = *(void (**)(char *, char *, uint64_t))(*(void *)(v183 - 8) + 16);
    swift_bridgeObjectRetain();
    v184(v182, __srcl, v183);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v176, 0, 1, v178);
  }
  uint64_t v185 = a3[6];
  uint64_t v186 = (void *)((char *)a1 + v185);
  uint64_t v187 = (void *)((char *)a2 + v185);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v185, 1, v178))
  {
    uint64_t v188 = sub_253462A5C(&qword_26B249528);
    memcpy(v186, v187, *(void *)(*(void *)(v188 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v186 = *(_DWORD *)v187;
    uint64_t v189 = v187[2];
    v186[1] = v187[1];
    v186[2] = v189;
    uint64_t v190 = *(int *)(v178 + 24);
    uint64_t v191 = (char *)v186 + v190;
    __srcm = (char *)v187 + v190;
    uint64_t v192 = sub_253B07160();
    v193 = a1;
    uint64_t v194 = a2;
    uint64_t v195 = a3;
    v196 = *(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 16);
    swift_bridgeObjectRetain();
    v196(v191, __srcm, v192);
    a3 = v195;
    a2 = v194;
    a1 = v193;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v186, 0, 1, v178);
  }
  uint64_t v197 = a3[7];
  uint64_t v198 = a3[8];
  uint64_t v199 = (void *)((char *)a1 + v197);
  uint64_t v200 = (void *)((char *)a2 + v197);
  uint64_t v201 = v200[1];
  *uint64_t v199 = *v200;
  v199[1] = v201;
  v202 = (void *)((char *)a1 + v198);
  uint64_t v203 = (void *)((char *)a2 + v198);
  uint64_t v204 = v203[1];
  void *v202 = *v203;
  v202[1] = v204;
  uint64_t v205 = a3[9];
  uint64_t v206 = (void *)((char *)a1 + v205);
  uint64_t v207 = (void *)((char *)a2 + v205);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v207, 1, v178))
  {
    uint64_t v208 = sub_253462A5C(&qword_26B249528);
    memcpy(v206, v207, *(void *)(*(void *)(v208 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v206 = *(_DWORD *)v207;
    uint64_t v209 = v207[2];
    v206[1] = v207[1];
    v206[2] = v209;
    uint64_t v210 = *(int *)(v178 + 24);
    uint64_t v211 = (char *)v206 + v210;
    __srcn = (char *)v207 + v210;
    uint64_t v212 = sub_253B07160();
    v213 = a1;
    uint64_t v214 = a2;
    uint64_t v215 = a3;
    v216 = *(void (**)(char *, char *, uint64_t))(*(void *)(v212 - 8) + 16);
    swift_bridgeObjectRetain();
    v216(v211, __srcn, v212);
    a3 = v215;
    a2 = v214;
    a1 = v213;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v206, 0, 1, v178);
  }
  uint64_t v217 = a3[10];
  uint64_t v218 = (char *)a1 + v217;
  uint64_t v219 = (char *)a2 + v217;
  uint64_t v220 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v220 - 8) + 16))(v218, v219, v220);
  return a1;
}

void *assignWithCopy for TranscriptProtoInterpretedStatementResult(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v9))
      {
        uint64_t v10 = sub_253462A5C(&qword_269CE04B0);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_221:
        uint64_t v424 = *(int *)(v6 + 20);
        int v425 = (char *)a1 + v424;
        int v426 = (char *)a2 + v424;
        uint64_t v427 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v427 - 8) + 16))(v425, v426, v427);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
        goto LABEL_244;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *a1 = *a2;
          uint64_t v34 = type metadata accessor for TranscriptProtoActionConfirmation(0);
          uint64_t v35 = *(int *)(v34 + 20);
          uint64_t v36 = (void *)((char *)a1 + v35);
          uint64_t v37 = (void *)((char *)a2 + v35);
          uint64_t v38 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v37, 1, v38))
          {
            uint64_t v39 = sub_253462A5C(&qword_269CE0480);
            memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
          }
          else
          {
            uint64_t v115 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v37, 1, v115))
            {
              uint64_t v116 = sub_253462A5C(&qword_269CE0478);
              memcpy(v36, v37, *(void *)(*(void *)(v116 - 8) + 64));
            }
            else
            {
              uint64_t v560 = v115;
              *uint64_t v36 = *v37;
              v36[1] = v37[1];
              *((unsigned char *)v36 + 16) = *((unsigned char *)v37 + 16);
              uint64_t v542 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
              uint64_t v201 = *(int *)(v542 + 24);
              __dst = (char *)v36 + v201;
              __src = (char *)v37 + v201;
              uint64_t v202 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
              swift_bridgeObjectRetain();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__src, 1, v202))
              {
                uint64_t v203 = sub_253462A5C(&qword_269CE0470);
                memcpy(__dst, __src, *(void *)(*(void *)(v203 - 8) + 64));
              }
              else
              {
                unsigned char *__dst = *__src;
                uint64_t v247 = *(int *)(v202 + 20);
                uint64_t v525 = &__dst[v247];
                __srcr = &__src[v247];
                uint64_t v248 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v248 - 8) + 16))(v525, __srcr, v248);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v202);
              }
              uint64_t v249 = *(int *)(v542 + 28);
              uint64_t v250 = (char *)v36 + v249;
              __srcs = (char *)v37 + v249;
              uint64_t v251 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v251 - 8) + 16))(v250, __srcs, v251);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v36, 0, 1, v560);
            }
            uint64_t v252 = *(int *)(v38 + 20);
            uint64_t v253 = (char *)v36 + v252;
            uint64_t v254 = (char *)v37 + v252;
            uint64_t v255 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v255 - 8) + 16))(v253, v254, v255);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v36, 0, 1, v38);
          }
          goto LABEL_64;
        case 2u:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v40 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
          __srcf = (char *)a1 + v40;
          uint64_t v41 = (char *)a2 + v40;
          uint64_t v42 = sub_253B07160();
          uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
          swift_bridgeObjectRetain();
          v43(__srcf, v41, v42);
          goto LABEL_220;
        case 3u:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v44 = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          a1[2] = v44;
          uint64_t v45 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
          uint64_t v46 = *(int *)(v45 + 24);
          uint64_t v47 = (char *)a1 + v46;
          uint64_t v48 = (char *)a2 + v46;
          uint64_t v49 = sub_253B08E50();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v48, 1, v49)) {
            goto LABEL_27;
          }
          goto LABEL_60;
        case 4u:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          uint64_t v51 = a2[3];
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          a1[3] = v51;
          uint64_t v52 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
          uint64_t v553 = (char *)a2 + v52;
          __srcg = (char *)a1 + v52;
          uint64_t v53 = sub_253B07160();
          uint64_t v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v54(__srcg, v553, v53);
          goto LABEL_220;
        case 5u:
          *a1 = *a2;
          a1[1] = a2[1];
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v45 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
          uint64_t v55 = *(int *)(v45 + 24);
          uint64_t v47 = (char *)a1 + v55;
          uint64_t v48 = (char *)a2 + v55;
          uint64_t v49 = sub_253B08E50();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v48, 1, v49))
          {
LABEL_27:
            uint64_t v50 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
          }
          else
          {
LABEL_60:
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v47, 0, 1, v49);
          }
          uint64_t v117 = *(int *)(v45 + 28);
          uint64_t v118 = (char *)a1 + v117;
          uint64_t v119 = (char *)a2 + v117;
          uint64_t v120 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16))(v118, v119, v120);
          goto LABEL_220;
        case 6u:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v34 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
          uint64_t v56 = *(int *)(v34 + 20);
          uint64_t v57 = (char *)a1 + v56;
          uint64_t v58 = (char *)a2 + v56;
          uint64_t v59 = sub_253B08E50();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v58, 1, v59))
          {
            uint64_t v60 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v57, 0, 1, v59);
          }
LABEL_64:
          uint64_t v121 = *(int *)(v34 + 24);
          uint64_t v122 = (char *)a1 + v121;
          uint64_t v123 = (char *)a2 + v121;
          uint64_t v124 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16))(v122, v123, v124);
          goto LABEL_220;
        case 7u:
          uint64_t v61 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v61))
          {
            uint64_t v62 = sub_253462A5C(&qword_269CE0498);
            memcpy(a1, a2, *(void *)(*(void *)(v62 - 8) + 64));
            goto LABEL_219;
          }
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload != 2)
          {
            if (EnumCaseMultiPayload == 1)
            {
              *(unsigned char *)a1 = *(unsigned char *)a2;
              uint64_t v217 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
              uint64_t v218 = (char *)a1 + v217;
              uint64_t v219 = (char *)a2 + v217;
              uint64_t v220 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v220 - 8) + 16))(v218, v219, v220);
            }
            else
            {
              if (EnumCaseMultiPayload)
              {
                memcpy(a1, a2, *(void *)(*(void *)(v61 - 8) + 64));
                goto LABEL_218;
              }
              *(unsigned char *)a1 = *(unsigned char *)a2;
              uint64_t v126 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
              uint64_t v127 = (char *)a1 + v126;
              unint64_t v128 = (char *)a2 + v126;
              uint64_t v129 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 16))(v127, v128, v129);
            }
LABEL_217:
            swift_storeEnumTagMultiPayload();
LABEL_218:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v61);
LABEL_219:
            uint64_t v420 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
            uint64_t v421 = (char *)a1 + v420;
            uint64_t v422 = (char *)a2 + v420;
            uint64_t v423 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v423 - 8) + 16))(v421, v422, v423);
LABEL_220:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v9);
            goto LABEL_221;
          }
          uint64_t v215 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v215))
          {
            uint64_t v216 = sub_253462A5C(&qword_269CE0490);
            memcpy(a1, a2, *(void *)(*(void *)(v216 - 8) + 64));
LABEL_216:
            uint64_t v416 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
            int v417 = (char *)a1 + v416;
            uint64_t v418 = (char *)a2 + v416;
            uint64_t v419 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v419 - 8) + 16))(v417, v418, v419);
            goto LABEL_217;
          }
          int v303 = swift_getEnumCaseMultiPayload();
          if (v303 == 1)
          {
            uint64_t v360 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v360))
            {
              uint64_t v361 = sub_253462A5C(&qword_269CE0488);
              memcpy(a1, a2, *(void *)(*(void *)(v361 - 8) + 64));
            }
            else
            {
              *(unsigned char *)a1 = *(unsigned char *)a2;
              uint64_t v408 = *(int *)(v360 + 20);
              uint64_t v409 = (char *)a1 + v408;
              uint64_t v410 = (char *)a2 + v408;
              uint64_t v411 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v411 - 8) + 16))(v409, v410, v411);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v360);
            }
            uint64_t v412 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
            v413 = (char *)a1 + v412;
            v414 = (char *)a2 + v412;
            uint64_t v415 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v415 - 8) + 16))(v413, v414, v415);
          }
          else
          {
            if (v303)
            {
              memcpy(a1, a2, *(void *)(*(void *)(v215 - 8) + 64));
LABEL_215:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v215);
              goto LABEL_216;
            }
            *a1 = *a2;
            a1[1] = a2[1];
            uint64_t v304 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
            uint64_t v567 = (char *)a2 + v304;
            __srcv = (char *)a1 + v304;
            uint64_t v305 = sub_253B07160();
            uint64_t v548 = *(void (**)(char *, char *, uint64_t))(*(void *)(v305 - 8) + 16);
            swift_bridgeObjectRetain();
            v548(__srcv, v567, v305);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_215;
        case 8u:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          uint64_t v63 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
          int v554 = (char *)a2 + v63;
          __srch = (char *)a1 + v63;
          uint64_t v64 = sub_253B07160();
          uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v65(__srch, v554, v64);
          goto LABEL_220;
        case 9u:
          uint64_t v66 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v66))
          {
            uint64_t v67 = sub_253462A5C(&qword_269CE04A8);
            memcpy(a1, a2, *(void *)(*(void *)(v67 - 8) + 64));
          }
          else
          {
            uint64_t v130 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v130))
            {
              uint64_t v131 = sub_253462A5C(&qword_269CE04A0);
              memcpy(a1, a2, *(void *)(*(void *)(v131 - 8) + 64));
            }
            else
            {
              uint64_t v204 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v204))
              {
                memcpy(a1, a2, *(void *)(*(void *)(v130 - 8) + 64));
              }
              else
              {
                *a1 = *a2;
                a1[1] = a2[1];
                a1[2] = a2[2];
                a1[3] = a2[3];
                a1[4] = a2[4];
                uint64_t v256 = *(int *)(v204 + 28);
                int v564 = (char *)a2 + v256;
                __srct = (char *)a1 + v256;
                uint64_t v257 = sub_253B07160();
                uint64_t v534 = *(void (**)(char *, char *, uint64_t))(*(void *)(v257 - 8) + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v534(__srct, v564, v257);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v204);
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v130);
            }
            uint64_t v258 = *(int *)(v66 + 20);
            uint64_t v259 = (char *)a1 + v258;
            v260 = (char *)a2 + v258;
            uint64_t v261 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v261 - 8) + 16))(v259, v260, v261);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v66);
          }
          uint64_t v262 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
          long long v263 = (char *)a1 + v262;
          uint64_t v264 = (char *)a2 + v262;
          uint64_t v265 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v265 - 8) + 16))(v263, v264, v265);
          goto LABEL_220;
        case 0xAu:
          *a1 = *a2;
          uint64_t v68 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
          __srci = (char *)a1 + v68;
          uint64_t v69 = (char *)a2 + v68;
          uint64_t v70 = sub_253B07160();
          uint64_t v71 = *(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16);
          swift_bridgeObjectRetain();
          v71(__srci, v69, v70);
          goto LABEL_220;
        default:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          *((unsigned char *)a1 + 1) = *((unsigned char *)a2 + 1);
          *((unsigned char *)a1 + 2) = *((unsigned char *)a2 + 2);
          uint64_t v21 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
          uint64_t v22 = v21[7];
          uint64_t v23 = (char *)a1 + v22;
          uint64_t v24 = (char *)a2 + v22;
          uint64_t v25 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
          {
            uint64_t v26 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v25);
          }
          uint64_t v110 = v21[8];
          uint64_t v111 = (void *)((char *)a1 + v110);
          uint64_t v112 = (void *)((char *)a2 + v110);
          uint64_t v113 = type metadata accessor for TranscriptProtoUndoContext(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v112, 1, v113))
          {
            uint64_t v114 = sub_253462A5C(&qword_269CE0450);
            memcpy(v111, v112, *(void *)(*(void *)(v114 - 8) + 64));
          }
          else
          {
            *uint64_t v111 = *v112;
            v111[1] = v112[1];
            v111[2] = v112[2];
            v111[3] = v112[3];
            v111[4] = v112[4];
            v111[5] = v112[5];
            uint64_t v132 = *(int *)(v113 + 28);
            v541 = (char *)v112 + v132;
            uint64_t v557 = (char *)v111 + v132;
            uint64_t v133 = sub_253B07160();
            __dstc = *(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __dstc(v557, v541, v133);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v111, 0, 1, v113);
          }
          uint64_t v134 = v21[9];
          uint64_t v135 = (void *)((char *)a1 + v134);
          uint64_t v136 = (void *)((char *)a2 + v134);
          uint64_t v137 = type metadata accessor for TranscriptProtoFollowUpAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v136, 1, v137))
          {
            uint64_t v138 = sub_253462A5C(&qword_269CE0468);
            memcpy(v135, v136, *(void *)(*(void *)(v138 - 8) + 64));
          }
          else
          {
            uint64_t v139 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v136, 1, v139))
            {
              uint64_t v140 = sub_253462A5C(&qword_269CE0460);
              memcpy(v135, v136, *(void *)(*(void *)(v140 - 8) + 64));
            }
            else
            {
              uint64_t v543 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
              uint64_t v561 = v139;
              __srca = v21;
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v136, 1, v543))
              {
                uint64_t v205 = sub_253462A5C(&qword_269CE0458);
                memcpy(v135, v136, *(void *)(*(void *)(v205 - 8) + 64));
              }
              else
              {
                *uint64_t v135 = *v136;
                v135[1] = v136[1];
                uint64_t v266 = v136[2];
                unint64_t v267 = v136[3];
                swift_bridgeObjectRetain();
                sub_25348A9C8(v266, v267);
                v135[2] = v266;
                v135[3] = v267;
                v135[4] = v136[4];
                uint64_t v268 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                              + 28);
                v269 = (char *)v135 + v268;
                uint64_t v535 = (char *)v136 + v268;
                uint64_t v270 = sub_253B07160();
                uint64_t v271 = v269;
                uint64_t v139 = v561;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v270 - 8) + 16))(v271, v535, v270);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v135, 0, 1, v543);
              }
              uint64_t v272 = *(int *)(v139 + 20);
              v273 = (char *)v135 + v272;
              uint64_t v274 = (char *)v136 + v272;
              uint64_t v275 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v275 - 8) + 16))(v273, v274, v275);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v135, 0, 1, v561);
              uint64_t v21 = __srca;
            }
            uint64_t v276 = *(int *)(v137 + 20);
            v277 = (char *)v135 + v276;
            uint64_t v278 = (char *)v136 + v276;
            uint64_t v279 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v279 - 8) + 16))(v277, v278, v279);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v135, 0, 1, v137);
          }
          uint64_t v280 = v21[10];
          uint64_t v281 = (void *)((char *)a1 + v280);
          uint64_t v282 = (void *)((char *)a2 + v280);
          *uint64_t v281 = *v282;
          v281[1] = v282[1];
          uint64_t v283 = v21[11];
          __srcu = (char *)a1 + v283;
          uint64_t v284 = (char *)a2 + v283;
          uint64_t v285 = sub_253B07160();
          uint64_t v286 = *(void (**)(char *, char *, uint64_t))(*(void *)(v285 - 8) + 16);
          swift_bridgeObjectRetain();
          v286(__srcu, v284, v285);
          goto LABEL_220;
      }
    }
LABEL_7:
    uint64_t v11 = sub_253462A5C(&qword_269CE0388);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_244;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  uint64_t v12 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v12);
  int v14 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v12);
  if (v13)
  {
    if (!v14)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *a1 = *a2;
          uint64_t v72 = type metadata accessor for TranscriptProtoActionConfirmation(0);
          uint64_t v73 = *(int *)(v72 + 20);
          uint64_t v74 = (void *)((char *)a1 + v73);
          uint64_t v75 = (void *)((char *)a2 + v73);
          uint64_t v76 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v75, 1, v76))
          {
            uint64_t v77 = sub_253462A5C(&qword_269CE0480);
            memcpy(v74, v75, *(void *)(*(void *)(v77 - 8) + 64));
          }
          else
          {
            uint64_t v184 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v75, 1, v184))
            {
              uint64_t v185 = sub_253462A5C(&qword_269CE0478);
              memcpy(v74, v75, *(void *)(*(void *)(v185 - 8) + 64));
            }
            else
            {
              uint64_t v563 = v184;
              *uint64_t v74 = *v75;
              v74[1] = v75[1];
              *((unsigned char *)v74 + 16) = *((unsigned char *)v75 + 16);
              uint64_t v545 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
              uint64_t v243 = *(int *)(v545 + 24);
              __dsta = (char *)v74 + v243;
              __srcb = (char *)v75 + v243;
              uint64_t v244 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
              swift_bridgeObjectRetain();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__srcb, 1, v244))
              {
                uint64_t v245 = sub_253462A5C(&qword_269CE0470);
                memcpy(__dsta, __srcb, *(void *)(*(void *)(v245 - 8) + 64));
              }
              else
              {
                unsigned char *__dsta = *__srcb;
                uint64_t v320 = *(int *)(v244 + 20);
                uint64_t v526 = &__dsta[v320];
                __srcx = &__srcb[v320];
                uint64_t v321 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v321 - 8) + 16))(v526, __srcx, v321);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v244);
              }
              uint64_t v322 = *(int *)(v545 + 28);
              v323 = (char *)v74 + v322;
              __srcy = (char *)v75 + v322;
              uint64_t v324 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v324 - 8) + 16))(v323, __srcy, v324);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v74, 0, 1, v563);
            }
            uint64_t v325 = *(int *)(v76 + 20);
            v326 = (char *)v74 + v325;
            uint64_t v327 = (char *)v75 + v325;
            uint64_t v328 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v328 - 8) + 16))(v326, v327, v328);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v74, 0, 1, v76);
          }
          goto LABEL_101;
        case 2u:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v78 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
          __srcj = (char *)a1 + v78;
          uint64_t v79 = (char *)a2 + v78;
          uint64_t v80 = sub_253B07160();
          uint64_t v81 = *(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16);
          swift_bridgeObjectRetain();
          v81(__srcj, v79, v80);
          goto LABEL_233;
        case 3u:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v82 = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          a1[2] = v82;
          uint64_t v83 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
          uint64_t v84 = *(int *)(v83 + 24);
          uint64_t v85 = (char *)a1 + v84;
          uint64_t v86 = (char *)a2 + v84;
          uint64_t v87 = sub_253B08E50();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v86, 1, v87)) {
            goto LABEL_43;
          }
          goto LABEL_97;
        case 4u:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          uint64_t v89 = a2[3];
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          a1[3] = v89;
          uint64_t v90 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
          int v555 = (char *)a2 + v90;
          __srck = (char *)a1 + v90;
          uint64_t v91 = sub_253B07160();
          uint64_t v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v92(__srck, v555, v91);
          goto LABEL_233;
        case 5u:
          *a1 = *a2;
          a1[1] = a2[1];
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v83 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
          uint64_t v93 = *(int *)(v83 + 24);
          uint64_t v85 = (char *)a1 + v93;
          uint64_t v86 = (char *)a2 + v93;
          uint64_t v87 = sub_253B08E50();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v86, 1, v87))
          {
LABEL_43:
            uint64_t v88 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v85, v86, *(void *)(*(void *)(v88 - 8) + 64));
          }
          else
          {
LABEL_97:
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v85, 0, 1, v87);
          }
          uint64_t v186 = *(int *)(v83 + 28);
          uint64_t v187 = (char *)a1 + v186;
          uint64_t v188 = (char *)a2 + v186;
          uint64_t v189 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v189 - 8) + 16))(v187, v188, v189);
          goto LABEL_233;
        case 6u:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v72 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
          uint64_t v94 = *(int *)(v72 + 20);
          uint64_t v95 = (char *)a1 + v94;
          uint64_t v96 = (char *)a2 + v94;
          uint64_t v97 = sub_253B08E50();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v96, 1, v97))
          {
            uint64_t v98 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v95, v96, *(void *)(*(void *)(v98 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16))(v95, v96, v97);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v95, 0, 1, v97);
          }
LABEL_101:
          uint64_t v190 = *(int *)(v72 + 24);
          uint64_t v191 = (char *)a1 + v190;
          uint64_t v192 = (char *)a2 + v190;
          uint64_t v193 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 16))(v191, v192, v193);
          goto LABEL_233;
        case 7u:
          uint64_t v99 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v99))
          {
            uint64_t v100 = sub_253462A5C(&qword_269CE0498);
            memcpy(a1, a2, *(void *)(*(void *)(v100 - 8) + 64));
            goto LABEL_232;
          }
          int v194 = swift_getEnumCaseMultiPayload();
          if (v194 != 2)
          {
            if (v194 == 1)
            {
              *(unsigned char *)a1 = *(unsigned char *)a2;
              uint64_t v299 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
              v300 = (char *)a1 + v299;
              v301 = (char *)a2 + v299;
              uint64_t v302 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v302 - 8) + 16))(v300, v301, v302);
            }
            else
            {
              if (v194)
              {
                memcpy(a1, a2, *(void *)(*(void *)(v99 - 8) + 64));
                goto LABEL_231;
              }
              *(unsigned char *)a1 = *(unsigned char *)a2;
              uint64_t v195 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
              v196 = (char *)a1 + v195;
              uint64_t v197 = (char *)a2 + v195;
              uint64_t v198 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 16))(v196, v197, v198);
            }
LABEL_230:
            swift_storeEnumTagMultiPayload();
LABEL_231:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v99);
LABEL_232:
            uint64_t v441 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
            uint64_t v442 = (char *)a1 + v441;
            uint64_t v443 = (char *)a2 + v441;
            uint64_t v444 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v444 - 8) + 16))(v442, v443, v444);
LABEL_233:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v12);
            goto LABEL_243;
          }
          uint64_t v297 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v297))
          {
            uint64_t v298 = sub_253462A5C(&qword_269CE0490);
            memcpy(a1, a2, *(void *)(*(void *)(v298 - 8) + 64));
LABEL_229:
            uint64_t v437 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
            v438 = (char *)a1 + v437;
            v439 = (char *)a2 + v437;
            uint64_t v440 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v440 - 8) + 16))(v438, v439, v440);
            goto LABEL_230;
          }
          int v357 = swift_getEnumCaseMultiPayload();
          if (v357 == 1)
          {
            uint64_t v406 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v406))
            {
              uint64_t v407 = sub_253462A5C(&qword_269CE0488);
              memcpy(a1, a2, *(void *)(*(void *)(v407 - 8) + 64));
            }
            else
            {
              *(unsigned char *)a1 = *(unsigned char *)a2;
              uint64_t v430 = *(int *)(v406 + 20);
              __srcbf = (char *)a1 + v430;
              uint64_t v431 = (char *)a2 + v430;
              uint64_t v432 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v432 - 8) + 16))(__srcbf, v431, v432);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v406);
            }
            uint64_t v433 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
            v434 = (char *)a1 + v433;
            v435 = (char *)a2 + v433;
            uint64_t v436 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v436 - 8) + 16))(v434, v435, v436);
          }
          else
          {
            if (v357)
            {
              memcpy(a1, a2, *(void *)(*(void *)(v297 - 8) + 64));
LABEL_228:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v297);
              goto LABEL_229;
            }
            *a1 = *a2;
            a1[1] = a2[1];
            uint64_t v358 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
            uint64_t v571 = (char *)a2 + v358;
            __srcba = (char *)a1 + v358;
            uint64_t v359 = sub_253B07160();
            v551 = *(void (**)(char *, char *, uint64_t))(*(void *)(v359 - 8) + 16);
            swift_bridgeObjectRetain();
            v551(__srcba, v571, v359);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_228;
        case 8u:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          uint64_t v101 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
          uint64_t v556 = (char *)a2 + v101;
          __srcl = (char *)a1 + v101;
          uint64_t v102 = sub_253B07160();
          uint64_t v103 = *(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v103(__srcl, v556, v102);
          goto LABEL_233;
        case 9u:
          uint64_t v104 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v104))
          {
            uint64_t v105 = sub_253462A5C(&qword_269CE04A8);
            memcpy(a1, a2, *(void *)(*(void *)(v105 - 8) + 64));
          }
          else
          {
            uint64_t v199 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v199))
            {
              uint64_t v200 = sub_253462A5C(&qword_269CE04A0);
              memcpy(a1, a2, *(void *)(*(void *)(v200 - 8) + 64));
            }
            else
            {
              uint64_t v246 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v246))
              {
                memcpy(a1, a2, *(void *)(*(void *)(v199 - 8) + 64));
              }
              else
              {
                *a1 = *a2;
                a1[1] = a2[1];
                a1[2] = a2[2];
                a1[3] = a2[3];
                a1[4] = a2[4];
                uint64_t v307 = *(int *)(v246 + 28);
                uint64_t v568 = (char *)a2 + v307;
                __srcw = (char *)a1 + v307;
                uint64_t v308 = sub_253B07160();
                v536 = *(void (**)(char *, char *, uint64_t))(*(void *)(v308 - 8) + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v536(__srcw, v568, v308);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v246);
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v199);
            }
            uint64_t v309 = *(int *)(v104 + 20);
            uint64_t v310 = (char *)a1 + v309;
            uint64_t v311 = (char *)a2 + v309;
            uint64_t v312 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v312 - 8) + 16))(v310, v311, v312);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v104);
          }
          uint64_t v313 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
          v314 = (char *)a1 + v313;
          uint64_t v315 = (char *)a2 + v313;
          uint64_t v316 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v316 - 8) + 16))(v314, v315, v316);
          goto LABEL_233;
        case 0xAu:
          *a1 = *a2;
          uint64_t v106 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
          __srcm = (char *)a1 + v106;
          uint64_t v107 = (char *)a2 + v106;
          uint64_t v108 = sub_253B07160();
          uint64_t v109 = *(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16);
          swift_bridgeObjectRetain();
          v109(__srcm, v107, v108);
          goto LABEL_233;
        default:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          *((unsigned char *)a1 + 1) = *((unsigned char *)a2 + 1);
          *((unsigned char *)a1 + 2) = *((unsigned char *)a2 + 2);
          uint64_t v15 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
          uint64_t v16 = v15[7];
          uint64_t v17 = (char *)a1 + v16;
          uint64_t v18 = (char *)a2 + v16;
          uint64_t v19 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
          {
            uint64_t v20 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
          }
          uint64_t v141 = v15[8];
          uint64_t v142 = (void *)((char *)a1 + v141);
          uint64_t v143 = (void *)((char *)a2 + v141);
          uint64_t v144 = type metadata accessor for TranscriptProtoUndoContext(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v143, 1, v144))
          {
            uint64_t v145 = sub_253462A5C(&qword_269CE0450);
            memcpy(v142, v143, *(void *)(*(void *)(v145 - 8) + 64));
          }
          else
          {
            *uint64_t v142 = *v143;
            v142[1] = v143[1];
            v142[2] = v143[2];
            v142[3] = v143[3];
            v142[4] = v143[4];
            v142[5] = v143[5];
            uint64_t v206 = *(int *)(v144 + 28);
            int v544 = (char *)v143 + v206;
            uint64_t v562 = (char *)v142 + v206;
            uint64_t v207 = sub_253B07160();
            __dstd = *(void (**)(char *, char *, uint64_t))(*(void *)(v207 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __dstd(v562, v544, v207);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v142, 0, 1, v144);
          }
          uint64_t v208 = v15[9];
          uint64_t v209 = (void *)((char *)a1 + v208);
          uint64_t v210 = (void *)((char *)a2 + v208);
          uint64_t v211 = type metadata accessor for TranscriptProtoFollowUpAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v210, 1, v211))
          {
            uint64_t v212 = sub_253462A5C(&qword_269CE0468);
            memcpy(v209, v210, *(void *)(*(void *)(v212 - 8) + 64));
          }
          else
          {
            uint64_t v213 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v210, 1, v213))
            {
              uint64_t v214 = sub_253462A5C(&qword_269CE0460);
              memcpy(v209, v210, *(void *)(*(void *)(v214 - 8) + 64));
            }
            else
            {
              uint64_t v546 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
              uint64_t v565 = v213;
              __srcc = v15;
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v210, 1, v546))
              {
                uint64_t v287 = sub_253462A5C(&qword_269CE0458);
                memcpy(v209, v210, *(void *)(*(void *)(v287 - 8) + 64));
              }
              else
              {
                *uint64_t v209 = *v210;
                v209[1] = v210[1];
                uint64_t v329 = v210[2];
                unint64_t v330 = v210[3];
                swift_bridgeObjectRetain();
                sub_25348A9C8(v329, v330);
                v209[2] = v329;
                v209[3] = v330;
                v209[4] = v210[4];
                uint64_t v331 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                              + 28);
                long long v332 = (char *)v209 + v331;
                v537 = (char *)v210 + v331;
                uint64_t v333 = sub_253B07160();
                uint64_t v334 = v332;
                uint64_t v213 = v565;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v333 - 8) + 16))(v334, v537, v333);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v209, 0, 1, v546);
              }
              uint64_t v335 = *(int *)(v213 + 20);
              uint64_t v336 = (char *)v209 + v335;
              uint64_t v337 = (char *)v210 + v335;
              uint64_t v338 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v338 - 8) + 16))(v336, v337, v338);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v209, 0, 1, v565);
              uint64_t v15 = __srcc;
            }
            uint64_t v339 = *(int *)(v211 + 20);
            v340 = (char *)v209 + v339;
            v341 = (char *)v210 + v339;
            uint64_t v342 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v342 - 8) + 16))(v340, v341, v342);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v209, 0, 1, v211);
          }
          uint64_t v343 = v15[10];
          v344 = (void *)((char *)a1 + v343);
          v345 = (void *)((char *)a2 + v343);
          void *v344 = *v345;
          v344[1] = v345[1];
          uint64_t v346 = v15[11];
          __srcz = (char *)a1 + v346;
          int v347 = (char *)a2 + v346;
          uint64_t v348 = sub_253B07160();
          v349 = *(void (**)(char *, char *, uint64_t))(*(void *)(v348 - 8) + 16);
          swift_bridgeObjectRetain();
          v349(__srcz, v347, v348);
          goto LABEL_233;
      }
    }
    goto LABEL_18;
  }
  if (!v14)
  {
    if (a1 == a2) {
      goto LABEL_243;
    }
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v146 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v147 = *(int *)(v146 + 20);
        uint64_t v148 = (void *)((char *)a1 + v147);
        int v149 = (void *)((char *)a2 + v147);
        uint64_t v150 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v149, 1, v150))
        {
          uint64_t v151 = sub_253462A5C(&qword_269CE0480);
          memcpy(v148, v149, *(void *)(*(void *)(v151 - 8) + 64));
        }
        else
        {
          uint64_t v226 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v149, 1, v226))
          {
            uint64_t v227 = sub_253462A5C(&qword_269CE0478);
            memcpy(v148, v149, *(void *)(*(void *)(v227 - 8) + 64));
          }
          else
          {
            uint64_t v569 = v226;
            *uint64_t v148 = *v149;
            v148[1] = v149[1];
            *((unsigned char *)v148 + 16) = *((unsigned char *)v149 + 16);
            uint64_t v549 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v317 = *(int *)(v549 + 24);
            __dstb = (char *)v148 + v317;
            __srcd = (char *)v149 + v317;
            uint64_t v318 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__srcd, 1, v318))
            {
              uint64_t v319 = sub_253462A5C(&qword_269CE0470);
              memcpy(__dstb, __srcd, *(void *)(*(void *)(v319 - 8) + 64));
            }
            else
            {
              unsigned char *__dstb = *__srcd;
              uint64_t v372 = *(int *)(v318 + 20);
              uint64_t v527 = &__dstb[v372];
              __srcbc = &__srcd[v372];
              uint64_t v373 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v373 - 8) + 16))(v527, __srcbc, v373);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstb, 0, 1, v318);
            }
            uint64_t v374 = *(int *)(v549 + 28);
            uint64_t v375 = (char *)v148 + v374;
            __srcbd = (char *)v149 + v374;
            uint64_t v376 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v376 - 8) + 16))(v375, __srcbd, v376);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v148, 0, 1, v569);
          }
          uint64_t v377 = *(int *)(v150 + 20);
          v378 = (char *)v148 + v377;
          uint64_t v379 = (char *)v149 + v377;
          uint64_t v380 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v380 - 8) + 16))(v378, v379, v380);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v148, 0, 1, v150);
        }
        goto LABEL_132;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v152 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
        __srcn = (char *)a1 + v152;
        uint64_t v153 = (char *)a2 + v152;
        uint64_t v154 = sub_253B07160();
        uint64_t v155 = *(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 16);
        swift_bridgeObjectRetain();
        v155(__srcn, v153, v154);
        goto LABEL_242;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v156 = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        a1[2] = v156;
        uint64_t v157 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        uint64_t v158 = *(int *)(v157 + 24);
        uint64_t v159 = (char *)a1 + v158;
        uint64_t v160 = (char *)a2 + v158;
        uint64_t v161 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v160, 1, v161)) {
          goto LABEL_83;
        }
        goto LABEL_128;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v163 = a2[3];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        a1[3] = v163;
        uint64_t v164 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        uint64_t v558 = (char *)a2 + v164;
        __srco = (char *)a1 + v164;
        uint64_t v165 = sub_253B07160();
        uint64_t v166 = *(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v166(__srco, v558, v165);
        goto LABEL_242;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v157 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
        uint64_t v167 = *(int *)(v157 + 24);
        uint64_t v159 = (char *)a1 + v167;
        uint64_t v160 = (char *)a2 + v167;
        uint64_t v161 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v160, 1, v161))
        {
LABEL_83:
          uint64_t v162 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v159, v160, *(void *)(*(void *)(v162 - 8) + 64));
        }
        else
        {
LABEL_128:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 16))(v159, v160, v161);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v159, 0, 1, v161);
        }
        uint64_t v228 = *(int *)(v157 + 28);
        uint64_t v229 = (char *)a1 + v228;
        uint64_t v230 = (char *)a2 + v228;
        uint64_t v231 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v231 - 8) + 16))(v229, v230, v231);
        goto LABEL_242;
      case 6u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v146 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v168 = *(int *)(v146 + 20);
        uint64_t v169 = (char *)a1 + v168;
        uint64_t v170 = (char *)a2 + v168;
        uint64_t v171 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v170, 1, v171))
        {
          uint64_t v172 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v169, v170, *(void *)(*(void *)(v172 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 16))(v169, v170, v171);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v169, 0, 1, v171);
        }
LABEL_132:
        uint64_t v232 = *(int *)(v146 + 24);
        uint64_t v233 = (char *)a1 + v232;
        uint64_t v234 = (char *)a2 + v232;
        uint64_t v235 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v235 - 8) + 16))(v233, v234, v235);
        goto LABEL_242;
      case 7u:
        uint64_t v173 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v173))
        {
          uint64_t v174 = sub_253462A5C(&qword_269CE0498);
          memcpy(a1, a2, *(void *)(*(void *)(v174 - 8) + 64));
          goto LABEL_241;
        }
        int v236 = swift_getEnumCaseMultiPayload();
        if (v236 != 2)
        {
          if (v236 == 1)
          {
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v353 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v354 = (char *)a1 + v353;
            uint64_t v355 = (char *)a2 + v353;
            uint64_t v356 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v356 - 8) + 16))(v354, v355, v356);
          }
          else
          {
            if (v236)
            {
              memcpy(a1, a2, *(void *)(*(void *)(v173 - 8) + 64));
              goto LABEL_240;
            }
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v237 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            v238 = (char *)a1 + v237;
            uint64_t v239 = (char *)a2 + v237;
            uint64_t v240 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v240 - 8) + 16))(v238, v239, v240);
          }
LABEL_239:
          swift_storeEnumTagMultiPayload();
LABEL_240:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v173);
LABEL_241:
          uint64_t v457 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
          v458 = (char *)a1 + v457;
          uint64_t v459 = (char *)a2 + v457;
          uint64_t v460 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v460 - 8) + 16))(v458, v459, v460);
LABEL_242:
          swift_storeEnumTagMultiPayload();
          goto LABEL_243;
        }
        uint64_t v351 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v351))
        {
          uint64_t v352 = sub_253462A5C(&qword_269CE0490);
          memcpy(a1, a2, *(void *)(*(void *)(v352 - 8) + 64));
LABEL_238:
          uint64_t v453 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v454 = (char *)a1 + v453;
          uint64_t v455 = (char *)a2 + v453;
          uint64_t v456 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v456 - 8) + 16))(v454, v455, v456);
          goto LABEL_239;
        }
        uint64_t v573 = (uint64_t)a1;
        int v402 = swift_getEnumCaseMultiPayload();
        if (v402 == 1)
        {
          uint64_t v428 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v428))
          {
            uint64_t v429 = sub_253462A5C(&qword_269CE0488);
            memcpy(a1, a2, *(void *)(*(void *)(v429 - 8) + 64));
          }
          else
          {
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v445 = *(int *)(v428 + 20);
            uint64_t v446 = (char *)a1 + v445;
            uint64_t v447 = (char *)a2 + v445;
            uint64_t v448 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v448 - 8) + 16))(v446, v447, v448);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v428);
          }
          uint64_t v449 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v450 = (char *)a1 + v449;
          uint64_t v451 = (char *)a2 + v449;
          uint64_t v452 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v452 - 8) + 16))(v450, v451, v452);
        }
        else
        {
          if (v402)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v351 - 8) + 64));
LABEL_237:
            a1 = (void *)v573;
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v573, 0, 1, v351);
            goto LABEL_238;
          }
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v403 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          v552 = (char *)a1 + v403;
          int v404 = (char *)a2 + v403;
          uint64_t v405 = sub_253B07160();
          v540 = *(void (**)(char *, char *, uint64_t))(*(void *)(v405 - 8) + 16);
          swift_bridgeObjectRetain();
          v540(v552, v404, v405);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_237;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v175 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        uint64_t v559 = (char *)a2 + v175;
        __srcp = (char *)a1 + v175;
        uint64_t v176 = sub_253B07160();
        uint64_t v177 = *(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v177(__srcp, v559, v176);
        goto LABEL_242;
      case 9u:
        uint64_t v178 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v178))
        {
          uint64_t v179 = sub_253462A5C(&qword_269CE04A8);
          memcpy(a1, a2, *(void *)(*(void *)(v179 - 8) + 64));
        }
        else
        {
          uint64_t v241 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v241))
          {
            uint64_t v242 = sub_253462A5C(&qword_269CE04A0);
            memcpy(a1, a2, *(void *)(*(void *)(v242 - 8) + 64));
          }
          else
          {
            uint64_t v306 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v306))
            {
              memcpy(a1, a2, *(void *)(*(void *)(v241 - 8) + 64));
            }
            else
            {
              *a1 = *a2;
              a1[1] = a2[1];
              a1[2] = a2[2];
              a1[3] = a2[3];
              a1[4] = a2[4];
              uint64_t v362 = *(int *)(v306 + 28);
              uint64_t v572 = (char *)a2 + v362;
              __srcbb = (char *)a1 + v362;
              uint64_t v363 = sub_253B07160();
              uint64_t v538 = *(void (**)(char *, char *, uint64_t))(*(void *)(v363 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v538(__srcbb, v572, v363);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v306);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v241);
          }
          uint64_t v364 = *(int *)(v178 + 20);
          uint64_t v365 = (char *)a1 + v364;
          v366 = (char *)a2 + v364;
          uint64_t v367 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v367 - 8) + 16))(v365, v366, v367);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v178);
        }
        uint64_t v368 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
        uint64_t v369 = (char *)a1 + v368;
        uint64_t v370 = (char *)a2 + v368;
        uint64_t v371 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v371 - 8) + 16))(v369, v370, v371);
        goto LABEL_242;
      case 0xAu:
        *a1 = *a2;
        uint64_t v180 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
        __srcq = (char *)a1 + v180;
        uint64_t v181 = (char *)a2 + v180;
        uint64_t v182 = sub_253B07160();
        uint64_t v183 = *(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 16);
        swift_bridgeObjectRetain();
        v183(__srcq, v181, v182);
        goto LABEL_242;
      default:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *((unsigned char *)a1 + 1) = *((unsigned char *)a2 + 1);
        *((unsigned char *)a1 + 2) = *((unsigned char *)a2 + 2);
        uint64_t v28 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v29 = v28[7];
        uint64_t v30 = (char *)a1 + v29;
        uint64_t v31 = (char *)a2 + v29;
        uint64_t v32 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v31, 1, v32))
        {
          uint64_t v33 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v30, 0, 1, v32);
        }
        uint64_t v221 = v28[8];
        uint64_t v222 = (void *)((char *)a1 + v221);
        v223 = (void *)((char *)a2 + v221);
        uint64_t v224 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v223, 1, v224))
        {
          uint64_t v225 = sub_253462A5C(&qword_269CE0450);
          memcpy(v222, v223, *(void *)(*(void *)(v225 - 8) + 64));
        }
        else
        {
          *uint64_t v222 = *v223;
          v222[1] = v223[1];
          v222[2] = v223[2];
          v222[3] = v223[3];
          v222[4] = v223[4];
          v222[5] = v223[5];
          uint64_t v288 = *(int *)(v224 + 28);
          v547 = (char *)v223 + v288;
          uint64_t v566 = (char *)v222 + v288;
          uint64_t v289 = sub_253B07160();
          __dste = *(void (**)(char *, char *, uint64_t))(*(void *)(v289 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __dste(v566, v547, v289);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v222, 0, 1, v224);
        }
        uint64_t v290 = v28[9];
        v291 = (void *)((char *)a1 + v290);
        uint64_t v292 = (void *)((char *)a2 + v290);
        uint64_t v293 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v292, 1, v293))
        {
          uint64_t v294 = sub_253462A5C(&qword_269CE0468);
          memcpy(v291, v292, *(void *)(*(void *)(v294 - 8) + 64));
        }
        else
        {
          uint64_t v295 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v292, 1, v295))
          {
            uint64_t v296 = sub_253462A5C(&qword_269CE0460);
            memcpy(v291, v292, *(void *)(*(void *)(v296 - 8) + 64));
          }
          else
          {
            uint64_t v550 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            uint64_t v570 = v295;
            __srce = v28;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v292, 1, v550))
            {
              uint64_t v350 = sub_253462A5C(&qword_269CE0458);
              memcpy(v291, v292, *(void *)(*(void *)(v350 - 8) + 64));
            }
            else
            {
              void *v291 = *v292;
              v291[1] = v292[1];
              uint64_t v381 = v292[2];
              unint64_t v382 = v292[3];
              swift_bridgeObjectRetain();
              sub_25348A9C8(v381, v382);
              v291[2] = v381;
              v291[3] = v382;
              v291[4] = v292[4];
              uint64_t v383 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              uint64_t v384 = (char *)v291 + v383;
              uint64_t v539 = (char *)v292 + v383;
              uint64_t v385 = sub_253B07160();
              v386 = v384;
              uint64_t v295 = v570;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v385 - 8) + 16))(v386, v539, v385);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v291, 0, 1, v550);
            }
            uint64_t v387 = *(int *)(v295 + 20);
            uint64_t v388 = (char *)v291 + v387;
            v389 = (char *)v292 + v387;
            uint64_t v390 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v390 - 8) + 16))(v388, v389, v390);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v291, 0, 1, v570);
            uint64_t v28 = __srce;
          }
          uint64_t v391 = *(int *)(v293 + 20);
          uint64_t v392 = (char *)v291 + v391;
          v393 = (char *)v292 + v391;
          uint64_t v394 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v394 - 8) + 16))(v392, v393, v394);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v291, 0, 1, v293);
        }
        uint64_t v395 = v28[10];
        uint64_t v396 = (void *)((char *)a1 + v395);
        v397 = (void *)((char *)a2 + v395);
        *uint64_t v396 = *v397;
        v396[1] = v397[1];
        uint64_t v398 = v28[11];
        __srcbe = (char *)a1 + v398;
        uint64_t v399 = (char *)a2 + v398;
        uint64_t v400 = sub_253B07160();
        uint64_t v401 = *(void (**)(char *, char *, uint64_t))(*(void *)(v400 - 8) + 16);
        swift_bridgeObjectRetain();
        v401(__srcbe, v399, v400);
        goto LABEL_242;
    }
  }
  sub_2536FA73C();
LABEL_18:
  uint64_t v27 = sub_253462A5C(&qword_269CE04B0);
  memcpy(a1, a2, *(void *)(*(void *)(v27 - 8) + 64));
LABEL_243:
  uint64_t v461 = *(int *)(v6 + 20);
  v462 = (char *)a1 + v461;
  uint64_t v463 = (char *)a2 + v461;
  uint64_t v464 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v464 - 8) + 24))(v462, v463, v464);
LABEL_244:
  uint64_t v465 = a3[5];
  uint64_t v466 = (void *)((char *)a1 + v465);
  uint64_t v467 = (void *)((char *)a2 + v465);
  uint64_t v468 = type metadata accessor for TranscriptProtoStatementID(0);
  int v469 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v466, 1, v468);
  int v470 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v467, 1, v468);
  if (v469)
  {
    if (!v470)
    {
      *(_DWORD *)uint64_t v466 = *(_DWORD *)v467;
      v466[1] = v467[1];
      v466[2] = v467[2];
      uint64_t v471 = *(int *)(v468 + 24);
      v472 = (char *)v466 + v471;
      __srcbg = (char *)v467 + v471;
      uint64_t v473 = sub_253B07160();
      uint64_t v474 = *(void (**)(char *, char *, uint64_t))(*(void *)(v473 - 8) + 16);
      swift_bridgeObjectRetain();
      v474(v472, __srcbg, v473);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v466, 0, 1, v468);
      goto LABEL_250;
    }
    goto LABEL_249;
  }
  if (v470)
  {
    sub_2536FA73C();
LABEL_249:
    uint64_t v475 = sub_253462A5C(&qword_26B249528);
    memcpy(v466, v467, *(void *)(*(void *)(v475 - 8) + 64));
    goto LABEL_250;
  }
  *(_DWORD *)uint64_t v466 = *(_DWORD *)v467;
  v466[1] = v467[1];
  v466[2] = v467[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v513 = *(int *)(v468 + 24);
  uint64_t v514 = (char *)v466 + v513;
  uint64_t v515 = (char *)v467 + v513;
  uint64_t v516 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v516 - 8) + 24))(v514, v515, v516);
LABEL_250:
  uint64_t v476 = a3[6];
  uint64_t v477 = (void *)((char *)a1 + v476);
  uint64_t v478 = (void *)((char *)a2 + v476);
  int v479 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1 + v476, 1, v468);
  int v480 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v478, 1, v468);
  if (v479)
  {
    if (!v480)
    {
      *(_DWORD *)uint64_t v477 = *(_DWORD *)v478;
      v477[1] = v478[1];
      v477[2] = v478[2];
      uint64_t v481 = *(int *)(v468 + 24);
      uint64_t v482 = (char *)v477 + v481;
      __srcbh = (char *)v478 + v481;
      uint64_t v483 = sub_253B07160();
      uint64_t v484 = a1;
      uint64_t v485 = a2;
      v486 = a3;
      v487 = *(void (**)(char *, char *, uint64_t))(*(void *)(v483 - 8) + 16);
      swift_bridgeObjectRetain();
      v487(v482, __srcbh, v483);
      a3 = v486;
      a2 = v485;
      a1 = v484;
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v477, 0, 1, v468);
      goto LABEL_256;
    }
    goto LABEL_255;
  }
  if (v480)
  {
    sub_2536FA73C();
LABEL_255:
    uint64_t v488 = sub_253462A5C(&qword_26B249528);
    memcpy(v477, v478, *(void *)(*(void *)(v488 - 8) + 64));
    goto LABEL_256;
  }
  *(_DWORD *)uint64_t v477 = *(_DWORD *)v478;
  v477[1] = v478[1];
  v477[2] = v478[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v517 = *(int *)(v468 + 24);
  uint64_t v518 = (char *)v477 + v517;
  uint64_t v519 = (char *)v478 + v517;
  uint64_t v520 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v520 - 8) + 24))(v518, v519, v520);
LABEL_256:
  uint64_t v489 = a3[7];
  uint64_t v490 = (void *)((char *)a1 + v489);
  v491 = (void *)((char *)a2 + v489);
  *uint64_t v490 = *v491;
  v490[1] = v491[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v492 = a3[8];
  uint64_t v493 = (void *)((char *)a1 + v492);
  v494 = (void *)((char *)a2 + v492);
  *uint64_t v493 = *v494;
  v493[1] = v494[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v495 = a3[9];
  uint64_t v496 = (void *)((char *)a1 + v495);
  v497 = (void *)((char *)a2 + v495);
  int v498 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1 + v495, 1, v468);
  int v499 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v497, 1, v468);
  if (!v498)
  {
    if (!v499)
    {
      *(_DWORD *)uint64_t v496 = *(_DWORD *)v497;
      v496[1] = v497[1];
      v496[2] = v497[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v521 = *(int *)(v468 + 24);
      v522 = (char *)v496 + v521;
      uint64_t v523 = (char *)v497 + v521;
      uint64_t v524 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v524 - 8) + 24))(v522, v523, v524);
      goto LABEL_262;
    }
    sub_2536FA73C();
    goto LABEL_261;
  }
  if (v499)
  {
LABEL_261:
    uint64_t v507 = sub_253462A5C(&qword_26B249528);
    memcpy(v496, v497, *(void *)(*(void *)(v507 - 8) + 64));
    goto LABEL_262;
  }
  *(_DWORD *)uint64_t v496 = *(_DWORD *)v497;
  v496[1] = v497[1];
  v496[2] = v497[2];
  uint64_t v500 = *(int *)(v468 + 24);
  v501 = (char *)v496 + v500;
  __srcbi = (char *)v497 + v500;
  uint64_t v502 = sub_253B07160();
  uint64_t v503 = a1;
  v504 = a2;
  v505 = a3;
  uint64_t v506 = *(void (**)(char *, char *, uint64_t))(*(void *)(v502 - 8) + 16);
  swift_bridgeObjectRetain();
  v506(v501, __srcbi, v502);
  a3 = v505;
  a2 = v504;
  a1 = v503;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v496, 0, 1, v468);
LABEL_262:
  uint64_t v508 = a3[10];
  v509 = (char *)a1 + v508;
  int v510 = (char *)a2 + v508;
  uint64_t v511 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v511 - 8) + 24))(v509, v510, v511);
  return a1;
}

void *initializeWithTake for TranscriptProtoInterpretedStatementResult(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE0388);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    goto LABEL_82;
  }
  uint64_t v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v8))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v16 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v17 = *(int *)(v16 + 20);
        uint64_t v18 = (char *)a1 + v17;
        uint64_t v19 = (char *)a2 + v17;
        uint64_t v20 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
        {
          uint64_t v21 = sub_253462A5C(&qword_269CE0480);
          memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          uint64_t v60 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v60))
          {
            uint64_t v61 = sub_253462A5C(&qword_269CE0478);
            memcpy(v18, v19, *(void *)(*(void *)(v61 - 8) + 64));
          }
          else
          {
            uint64_t v198 = v60;
            *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            v18[16] = v19[16];
            uint64_t v196 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v90 = *(int *)(v196 + 24);
            __dst = &v18[v90];
            uint64_t v91 = &v19[v90];
            uint64_t v195 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v91, 1, v195))
            {
              uint64_t v92 = sub_253462A5C(&qword_269CE0470);
              memcpy(__dst, v91, *(void *)(*(void *)(v92 - 8) + 64));
            }
            else
            {
              unsigned char *__dst = *v91;
              uint64_t v113 = *(int *)(v195 + 20);
              int v194 = &__dst[v113];
              uint64_t v114 = &v91[v113];
              uint64_t v115 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v115 - 8) + 32))(v194, v114, v115);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v195);
            }
            uint64_t v116 = *(int *)(v196 + 28);
            uint64_t v117 = &v18[v116];
            __dstb = &v19[v116];
            uint64_t v118 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v118 - 8) + 32))(v117, __dstb, v118);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v198);
          }
          uint64_t v119 = *(int *)(v20 + 20);
          uint64_t v120 = &v18[v119];
          uint64_t v121 = &v19[v119];
          uint64_t v122 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v122 - 8) + 32))(v120, v121, v122);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
        }
        goto LABEL_33;
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v22 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
        uint64_t v23 = (char *)a1 + v22;
        uint64_t v24 = (char *)a2 + v22;
        uint64_t v25 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
        goto LABEL_80;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        uint64_t v26 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        uint64_t v27 = *(int *)(v26 + 24);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v30)) {
          goto LABEL_12;
        }
        goto LABEL_29;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v32 = a2[3];
        a1[2] = a2[2];
        a1[3] = v32;
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        uint64_t v34 = (char *)a1 + v33;
        uint64_t v35 = (char *)a2 + v33;
        uint64_t v36 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
        goto LABEL_80;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v26 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
        uint64_t v37 = *(int *)(v26 + 24);
        uint64_t v28 = (char *)a1 + v37;
        uint64_t v29 = (char *)a2 + v37;
        uint64_t v30 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v30))
        {
LABEL_12:
          uint64_t v31 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
LABEL_29:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v28, 0, 1, v30);
        }
        uint64_t v62 = *(int *)(v26 + 28);
        uint64_t v63 = (char *)a1 + v62;
        uint64_t v64 = (char *)a2 + v62;
        uint64_t v65 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v63, v64, v65);
        goto LABEL_80;
      case 6u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v16 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v38 = *(int *)(v16 + 20);
        uint64_t v39 = (char *)a1 + v38;
        uint64_t v40 = (char *)a2 + v38;
        uint64_t v41 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v40, 1, v41))
        {
          uint64_t v42 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v39, 0, 1, v41);
        }
LABEL_33:
        uint64_t v66 = *(int *)(v16 + 24);
        uint64_t v67 = (char *)a1 + v66;
        uint64_t v68 = (char *)a2 + v66;
        uint64_t v69 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v67, v68, v69);
        goto LABEL_80;
      case 7u:
        uint64_t v43 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v43))
        {
          uint64_t v44 = sub_253462A5C(&qword_269CE0498);
          memcpy(a1, a2, *(void *)(*(void *)(v44 - 8) + 64));
          goto LABEL_79;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v96 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v97 = (char *)a1 + v96;
            uint64_t v98 = (char *)a2 + v96;
            uint64_t v99 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(v97, v98, v99);
          }
          else
          {
            if (EnumCaseMultiPayload)
            {
              memcpy(a1, a2, *(void *)(*(void *)(v43 - 8) + 64));
              goto LABEL_78;
            }
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v71 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v72 = (char *)a1 + v71;
            uint64_t v73 = (char *)a2 + v71;
            uint64_t v74 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
          }
LABEL_77:
          swift_storeEnumTagMultiPayload();
LABEL_78:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v43);
LABEL_79:
          uint64_t v155 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
          uint64_t v156 = (char *)a1 + v155;
          uint64_t v157 = (char *)a2 + v155;
          uint64_t v158 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 32))(v156, v157, v158);
LABEL_80:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v8);
          goto LABEL_81;
        }
        uint64_t v94 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v94))
        {
          uint64_t v95 = sub_253462A5C(&qword_269CE0490);
          memcpy(a1, a2, *(void *)(*(void *)(v95 - 8) + 64));
LABEL_76:
          uint64_t v151 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v152 = (char *)a1 + v151;
          uint64_t v153 = (char *)a2 + v151;
          uint64_t v154 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 32))(v152, v153, v154);
          goto LABEL_77;
        }
        int v136 = swift_getEnumCaseMultiPayload();
        if (v136 == 1)
        {
          uint64_t v141 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v141))
          {
            uint64_t v142 = sub_253462A5C(&qword_269CE0488);
            memcpy(a1, a2, *(void *)(*(void *)(v142 - 8) + 64));
          }
          else
          {
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v143 = *(int *)(v141 + 20);
            uint64_t v144 = (char *)a1 + v143;
            uint64_t v145 = (char *)a2 + v143;
            uint64_t v146 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 32))(v144, v145, v146);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v141);
          }
          uint64_t v147 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v148 = (char *)a1 + v147;
          int v149 = (char *)a2 + v147;
          uint64_t v150 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 32))(v148, v149, v150);
        }
        else
        {
          if (v136)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v94 - 8) + 64));
LABEL_75:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v94);
            goto LABEL_76;
          }
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v137 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v138 = (char *)a1 + v137;
          uint64_t v139 = (char *)a2 + v137;
          uint64_t v140 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v138, v139, v140);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_75;
      case 8u:
        *a1 = *a2;
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        uint64_t v45 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        uint64_t v46 = (char *)a1 + v45;
        uint64_t v47 = (char *)a2 + v45;
        uint64_t v48 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
        goto LABEL_80;
      case 9u:
        uint64_t v49 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v49))
        {
          uint64_t v50 = sub_253462A5C(&qword_269CE04A8);
          memcpy(a1, a2, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          uint64_t v75 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v75))
          {
            uint64_t v76 = sub_253462A5C(&qword_269CE04A0);
            memcpy(a1, a2, *(void *)(*(void *)(v76 - 8) + 64));
          }
          else
          {
            uint64_t v89 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v89))
            {
              memcpy(a1, a2, *(void *)(*(void *)(v75 - 8) + 64));
            }
            else
            {
              long long v100 = *((_OWORD *)a2 + 1);
              *(_OWORD *)a1 = *(_OWORD *)a2;
              *((_OWORD *)a1 + 1) = v100;
              a1[4] = a2[4];
              uint64_t v101 = *(int *)(v89 + 28);
              uint64_t v102 = (char *)a1 + v101;
              uint64_t v103 = (char *)a2 + v101;
              uint64_t v104 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 32))(v102, v103, v104);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v89);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v75);
          }
          uint64_t v105 = *(int *)(v49 + 20);
          uint64_t v106 = (char *)a1 + v105;
          uint64_t v107 = (char *)a2 + v105;
          uint64_t v108 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 32))(v106, v107, v108);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v49);
        }
        uint64_t v109 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
        uint64_t v110 = (char *)a1 + v109;
        uint64_t v111 = (char *)a2 + v109;
        uint64_t v112 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 32))(v110, v111, v112);
        goto LABEL_80;
      case 0xAu:
        *a1 = *a2;
        uint64_t v51 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
        uint64_t v52 = (char *)a1 + v51;
        uint64_t v53 = (char *)a2 + v51;
        uint64_t v54 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
        goto LABEL_80;
      default:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(_WORD *)((char *)a1 + 1) = *(_WORD *)((char *)a2 + 1);
        uint64_t v10 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v11 = v10[7];
        uint64_t v12 = (char *)a1 + v11;
        int v13 = (char *)a2 + v11;
        uint64_t v14 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
        {
          uint64_t v15 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
        }
        uint64_t v55 = v10[8];
        uint64_t v56 = (_OWORD *)((char *)a1 + v55);
        uint64_t v57 = (_OWORD *)((char *)a2 + v55);
        uint64_t v58 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v57, 1, v58))
        {
          uint64_t v59 = sub_253462A5C(&qword_269CE0450);
          memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          long long v77 = v57[1];
          *uint64_t v56 = *v57;
          v56[1] = v77;
          v56[2] = v57[2];
          uint64_t v78 = *(int *)(v58 + 28);
          uint64_t v79 = (char *)v56 + v78;
          uint64_t v80 = (char *)v57 + v78;
          uint64_t v81 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 32))(v79, v80, v81);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v56, 0, 1, v58);
        }
        uint64_t v82 = v10[9];
        uint64_t v83 = (_OWORD *)((char *)a1 + v82);
        uint64_t v84 = (_OWORD *)((char *)a2 + v82);
        uint64_t v85 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v85))
        {
          uint64_t v86 = sub_253462A5C(&qword_269CE0468);
          memcpy(v83, v84, *(void *)(*(void *)(v86 - 8) + 64));
        }
        else
        {
          uint64_t v87 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v87))
          {
            uint64_t v88 = sub_253462A5C(&qword_269CE0460);
            memcpy(v83, v84, *(void *)(*(void *)(v88 - 8) + 64));
          }
          else
          {
            __dsta = (void *)type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, (uint64_t)__dsta))
            {
              uint64_t v93 = sub_253462A5C(&qword_269CE0458);
              memcpy(v83, v84, *(void *)(*(void *)(v93 - 8) + 64));
            }
            else
            {
              long long v123 = v84[1];
              _OWORD *v83 = *v84;
              v83[1] = v123;
              *((void *)v83 + 4) = *((void *)v84 + 4);
              uint64_t v124 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              uint64_t v197 = (char *)v84 + v124;
              uint64_t v199 = (char *)v83 + v124;
              uint64_t v125 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 32))(v199, v197, v125);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, (uint64_t)__dsta);
            }
            uint64_t v126 = *(int *)(v87 + 20);
            uint64_t v200 = (char *)v84 + v126;
            __dstc = (char *)v83 + v126;
            uint64_t v127 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 32))(__dstc, v200, v127);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v87);
          }
          uint64_t v128 = *(int *)(v85 + 20);
          uint64_t v129 = (char *)v83 + v128;
          uint64_t v130 = (char *)v84 + v128;
          uint64_t v131 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 32))(v129, v130, v131);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v85);
        }
        *(_OWORD *)((char *)a1 + v10[10]) = *(_OWORD *)((char *)a2 + v10[10]);
        uint64_t v132 = v10[11];
        uint64_t v133 = (char *)a1 + v132;
        uint64_t v134 = (char *)a2 + v132;
        uint64_t v135 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 32))(v133, v134, v135);
        goto LABEL_80;
    }
  }
  uint64_t v9 = sub_253462A5C(&qword_269CE04B0);
  memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_81:
  uint64_t v159 = *(int *)(v6 + 20);
  uint64_t v160 = (char *)a1 + v159;
  uint64_t v161 = (char *)a2 + v159;
  uint64_t v162 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 32))(v160, v161, v162);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_82:
  uint64_t v163 = a3[5];
  uint64_t v164 = (_DWORD *)((char *)a1 + v163);
  uint64_t v165 = (_DWORD *)((char *)a2 + v163);
  uint64_t v166 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v165, 1, v166))
  {
    uint64_t v167 = sub_253462A5C(&qword_26B249528);
    memcpy(v164, v165, *(void *)(*(void *)(v167 - 8) + 64));
  }
  else
  {
    *uint64_t v164 = *v165;
    *(_OWORD *)(v164 + 2) = *(_OWORD *)(v165 + 2);
    uint64_t v168 = *(int *)(v166 + 24);
    uint64_t v169 = (char *)v164 + v168;
    uint64_t v170 = (char *)v165 + v168;
    uint64_t v171 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 32))(v169, v170, v171);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v164, 0, 1, v166);
  }
  uint64_t v172 = a3[6];
  uint64_t v173 = (_DWORD *)((char *)a1 + v172);
  uint64_t v174 = (_DWORD *)((char *)a2 + v172);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v172, 1, v166))
  {
    uint64_t v175 = sub_253462A5C(&qword_26B249528);
    memcpy(v173, v174, *(void *)(*(void *)(v175 - 8) + 64));
  }
  else
  {
    *uint64_t v173 = *v174;
    *(_OWORD *)(v173 + 2) = *(_OWORD *)(v174 + 2);
    uint64_t v176 = *(int *)(v166 + 24);
    uint64_t v177 = (char *)v173 + v176;
    uint64_t v178 = (char *)v174 + v176;
    uint64_t v179 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 32))(v177, v178, v179);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v173, 0, 1, v166);
  }
  uint64_t v180 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v180) = *(_OWORD *)((char *)a2 + v180);
  uint64_t v181 = a3[9];
  uint64_t v182 = (_DWORD *)((char *)a1 + v181);
  uint64_t v183 = (_DWORD *)((char *)a2 + v181);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v181, 1, v166))
  {
    uint64_t v184 = sub_253462A5C(&qword_26B249528);
    memcpy(v182, v183, *(void *)(*(void *)(v184 - 8) + 64));
  }
  else
  {
    *uint64_t v182 = *v183;
    *(_OWORD *)(v182 + 2) = *(_OWORD *)(v183 + 2);
    uint64_t v185 = *(int *)(v166 + 24);
    uint64_t v186 = (char *)v182 + v185;
    uint64_t v187 = (char *)v183 + v185;
    uint64_t v188 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v188 - 8) + 32))(v186, v187, v188);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v182, 0, 1, v166);
  }
  uint64_t v189 = a3[10];
  uint64_t v190 = (char *)a1 + v189;
  uint64_t v191 = (char *)a2 + v189;
  uint64_t v192 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 32))(v190, v191, v192);
  return a1;
}

void *assignWithTake for TranscriptProtoInterpretedStatementResult(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v9))
      {
        uint64_t v10 = sub_253462A5C(&qword_269CE04B0);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_221:
        uint64_t v429 = *(int *)(v6 + 20);
        uint64_t v430 = (char *)a1 + v429;
        uint64_t v431 = (char *)a2 + v429;
        uint64_t v432 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v432 - 8) + 32))(v430, v431, v432);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
        goto LABEL_244;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *a1 = *a2;
          uint64_t v34 = type metadata accessor for TranscriptProtoActionConfirmation(0);
          uint64_t v35 = *(int *)(v34 + 20);
          uint64_t v36 = (char *)a1 + v35;
          uint64_t v37 = (char *)a2 + v35;
          uint64_t v38 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v37, 1, v38))
          {
            uint64_t v39 = sub_253462A5C(&qword_269CE0480);
            memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
          }
          else
          {
            uint64_t v117 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v37, 1, v117))
            {
              uint64_t v118 = sub_253462A5C(&qword_269CE0478);
              memcpy(v36, v37, *(void *)(*(void *)(v118 - 8) + 64));
            }
            else
            {
              uint64_t v544 = v117;
              *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
              v36[16] = v37[16];
              uint64_t v538 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
              uint64_t v207 = *(int *)(v538 + 24);
              __dst = &v36[v207];
              uint64_t v208 = &v37[v207];
              uint64_t v535 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v208, 1, v535))
              {
                uint64_t v209 = sub_253462A5C(&qword_269CE0470);
                memcpy(__dst, v208, *(void *)(*(void *)(v209 - 8) + 64));
              }
              else
              {
                unsigned char *__dst = *v208;
                uint64_t v256 = *(int *)(v535 + 20);
                uint64_t v532 = &__dst[v256];
                uint64_t v257 = &v208[v256];
                uint64_t v258 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v258 - 8) + 32))(v532, v257, v258);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v535);
              }
              uint64_t v259 = *(int *)(v538 + 28);
              v260 = &v36[v259];
              __dstf = &v37[v259];
              uint64_t v261 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v261 - 8) + 32))(v260, __dstf, v261);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v36, 0, 1, v544);
            }
            uint64_t v262 = *(int *)(v38 + 20);
            long long v263 = &v36[v262];
            uint64_t v264 = &v37[v262];
            uint64_t v265 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v265 - 8) + 32))(v263, v264, v265);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v36, 0, 1, v38);
          }
          goto LABEL_64;
        case 2u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v40 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
          uint64_t v41 = (char *)a1 + v40;
          uint64_t v42 = (char *)a2 + v40;
          uint64_t v43 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
          goto LABEL_220;
        case 3u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          uint64_t v44 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
          uint64_t v45 = *(int *)(v44 + 24);
          uint64_t v46 = (char *)a1 + v45;
          uint64_t v47 = (char *)a2 + v45;
          uint64_t v48 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v47, 1, v48)) {
            goto LABEL_27;
          }
          goto LABEL_60;
        case 4u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v50 = a2[3];
          a1[2] = a2[2];
          a1[3] = v50;
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          uint64_t v51 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
          uint64_t v52 = (char *)a1 + v51;
          uint64_t v53 = (char *)a2 + v51;
          uint64_t v54 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
          goto LABEL_220;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v44 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
          uint64_t v55 = *(int *)(v44 + 24);
          uint64_t v46 = (char *)a1 + v55;
          uint64_t v47 = (char *)a2 + v55;
          uint64_t v48 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v47, 1, v48))
          {
LABEL_27:
            uint64_t v49 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
          }
          else
          {
LABEL_60:
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v46, 0, 1, v48);
          }
          uint64_t v119 = *(int *)(v44 + 28);
          uint64_t v120 = (char *)a1 + v119;
          uint64_t v121 = (char *)a2 + v119;
          uint64_t v122 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 32))(v120, v121, v122);
          goto LABEL_220;
        case 6u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v34 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
          uint64_t v56 = *(int *)(v34 + 20);
          uint64_t v57 = (char *)a1 + v56;
          uint64_t v58 = (char *)a2 + v56;
          uint64_t v59 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v58, 1, v59))
          {
            uint64_t v60 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v57, 0, 1, v59);
          }
LABEL_64:
          uint64_t v123 = *(int *)(v34 + 24);
          uint64_t v124 = (char *)a1 + v123;
          uint64_t v125 = (char *)a2 + v123;
          uint64_t v126 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 32))(v124, v125, v126);
          goto LABEL_220;
        case 7u:
          uint64_t v61 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v61))
          {
            uint64_t v62 = sub_253462A5C(&qword_269CE0498);
            memcpy(a1, a2, *(void *)(*(void *)(v62 - 8) + 64));
            goto LABEL_219;
          }
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload != 2)
          {
            if (EnumCaseMultiPayload == 1)
            {
              *(unsigned char *)a1 = *(unsigned char *)a2;
              uint64_t v226 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
              uint64_t v227 = (char *)a1 + v226;
              uint64_t v228 = (char *)a2 + v226;
              uint64_t v229 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v229 - 8) + 32))(v227, v228, v229);
            }
            else
            {
              if (EnumCaseMultiPayload)
              {
                memcpy(a1, a2, *(void *)(*(void *)(v61 - 8) + 64));
                goto LABEL_218;
              }
              *(unsigned char *)a1 = *(unsigned char *)a2;
              uint64_t v128 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
              uint64_t v129 = (char *)a1 + v128;
              uint64_t v130 = (char *)a2 + v128;
              uint64_t v131 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 32))(v129, v130, v131);
            }
LABEL_217:
            swift_storeEnumTagMultiPayload();
LABEL_218:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v61);
LABEL_219:
            uint64_t v425 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
            int v426 = (char *)a1 + v425;
            uint64_t v427 = (char *)a2 + v425;
            uint64_t v428 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v428 - 8) + 32))(v426, v427, v428);
LABEL_220:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v9);
            goto LABEL_221;
          }
          uint64_t v224 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v224))
          {
            uint64_t v225 = sub_253462A5C(&qword_269CE0490);
            memcpy(a1, a2, *(void *)(*(void *)(v225 - 8) + 64));
LABEL_216:
            uint64_t v421 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
            uint64_t v422 = (char *)a1 + v421;
            uint64_t v423 = (char *)a2 + v421;
            uint64_t v424 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v424 - 8) + 32))(v422, v423, v424);
            goto LABEL_217;
          }
          int v311 = swift_getEnumCaseMultiPayload();
          if (v311 == 1)
          {
            uint64_t v368 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v368))
            {
              uint64_t v369 = sub_253462A5C(&qword_269CE0488);
              memcpy(a1, a2, *(void *)(*(void *)(v369 - 8) + 64));
            }
            else
            {
              *(unsigned char *)a1 = *(unsigned char *)a2;
              uint64_t v413 = *(int *)(v368 + 20);
              v414 = (char *)a1 + v413;
              uint64_t v415 = (char *)a2 + v413;
              uint64_t v416 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v416 - 8) + 32))(v414, v415, v416);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v368);
            }
            uint64_t v417 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
            uint64_t v418 = (char *)a1 + v417;
            uint64_t v419 = (char *)a2 + v417;
            uint64_t v420 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v420 - 8) + 32))(v418, v419, v420);
          }
          else
          {
            if (v311)
            {
              memcpy(a1, a2, *(void *)(*(void *)(v224 - 8) + 64));
LABEL_215:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v224);
              goto LABEL_216;
            }
            *(_OWORD *)a1 = *(_OWORD *)a2;
            uint64_t v312 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
            uint64_t v313 = (char *)a1 + v312;
            v314 = (char *)a2 + v312;
            uint64_t v315 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v315 - 8) + 32))(v313, v314, v315);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_215;
        case 8u:
          *a1 = *a2;
          *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
          uint64_t v63 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
          uint64_t v64 = (char *)a1 + v63;
          uint64_t v65 = (char *)a2 + v63;
          uint64_t v66 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
          goto LABEL_220;
        case 9u:
          uint64_t v67 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v67))
          {
            uint64_t v68 = sub_253462A5C(&qword_269CE04A8);
            memcpy(a1, a2, *(void *)(*(void *)(v68 - 8) + 64));
          }
          else
          {
            uint64_t v132 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v132))
            {
              uint64_t v133 = sub_253462A5C(&qword_269CE04A0);
              memcpy(a1, a2, *(void *)(*(void *)(v133 - 8) + 64));
            }
            else
            {
              uint64_t v210 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v210))
              {
                memcpy(a1, a2, *(void *)(*(void *)(v132 - 8) + 64));
              }
              else
              {
                long long v266 = *((_OWORD *)a2 + 1);
                *(_OWORD *)a1 = *(_OWORD *)a2;
                *((_OWORD *)a1 + 1) = v266;
                a1[4] = a2[4];
                uint64_t v267 = *(int *)(v210 + 28);
                uint64_t v268 = (char *)a1 + v267;
                v269 = (char *)a2 + v267;
                uint64_t v270 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v270 - 8) + 32))(v268, v269, v270);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v210);
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v132);
            }
            uint64_t v271 = *(int *)(v67 + 20);
            uint64_t v272 = (char *)a1 + v271;
            v273 = (char *)a2 + v271;
            uint64_t v274 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v274 - 8) + 32))(v272, v273, v274);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v67);
          }
          uint64_t v275 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
          uint64_t v276 = (char *)a1 + v275;
          v277 = (char *)a2 + v275;
          uint64_t v278 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v278 - 8) + 32))(v276, v277, v278);
          goto LABEL_220;
        case 0xAu:
          *a1 = *a2;
          uint64_t v69 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
          uint64_t v70 = (char *)a1 + v69;
          uint64_t v71 = (char *)a2 + v69;
          uint64_t v72 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v70, v71, v72);
          goto LABEL_220;
        default:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          *(_WORD *)((char *)a1 + 1) = *(_WORD *)((char *)a2 + 1);
          uint64_t v21 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
          uint64_t v22 = v21[7];
          uint64_t v23 = (char *)a1 + v22;
          uint64_t v24 = (char *)a2 + v22;
          uint64_t v25 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
          {
            uint64_t v26 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v25);
          }
          uint64_t v112 = v21[8];
          uint64_t v113 = (_OWORD *)((char *)a1 + v112);
          uint64_t v114 = (_OWORD *)((char *)a2 + v112);
          uint64_t v115 = type metadata accessor for TranscriptProtoUndoContext(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v114, 1, v115))
          {
            uint64_t v116 = sub_253462A5C(&qword_269CE0450);
            memcpy(v113, v114, *(void *)(*(void *)(v116 - 8) + 64));
          }
          else
          {
            long long v134 = v114[1];
            _OWORD *v113 = *v114;
            v113[1] = v134;
            v113[2] = v114[2];
            uint64_t v135 = *(int *)(v115 + 28);
            int v136 = (char *)v113 + v135;
            uint64_t v137 = (char *)v114 + v135;
            uint64_t v138 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 32))(v136, v137, v138);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v113, 0, 1, v115);
          }
          uint64_t v139 = v21[9];
          uint64_t v140 = (_OWORD *)((char *)a1 + v139);
          uint64_t v141 = (_OWORD *)((char *)a2 + v139);
          uint64_t v142 = type metadata accessor for TranscriptProtoFollowUpAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v141, 1, v142))
          {
            uint64_t v143 = sub_253462A5C(&qword_269CE0468);
            memcpy(v140, v141, *(void *)(*(void *)(v143 - 8) + 64));
          }
          else
          {
            uint64_t v144 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v141, 1, v144))
            {
              uint64_t v145 = sub_253462A5C(&qword_269CE0460);
              memcpy(v140, v141, *(void *)(*(void *)(v145 - 8) + 64));
            }
            else
            {
              __dsta = (void *)type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v141, 1, (uint64_t)__dsta))
              {
                uint64_t v211 = sub_253462A5C(&qword_269CE0458);
                memcpy(v140, v141, *(void *)(*(void *)(v211 - 8) + 64));
              }
              else
              {
                long long v279 = v141[1];
                _OWORD *v140 = *v141;
                v140[1] = v279;
                *((void *)v140 + 4) = *((void *)v141 + 4);
                uint64_t v280 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                              + 28);
                v540 = (char *)v141 + v280;
                uint64_t v546 = (char *)v140 + v280;
                uint64_t v281 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v281 - 8) + 32))(v546, v540, v281);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v140, 0, 1, (uint64_t)__dsta);
              }
              uint64_t v282 = *(int *)(v144 + 20);
              v547 = (char *)v141 + v282;
              __dstg = (char *)v140 + v282;
              uint64_t v283 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v283 - 8) + 32))(__dstg, v547, v283);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v140, 0, 1, v144);
            }
            uint64_t v284 = *(int *)(v142 + 20);
            uint64_t v285 = (char *)v140 + v284;
            uint64_t v286 = (char *)v141 + v284;
            uint64_t v287 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v287 - 8) + 32))(v285, v286, v287);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v140, 0, 1, v142);
          }
          *(_OWORD *)((char *)a1 + v21[10]) = *(_OWORD *)((char *)a2 + v21[10]);
          uint64_t v288 = v21[11];
          uint64_t v289 = (char *)a1 + v288;
          uint64_t v290 = (char *)a2 + v288;
          uint64_t v291 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v291 - 8) + 32))(v289, v290, v291);
          goto LABEL_220;
      }
    }
LABEL_7:
    uint64_t v11 = sub_253462A5C(&qword_269CE0388);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_244;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  uint64_t v12 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v12);
  int v14 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v12);
  if (v13)
  {
    if (!v14)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *a1 = *a2;
          uint64_t v73 = type metadata accessor for TranscriptProtoActionConfirmation(0);
          uint64_t v74 = *(int *)(v73 + 20);
          uint64_t v75 = (char *)a1 + v74;
          uint64_t v76 = (char *)a2 + v74;
          uint64_t v77 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v76, 1, v77))
          {
            uint64_t v78 = sub_253462A5C(&qword_269CE0480);
            memcpy(v75, v76, *(void *)(*(void *)(v78 - 8) + 64));
          }
          else
          {
            uint64_t v190 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v76, 1, v190))
            {
              uint64_t v191 = sub_253462A5C(&qword_269CE0478);
              memcpy(v75, v76, *(void *)(*(void *)(v191 - 8) + 64));
            }
            else
            {
              uint64_t v545 = v190;
              *(_OWORD *)uint64_t v75 = *(_OWORD *)v76;
              v75[16] = v76[16];
              uint64_t v539 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
              uint64_t v252 = *(int *)(v539 + 24);
              __dstb = &v75[v252];
              uint64_t v253 = &v76[v252];
              uint64_t v536 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v253, 1, v536))
              {
                uint64_t v254 = sub_253462A5C(&qword_269CE0470);
                memcpy(__dstb, v253, *(void *)(*(void *)(v254 - 8) + 64));
              }
              else
              {
                unsigned char *__dstb = *v253;
                uint64_t v333 = *(int *)(v536 + 20);
                v533 = &__dstb[v333];
                uint64_t v334 = &v253[v333];
                uint64_t v335 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v335 - 8) + 32))(v533, v334, v335);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstb, 0, 1, v536);
              }
              uint64_t v336 = *(int *)(v539 + 28);
              uint64_t v337 = &v75[v336];
              __dsth = &v76[v336];
              uint64_t v338 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v338 - 8) + 32))(v337, __dsth, v338);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v75, 0, 1, v545);
            }
            uint64_t v339 = *(int *)(v77 + 20);
            v340 = &v75[v339];
            v341 = &v76[v339];
            uint64_t v342 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v342 - 8) + 32))(v340, v341, v342);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v75, 0, 1, v77);
          }
          goto LABEL_101;
        case 2u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v79 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
          uint64_t v80 = (char *)a1 + v79;
          uint64_t v81 = (char *)a2 + v79;
          uint64_t v82 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v80, v81, v82);
          goto LABEL_233;
        case 3u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          uint64_t v83 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
          uint64_t v84 = *(int *)(v83 + 24);
          uint64_t v85 = (char *)a1 + v84;
          uint64_t v86 = (char *)a2 + v84;
          uint64_t v87 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v86, 1, v87)) {
            goto LABEL_43;
          }
          goto LABEL_97;
        case 4u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v89 = a2[3];
          a1[2] = a2[2];
          a1[3] = v89;
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          uint64_t v90 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
          uint64_t v91 = (char *)a1 + v90;
          uint64_t v92 = (char *)a2 + v90;
          uint64_t v93 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
          goto LABEL_233;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v83 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
          uint64_t v94 = *(int *)(v83 + 24);
          uint64_t v85 = (char *)a1 + v94;
          uint64_t v86 = (char *)a2 + v94;
          uint64_t v87 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v86, 1, v87))
          {
LABEL_43:
            uint64_t v88 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v85, v86, *(void *)(*(void *)(v88 - 8) + 64));
          }
          else
          {
LABEL_97:
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v85, v86, v87);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v85, 0, 1, v87);
          }
          uint64_t v192 = *(int *)(v83 + 28);
          uint64_t v193 = (char *)a1 + v192;
          int v194 = (char *)a2 + v192;
          uint64_t v195 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 32))(v193, v194, v195);
          goto LABEL_233;
        case 6u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v73 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
          uint64_t v95 = *(int *)(v73 + 20);
          uint64_t v96 = (char *)a1 + v95;
          uint64_t v97 = (char *)a2 + v95;
          uint64_t v98 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v97, 1, v98))
          {
            uint64_t v99 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v96, v97, *(void *)(*(void *)(v99 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 32))(v96, v97, v98);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v96, 0, 1, v98);
          }
LABEL_101:
          uint64_t v196 = *(int *)(v73 + 24);
          uint64_t v197 = (char *)a1 + v196;
          uint64_t v198 = (char *)a2 + v196;
          uint64_t v199 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v199 - 8) + 32))(v197, v198, v199);
          goto LABEL_233;
        case 7u:
          uint64_t v100 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v100))
          {
            uint64_t v101 = sub_253462A5C(&qword_269CE0498);
            memcpy(a1, a2, *(void *)(*(void *)(v101 - 8) + 64));
            goto LABEL_232;
          }
          int v200 = swift_getEnumCaseMultiPayload();
          if (v200 != 2)
          {
            if (v200 == 1)
            {
              *(unsigned char *)a1 = *(unsigned char *)a2;
              uint64_t v307 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
              uint64_t v308 = (char *)a1 + v307;
              uint64_t v309 = (char *)a2 + v307;
              uint64_t v310 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v310 - 8) + 32))(v308, v309, v310);
            }
            else
            {
              if (v200)
              {
                memcpy(a1, a2, *(void *)(*(void *)(v100 - 8) + 64));
                goto LABEL_231;
              }
              *(unsigned char *)a1 = *(unsigned char *)a2;
              uint64_t v201 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
              uint64_t v202 = (char *)a1 + v201;
              uint64_t v203 = (char *)a2 + v201;
              uint64_t v204 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v204 - 8) + 32))(v202, v203, v204);
            }
LABEL_230:
            swift_storeEnumTagMultiPayload();
LABEL_231:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v100);
LABEL_232:
            uint64_t v447 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
            uint64_t v448 = (char *)a1 + v447;
            uint64_t v449 = (char *)a2 + v447;
            uint64_t v450 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v450 - 8) + 32))(v448, v449, v450);
LABEL_233:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v12);
            goto LABEL_243;
          }
          uint64_t v305 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v305))
          {
            uint64_t v306 = sub_253462A5C(&qword_269CE0490);
            memcpy(a1, a2, *(void *)(*(void *)(v306 - 8) + 64));
LABEL_229:
            uint64_t v443 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
            uint64_t v444 = (char *)a1 + v443;
            uint64_t v445 = (char *)a2 + v443;
            uint64_t v446 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v446 - 8) + 32))(v444, v445, v446);
            goto LABEL_230;
          }
          int v363 = swift_getEnumCaseMultiPayload();
          if (v363 == 1)
          {
            uint64_t v411 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v411))
            {
              uint64_t v412 = sub_253462A5C(&qword_269CE0488);
              memcpy(a1, a2, *(void *)(*(void *)(v412 - 8) + 64));
            }
            else
            {
              *(unsigned char *)a1 = *(unsigned char *)a2;
              uint64_t v435 = *(int *)(v411 + 20);
              uint64_t v436 = (char *)a1 + v435;
              uint64_t v437 = (char *)a2 + v435;
              uint64_t v438 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v438 - 8) + 32))(v436, v437, v438);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v411);
            }
            uint64_t v439 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
            uint64_t v440 = (char *)a1 + v439;
            uint64_t v441 = (char *)a2 + v439;
            uint64_t v442 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v442 - 8) + 32))(v440, v441, v442);
          }
          else
          {
            if (v363)
            {
              memcpy(a1, a2, *(void *)(*(void *)(v305 - 8) + 64));
LABEL_228:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v305);
              goto LABEL_229;
            }
            *(_OWORD *)a1 = *(_OWORD *)a2;
            uint64_t v364 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
            uint64_t v365 = (char *)a1 + v364;
            v366 = (char *)a2 + v364;
            uint64_t v367 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v367 - 8) + 32))(v365, v366, v367);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_228;
        case 8u:
          *a1 = *a2;
          *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
          uint64_t v102 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
          uint64_t v103 = (char *)a1 + v102;
          uint64_t v104 = (char *)a2 + v102;
          uint64_t v105 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 32))(v103, v104, v105);
          goto LABEL_233;
        case 9u:
          uint64_t v106 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v106))
          {
            uint64_t v107 = sub_253462A5C(&qword_269CE04A8);
            memcpy(a1, a2, *(void *)(*(void *)(v107 - 8) + 64));
          }
          else
          {
            uint64_t v205 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v205))
            {
              uint64_t v206 = sub_253462A5C(&qword_269CE04A0);
              memcpy(a1, a2, *(void *)(*(void *)(v206 - 8) + 64));
            }
            else
            {
              uint64_t v255 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v255))
              {
                memcpy(a1, a2, *(void *)(*(void *)(v205 - 8) + 64));
              }
              else
              {
                long long v317 = *((_OWORD *)a2 + 1);
                *(_OWORD *)a1 = *(_OWORD *)a2;
                *((_OWORD *)a1 + 1) = v317;
                a1[4] = a2[4];
                uint64_t v318 = *(int *)(v255 + 28);
                uint64_t v319 = (char *)a1 + v318;
                uint64_t v320 = (char *)a2 + v318;
                uint64_t v321 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v321 - 8) + 32))(v319, v320, v321);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v255);
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v205);
            }
            uint64_t v322 = *(int *)(v106 + 20);
            v323 = (char *)a1 + v322;
            uint64_t v324 = (char *)a2 + v322;
            uint64_t v325 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v325 - 8) + 32))(v323, v324, v325);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v106);
          }
          uint64_t v326 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
          uint64_t v327 = (char *)a1 + v326;
          uint64_t v328 = (char *)a2 + v326;
          uint64_t v329 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v329 - 8) + 32))(v327, v328, v329);
          goto LABEL_233;
        case 0xAu:
          *a1 = *a2;
          uint64_t v108 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
          uint64_t v109 = (char *)a1 + v108;
          uint64_t v110 = (char *)a2 + v108;
          uint64_t v111 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 32))(v109, v110, v111);
          goto LABEL_233;
        default:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          *(_WORD *)((char *)a1 + 1) = *(_WORD *)((char *)a2 + 1);
          uint64_t v15 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
          uint64_t v16 = v15[7];
          uint64_t v17 = (char *)a1 + v16;
          uint64_t v18 = (char *)a2 + v16;
          uint64_t v19 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
          {
            uint64_t v20 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
          }
          uint64_t v146 = v15[8];
          uint64_t v147 = (_OWORD *)((char *)a1 + v146);
          uint64_t v148 = (_OWORD *)((char *)a2 + v146);
          uint64_t v149 = type metadata accessor for TranscriptProtoUndoContext(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v148, 1, v149))
          {
            uint64_t v150 = sub_253462A5C(&qword_269CE0450);
            memcpy(v147, v148, *(void *)(*(void *)(v150 - 8) + 64));
          }
          else
          {
            long long v212 = v148[1];
            _OWORD *v147 = *v148;
            v147[1] = v212;
            v147[2] = v148[2];
            uint64_t v213 = *(int *)(v149 + 28);
            uint64_t v214 = (char *)v147 + v213;
            uint64_t v215 = (char *)v148 + v213;
            uint64_t v216 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v216 - 8) + 32))(v214, v215, v216);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v147, 0, 1, v149);
          }
          uint64_t v217 = v15[9];
          uint64_t v218 = (_OWORD *)((char *)a1 + v217);
          uint64_t v219 = (_OWORD *)((char *)a2 + v217);
          uint64_t v220 = type metadata accessor for TranscriptProtoFollowUpAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v219, 1, v220))
          {
            uint64_t v221 = sub_253462A5C(&qword_269CE0468);
            memcpy(v218, v219, *(void *)(*(void *)(v221 - 8) + 64));
          }
          else
          {
            uint64_t v222 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v219, 1, v222))
            {
              uint64_t v223 = sub_253462A5C(&qword_269CE0460);
              memcpy(v218, v219, *(void *)(*(void *)(v223 - 8) + 64));
            }
            else
            {
              __dstc = (void *)type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v219, 1, (uint64_t)__dstc))
              {
                uint64_t v292 = sub_253462A5C(&qword_269CE0458);
                memcpy(v218, v219, *(void *)(*(void *)(v292 - 8) + 64));
              }
              else
              {
                long long v343 = v219[1];
                *uint64_t v218 = *v219;
                v218[1] = v343;
                *((void *)v218 + 4) = *((void *)v219 + 4);
                uint64_t v344 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                              + 28);
                uint64_t v542 = (char *)v219 + v344;
                uint64_t v549 = (char *)v218 + v344;
                uint64_t v345 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v345 - 8) + 32))(v549, v542, v345);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v218, 0, 1, (uint64_t)__dstc);
              }
              uint64_t v346 = *(int *)(v222 + 20);
              uint64_t v550 = (char *)v219 + v346;
              __dsti = (char *)v218 + v346;
              uint64_t v347 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v347 - 8) + 32))(__dsti, v550, v347);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v218, 0, 1, v222);
            }
            uint64_t v348 = *(int *)(v220 + 20);
            v349 = (char *)v218 + v348;
            uint64_t v350 = (char *)v219 + v348;
            uint64_t v351 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v351 - 8) + 32))(v349, v350, v351);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v218, 0, 1, v220);
          }
          *(_OWORD *)((char *)a1 + v15[10]) = *(_OWORD *)((char *)a2 + v15[10]);
          uint64_t v352 = v15[11];
          uint64_t v353 = (char *)a1 + v352;
          uint64_t v354 = (char *)a2 + v352;
          uint64_t v355 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v355 - 8) + 32))(v353, v354, v355);
          goto LABEL_233;
      }
    }
    goto LABEL_18;
  }
  if (!v14)
  {
    if (a1 == a2) {
      goto LABEL_243;
    }
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v151 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v152 = *(int *)(v151 + 20);
        uint64_t v153 = (char *)a1 + v152;
        uint64_t v154 = (char *)a2 + v152;
        uint64_t v155 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v154, 1, v155))
        {
          uint64_t v156 = sub_253462A5C(&qword_269CE0480);
          memcpy(v153, v154, *(void *)(*(void *)(v156 - 8) + 64));
        }
        else
        {
          uint64_t v235 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v154, 1, v235))
          {
            uint64_t v236 = sub_253462A5C(&qword_269CE0478);
            memcpy(v153, v154, *(void *)(*(void *)(v236 - 8) + 64));
          }
          else
          {
            uint64_t v548 = v235;
            *(_OWORD *)uint64_t v153 = *(_OWORD *)v154;
            v153[16] = v154[16];
            uint64_t v541 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v330 = *(int *)(v541 + 24);
            __dstd = &v153[v330];
            uint64_t v331 = &v154[v330];
            uint64_t v537 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v331, 1, v537))
            {
              uint64_t v332 = sub_253462A5C(&qword_269CE0470);
              memcpy(__dstd, v331, *(void *)(*(void *)(v332 - 8) + 64));
            }
            else
            {
              unsigned char *__dstd = *v331;
              uint64_t v383 = *(int *)(v537 + 20);
              uint64_t v534 = &__dstd[v383];
              uint64_t v384 = &v331[v383];
              uint64_t v385 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v385 - 8) + 32))(v534, v384, v385);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstd, 0, 1, v537);
            }
            uint64_t v386 = *(int *)(v541 + 28);
            uint64_t v387 = &v153[v386];
            __dstj = &v154[v386];
            uint64_t v388 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v388 - 8) + 32))(v387, __dstj, v388);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v153, 0, 1, v548);
          }
          uint64_t v389 = *(int *)(v155 + 20);
          uint64_t v390 = &v153[v389];
          uint64_t v391 = &v154[v389];
          uint64_t v392 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v392 - 8) + 32))(v390, v391, v392);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v153, 0, 1, v155);
        }
        goto LABEL_132;
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v157 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
        uint64_t v158 = (char *)a1 + v157;
        uint64_t v159 = (char *)a2 + v157;
        uint64_t v160 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 32))(v158, v159, v160);
        goto LABEL_242;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        uint64_t v161 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        uint64_t v162 = *(int *)(v161 + 24);
        uint64_t v163 = (char *)a1 + v162;
        uint64_t v164 = (char *)a2 + v162;
        uint64_t v165 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v164, 1, v165)) {
          goto LABEL_83;
        }
        goto LABEL_128;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v167 = a2[3];
        a1[2] = a2[2];
        a1[3] = v167;
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v168 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        uint64_t v169 = (char *)a1 + v168;
        uint64_t v170 = (char *)a2 + v168;
        uint64_t v171 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 32))(v169, v170, v171);
        goto LABEL_242;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v161 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
        uint64_t v172 = *(int *)(v161 + 24);
        uint64_t v163 = (char *)a1 + v172;
        uint64_t v164 = (char *)a2 + v172;
        uint64_t v165 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v164, 1, v165))
        {
LABEL_83:
          uint64_t v166 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v163, v164, *(void *)(*(void *)(v166 - 8) + 64));
        }
        else
        {
LABEL_128:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 32))(v163, v164, v165);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v163, 0, 1, v165);
        }
        uint64_t v237 = *(int *)(v161 + 28);
        v238 = (char *)a1 + v237;
        uint64_t v239 = (char *)a2 + v237;
        uint64_t v240 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v240 - 8) + 32))(v238, v239, v240);
        goto LABEL_242;
      case 6u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v151 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v173 = *(int *)(v151 + 20);
        uint64_t v174 = (char *)a1 + v173;
        uint64_t v175 = (char *)a2 + v173;
        uint64_t v176 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v175, 1, v176))
        {
          uint64_t v177 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v174, v175, *(void *)(*(void *)(v177 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 32))(v174, v175, v176);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v174, 0, 1, v176);
        }
LABEL_132:
        uint64_t v241 = *(int *)(v151 + 24);
        uint64_t v242 = (char *)a1 + v241;
        uint64_t v243 = (char *)a2 + v241;
        uint64_t v244 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v244 - 8) + 32))(v242, v243, v244);
        goto LABEL_242;
      case 7u:
        uint64_t v178 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v178))
        {
          uint64_t v179 = sub_253462A5C(&qword_269CE0498);
          memcpy(a1, a2, *(void *)(*(void *)(v179 - 8) + 64));
          goto LABEL_241;
        }
        int v245 = swift_getEnumCaseMultiPayload();
        if (v245 != 2)
        {
          if (v245 == 1)
          {
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v359 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v360 = (char *)a1 + v359;
            uint64_t v361 = (char *)a2 + v359;
            uint64_t v362 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v362 - 8) + 32))(v360, v361, v362);
          }
          else
          {
            if (v245)
            {
              memcpy(a1, a2, *(void *)(*(void *)(v178 - 8) + 64));
              goto LABEL_240;
            }
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v246 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v247 = (char *)a1 + v246;
            uint64_t v248 = (char *)a2 + v246;
            uint64_t v249 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v249 - 8) + 32))(v247, v248, v249);
          }
LABEL_239:
          swift_storeEnumTagMultiPayload();
LABEL_240:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v178);
LABEL_241:
          uint64_t v463 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
          uint64_t v464 = (char *)a1 + v463;
          uint64_t v465 = (char *)a2 + v463;
          uint64_t v466 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v466 - 8) + 32))(v464, v465, v466);
LABEL_242:
          swift_storeEnumTagMultiPayload();
          goto LABEL_243;
        }
        uint64_t v357 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v357))
        {
          uint64_t v358 = sub_253462A5C(&qword_269CE0490);
          memcpy(a1, a2, *(void *)(*(void *)(v358 - 8) + 64));
LABEL_238:
          uint64_t v459 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v460 = (char *)a1 + v459;
          uint64_t v461 = (char *)a2 + v459;
          uint64_t v462 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v462 - 8) + 32))(v460, v461, v462);
          goto LABEL_239;
        }
        int v406 = swift_getEnumCaseMultiPayload();
        if (v406 == 1)
        {
          uint64_t v433 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v433))
          {
            uint64_t v434 = sub_253462A5C(&qword_269CE0488);
            memcpy(a1, a2, *(void *)(*(void *)(v434 - 8) + 64));
          }
          else
          {
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v451 = *(int *)(v433 + 20);
            uint64_t v452 = (char *)a1 + v451;
            uint64_t v453 = (char *)a2 + v451;
            uint64_t v454 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v454 - 8) + 32))(v452, v453, v454);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v433);
          }
          uint64_t v455 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v456 = (char *)a1 + v455;
          uint64_t v457 = (char *)a2 + v455;
          uint64_t v458 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v458 - 8) + 32))(v456, v457, v458);
        }
        else
        {
          if (v406)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v357 - 8) + 64));
LABEL_237:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v357);
            goto LABEL_238;
          }
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v407 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v408 = (char *)a1 + v407;
          uint64_t v409 = (char *)a2 + v407;
          uint64_t v410 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v410 - 8) + 32))(v408, v409, v410);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_237;
      case 8u:
        *a1 = *a2;
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        uint64_t v180 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        uint64_t v181 = (char *)a1 + v180;
        uint64_t v182 = (char *)a2 + v180;
        uint64_t v183 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v183 - 8) + 32))(v181, v182, v183);
        goto LABEL_242;
      case 9u:
        uint64_t v184 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v184))
        {
          uint64_t v185 = sub_253462A5C(&qword_269CE04A8);
          memcpy(a1, a2, *(void *)(*(void *)(v185 - 8) + 64));
        }
        else
        {
          uint64_t v250 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v250))
          {
            uint64_t v251 = sub_253462A5C(&qword_269CE04A0);
            memcpy(a1, a2, *(void *)(*(void *)(v251 - 8) + 64));
          }
          else
          {
            uint64_t v316 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v316))
            {
              memcpy(a1, a2, *(void *)(*(void *)(v250 - 8) + 64));
            }
            else
            {
              long long v370 = *((_OWORD *)a2 + 1);
              *(_OWORD *)a1 = *(_OWORD *)a2;
              *((_OWORD *)a1 + 1) = v370;
              a1[4] = a2[4];
              uint64_t v371 = *(int *)(v316 + 28);
              uint64_t v372 = (char *)a1 + v371;
              uint64_t v373 = (char *)a2 + v371;
              uint64_t v374 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v374 - 8) + 32))(v372, v373, v374);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v316);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v250);
          }
          uint64_t v375 = *(int *)(v184 + 20);
          uint64_t v376 = (char *)a1 + v375;
          uint64_t v377 = (char *)a2 + v375;
          uint64_t v378 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v378 - 8) + 32))(v376, v377, v378);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v184);
        }
        uint64_t v379 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
        uint64_t v380 = (char *)a1 + v379;
        uint64_t v381 = (char *)a2 + v379;
        uint64_t v382 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v382 - 8) + 32))(v380, v381, v382);
        goto LABEL_242;
      case 0xAu:
        *a1 = *a2;
        uint64_t v186 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
        uint64_t v187 = (char *)a1 + v186;
        uint64_t v188 = (char *)a2 + v186;
        uint64_t v189 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v189 - 8) + 32))(v187, v188, v189);
        goto LABEL_242;
      default:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(_WORD *)((char *)a1 + 1) = *(_WORD *)((char *)a2 + 1);
        uint64_t v28 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v29 = v28[7];
        uint64_t v30 = (char *)a1 + v29;
        uint64_t v31 = (char *)a2 + v29;
        uint64_t v32 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v31, 1, v32))
        {
          uint64_t v33 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v30, 0, 1, v32);
        }
        uint64_t v230 = v28[8];
        uint64_t v231 = (_OWORD *)((char *)a1 + v230);
        uint64_t v232 = (_OWORD *)((char *)a2 + v230);
        uint64_t v233 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v232, 1, v233))
        {
          uint64_t v234 = sub_253462A5C(&qword_269CE0450);
          memcpy(v231, v232, *(void *)(*(void *)(v234 - 8) + 64));
        }
        else
        {
          long long v293 = v232[1];
          _OWORD *v231 = *v232;
          v231[1] = v293;
          v231[2] = v232[2];
          uint64_t v294 = *(int *)(v233 + 28);
          uint64_t v295 = (char *)v231 + v294;
          uint64_t v296 = (char *)v232 + v294;
          uint64_t v297 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v297 - 8) + 32))(v295, v296, v297);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v231, 0, 1, v233);
        }
        uint64_t v298 = v28[9];
        uint64_t v299 = (_OWORD *)((char *)a1 + v298);
        v300 = (_OWORD *)((char *)a2 + v298);
        uint64_t v301 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v300, 1, v301))
        {
          uint64_t v302 = sub_253462A5C(&qword_269CE0468);
          memcpy(v299, v300, *(void *)(*(void *)(v302 - 8) + 64));
        }
        else
        {
          uint64_t v303 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v300, 1, v303))
          {
            uint64_t v304 = sub_253462A5C(&qword_269CE0460);
            memcpy(v299, v300, *(void *)(*(void *)(v304 - 8) + 64));
          }
          else
          {
            __dste = (void *)type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v300, 1, (uint64_t)__dste))
            {
              uint64_t v356 = sub_253462A5C(&qword_269CE0458);
              memcpy(v299, v300, *(void *)(*(void *)(v356 - 8) + 64));
            }
            else
            {
              long long v393 = v300[1];
              *uint64_t v299 = *v300;
              v299[1] = v393;
              *((void *)v299 + 4) = *((void *)v300 + 4);
              uint64_t v394 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              uint64_t v543 = (char *)v300 + v394;
              v551 = (char *)v299 + v394;
              uint64_t v395 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v395 - 8) + 32))(v551, v543, v395);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v299, 0, 1, (uint64_t)__dste);
            }
            uint64_t v396 = *(int *)(v303 + 20);
            v552 = (char *)v300 + v396;
            __dstk = (char *)v299 + v396;
            uint64_t v397 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v397 - 8) + 32))(__dstk, v552, v397);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v299, 0, 1, v303);
          }
          uint64_t v398 = *(int *)(v301 + 20);
          uint64_t v399 = (char *)v299 + v398;
          uint64_t v400 = (char *)v300 + v398;
          uint64_t v401 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v401 - 8) + 32))(v399, v400, v401);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v299, 0, 1, v301);
        }
        *(_OWORD *)((char *)a1 + v28[10]) = *(_OWORD *)((char *)a2 + v28[10]);
        uint64_t v402 = v28[11];
        uint64_t v403 = (char *)a1 + v402;
        int v404 = (char *)a2 + v402;
        uint64_t v405 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v405 - 8) + 32))(v403, v404, v405);
        goto LABEL_242;
    }
  }
  sub_2536FA73C();
LABEL_18:
  uint64_t v27 = sub_253462A5C(&qword_269CE04B0);
  memcpy(a1, a2, *(void *)(*(void *)(v27 - 8) + 64));
LABEL_243:
  uint64_t v467 = *(int *)(v6 + 20);
  uint64_t v468 = (char *)a1 + v467;
  int v469 = (char *)a2 + v467;
  uint64_t v470 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v470 - 8) + 40))(v468, v469, v470);
LABEL_244:
  uint64_t v471 = a3[5];
  v472 = (void *)((char *)a1 + v471);
  uint64_t v473 = (void *)((char *)a2 + v471);
  uint64_t v474 = type metadata accessor for TranscriptProtoStatementID(0);
  int v475 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v472, 1, v474);
  int v476 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v473, 1, v474);
  if (v475)
  {
    if (!v476)
    {
      *(_DWORD *)v472 = *(_DWORD *)v473;
      *(_OWORD *)(v472 + 1) = *(_OWORD *)(v473 + 1);
      uint64_t v477 = *(int *)(v474 + 24);
      uint64_t v478 = (char *)v472 + v477;
      int v479 = (char *)v473 + v477;
      uint64_t v480 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v480 - 8) + 32))(v478, v479, v480);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v472, 0, 1, v474);
      goto LABEL_250;
    }
    goto LABEL_249;
  }
  if (v476)
  {
    sub_2536FA73C();
LABEL_249:
    uint64_t v481 = sub_253462A5C(&qword_26B249528);
    memcpy(v472, v473, *(void *)(*(void *)(v481 - 8) + 64));
    goto LABEL_250;
  }
  *(_DWORD *)v472 = *(_DWORD *)v473;
  uint64_t v517 = v473[2];
  v472[1] = v473[1];
  v472[2] = v517;
  swift_bridgeObjectRelease();
  uint64_t v518 = *(int *)(v474 + 24);
  uint64_t v519 = (char *)v472 + v518;
  uint64_t v520 = (char *)v473 + v518;
  uint64_t v521 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v521 - 8) + 40))(v519, v520, v521);
LABEL_250:
  uint64_t v482 = a3[6];
  uint64_t v483 = (void *)((char *)a1 + v482);
  uint64_t v484 = (void *)((char *)a2 + v482);
  int v485 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1 + v482, 1, v474);
  int v486 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v484, 1, v474);
  if (v485)
  {
    if (!v486)
    {
      *(_DWORD *)uint64_t v483 = *(_DWORD *)v484;
      *(_OWORD *)(v483 + 1) = *(_OWORD *)(v484 + 1);
      uint64_t v487 = *(int *)(v474 + 24);
      uint64_t v488 = (char *)v483 + v487;
      uint64_t v489 = (char *)v484 + v487;
      uint64_t v490 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v490 - 8) + 32))(v488, v489, v490);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v483, 0, 1, v474);
      goto LABEL_256;
    }
    goto LABEL_255;
  }
  if (v486)
  {
    sub_2536FA73C();
LABEL_255:
    uint64_t v491 = sub_253462A5C(&qword_26B249528);
    memcpy(v483, v484, *(void *)(*(void *)(v491 - 8) + 64));
    goto LABEL_256;
  }
  *(_DWORD *)uint64_t v483 = *(_DWORD *)v484;
  uint64_t v522 = v484[2];
  v483[1] = v484[1];
  v483[2] = v522;
  swift_bridgeObjectRelease();
  uint64_t v523 = *(int *)(v474 + 24);
  uint64_t v524 = (char *)v483 + v523;
  uint64_t v525 = (char *)v484 + v523;
  uint64_t v526 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v526 - 8) + 40))(v524, v525, v526);
LABEL_256:
  uint64_t v492 = a3[7];
  uint64_t v493 = (void *)((char *)a1 + v492);
  v494 = (void *)((char *)a2 + v492);
  uint64_t v496 = *v494;
  uint64_t v495 = v494[1];
  *uint64_t v493 = v496;
  v493[1] = v495;
  swift_bridgeObjectRelease();
  uint64_t v497 = a3[8];
  int v498 = (void *)((char *)a1 + v497);
  int v499 = (void *)((char *)a2 + v497);
  uint64_t v501 = *v499;
  uint64_t v500 = v499[1];
  *int v498 = v501;
  v498[1] = v500;
  swift_bridgeObjectRelease();
  uint64_t v502 = a3[9];
  uint64_t v503 = (uint64_t)a1 + v502;
  uint64_t v504 = (uint64_t)a2 + v502;
  int v505 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1 + v502, 1, v474);
  int v506 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v504, 1, v474);
  if (!v505)
  {
    if (!v506)
    {
      *(_DWORD *)uint64_t v503 = *(_DWORD *)v504;
      uint64_t v527 = *(void *)(v504 + 16);
      *(void *)(v503 + 8) = *(void *)(v504 + 8);
      *(void *)(v503 + 16) = v527;
      swift_bridgeObjectRelease();
      uint64_t v528 = *(int *)(v474 + 24);
      uint64_t v529 = v503 + v528;
      uint64_t v530 = v504 + v528;
      uint64_t v531 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v531 - 8) + 40))(v529, v530, v531);
      goto LABEL_262;
    }
    sub_2536FA73C();
    goto LABEL_261;
  }
  if (v506)
  {
LABEL_261:
    uint64_t v511 = sub_253462A5C(&qword_26B249528);
    memcpy((void *)v503, (const void *)v504, *(void *)(*(void *)(v511 - 8) + 64));
    goto LABEL_262;
  }
  *(_DWORD *)uint64_t v503 = *(_DWORD *)v504;
  *(_OWORD *)(v503 + 8) = *(_OWORD *)(v504 + 8);
  uint64_t v507 = *(int *)(v474 + 24);
  uint64_t v508 = v503 + v507;
  uint64_t v509 = v504 + v507;
  uint64_t v510 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v510 - 8) + 32))(v508, v509, v510);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v503, 0, 1, v474);
LABEL_262:
  uint64_t v512 = a3[10];
  uint64_t v513 = (char *)a1 + v512;
  uint64_t v514 = (char *)a2 + v512;
  uint64_t v515 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v515 - 8) + 40))(v513, v514, v515);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoInterpretedStatementResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2539268F0);
}

uint64_t sub_2539268F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2534DA0C4();
  sub_253462A5C(&qword_269CE0388);
  sub_2535782A8();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    uint64_t v7 = sub_253945320();
  }
  else
  {
    sub_253462A5C(&qword_26B249528);
    sub_2535782A8();
    if (*(_DWORD *)(v9 + 84) == v3)
    {
      sub_2535E263C();
    }
    else
    {
      sub_253945F98();
      if (v11) {
        return sub_2535E2258(*(void *)(v4 + *(int *)(a3 + 28) + 8));
      }
      sub_253B07160();
      sub_2539455B8();
    }
    uint64_t v7 = v4 + v10;
  }
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, v3, v8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoInterpretedStatementResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2539269CC);
}

void sub_2539269CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_2534DA0C4();
  sub_253462A5C(&qword_269CE0388);
  sub_2535782A8();
  if (*(_DWORD *)(v6 + 84) == a3)
  {
    sub_253944FD8();
  }
  else
  {
    sub_253462A5C(&qword_26B249528);
    sub_2535782A8();
    if (*(_DWORD *)(v7 + 84) == a3)
    {
      sub_2535E272C();
    }
    else
    {
      sub_253945FA4();
      if (v8)
      {
        sub_253945524(*(int *)(a4 + 28));
        return;
      }
      sub_253B07160();
      sub_253945614();
    }
  }
  sub_2535E228C();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v9, v10, v11, v12);
}

void sub_253926A90()
{
  sub_253760A08(319, &qword_26B249908, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementOutcome);
  if (v0 <= 0x3F)
  {
    sub_253760A08(319, &qword_26B249530, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
    if (v1 <= 0x3F)
    {
      sub_253B07160();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoProgramStatement(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v7 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
  {
    uint64_t v8 = sub_253462A5C(&qword_26B249528);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v10 = a2[2];
    a1[1] = a2[1];
    a1[2] = v10;
    uint64_t v11 = *(int *)(v7 + 24);
    uint64_t v12 = (char *)a1 + v11;
    int v13 = (char *)a2 + v11;
    uint64_t v14 = sub_253B07160();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    v15(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
  }
  uint64_t v16 = a3[5];
  uint64_t v17 = (_DWORD *)((char *)a1 + v16);
  uint64_t v18 = (_DWORD *)((char *)a2 + v16);
  uint64_t v19 = type metadata accessor for TranscriptProtoExpression(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
  {
    uint64_t v21 = type metadata accessor for TranscriptProtoExpressionEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v21))
    {
      uint64_t v22 = sub_253462A5C(&qword_269CE2360);
      memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
LABEL_80:
      uint64_t v145 = *(int *)(v19 + 20);
      uint64_t v146 = (char *)v17 + v145;
      uint64_t v147 = (char *)v18 + v145;
      uint64_t v148 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16))(v146, v147, v148);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
      goto LABEL_81;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v17 = *v18;
        uint64_t v25 = *((void *)v18 + 2);
        *((void *)v17 + 1) = *((void *)v18 + 1);
        *((void *)v17 + 2) = v25;
        uint64_t v26 = *(int *)(v7 + 24);
        __dstb = (char *)v18 + v26;
        uint64_t v202 = (char *)v17 + v26;
        uint64_t v27 = sub_253B07160();
        uint64_t v166 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v166(v202, __dstb, v27);
        goto LABEL_79;
      case 2u:
        *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
        uint64_t v203 = type metadata accessor for TranscriptProtoPrefixExpression(0);
        uint64_t v28 = *(int *)(v203 + 20);
        uint64_t v29 = (void *)((char *)v17 + v28);
        uint64_t v30 = (void *)((char *)v18 + v28);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18 + v28, 1, v7))goto LABEL_69; {
        goto LABEL_26;
        }
      case 3u:
        *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
        uint64_t v204 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
        uint64_t v31 = v204[5];
        uint64_t v32 = (void *)((char *)v17 + v31);
        uint64_t v33 = (void *)((char *)v18 + v31);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18 + v31, 1, v7))
        {
          uint64_t v34 = sub_253462A5C(&qword_26B249528);
          memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
          uint64_t v65 = v33[2];
          v32[1] = v33[1];
          v32[2] = v65;
          uint64_t v66 = *(int *)(v7 + 24);
          uint64_t v171 = (char *)v33 + v66;
          __dstg = (char *)v32 + v66;
          uint64_t v67 = sub_253B07160();
          uint64_t v161 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
          swift_bridgeObjectRetain();
          v161(__dstg, v171, v67);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v32, 0, 1, v7);
        }
        uint64_t v68 = v204[6];
        uint64_t v69 = (void *)((char *)v17 + v68);
        uint64_t v70 = (void *)((char *)v18 + v68);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18 + v68, 1, v7))
        {
          uint64_t v71 = sub_253462A5C(&qword_26B249528);
          memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v69 = *(_DWORD *)v70;
          uint64_t v111 = v70[2];
          v69[1] = v70[1];
          v69[2] = v111;
          uint64_t v112 = *(int *)(v7 + 24);
          uint64_t v178 = (char *)v70 + v112;
          __dstn = (char *)v69 + v112;
          uint64_t v113 = sub_253B07160();
          uint64_t v162 = *(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 16);
          swift_bridgeObjectRetain();
          v162(__dstn, v178, v113);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v69, 0, 1, v7);
        }
        uint64_t v114 = v204[7];
        uint64_t v115 = (char *)v17 + v114;
        uint64_t v116 = (char *)v18 + v114;
        uint64_t v117 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16))(v115, v116, v117);
        goto LABEL_79;
      case 4u:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v7))
        {
          uint64_t v35 = sub_253462A5C(&qword_26B249528);
          memcpy(v17, v18, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          *uint64_t v17 = *v18;
          uint64_t v72 = *((void *)v18 + 2);
          *((void *)v17 + 1) = *((void *)v18 + 1);
          *((void *)v17 + 2) = v72;
          uint64_t v73 = *(int *)(v7 + 24);
          __dsth = (char *)v18 + v73;
          uint64_t v209 = (char *)v17 + v73;
          uint64_t v74 = sub_253B07160();
          uint64_t v172 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
          swift_bridgeObjectRetain();
          v172(v209, __dsth, v74);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v7);
        }
        uint64_t v203 = type metadata accessor for TranscriptProtoIndexExpression(0);
        uint64_t v75 = *(int *)(v203 + 20);
        uint64_t v29 = (void *)((char *)v17 + v75);
        uint64_t v30 = (void *)((char *)v18 + v75);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18 + v75, 1, v7))goto LABEL_26; {
        goto LABEL_69;
        }
      case 5u:
        *(void *)uint64_t v17 = *(void *)v18;
        uint64_t updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
        uint64_t v37 = *(int *)(updated + 20);
        __dst = (void *)((char *)v17 + v37);
        uint64_t v203 = updated;
        uint64_t v38 = (void *)((char *)v18 + v37);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, v7))
        {
          uint64_t v39 = sub_253462A5C(&qword_26B249528);
          memcpy(__dst, v38, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          *(_DWORD *)__dst = *(_DWORD *)v38;
          uint64_t v118 = v38[2];
          __dst[1] = v38[1];
          __dst[2] = v118;
          uint64_t v119 = *(int *)(v7 + 24);
          uint64_t v164 = (char *)v38 + v119;
          uint64_t v179 = (char *)__dst + v119;
          uint64_t v120 = sub_253B07160();
          uint64_t v160 = *(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16);
          swift_bridgeObjectRetain();
          v160(v179, v164, v120);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v7);
        }
        goto LABEL_70;
      case 6u:
        *(void *)uint64_t v17 = *(void *)v18;
        uint64_t v40 = type metadata accessor for TranscriptProtoCallExpression(0);
        uint64_t v41 = *(int *)(v40 + 20);
        __dsta = (void *)((char *)v17 + v41);
        uint64_t v203 = v40;
        uint64_t v42 = (void *)((char *)v18 + v41);
        uint64_t v43 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v42, 1, v43))
        {
          uint64_t v44 = sub_253462A5C(&qword_269CE0448);
          memcpy(__dsta, v42, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          uint64_t v121 = v42[1];
          void *__dsta = *v42;
          __dsta[1] = v121;
          uint64_t v122 = v42[3];
          __dsta[2] = v42[2];
          __dsta[3] = v122;
          uint64_t v123 = *(int *)(v43 + 24);
          uint64_t v165 = (char *)v42 + v123;
          uint64_t v180 = (char *)__dsta + v123;
          uint64_t v124 = sub_253B07160();
          uint64_t v159 = *(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v159(v180, v165, v124);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v43);
        }
        goto LABEL_70;
      case 7u:
        *(void *)uint64_t v17 = *(void *)v18;
        uint64_t v45 = *(int *)(type metadata accessor for TranscriptProtoSayExpression(0) + 20);
        __dstc = (char *)v18 + v45;
        uint64_t v205 = (char *)v17 + v45;
        uint64_t v46 = sub_253B07160();
        uint64_t v167 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16);
        swift_bridgeObjectRetain();
        v167(v205, __dstc, v46);
        goto LABEL_79;
      case 8u:
        *(void *)uint64_t v17 = *(void *)v18;
        uint64_t v203 = type metadata accessor for TranscriptProtoPickExpression(0);
        uint64_t v47 = *(int *)(v203 + 20);
        uint64_t v29 = (void *)((char *)v17 + v47);
        uint64_t v30 = (void *)((char *)v18 + v47);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18 + v47, 1, v7))
        {
LABEL_26:
          uint64_t v48 = sub_253462A5C(&qword_26B249528);
          memcpy(v29, v30, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
LABEL_69:
          *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
          uint64_t v125 = v30[2];
          v29[1] = v30[1];
          v29[2] = v125;
          uint64_t v126 = *(int *)(v7 + 24);
          uint64_t v181 = (char *)v30 + v126;
          __dsto = (char *)v29 + v126;
          uint64_t v127 = sub_253B07160();
          uint64_t v163 = *(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16);
          swift_bridgeObjectRetain();
          v163(__dsto, v181, v127);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v29, 0, 1, v7);
        }
LABEL_70:
        uint64_t v128 = *(int *)(v203 + 24);
        uint64_t v129 = (char *)v17 + v128;
        uint64_t v130 = (char *)v18 + v128;
        uint64_t v131 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16))(v129, v130, v131);
        goto LABEL_79;
      case 9u:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v7))
        {
          uint64_t v49 = sub_253462A5C(&qword_26B249528);
          memcpy(v17, v18, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          *uint64_t v17 = *v18;
          uint64_t v76 = *((void *)v18 + 2);
          *((void *)v17 + 1) = *((void *)v18 + 1);
          *((void *)v17 + 2) = v76;
          uint64_t v77 = *(int *)(v7 + 24);
          __dsti = (char *)v18 + v77;
          uint64_t v210 = (char *)v17 + v77;
          uint64_t v78 = sub_253B07160();
          uint64_t v173 = *(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16);
          swift_bridgeObjectRetain();
          v173(v210, __dsti, v78);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v7);
        }
        uint64_t v79 = *(int *)(type metadata accessor for TranscriptProtoConfirmExpression(0) + 20);
        uint64_t v80 = (char *)v17 + v79;
        uint64_t v81 = (char *)v18 + v79;
        uint64_t v82 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16))(v80, v81, v82);
        goto LABEL_79;
      case 0xAu:
        uint64_t v50 = *((void *)v18 + 1);
        *(void *)uint64_t v17 = *(void *)v18;
        *((void *)v17 + 1) = v50;
        *((unsigned char *)v17 + 16) = *((unsigned char *)v18 + 16);
        *(_WORD *)((char *)v17 + 17) = *(_WORD *)((char *)v18 + 17);
        uint64_t v51 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 32);
        __dstd = (char *)v18 + v51;
        uint64_t v206 = (char *)v17 + v51;
        uint64_t v52 = sub_253B07160();
        uint64_t v168 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
        swift_bridgeObjectRetain();
        v168(v206, __dstd, v52);
        goto LABEL_79;
      case 0xBu:
        *(void *)uint64_t v17 = *(void *)v18;
        uint64_t v53 = *(int *)(type metadata accessor for TranscriptProtoStructuredSearchExpression(0) + 20);
        __dste = (char *)v18 + v53;
        uint64_t v207 = (char *)v17 + v53;
        uint64_t v54 = sub_253B07160();
        uint64_t v169 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16);
        swift_bridgeObjectRetain();
        v169(v207, __dste, v54);
        goto LABEL_79;
      case 0xCu:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v7))
        {
          uint64_t v55 = sub_253462A5C(&qword_26B249528);
          memcpy(v17, v18, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          *uint64_t v17 = *v18;
          uint64_t v83 = *((void *)v18 + 2);
          *((void *)v17 + 1) = *((void *)v18 + 1);
          *((void *)v17 + 2) = v83;
          uint64_t v84 = *(int *)(v7 + 24);
          __dstj = (char *)v18 + v84;
          uint64_t v211 = (char *)v17 + v84;
          uint64_t v85 = sub_253B07160();
          uint64_t v174 = *(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16);
          swift_bridgeObjectRetain();
          v174(v211, __dstj, v85);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v7);
        }
        uint64_t v86 = *(int *)(type metadata accessor for TranscriptProtoPickOneExpression(0) + 20);
        uint64_t v87 = (char *)v17 + v86;
        uint64_t v88 = (char *)v18 + v86;
        uint64_t v89 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16))(v87, v88, v89);
        goto LABEL_79;
      case 0xDu:
        *(void *)uint64_t v17 = *(void *)v18;
        uint64_t v56 = *(int *)(type metadata accessor for TranscriptProtoResolveToolExpression(0) + 20);
        __dstf = (char *)v18 + v56;
        uint64_t v208 = (char *)v17 + v56;
        uint64_t v57 = sub_253B07160();
        uint64_t v170 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16);
        swift_bridgeObjectRetain();
        v170(v208, __dstf, v57);
        goto LABEL_79;
      case 0xEu:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v7))
        {
          uint64_t v58 = sub_253462A5C(&qword_26B249528);
          memcpy(v17, v18, *(void *)(*(void *)(v58 - 8) + 64));
        }
        else
        {
          *uint64_t v17 = *v18;
          uint64_t v90 = *((void *)v18 + 2);
          *((void *)v17 + 1) = *((void *)v18 + 1);
          *((void *)v17 + 2) = v90;
          uint64_t v91 = *(int *)(v7 + 24);
          __dstk = (char *)v18 + v91;
          long long v212 = (char *)v17 + v91;
          uint64_t v92 = sub_253B07160();
          uint64_t v175 = *(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 16);
          swift_bridgeObjectRetain();
          v175(v212, __dstk, v92);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v7);
        }
        uint64_t v93 = *(int *)(type metadata accessor for TranscriptProtoUndoExpression(0) + 20);
        uint64_t v94 = (char *)v17 + v93;
        uint64_t v95 = (char *)v18 + v93;
        uint64_t v96 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16))(v94, v95, v96);
        goto LABEL_79;
      case 0xFu:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v7))
        {
          uint64_t v59 = sub_253462A5C(&qword_26B249528);
          memcpy(v17, v18, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          *uint64_t v17 = *v18;
          uint64_t v97 = *((void *)v18 + 2);
          *((void *)v17 + 1) = *((void *)v18 + 1);
          *((void *)v17 + 2) = v97;
          uint64_t v98 = *(int *)(v7 + 24);
          __dstl = (char *)v18 + v98;
          uint64_t v213 = (char *)v17 + v98;
          uint64_t v99 = sub_253B07160();
          uint64_t v176 = *(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16);
          swift_bridgeObjectRetain();
          v176(v213, __dstl, v99);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v7);
        }
        uint64_t v100 = *(int *)(type metadata accessor for TranscriptProtoRejectExpression(0) + 20);
        uint64_t v101 = (char *)v17 + v100;
        uint64_t v102 = (char *)v18 + v100;
        uint64_t v103 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16))(v101, v102, v103);
        goto LABEL_79;
      case 0x10u:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v7))
        {
          uint64_t v60 = sub_253462A5C(&qword_26B249528);
          memcpy(v17, v18, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
          *uint64_t v17 = *v18;
          uint64_t v104 = *((void *)v18 + 2);
          *((void *)v17 + 1) = *((void *)v18 + 1);
          *((void *)v17 + 2) = v104;
          uint64_t v105 = *(int *)(v7 + 24);
          __dstm = (char *)v18 + v105;
          uint64_t v214 = (char *)v17 + v105;
          uint64_t v106 = sub_253B07160();
          uint64_t v177 = *(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 16);
          swift_bridgeObjectRetain();
          v177(v214, __dstm, v106);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v7);
        }
        uint64_t v107 = *(int *)(type metadata accessor for TranscriptProtoCancelExpression(0) + 20);
        uint64_t v108 = (char *)v17 + v107;
        uint64_t v109 = (char *)v18 + v107;
        uint64_t v110 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16))(v108, v109, v110);
        goto LABEL_79;
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x16u:
        uint64_t v61 = sub_253B07160();
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v61 - 8) + 16))(v17, v18, v61);
        goto LABEL_79;
      case 0x15u:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v7))
        {
          uint64_t v62 = sub_253462A5C(&qword_26B249528);
          memcpy(v17, v18, *(void *)(*(void *)(v62 - 8) + 64));
        }
        else
        {
          *uint64_t v17 = *v18;
          uint64_t v132 = *((void *)v18 + 2);
          *((void *)v17 + 1) = *((void *)v18 + 1);
          *((void *)v17 + 2) = v132;
          uint64_t v133 = *(int *)(v7 + 24);
          __dstp = (char *)v18 + v133;
          uint64_t v215 = (char *)v17 + v133;
          uint64_t v134 = sub_253B07160();
          uint64_t v182 = *(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 16);
          swift_bridgeObjectRetain();
          v182(v215, __dstp, v134);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v7);
        }
        uint64_t v135 = *(int *)(type metadata accessor for TranscriptProtoOpenExpression(0) + 20);
        int v136 = (char *)v17 + v135;
        uint64_t v137 = (char *)v18 + v135;
        uint64_t v138 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16))(v136, v137, v138);
        goto LABEL_79;
      default:
        uint64_t v23 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v23))
        {
          uint64_t v24 = sub_253462A5C(&qword_269CE2378);
          memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
          goto LABEL_78;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 5:
            goto LABEL_46;
          case 4:
            *(void *)uint64_t v17 = *(void *)v18;
            uint64_t v139 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
            __dstq = (char *)v18 + v139;
            uint64_t v216 = (char *)v17 + v139;
            uint64_t v140 = sub_253B07160();
            uint64_t v183 = *(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16);
            swift_bridgeObjectRetain();
            v183(v216, __dstq, v140);
            break;
          case 3:
LABEL_46:
            uint64_t v64 = *((void *)v18 + 1);
            *(void *)uint64_t v17 = *(void *)v18;
            *((void *)v17 + 1) = v64;
            swift_bridgeObjectRetain();
            break;
          default:
            memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
LABEL_77:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v23);
LABEL_78:
            uint64_t v141 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
            uint64_t v142 = (char *)v17 + v141;
            uint64_t v143 = (char *)v18 + v141;
            uint64_t v144 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 16))(v142, v143, v144);
LABEL_79:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v21);
            goto LABEL_80;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_77;
    }
  }
  uint64_t v20 = sub_253462A5C(&qword_269CE24E8);
  memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
LABEL_81:
  uint64_t v149 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v150 = (char *)a1 + v149;
  uint64_t v151 = (char *)a2 + v149;
  uint64_t v152 = sub_253B08E60();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v151, 1, v152))
  {
    uint64_t v153 = sub_253462A5C(&qword_269CDFA30);
    memcpy(v150, v151, *(void *)(*(void *)(v153 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 16))(v150, v151, v152);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v150, 0, 1, v152);
  }
  uint64_t v154 = a3[8];
  uint64_t v155 = (char *)a1 + v154;
  uint64_t v156 = (char *)a2 + v154;
  uint64_t v157 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 16))(v155, v156, v157);
  return a1;
}

uint64_t destroy for TranscriptProtoProgramStatement(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = a1 + *(int *)(v4 + 24);
    uint64_t v6 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + a2[5];
  uint64_t v8 = type metadata accessor for TranscriptProtoExpression(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v8))
  {
    uint64_t v9 = type metadata accessor for TranscriptProtoExpressionEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v9))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v11 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v11)) {
            goto LABEL_53;
          }
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          switch(EnumCaseMultiPayload)
          {
            case 5:
              goto LABEL_11;
            case 4:
              swift_bridgeObjectRelease();
              uint64_t v45 = v7 + *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
              uint64_t v46 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8))(v45, v46);
              break;
            case 3:
LABEL_11:
              swift_bridgeObjectRelease();
              break;
          }
LABEL_53:
          uint64_t v28 = type metadata accessor for TranscriptProtoValueExpression(0);
          goto LABEL_54;
        case 1u:
          swift_bridgeObjectRelease();
          goto LABEL_25;
        case 2u:
          uint64_t updated = type metadata accessor for TranscriptProtoPrefixExpression(0);
          goto LABEL_28;
        case 3u:
          uint64_t v14 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
          uint64_t v15 = v7 + v14[5];
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v15, 1, v4))
          {
            swift_bridgeObjectRelease();
            uint64_t v16 = v15 + *(int *)(v4 + 24);
            uint64_t v17 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
          }
          uint64_t v18 = v7 + v14[6];
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v18, 1, v4))
          {
            swift_bridgeObjectRelease();
            uint64_t v19 = v18 + *(int *)(v4 + 24);
            uint64_t v20 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
          }
          uint64_t v21 = v14[7];
          goto LABEL_55;
        case 4u:
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v4))
          {
            swift_bridgeObjectRelease();
            uint64_t v22 = v7 + *(int *)(v4 + 24);
            uint64_t v23 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
          }
          uint64_t updated = type metadata accessor for TranscriptProtoIndexExpression(0);
          goto LABEL_28;
        case 5u:
          swift_bridgeObjectRelease();
          uint64_t updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
          goto LABEL_28;
        case 6u:
          swift_bridgeObjectRelease();
          uint64_t v4 = type metadata accessor for TranscriptProtoCallExpression(0);
          uint64_t v24 = v7 + *(int *)(v4 + 20);
          uint64_t v25 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v24, 1, v25))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v26 = v24 + *(int *)(v25 + 24);
            uint64_t v27 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
          }
LABEL_25:
          uint64_t v21 = *(int *)(v4 + 24);
          goto LABEL_55;
        case 7u:
          swift_bridgeObjectRelease();
          uint64_t v28 = type metadata accessor for TranscriptProtoSayExpression(0);
          goto LABEL_54;
        case 8u:
          uint64_t updated = type metadata accessor for TranscriptProtoPickExpression(0);
LABEL_28:
          uint64_t v29 = updated;
          uint64_t v30 = v7 + *(int *)(updated + 20);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v30, 1, v4))
          {
            swift_bridgeObjectRelease();
            uint64_t v31 = v30 + *(int *)(v4 + 24);
            uint64_t v32 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
          }
          uint64_t v21 = *(int *)(v29 + 24);
          goto LABEL_55;
        case 9u:
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v4))
          {
            swift_bridgeObjectRelease();
            uint64_t v33 = v7 + *(int *)(v4 + 24);
            uint64_t v34 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
          }
          uint64_t v28 = type metadata accessor for TranscriptProtoConfirmExpression(0);
          goto LABEL_54;
        case 0xAu:
          swift_bridgeObjectRelease();
          uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 32);
          goto LABEL_55;
        case 0xBu:
          swift_bridgeObjectRelease();
          uint64_t v28 = type metadata accessor for TranscriptProtoStructuredSearchExpression(0);
          goto LABEL_54;
        case 0xCu:
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v4))
          {
            swift_bridgeObjectRelease();
            uint64_t v35 = v7 + *(int *)(v4 + 24);
            uint64_t v36 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
          }
          uint64_t v28 = type metadata accessor for TranscriptProtoPickOneExpression(0);
          goto LABEL_54;
        case 0xDu:
          swift_bridgeObjectRelease();
          uint64_t v28 = type metadata accessor for TranscriptProtoResolveToolExpression(0);
          goto LABEL_54;
        case 0xEu:
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v4))
          {
            swift_bridgeObjectRelease();
            uint64_t v37 = v7 + *(int *)(v4 + 24);
            uint64_t v38 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
          }
          uint64_t v28 = type metadata accessor for TranscriptProtoUndoExpression(0);
          goto LABEL_54;
        case 0xFu:
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v4))
          {
            swift_bridgeObjectRelease();
            uint64_t v39 = v7 + *(int *)(v4 + 24);
            uint64_t v40 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
          }
          uint64_t v28 = type metadata accessor for TranscriptProtoRejectExpression(0);
          goto LABEL_54;
        case 0x10u:
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v4))
          {
            swift_bridgeObjectRelease();
            uint64_t v41 = v7 + *(int *)(v4 + 24);
            uint64_t v42 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
          }
          uint64_t v28 = type metadata accessor for TranscriptProtoCancelExpression(0);
          goto LABEL_54;
        case 0x11u:
        case 0x12u:
        case 0x13u:
        case 0x14u:
        case 0x16u:
          uint64_t v10 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v7, v10);
          break;
        case 0x15u:
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v4))
          {
            swift_bridgeObjectRelease();
            uint64_t v43 = v7 + *(int *)(v4 + 24);
            uint64_t v44 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v43, v44);
          }
          uint64_t v28 = type metadata accessor for TranscriptProtoOpenExpression(0);
LABEL_54:
          uint64_t v21 = *(int *)(v28 + 20);
LABEL_55:
          uint64_t v47 = v7 + v21;
          uint64_t v48 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v47, v48);
          break;
        default:
          break;
      }
    }
    uint64_t v49 = v7 + *(int *)(v8 + 20);
    uint64_t v50 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v49, v50);
  }
  uint64_t v51 = a1 + a2[7];
  uint64_t v52 = sub_253B08E60();
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v51, 1, v52)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v51, v52);
  }
  uint64_t v53 = a1 + a2[8];
  uint64_t v54 = sub_253B07160();
  uint64_t v55 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8);
  return v55(v53, v54);
}

void *initializeWithCopy for TranscriptProtoProgramStatement(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_26B249528);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    uint64_t v9 = *(int *)(v6 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_253B07160();
    int v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v14 = a3[5];
  uint64_t v15 = (_DWORD *)((char *)a1 + v14);
  uint64_t v16 = (_DWORD *)((char *)a2 + v14);
  uint64_t v17 = type metadata accessor for TranscriptProtoExpression(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v17))
  {
    uint64_t v18 = sub_253462A5C(&qword_269CE24E8);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_79;
  }
  uint64_t v19 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v19))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v15 = *v16;
        uint64_t v23 = *((void *)v16 + 2);
        *((void *)v15 + 1) = *((void *)v16 + 1);
        *((void *)v15 + 2) = v23;
        uint64_t v24 = *(int *)(v6 + 24);
        __dstb = (char *)v16 + v24;
        int v200 = (char *)v15 + v24;
        uint64_t v25 = sub_253B07160();
        uint64_t v164 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
        swift_bridgeObjectRetain();
        v164(v200, __dstb, v25);
        goto LABEL_77;
      case 2u:
        *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
        uint64_t v201 = type metadata accessor for TranscriptProtoPrefixExpression(0);
        uint64_t v26 = *(int *)(v201 + 20);
        uint64_t v27 = (void *)((char *)v15 + v26);
        uint64_t v28 = (void *)((char *)v16 + v26);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16 + v26, 1, v6))goto LABEL_67; {
        goto LABEL_24;
        }
      case 3u:
        *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
        uint64_t v202 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
        uint64_t v29 = v202[5];
        uint64_t v30 = (void *)((char *)v15 + v29);
        uint64_t v31 = (void *)((char *)v16 + v29);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16 + v29, 1, v6))
        {
          uint64_t v32 = sub_253462A5C(&qword_26B249528);
          memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
          uint64_t v63 = v31[2];
          v30[1] = v31[1];
          v30[2] = v63;
          uint64_t v64 = *(int *)(v6 + 24);
          uint64_t v169 = (char *)v31 + v64;
          __dstg = (char *)v30 + v64;
          uint64_t v65 = sub_253B07160();
          uint64_t v159 = *(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16);
          swift_bridgeObjectRetain();
          v159(__dstg, v169, v65);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v30, 0, 1, v6);
        }
        uint64_t v66 = v202[6];
        uint64_t v67 = (void *)((char *)v15 + v66);
        uint64_t v68 = (void *)((char *)v16 + v66);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16 + v66, 1, v6))
        {
          uint64_t v69 = sub_253462A5C(&qword_26B249528);
          memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v67 = *(_DWORD *)v68;
          uint64_t v109 = v68[2];
          v67[1] = v68[1];
          v67[2] = v109;
          uint64_t v110 = *(int *)(v6 + 24);
          uint64_t v176 = (char *)v68 + v110;
          __dstn = (char *)v67 + v110;
          uint64_t v111 = sub_253B07160();
          uint64_t v160 = *(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16);
          swift_bridgeObjectRetain();
          v160(__dstn, v176, v111);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v67, 0, 1, v6);
        }
        uint64_t v112 = v202[7];
        uint64_t v113 = (char *)v15 + v112;
        uint64_t v114 = (char *)v16 + v112;
        uint64_t v115 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16))(v113, v114, v115);
        goto LABEL_77;
      case 4u:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v6))
        {
          uint64_t v33 = sub_253462A5C(&qword_26B249528);
          memcpy(v15, v16, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          *uint64_t v15 = *v16;
          uint64_t v70 = *((void *)v16 + 2);
          *((void *)v15 + 1) = *((void *)v16 + 1);
          *((void *)v15 + 2) = v70;
          uint64_t v71 = *(int *)(v6 + 24);
          __dsth = (char *)v16 + v71;
          uint64_t v207 = (char *)v15 + v71;
          uint64_t v72 = sub_253B07160();
          uint64_t v170 = *(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16);
          swift_bridgeObjectRetain();
          v170(v207, __dsth, v72);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v6);
        }
        uint64_t v201 = type metadata accessor for TranscriptProtoIndexExpression(0);
        uint64_t v73 = *(int *)(v201 + 20);
        uint64_t v27 = (void *)((char *)v15 + v73);
        uint64_t v28 = (void *)((char *)v16 + v73);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16 + v73, 1, v6))goto LABEL_24; {
        goto LABEL_67;
        }
      case 5u:
        *(void *)uint64_t v15 = *(void *)v16;
        uint64_t updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
        uint64_t v35 = *(int *)(updated + 20);
        __dst = (void *)((char *)v15 + v35);
        uint64_t v201 = updated;
        uint64_t v36 = (void *)((char *)v16 + v35);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v36, 1, v6))
        {
          uint64_t v37 = sub_253462A5C(&qword_26B249528);
          memcpy(__dst, v36, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          *(_DWORD *)__dst = *(_DWORD *)v36;
          uint64_t v116 = v36[2];
          __dst[1] = v36[1];
          __dst[2] = v116;
          uint64_t v117 = *(int *)(v6 + 24);
          uint64_t v162 = (char *)v36 + v117;
          uint64_t v177 = (char *)__dst + v117;
          uint64_t v118 = sub_253B07160();
          uint64_t v158 = *(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16);
          swift_bridgeObjectRetain();
          v158(v177, v162, v118);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v6);
        }
        goto LABEL_68;
      case 6u:
        *(void *)uint64_t v15 = *(void *)v16;
        uint64_t v38 = type metadata accessor for TranscriptProtoCallExpression(0);
        uint64_t v39 = *(int *)(v38 + 20);
        __dsta = (void *)((char *)v15 + v39);
        uint64_t v201 = v38;
        uint64_t v40 = (void *)((char *)v16 + v39);
        uint64_t v41 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v40, 1, v41))
        {
          uint64_t v42 = sub_253462A5C(&qword_269CE0448);
          memcpy(__dsta, v40, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          uint64_t v119 = v40[1];
          void *__dsta = *v40;
          __dsta[1] = v119;
          uint64_t v120 = v40[3];
          __dsta[2] = v40[2];
          __dsta[3] = v120;
          uint64_t v121 = *(int *)(v41 + 24);
          uint64_t v163 = (char *)v40 + v121;
          uint64_t v178 = (char *)__dsta + v121;
          uint64_t v122 = sub_253B07160();
          uint64_t v157 = *(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v157(v178, v163, v122);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v41);
        }
        goto LABEL_68;
      case 7u:
        *(void *)uint64_t v15 = *(void *)v16;
        uint64_t v43 = *(int *)(type metadata accessor for TranscriptProtoSayExpression(0) + 20);
        __dstc = (char *)v16 + v43;
        uint64_t v203 = (char *)v15 + v43;
        uint64_t v44 = sub_253B07160();
        uint64_t v165 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
        swift_bridgeObjectRetain();
        v165(v203, __dstc, v44);
        goto LABEL_77;
      case 8u:
        *(void *)uint64_t v15 = *(void *)v16;
        uint64_t v201 = type metadata accessor for TranscriptProtoPickExpression(0);
        uint64_t v45 = *(int *)(v201 + 20);
        uint64_t v27 = (void *)((char *)v15 + v45);
        uint64_t v28 = (void *)((char *)v16 + v45);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16 + v45, 1, v6))
        {
LABEL_24:
          uint64_t v46 = sub_253462A5C(&qword_26B249528);
          memcpy(v27, v28, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
LABEL_67:
          *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
          uint64_t v123 = v28[2];
          v27[1] = v28[1];
          v27[2] = v123;
          uint64_t v124 = *(int *)(v6 + 24);
          uint64_t v179 = (char *)v28 + v124;
          __dsto = (char *)v27 + v124;
          uint64_t v125 = sub_253B07160();
          uint64_t v161 = *(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 16);
          swift_bridgeObjectRetain();
          v161(__dsto, v179, v125);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v27, 0, 1, v6);
        }
LABEL_68:
        uint64_t v126 = *(int *)(v201 + 24);
        uint64_t v127 = (char *)v15 + v126;
        uint64_t v128 = (char *)v16 + v126;
        uint64_t v129 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 16))(v127, v128, v129);
        goto LABEL_77;
      case 9u:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v6))
        {
          uint64_t v47 = sub_253462A5C(&qword_26B249528);
          memcpy(v15, v16, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          *uint64_t v15 = *v16;
          uint64_t v74 = *((void *)v16 + 2);
          *((void *)v15 + 1) = *((void *)v16 + 1);
          *((void *)v15 + 2) = v74;
          uint64_t v75 = *(int *)(v6 + 24);
          __dsti = (char *)v16 + v75;
          uint64_t v208 = (char *)v15 + v75;
          uint64_t v76 = sub_253B07160();
          uint64_t v171 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16);
          swift_bridgeObjectRetain();
          v171(v208, __dsti, v76);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v6);
        }
        uint64_t v77 = *(int *)(type metadata accessor for TranscriptProtoConfirmExpression(0) + 20);
        uint64_t v78 = (char *)v15 + v77;
        uint64_t v79 = (char *)v16 + v77;
        uint64_t v80 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v78, v79, v80);
        goto LABEL_77;
      case 0xAu:
        uint64_t v48 = *((void *)v16 + 1);
        *(void *)uint64_t v15 = *(void *)v16;
        *((void *)v15 + 1) = v48;
        *((unsigned char *)v15 + 16) = *((unsigned char *)v16 + 16);
        *(_WORD *)((char *)v15 + 17) = *(_WORD *)((char *)v16 + 17);
        uint64_t v49 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 32);
        __dstd = (char *)v16 + v49;
        uint64_t v204 = (char *)v15 + v49;
        uint64_t v50 = sub_253B07160();
        uint64_t v166 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16);
        swift_bridgeObjectRetain();
        v166(v204, __dstd, v50);
        goto LABEL_77;
      case 0xBu:
        *(void *)uint64_t v15 = *(void *)v16;
        uint64_t v51 = *(int *)(type metadata accessor for TranscriptProtoStructuredSearchExpression(0) + 20);
        __dste = (char *)v16 + v51;
        uint64_t v205 = (char *)v15 + v51;
        uint64_t v52 = sub_253B07160();
        uint64_t v167 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
        swift_bridgeObjectRetain();
        v167(v205, __dste, v52);
        goto LABEL_77;
      case 0xCu:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v6))
        {
          uint64_t v53 = sub_253462A5C(&qword_26B249528);
          memcpy(v15, v16, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          *uint64_t v15 = *v16;
          uint64_t v81 = *((void *)v16 + 2);
          *((void *)v15 + 1) = *((void *)v16 + 1);
          *((void *)v15 + 2) = v81;
          uint64_t v82 = *(int *)(v6 + 24);
          __dstj = (char *)v16 + v82;
          uint64_t v209 = (char *)v15 + v82;
          uint64_t v83 = sub_253B07160();
          uint64_t v172 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16);
          swift_bridgeObjectRetain();
          v172(v209, __dstj, v83);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v6);
        }
        uint64_t v84 = *(int *)(type metadata accessor for TranscriptProtoPickOneExpression(0) + 20);
        uint64_t v85 = (char *)v15 + v84;
        uint64_t v86 = (char *)v16 + v84;
        uint64_t v87 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
        goto LABEL_77;
      case 0xDu:
        *(void *)uint64_t v15 = *(void *)v16;
        uint64_t v54 = *(int *)(type metadata accessor for TranscriptProtoResolveToolExpression(0) + 20);
        __dstf = (char *)v16 + v54;
        uint64_t v206 = (char *)v15 + v54;
        uint64_t v55 = sub_253B07160();
        uint64_t v168 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
        swift_bridgeObjectRetain();
        v168(v206, __dstf, v55);
        goto LABEL_77;
      case 0xEu:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v6))
        {
          uint64_t v56 = sub_253462A5C(&qword_26B249528);
          memcpy(v15, v16, *(void *)(*(void *)(v56 - 8) + 64));
        }
        else
        {
          *uint64_t v15 = *v16;
          uint64_t v88 = *((void *)v16 + 2);
          *((void *)v15 + 1) = *((void *)v16 + 1);
          *((void *)v15 + 2) = v88;
          uint64_t v89 = *(int *)(v6 + 24);
          __dstk = (char *)v16 + v89;
          uint64_t v210 = (char *)v15 + v89;
          uint64_t v90 = sub_253B07160();
          uint64_t v173 = *(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16);
          swift_bridgeObjectRetain();
          v173(v210, __dstk, v90);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v6);
        }
        uint64_t v91 = *(int *)(type metadata accessor for TranscriptProtoUndoExpression(0) + 20);
        uint64_t v92 = (char *)v15 + v91;
        uint64_t v93 = (char *)v16 + v91;
        uint64_t v94 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 16))(v92, v93, v94);
        goto LABEL_77;
      case 0xFu:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v6))
        {
          uint64_t v57 = sub_253462A5C(&qword_26B249528);
          memcpy(v15, v16, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          *uint64_t v15 = *v16;
          uint64_t v95 = *((void *)v16 + 2);
          *((void *)v15 + 1) = *((void *)v16 + 1);
          *((void *)v15 + 2) = v95;
          uint64_t v96 = *(int *)(v6 + 24);
          __dstl = (char *)v16 + v96;
          uint64_t v211 = (char *)v15 + v96;
          uint64_t v97 = sub_253B07160();
          uint64_t v174 = *(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16);
          swift_bridgeObjectRetain();
          v174(v211, __dstl, v97);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v6);
        }
        uint64_t v98 = *(int *)(type metadata accessor for TranscriptProtoRejectExpression(0) + 20);
        uint64_t v99 = (char *)v15 + v98;
        uint64_t v100 = (char *)v16 + v98;
        uint64_t v101 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16))(v99, v100, v101);
        goto LABEL_77;
      case 0x10u:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v6))
        {
          uint64_t v58 = sub_253462A5C(&qword_26B249528);
          memcpy(v15, v16, *(void *)(*(void *)(v58 - 8) + 64));
        }
        else
        {
          *uint64_t v15 = *v16;
          uint64_t v102 = *((void *)v16 + 2);
          *((void *)v15 + 1) = *((void *)v16 + 1);
          *((void *)v15 + 2) = v102;
          uint64_t v103 = *(int *)(v6 + 24);
          __dstm = (char *)v16 + v103;
          long long v212 = (char *)v15 + v103;
          uint64_t v104 = sub_253B07160();
          uint64_t v175 = *(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16);
          swift_bridgeObjectRetain();
          v175(v212, __dstm, v104);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v6);
        }
        uint64_t v105 = *(int *)(type metadata accessor for TranscriptProtoCancelExpression(0) + 20);
        uint64_t v106 = (char *)v15 + v105;
        uint64_t v107 = (char *)v16 + v105;
        uint64_t v108 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16))(v106, v107, v108);
        goto LABEL_77;
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x16u:
        uint64_t v59 = sub_253B07160();
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v59 - 8) + 16))(v15, v16, v59);
        goto LABEL_77;
      case 0x15u:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v6))
        {
          uint64_t v60 = sub_253462A5C(&qword_26B249528);
          memcpy(v15, v16, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
          *uint64_t v15 = *v16;
          uint64_t v130 = *((void *)v16 + 2);
          *((void *)v15 + 1) = *((void *)v16 + 1);
          *((void *)v15 + 2) = v130;
          uint64_t v131 = *(int *)(v6 + 24);
          __dstp = (char *)v16 + v131;
          uint64_t v213 = (char *)v15 + v131;
          uint64_t v132 = sub_253B07160();
          uint64_t v180 = *(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 16);
          swift_bridgeObjectRetain();
          v180(v213, __dstp, v132);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v6);
        }
        uint64_t v133 = *(int *)(type metadata accessor for TranscriptProtoOpenExpression(0) + 20);
        uint64_t v134 = (char *)v15 + v133;
        uint64_t v135 = (char *)v16 + v133;
        uint64_t v136 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 16))(v134, v135, v136);
        goto LABEL_77;
      default:
        uint64_t v21 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v21))
        {
          uint64_t v22 = sub_253462A5C(&qword_269CE2378);
          memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
          goto LABEL_76;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 5:
            goto LABEL_44;
          case 4:
            *(void *)uint64_t v15 = *(void *)v16;
            uint64_t v137 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
            __dstq = (char *)v16 + v137;
            uint64_t v214 = (char *)v15 + v137;
            uint64_t v138 = sub_253B07160();
            uint64_t v181 = *(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16);
            swift_bridgeObjectRetain();
            v181(v214, __dstq, v138);
            break;
          case 3:
LABEL_44:
            uint64_t v62 = *((void *)v16 + 1);
            *(void *)uint64_t v15 = *(void *)v16;
            *((void *)v15 + 1) = v62;
            swift_bridgeObjectRetain();
            break;
          default:
            memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
LABEL_75:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v21);
LABEL_76:
            uint64_t v139 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
            uint64_t v140 = (char *)v15 + v139;
            uint64_t v141 = (char *)v16 + v139;
            uint64_t v142 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 16))(v140, v141, v142);
LABEL_77:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v19);
            goto LABEL_78;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_75;
    }
  }
  uint64_t v20 = sub_253462A5C(&qword_269CE2360);
  memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
LABEL_78:
  uint64_t v143 = *(int *)(v17 + 20);
  uint64_t v144 = (char *)v15 + v143;
  uint64_t v145 = (char *)v16 + v143;
  uint64_t v146 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 16))(v144, v145, v146);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v17);
LABEL_79:
  uint64_t v147 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v148 = (char *)a1 + v147;
  uint64_t v149 = (char *)a2 + v147;
  uint64_t v150 = sub_253B08E60();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v149, 1, v150))
  {
    uint64_t v151 = sub_253462A5C(&qword_269CDFA30);
    memcpy(v148, v149, *(void *)(*(void *)(v151 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 16))(v148, v149, v150);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v148, 0, 1, v150);
  }
  uint64_t v152 = a3[8];
  uint64_t v153 = (char *)a1 + v152;
  uint64_t v154 = (char *)a2 + v152;
  uint64_t v155 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 16))(v153, v154, v155);
  return a1;
}

void *assignWithCopy for TranscriptProtoProgramStatement(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      uint64_t v9 = *(int *)(v6 + 24);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_253B07160();
      int v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v14 = sub_253462A5C(&qword_26B249528);
    memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = *(int *)(v6 + 24);
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 24))(v25, v26, v27);
LABEL_7:
  uint64_t v15 = a3[5];
  uint64_t v16 = (_DWORD *)((char *)a1 + v15);
  uint64_t v17 = (_DWORD *)((char *)a2 + v15);
  uint64_t v18 = type metadata accessor for TranscriptProtoExpression(0);
  int v19 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v18);
  int v20 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      uint64_t v21 = type metadata accessor for TranscriptProtoExpressionEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v21))
      {
        uint64_t v22 = sub_253462A5C(&qword_269CE2360);
        memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
LABEL_187:
        uint64_t v276 = *(int *)(v18 + 20);
        v277 = (char *)v16 + v276;
        uint64_t v278 = (char *)v17 + v276;
        uint64_t v279 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v279 - 8) + 16))(v277, v278, v279);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v18);
        goto LABEL_233;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *uint64_t v16 = *v17;
          *((void *)v16 + 1) = *((void *)v17 + 1);
          *((void *)v16 + 2) = *((void *)v17 + 2);
          uint64_t v38 = *(int *)(v6 + 24);
          __dstf = (char *)v17 + v38;
          uint64_t v500 = (char *)v16 + v38;
          uint64_t v39 = sub_253B07160();
          uint64_t v392 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
          swift_bridgeObjectRetain();
          v392(v500, __dstf, v39);
          goto LABEL_186;
        case 2u:
          *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
          uint64_t v501 = type metadata accessor for TranscriptProtoPrefixExpression(0);
          uint64_t v40 = *(int *)(v501 + 20);
          uint64_t v41 = (void *)((char *)v16 + v40);
          uint64_t v42 = (void *)((char *)v17 + v40);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17 + v40, 1, v6))goto LABEL_118; {
          goto LABEL_100;
          }
        case 3u:
          *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
          uint64_t v502 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
          uint64_t v43 = v502[5];
          uint64_t v44 = (void *)((char *)v16 + v43);
          uint64_t v45 = (void *)((char *)v17 + v43);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17 + v43, 1, v6))
          {
            uint64_t v46 = sub_253462A5C(&qword_26B249528);
            memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
          }
          else
          {
            *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
            v44[1] = v45[1];
            v44[2] = v45[2];
            uint64_t v109 = *(int *)(v6 + 24);
            uint64_t v402 = (char *)v45 + v109;
            __dstp = (char *)v44 + v109;
            uint64_t v110 = sub_253B07160();
            uint64_t v377 = *(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16);
            swift_bridgeObjectRetain();
            v377(__dstp, v402, v110);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v44, 0, 1, v6);
          }
          uint64_t v111 = v502[6];
          uint64_t v112 = (void *)((char *)v16 + v111);
          uint64_t v113 = (void *)((char *)v17 + v111);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17 + v111, 1, v6))
          {
            uint64_t v114 = sub_253462A5C(&qword_26B249528);
            memcpy(v112, v113, *(void *)(*(void *)(v114 - 8) + 64));
          }
          else
          {
            *(_DWORD *)uint64_t v112 = *(_DWORD *)v113;
            v112[1] = v113[1];
            v112[2] = v113[2];
            uint64_t v159 = *(int *)(v6 + 24);
            uint64_t v412 = (char *)v113 + v159;
            __dstx = (char *)v112 + v159;
            uint64_t v160 = sub_253B07160();
            uint64_t v378 = *(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 16);
            swift_bridgeObjectRetain();
            v378(__dstx, v412, v160);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v112, 0, 1, v6);
          }
          uint64_t v161 = v502[7];
          uint64_t v162 = (char *)v16 + v161;
          uint64_t v163 = (char *)v17 + v161;
          uint64_t v164 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 16))(v162, v163, v164);
          goto LABEL_186;
        case 4u:
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v6))
          {
            uint64_t v47 = sub_253462A5C(&qword_26B249528);
            memcpy(v16, v17, *(void *)(*(void *)(v47 - 8) + 64));
          }
          else
          {
            *uint64_t v16 = *v17;
            *((void *)v16 + 1) = *((void *)v17 + 1);
            *((void *)v16 + 2) = *((void *)v17 + 2);
            uint64_t v115 = *(int *)(v6 + 24);
            __dstq = (char *)v17 + v115;
            uint64_t v514 = (char *)v16 + v115;
            uint64_t v116 = sub_253B07160();
            uint64_t v403 = *(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 16);
            swift_bridgeObjectRetain();
            v403(v514, __dstq, v116);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v6);
          }
          uint64_t v501 = type metadata accessor for TranscriptProtoIndexExpression(0);
          uint64_t v117 = *(int *)(v501 + 20);
          uint64_t v41 = (void *)((char *)v16 + v117);
          uint64_t v42 = (void *)((char *)v17 + v117);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17 + v117, 1, v6))goto LABEL_100; {
          goto LABEL_118;
          }
        case 5u:
          *(void *)uint64_t v16 = *(void *)v17;
          uint64_t updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
          uint64_t v49 = *(int *)(updated + 20);
          __dst = (void *)((char *)v16 + v49);
          uint64_t v501 = updated;
          uint64_t v50 = (void *)((char *)v17 + v49);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v50, 1, v6))
          {
            uint64_t v51 = sub_253462A5C(&qword_26B249528);
            memcpy(__dst, v50, *(void *)(*(void *)(v51 - 8) + 64));
          }
          else
          {
            *(_DWORD *)__dst = *(_DWORD *)v50;
            __dst[1] = v50[1];
            __dst[2] = v50[2];
            uint64_t v119 = *(int *)(v6 + 24);
            uint64_t v386 = (char *)v50 + v119;
            int v404 = (char *)__dst + v119;
            uint64_t v120 = sub_253B07160();
            uint64_t v374 = *(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16);
            swift_bridgeObjectRetain();
            v374(v404, v386, v120);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v6);
          }
          goto LABEL_119;
        case 6u:
          *(void *)uint64_t v16 = *(void *)v17;
          uint64_t v52 = type metadata accessor for TranscriptProtoCallExpression(0);
          uint64_t v53 = *(int *)(v52 + 20);
          __dsta = (void *)((char *)v16 + v53);
          uint64_t v501 = v52;
          uint64_t v54 = (void *)((char *)v17 + v53);
          uint64_t v55 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54, 1, v55))
          {
            uint64_t v56 = sub_253462A5C(&qword_269CE0448);
            memcpy(__dsta, v54, *(void *)(*(void *)(v56 - 8) + 64));
          }
          else
          {
            void *__dsta = *v54;
            __dsta[1] = v54[1];
            __dsta[2] = v54[2];
            __dsta[3] = v54[3];
            uint64_t v121 = *(int *)(v55 + 24);
            uint64_t v387 = (char *)v54 + v121;
            uint64_t v405 = (char *)__dsta + v121;
            uint64_t v122 = sub_253B07160();
            uint64_t v371 = *(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v371(v405, v387, v122);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v55);
          }
          goto LABEL_119;
        case 7u:
          *(void *)uint64_t v16 = *(void *)v17;
          uint64_t v57 = *(int *)(type metadata accessor for TranscriptProtoSayExpression(0) + 20);
          __dstg = (char *)v17 + v57;
          uint64_t v503 = (char *)v16 + v57;
          uint64_t v58 = sub_253B07160();
          long long v393 = *(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16);
          swift_bridgeObjectRetain();
          v393(v503, __dstg, v58);
          goto LABEL_186;
        case 8u:
          *(void *)uint64_t v16 = *(void *)v17;
          uint64_t v501 = type metadata accessor for TranscriptProtoPickExpression(0);
          uint64_t v59 = *(int *)(v501 + 20);
          uint64_t v41 = (void *)((char *)v16 + v59);
          uint64_t v42 = (void *)((char *)v17 + v59);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17 + v59, 1, v6))
          {
LABEL_100:
            uint64_t v118 = sub_253462A5C(&qword_26B249528);
            memcpy(v41, v42, *(void *)(*(void *)(v118 - 8) + 64));
          }
          else
          {
LABEL_118:
            *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
            v41[1] = v42[1];
            v41[2] = v42[2];
            uint64_t v165 = *(int *)(v6 + 24);
            uint64_t v413 = (char *)v42 + v165;
            __dsty = (char *)v41 + v165;
            uint64_t v166 = sub_253B07160();
            uint64_t v379 = *(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 16);
            swift_bridgeObjectRetain();
            v379(__dsty, v413, v166);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v41, 0, 1, v6);
          }
LABEL_119:
          uint64_t v167 = *(int *)(v501 + 24);
          uint64_t v168 = (char *)v16 + v167;
          uint64_t v169 = (char *)v17 + v167;
          uint64_t v170 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 16))(v168, v169, v170);
          goto LABEL_186;
        case 9u:
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v6))
          {
            uint64_t v60 = sub_253462A5C(&qword_26B249528);
            memcpy(v16, v17, *(void *)(*(void *)(v60 - 8) + 64));
          }
          else
          {
            *uint64_t v16 = *v17;
            *((void *)v16 + 1) = *((void *)v17 + 1);
            *((void *)v16 + 2) = *((void *)v17 + 2);
            uint64_t v123 = *(int *)(v6 + 24);
            __dstr = (char *)v17 + v123;
            uint64_t v515 = (char *)v16 + v123;
            uint64_t v124 = sub_253B07160();
            int v406 = *(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16);
            swift_bridgeObjectRetain();
            v406(v515, __dstr, v124);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v6);
          }
          uint64_t v125 = *(int *)(type metadata accessor for TranscriptProtoConfirmExpression(0) + 20);
          uint64_t v126 = (char *)v16 + v125;
          uint64_t v127 = (char *)v17 + v125;
          uint64_t v128 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 16))(v126, v127, v128);
          goto LABEL_186;
        case 0xAu:
          *(void *)uint64_t v16 = *(void *)v17;
          *((void *)v16 + 1) = *((void *)v17 + 1);
          *((unsigned char *)v16 + 16) = *((unsigned char *)v17 + 16);
          *((unsigned char *)v16 + 17) = *((unsigned char *)v17 + 17);
          *((unsigned char *)v16 + 18) = *((unsigned char *)v17 + 18);
          uint64_t v61 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 32);
          __dsth = (char *)v17 + v61;
          uint64_t v504 = (char *)v16 + v61;
          uint64_t v62 = sub_253B07160();
          uint64_t v394 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16);
          swift_bridgeObjectRetain();
          v394(v504, __dsth, v62);
          goto LABEL_186;
        case 0xBu:
          *(void *)uint64_t v16 = *(void *)v17;
          uint64_t v63 = *(int *)(type metadata accessor for TranscriptProtoStructuredSearchExpression(0) + 20);
          __dsti = (char *)v17 + v63;
          int v505 = (char *)v16 + v63;
          uint64_t v64 = sub_253B07160();
          uint64_t v395 = *(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16);
          swift_bridgeObjectRetain();
          v395(v505, __dsti, v64);
          goto LABEL_186;
        case 0xCu:
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v6))
          {
            uint64_t v65 = sub_253462A5C(&qword_26B249528);
            memcpy(v16, v17, *(void *)(*(void *)(v65 - 8) + 64));
          }
          else
          {
            *uint64_t v16 = *v17;
            *((void *)v16 + 1) = *((void *)v17 + 1);
            *((void *)v16 + 2) = *((void *)v17 + 2);
            uint64_t v129 = *(int *)(v6 + 24);
            __dsts = (char *)v17 + v129;
            uint64_t v516 = (char *)v16 + v129;
            uint64_t v130 = sub_253B07160();
            uint64_t v407 = *(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16);
            swift_bridgeObjectRetain();
            v407(v516, __dsts, v130);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v6);
          }
          uint64_t v131 = *(int *)(type metadata accessor for TranscriptProtoPickOneExpression(0) + 20);
          uint64_t v132 = (char *)v16 + v131;
          uint64_t v133 = (char *)v17 + v131;
          uint64_t v134 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 16))(v132, v133, v134);
          goto LABEL_186;
        case 0xDu:
          *(void *)uint64_t v16 = *(void *)v17;
          uint64_t v66 = *(int *)(type metadata accessor for TranscriptProtoResolveToolExpression(0) + 20);
          __dstj = (char *)v17 + v66;
          int v506 = (char *)v16 + v66;
          uint64_t v67 = sub_253B07160();
          uint64_t v396 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
          swift_bridgeObjectRetain();
          v396(v506, __dstj, v67);
          goto LABEL_186;
        case 0xEu:
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v6))
          {
            uint64_t v68 = sub_253462A5C(&qword_26B249528);
            memcpy(v16, v17, *(void *)(*(void *)(v68 - 8) + 64));
          }
          else
          {
            *uint64_t v16 = *v17;
            *((void *)v16 + 1) = *((void *)v17 + 1);
            *((void *)v16 + 2) = *((void *)v17 + 2);
            uint64_t v135 = *(int *)(v6 + 24);
            __dstt = (char *)v17 + v135;
            uint64_t v517 = (char *)v16 + v135;
            uint64_t v136 = sub_253B07160();
            uint64_t v408 = *(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 16);
            swift_bridgeObjectRetain();
            v408(v517, __dstt, v136);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v6);
          }
          uint64_t v137 = *(int *)(type metadata accessor for TranscriptProtoUndoExpression(0) + 20);
          uint64_t v138 = (char *)v16 + v137;
          uint64_t v139 = (char *)v17 + v137;
          uint64_t v140 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
          goto LABEL_186;
        case 0xFu:
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v6))
          {
            uint64_t v69 = sub_253462A5C(&qword_26B249528);
            memcpy(v16, v17, *(void *)(*(void *)(v69 - 8) + 64));
          }
          else
          {
            *uint64_t v16 = *v17;
            *((void *)v16 + 1) = *((void *)v17 + 1);
            *((void *)v16 + 2) = *((void *)v17 + 2);
            uint64_t v141 = *(int *)(v6 + 24);
            __dstu = (char *)v17 + v141;
            uint64_t v518 = (char *)v16 + v141;
            uint64_t v142 = sub_253B07160();
            uint64_t v409 = *(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 16);
            swift_bridgeObjectRetain();
            v409(v518, __dstu, v142);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v6);
          }
          uint64_t v143 = *(int *)(type metadata accessor for TranscriptProtoRejectExpression(0) + 20);
          uint64_t v144 = (char *)v16 + v143;
          uint64_t v145 = (char *)v17 + v143;
          uint64_t v146 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 16))(v144, v145, v146);
          goto LABEL_186;
        case 0x10u:
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v6))
          {
            uint64_t v70 = sub_253462A5C(&qword_26B249528);
            memcpy(v16, v17, *(void *)(*(void *)(v70 - 8) + 64));
          }
          else
          {
            *uint64_t v16 = *v17;
            *((void *)v16 + 1) = *((void *)v17 + 1);
            *((void *)v16 + 2) = *((void *)v17 + 2);
            uint64_t v147 = *(int *)(v6 + 24);
            __dstv = (char *)v17 + v147;
            uint64_t v519 = (char *)v16 + v147;
            uint64_t v148 = sub_253B07160();
            uint64_t v410 = *(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16);
            swift_bridgeObjectRetain();
            v410(v519, __dstv, v148);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v6);
          }
          uint64_t v149 = *(int *)(type metadata accessor for TranscriptProtoCancelExpression(0) + 20);
          uint64_t v150 = (char *)v16 + v149;
          uint64_t v151 = (char *)v17 + v149;
          uint64_t v152 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 16))(v150, v151, v152);
          goto LABEL_186;
        case 0x11u:
        case 0x12u:
        case 0x13u:
        case 0x14u:
        case 0x16u:
          uint64_t v71 = sub_253B07160();
          (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v71 - 8) + 16))(v16, v17, v71);
          goto LABEL_186;
        case 0x15u:
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v6))
          {
            uint64_t v72 = sub_253462A5C(&qword_26B249528);
            memcpy(v16, v17, *(void *)(*(void *)(v72 - 8) + 64));
          }
          else
          {
            *uint64_t v16 = *v17;
            *((void *)v16 + 1) = *((void *)v17 + 1);
            *((void *)v16 + 2) = *((void *)v17 + 2);
            uint64_t v153 = *(int *)(v6 + 24);
            __dstw = (char *)v17 + v153;
            uint64_t v520 = (char *)v16 + v153;
            uint64_t v154 = sub_253B07160();
            uint64_t v411 = *(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 16);
            swift_bridgeObjectRetain();
            v411(v520, __dstw, v154);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v6);
          }
          uint64_t v155 = *(int *)(type metadata accessor for TranscriptProtoOpenExpression(0) + 20);
          uint64_t v156 = (char *)v16 + v155;
          uint64_t v157 = (char *)v17 + v155;
          uint64_t v158 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 16))(v156, v157, v158);
          goto LABEL_186;
        default:
          uint64_t v33 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v33))
          {
            uint64_t v34 = sub_253462A5C(&qword_269CE2378);
            memcpy(v16, v17, *(void *)(*(void *)(v34 - 8) + 64));
            goto LABEL_185;
          }
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          switch(EnumCaseMultiPayload)
          {
            case 5:
              goto LABEL_93;
            case 4:
              *(void *)uint64_t v16 = *(void *)v17;
              uint64_t v270 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
              __dstbo = (char *)v17 + v270;
              uint64_t v535 = (char *)v16 + v270;
              uint64_t v271 = sub_253B07160();
              uint64_t v431 = *(void (**)(char *, char *, uint64_t))(*(void *)(v271 - 8) + 16);
              swift_bridgeObjectRetain();
              v431(v535, __dstbo, v271);
              break;
            case 3:
LABEL_93:
              *(void *)uint64_t v16 = *(void *)v17;
              *((void *)v16 + 1) = *((void *)v17 + 1);
              swift_bridgeObjectRetain();
              break;
            default:
              memcpy(v16, v17, *(void *)(*(void *)(v33 - 8) + 64));
LABEL_184:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v33);
LABEL_185:
              uint64_t v272 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
              v273 = (char *)v16 + v272;
              uint64_t v274 = (char *)v17 + v272;
              uint64_t v275 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v275 - 8) + 16))(v273, v274, v275);
LABEL_186:
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v21);
              goto LABEL_187;
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_184;
      }
    }
LABEL_13:
    uint64_t v23 = sub_253462A5C(&qword_269CE24E8);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_233;
  }
  if (v20)
  {
    sub_2536FA73C();
    goto LABEL_13;
  }
  uint64_t v28 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  int v29 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v28);
  int v30 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v28);
  if (v29)
  {
    if (!v30)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *uint64_t v16 = *v17;
          *((void *)v16 + 1) = *((void *)v17 + 1);
          *((void *)v16 + 2) = *((void *)v17 + 2);
          uint64_t v73 = *(int *)(v6 + 24);
          __dstk = (char *)v17 + v73;
          uint64_t v507 = (char *)v16 + v73;
          uint64_t v74 = sub_253B07160();
          uint64_t v397 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
          swift_bridgeObjectRetain();
          v397(v507, __dstk, v74);
          goto LABEL_224;
        case 2u:
          *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
          uint64_t v508 = type metadata accessor for TranscriptProtoPrefixExpression(0);
          uint64_t v75 = *(int *)(v508 + 20);
          uint64_t v76 = (void *)((char *)v16 + v75);
          uint64_t v77 = (void *)((char *)v17 + v75);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17 + v75, 1, v6))goto LABEL_178; {
          goto LABEL_160;
          }
        case 3u:
          *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
          uint64_t v509 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
          uint64_t v78 = v509[5];
          uint64_t v79 = (void *)((char *)v16 + v78);
          uint64_t v80 = (void *)((char *)v17 + v78);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17 + v78, 1, v6))
          {
            uint64_t v81 = sub_253462A5C(&qword_26B249528);
            memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
          }
          else
          {
            *(_DWORD *)uint64_t v79 = *(_DWORD *)v80;
            v79[1] = v80[1];
            v79[2] = v80[2];
            uint64_t v208 = *(int *)(v6 + 24);
            uint64_t v419 = (char *)v80 + v208;
            __dstbe = (char *)v79 + v208;
            uint64_t v209 = sub_253B07160();
            uint64_t v380 = *(void (**)(char *, char *, uint64_t))(*(void *)(v209 - 8) + 16);
            swift_bridgeObjectRetain();
            v380(__dstbe, v419, v209);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v79, 0, 1, v6);
          }
          uint64_t v210 = v509[6];
          uint64_t v211 = (void *)((char *)v16 + v210);
          long long v212 = (void *)((char *)v17 + v210);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17 + v210, 1, v6))
          {
            uint64_t v213 = sub_253462A5C(&qword_26B249528);
            memcpy(v211, v212, *(void *)(*(void *)(v213 - 8) + 64));
          }
          else
          {
            *(_DWORD *)uint64_t v211 = *(_DWORD *)v212;
            v211[1] = v212[1];
            v211[2] = v212[2];
            uint64_t v258 = *(int *)(v6 + 24);
            uint64_t v429 = (char *)v212 + v258;
            __dstbm = (char *)v211 + v258;
            uint64_t v259 = sub_253B07160();
            uint64_t v381 = *(void (**)(char *, char *, uint64_t))(*(void *)(v259 - 8) + 16);
            swift_bridgeObjectRetain();
            v381(__dstbm, v429, v259);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v211, 0, 1, v6);
          }
          uint64_t v260 = v509[7];
          uint64_t v261 = (char *)v16 + v260;
          uint64_t v262 = (char *)v17 + v260;
          uint64_t v263 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v263 - 8) + 16))(v261, v262, v263);
          goto LABEL_224;
        case 4u:
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v6))
          {
            uint64_t v82 = sub_253462A5C(&qword_26B249528);
            memcpy(v16, v17, *(void *)(*(void *)(v82 - 8) + 64));
          }
          else
          {
            *uint64_t v16 = *v17;
            *((void *)v16 + 1) = *((void *)v17 + 1);
            *((void *)v16 + 2) = *((void *)v17 + 2);
            uint64_t v214 = *(int *)(v6 + 24);
            __dstbf = (char *)v17 + v214;
            uint64_t v528 = (char *)v16 + v214;
            uint64_t v215 = sub_253B07160();
            uint64_t v420 = *(void (**)(char *, char *, uint64_t))(*(void *)(v215 - 8) + 16);
            swift_bridgeObjectRetain();
            v420(v528, __dstbf, v215);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v6);
          }
          uint64_t v508 = type metadata accessor for TranscriptProtoIndexExpression(0);
          uint64_t v216 = *(int *)(v508 + 20);
          uint64_t v76 = (void *)((char *)v16 + v216);
          uint64_t v77 = (void *)((char *)v17 + v216);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17 + v216, 1, v6))goto LABEL_160; {
          goto LABEL_178;
          }
        case 5u:
          *(void *)uint64_t v16 = *(void *)v17;
          uint64_t v83 = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
          uint64_t v84 = *(int *)(v83 + 20);
          __dstb = (void *)((char *)v16 + v84);
          uint64_t v508 = v83;
          uint64_t v85 = (void *)((char *)v17 + v84);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v85, 1, v6))
          {
            uint64_t v86 = sub_253462A5C(&qword_26B249528);
            memcpy(__dstb, v85, *(void *)(*(void *)(v86 - 8) + 64));
          }
          else
          {
            *(_DWORD *)__dstb = *(_DWORD *)v85;
            __dstb[1] = v85[1];
            __dstb[2] = v85[2];
            uint64_t v218 = *(int *)(v6 + 24);
            uint64_t v388 = (char *)v85 + v218;
            uint64_t v421 = (char *)__dstb + v218;
            uint64_t v219 = sub_253B07160();
            uint64_t v375 = *(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 16);
            swift_bridgeObjectRetain();
            v375(v421, v388, v219);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstb, 0, 1, v6);
          }
          goto LABEL_179;
        case 6u:
          *(void *)uint64_t v16 = *(void *)v17;
          uint64_t v87 = type metadata accessor for TranscriptProtoCallExpression(0);
          uint64_t v88 = *(int *)(v87 + 20);
          __dstc = (void *)((char *)v16 + v88);
          uint64_t v508 = v87;
          uint64_t v89 = (void *)((char *)v17 + v88);
          uint64_t v90 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v89, 1, v90))
          {
            uint64_t v91 = sub_253462A5C(&qword_269CE0448);
            memcpy(__dstc, v89, *(void *)(*(void *)(v91 - 8) + 64));
          }
          else
          {
            void *__dstc = *v89;
            __dstc[1] = v89[1];
            __dstc[2] = v89[2];
            __dstc[3] = v89[3];
            uint64_t v220 = *(int *)(v90 + 24);
            uint64_t v389 = (char *)v89 + v220;
            uint64_t v422 = (char *)__dstc + v220;
            uint64_t v221 = sub_253B07160();
            uint64_t v372 = *(void (**)(char *, char *, uint64_t))(*(void *)(v221 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v372(v422, v389, v221);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstc, 0, 1, v90);
          }
          goto LABEL_179;
        case 7u:
          *(void *)uint64_t v16 = *(void *)v17;
          uint64_t v92 = *(int *)(type metadata accessor for TranscriptProtoSayExpression(0) + 20);
          __dstl = (char *)v17 + v92;
          uint64_t v510 = (char *)v16 + v92;
          uint64_t v93 = sub_253B07160();
          uint64_t v398 = *(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16);
          swift_bridgeObjectRetain();
          v398(v510, __dstl, v93);
          goto LABEL_224;
        case 8u:
          *(void *)uint64_t v16 = *(void *)v17;
          uint64_t v508 = type metadata accessor for TranscriptProtoPickExpression(0);
          uint64_t v94 = *(int *)(v508 + 20);
          uint64_t v76 = (void *)((char *)v16 + v94);
          uint64_t v77 = (void *)((char *)v17 + v94);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17 + v94, 1, v6))
          {
LABEL_160:
            uint64_t v217 = sub_253462A5C(&qword_26B249528);
            memcpy(v76, v77, *(void *)(*(void *)(v217 - 8) + 64));
          }
          else
          {
LABEL_178:
            *(_DWORD *)uint64_t v76 = *(_DWORD *)v77;
            v76[1] = v77[1];
            v76[2] = v77[2];
            uint64_t v264 = *(int *)(v6 + 24);
            uint64_t v430 = (char *)v77 + v264;
            __dstbn = (char *)v76 + v264;
            uint64_t v265 = sub_253B07160();
            uint64_t v382 = *(void (**)(char *, char *, uint64_t))(*(void *)(v265 - 8) + 16);
            swift_bridgeObjectRetain();
            v382(__dstbn, v430, v265);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v76, 0, 1, v6);
          }
LABEL_179:
          uint64_t v266 = *(int *)(v508 + 24);
          uint64_t v267 = (char *)v16 + v266;
          uint64_t v268 = (char *)v17 + v266;
          uint64_t v269 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v269 - 8) + 16))(v267, v268, v269);
          goto LABEL_224;
        case 9u:
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v6))
          {
            uint64_t v95 = sub_253462A5C(&qword_26B249528);
            memcpy(v16, v17, *(void *)(*(void *)(v95 - 8) + 64));
          }
          else
          {
            *uint64_t v16 = *v17;
            *((void *)v16 + 1) = *((void *)v17 + 1);
            *((void *)v16 + 2) = *((void *)v17 + 2);
            uint64_t v222 = *(int *)(v6 + 24);
            __dstbg = (char *)v17 + v222;
            uint64_t v529 = (char *)v16 + v222;
            uint64_t v223 = sub_253B07160();
            uint64_t v423 = *(void (**)(char *, char *, uint64_t))(*(void *)(v223 - 8) + 16);
            swift_bridgeObjectRetain();
            v423(v529, __dstbg, v223);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v6);
          }
          uint64_t v224 = *(int *)(type metadata accessor for TranscriptProtoConfirmExpression(0) + 20);
          uint64_t v225 = (char *)v16 + v224;
          uint64_t v226 = (char *)v17 + v224;
          uint64_t v227 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v227 - 8) + 16))(v225, v226, v227);
          goto LABEL_224;
        case 0xAu:
          *(void *)uint64_t v16 = *(void *)v17;
          *((void *)v16 + 1) = *((void *)v17 + 1);
          *((unsigned char *)v16 + 16) = *((unsigned char *)v17 + 16);
          *((unsigned char *)v16 + 17) = *((unsigned char *)v17 + 17);
          *((unsigned char *)v16 + 18) = *((unsigned char *)v17 + 18);
          uint64_t v96 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 32);
          __dstm = (char *)v17 + v96;
          uint64_t v511 = (char *)v16 + v96;
          uint64_t v97 = sub_253B07160();
          uint64_t v399 = *(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16);
          swift_bridgeObjectRetain();
          v399(v511, __dstm, v97);
          goto LABEL_224;
        case 0xBu:
          *(void *)uint64_t v16 = *(void *)v17;
          uint64_t v98 = *(int *)(type metadata accessor for TranscriptProtoStructuredSearchExpression(0) + 20);
          __dstn = (char *)v17 + v98;
          uint64_t v512 = (char *)v16 + v98;
          uint64_t v99 = sub_253B07160();
          uint64_t v400 = *(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16);
          swift_bridgeObjectRetain();
          v400(v512, __dstn, v99);
          goto LABEL_224;
        case 0xCu:
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v6))
          {
            uint64_t v100 = sub_253462A5C(&qword_26B249528);
            memcpy(v16, v17, *(void *)(*(void *)(v100 - 8) + 64));
          }
          else
          {
            *uint64_t v16 = *v17;
            *((void *)v16 + 1) = *((void *)v17 + 1);
            *((void *)v16 + 2) = *((void *)v17 + 2);
            uint64_t v228 = *(int *)(v6 + 24);
            __dstbh = (char *)v17 + v228;
            uint64_t v530 = (char *)v16 + v228;
            uint64_t v229 = sub_253B07160();
            uint64_t v424 = *(void (**)(char *, char *, uint64_t))(*(void *)(v229 - 8) + 16);
            swift_bridgeObjectRetain();
            v424(v530, __dstbh, v229);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v6);
          }
          uint64_t v230 = *(int *)(type metadata accessor for TranscriptProtoPickOneExpression(0) + 20);
          uint64_t v231 = (char *)v16 + v230;
          uint64_t v232 = (char *)v17 + v230;
          uint64_t v233 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v233 - 8) + 16))(v231, v232, v233);
          goto LABEL_224;
        case 0xDu:
          *(void *)uint64_t v16 = *(void *)v17;
          uint64_t v101 = *(int *)(type metadata accessor for TranscriptProtoResolveToolExpression(0) + 20);
          __dsto = (char *)v17 + v101;
          uint64_t v513 = (char *)v16 + v101;
          uint64_t v102 = sub_253B07160();
          uint64_t v401 = *(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16);
          swift_bridgeObjectRetain();
          v401(v513, __dsto, v102);
          goto LABEL_224;
        case 0xEu:
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v6))
          {
            uint64_t v103 = sub_253462A5C(&qword_26B249528);
            memcpy(v16, v17, *(void *)(*(void *)(v103 - 8) + 64));
          }
          else
          {
            *uint64_t v16 = *v17;
            *((void *)v16 + 1) = *((void *)v17 + 1);
            *((void *)v16 + 2) = *((void *)v17 + 2);
            uint64_t v234 = *(int *)(v6 + 24);
            __dstbi = (char *)v17 + v234;
            uint64_t v531 = (char *)v16 + v234;
            uint64_t v235 = sub_253B07160();
            uint64_t v425 = *(void (**)(char *, char *, uint64_t))(*(void *)(v235 - 8) + 16);
            swift_bridgeObjectRetain();
            v425(v531, __dstbi, v235);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v6);
          }
          uint64_t v236 = *(int *)(type metadata accessor for TranscriptProtoUndoExpression(0) + 20);
          uint64_t v237 = (char *)v16 + v236;
          v238 = (char *)v17 + v236;
          uint64_t v239 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v239 - 8) + 16))(v237, v238, v239);
          goto LABEL_224;
        case 0xFu:
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v6))
          {
            uint64_t v104 = sub_253462A5C(&qword_26B249528);
            memcpy(v16, v17, *(void *)(*(void *)(v104 - 8) + 64));
          }
          else
          {
            *uint64_t v16 = *v17;
            *((void *)v16 + 1) = *((void *)v17 + 1);
            *((void *)v16 + 2) = *((void *)v17 + 2);
            uint64_t v240 = *(int *)(v6 + 24);
            __dstbj = (char *)v17 + v240;
            uint64_t v532 = (char *)v16 + v240;
            uint64_t v241 = sub_253B07160();
            int v426 = *(void (**)(char *, char *, uint64_t))(*(void *)(v241 - 8) + 16);
            swift_bridgeObjectRetain();
            v426(v532, __dstbj, v241);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v6);
          }
          uint64_t v242 = *(int *)(type metadata accessor for TranscriptProtoRejectExpression(0) + 20);
          uint64_t v243 = (char *)v16 + v242;
          uint64_t v244 = (char *)v17 + v242;
          uint64_t v245 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v245 - 8) + 16))(v243, v244, v245);
          goto LABEL_224;
        case 0x10u:
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v6))
          {
            uint64_t v105 = sub_253462A5C(&qword_26B249528);
            memcpy(v16, v17, *(void *)(*(void *)(v105 - 8) + 64));
          }
          else
          {
            *uint64_t v16 = *v17;
            *((void *)v16 + 1) = *((void *)v17 + 1);
            *((void *)v16 + 2) = *((void *)v17 + 2);
            uint64_t v246 = *(int *)(v6 + 24);
            __dstbk = (char *)v17 + v246;
            v533 = (char *)v16 + v246;
            uint64_t v247 = sub_253B07160();
            uint64_t v427 = *(void (**)(char *, char *, uint64_t))(*(void *)(v247 - 8) + 16);
            swift_bridgeObjectRetain();
            v427(v533, __dstbk, v247);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v6);
          }
          uint64_t v248 = *(int *)(type metadata accessor for TranscriptProtoCancelExpression(0) + 20);
          uint64_t v249 = (char *)v16 + v248;
          uint64_t v250 = (char *)v17 + v248;
          uint64_t v251 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v251 - 8) + 16))(v249, v250, v251);
          goto LABEL_224;
        case 0x11u:
        case 0x12u:
        case 0x13u:
        case 0x14u:
        case 0x16u:
          uint64_t v106 = sub_253B07160();
          (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v106 - 8) + 16))(v16, v17, v106);
          goto LABEL_224;
        case 0x15u:
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v6))
          {
            uint64_t v107 = sub_253462A5C(&qword_26B249528);
            memcpy(v16, v17, *(void *)(*(void *)(v107 - 8) + 64));
          }
          else
          {
            *uint64_t v16 = *v17;
            *((void *)v16 + 1) = *((void *)v17 + 1);
            *((void *)v16 + 2) = *((void *)v17 + 2);
            uint64_t v252 = *(int *)(v6 + 24);
            __dstbl = (char *)v17 + v252;
            uint64_t v534 = (char *)v16 + v252;
            uint64_t v253 = sub_253B07160();
            uint64_t v428 = *(void (**)(char *, char *, uint64_t))(*(void *)(v253 - 8) + 16);
            swift_bridgeObjectRetain();
            v428(v534, __dstbl, v253);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v6);
          }
          uint64_t v254 = *(int *)(type metadata accessor for TranscriptProtoOpenExpression(0) + 20);
          uint64_t v255 = (char *)v16 + v254;
          uint64_t v256 = (char *)v17 + v254;
          uint64_t v257 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v257 - 8) + 16))(v255, v256, v257);
          goto LABEL_224;
        default:
          uint64_t v31 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v31))
          {
            uint64_t v32 = sub_253462A5C(&qword_269CE2378);
            memcpy(v16, v17, *(void *)(*(void *)(v32 - 8) + 64));
            goto LABEL_223;
          }
          int v171 = swift_getEnumCaseMultiPayload();
          switch(v171)
          {
            case 5:
              goto LABEL_123;
            case 4:
              *(void *)uint64_t v16 = *(void *)v17;
              uint64_t v342 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
              __dstbz = (char *)v17 + v342;
              uint64_t v543 = (char *)v16 + v342;
              uint64_t v343 = sub_253B07160();
              uint64_t v444 = *(void (**)(char *, char *, uint64_t))(*(void *)(v343 - 8) + 16);
              swift_bridgeObjectRetain();
              v444(v543, __dstbz, v343);
              goto LABEL_220;
            case 3:
LABEL_123:
              *(void *)uint64_t v16 = *(void *)v17;
              *((void *)v16 + 1) = *((void *)v17 + 1);
              swift_bridgeObjectRetain();
LABEL_220:
              swift_storeEnumTagMultiPayload();
              goto LABEL_222;
          }
          memcpy(v16, v17, *(void *)(*(void *)(v31 - 8) + 64));
LABEL_222:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v31);
LABEL_223:
          uint64_t v344 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
          uint64_t v345 = (char *)v16 + v344;
          uint64_t v346 = (char *)v17 + v344;
          uint64_t v347 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v347 - 8) + 16))(v345, v346, v347);
LABEL_224:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v28);
          break;
      }
      goto LABEL_232;
    }
LABEL_25:
    uint64_t v35 = sub_253462A5C(&qword_269CE2360);
    memcpy(v16, v17, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_232;
  }
  if (v30)
  {
    sub_2536FA73C();
    goto LABEL_25;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v16 = *v17;
        *((void *)v16 + 1) = *((void *)v17 + 1);
        *((void *)v16 + 2) = *((void *)v17 + 2);
        uint64_t v172 = *(int *)(v6 + 24);
        __dstz = (char *)v17 + v172;
        uint64_t v521 = (char *)v16 + v172;
        uint64_t v173 = sub_253B07160();
        v414 = *(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 16);
        swift_bridgeObjectRetain();
        v414(v521, __dstz, v173);
        goto LABEL_231;
      case 2u:
        *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
        uint64_t v522 = type metadata accessor for TranscriptProtoPrefixExpression(0);
        uint64_t v174 = *(int *)(v522 + 20);
        uint64_t v175 = (void *)((char *)v16 + v174);
        uint64_t v176 = (void *)((char *)v17 + v174);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17 + v174, 1, v6))goto LABEL_214; {
        goto LABEL_137;
        }
      case 3u:
        *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
        uint64_t v523 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
        uint64_t v177 = v523[5];
        uint64_t v178 = (void *)((char *)v16 + v177);
        uint64_t v179 = (void *)((char *)v17 + v177);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17 + v177, 1, v6))
        {
          uint64_t v180 = sub_253462A5C(&qword_26B249528);
          memcpy(v178, v179, *(void *)(*(void *)(v180 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v178 = *(_DWORD *)v179;
          v178[1] = v179[1];
          v178[2] = v179[2];
          uint64_t v281 = *(int *)(v6 + 24);
          uint64_t v432 = (char *)v179 + v281;
          __dstbp = (char *)v178 + v281;
          uint64_t v282 = sub_253B07160();
          uint64_t v383 = *(void (**)(char *, char *, uint64_t))(*(void *)(v282 - 8) + 16);
          swift_bridgeObjectRetain();
          v383(__dstbp, v432, v282);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v178, 0, 1, v6);
        }
        uint64_t v283 = v523[6];
        uint64_t v284 = (void *)((char *)v16 + v283);
        uint64_t v285 = (void *)((char *)v17 + v283);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17 + v283, 1, v6))
        {
          uint64_t v286 = sub_253462A5C(&qword_26B249528);
          memcpy(v284, v285, *(void *)(*(void *)(v286 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v284 = *(_DWORD *)v285;
          v284[1] = v285[1];
          v284[2] = v285[2];
          uint64_t v320 = *(int *)(v6 + 24);
          uint64_t v439 = (char *)v285 + v320;
          __dstbw = (char *)v284 + v320;
          uint64_t v321 = sub_253B07160();
          uint64_t v384 = *(void (**)(char *, char *, uint64_t))(*(void *)(v321 - 8) + 16);
          swift_bridgeObjectRetain();
          v384(__dstbw, v439, v321);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v284, 0, 1, v6);
        }
        uint64_t v322 = v523[7];
        v323 = (char *)v16 + v322;
        uint64_t v324 = (char *)v17 + v322;
        uint64_t v325 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v325 - 8) + 16))(v323, v324, v325);
        goto LABEL_231;
      case 4u:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v6))
        {
          uint64_t v181 = sub_253462A5C(&qword_26B249528);
          memcpy(v16, v17, *(void *)(*(void *)(v181 - 8) + 64));
        }
        else
        {
          *uint64_t v16 = *v17;
          *((void *)v16 + 1) = *((void *)v17 + 1);
          *((void *)v16 + 2) = *((void *)v17 + 2);
          uint64_t v287 = *(int *)(v6 + 24);
          __dstbq = (char *)v17 + v287;
          uint64_t v536 = (char *)v16 + v287;
          uint64_t v288 = sub_253B07160();
          uint64_t v433 = *(void (**)(char *, char *, uint64_t))(*(void *)(v288 - 8) + 16);
          swift_bridgeObjectRetain();
          v433(v536, __dstbq, v288);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v6);
        }
        uint64_t v522 = type metadata accessor for TranscriptProtoIndexExpression(0);
        uint64_t v289 = *(int *)(v522 + 20);
        uint64_t v175 = (void *)((char *)v16 + v289);
        uint64_t v176 = (void *)((char *)v17 + v289);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17 + v289, 1, v6))goto LABEL_137; {
        goto LABEL_214;
        }
      case 5u:
        *(void *)uint64_t v16 = *(void *)v17;
        uint64_t v182 = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
        uint64_t v183 = *(int *)(v182 + 20);
        __dstd = (void *)((char *)v16 + v183);
        uint64_t v522 = v182;
        uint64_t v184 = (void *)((char *)v17 + v183);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v184, 1, v6))
        {
          uint64_t v185 = sub_253462A5C(&qword_26B249528);
          memcpy(__dstd, v184, *(void *)(*(void *)(v185 - 8) + 64));
        }
        else
        {
          *(_DWORD *)__dstd = *(_DWORD *)v184;
          __dstd[1] = v184[1];
          __dstd[2] = v184[2];
          uint64_t v326 = *(int *)(v6 + 24);
          uint64_t v390 = (char *)v184 + v326;
          uint64_t v440 = (char *)__dstd + v326;
          uint64_t v327 = sub_253B07160();
          uint64_t v376 = *(void (**)(char *, char *, uint64_t))(*(void *)(v327 - 8) + 16);
          swift_bridgeObjectRetain();
          v376(v440, v390, v327);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstd, 0, 1, v6);
        }
        goto LABEL_215;
      case 6u:
        *(void *)uint64_t v16 = *(void *)v17;
        uint64_t v186 = type metadata accessor for TranscriptProtoCallExpression(0);
        uint64_t v187 = *(int *)(v186 + 20);
        __dste = (void *)((char *)v16 + v187);
        uint64_t v522 = v186;
        uint64_t v188 = (void *)((char *)v17 + v187);
        uint64_t v189 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v188, 1, v189))
        {
          uint64_t v190 = sub_253462A5C(&qword_269CE0448);
          memcpy(__dste, v188, *(void *)(*(void *)(v190 - 8) + 64));
        }
        else
        {
          void *__dste = *v188;
          __dste[1] = v188[1];
          __dste[2] = v188[2];
          __dste[3] = v188[3];
          uint64_t v328 = *(int *)(v189 + 24);
          uint64_t v391 = (char *)v188 + v328;
          uint64_t v441 = (char *)__dste + v328;
          uint64_t v329 = sub_253B07160();
          uint64_t v373 = *(void (**)(char *, char *, uint64_t))(*(void *)(v329 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v373(v441, v391, v329);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dste, 0, 1, v189);
        }
        goto LABEL_215;
      case 7u:
        *(void *)uint64_t v16 = *(void *)v17;
        uint64_t v191 = *(int *)(type metadata accessor for TranscriptProtoSayExpression(0) + 20);
        __dstba = (char *)v17 + v191;
        uint64_t v524 = (char *)v16 + v191;
        uint64_t v192 = sub_253B07160();
        uint64_t v415 = *(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 16);
        swift_bridgeObjectRetain();
        v415(v524, __dstba, v192);
        goto LABEL_231;
      case 8u:
        *(void *)uint64_t v16 = *(void *)v17;
        uint64_t v522 = type metadata accessor for TranscriptProtoPickExpression(0);
        uint64_t v193 = *(int *)(v522 + 20);
        uint64_t v175 = (void *)((char *)v16 + v193);
        uint64_t v176 = (void *)((char *)v17 + v193);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17 + v193, 1, v6))
        {
LABEL_137:
          uint64_t v194 = sub_253462A5C(&qword_26B249528);
          memcpy(v175, v176, *(void *)(*(void *)(v194 - 8) + 64));
        }
        else
        {
LABEL_214:
          *(_DWORD *)uint64_t v175 = *(_DWORD *)v176;
          v175[1] = v176[1];
          v175[2] = v176[2];
          uint64_t v330 = *(int *)(v6 + 24);
          uint64_t v442 = (char *)v176 + v330;
          __dstbx = (char *)v175 + v330;
          uint64_t v331 = sub_253B07160();
          uint64_t v385 = *(void (**)(char *, char *, uint64_t))(*(void *)(v331 - 8) + 16);
          swift_bridgeObjectRetain();
          v385(__dstbx, v442, v331);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v175, 0, 1, v6);
        }
LABEL_215:
        uint64_t v332 = *(int *)(v522 + 24);
        uint64_t v333 = (char *)v16 + v332;
        uint64_t v334 = (char *)v17 + v332;
        uint64_t v335 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v335 - 8) + 16))(v333, v334, v335);
        goto LABEL_231;
      case 9u:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v6))
        {
          uint64_t v195 = sub_253462A5C(&qword_26B249528);
          memcpy(v16, v17, *(void *)(*(void *)(v195 - 8) + 64));
        }
        else
        {
          *uint64_t v16 = *v17;
          *((void *)v16 + 1) = *((void *)v17 + 1);
          *((void *)v16 + 2) = *((void *)v17 + 2);
          uint64_t v290 = *(int *)(v6 + 24);
          __dstbr = (char *)v17 + v290;
          uint64_t v537 = (char *)v16 + v290;
          uint64_t v291 = sub_253B07160();
          uint64_t v434 = *(void (**)(char *, char *, uint64_t))(*(void *)(v291 - 8) + 16);
          swift_bridgeObjectRetain();
          v434(v537, __dstbr, v291);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v6);
        }
        uint64_t v292 = *(int *)(type metadata accessor for TranscriptProtoConfirmExpression(0) + 20);
        long long v293 = (char *)v16 + v292;
        uint64_t v294 = (char *)v17 + v292;
        uint64_t v295 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v295 - 8) + 16))(v293, v294, v295);
        goto LABEL_231;
      case 0xAu:
        *(void *)uint64_t v16 = *(void *)v17;
        *((void *)v16 + 1) = *((void *)v17 + 1);
        *((unsigned char *)v16 + 16) = *((unsigned char *)v17 + 16);
        *((unsigned char *)v16 + 17) = *((unsigned char *)v17 + 17);
        *((unsigned char *)v16 + 18) = *((unsigned char *)v17 + 18);
        uint64_t v196 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 32);
        __dstbb = (char *)v17 + v196;
        uint64_t v525 = (char *)v16 + v196;
        uint64_t v197 = sub_253B07160();
        uint64_t v416 = *(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 16);
        swift_bridgeObjectRetain();
        v416(v525, __dstbb, v197);
        goto LABEL_231;
      case 0xBu:
        *(void *)uint64_t v16 = *(void *)v17;
        uint64_t v198 = *(int *)(type metadata accessor for TranscriptProtoStructuredSearchExpression(0) + 20);
        __dstbc = (char *)v17 + v198;
        uint64_t v526 = (char *)v16 + v198;
        uint64_t v199 = sub_253B07160();
        uint64_t v417 = *(void (**)(char *, char *, uint64_t))(*(void *)(v199 - 8) + 16);
        swift_bridgeObjectRetain();
        v417(v526, __dstbc, v199);
        goto LABEL_231;
      case 0xCu:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v6))
        {
          uint64_t v200 = sub_253462A5C(&qword_26B249528);
          memcpy(v16, v17, *(void *)(*(void *)(v200 - 8) + 64));
        }
        else
        {
          *uint64_t v16 = *v17;
          *((void *)v16 + 1) = *((void *)v17 + 1);
          *((void *)v16 + 2) = *((void *)v17 + 2);
          uint64_t v296 = *(int *)(v6 + 24);
          __dstbs = (char *)v17 + v296;
          uint64_t v538 = (char *)v16 + v296;
          uint64_t v297 = sub_253B07160();
          uint64_t v435 = *(void (**)(char *, char *, uint64_t))(*(void *)(v297 - 8) + 16);
          swift_bridgeObjectRetain();
          v435(v538, __dstbs, v297);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v6);
        }
        uint64_t v298 = *(int *)(type metadata accessor for TranscriptProtoPickOneExpression(0) + 20);
        uint64_t v299 = (char *)v16 + v298;
        v300 = (char *)v17 + v298;
        uint64_t v301 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v301 - 8) + 16))(v299, v300, v301);
        goto LABEL_231;
      case 0xDu:
        *(void *)uint64_t v16 = *(void *)v17;
        uint64_t v201 = *(int *)(type metadata accessor for TranscriptProtoResolveToolExpression(0) + 20);
        __dstbd = (char *)v17 + v201;
        uint64_t v527 = (char *)v16 + v201;
        uint64_t v202 = sub_253B07160();
        uint64_t v418 = *(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 16);
        swift_bridgeObjectRetain();
        v418(v527, __dstbd, v202);
        goto LABEL_231;
      case 0xEu:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v6))
        {
          uint64_t v203 = sub_253462A5C(&qword_26B249528);
          memcpy(v16, v17, *(void *)(*(void *)(v203 - 8) + 64));
        }
        else
        {
          *uint64_t v16 = *v17;
          *((void *)v16 + 1) = *((void *)v17 + 1);
          *((void *)v16 + 2) = *((void *)v17 + 2);
          uint64_t v302 = *(int *)(v6 + 24);
          __dstbt = (char *)v17 + v302;
          uint64_t v539 = (char *)v16 + v302;
          uint64_t v303 = sub_253B07160();
          uint64_t v436 = *(void (**)(char *, char *, uint64_t))(*(void *)(v303 - 8) + 16);
          swift_bridgeObjectRetain();
          v436(v539, __dstbt, v303);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v6);
        }
        uint64_t v304 = *(int *)(type metadata accessor for TranscriptProtoUndoExpression(0) + 20);
        uint64_t v305 = (char *)v16 + v304;
        uint64_t v306 = (char *)v17 + v304;
        uint64_t v307 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v307 - 8) + 16))(v305, v306, v307);
        goto LABEL_231;
      case 0xFu:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v6))
        {
          uint64_t v204 = sub_253462A5C(&qword_26B249528);
          memcpy(v16, v17, *(void *)(*(void *)(v204 - 8) + 64));
        }
        else
        {
          *uint64_t v16 = *v17;
          *((void *)v16 + 1) = *((void *)v17 + 1);
          *((void *)v16 + 2) = *((void *)v17 + 2);
          uint64_t v308 = *(int *)(v6 + 24);
          __dstbu = (char *)v17 + v308;
          v540 = (char *)v16 + v308;
          uint64_t v309 = sub_253B07160();
          uint64_t v437 = *(void (**)(char *, char *, uint64_t))(*(void *)(v309 - 8) + 16);
          swift_bridgeObjectRetain();
          v437(v540, __dstbu, v309);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v6);
        }
        uint64_t v310 = *(int *)(type metadata accessor for TranscriptProtoRejectExpression(0) + 20);
        int v311 = (char *)v16 + v310;
        uint64_t v312 = (char *)v17 + v310;
        uint64_t v313 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v313 - 8) + 16))(v311, v312, v313);
        goto LABEL_231;
      case 0x10u:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v6))
        {
          uint64_t v205 = sub_253462A5C(&qword_26B249528);
          memcpy(v16, v17, *(void *)(*(void *)(v205 - 8) + 64));
        }
        else
        {
          *uint64_t v16 = *v17;
          *((void *)v16 + 1) = *((void *)v17 + 1);
          *((void *)v16 + 2) = *((void *)v17 + 2);
          uint64_t v314 = *(int *)(v6 + 24);
          __dstbv = (char *)v17 + v314;
          uint64_t v541 = (char *)v16 + v314;
          uint64_t v315 = sub_253B07160();
          uint64_t v438 = *(void (**)(char *, char *, uint64_t))(*(void *)(v315 - 8) + 16);
          swift_bridgeObjectRetain();
          v438(v541, __dstbv, v315);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v6);
        }
        uint64_t v316 = *(int *)(type metadata accessor for TranscriptProtoCancelExpression(0) + 20);
        long long v317 = (char *)v16 + v316;
        uint64_t v318 = (char *)v17 + v316;
        uint64_t v319 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v319 - 8) + 16))(v317, v318, v319);
        goto LABEL_231;
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x16u:
        uint64_t v206 = sub_253B07160();
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v206 - 8) + 16))(v16, v17, v206);
        goto LABEL_231;
      case 0x15u:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v6))
        {
          uint64_t v207 = sub_253462A5C(&qword_26B249528);
          memcpy(v16, v17, *(void *)(*(void *)(v207 - 8) + 64));
        }
        else
        {
          *uint64_t v16 = *v17;
          *((void *)v16 + 1) = *((void *)v17 + 1);
          *((void *)v16 + 2) = *((void *)v17 + 2);
          uint64_t v336 = *(int *)(v6 + 24);
          __dstby = (char *)v17 + v336;
          uint64_t v542 = (char *)v16 + v336;
          uint64_t v337 = sub_253B07160();
          uint64_t v443 = *(void (**)(char *, char *, uint64_t))(*(void *)(v337 - 8) + 16);
          swift_bridgeObjectRetain();
          v443(v542, __dstby, v337);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v6);
        }
        uint64_t v338 = *(int *)(type metadata accessor for TranscriptProtoOpenExpression(0) + 20);
        uint64_t v339 = (char *)v16 + v338;
        v340 = (char *)v17 + v338;
        uint64_t v341 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v341 - 8) + 16))(v339, v340, v341);
        goto LABEL_231;
      default:
        uint64_t v36 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v36))
        {
          uint64_t v37 = sub_253462A5C(&qword_269CE2378);
          memcpy(v16, v17, *(void *)(*(void *)(v37 - 8) + 64));
          goto LABEL_230;
        }
        int v280 = swift_getEnumCaseMultiPayload();
        switch(v280)
        {
          case 5:
            goto LABEL_191;
          case 4:
            *(void *)uint64_t v16 = *(void *)v17;
            uint64_t v348 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
            __dstca = (char *)v17 + v348;
            uint64_t v544 = (char *)v16 + v348;
            uint64_t v349 = sub_253B07160();
            uint64_t v445 = *(void (**)(char *, char *, uint64_t))(*(void *)(v349 - 8) + 16);
            swift_bridgeObjectRetain();
            v445(v544, __dstca, v349);
            break;
          case 3:
LABEL_191:
            *(void *)uint64_t v16 = *(void *)v17;
            *((void *)v16 + 1) = *((void *)v17 + 1);
            swift_bridgeObjectRetain();
            break;
          default:
            memcpy(v16, v17, *(void *)(*(void *)(v36 - 8) + 64));
LABEL_229:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v36);
LABEL_230:
            uint64_t v350 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
            uint64_t v351 = (char *)v16 + v350;
            uint64_t v352 = (char *)v17 + v350;
            uint64_t v353 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v353 - 8) + 16))(v351, v352, v353);
LABEL_231:
            swift_storeEnumTagMultiPayload();
            goto LABEL_232;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_229;
    }
  }
LABEL_232:
  uint64_t v354 = *(int *)(v18 + 20);
  uint64_t v355 = (char *)v16 + v354;
  uint64_t v356 = (char *)v17 + v354;
  uint64_t v357 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v357 - 8) + 24))(v355, v356, v357);
LABEL_233:
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v358 = a3[7];
  uint64_t v359 = (char *)a1 + v358;
  uint64_t v360 = (char *)a2 + v358;
  uint64_t v361 = sub_253B08E60();
  int v362 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v359, 1, v361);
  int v363 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v360, 1, v361);
  if (!v362)
  {
    uint64_t v364 = *(void *)(v361 - 8);
    if (!v363)
    {
      (*(void (**)(char *, char *, uint64_t))(v364 + 24))(v359, v360, v361);
      goto LABEL_239;
    }
    (*(void (**)(char *, uint64_t))(v364 + 8))(v359, v361);
    goto LABEL_238;
  }
  if (v363)
  {
LABEL_238:
    uint64_t v365 = sub_253462A5C(&qword_269CDFA30);
    memcpy(v359, v360, *(void *)(*(void *)(v365 - 8) + 64));
    goto LABEL_239;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v361 - 8) + 16))(v359, v360, v361);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v359, 0, 1, v361);
LABEL_239:
  uint64_t v366 = a3[8];
  uint64_t v367 = (char *)a1 + v366;
  uint64_t v368 = (char *)a2 + v366;
  uint64_t v369 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v369 - 8) + 24))(v367, v368, v369);
  return a1;
}

_DWORD *initializeWithTake for TranscriptProtoProgramStatement(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_26B249528);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
    uint64_t v8 = *(int *)(v6 + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v12 = a3[5];
  int v13 = (_DWORD *)((char *)a1 + v12);
  uint64_t v14 = (_DWORD *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for TranscriptProtoExpression(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = sub_253462A5C(&qword_269CE24E8);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = type metadata accessor for TranscriptProtoExpressionEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v17))
    {
      uint64_t v18 = sub_253462A5C(&qword_269CE2360);
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *int v13 = *v14;
          *(_OWORD *)(v13 + 2) = *(_OWORD *)(v14 + 2);
          uint64_t v21 = *(int *)(v6 + 24);
          uint64_t v22 = (char *)v13 + v21;
          uint64_t v23 = (char *)v14 + v21;
          uint64_t v24 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
          break;
        case 2u:
          *(unsigned char *)int v13 = *(unsigned char *)v14;
          uint64_t updated = type metadata accessor for TranscriptProtoPrefixExpression(0);
          uint64_t v25 = *(int *)(updated + 20);
          uint64_t v26 = (_DWORD *)((char *)v13 + v25);
          uint64_t v27 = (_DWORD *)((char *)v14 + v25);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14 + v25, 1, v6))goto LABEL_65; {
          goto LABEL_24;
          }
        case 3u:
          *(unsigned char *)int v13 = *(unsigned char *)v14;
          uint64_t v169 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
          uint64_t v28 = v169[5];
          int v29 = (_DWORD *)((char *)v13 + v28);
          int v30 = (_DWORD *)((char *)v14 + v28);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14 + v28, 1, v6))
          {
            uint64_t v31 = sub_253462A5C(&qword_26B249528);
            memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
          }
          else
          {
            *int v29 = *v30;
            *(_OWORD *)(v29 + 2) = *(_OWORD *)(v30 + 2);
            uint64_t v64 = *(int *)(v6 + 24);
            uint64_t v164 = (char *)v29 + v64;
            uint64_t v65 = (char *)v30 + v64;
            uint64_t v66 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v164, v65, v66);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v29, 0, 1, v6);
          }
          uint64_t v67 = v169[6];
          uint64_t v68 = (_DWORD *)((char *)v13 + v67);
          uint64_t v69 = (_DWORD *)((char *)v14 + v67);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14 + v67, 1, v6))
          {
            uint64_t v70 = sub_253462A5C(&qword_26B249528);
            memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
          }
          else
          {
            *uint64_t v68 = *v69;
            *(_OWORD *)(v68 + 2) = *(_OWORD *)(v69 + 2);
            uint64_t v116 = *(int *)(v6 + 24);
            uint64_t v165 = (char *)v68 + v116;
            uint64_t v117 = (char *)v69 + v116;
            uint64_t v118 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 32))(v165, v117, v118);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v68, 0, 1, v6);
          }
          uint64_t v119 = v169[7];
          uint64_t v120 = (char *)v13 + v119;
          uint64_t v121 = (char *)v14 + v119;
          uint64_t v122 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 32))(v120, v121, v122);
          break;
        case 4u:
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v6))
          {
            uint64_t v32 = sub_253462A5C(&qword_26B249528);
            memcpy(v13, v14, *(void *)(*(void *)(v32 - 8) + 64));
          }
          else
          {
            *int v13 = *v14;
            *(_OWORD *)(v13 + 2) = *(_OWORD *)(v14 + 2);
            uint64_t v71 = *(int *)(v6 + 24);
            uint64_t v72 = (char *)v13 + v71;
            uint64_t v73 = (char *)v14 + v71;
            uint64_t v74 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v13, 0, 1, v6);
          }
          uint64_t updated = type metadata accessor for TranscriptProtoIndexExpression(0);
          uint64_t v75 = *(int *)(updated + 20);
          uint64_t v26 = (_DWORD *)((char *)v13 + v75);
          uint64_t v27 = (_DWORD *)((char *)v14 + v75);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14 + v75, 1, v6))goto LABEL_24; {
          goto LABEL_65;
          }
        case 5u:
          *(void *)int v13 = *(void *)v14;
          uint64_t updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
          uint64_t v33 = *(int *)(updated + 20);
          uint64_t v26 = (_DWORD *)((char *)v13 + v33);
          uint64_t v27 = (_DWORD *)((char *)v14 + v33);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14 + v33, 1, v6))goto LABEL_24; {
          goto LABEL_65;
          }
        case 6u:
          *(void *)int v13 = *(void *)v14;
          uint64_t updated = type metadata accessor for TranscriptProtoCallExpression(0);
          uint64_t v34 = *(int *)(updated + 20);
          uint64_t v35 = (_OWORD *)((char *)v13 + v34);
          uint64_t v36 = (_OWORD *)((char *)v14 + v34);
          uint64_t v37 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v36, 1, v37))
          {
            uint64_t v38 = sub_253462A5C(&qword_269CE0448);
            memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
          }
          else
          {
            long long v127 = v36[1];
            *uint64_t v35 = *v36;
            v35[1] = v127;
            uint64_t v128 = *(int *)(v37 + 24);
            uint64_t v166 = (char *)v35 + v128;
            uint64_t v129 = (char *)v36 + v128;
            uint64_t v130 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 32))(v166, v129, v130);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v35, 0, 1, v37);
          }
          goto LABEL_66;
        case 7u:
          *(void *)int v13 = *(void *)v14;
          uint64_t v39 = *(int *)(type metadata accessor for TranscriptProtoSayExpression(0) + 20);
          uint64_t v40 = (char *)v13 + v39;
          uint64_t v41 = (char *)v14 + v39;
          uint64_t v42 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
          break;
        case 8u:
          *(void *)int v13 = *(void *)v14;
          uint64_t updated = type metadata accessor for TranscriptProtoPickExpression(0);
          uint64_t v43 = *(int *)(updated + 20);
          uint64_t v26 = (_DWORD *)((char *)v13 + v43);
          uint64_t v27 = (_DWORD *)((char *)v14 + v43);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14 + v43, 1, v6))
          {
LABEL_24:
            uint64_t v44 = sub_253462A5C(&qword_26B249528);
            memcpy(v26, v27, *(void *)(*(void *)(v44 - 8) + 64));
          }
          else
          {
LABEL_65:
            _DWORD *v26 = *v27;
            *(_OWORD *)(v26 + 2) = *(_OWORD *)(v27 + 2);
            uint64_t v131 = *(int *)(v6 + 24);
            uint64_t v167 = (char *)v26 + v131;
            uint64_t v132 = (char *)v27 + v131;
            uint64_t v133 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 32))(v167, v132, v133);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v6);
          }
LABEL_66:
          uint64_t v134 = *(int *)(updated + 24);
          uint64_t v135 = (char *)v13 + v134;
          uint64_t v136 = (char *)v14 + v134;
          uint64_t v137 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v135, v136, v137);
          break;
        case 9u:
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v6))
          {
            uint64_t v45 = sub_253462A5C(&qword_26B249528);
            memcpy(v13, v14, *(void *)(*(void *)(v45 - 8) + 64));
          }
          else
          {
            *int v13 = *v14;
            *(_OWORD *)(v13 + 2) = *(_OWORD *)(v14 + 2);
            uint64_t v76 = *(int *)(v6 + 24);
            uint64_t v77 = (char *)v13 + v76;
            uint64_t v78 = (char *)v14 + v76;
            uint64_t v79 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v13, 0, 1, v6);
          }
          uint64_t v80 = *(int *)(type metadata accessor for TranscriptProtoConfirmExpression(0) + 20);
          uint64_t v81 = (char *)v13 + v80;
          uint64_t v82 = (char *)v14 + v80;
          uint64_t v83 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
          break;
        case 0xAu:
          *(_OWORD *)int v13 = *(_OWORD *)v14;
          *((unsigned char *)v13 + 16) = *((unsigned char *)v14 + 16);
          *(_WORD *)((char *)v13 + 17) = *(_WORD *)((char *)v14 + 17);
          uint64_t v46 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 32);
          uint64_t v47 = (char *)v13 + v46;
          uint64_t v48 = (char *)v14 + v46;
          uint64_t v49 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
          break;
        case 0xBu:
          *(void *)int v13 = *(void *)v14;
          uint64_t v50 = *(int *)(type metadata accessor for TranscriptProtoStructuredSearchExpression(0) + 20);
          uint64_t v51 = (char *)v13 + v50;
          uint64_t v52 = (char *)v14 + v50;
          uint64_t v53 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
          break;
        case 0xCu:
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v6))
          {
            uint64_t v54 = sub_253462A5C(&qword_26B249528);
            memcpy(v13, v14, *(void *)(*(void *)(v54 - 8) + 64));
          }
          else
          {
            *int v13 = *v14;
            *(_OWORD *)(v13 + 2) = *(_OWORD *)(v14 + 2);
            uint64_t v84 = *(int *)(v6 + 24);
            uint64_t v85 = (char *)v13 + v84;
            uint64_t v86 = (char *)v14 + v84;
            uint64_t v87 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v85, v86, v87);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v13, 0, 1, v6);
          }
          uint64_t v88 = *(int *)(type metadata accessor for TranscriptProtoPickOneExpression(0) + 20);
          uint64_t v89 = (char *)v13 + v88;
          uint64_t v90 = (char *)v14 + v88;
          uint64_t v91 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 32))(v89, v90, v91);
          break;
        case 0xDu:
          *(void *)int v13 = *(void *)v14;
          uint64_t v55 = *(int *)(type metadata accessor for TranscriptProtoResolveToolExpression(0) + 20);
          uint64_t v56 = (char *)v13 + v55;
          uint64_t v57 = (char *)v14 + v55;
          uint64_t v58 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
          break;
        case 0xEu:
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v6))
          {
            uint64_t v59 = sub_253462A5C(&qword_26B249528);
            memcpy(v13, v14, *(void *)(*(void *)(v59 - 8) + 64));
          }
          else
          {
            *int v13 = *v14;
            *(_OWORD *)(v13 + 2) = *(_OWORD *)(v14 + 2);
            uint64_t v92 = *(int *)(v6 + 24);
            uint64_t v93 = (char *)v13 + v92;
            uint64_t v94 = (char *)v14 + v92;
            uint64_t v95 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 32))(v93, v94, v95);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v13, 0, 1, v6);
          }
          uint64_t v96 = *(int *)(type metadata accessor for TranscriptProtoUndoExpression(0) + 20);
          uint64_t v97 = (char *)v13 + v96;
          uint64_t v98 = (char *)v14 + v96;
          uint64_t v99 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(v97, v98, v99);
          break;
        case 0xFu:
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v6))
          {
            uint64_t v60 = sub_253462A5C(&qword_26B249528);
            memcpy(v13, v14, *(void *)(*(void *)(v60 - 8) + 64));
          }
          else
          {
            *int v13 = *v14;
            *(_OWORD *)(v13 + 2) = *(_OWORD *)(v14 + 2);
            uint64_t v100 = *(int *)(v6 + 24);
            uint64_t v101 = (char *)v13 + v100;
            uint64_t v102 = (char *)v14 + v100;
            uint64_t v103 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 32))(v101, v102, v103);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v13, 0, 1, v6);
          }
          uint64_t v104 = *(int *)(type metadata accessor for TranscriptProtoRejectExpression(0) + 20);
          uint64_t v105 = (char *)v13 + v104;
          uint64_t v106 = (char *)v14 + v104;
          uint64_t v107 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 32))(v105, v106, v107);
          break;
        case 0x10u:
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v6))
          {
            uint64_t v61 = sub_253462A5C(&qword_26B249528);
            memcpy(v13, v14, *(void *)(*(void *)(v61 - 8) + 64));
          }
          else
          {
            *int v13 = *v14;
            *(_OWORD *)(v13 + 2) = *(_OWORD *)(v14 + 2);
            uint64_t v108 = *(int *)(v6 + 24);
            uint64_t v109 = (char *)v13 + v108;
            uint64_t v110 = (char *)v14 + v108;
            uint64_t v111 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 32))(v109, v110, v111);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v13, 0, 1, v6);
          }
          uint64_t v112 = *(int *)(type metadata accessor for TranscriptProtoCancelExpression(0) + 20);
          uint64_t v113 = (char *)v13 + v112;
          uint64_t v114 = (char *)v14 + v112;
          uint64_t v115 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 32))(v113, v114, v115);
          break;
        case 0x11u:
        case 0x12u:
        case 0x13u:
        case 0x14u:
        case 0x16u:
          uint64_t v62 = sub_253B07160();
          (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v62 - 8) + 32))(v13, v14, v62);
          break;
        case 0x15u:
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v6))
          {
            uint64_t v63 = sub_253462A5C(&qword_26B249528);
            memcpy(v13, v14, *(void *)(*(void *)(v63 - 8) + 64));
          }
          else
          {
            *int v13 = *v14;
            *(_OWORD *)(v13 + 2) = *(_OWORD *)(v14 + 2);
            uint64_t v138 = *(int *)(v6 + 24);
            uint64_t v139 = (char *)v13 + v138;
            uint64_t v140 = (char *)v14 + v138;
            uint64_t v141 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 32))(v139, v140, v141);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v13, 0, 1, v6);
          }
          uint64_t v142 = *(int *)(type metadata accessor for TranscriptProtoOpenExpression(0) + 20);
          uint64_t v143 = (char *)v13 + v142;
          uint64_t v144 = (char *)v14 + v142;
          uint64_t v145 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 32))(v143, v144, v145);
          break;
        default:
          uint64_t v19 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v19))
          {
            uint64_t v20 = sub_253462A5C(&qword_269CE2378);
            memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload() == 4)
            {
              *(void *)int v13 = *(void *)v14;
              uint64_t v123 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
              uint64_t v124 = (char *)v13 + v123;
              uint64_t v125 = (char *)v14 + v123;
              uint64_t v126 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 32))(v124, v125, v126);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v13, 0, 1, v19);
          }
          uint64_t v146 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
          uint64_t v147 = (char *)v13 + v146;
          uint64_t v148 = (char *)v14 + v146;
          uint64_t v149 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 32))(v147, v148, v149);
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v13, 0, 1, v17);
    }
    uint64_t v150 = *(int *)(v15 + 20);
    uint64_t v151 = (char *)v13 + v150;
    uint64_t v152 = (char *)v14 + v150;
    uint64_t v153 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 32))(v151, v152, v153);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v13, 0, 1, v15);
  }
  uint64_t v154 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v155 = (char *)a1 + v154;
  uint64_t v156 = (char *)a2 + v154;
  uint64_t v157 = sub_253B08E60();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v156, 1, v157))
  {
    uint64_t v158 = sub_253462A5C(&qword_269CDFA30);
    memcpy(v155, v156, *(void *)(*(void *)(v158 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 32))(v155, v156, v157);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v155, 0, 1, v157);
  }
  uint64_t v159 = a3[8];
  uint64_t v160 = (char *)a1 + v159;
  uint64_t v161 = (char *)a2 + v159;
  uint64_t v162 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 32))(v160, v161, v162);
  return a1;
}

void *assignWithTake for TranscriptProtoProgramStatement(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      uint64_t v9 = *(int *)(v6 + 24);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v13 = sub_253462A5C(&qword_26B249528);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v23 = a2[2];
  a1[1] = a2[1];
  a1[2] = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = *(int *)(v6 + 24);
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
LABEL_7:
  uint64_t v14 = a3[5];
  uint64_t v15 = (uint64_t)a1 + v14;
  uint64_t v16 = (uint64_t)a2 + v14;
  uint64_t v17 = type metadata accessor for TranscriptProtoExpression(0);
  int v18 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v15, 1, v17);
  int v19 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v17);
  if (!v18)
  {
    if (v19)
    {
      sub_2536FA73C();
      goto LABEL_13;
    }
    uint64_t v28 = type metadata accessor for TranscriptProtoExpressionEnum(0);
    int v29 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v15, 1, v28);
    int v30 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v28);
    if (v29)
    {
      if (!v30)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
            *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
            uint64_t v80 = *(int *)(v6 + 24);
            uint64_t v81 = v15 + v80;
            uint64_t v82 = v16 + v80;
            uint64_t v83 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
            break;
          case 2u:
            *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
            uint64_t updated = type metadata accessor for TranscriptProtoPrefixExpression(0);
            uint64_t v84 = *(int *)(updated + 20);
            uint64_t v85 = (_DWORD *)(v15 + v84);
            uint64_t v86 = (_DWORD *)(v16 + v84);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16 + v84, 1, v6)) {
              goto LABEL_179;
            }
            goto LABEL_161;
          case 3u:
            *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
            uint64_t v461 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
            uint64_t v87 = v461[5];
            uint64_t v88 = (_DWORD *)(v15 + v87);
            uint64_t v89 = (_DWORD *)(v16 + v87);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16 + v87, 1, v6))
            {
              uint64_t v90 = sub_253462A5C(&qword_26B249528);
              memcpy(v88, v89, *(void *)(*(void *)(v90 - 8) + 64));
            }
            else
            {
              *uint64_t v88 = *v89;
              *(_OWORD *)(v88 + 2) = *(_OWORD *)(v89 + 2);
              uint64_t v260 = *(int *)(v6 + 24);
              uint64_t v450 = (char *)v88 + v260;
              uint64_t v261 = (char *)v89 + v260;
              uint64_t v262 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v262 - 8) + 32))(v450, v261, v262);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v88, 0, 1, v6);
            }
            uint64_t v263 = v461[6];
            uint64_t v264 = (_DWORD *)(v15 + v263);
            uint64_t v265 = (_DWORD *)(v16 + v263);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16 + v263, 1, v6))
            {
              uint64_t v266 = sub_253462A5C(&qword_26B249528);
              memcpy(v264, v265, *(void *)(*(void *)(v266 - 8) + 64));
            }
            else
            {
              *uint64_t v264 = *v265;
              *(_OWORD *)(v264 + 2) = *(_OWORD *)(v265 + 2);
              uint64_t v325 = *(int *)(v6 + 24);
              uint64_t v452 = (char *)v264 + v325;
              uint64_t v326 = (char *)v265 + v325;
              uint64_t v327 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v327 - 8) + 32))(v452, v326, v327);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v264, 0, 1, v6);
            }
            uint64_t v328 = v461[7];
            uint64_t v329 = v15 + v328;
            uint64_t v330 = v16 + v328;
            uint64_t v331 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v331 - 8) + 32))(v329, v330, v331);
            break;
          case 4u:
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v6))
            {
              uint64_t v91 = sub_253462A5C(&qword_26B249528);
              memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v91 - 8) + 64));
            }
            else
            {
              *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
              *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
              uint64_t v267 = *(int *)(v6 + 24);
              uint64_t v268 = v15 + v267;
              uint64_t v269 = v16 + v267;
              uint64_t v270 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v270 - 8) + 32))(v268, v269, v270);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v6);
            }
            uint64_t updated = type metadata accessor for TranscriptProtoIndexExpression(0);
            uint64_t v271 = *(int *)(updated + 20);
            uint64_t v85 = (_DWORD *)(v15 + v271);
            uint64_t v86 = (_DWORD *)(v16 + v271);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16 + v271, 1, v6)) {
              goto LABEL_161;
            }
            goto LABEL_179;
          case 5u:
            *(void *)uint64_t v15 = *(void *)v16;
            uint64_t updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
            uint64_t v92 = *(int *)(updated + 20);
            uint64_t v85 = (_DWORD *)(v15 + v92);
            uint64_t v86 = (_DWORD *)(v16 + v92);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16 + v92, 1, v6)) {
              goto LABEL_161;
            }
            goto LABEL_179;
          case 6u:
            *(void *)uint64_t v15 = *(void *)v16;
            uint64_t updated = type metadata accessor for TranscriptProtoCallExpression(0);
            uint64_t v93 = *(int *)(updated + 20);
            uint64_t v94 = (_OWORD *)(v15 + v93);
            uint64_t v95 = (_OWORD *)(v16 + v93);
            uint64_t v96 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v95, 1, v96))
            {
              uint64_t v97 = sub_253462A5C(&qword_269CE0448);
              memcpy(v94, v95, *(void *)(*(void *)(v97 - 8) + 64));
            }
            else
            {
              long long v273 = v95[1];
              *uint64_t v94 = *v95;
              v94[1] = v273;
              uint64_t v274 = *(int *)(v96 + 24);
              uint64_t v451 = (char *)v94 + v274;
              uint64_t v275 = (char *)v95 + v274;
              uint64_t v276 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v276 - 8) + 32))(v451, v275, v276);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v94, 0, 1, v96);
            }
            goto LABEL_180;
          case 7u:
            *(void *)uint64_t v15 = *(void *)v16;
            uint64_t v98 = *(int *)(type metadata accessor for TranscriptProtoSayExpression(0) + 20);
            uint64_t v99 = v15 + v98;
            uint64_t v100 = v16 + v98;
            uint64_t v101 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 32))(v99, v100, v101);
            break;
          case 8u:
            *(void *)uint64_t v15 = *(void *)v16;
            uint64_t updated = type metadata accessor for TranscriptProtoPickExpression(0);
            uint64_t v102 = *(int *)(updated + 20);
            uint64_t v85 = (_DWORD *)(v15 + v102);
            uint64_t v86 = (_DWORD *)(v16 + v102);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16 + v102, 1, v6))
            {
LABEL_161:
              uint64_t v272 = sub_253462A5C(&qword_26B249528);
              memcpy(v85, v86, *(void *)(*(void *)(v272 - 8) + 64));
            }
            else
            {
LABEL_179:
              *uint64_t v85 = *v86;
              *(_OWORD *)(v85 + 2) = *(_OWORD *)(v86 + 2);
              uint64_t v332 = *(int *)(v6 + 24);
              uint64_t v453 = (char *)v85 + v332;
              uint64_t v333 = (char *)v86 + v332;
              uint64_t v334 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v334 - 8) + 32))(v453, v333, v334);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v85, 0, 1, v6);
            }
LABEL_180:
            uint64_t v335 = *(int *)(updated + 24);
            uint64_t v336 = v15 + v335;
            uint64_t v337 = v16 + v335;
            uint64_t v338 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v338 - 8) + 32))(v336, v337, v338);
            break;
          case 9u:
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v6))
            {
              uint64_t v103 = sub_253462A5C(&qword_26B249528);
              memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v103 - 8) + 64));
            }
            else
            {
              *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
              *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
              uint64_t v277 = *(int *)(v6 + 24);
              uint64_t v278 = v15 + v277;
              uint64_t v279 = v16 + v277;
              uint64_t v280 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v280 - 8) + 32))(v278, v279, v280);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v6);
            }
            uint64_t v281 = *(int *)(type metadata accessor for TranscriptProtoConfirmExpression(0) + 20);
            uint64_t v282 = v15 + v281;
            uint64_t v283 = v16 + v281;
            uint64_t v284 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v284 - 8) + 32))(v282, v283, v284);
            break;
          case 0xAu:
            *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
            *(unsigned char *)(v15 + 16) = *(unsigned char *)(v16 + 16);
            *(_WORD *)(v15 + 17) = *(_WORD *)(v16 + 17);
            uint64_t v104 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 32);
            uint64_t v105 = v15 + v104;
            uint64_t v106 = v16 + v104;
            uint64_t v107 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 32))(v105, v106, v107);
            break;
          case 0xBu:
            *(void *)uint64_t v15 = *(void *)v16;
            uint64_t v108 = *(int *)(type metadata accessor for TranscriptProtoStructuredSearchExpression(0) + 20);
            uint64_t v109 = v15 + v108;
            uint64_t v110 = v16 + v108;
            uint64_t v111 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v111 - 8) + 32))(v109, v110, v111);
            break;
          case 0xCu:
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v6))
            {
              uint64_t v112 = sub_253462A5C(&qword_26B249528);
              memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v112 - 8) + 64));
            }
            else
            {
              *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
              *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
              uint64_t v285 = *(int *)(v6 + 24);
              uint64_t v286 = v15 + v285;
              uint64_t v287 = v16 + v285;
              uint64_t v288 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v288 - 8) + 32))(v286, v287, v288);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v6);
            }
            uint64_t v289 = *(int *)(type metadata accessor for TranscriptProtoPickOneExpression(0) + 20);
            uint64_t v290 = v15 + v289;
            uint64_t v291 = v16 + v289;
            uint64_t v292 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v292 - 8) + 32))(v290, v291, v292);
            break;
          case 0xDu:
            *(void *)uint64_t v15 = *(void *)v16;
            uint64_t v113 = *(int *)(type metadata accessor for TranscriptProtoResolveToolExpression(0) + 20);
            uint64_t v114 = v15 + v113;
            uint64_t v115 = v16 + v113;
            uint64_t v116 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 32))(v114, v115, v116);
            break;
          case 0xEu:
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v6))
            {
              uint64_t v117 = sub_253462A5C(&qword_26B249528);
              memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v117 - 8) + 64));
            }
            else
            {
              *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
              *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
              uint64_t v293 = *(int *)(v6 + 24);
              uint64_t v294 = v15 + v293;
              uint64_t v295 = v16 + v293;
              uint64_t v296 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v296 - 8) + 32))(v294, v295, v296);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v6);
            }
            uint64_t v297 = *(int *)(type metadata accessor for TranscriptProtoUndoExpression(0) + 20);
            uint64_t v298 = v15 + v297;
            uint64_t v299 = v16 + v297;
            uint64_t v300 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v300 - 8) + 32))(v298, v299, v300);
            break;
          case 0xFu:
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v6))
            {
              uint64_t v118 = sub_253462A5C(&qword_26B249528);
              memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v118 - 8) + 64));
            }
            else
            {
              *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
              *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
              uint64_t v301 = *(int *)(v6 + 24);
              uint64_t v302 = v15 + v301;
              uint64_t v303 = v16 + v301;
              uint64_t v304 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v304 - 8) + 32))(v302, v303, v304);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v6);
            }
            uint64_t v305 = *(int *)(type metadata accessor for TranscriptProtoRejectExpression(0) + 20);
            uint64_t v306 = v15 + v305;
            uint64_t v307 = v16 + v305;
            uint64_t v308 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v308 - 8) + 32))(v306, v307, v308);
            break;
          case 0x10u:
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v6))
            {
              uint64_t v119 = sub_253462A5C(&qword_26B249528);
              memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v119 - 8) + 64));
            }
            else
            {
              *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
              *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
              uint64_t v309 = *(int *)(v6 + 24);
              uint64_t v310 = v15 + v309;
              uint64_t v311 = v16 + v309;
              uint64_t v312 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v312 - 8) + 32))(v310, v311, v312);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v6);
            }
            uint64_t v313 = *(int *)(type metadata accessor for TranscriptProtoCancelExpression(0) + 20);
            uint64_t v314 = v15 + v313;
            uint64_t v315 = v16 + v313;
            uint64_t v316 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v316 - 8) + 32))(v314, v315, v316);
            break;
          case 0x11u:
          case 0x12u:
          case 0x13u:
          case 0x14u:
          case 0x16u:
            uint64_t v120 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 32))(v15, v16, v120);
            break;
          case 0x15u:
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v6))
            {
              uint64_t v121 = sub_253462A5C(&qword_26B249528);
              memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v121 - 8) + 64));
            }
            else
            {
              *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
              *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
              uint64_t v317 = *(int *)(v6 + 24);
              uint64_t v318 = v15 + v317;
              uint64_t v319 = v16 + v317;
              uint64_t v320 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v320 - 8) + 32))(v318, v319, v320);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v6);
            }
            uint64_t v321 = *(int *)(type metadata accessor for TranscriptProtoOpenExpression(0) + 20);
            uint64_t v322 = v15 + v321;
            uint64_t v323 = v16 + v321;
            uint64_t v324 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v324 - 8) + 32))(v322, v323, v324);
            break;
          default:
            uint64_t v31 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v31))
            {
              uint64_t v32 = sub_253462A5C(&qword_269CE2378);
              memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v32 - 8) + 64));
            }
            else
            {
              if (swift_getEnumCaseMultiPayload() == 4)
              {
                *(void *)uint64_t v15 = *(void *)v16;
                uint64_t v213 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
                uint64_t v214 = v15 + v213;
                uint64_t v215 = v16 + v213;
                uint64_t v216 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v216 - 8) + 32))(v214, v215, v216);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v31 - 8) + 64));
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v31);
            }
            uint64_t v339 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
            uint64_t v340 = v15 + v339;
            uint64_t v341 = v16 + v339;
            uint64_t v342 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v342 - 8) + 32))(v340, v341, v342);
            break;
        }
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v28);
        goto LABEL_217;
      }
    }
    else
    {
      if (!v30)
      {
        if (a1 != a2)
        {
          sub_2536FA73C();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
              *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
              uint64_t v217 = *(int *)(v6 + 24);
              uint64_t v218 = v15 + v217;
              uint64_t v219 = v16 + v217;
              uint64_t v220 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v220 - 8) + 32))(v218, v219, v220);
              break;
            case 2u:
              *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
              uint64_t v462 = type metadata accessor for TranscriptProtoPrefixExpression(0);
              uint64_t v221 = *(int *)(v462 + 20);
              uint64_t v222 = (_DWORD *)(v15 + v221);
              uint64_t v223 = (_DWORD *)(v16 + v221);
              if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16 + v221, 1, v6)) {
                goto LABEL_209;
              }
              goto LABEL_138;
            case 3u:
              *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
              uint64_t v463 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
              uint64_t v224 = v463[5];
              uint64_t v225 = (_DWORD *)(v15 + v224);
              uint64_t v226 = (_DWORD *)(v16 + v224);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16 + v224, 1, v6))
              {
                uint64_t v227 = sub_253462A5C(&qword_26B249528);
                memcpy(v225, v226, *(void *)(*(void *)(v227 - 8) + 64));
              }
              else
              {
                *uint64_t v225 = *v226;
                *(_OWORD *)(v225 + 2) = *(_OWORD *)(v226 + 2);
                uint64_t v347 = *(int *)(v6 + 24);
                uint64_t v454 = (char *)v225 + v347;
                uint64_t v348 = (char *)v226 + v347;
                uint64_t v349 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v349 - 8) + 32))(v454, v348, v349);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v225, 0, 1, v6);
              }
              uint64_t v350 = v463[6];
              uint64_t v351 = (_DWORD *)(v15 + v350);
              uint64_t v352 = (_DWORD *)(v16 + v350);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16 + v350, 1, v6))
              {
                uint64_t v353 = sub_253462A5C(&qword_26B249528);
                memcpy(v351, v352, *(void *)(*(void *)(v353 - 8) + 64));
              }
              else
              {
                *uint64_t v351 = *v352;
                *(_OWORD *)(v351 + 2) = *(_OWORD *)(v352 + 2);
                uint64_t v399 = *(int *)(v6 + 24);
                uint64_t v455 = (char *)v351 + v399;
                uint64_t v400 = (char *)v352 + v399;
                uint64_t v401 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v401 - 8) + 32))(v455, v400, v401);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v351, 0, 1, v6);
              }
              uint64_t v402 = v463[7];
              uint64_t v403 = v15 + v402;
              uint64_t v404 = v16 + v402;
              uint64_t v405 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v405 - 8) + 32))(v403, v404, v405);
              break;
            case 4u:
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v6))
              {
                uint64_t v228 = sub_253462A5C(&qword_26B249528);
                memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v228 - 8) + 64));
              }
              else
              {
                *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
                *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
                uint64_t v354 = *(int *)(v6 + 24);
                uint64_t v355 = v15 + v354;
                uint64_t v356 = v16 + v354;
                uint64_t v357 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v357 - 8) + 32))(v355, v356, v357);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v6);
              }
              uint64_t v462 = type metadata accessor for TranscriptProtoIndexExpression(0);
              uint64_t v358 = *(int *)(v462 + 20);
              uint64_t v222 = (_DWORD *)(v15 + v358);
              uint64_t v223 = (_DWORD *)(v16 + v358);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16 + v358, 1, v6)) {
                goto LABEL_138;
              }
              goto LABEL_209;
            case 5u:
              *(void *)uint64_t v15 = *(void *)v16;
              uint64_t v462 = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
              uint64_t v229 = *(int *)(v462 + 20);
              uint64_t v222 = (_DWORD *)(v15 + v229);
              uint64_t v223 = (_DWORD *)(v16 + v229);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16 + v229, 1, v6)) {
                goto LABEL_138;
              }
              goto LABEL_209;
            case 6u:
              *(void *)uint64_t v15 = *(void *)v16;
              uint64_t v462 = type metadata accessor for TranscriptProtoCallExpression(0);
              uint64_t v230 = *(int *)(v462 + 20);
              uint64_t v231 = (_OWORD *)(v15 + v230);
              uint64_t v232 = (_OWORD *)(v16 + v230);
              uint64_t v233 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v232, 1, v233))
              {
                uint64_t v234 = sub_253462A5C(&qword_269CE0448);
                memcpy(v231, v232, *(void *)(*(void *)(v234 - 8) + 64));
              }
              else
              {
                long long v406 = v232[1];
                _OWORD *v231 = *v232;
                v231[1] = v406;
                uint64_t v407 = *(int *)(v233 + 24);
                uint64_t v456 = (char *)v231 + v407;
                uint64_t v408 = (char *)v232 + v407;
                uint64_t v409 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v409 - 8) + 32))(v456, v408, v409);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v231, 0, 1, v233);
              }
              goto LABEL_210;
            case 7u:
              *(void *)uint64_t v15 = *(void *)v16;
              uint64_t v235 = *(int *)(type metadata accessor for TranscriptProtoSayExpression(0) + 20);
              uint64_t v236 = v15 + v235;
              uint64_t v237 = v16 + v235;
              uint64_t v238 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v238 - 8) + 32))(v236, v237, v238);
              break;
            case 8u:
              *(void *)uint64_t v15 = *(void *)v16;
              uint64_t v462 = type metadata accessor for TranscriptProtoPickExpression(0);
              uint64_t v239 = *(int *)(v462 + 20);
              uint64_t v222 = (_DWORD *)(v15 + v239);
              uint64_t v223 = (_DWORD *)(v16 + v239);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16 + v239, 1, v6))
              {
LABEL_138:
                uint64_t v240 = sub_253462A5C(&qword_26B249528);
                memcpy(v222, v223, *(void *)(*(void *)(v240 - 8) + 64));
              }
              else
              {
LABEL_209:
                *uint64_t v222 = *v223;
                *(_OWORD *)(v222 + 2) = *(_OWORD *)(v223 + 2);
                uint64_t v410 = *(int *)(v6 + 24);
                uint64_t v457 = (char *)v222 + v410;
                uint64_t v411 = (char *)v223 + v410;
                uint64_t v412 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v412 - 8) + 32))(v457, v411, v412);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v222, 0, 1, v6);
              }
LABEL_210:
              uint64_t v413 = *(int *)(v462 + 24);
              uint64_t v414 = v15 + v413;
              uint64_t v415 = v16 + v413;
              uint64_t v416 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v416 - 8) + 32))(v414, v415, v416);
              break;
            case 9u:
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v6))
              {
                uint64_t v241 = sub_253462A5C(&qword_26B249528);
                memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v241 - 8) + 64));
              }
              else
              {
                *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
                *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
                uint64_t v359 = *(int *)(v6 + 24);
                uint64_t v360 = v15 + v359;
                uint64_t v361 = v16 + v359;
                uint64_t v362 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v362 - 8) + 32))(v360, v361, v362);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v6);
              }
              uint64_t v363 = *(int *)(type metadata accessor for TranscriptProtoConfirmExpression(0) + 20);
              uint64_t v364 = v15 + v363;
              uint64_t v365 = v16 + v363;
              uint64_t v366 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v366 - 8) + 32))(v364, v365, v366);
              break;
            case 0xAu:
              *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
              *(unsigned char *)(v15 + 16) = *(unsigned char *)(v16 + 16);
              *(_WORD *)(v15 + 17) = *(_WORD *)(v16 + 17);
              uint64_t v242 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 32);
              uint64_t v243 = v15 + v242;
              uint64_t v244 = v16 + v242;
              uint64_t v245 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v245 - 8) + 32))(v243, v244, v245);
              break;
            case 0xBu:
              *(void *)uint64_t v15 = *(void *)v16;
              uint64_t v246 = *(int *)(type metadata accessor for TranscriptProtoStructuredSearchExpression(0) + 20);
              uint64_t v247 = v15 + v246;
              uint64_t v248 = v16 + v246;
              uint64_t v249 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v249 - 8) + 32))(v247, v248, v249);
              break;
            case 0xCu:
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v6))
              {
                uint64_t v250 = sub_253462A5C(&qword_26B249528);
                memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v250 - 8) + 64));
              }
              else
              {
                *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
                *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
                uint64_t v367 = *(int *)(v6 + 24);
                uint64_t v368 = v15 + v367;
                uint64_t v369 = v16 + v367;
                uint64_t v370 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v370 - 8) + 32))(v368, v369, v370);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v6);
              }
              uint64_t v371 = *(int *)(type metadata accessor for TranscriptProtoPickOneExpression(0) + 20);
              uint64_t v372 = v15 + v371;
              uint64_t v373 = v16 + v371;
              uint64_t v374 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v374 - 8) + 32))(v372, v373, v374);
              break;
            case 0xDu:
              *(void *)uint64_t v15 = *(void *)v16;
              uint64_t v251 = *(int *)(type metadata accessor for TranscriptProtoResolveToolExpression(0) + 20);
              uint64_t v252 = v15 + v251;
              uint64_t v253 = v16 + v251;
              uint64_t v254 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v254 - 8) + 32))(v252, v253, v254);
              break;
            case 0xEu:
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v6))
              {
                uint64_t v255 = sub_253462A5C(&qword_26B249528);
                memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v255 - 8) + 64));
              }
              else
              {
                *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
                *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
                uint64_t v375 = *(int *)(v6 + 24);
                uint64_t v376 = v15 + v375;
                uint64_t v377 = v16 + v375;
                uint64_t v378 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v378 - 8) + 32))(v376, v377, v378);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v6);
              }
              uint64_t v379 = *(int *)(type metadata accessor for TranscriptProtoUndoExpression(0) + 20);
              uint64_t v380 = v15 + v379;
              uint64_t v381 = v16 + v379;
              uint64_t v382 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v382 - 8) + 32))(v380, v381, v382);
              break;
            case 0xFu:
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v6))
              {
                uint64_t v256 = sub_253462A5C(&qword_26B249528);
                memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v256 - 8) + 64));
              }
              else
              {
                *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
                *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
                uint64_t v383 = *(int *)(v6 + 24);
                uint64_t v384 = v15 + v383;
                uint64_t v385 = v16 + v383;
                uint64_t v386 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v386 - 8) + 32))(v384, v385, v386);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v6);
              }
              uint64_t v387 = *(int *)(type metadata accessor for TranscriptProtoRejectExpression(0) + 20);
              uint64_t v388 = v15 + v387;
              uint64_t v389 = v16 + v387;
              uint64_t v390 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v390 - 8) + 32))(v388, v389, v390);
              break;
            case 0x10u:
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v6))
              {
                uint64_t v257 = sub_253462A5C(&qword_26B249528);
                memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v257 - 8) + 64));
              }
              else
              {
                *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
                *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
                uint64_t v391 = *(int *)(v6 + 24);
                uint64_t v392 = v15 + v391;
                uint64_t v393 = v16 + v391;
                uint64_t v394 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v394 - 8) + 32))(v392, v393, v394);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v6);
              }
              uint64_t v395 = *(int *)(type metadata accessor for TranscriptProtoCancelExpression(0) + 20);
              uint64_t v396 = v15 + v395;
              uint64_t v397 = v16 + v395;
              uint64_t v398 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v398 - 8) + 32))(v396, v397, v398);
              break;
            case 0x11u:
            case 0x12u:
            case 0x13u:
            case 0x14u:
            case 0x16u:
              uint64_t v258 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v258 - 8) + 32))(v15, v16, v258);
              break;
            case 0x15u:
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v6))
              {
                uint64_t v259 = sub_253462A5C(&qword_26B249528);
                memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v259 - 8) + 64));
              }
              else
              {
                *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
                *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
                uint64_t v417 = *(int *)(v6 + 24);
                uint64_t v418 = v15 + v417;
                uint64_t v419 = v16 + v417;
                uint64_t v420 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v420 - 8) + 32))(v418, v419, v420);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v6);
              }
              uint64_t v421 = *(int *)(type metadata accessor for TranscriptProtoOpenExpression(0) + 20);
              uint64_t v422 = v15 + v421;
              uint64_t v423 = v16 + v421;
              uint64_t v424 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v424 - 8) + 32))(v422, v423, v424);
              break;
            default:
              uint64_t v36 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v36))
              {
                uint64_t v37 = sub_253462A5C(&qword_269CE2378);
                memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v37 - 8) + 64));
              }
              else
              {
                if (swift_getEnumCaseMultiPayload() == 4)
                {
                  *(void *)uint64_t v15 = *(void *)v16;
                  uint64_t v343 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
                  uint64_t v344 = v15 + v343;
                  uint64_t v345 = v16 + v343;
                  uint64_t v346 = sub_253B07160();
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v346 - 8) + 32))(v344, v345, v346);
                  swift_storeEnumTagMultiPayload();
                }
                else
                {
                  memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v36 - 8) + 64));
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v36);
              }
              uint64_t v425 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
              uint64_t v426 = v15 + v425;
              uint64_t v427 = v16 + v425;
              uint64_t v428 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v428 - 8) + 32))(v426, v427, v428);
              break;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_217;
      }
      sub_2536FA73C();
    }
    uint64_t v35 = sub_253462A5C(&qword_269CE2360);
    memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v35 - 8) + 64));
LABEL_217:
    uint64_t v429 = *(int *)(v17 + 20);
    uint64_t v430 = v15 + v429;
    uint64_t v431 = v16 + v429;
    uint64_t v432 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v432 - 8) + 40))(v430, v431, v432);
    goto LABEL_218;
  }
  if (v19)
  {
LABEL_13:
    uint64_t v22 = sub_253462A5C(&qword_269CE24E8);
    memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_218;
  }
  uint64_t v20 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v20))
  {
    uint64_t v21 = sub_253462A5C(&qword_269CE2360);
    memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
        *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
        uint64_t v38 = *(int *)(v6 + 24);
        uint64_t v39 = v15 + v38;
        uint64_t v40 = v16 + v38;
        uint64_t v41 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
        break;
      case 2u:
        *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
        uint64_t v458 = type metadata accessor for TranscriptProtoPrefixExpression(0);
        uint64_t v42 = *(int *)(v458 + 20);
        uint64_t v43 = (_DWORD *)(v15 + v42);
        uint64_t v44 = (_DWORD *)(v16 + v42);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16 + v42, 1, v6)) {
          goto LABEL_116;
        }
        goto LABEL_98;
      case 3u:
        *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
        uint64_t v459 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
        uint64_t v45 = v459[5];
        uint64_t v46 = (_DWORD *)(v15 + v45);
        uint64_t v47 = (_DWORD *)(v16 + v45);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16 + v45, 1, v6))
        {
          uint64_t v48 = sub_253462A5C(&qword_26B249528);
          memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          *uint64_t v46 = *v47;
          *(_OWORD *)(v46 + 2) = *(_OWORD *)(v47 + 2);
          uint64_t v126 = *(int *)(v6 + 24);
          uint64_t v446 = (char *)v46 + v126;
          long long v127 = (char *)v47 + v126;
          uint64_t v128 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 32))(v446, v127, v128);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v46, 0, 1, v6);
        }
        uint64_t v129 = v459[6];
        uint64_t v130 = (_DWORD *)(v15 + v129);
        uint64_t v131 = (_DWORD *)(v16 + v129);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16 + v129, 1, v6))
        {
          uint64_t v132 = sub_253462A5C(&qword_26B249528);
          memcpy(v130, v131, *(void *)(*(void *)(v132 - 8) + 64));
        }
        else
        {
          *uint64_t v130 = *v131;
          *(_OWORD *)(v130 + 2) = *(_OWORD *)(v131 + 2);
          uint64_t v191 = *(int *)(v6 + 24);
          uint64_t v448 = (char *)v130 + v191;
          uint64_t v192 = (char *)v131 + v191;
          uint64_t v193 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 32))(v448, v192, v193);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v130, 0, 1, v6);
        }
        uint64_t v194 = v459[7];
        uint64_t v195 = v15 + v194;
        uint64_t v196 = v16 + v194;
        uint64_t v197 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v197 - 8) + 32))(v195, v196, v197);
        break;
      case 4u:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v6))
        {
          uint64_t v49 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
          *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
          uint64_t v133 = *(int *)(v6 + 24);
          uint64_t v134 = v15 + v133;
          uint64_t v135 = v16 + v133;
          uint64_t v136 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v136 - 8) + 32))(v134, v135, v136);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v6);
        }
        uint64_t v458 = type metadata accessor for TranscriptProtoIndexExpression(0);
        uint64_t v137 = *(int *)(v458 + 20);
        uint64_t v43 = (_DWORD *)(v15 + v137);
        uint64_t v44 = (_DWORD *)(v16 + v137);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16 + v137, 1, v6)) {
          goto LABEL_98;
        }
        goto LABEL_116;
      case 5u:
        *(void *)uint64_t v15 = *(void *)v16;
        uint64_t v458 = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
        uint64_t v50 = *(int *)(v458 + 20);
        uint64_t v43 = (_DWORD *)(v15 + v50);
        uint64_t v44 = (_DWORD *)(v16 + v50);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16 + v50, 1, v6)) {
          goto LABEL_98;
        }
        goto LABEL_116;
      case 6u:
        *(void *)uint64_t v15 = *(void *)v16;
        uint64_t v458 = type metadata accessor for TranscriptProtoCallExpression(0);
        uint64_t v51 = *(int *)(v458 + 20);
        uint64_t v52 = (_OWORD *)(v15 + v51);
        uint64_t v53 = (_OWORD *)(v16 + v51);
        uint64_t v54 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v53, 1, v54))
        {
          uint64_t v55 = sub_253462A5C(&qword_269CE0448);
          memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          long long v139 = v53[1];
          _OWORD *v52 = *v53;
          v52[1] = v139;
          uint64_t v140 = *(int *)(v54 + 24);
          uint64_t v447 = (char *)v52 + v140;
          uint64_t v141 = (char *)v53 + v140;
          uint64_t v142 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v447, v141, v142);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v52, 0, 1, v54);
        }
        goto LABEL_117;
      case 7u:
        *(void *)uint64_t v15 = *(void *)v16;
        uint64_t v56 = *(int *)(type metadata accessor for TranscriptProtoSayExpression(0) + 20);
        uint64_t v57 = v15 + v56;
        uint64_t v58 = v16 + v56;
        uint64_t v59 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
        break;
      case 8u:
        *(void *)uint64_t v15 = *(void *)v16;
        uint64_t v458 = type metadata accessor for TranscriptProtoPickExpression(0);
        uint64_t v60 = *(int *)(v458 + 20);
        uint64_t v43 = (_DWORD *)(v15 + v60);
        uint64_t v44 = (_DWORD *)(v16 + v60);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16 + v60, 1, v6))
        {
LABEL_98:
          uint64_t v138 = sub_253462A5C(&qword_26B249528);
          memcpy(v43, v44, *(void *)(*(void *)(v138 - 8) + 64));
        }
        else
        {
LABEL_116:
          *uint64_t v43 = *v44;
          *(_OWORD *)(v43 + 2) = *(_OWORD *)(v44 + 2);
          uint64_t v198 = *(int *)(v6 + 24);
          uint64_t v449 = (char *)v43 + v198;
          uint64_t v199 = (char *)v44 + v198;
          uint64_t v200 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 32))(v449, v199, v200);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v43, 0, 1, v6);
        }
LABEL_117:
        uint64_t v201 = *(int *)(v458 + 24);
        uint64_t v202 = v15 + v201;
        uint64_t v203 = v16 + v201;
        uint64_t v204 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v204 - 8) + 32))(v202, v203, v204);
        break;
      case 9u:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v6))
        {
          uint64_t v61 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v61 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
          *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
          uint64_t v143 = *(int *)(v6 + 24);
          uint64_t v144 = v15 + v143;
          uint64_t v145 = v16 + v143;
          uint64_t v146 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v146 - 8) + 32))(v144, v145, v146);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v6);
        }
        uint64_t v147 = *(int *)(type metadata accessor for TranscriptProtoConfirmExpression(0) + 20);
        uint64_t v148 = v15 + v147;
        uint64_t v149 = v16 + v147;
        uint64_t v150 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v150 - 8) + 32))(v148, v149, v150);
        break;
      case 0xAu:
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
        *(unsigned char *)(v15 + 16) = *(unsigned char *)(v16 + 16);
        *(_WORD *)(v15 + 17) = *(_WORD *)(v16 + 17);
        uint64_t v62 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 32);
        uint64_t v63 = v15 + v62;
        uint64_t v64 = v16 + v62;
        uint64_t v65 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 32))(v63, v64, v65);
        break;
      case 0xBu:
        *(void *)uint64_t v15 = *(void *)v16;
        uint64_t v66 = *(int *)(type metadata accessor for TranscriptProtoStructuredSearchExpression(0) + 20);
        uint64_t v67 = v15 + v66;
        uint64_t v68 = v16 + v66;
        uint64_t v69 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 32))(v67, v68, v69);
        break;
      case 0xCu:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v6))
        {
          uint64_t v70 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v70 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
          *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
          uint64_t v151 = *(int *)(v6 + 24);
          uint64_t v152 = v15 + v151;
          uint64_t v153 = v16 + v151;
          uint64_t v154 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v154 - 8) + 32))(v152, v153, v154);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v6);
        }
        uint64_t v155 = *(int *)(type metadata accessor for TranscriptProtoPickOneExpression(0) + 20);
        uint64_t v156 = v15 + v155;
        uint64_t v157 = v16 + v155;
        uint64_t v158 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v158 - 8) + 32))(v156, v157, v158);
        break;
      case 0xDu:
        *(void *)uint64_t v15 = *(void *)v16;
        uint64_t v71 = *(int *)(type metadata accessor for TranscriptProtoResolveToolExpression(0) + 20);
        uint64_t v72 = v15 + v71;
        uint64_t v73 = v16 + v71;
        uint64_t v74 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
        break;
      case 0xEu:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v6))
        {
          uint64_t v75 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v75 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
          *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
          uint64_t v159 = *(int *)(v6 + 24);
          uint64_t v160 = v15 + v159;
          uint64_t v161 = v16 + v159;
          uint64_t v162 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v162 - 8) + 32))(v160, v161, v162);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v6);
        }
        uint64_t v163 = *(int *)(type metadata accessor for TranscriptProtoUndoExpression(0) + 20);
        uint64_t v164 = v15 + v163;
        uint64_t v165 = v16 + v163;
        uint64_t v166 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v166 - 8) + 32))(v164, v165, v166);
        break;
      case 0xFu:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v6))
        {
          uint64_t v76 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v76 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
          *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
          uint64_t v167 = *(int *)(v6 + 24);
          uint64_t v168 = v15 + v167;
          uint64_t v169 = v16 + v167;
          uint64_t v170 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v170 - 8) + 32))(v168, v169, v170);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v6);
        }
        uint64_t v171 = *(int *)(type metadata accessor for TranscriptProtoRejectExpression(0) + 20);
        uint64_t v172 = v15 + v171;
        uint64_t v173 = v16 + v171;
        uint64_t v174 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v174 - 8) + 32))(v172, v173, v174);
        break;
      case 0x10u:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v6))
        {
          uint64_t v77 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v77 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
          *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
          uint64_t v175 = *(int *)(v6 + 24);
          uint64_t v176 = v15 + v175;
          uint64_t v177 = v16 + v175;
          uint64_t v178 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v178 - 8) + 32))(v176, v177, v178);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v6);
        }
        uint64_t v179 = *(int *)(type metadata accessor for TranscriptProtoCancelExpression(0) + 20);
        uint64_t v180 = v15 + v179;
        uint64_t v181 = v16 + v179;
        uint64_t v182 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v182 - 8) + 32))(v180, v181, v182);
        break;
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x16u:
        uint64_t v78 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 32))(v15, v16, v78);
        break;
      case 0x15u:
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v6))
        {
          uint64_t v79 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v79 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
          *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
          uint64_t v183 = *(int *)(v6 + 24);
          uint64_t v184 = v15 + v183;
          uint64_t v185 = v16 + v183;
          uint64_t v186 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v186 - 8) + 32))(v184, v185, v186);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v6);
        }
        uint64_t v187 = *(int *)(type metadata accessor for TranscriptProtoOpenExpression(0) + 20);
        uint64_t v188 = v15 + v187;
        uint64_t v189 = v16 + v187;
        uint64_t v190 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v190 - 8) + 32))(v188, v189, v190);
        break;
      default:
        uint64_t v33 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v16, 1, v33))
        {
          uint64_t v34 = sub_253462A5C(&qword_269CE2378);
          memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 4)
          {
            *(void *)uint64_t v15 = *(void *)v16;
            uint64_t v122 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
            uint64_t v123 = v15 + v122;
            uint64_t v124 = v16 + v122;
            uint64_t v125 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 32))(v123, v124, v125);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy((void *)v15, (const void *)v16, *(void *)(*(void *)(v33 - 8) + 64));
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v33);
        }
        uint64_t v205 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
        uint64_t v206 = v15 + v205;
        uint64_t v207 = v16 + v205;
        uint64_t v208 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v208 - 8) + 32))(v206, v207, v208);
        break;
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v20);
  }
  uint64_t v209 = *(int *)(v17 + 20);
  uint64_t v210 = v15 + v209;
  uint64_t v211 = v16 + v209;
  uint64_t v212 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v212 - 8) + 32))(v210, v211, v212);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, 0, 1, v17);
LABEL_218:
  uint64_t v433 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v434 = (char *)a1 + v433;
  uint64_t v435 = (char *)a2 + v433;
  uint64_t v436 = sub_253B08E60();
  int v437 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v434, 1, v436);
  int v438 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v435, 1, v436);
  if (!v437)
  {
    uint64_t v439 = *(void *)(v436 - 8);
    if (!v438)
    {
      (*(void (**)(char *, char *, uint64_t))(v439 + 40))(v434, v435, v436);
      goto LABEL_224;
    }
    (*(void (**)(char *, uint64_t))(v439 + 8))(v434, v436);
    goto LABEL_223;
  }
  if (v438)
  {
LABEL_223:
    uint64_t v440 = sub_253462A5C(&qword_269CDFA30);
    memcpy(v434, v435, *(void *)(*(void *)(v440 - 8) + 64));
    goto LABEL_224;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v436 - 8) + 32))(v434, v435, v436);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v434, 0, 1, v436);
LABEL_224:
  uint64_t v441 = a3[8];
  uint64_t v442 = (char *)a1 + v441;
  uint64_t v443 = (char *)a2 + v441;
  uint64_t v444 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v444 - 8) + 40))(v442, v443, v444);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoProgramStatement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253934CB8);
}

uint64_t sub_253934CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2534DA0C4();
  sub_253462A5C(&qword_26B249528);
  sub_2535782A8();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    uint64_t v7 = sub_253945320();
LABEL_16:
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, v3, v8);
  }
  sub_253462A5C(&qword_269CE24E8);
  sub_2535782A8();
  if (*(_DWORD *)(v9 + 84) == v3)
  {
    sub_2535E263C();
LABEL_15:
    uint64_t v7 = v4 + v10;
    goto LABEL_16;
  }
  if (v3 != 253)
  {
    sub_253462A5C(&qword_269CDFA30);
    sub_2535782A8();
    if (*(_DWORD *)(v13 + 84) == v3)
    {
      sub_2535E256C();
    }
    else
    {
      sub_253B07160();
      sub_2535E27E4();
    }
    goto LABEL_15;
  }
  unsigned int v11 = *(unsigned __int8 *)(v4 + *(int *)(a3 + 24));
  if (v11 >= 2) {
    int v12 = ((v11 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v12 = -2;
  }
  if (v12 < 0) {
    int v12 = -1;
  }
  return (v12 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoProgramStatement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253934DE0);
}

void sub_253934DE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_2534DA0C4();
  sub_253462A5C(&qword_26B249528);
  sub_2535782A8();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    sub_253944FD8();
  }
  else
  {
    sub_253462A5C(&qword_269CE24E8);
    sub_2535782A8();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      sub_2535E272C();
    }
    else
    {
      if (a3 == 253)
      {
        *(unsigned char *)(v5 + *(int *)(a4 + 24)) = v4 + 2;
        return;
      }
      sub_253462A5C(&qword_269CDFA30);
      sub_2535782A8();
      if (*(_DWORD *)(v10 + 84) == a3)
      {
        sub_2535E26E4();
      }
      else
      {
        sub_253B07160();
        sub_2535E2830();
      }
    }
  }
  sub_2535E228C();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v11, v12, v13, v14);
}

void sub_253934ED0()
{
  sub_253760A08(319, &qword_26B249530, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
  if (v0 <= 0x3F)
  {
    sub_253760A08(319, &qword_269CE4E58, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExpression);
    if (v1 <= 0x3F)
    {
      sub_253760A08(319, &qword_26B24A360, MEMORY[0x263F802D0]);
      if (v2 <= 0x3F)
      {
        sub_253B07160();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void _s30IntelligenceFlowPlannerSupport26TranscriptProtoUndoContextVwCP_0()
{
  sub_2534B3258();
  uint64_t v1 = v0;
  sub_2535782A8();
  if ((*(_DWORD *)(v4 + 80) & 0x20000) != 0)
  {
    sub_2539442C0(*v3);
  }
  else
  {
    sub_253945F6C(v2, v3);
    uint64_t v6 = *(void *)(v5 + 40);
    *(void *)(v1 + 32) = *(void *)(v5 + 32);
    *(void *)(v1 + 40) = v6;
    sub_253B07160();
    sub_25346CAF4();
    uint64_t v8 = *(void (**)(uint64_t))(v7 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_253945B70();
    v8(v9);
  }
  sub_253465A14();
}

uint64_t _s30IntelligenceFlowPlannerSupport26TranscriptProtoUndoContextVwxx_0()
{
  sub_253944D98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_253944E5C();
  sub_25346CAF4();
  uint64_t v0 = sub_2539446BC();
  return v1(v0);
}

void _s30IntelligenceFlowPlannerSupport26TranscriptProtoUndoContextVwcp_0()
{
  sub_2534B3258();
  uint64_t v2 = sub_253945CA0(v0, v1);
  uint64_t v4 = *(void *)(v3 + 40);
  v2[4] = *(void *)(v3 + 32);
  v2[5] = v4;
  sub_253B07160();
  sub_25346CAF4();
  uint64_t v6 = *(void (**)(uint64_t))(v5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_253945B70();
  v6(v7);
  sub_253465A14();
}

void *_s30IntelligenceFlowPlannerSupport26TranscriptProtoUndoContextVwca_0(void *a1, void *a2)
{
  sub_253944DE8(a1, a2);
  swift_bridgeObjectRelease();
  v2[2] = a2[2];
  v2[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[4] = a2[4];
  v2[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_253945244();
  sub_25346CAF4();
  sub_253944540();
  v4();
  return v2;
}

uint64_t _s30IntelligenceFlowPlannerSupport26TranscriptProtoUndoContextVwtk_0(_OWORD *a1, uint64_t a2)
{
  sub_253945CB8(a1, a2);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(v3 + 32);
  sub_253944360();
  sub_25346CAF4();
  sub_2534D8E14();
  v5();
  return v2;
}

uint64_t _s30IntelligenceFlowPlannerSupport26TranscriptProtoUndoContextVwta_0(void *a1, void *a2)
{
  sub_2539445FC(a1, a2);
  sub_253945BD4();
  uint64_t v4 = *(void *)(v2 + 40);
  *(void *)(v3 + 32) = *(void *)(v2 + 32);
  *(void *)(v3 + 40) = v4;
  swift_bridgeObjectRelease();
  sub_2535E22F0();
  sub_25346CAF4();
  sub_253944438();
  v5();
  return v3;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoLocaleSettings(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25393539C);
}

uint64_t sub_2539353A0()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*(void *)(v0 + 8));
  }
  sub_2535E22D4();
  uint64_t v4 = sub_2535E22C8(*(int *)(v1 + 28));
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoLocaleSettings(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253935418);
}

void sub_25393541C()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E24BC();
  }
  else
  {
    sub_2535E235C();
    uint64_t v2 = sub_2535E2234(*(int *)(v0 + 28));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, v3, v4, v5);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoDeviceDetailsDeviceType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t _s30IntelligenceFlowPlannerSupport30TranscriptProtoPromptSelectionVwxx_0()
{
  sub_253B07160();
  sub_25346CAF4();
  uint64_t v0 = sub_2539446BC();
  return v1(v0);
}

_DWORD *initializeWithCopy for TranscriptProtoDeviceDetailsDeviceType(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_DWORD *assignWithCopy for TranscriptProtoDeviceDetailsDeviceType(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_DWORD *initializeWithTake for TranscriptProtoDeviceDetailsDeviceType(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_DWORD *assignWithTake for TranscriptProtoDeviceDetailsDeviceType(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoDeviceDetailsDeviceType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2539357A8);
}

uint64_t sub_2539357AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_253B07160();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoDeviceDetailsDeviceType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25393580C);
}

uint64_t sub_253935810()
{
  sub_253B07160();
  sub_2535E228C();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v0, v1, v2, v3);
}

uint64_t sub_25393585C()
{
  return sub_25393E9BC();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoDeviceDetails(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (_DWORD *)((char *)a1 + v8);
    uint64_t v10 = (_DWORD *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CE2510);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      _DWORD *v9 = *v10;
      uint64_t v14 = *(int *)(v11 + 20);
      uint64_t v15 = (char *)v9 + v14;
      uint64_t v16 = (char *)v10 + v14;
      uint64_t v17 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v18 = *(int *)(a3 + 24);
    int v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoDeviceDetails(uint64_t a1, uint64_t a2)
{
  return sub_253935A30(a1, a2, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
}

uint64_t sub_253935A30(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  sub_253945B3C();
  uint64_t v5 = sub_2535E233C();
  a3(v5);
  if (!sub_2539443F0(v3))
  {
    sub_253945244();
    sub_25346CAF4();
    uint64_t v6 = sub_253945338();
    v7(v6);
  }
  sub_253944B84();
  sub_25346CAF4();
  uint64_t v8 = sub_2539446BC();
  return v9(v8);
}

void *initializeWithCopy for TranscriptProtoDeviceDetails(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_DWORD *)((char *)a1 + v7);
  uint64_t v9 = (_DWORD *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_269CE2510);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *uint64_t v8 = *v9;
    uint64_t v12 = *(int *)(v10 + 20);
    uint64_t v13 = (char *)v8 + v12;
    uint64_t v14 = (char *)v9 + v12;
    uint64_t v15 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

void *assignWithCopy for TranscriptProtoDeviceDetails(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (_DWORD *)((char *)a1 + v6);
  uint64_t v8 = (_DWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *uint64_t v7 = *v8;
      uint64_t v22 = *(int *)(v9 + 20);
      uint64_t v23 = (char *)v7 + v22;
      uint64_t v24 = (char *)v8 + v22;
      uint64_t v25 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_269CE2510);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v7 = *v8;
  uint64_t v12 = *(int *)(v9 + 20);
  uint64_t v13 = (char *)v7 + v12;
  uint64_t v14 = (char *)v8 + v12;
  uint64_t v15 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoDeviceDetails(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (_DWORD *)((char *)a1 + v6);
  uint64_t v8 = (_DWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE2510);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *uint64_t v7 = *v8;
    uint64_t v11 = *(int *)(v9 + 20);
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    uint64_t v14 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

void *assignWithTake for TranscriptProtoDeviceDetails(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_DWORD *)((char *)a1 + v7);
  uint64_t v9 = (_DWORD *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    if (!v12)
    {
      *uint64_t v8 = *v9;
      uint64_t v23 = *(int *)(v10 + 20);
      uint64_t v24 = (char *)v8 + v23;
      uint64_t v25 = (char *)v9 + v23;
      uint64_t v26 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v17 = sub_253462A5C(&qword_269CE2510);
    memcpy(v8, v9, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v8 = *v9;
  uint64_t v13 = *(int *)(v10 + 20);
  uint64_t v14 = (char *)v8 + v13;
  uint64_t v15 = (char *)v9 + v13;
  uint64_t v16 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoDeviceDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253936180);
}

uint64_t sub_253936180()
{
  return sub_25393618C();
}

uint64_t sub_25393618C()
{
  sub_2535E2298();
  if (v6) {
    return sub_2534F89A0(*(void *)(v1 + 8));
  }
  sub_253944DB4(v2, v3, v4, v5);
  sub_2535782A8();
  if (*(_DWORD *)(v8 + 84) == v0)
  {
    sub_2535E263C();
  }
  else
  {
    sub_253B07160();
    sub_2535E2560();
  }
  uint64_t v10 = sub_2535E22C8(v9);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, v11, v12);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoDeviceDetails(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253936224);
}

void sub_253936224()
{
}

void sub_253936230()
{
  sub_2535E2244();
  if (v6)
  {
    sub_2535E24BC();
  }
  else
  {
    sub_253944D7C(v1, v2, v3, v4, v5);
    sub_2535782A8();
    if (*(_DWORD *)(v7 + 84) == v0)
    {
      sub_2535E272C();
    }
    else
    {
      sub_253B07160();
      sub_2535E26D8();
    }
    uint64_t v9 = sub_2535E2234(v8);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v9, v10, v11, v12);
  }
}

void sub_2539362B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_2539362D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  sub_253760A08(319, a5, a6);
  if (v6 <= 0x3F)
  {
    sub_253945F80();
    if (v7 <= 0x3F)
    {
      sub_2535E2794();
      sub_2535E2578();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoStatementID(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v5 = a2[2];
    a1[1] = a2[1];
    a1[2] = v5;
    uint64_t v6 = *(int *)(a3 + 24);
    unint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_253B07160();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for TranscriptProtoStatementID(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_253B07160();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for TranscriptProtoStatementID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_253B07160();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoStatementID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoStatementID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoStatementID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoStatementID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253936764);
}

uint64_t sub_253936764()
{
  sub_2535E240C();
  if (v2) {
    return sub_2535E2258(*(void *)(v0 + 16));
  }
  sub_2535E22D4();
  uint64_t v4 = sub_2535E22C8(*(int *)(v1 + 24));
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoStatementID(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2539367DC);
}

void sub_2539367DC()
{
  sub_2535E2308();
  if (v3)
  {
    *(void *)(v1 + 16) = v0;
  }
  else
  {
    sub_2535E235C();
    uint64_t v4 = sub_2535E2234(*(int *)(v2 + 24));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, v5, v6, v7);
  }
}

uint64_t sub_253936840()
{
  return sub_2535DC13C();
}

void initializeBufferWithCopyOfBuffer for TranscriptProtoToolResolution()
{
}

uint64_t destroy for TranscriptProtoToolResolution(uint64_t a1, uint64_t a2)
{
  return sub_25393A454(a1, a2, MEMORY[0x263F80360]);
}

void initializeWithCopy for TranscriptProtoToolResolution()
{
}

void assignWithCopy for TranscriptProtoToolResolution()
{
}

void initializeWithTake for TranscriptProtoToolResolution()
{
}

void assignWithTake for TranscriptProtoToolResolution()
{
}

uint64_t getEnumTagSinglePayload for TranscriptProtoToolResolution(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253936924);
}

uint64_t sub_253936924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393AFC0(a1, a2, a3, &qword_269CDFA70);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoToolResolution(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253936944);
}

uint64_t sub_253936944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393B070(a1, a2, a3, a4, &qword_269CDFA70);
}

void sub_253936950(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoUndoRedoRequest(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2[4];
    uint64_t v9 = a3[7];
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v12 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
    {
      uint64_t v13 = sub_253462A5C(&qword_26B249528);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
      uint64_t v15 = v11[2];
      v10[1] = v11[1];
      v10[2] = v15;
      uint64_t v16 = *(int *)(v12 + 24);
      uint64_t v17 = (char *)v10 + v16;
      uint64_t v34 = (char *)v11 + v16;
      uint64_t v18 = sub_253B07160();
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v17, v34, v18);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
    }
    uint64_t v20 = a3[8];
    uint64_t v21 = (void *)((char *)v4 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v20, 1, v12))
    {
      uint64_t v23 = sub_253462A5C(&qword_26B249528);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
      uint64_t v24 = v22[2];
      v21[1] = v22[1];
      v21[2] = v24;
      uint64_t v25 = *(int *)(v12 + 24);
      uint64_t v26 = (char *)v21 + v25;
      uint64_t v35 = (char *)v22 + v25;
      uint64_t v27 = sub_253B07160();
      uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
      swift_bridgeObjectRetain();
      v28(v26, v35, v27);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v21, 0, 1, v12);
    }
    uint64_t v29 = a3[9];
    int v30 = (char *)v4 + v29;
    uint64_t v31 = (uint64_t)a2 + v29;
    uint64_t v32 = sub_253B07160();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoUndoRedoRequest(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + a2[8];
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v8 + *(int *)(v5 + 24);
    uint64_t v10 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  uint64_t v11 = a1 + a2[9];
  uint64_t v12 = sub_253B07160();
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  return v13(v11, v12);
}

uint64_t initializeWithCopy for TranscriptProtoUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for TranscriptProtoStatementID(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_253462A5C(&qword_26B249528);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
    uint64_t v13 = v10[2];
    v9[1] = v10[1];
    v9[2] = v13;
    uint64_t v14 = *(int *)(v11 + 24);
    uint64_t v15 = (char *)v9 + v14;
    uint64_t v32 = (char *)v10 + v14;
    uint64_t v16 = sub_253B07160();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v15, v32, v16);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v18, 1, v11))
  {
    uint64_t v21 = sub_253462A5C(&qword_26B249528);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
    uint64_t v22 = v20[2];
    v19[1] = v20[1];
    v19[2] = v22;
    uint64_t v23 = *(int *)(v11 + 24);
    uint64_t v24 = (char *)v19 + v23;
    uint64_t v33 = (char *)v20 + v23;
    uint64_t v25 = sub_253B07160();
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
    swift_bridgeObjectRetain();
    v26(v24, v33, v25);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v11);
  }
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      uint64_t v12 = *(int *)(v9 + 24);
      uint64_t v13 = (char *)v7 + v12;
      uint64_t v40 = (char *)v8 + v12;
      uint64_t v14 = sub_253B07160();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v13, v40, v14);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = *(int *)(v9 + 24);
  uint64_t v33 = (char *)v7 + v32;
  uint64_t v34 = (char *)v8 + v32;
  uint64_t v35 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 24))(v33, v34, v35);
LABEL_7:
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  int v20 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1 + v17, 1, v9);
  int v21 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v9);
  if (!v20)
  {
    if (!v21)
    {
      *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
      v18[1] = v19[1];
      v18[2] = v19[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v36 = *(int *)(v9 + 24);
      uint64_t v37 = (char *)v18 + v36;
      uint64_t v38 = (char *)v19 + v36;
      uint64_t v39 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 24))(v37, v38, v39);
      goto LABEL_13;
    }
    sub_2536FA73C();
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    uint64_t v26 = sub_253462A5C(&qword_26B249528);
    memcpy(v18, v19, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  v18[1] = v19[1];
  v18[2] = v19[2];
  uint64_t v22 = *(int *)(v9 + 24);
  uint64_t v23 = (char *)v18 + v22;
  uint64_t v41 = (char *)v19 + v22;
  uint64_t v24 = sub_253B07160();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
  swift_bridgeObjectRetain();
  v25(v23, v41, v24);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v9);
LABEL_13:
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = a3[7];
  uint64_t v7 = (_DWORD *)(a1 + v6);
  uint64_t v8 = (_DWORD *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *uint64_t v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    uint64_t v11 = *(int *)(v9 + 24);
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    uint64_t v14 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v15 = a3[8];
  uint64_t v16 = (_DWORD *)(a1 + v15);
  uint64_t v17 = (_DWORD *)(a2 + v15);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v15, 1, v9))
  {
    uint64_t v18 = sub_253462A5C(&qword_26B249528);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    *uint64_t v16 = *v17;
    *(_OWORD *)(v16 + 2) = *(_OWORD *)(v17 + 2);
    uint64_t v19 = *(int *)(v9 + 24);
    int v20 = (char *)v16 + v19;
    int v21 = (char *)v17 + v19;
    uint64_t v22 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v9);
  }
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for TranscriptProtoStatementID(0);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v11);
  int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11);
  if (v12)
  {
    if (!v13)
    {
      *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
      *(_OWORD *)(v9 + 1) = *(_OWORD *)(v10 + 1);
      uint64_t v14 = *(int *)(v11 + 24);
      uint64_t v15 = (char *)v9 + v14;
      uint64_t v16 = (char *)v10 + v14;
      uint64_t v17 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v18 = sub_253462A5C(&qword_26B249528);
    memcpy(v9, v10, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  uint64_t v34 = v10[2];
  v9[1] = v10[1];
  v9[2] = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = *(int *)(v11 + 24);
  uint64_t v36 = (char *)v9 + v35;
  uint64_t v37 = (char *)v10 + v35;
  uint64_t v38 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
LABEL_7:
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  int v22 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1 + v19, 1, v11);
  int v23 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v21, 1, v11);
  if (!v22)
  {
    if (!v23)
    {
      *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
      uint64_t v39 = *(void *)(v21 + 16);
      *(void *)(v20 + 8) = *(void *)(v21 + 8);
      *(void *)(v20 + 16) = v39;
      swift_bridgeObjectRelease();
      uint64_t v40 = *(int *)(v11 + 24);
      uint64_t v41 = v20 + v40;
      uint64_t v42 = v21 + v40;
      uint64_t v43 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 40))(v41, v42, v43);
      goto LABEL_13;
    }
    sub_2536FA73C();
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    uint64_t v28 = sub_253462A5C(&qword_26B249528);
    memcpy((void *)v20, (const void *)v21, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(_OWORD *)(v20 + 8) = *(_OWORD *)(v21 + 8);
  uint64_t v24 = *(int *)(v11 + 24);
  uint64_t v25 = v20 + v24;
  uint64_t v26 = v21 + v24;
  uint64_t v27 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v20, 0, 1, v11);
LABEL_13:
  uint64_t v29 = a3[9];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 40))(v30, v31, v32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoUndoRedoRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253937988);
}

uint64_t sub_253937988()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*(void *)(v1 + 8));
  }
  sub_2535E2460();
  sub_253462A5C(&qword_26B249528);
  sub_2535782A8();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    sub_2535E256C();
  }
  else
  {
    sub_253B07160();
    sub_253945148();
  }
  uint64_t v6 = sub_2535E22C8(v5);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, v7, v8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoUndoRedoRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253937A2C);
}

void sub_253937A2C()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E24BC();
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_26B249528);
    sub_2535782A8();
    if (*(_DWORD *)(v2 + 84) == v0)
    {
      sub_2535E26E4();
    }
    else
    {
      sub_253B07160();
      sub_25394519C();
    }
    uint64_t v4 = sub_2535E2234(v3);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, v5, v6, v7);
  }
}

void sub_253937AB8()
{
  sub_253760A08(319, &qword_26B249530, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
  if (v0 <= 0x3F)
  {
    sub_253B07160();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoClientUndoRedoRequest(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a3[6];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_26B249528);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
      uint64_t v14 = v10[2];
      v9[1] = v10[1];
      v9[2] = v14;
      uint64_t v15 = *(int *)(v11 + 24);
      uint64_t v16 = (char *)v9 + v15;
      uint64_t v33 = (char *)v10 + v15;
      uint64_t v17 = sub_253B07160();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v16, v33, v17);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v19 = a3[7];
    uint64_t v20 = (void *)((char *)v4 + v19);
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v19, 1, v11))
    {
      uint64_t v22 = sub_253462A5C(&qword_26B249528);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
      uint64_t v23 = v21[2];
      v20[1] = v21[1];
      v20[2] = v23;
      uint64_t v24 = *(int *)(v11 + 24);
      uint64_t v25 = (char *)v20 + v24;
      uint64_t v34 = (char *)v21 + v24;
      uint64_t v26 = sub_253B07160();
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      v27(v25, v34, v26);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, v11);
    }
    uint64_t v28 = a3[8];
    uint64_t v29 = (char *)v4 + v28;
    uint64_t v30 = (uint64_t)a2 + v28;
    uint64_t v31 = sub_253B07160();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoClientUndoRedoRequest(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + a2[7];
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v8 + *(int *)(v5 + 24);
    uint64_t v10 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_253B07160();
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  return v13(v11, v12);
}

uint64_t initializeWithCopy for TranscriptProtoClientUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoStatementID(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_26B249528);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
    uint64_t v12 = v9[2];
    v8[1] = v9[1];
    v8[2] = v12;
    uint64_t v13 = *(int *)(v10 + 24);
    uint64_t v14 = (char *)v8 + v13;
    uint64_t v31 = (char *)v9 + v13;
    uint64_t v15 = sub_253B07160();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v14, v31, v15);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v17, 1, v10))
  {
    uint64_t v20 = sub_253462A5C(&qword_26B249528);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    uint64_t v21 = v19[2];
    v18[1] = v19[1];
    v18[2] = v21;
    uint64_t v22 = *(int *)(v10 + 24);
    uint64_t v23 = (char *)v18 + v22;
    uint64_t v32 = (char *)v19 + v22;
    uint64_t v24 = sub_253B07160();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    v25(v23, v32, v24);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v10);
  }
  uint64_t v26 = a3[8];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoClientUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      uint64_t v12 = *(int *)(v9 + 24);
      uint64_t v13 = (char *)v7 + v12;
      uint64_t v40 = (char *)v8 + v12;
      uint64_t v14 = sub_253B07160();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v13, v40, v14);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = *(int *)(v9 + 24);
  uint64_t v33 = (char *)v7 + v32;
  uint64_t v34 = (char *)v8 + v32;
  uint64_t v35 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 24))(v33, v34, v35);
LABEL_7:
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  int v20 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1 + v17, 1, v9);
  int v21 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v9);
  if (!v20)
  {
    if (!v21)
    {
      *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
      v18[1] = v19[1];
      v18[2] = v19[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v36 = *(int *)(v9 + 24);
      uint64_t v37 = (char *)v18 + v36;
      uint64_t v38 = (char *)v19 + v36;
      uint64_t v39 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 24))(v37, v38, v39);
      goto LABEL_13;
    }
    sub_2536FA73C();
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    uint64_t v26 = sub_253462A5C(&qword_26B249528);
    memcpy(v18, v19, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  v18[1] = v19[1];
  v18[2] = v19[2];
  uint64_t v22 = *(int *)(v9 + 24);
  uint64_t v23 = (char *)v18 + v22;
  uint64_t v41 = (char *)v19 + v22;
  uint64_t v24 = sub_253B07160();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
  swift_bridgeObjectRetain();
  v25(v23, v41, v24);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v9);
LABEL_13:
  uint64_t v27 = a3[8];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoClientUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = (_DWORD *)(a1 + v6);
  uint64_t v8 = (_DWORD *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *uint64_t v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    uint64_t v11 = *(int *)(v9 + 24);
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    uint64_t v14 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = (_DWORD *)(a1 + v15);
  uint64_t v17 = (_DWORD *)(a2 + v15);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v15, 1, v9))
  {
    uint64_t v18 = sub_253462A5C(&qword_26B249528);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    *uint64_t v16 = *v17;
    *(_OWORD *)(v16 + 2) = *(_OWORD *)(v17 + 2);
    uint64_t v19 = *(int *)(v9 + 24);
    int v20 = (char *)v16 + v19;
    int v21 = (char *)v17 + v19;
    uint64_t v22 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v9);
  }
  uint64_t v23 = a3[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoClientUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoStatementID(0);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
      *(_OWORD *)(v8 + 1) = *(_OWORD *)(v9 + 1);
      uint64_t v13 = *(int *)(v10 + 24);
      uint64_t v14 = (char *)v8 + v13;
      uint64_t v15 = (char *)v9 + v13;
      uint64_t v16 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v17 = sub_253462A5C(&qword_26B249528);
    memcpy(v8, v9, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  uint64_t v33 = v9[2];
  v8[1] = v9[1];
  v8[2] = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = *(int *)(v10 + 24);
  uint64_t v35 = (char *)v8 + v34;
  uint64_t v36 = (char *)v9 + v34;
  uint64_t v37 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 40))(v35, v36, v37);
LABEL_7:
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  int v21 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1 + v18, 1, v10);
  int v22 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v20, 1, v10);
  if (!v21)
  {
    if (!v22)
    {
      *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
      uint64_t v38 = *(void *)(v20 + 16);
      *(void *)(v19 + 8) = *(void *)(v20 + 8);
      *(void *)(v19 + 16) = v38;
      swift_bridgeObjectRelease();
      uint64_t v39 = *(int *)(v10 + 24);
      uint64_t v40 = v19 + v39;
      uint64_t v41 = v20 + v39;
      uint64_t v42 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
      goto LABEL_13;
    }
    sub_2536FA73C();
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v27 = sub_253462A5C(&qword_26B249528);
    memcpy((void *)v19, (const void *)v20, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
  *(_OWORD *)(v19 + 8) = *(_OWORD *)(v20 + 8);
  uint64_t v23 = *(int *)(v10 + 24);
  uint64_t v24 = v19 + v23;
  uint64_t v25 = v20 + v23;
  uint64_t v26 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v19, 0, 1, v10);
LABEL_13:
  uint64_t v28 = a3[8];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 40))(v29, v30, v31);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoClientUndoRedoRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253938B74);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoClientUndoRedoRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253938B8C);
}

void sub_253938B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_253938BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  sub_253760A08(319, a5, a6);
  if (v6 <= 0x3F)
  {
    sub_253B07160();
    if (v7 <= 0x3F)
    {
      sub_25394507C();
      sub_2535E2578();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoTypeConversionRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253B08E50();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = a3[5];
    int v11 = (char *)a1 + v10;
    int v12 = (char *)a2 + v10;
    uint64_t v13 = sub_253B08E60();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = sub_253462A5C(&qword_269CDFA30);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v11, 0, 1, v13);
    }
    uint64_t v15 = a3[6];
    uint64_t v16 = (uint64_t *)((char *)a1 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18))
    {
      uint64_t v19 = sub_253462A5C(&qword_26B249528);
      memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
      uint64_t v20 = v17[2];
      v16[1] = v17[1];
      v16[2] = v20;
      uint64_t v21 = *(int *)(v18 + 24);
      int v22 = (char *)v16 + v21;
      uint64_t v30 = (char *)v17 + v21;
      uint64_t v23 = sub_253B07160();
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v24(v22, v30, v23);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v18);
    }
    uint64_t v25 = a3[7];
    uint64_t v26 = (char *)a1 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoTypeConversionRequest(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_253B08E50();
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_253B08E60();
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v7 + *(int *)(v8 + 24);
    uint64_t v10 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  uint64_t v11 = a1 + a2[7];
  uint64_t v12 = sub_253B07160();
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  return v13(v11, v12);
}

char *initializeWithCopy for TranscriptProtoTypeConversionRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_253B08E50();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_253B08E60();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_253462A5C(&qword_269CDFA30);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = sub_253462A5C(&qword_26B249528);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
    uint64_t v18 = *((void *)v15 + 2);
    *((void *)v14 + 1) = *((void *)v15 + 1);
    *((void *)v14 + 2) = v18;
    uint64_t v19 = *(int *)(v16 + 24);
    uint64_t v20 = &v14[v19];
    uint64_t v28 = &v15[v19];
    uint64_t v21 = sub_253B07160();
    int v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
    swift_bridgeObjectRetain();
    v22(v20, v28, v21);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v14, 0, 1, v16);
  }
  uint64_t v23 = a3[7];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

char *assignWithCopy for TranscriptProtoTypeConversionRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_253B08E50();
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_253B08E60();
  int v15 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v14);
  int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v17 = *(void *)(v14 - 8);
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v14);
LABEL_12:
    uint64_t v18 = sub_253462A5C(&qword_269CDFA30);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v12, v13, v14);
LABEL_13:
  uint64_t v19 = a3[6];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = type metadata accessor for TranscriptProtoStatementID(0);
  int v23 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v22);
  int v24 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v22);
  if (!v23)
  {
    if (!v24)
    {
      *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
      *((void *)v20 + 1) = *((void *)v21 + 1);
      *((void *)v20 + 2) = *((void *)v21 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v35 = *(int *)(v22 + 24);
      uint64_t v36 = &v20[v35];
      uint64_t v37 = &v21[v35];
      uint64_t v38 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
      goto LABEL_19;
    }
    sub_2536FA73C();
    goto LABEL_18;
  }
  if (v24)
  {
LABEL_18:
    uint64_t v29 = sub_253462A5C(&qword_26B249528);
    memcpy(v20, v21, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  *((void *)v20 + 2) = *((void *)v21 + 2);
  uint64_t v25 = *(int *)(v22 + 24);
  uint64_t v26 = &v20[v25];
  uint64_t v39 = &v21[v25];
  uint64_t v27 = sub_253B07160();
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  v28(v26, v39, v27);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, v22);
LABEL_19:
  uint64_t v30 = a3[7];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 24))(v31, v32, v33);
  return a1;
}

char *initializeWithTake for TranscriptProtoTypeConversionRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_253B08E50();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_253B08E60();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_253462A5C(&qword_269CDFA30);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  int v15 = &a2[v13];
  uint64_t v16 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = sub_253462A5C(&qword_26B249528);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
    *(_OWORD *)(v14 + 8) = *(_OWORD *)(v15 + 8);
    uint64_t v18 = *(int *)(v16 + 24);
    uint64_t v19 = &v14[v18];
    uint64_t v20 = &v15[v18];
    uint64_t v21 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v14, 0, 1, v16);
  }
  uint64_t v22 = a3[7];
  int v23 = &a1[v22];
  int v24 = &a2[v22];
  uint64_t v25 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  return a1;
}

char *assignWithTake for TranscriptProtoTypeConversionRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_253B08E50();
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_253B08E60();
  int v15 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v14);
  int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v17 = *(void *)(v14 - 8);
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v14);
LABEL_12:
    uint64_t v18 = sub_253462A5C(&qword_269CDFA30);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v12, v13, v14);
LABEL_13:
  uint64_t v19 = a3[6];
  uint64_t v20 = (uint64_t)&a1[v19];
  uint64_t v21 = (uint64_t)&a2[v19];
  uint64_t v22 = type metadata accessor for TranscriptProtoStatementID(0);
  int v23 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v20, 1, v22);
  int v24 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v21, 1, v22);
  if (!v23)
  {
    if (!v24)
    {
      *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
      uint64_t v35 = *(void *)(v21 + 16);
      *(void *)(v20 + 8) = *(void *)(v21 + 8);
      *(void *)(v20 + 16) = v35;
      swift_bridgeObjectRelease();
      uint64_t v36 = *(int *)(v22 + 24);
      uint64_t v37 = v20 + v36;
      uint64_t v38 = v21 + v36;
      uint64_t v39 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 40))(v37, v38, v39);
      goto LABEL_19;
    }
    sub_2536FA73C();
    goto LABEL_18;
  }
  if (v24)
  {
LABEL_18:
    uint64_t v29 = sub_253462A5C(&qword_26B249528);
    memcpy((void *)v20, (const void *)v21, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(_OWORD *)(v20 + 8) = *(_OWORD *)(v21 + 8);
  uint64_t v25 = *(int *)(v22 + 24);
  uint64_t v26 = v20 + v25;
  uint64_t v27 = v21 + v25;
  uint64_t v28 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v20, 0, 1, v22);
LABEL_19:
  uint64_t v30 = a3[7];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoTypeConversionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253939F00);
}

uint64_t sub_253939F00()
{
  sub_2534DA0C4();
  sub_253462A5C(&qword_269CDCBC8);
  sub_2535782A8();
  if (*(_DWORD *)(v2 + 84) == v0)
  {
    uint64_t v3 = sub_253945320();
  }
  else
  {
    sub_253462A5C(&qword_269CDFA30);
    sub_2535782A8();
    if (*(_DWORD *)(v5 + 84) == v0)
    {
      sub_2535E263C();
    }
    else
    {
      sub_253462A5C(&qword_26B249528);
      sub_2535782A8();
      if (*(_DWORD *)(v7 + 84) == v0)
      {
        sub_2535E2560();
      }
      else
      {
        sub_253B07160();
        sub_2535E256C();
      }
    }
    uint64_t v3 = v1 + v6;
  }
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v3, v0, v4);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoTypeConversionRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253939FDC);
}

uint64_t sub_253939FDC(uint64_t a1, uint64_t a2, int a3)
{
  sub_2534DA0C4();
  sub_253462A5C(&qword_269CDCBC8);
  sub_2535782A8();
  if (*(_DWORD *)(v4 + 84) == a3)
  {
    sub_253944FD8();
  }
  else
  {
    sub_253462A5C(&qword_269CDFA30);
    sub_2535782A8();
    if (*(_DWORD *)(v5 + 84) == a3)
    {
      sub_2535E272C();
    }
    else
    {
      sub_253462A5C(&qword_26B249528);
      sub_2535782A8();
      if (*(_DWORD *)(v6 + 84) == a3)
      {
        sub_2535E26D8();
      }
      else
      {
        sub_253B07160();
        sub_2535E26E4();
      }
    }
  }
  sub_2535E228C();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, v8, v9, v10);
}

void sub_25393A0A8()
{
  sub_253760A08(319, &qword_26B24A358, MEMORY[0x263F802B0]);
  if (v0 <= 0x3F)
  {
    sub_253760A08(319, &qword_26B24A360, MEMORY[0x263F802D0]);
    if (v1 <= 0x3F)
    {
      sub_253760A08(319, &qword_26B249530, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
      if (v2 <= 0x3F)
      {
        sub_253B07160();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void initializeBufferWithCopyOfBuffer for TranscriptProtoTypeConversionResult()
{
}

void sub_25393A25C()
{
  sub_2535E2390();
  unint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_2535782A8();
  if ((*(_DWORD *)(v7 + 80) & 0x20000) != 0)
  {
    sub_2539442C0(*v1);
  }
  else
  {
    uint64_t v8 = v6;
    uint64_t v9 = v4;
    v5(0);
    if (sub_2539449E0())
    {
      uint64_t v10 = sub_253462A5C(v8);
      uint64_t v11 = sub_25346CB4C(v10);
      sub_2539445E4(v11, v13, *(void *)(v12 + 64));
    }
    else
    {
      sub_25347B88C();
      sub_2534B3428();
      v14();
      sub_2539446A0(v3);
    }
    uint64_t v15 = *(int *)(v9 + 20);
    uint64_t v16 = v3 + v15;
    uint64_t v17 = (uint64_t)v1 + v15;
    type metadata accessor for TranscriptProtoStatementID(0);
    if (sub_2539443F0(v17))
    {
      uint64_t v18 = sub_253462A5C(&qword_26B249528);
      uint64_t v19 = sub_25346CB4C(v18);
      sub_2539449C8(v19, v21, *(void *)(v20 + 64));
    }
    else
    {
      sub_25394439C();
      sub_25346CAF4();
      int v23 = *(void (**)(uint64_t))(v22 + 16);
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_253944658();
      v23(v24);
      sub_2536D4030(v16);
    }
    uint64_t v25 = *(int *)(v9 + 24);
    uint64_t v26 = v3 + v25;
    if (sub_2539443F0((uint64_t)v1 + v25))
    {
      uint64_t v27 = sub_253462A5C(&qword_26B249528);
      uint64_t v28 = sub_25346CB4C(v27);
      sub_2539449C8(v28, v30, *(void *)(v29 + 64));
    }
    else
    {
      sub_25394439C();
      sub_25346CAF4();
      uint64_t v32 = *(void (**)(uint64_t))(v31 + 16);
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_253944658();
      v32(v33);
      sub_2536D4030(v26);
    }
    sub_25394426C();
    sub_25346CAF4();
    uint64_t v34 = sub_25354710C();
    v35(v34);
  }
  sub_2535E2374();
}

uint64_t destroy for TranscriptProtoTypeConversionResult(uint64_t a1, uint64_t a2)
{
  return sub_25393A454(a1, a2, MEMORY[0x263F802B0]);
}

uint64_t sub_25393A454(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = a3(0);
  if (!sub_253944F38(v6))
  {
    sub_25347B88C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v3);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 20);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!sub_253945BA0())
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = v8 + *(int *)(v9 + 24);
    sub_253B07160();
    sub_25346CAF4();
    (*(void (**)(uint64_t))(v11 + 8))(v10);
  }
  if (!sub_253945BA0())
  {
    swift_bridgeObjectRelease();
    sub_253B07160();
    sub_25346CAF4();
    uint64_t v12 = sub_253945338();
    v13(v12);
  }
  sub_253944D10();
  sub_25346CAF4();
  uint64_t v14 = sub_2539446BC();
  return v15(v14);
}

void initializeWithCopy for TranscriptProtoTypeConversionResult()
{
}

void sub_25393A5C0()
{
  sub_2535E2390();
  uint64_t v4 = sub_2539449AC();
  v5(v4);
  if (sub_2539443F0(v1))
  {
    uint64_t v6 = sub_253462A5C(v3);
    uint64_t v7 = sub_25346CB4C(v6);
    sub_2539445E4(v7, v9, *(void *)(v8 + 64));
  }
  else
  {
    sub_25347B88C();
    sub_2534B3428();
    v10();
    sub_2536D4030(v0);
  }
  uint64_t v11 = *(int *)(v2 + 20);
  uint64_t v12 = v0 + v11;
  uint64_t v13 = v1 + v11;
  type metadata accessor for TranscriptProtoStatementID(0);
  if (sub_2539443F0(v13))
  {
    uint64_t v14 = sub_253462A5C(&qword_26B249528);
    uint64_t v15 = sub_25346CB4C(v14);
    sub_2539449C8(v15, v17, *(void *)(v16 + 64));
  }
  else
  {
    sub_25394439C();
    sub_25346CAF4();
    uint64_t v19 = *(void (**)(uint64_t))(v18 + 16);
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_253944B34();
    v19(v20);
    sub_2536D4030(v12);
  }
  uint64_t v21 = *(int *)(v2 + 24);
  uint64_t v22 = v0 + v21;
  if (sub_2539443F0(v1 + v21))
  {
    uint64_t v23 = sub_253462A5C(&qword_26B249528);
    uint64_t v24 = sub_25346CB4C(v23);
    sub_2539449C8(v24, v26, *(void *)(v25 + 64));
  }
  else
  {
    sub_25394439C();
    sub_25394609C();
    uint64_t v28 = *(void (**)(uint64_t))(v27 + 16);
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_253945AAC();
    v28(v29);
    sub_2536D4030(v22);
  }
  sub_25394426C();
  sub_25346CAF4();
  sub_2534B3428();
  v30();
  sub_2535E2374();
}

void assignWithCopy for TranscriptProtoTypeConversionResult()
{
}

void sub_25393A7A4()
{
  sub_2535E2390();
  uint64_t v4 = sub_2539449AC();
  uint64_t v6 = v5(v4);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v0, 1, v6);
  int v8 = sub_2539443F0(v1);
  if (v7)
  {
    if (!v8)
    {
      sub_25347B88C();
      sub_2534B3428();
      v9();
      sub_2536D4030(v0);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  sub_2535782A8();
  if (v10)
  {
    uint64_t v11 = sub_253946240();
    v12(v11);
LABEL_6:
    uint64_t v13 = sub_253462A5C(v3);
    uint64_t v14 = sub_25346CB4C(v13);
    sub_2539445E4(v14, v16, *(void *)(v15 + 64));
    goto LABEL_7;
  }
  uint64_t v43 = sub_2539462A0();
  v44(v43);
LABEL_7:
  uint64_t v17 = *(int *)(v2 + 20);
  uint64_t v18 = v0 + v17;
  uint64_t v19 = v1 + v17;
  uint64_t v20 = type metadata accessor for TranscriptProtoStatementID(0);
  int v21 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v18, 1, v20);
  int v22 = sub_2539443F0(v19);
  if (v21)
  {
    if (!v22)
    {
      *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
      *(void *)(v18 + 8) = *(void *)(v19 + 8);
      *(void *)(v18 + 16) = *(void *)(v19 + 16);
      sub_2539444CC();
      sub_25346CAF4();
      uint64_t v24 = *(void (**)(uint64_t))(v23 + 16);
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_253944B34();
      v24(v25);
      sub_2536D4030(v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    sub_2536FA73C();
LABEL_12:
    uint64_t v26 = sub_253462A5C(&qword_26B249528);
    uint64_t v27 = sub_25346CB4C(v26);
    sub_2539449C8(v27, v29, *(void *)(v28 + 64));
    goto LABEL_13;
  }
  sub_253944B08();
  swift_bridgeObjectRelease();
  sub_253944E94();
  sub_25346CAF4();
  sub_253944540();
  v45();
LABEL_13:
  uint64_t v30 = *(int *)(v2 + 24);
  uint64_t v31 = v0 + v30;
  uint64_t v32 = v1 + v30;
  int v33 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v0 + v30, 1, v20);
  int v34 = sub_2539443F0(v32);
  if (!v33)
  {
    if (!v34)
    {
      sub_253944B08();
      swift_bridgeObjectRelease();
      sub_253944EAC();
      sub_25346CAF4();
      sub_253944540();
      v46();
      goto LABEL_19;
    }
    sub_2536FA73C();
    goto LABEL_18;
  }
  if (v34)
  {
LABEL_18:
    uint64_t v38 = sub_253462A5C(&qword_26B249528);
    uint64_t v39 = sub_25346CB4C(v38);
    sub_2539449C8(v39, v41, *(void *)(v40 + 64));
    goto LABEL_19;
  }
  *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
  *(void *)(v31 + 8) = *(void *)(v32 + 8);
  *(void *)(v31 + 16) = *(void *)(v32 + 16);
  sub_2539444CC();
  sub_25394609C();
  uint64_t v36 = *(void (**)(uint64_t))(v35 + 16);
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_253945AAC();
  v36(v37);
  sub_2536D4030(v31);
LABEL_19:
  sub_25394426C();
  sub_25346CAF4();
  sub_2539444A8();
  v42();
  sub_2535E2374();
}

void initializeWithTake for TranscriptProtoTypeConversionResult()
{
}

void sub_25393AAEC()
{
  sub_2535B3C98();
  uint64_t v4 = sub_2539449AC();
  v5(v4);
  if (sub_2539443F0(v1))
  {
    uint64_t v6 = sub_253462A5C(v3);
    uint64_t v7 = sub_25346CB4C(v6);
    sub_2539445E4(v7, v9, *(void *)(v8 + 64));
  }
  else
  {
    sub_25347B88C();
    sub_2534D8E14();
    v10();
    sub_2536D4030(v0);
  }
  uint64_t v11 = *(int *)(v2 + 20);
  uint64_t v12 = v0 + v11;
  uint64_t v13 = v1 + v11;
  type metadata accessor for TranscriptProtoStatementID(0);
  if (sub_2539443F0(v13))
  {
    uint64_t v14 = sub_253462A5C(&qword_26B249528);
    uint64_t v15 = sub_25346CB4C(v14);
    sub_2539449C8(v15, v17, *(void *)(v16 + 64));
  }
  else
  {
    sub_253944460();
    sub_25346CAF4();
    sub_2534D8E14();
    v18();
    sub_2536D4030(v12);
  }
  uint64_t v19 = *(int *)(v2 + 24);
  uint64_t v20 = v0 + v19;
  if (sub_2539443F0(v1 + v19))
  {
    uint64_t v21 = sub_253462A5C(&qword_26B249528);
    uint64_t v22 = sub_25346CB4C(v21);
    sub_2539449C8(v22, v24, *(void *)(v23 + 64));
  }
  else
  {
    sub_253944460();
    sub_25346CAF4();
    sub_2534D8E14();
    v25();
    sub_2536D4030(v20);
  }
  sub_25394426C();
  sub_25346CAF4();
  sub_2534D8E14();
  v26();
  sub_25346CD04();
}

void assignWithTake for TranscriptProtoTypeConversionResult()
{
}

void sub_25393ACC4()
{
  sub_2535B3C98();
  uint64_t v4 = sub_2539449AC();
  uint64_t v6 = v5(v4);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v0, 1, v6);
  int v8 = sub_2539443F0(v1);
  if (v7)
  {
    if (!v8)
    {
      sub_25347B88C();
      sub_2534D8E14();
      v9();
      sub_2536D4030(v0);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  sub_2535782A8();
  if (v10)
  {
    uint64_t v11 = sub_253946240();
    v12(v11);
LABEL_6:
    uint64_t v13 = sub_253462A5C(v3);
    uint64_t v14 = sub_25346CB4C(v13);
    sub_2539445E4(v14, v16, *(void *)(v15 + 64));
    goto LABEL_7;
  }
  uint64_t v39 = sub_2539462A0();
  v40(v39);
LABEL_7:
  uint64_t v17 = *(int *)(v2 + 20);
  uint64_t v18 = v0 + v17;
  uint64_t v19 = v1 + v17;
  uint64_t v20 = type metadata accessor for TranscriptProtoStatementID(0);
  int v21 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v18, 1, v20);
  int v22 = sub_2539443F0(v19);
  if (v21)
  {
    if (!v22)
    {
      sub_253944460();
      sub_25346CAF4();
      sub_2534D8E14();
      v23();
      sub_2536D4030(v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    sub_2536FA73C();
LABEL_12:
    uint64_t v24 = sub_253462A5C(&qword_26B249528);
    uint64_t v25 = sub_25346CB4C(v24);
    sub_2539449C8(v25, v27, *(void *)(v26 + 64));
    goto LABEL_13;
  }
  sub_253945058();
  sub_253944E94();
  sub_25346CAF4();
  sub_253944534();
  v41();
LABEL_13:
  uint64_t v28 = *(int *)(v2 + 24);
  uint64_t v29 = v0 + v28;
  uint64_t v30 = v1 + v28;
  int v31 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v0 + v28, 1, v20);
  int v32 = sub_2539443F0(v30);
  if (!v31)
  {
    if (!v32)
    {
      sub_253945058();
      sub_253944EAC();
      sub_25346CAF4();
      sub_253944534();
      v42();
      goto LABEL_19;
    }
    sub_2536FA73C();
    goto LABEL_18;
  }
  if (v32)
  {
LABEL_18:
    uint64_t v34 = sub_253462A5C(&qword_26B249528);
    uint64_t v35 = sub_25346CB4C(v34);
    sub_2539449C8(v35, v37, *(void *)(v36 + 64));
    goto LABEL_19;
  }
  sub_253944460();
  sub_25346CAF4();
  sub_2534D8E14();
  v33();
  sub_2536D4030(v29);
LABEL_19:
  sub_25394426C();
  sub_25346CAF4();
  sub_253944438();
  v38();
  sub_25346CD04();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoTypeConversionResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25393AFB4);
}

uint64_t sub_25393AFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393AFC0(a1, a2, a3, &qword_269CDCBC8);
}

uint64_t sub_25393AFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_253944F84(a1, a2, a3, a4);
  sub_2535782A8();
  if (*(_DWORD *)(v6 + 84) == v4)
  {
    uint64_t v7 = sub_253945320();
  }
  else
  {
    sub_253462A5C(&qword_26B249528);
    sub_2535782A8();
    if (*(_DWORD *)(v9 + 84) == v4)
    {
      sub_2535E263C();
    }
    else
    {
      sub_253B07160();
      sub_2535E256C();
    }
    uint64_t v7 = v5 + v10;
  }
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, v4, v8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoTypeConversionResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25393B064);
}

uint64_t sub_25393B064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393B070(a1, a2, a3, a4, &qword_269CDCBC8);
}

uint64_t sub_25393B070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  sub_253944B60(a1, a2, a3, a4, a5);
  sub_2535782A8();
  if (*(_DWORD *)(v6 + 84) == v5)
  {
    sub_253944FD8();
  }
  else
  {
    sub_253462A5C(&qword_26B249528);
    sub_2535782A8();
    if (*(_DWORD *)(v7 + 84) == v5)
    {
      sub_2535E272C();
    }
    else
    {
      sub_253B07160();
      sub_2535E26E4();
    }
  }
  sub_2535E228C();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v8, v9, v10, v11);
}

void sub_25393B100(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_25393B120(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  sub_253944F18(a1, a2, a3, a4, a5);
  if (v5 <= 0x3F)
  {
    sub_253760A08(319, &qword_26B249530, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
    if (v6 <= 0x3F)
    {
      sub_253B07160();
      if (v7 <= 0x3F)
      {
        sub_2539448CC();
        sub_2535E2578();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoQueryDecorationResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    unint64_t v6 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    unint64_t v6 = a1;
    uint64_t v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    uint64_t v8 = a2[4];
    a1[3] = a2[3];
    a1[4] = v8;
    uint64_t v9 = *(int *)(a3 + 36);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, DecorationToolRetrievalResponse))
    {
      uint64_t v13 = sub_253462A5C(&qword_269CDFA00);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v14 = v11[1];
      void *v10 = *v11;
      v10[1] = v14;
      uint64_t v15 = v11[3];
      v10[2] = v11[2];
      v10[3] = v15;
      *((_DWORD *)v10 + 8) = *((_DWORD *)v11 + 8);
      uint64_t v16 = v11[6];
      v10[5] = v11[5];
      v10[6] = v16;
      uint64_t v17 = *(int *)(DecorationToolRetrievalResponse + 36);
      uint64_t v25 = (char *)v11 + v17;
      uint64_t v26 = (char *)v10 + v17;
      uint64_t v18 = sub_253B07160();
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24(v26, v25, v18);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, DecorationToolRetrievalResponse);
    }
    uint64_t v19 = *(int *)(a3 + 40);
    uint64_t v20 = (char *)v6 + v19;
    int v21 = (char *)a2 + v19;
    uint64_t v22 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return v6;
}

uint64_t destroy for TranscriptProtoQueryDecorationResult(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, DecorationToolRetrievalResponse))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(DecorationToolRetrievalResponse + 36);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 40);
  uint64_t v9 = sub_253B07160();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  return v10(v8, v9);
}

void *initializeWithCopy for TranscriptProtoQueryDecorationResult(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  a1[4] = a2[4];
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, DecorationToolRetrievalResponse))
  {
    uint64_t v11 = sub_253462A5C(&qword_269CDFA00);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v12;
    uint64_t v13 = v9[3];
    v8[2] = v9[2];
    v8[3] = v13;
    *((_DWORD *)v8 + 8) = *((_DWORD *)v9 + 8);
    uint64_t v14 = v9[6];
    v8[5] = v9[5];
    v8[6] = v14;
    uint64_t v15 = *(int *)(DecorationToolRetrievalResponse + 36);
    uint64_t v23 = (char *)v9 + v15;
    uint64_t v24 = (char *)v8 + v15;
    uint64_t v16 = sub_253B07160();
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22(v24, v23, v16);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, DecorationToolRetrievalResponse);
  }
  uint64_t v17 = *(int *)(a3 + 40);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

void *assignWithCopy for TranscriptProtoQueryDecorationResult(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (uint64_t)a1 + v6;
  uint64_t v8 = (uint64_t)a2 + v6;
  uint64_t DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, DecorationToolRetrievalResponse);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, DecorationToolRetrievalResponse);
  if (!v10)
  {
    if (!v11)
    {
      *(void *)uint64_t v7 = *(void *)v8;
      *(void *)(v7 + 8) = *(void *)(v8 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v7 + 16) = *(void *)(v8 + 16);
      *(void *)(v7 + 24) = *(void *)(v8 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v7 + 32) = *(_DWORD *)(v8 + 32);
      *(void *)(v7 + 40) = *(void *)(v8 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v7 + 48) = *(void *)(v8 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v20 = *(int *)(DecorationToolRetrievalResponse + 36);
      uint64_t v21 = v7 + v20;
      uint64_t v22 = v8 + v20;
      uint64_t v23 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v14 = sub_253462A5C(&qword_269CDFA00);
    memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  *(void *)(v7 + 24) = *(void *)(v8 + 24);
  *(_DWORD *)(v7 + 32) = *(_DWORD *)(v8 + 32);
  *(void *)(v7 + 40) = *(void *)(v8 + 40);
  *(void *)(v7 + 48) = *(void *)(v8 + 48);
  uint64_t v12 = *(int *)(DecorationToolRetrievalResponse + 36);
  uint64_t v25 = v8 + v12;
  uint64_t v26 = v7 + v12;
  uint64_t v13 = sub_253B07160();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24(v26, v25, v13);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, 0, 1, DecorationToolRetrievalResponse);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 40);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoQueryDecorationResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  uint64_t DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, DecorationToolRetrievalResponse))
  {
    uint64_t v11 = sub_253462A5C(&qword_269CDFA00);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    long long v12 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v12;
    *((_DWORD *)v8 + 8) = *((_DWORD *)v9 + 8);
    *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
    uint64_t v13 = *(int *)(DecorationToolRetrievalResponse + 36);
    uint64_t v14 = (char *)v8 + v13;
    uint64_t v15 = (char *)v9 + v13;
    uint64_t v16 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, DecorationToolRetrievalResponse);
  }
  uint64_t v17 = *(int *)(a3 + 40);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  return a1;
}

void *assignWithTake for TranscriptProtoQueryDecorationResult(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (uint64_t)a1 + v6;
  uint64_t v8 = (uint64_t)a2 + v6;
  uint64_t DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, DecorationToolRetrievalResponse);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, DecorationToolRetrievalResponse);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v23 = *(void *)(v8 + 8);
      *(void *)uint64_t v7 = *(void *)v8;
      *(void *)(v7 + 8) = v23;
      swift_bridgeObjectRelease();
      uint64_t v24 = *(void *)(v8 + 24);
      *(void *)(v7 + 16) = *(void *)(v8 + 16);
      *(void *)(v7 + 24) = v24;
      swift_bridgeObjectRelease();
      *(_DWORD *)(v7 + 32) = *(_DWORD *)(v8 + 32);
      *(void *)(v7 + 40) = *(void *)(v8 + 40);
      swift_bridgeObjectRelease();
      *(void *)(v7 + 48) = *(void *)(v8 + 48);
      swift_bridgeObjectRelease();
      uint64_t v25 = *(int *)(DecorationToolRetrievalResponse + 36);
      uint64_t v26 = v7 + v25;
      uint64_t v27 = v8 + v25;
      uint64_t v28 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v17 = sub_253462A5C(&qword_269CDFA00);
    memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  long long v12 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v12;
  *(_DWORD *)(v7 + 32) = *(_DWORD *)(v8 + 32);
  *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
  uint64_t v13 = *(int *)(DecorationToolRetrievalResponse + 36);
  uint64_t v14 = v7 + v13;
  uint64_t v15 = v8 + v13;
  uint64_t v16 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, 0, 1, DecorationToolRetrievalResponse);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 40);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25393BE84);
}

uint64_t sub_25393BE84()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*v1);
  }
  sub_2535E2460();
  sub_253462A5C(&qword_269CDFA00);
  sub_2535782A8();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    sub_253945148();
  }
  else
  {
    sub_253B07160();
    sub_2539455B8();
  }
  uint64_t v6 = sub_2535E22C8(v5);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, v7, v8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25393BF28);
}

void sub_25393BF28()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E2538();
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_269CDFA00);
    sub_2535782A8();
    if (*(_DWORD *)(v2 + 84) == v0)
    {
      sub_25394519C();
    }
    else
    {
      sub_253B07160();
      sub_253945614();
    }
    uint64_t v4 = sub_2535E2234(v3);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, v5, v6, v7);
  }
}

void sub_25393BFB4()
{
  sub_253760A08(319, &qword_26B249DD0, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
  if (v0 <= 0x3F)
  {
    sub_253B07160();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoQueryDecorationPrePlannerResult(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    int v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_26B249528);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
      uint64_t v14 = v10[2];
      v9[1] = v10[1];
      v9[2] = v14;
      uint64_t v15 = *(int *)(v11 + 24);
      uint64_t v16 = (char *)v9 + v15;
      uint64_t v41 = (char *)v10 + v15;
      uint64_t v17 = sub_253B07160();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v16, v41, v17);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v19 = a3[6];
    uint64_t v20 = (uint64_t *)((char *)v4 + v19);
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    uint64_t DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, DecorationPrePlannerResultPayload))
    {
      uint64_t v23 = sub_253462A5C(&qword_269CE2560);
      memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      uint64_t DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, DecorationPrePlannerPayloadEnum))
      {
        uint64_t v25 = sub_253462A5C(&qword_269CE25A0);
        memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *uint64_t v20 = *v21;
            uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
            break;
          case 2u:
            *uint64_t v20 = *v21;
            uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
            break;
          case 3u:
            *uint64_t v20 = *v21;
            uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
            break;
          case 4u:
            *uint64_t v20 = *v21;
            uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
            break;
          case 5u:
            *uint64_t v20 = *v21;
            uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
            break;
          default:
            *uint64_t v20 = *v21;
            uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
            break;
        }
        uint64_t v27 = *(int *)(DecorationPrePlannerResultPayloadRepeatedTypedValueVariant + 20);
        uint64_t v39 = (char *)v21 + v27;
        uint64_t v40 = (char *)v20 + v27;
        uint64_t v28 = sub_253B07160();
        uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
        swift_bridgeObjectRetain();
        v38(v40, v39, v28);
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, DecorationPrePlannerPayloadEnum);
      }
      uint64_t v29 = *(int *)(DecorationPrePlannerResultPayload + 20);
      uint64_t v30 = (char *)v20 + v29;
      int v31 = (char *)v21 + v29;
      uint64_t v32 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, DecorationPrePlannerResultPayload);
    }
    uint64_t v33 = a3[7];
    uint64_t v34 = (char *)v4 + v33;
    uint64_t v35 = (char *)a2 + v33;
    uint64_t v36 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoQueryDecorationPrePlannerResult(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + a2[6];
  uint64_t DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, DecorationPrePlannerResultPayload))
  {
    uint64_t DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, DecorationPrePlannerPayloadEnum))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
          goto LABEL_12;
        case 1u:
          swift_bridgeObjectRelease();
          uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
          goto LABEL_12;
        case 2u:
          swift_bridgeObjectRelease();
          uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
          goto LABEL_12;
        case 3u:
          swift_bridgeObjectRelease();
          uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
          goto LABEL_12;
        case 4u:
          swift_bridgeObjectRelease();
          uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
          goto LABEL_12;
        case 5u:
          swift_bridgeObjectRelease();
          uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
LABEL_12:
          uint64_t v12 = v8 + *(int *)(DecorationPrePlannerResultPayloadRepeatedStringVariant + 20);
          uint64_t v13 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
          break;
        default:
          break;
      }
    }
    uint64_t v14 = v8 + *(int *)(DecorationPrePlannerResultPayload + 20);
    uint64_t v15 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }
  uint64_t v16 = a1 + a2[7];
  uint64_t v17 = sub_253B07160();
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8);
  return v18(v16, v17);
}

void *initializeWithCopy for TranscriptProtoQueryDecorationPrePlannerResult(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoStatementID(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_26B249528);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
    uint64_t v12 = v9[2];
    v8[1] = v9[1];
    v8[2] = v12;
    uint64_t v13 = *(int *)(v10 + 24);
    uint64_t v14 = (char *)v8 + v13;
    uint64_t v39 = (char *)v9 + v13;
    uint64_t v15 = sub_253B07160();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v14, v39, v15);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v17 = a3[6];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, DecorationPrePlannerResultPayload))
  {
    uint64_t v21 = sub_253462A5C(&qword_269CE2560);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, DecorationPrePlannerPayloadEnum))
    {
      uint64_t v23 = sub_253462A5C(&qword_269CE25A0);
      memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *uint64_t v18 = *v19;
          uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
          break;
        case 2u:
          *uint64_t v18 = *v19;
          uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
          break;
        case 3u:
          *uint64_t v18 = *v19;
          uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
          break;
        case 4u:
          *uint64_t v18 = *v19;
          uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
          break;
        case 5u:
          *uint64_t v18 = *v19;
          uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
          break;
        default:
          *uint64_t v18 = *v19;
          uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
          break;
      }
      uint64_t v25 = *(int *)(DecorationPrePlannerResultPayloadRepeatedTypedValueVariant + 20);
      uint64_t v37 = (char *)v19 + v25;
      uint64_t v38 = (char *)v18 + v25;
      uint64_t v26 = sub_253B07160();
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      v36(v38, v37, v26);
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, DecorationPrePlannerPayloadEnum);
    }
    uint64_t v27 = *(int *)(DecorationPrePlannerResultPayload + 20);
    uint64_t v28 = (char *)v18 + v27;
    uint64_t v29 = (char *)v19 + v27;
    uint64_t v30 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, DecorationPrePlannerResultPayload);
  }
  uint64_t v31 = a3[7];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

void *assignWithCopy for TranscriptProtoQueryDecorationPrePlannerResult(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      uint64_t v12 = *(int *)(v9 + 24);
      uint64_t v13 = (char *)v7 + v12;
      uint64_t v87 = (char *)v8 + v12;
      uint64_t v14 = sub_253B07160();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v13, v87, v14);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = *(int *)(v9 + 24);
  uint64_t v27 = (char *)v7 + v26;
  uint64_t v28 = (char *)v8 + v26;
  uint64_t v29 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 24))(v27, v28, v29);
LABEL_7:
  uint64_t v17 = a3[6];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  int v21 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, DecorationPrePlannerResultPayload);
  int v22 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, DecorationPrePlannerResultPayload);
  if (!v21)
  {
    if (v22)
    {
      sub_2536FA73C();
      goto LABEL_13;
    }
    uint64_t DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
    int v31 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, DecorationPrePlannerPayloadEnum);
    int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, DecorationPrePlannerPayloadEnum);
    if (v31)
    {
      if (!v32)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *uint64_t v18 = *v19;
            uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
            break;
          case 2u:
            *uint64_t v18 = *v19;
            uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
            break;
          case 3u:
            *uint64_t v18 = *v19;
            uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
            break;
          case 4u:
            *uint64_t v18 = *v19;
            uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
            break;
          case 5u:
            *uint64_t v18 = *v19;
            uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
            break;
          default:
            *uint64_t v18 = *v19;
            uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
            break;
        }
        uint64_t v45 = *(int *)(DecorationPrePlannerResultPayloadRepeatedTypedValueVariant + 20);
        uint64_t v90 = (char *)v18 + v45;
        uint64_t v81 = (char *)v19 + v45;
        uint64_t v46 = sub_253B07160();
        uint64_t v73 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16);
        swift_bridgeObjectRetain();
        v73(v90, v81, v46);
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, DecorationPrePlannerPayloadEnum);
        goto LABEL_46;
      }
    }
    else
    {
      if (!v32)
      {
        if (a1 != a2)
        {
          sub_2536FA73C();
          uint64_t v88 = a3;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *uint64_t v18 = *v19;
              uint64_t v47 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0)
                           + 20);
              uint64_t v74 = (char *)v19 + v47;
              uint64_t v82 = (char *)v18 + v47;
              uint64_t v48 = sub_253B07160();
              uint64_t v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16);
              swift_bridgeObjectRetain();
              v49(v82, v74, v48);
              break;
            case 2u:
              *uint64_t v18 = *v19;
              uint64_t v50 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0)
                           + 20);
              uint64_t v75 = (char *)v19 + v50;
              uint64_t v83 = (char *)v18 + v50;
              uint64_t v51 = sub_253B07160();
              uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16);
              swift_bridgeObjectRetain();
              v52(v83, v75, v51);
              break;
            case 3u:
              *uint64_t v18 = *v19;
              uint64_t v53 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0)
                           + 20);
              uint64_t v76 = (char *)v19 + v53;
              uint64_t v84 = (char *)v18 + v53;
              uint64_t v54 = sub_253B07160();
              uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16);
              swift_bridgeObjectRetain();
              v55(v84, v76, v54);
              break;
            case 4u:
              *uint64_t v18 = *v19;
              uint64_t v56 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0)
                           + 20);
              uint64_t v77 = (char *)v19 + v56;
              uint64_t v85 = (char *)v18 + v56;
              uint64_t v57 = sub_253B07160();
              uint64_t v58 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16);
              swift_bridgeObjectRetain();
              v58(v85, v77, v57);
              break;
            case 5u:
              *uint64_t v18 = *v19;
              uint64_t v59 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0)
                           + 20);
              uint64_t v78 = (char *)v19 + v59;
              uint64_t v86 = (char *)v18 + v59;
              uint64_t v60 = sub_253B07160();
              uint64_t v61 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16);
              swift_bridgeObjectRetain();
              v61(v86, v78, v60);
              break;
            default:
              *uint64_t v18 = *v19;
              uint64_t v36 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0)
                           + 20);
              uint64_t v71 = (char *)v19 + v36;
              uint64_t v79 = (char *)v18 + v36;
              uint64_t v37 = sub_253B07160();
              uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
              swift_bridgeObjectRetain();
              v38(v79, v71, v37);
              break;
          }
          swift_storeEnumTagMultiPayload();
          a3 = v88;
        }
        goto LABEL_46;
      }
      sub_2536FA73C();
    }
    uint64_t v35 = sub_253462A5C(&qword_269CE25A0);
    memcpy(v18, v19, *(void *)(*(void *)(v35 - 8) + 64));
LABEL_46:
    uint64_t v62 = *(int *)(DecorationPrePlannerResultPayload + 20);
    uint64_t v63 = (char *)v18 + v62;
    uint64_t v64 = (char *)v19 + v62;
    uint64_t v65 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 24))(v63, v64, v65);
    goto LABEL_47;
  }
  if (v22)
  {
LABEL_13:
    uint64_t v25 = sub_253462A5C(&qword_269CE2560);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_47;
  }
  uint64_t v23 = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v23))
  {
    uint64_t v24 = sub_253462A5C(&qword_269CE25A0);
    memcpy(v18, v19, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v18 = *v19;
        uint64_t DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
        break;
      case 2u:
        *uint64_t v18 = *v19;
        uint64_t DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
        break;
      case 3u:
        *uint64_t v18 = *v19;
        uint64_t DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
        break;
      case 4u:
        *uint64_t v18 = *v19;
        uint64_t DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
        break;
      case 5u:
        *uint64_t v18 = *v19;
        uint64_t DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
        break;
      default:
        *uint64_t v18 = *v19;
        uint64_t DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
        break;
    }
    uint64_t v39 = *(int *)(DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant + 20);
    uint64_t v89 = (char *)v18 + v39;
    uint64_t v80 = (char *)v19 + v39;
    uint64_t v40 = sub_253B07160();
    uint64_t v72 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
    swift_bridgeObjectRetain();
    v72(v89, v80, v40);
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v23);
  }
  uint64_t v41 = *(int *)(DecorationPrePlannerResultPayload + 20);
  uint64_t v42 = (char *)v18 + v41;
  uint64_t v43 = (char *)v19 + v41;
  uint64_t v44 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, DecorationPrePlannerResultPayload);
LABEL_47:
  uint64_t v66 = a3[7];
  uint64_t v67 = (char *)a1 + v66;
  uint64_t v68 = (char *)a2 + v66;
  uint64_t v69 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 24))(v67, v68, v69);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoQueryDecorationPrePlannerResult(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (_DWORD *)((char *)a1 + v6);
  uint64_t v8 = (_DWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *uint64_t v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    uint64_t v11 = *(int *)(v9 + 24);
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    uint64_t v14 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, DecorationPrePlannerResultPayload))
  {
    uint64_t v19 = sub_253462A5C(&qword_269CE2560);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, DecorationPrePlannerPayloadEnum))
    {
      uint64_t v21 = sub_253462A5C(&qword_269CE25A0);
      memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *uint64_t v16 = *v17;
          uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
          break;
        case 2u:
          *uint64_t v16 = *v17;
          uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
          break;
        case 3u:
          *uint64_t v16 = *v17;
          uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
          break;
        case 4u:
          *uint64_t v16 = *v17;
          uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
          break;
        case 5u:
          *uint64_t v16 = *v17;
          uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
          break;
        default:
          *uint64_t v16 = *v17;
          uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
          break;
      }
      uint64_t v23 = *(int *)(DecorationPrePlannerResultPayloadRepeatedTypedValueVariant + 20);
      uint64_t v24 = (char *)v16 + v23;
      uint64_t v25 = (char *)v17 + v23;
      uint64_t v26 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, DecorationPrePlannerPayloadEnum);
    }
    uint64_t v27 = *(int *)(DecorationPrePlannerResultPayload + 20);
    uint64_t v28 = (char *)v16 + v27;
    uint64_t v29 = (char *)v17 + v27;
    uint64_t v30 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, DecorationPrePlannerResultPayload);
  }
  uint64_t v31 = a3[7];
  int v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

void *assignWithTake for TranscriptProtoQueryDecorationPrePlannerResult(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoStatementID(0);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
      *(_OWORD *)(v8 + 1) = *(_OWORD *)(v9 + 1);
      uint64_t v13 = *(int *)(v10 + 24);
      uint64_t v14 = (char *)v8 + v13;
      uint64_t v15 = (char *)v9 + v13;
      uint64_t v16 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v17 = sub_253462A5C(&qword_26B249528);
    memcpy(v8, v9, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  uint64_t v27 = v9[2];
  v8[1] = v9[1];
  v8[2] = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(int *)(v10 + 24);
  uint64_t v29 = (char *)v8 + v28;
  uint64_t v30 = (char *)v9 + v28;
  uint64_t v31 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 40))(v29, v30, v31);
LABEL_7:
  uint64_t v18 = a3[6];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  int v22 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, DecorationPrePlannerResultPayload);
  int v23 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, DecorationPrePlannerResultPayload);
  if (!v22)
  {
    if (v23)
    {
      sub_2536FA73C();
      goto LABEL_13;
    }
    uint64_t DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
    int v33 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, DecorationPrePlannerPayloadEnum);
    int v34 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, DecorationPrePlannerPayloadEnum);
    if (v33)
    {
      if (!v34)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *uint64_t v19 = *v20;
            uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
            break;
          case 2u:
            *uint64_t v19 = *v20;
            uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
            break;
          case 3u:
            *uint64_t v19 = *v20;
            uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
            break;
          case 4u:
            *uint64_t v19 = *v20;
            uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
            break;
          case 5u:
            *uint64_t v19 = *v20;
            uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
            break;
          default:
            *uint64_t v19 = *v20;
            uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
            break;
        }
        uint64_t v50 = *(int *)(DecorationPrePlannerResultPayloadRepeatedTypedValueVariant + 20);
        uint64_t v51 = (char *)v19 + v50;
        uint64_t v52 = (char *)v20 + v50;
        uint64_t v53 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, DecorationPrePlannerPayloadEnum);
        goto LABEL_46;
      }
    }
    else
    {
      if (!v34)
      {
        if (a1 != a2)
        {
          sub_2536FA73C();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *uint64_t v19 = *v20;
              uint64_t v54 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0)
                           + 20);
              uint64_t v55 = (char *)v19 + v54;
              uint64_t v56 = (char *)v20 + v54;
              uint64_t v57 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
              break;
            case 2u:
              *uint64_t v19 = *v20;
              uint64_t v58 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0)
                           + 20);
              uint64_t v59 = (char *)v19 + v58;
              uint64_t v60 = (char *)v20 + v58;
              uint64_t v61 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
              break;
            case 3u:
              *uint64_t v19 = *v20;
              uint64_t v62 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0)
                           + 20);
              uint64_t v63 = (char *)v19 + v62;
              uint64_t v64 = (char *)v20 + v62;
              uint64_t v65 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v63, v64, v65);
              break;
            case 4u:
              *uint64_t v19 = *v20;
              uint64_t v66 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0)
                           + 20);
              uint64_t v67 = (char *)v19 + v66;
              uint64_t v68 = (char *)v20 + v66;
              uint64_t v69 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v67, v68, v69);
              break;
            case 5u:
              *uint64_t v19 = *v20;
              uint64_t v70 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0)
                           + 20);
              uint64_t v71 = (char *)v19 + v70;
              uint64_t v72 = (char *)v20 + v70;
              uint64_t v73 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v71, v72, v73);
              break;
            default:
              *uint64_t v19 = *v20;
              uint64_t v38 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0)
                           + 20);
              uint64_t v39 = (char *)v19 + v38;
              uint64_t v40 = (char *)v20 + v38;
              uint64_t v41 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
              break;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_46;
      }
      sub_2536FA73C();
    }
    uint64_t v37 = sub_253462A5C(&qword_269CE25A0);
    memcpy(v19, v20, *(void *)(*(void *)(v37 - 8) + 64));
LABEL_46:
    uint64_t v74 = *(int *)(DecorationPrePlannerResultPayload + 20);
    uint64_t v75 = (char *)v19 + v74;
    uint64_t v76 = (char *)v20 + v74;
    uint64_t v77 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 40))(v75, v76, v77);
    goto LABEL_47;
  }
  if (v23)
  {
LABEL_13:
    uint64_t v26 = sub_253462A5C(&qword_269CE2560);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_47;
  }
  uint64_t v24 = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v24))
  {
    uint64_t v25 = sub_253462A5C(&qword_269CE25A0);
    memcpy(v19, v20, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v19 = *v20;
        uint64_t DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
        break;
      case 2u:
        *uint64_t v19 = *v20;
        uint64_t DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
        break;
      case 3u:
        *uint64_t v19 = *v20;
        uint64_t DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
        break;
      case 4u:
        *uint64_t v19 = *v20;
        uint64_t DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
        break;
      case 5u:
        *uint64_t v19 = *v20;
        uint64_t DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
        break;
      default:
        *uint64_t v19 = *v20;
        uint64_t DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
        break;
    }
    uint64_t v42 = *(int *)(DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant + 20);
    uint64_t v43 = (char *)v19 + v42;
    uint64_t v44 = (char *)v20 + v42;
    uint64_t v45 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v24);
  }
  uint64_t v46 = *(int *)(DecorationPrePlannerResultPayload + 20);
  uint64_t v47 = (char *)v19 + v46;
  uint64_t v48 = (char *)v20 + v46;
  uint64_t v49 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, DecorationPrePlannerResultPayload);
LABEL_47:
  uint64_t v78 = a3[7];
  uint64_t v79 = (char *)a1 + v78;
  uint64_t v80 = (char *)a2 + v78;
  uint64_t v81 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 40))(v79, v80, v81);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25393E2B0);
}

uint64_t sub_25393E2B0()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*(void *)(v1 + 8));
  }
  sub_2535E2460();
  sub_253462A5C(&qword_26B249528);
  sub_2535782A8();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    sub_2535E263C();
  }
  else
  {
    sub_253462A5C(&qword_269CE2560);
    sub_2535782A8();
    if (*(_DWORD *)(v6 + 84) == v0)
    {
      sub_2535E2560();
    }
    else
    {
      sub_253B07160();
      sub_2535E256C();
    }
  }
  uint64_t v7 = sub_2535E22C8(v5);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, v8, v9);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25393E37C);
}

void sub_25393E37C()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E24BC();
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_26B249528);
    sub_2535782A8();
    if (*(_DWORD *)(v2 + 84) == v0)
    {
      sub_2535E272C();
    }
    else
    {
      sub_253462A5C(&qword_269CE2560);
      sub_2535782A8();
      if (*(_DWORD *)(v4 + 84) == v0)
      {
        sub_2535E26D8();
      }
      else
      {
        sub_253B07160();
        sub_2535E26E4();
      }
    }
    uint64_t v5 = sub_2535E2234(v3);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v5, v6, v7, v8);
  }
}

void sub_25393E430()
{
}

void sub_25393E458()
{
  sub_253760A08(319, &qword_26B249530, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
  if (v0 <= 0x3F)
  {
    sub_253945F20();
    if (v1 <= 0x3F)
    {
      sub_253945F80();
      if (v2 <= 0x3F)
      {
        sub_2539448CC();
        sub_2535E2578();
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25393E578);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25393E590);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25393E5A8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25393E5C0);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25393E5D8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25393E5F0);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25393E608);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25393E620);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25393E638);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25393E650);
}

void _s30IntelligenceFlowPlannerSupport34TranscriptProtoValueDisambiguationVwCP_0()
{
  sub_2535B3C98();
  sub_2535782A8();
  int v1 = *(_DWORD *)(v0 + 80);
  *uint64_t v3 = *v2;
  if ((v1 & 0x20000) != 0)
  {
    sub_253945A70();
  }
  else
  {
    sub_253945020();
    sub_25346CAF4();
    uint64_t v5 = *(void (**)(uint64_t))(v4 + 16);
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_2539445B0();
    v5(v6);
  }
  sub_25346CD04();
}

uint64_t _s30IntelligenceFlowPlannerSupport34TranscriptProtoValueDisambiguationVwxx_0()
{
  swift_bridgeObjectRelease();
  sub_253944E5C();
  sub_25346CAF4();
  uint64_t v0 = sub_2539446BC();
  return v1(v0);
}

void _s30IntelligenceFlowPlannerSupport34TranscriptProtoValueDisambiguationVwcp_0()
{
  sub_2535B3C98();
  *int v1 = *v0;
  sub_253945020();
  sub_25346CAF4();
  uint64_t v3 = *(void (**)(uint64_t))(v2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_2539445B0();
  v3(v4);
  sub_25346CD04();
}

uint64_t _s30IntelligenceFlowPlannerSupport34TranscriptProtoValueDisambiguationVwca_0(void *a1, void *a2)
{
  sub_2539456FC(a1, a2);
  swift_bridgeObjectRelease();
  sub_2535E22F0();
  sub_25346CAF4();
  sub_2539444A8();
  v3();
  return v2;
}

void *_s30IntelligenceFlowPlannerSupport34TranscriptProtoValueDisambiguationVwtk_0(void *a1, void *a2)
{
  *a1 = *a2;
  sub_253944340();
  sub_25346CAF4();
  sub_2534D8E14();
  v3();
  return a1;
}

uint64_t _s30IntelligenceFlowPlannerSupport34TranscriptProtoValueDisambiguationVwta_0(void *a1, void *a2)
{
  sub_2539456D4(a1, a2);
  sub_2535E22F0();
  sub_25346CAF4();
  sub_253944438();
  v3();
  return v2;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25393E8DC);
}

uint64_t sub_25393E8E0()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*v0);
  }
  sub_2535E22D4();
  uint64_t v4 = sub_2535E22C8(*(int *)(v1 + 20));
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25393E958);
}

void sub_25393E95C()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E2538();
  }
  else
  {
    sub_2535E235C();
    uint64_t v2 = sub_2535E2234(*(int *)(v0 + 20));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, v3, v4, v5);
  }
}

uint64_t sub_25393E9BC()
{
  uint64_t result = sub_253B07160();
  if (v1 <= 0x3F)
  {
    sub_2539459B8();
    return sub_2535E2578();
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoQueryDecorationPrePlannerResultPayload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, DecorationPrePlannerPayloadEnum))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE25A0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *a1 = *a2;
          uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
          break;
        case 2u:
          *a1 = *a2;
          uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
          break;
        case 3u:
          *a1 = *a2;
          uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
          break;
        case 4u:
          *a1 = *a2;
          uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
          break;
        case 5u:
          *a1 = *a2;
          uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
          break;
        default:
          *a1 = *a2;
          uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
          break;
      }
      uint64_t v11 = *(int *)(DecorationPrePlannerResultPayloadRepeatedTypedValueVariant + 20);
      uint64_t v20 = (char *)a1 + v11;
      int v12 = (char *)a2 + v11;
      uint64_t v13 = sub_253B07160();
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v20, v12, v13);
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, DecorationPrePlannerPayloadEnum);
    }
    uint64_t v15 = *(int *)(a3 + 20);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoQueryDecorationPrePlannerResultPayload(uint64_t a1, uint64_t a2)
{
  uint64_t DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, DecorationPrePlannerPayloadEnum))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
        goto LABEL_9;
      case 1u:
        swift_bridgeObjectRelease();
        uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
        goto LABEL_9;
      case 2u:
        swift_bridgeObjectRelease();
        uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
        goto LABEL_9;
      case 3u:
        swift_bridgeObjectRelease();
        uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
        goto LABEL_9;
      case 4u:
        swift_bridgeObjectRelease();
        uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
        goto LABEL_9;
      case 5u:
        swift_bridgeObjectRelease();
        uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
LABEL_9:
        uint64_t v6 = a1 + *(int *)(DecorationPrePlannerResultPayloadRepeatedStringVariant + 20);
        uint64_t v7 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
        break;
      default:
        break;
    }
  }
  uint64_t v8 = a1 + *(int *)(a2 + 20);
  uint64_t v9 = sub_253B07160();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  return v10(v8, v9);
}

void *initializeWithCopy for TranscriptProtoQueryDecorationPrePlannerResultPayload(void *a1, void *a2, uint64_t a3)
{
  uint64_t DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, DecorationPrePlannerPayloadEnum))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE25A0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
        break;
      case 2u:
        *a1 = *a2;
        uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
        break;
      case 3u:
        *a1 = *a2;
        uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
        break;
      case 4u:
        *a1 = *a2;
        uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
        break;
      case 5u:
        *a1 = *a2;
        uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
        break;
      default:
        *a1 = *a2;
        uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
        break;
    }
    uint64_t v9 = *(int *)(DecorationPrePlannerResultPayloadRepeatedTypedValueVariant + 20);
    uint64_t v18 = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_253B07160();
    int v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v18, v10, v11);
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, DecorationPrePlannerPayloadEnum);
  }
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

void *assignWithCopy for TranscriptProtoQueryDecorationPrePlannerResultPayload(void *a1, void *a2, uint64_t a3)
{
  uint64_t DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, DecorationPrePlannerPayloadEnum);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, DecorationPrePlannerPayloadEnum);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *a1 = *a2;
          uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0)
                       + 20);
          uint64_t v21 = (char *)a1 + v20;
          int v22 = (char *)a2 + v20;
          uint64_t v23 = sub_253B07160();
          uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
          swift_bridgeObjectRetain();
          v24(v21, v22, v23);
          break;
        case 2u:
          *a1 = *a2;
          uint64_t v25 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0)
                       + 20);
          uint64_t v26 = (char *)a1 + v25;
          uint64_t v27 = (char *)a2 + v25;
          uint64_t v28 = sub_253B07160();
          uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
          swift_bridgeObjectRetain();
          v29(v26, v27, v28);
          break;
        case 3u:
          *a1 = *a2;
          uint64_t v30 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0)
                       + 20);
          uint64_t v31 = (char *)a1 + v30;
          int v32 = (char *)a2 + v30;
          uint64_t v33 = sub_253B07160();
          int v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
          swift_bridgeObjectRetain();
          v34(v31, v32, v33);
          break;
        case 4u:
          *a1 = *a2;
          uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0)
                       + 20);
          uint64_t v36 = (char *)a1 + v35;
          uint64_t v37 = (char *)a2 + v35;
          uint64_t v38 = sub_253B07160();
          uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
          swift_bridgeObjectRetain();
          v39(v36, v37, v38);
          break;
        case 5u:
          *a1 = *a2;
          uint64_t v40 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0)
                       + 20);
          uint64_t v41 = (char *)a1 + v40;
          uint64_t v42 = (char *)a2 + v40;
          uint64_t v43 = sub_253B07160();
          uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
          swift_bridgeObjectRetain();
          v44(v41, v42, v43);
          break;
        default:
          *a1 = *a2;
          uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0)
                      + 20);
          uint64_t v10 = (char *)a1 + v9;
          uint64_t v11 = (char *)a2 + v9;
          uint64_t v12 = sub_253B07160();
          uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
          swift_bridgeObjectRetain();
          v13(v10, v11, v12);
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, DecorationPrePlannerPayloadEnum);
      goto LABEL_23;
    }
LABEL_7:
    uint64_t v14 = sub_253462A5C(&qword_269CE25A0);
    memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_23;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v45 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0)
                     + 20);
        uint64_t v46 = (char *)a1 + v45;
        uint64_t v47 = (char *)a2 + v45;
        uint64_t v48 = sub_253B07160();
        uint64_t v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16);
        swift_bridgeObjectRetain();
        v49(v46, v47, v48);
        break;
      case 2u:
        *a1 = *a2;
        uint64_t v50 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0)
                     + 20);
        uint64_t v51 = (char *)a1 + v50;
        uint64_t v52 = (char *)a2 + v50;
        uint64_t v53 = sub_253B07160();
        uint64_t v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16);
        swift_bridgeObjectRetain();
        v54(v51, v52, v53);
        break;
      case 3u:
        *a1 = *a2;
        uint64_t v55 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0)
                     + 20);
        uint64_t v56 = (char *)a1 + v55;
        uint64_t v57 = (char *)a2 + v55;
        uint64_t v58 = sub_253B07160();
        uint64_t v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16);
        swift_bridgeObjectRetain();
        v59(v56, v57, v58);
        break;
      case 4u:
        *a1 = *a2;
        uint64_t v60 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0)
                     + 20);
        uint64_t v61 = (char *)a1 + v60;
        uint64_t v62 = (char *)a2 + v60;
        uint64_t v63 = sub_253B07160();
        uint64_t v64 = *(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16);
        swift_bridgeObjectRetain();
        v64(v61, v62, v63);
        break;
      case 5u:
        *a1 = *a2;
        uint64_t v65 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0)
                     + 20);
        uint64_t v66 = (char *)a1 + v65;
        uint64_t v67 = (char *)a2 + v65;
        uint64_t v68 = sub_253B07160();
        uint64_t v69 = *(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16);
        swift_bridgeObjectRetain();
        v69(v66, v67, v68);
        break;
      default:
        *a1 = *a2;
        uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0)
                     + 20);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_253B07160();
        uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_23:
  uint64_t v70 = *(int *)(a3 + 20);
  uint64_t v71 = (char *)a1 + v70;
  uint64_t v72 = (char *)a2 + v70;
  uint64_t v73 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 24))(v71, v72, v73);
  return a1;
}

void *initializeWithTake for TranscriptProtoQueryDecorationPrePlannerResultPayload(void *a1, void *a2, uint64_t a3)
{
  uint64_t DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, DecorationPrePlannerPayloadEnum))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE25A0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
        break;
      case 2u:
        *a1 = *a2;
        uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
        break;
      case 3u:
        *a1 = *a2;
        uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
        break;
      case 4u:
        *a1 = *a2;
        uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
        break;
      case 5u:
        *a1 = *a2;
        uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
        break;
      default:
        *a1 = *a2;
        uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
        break;
    }
    uint64_t v9 = *(int *)(DecorationPrePlannerResultPayloadRepeatedTypedValueVariant + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, DecorationPrePlannerPayloadEnum);
  }
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

void *assignWithTake for TranscriptProtoQueryDecorationPrePlannerResultPayload(void *a1, void *a2, uint64_t a3)
{
  uint64_t DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, DecorationPrePlannerPayloadEnum);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, DecorationPrePlannerPayloadEnum);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *a1 = *a2;
          uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
          break;
        case 2u:
          *a1 = *a2;
          uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
          break;
        case 3u:
          *a1 = *a2;
          uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
          break;
        case 4u:
          *a1 = *a2;
          uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
          break;
        case 5u:
          *a1 = *a2;
          uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
          break;
        default:
          *a1 = *a2;
          uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
          break;
      }
      uint64_t v15 = *(int *)(DecorationPrePlannerResultPayloadRepeatedTypedValueVariant + 20);
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, DecorationPrePlannerPayloadEnum);
      goto LABEL_23;
    }
LABEL_7:
    uint64_t v10 = sub_253462A5C(&qword_269CE25A0);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_23;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0)
                     + 20);
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        uint64_t v22 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
        break;
      case 2u:
        *a1 = *a2;
        uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0)
                     + 20);
        uint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
        break;
      case 3u:
        *a1 = *a2;
        uint64_t v27 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0)
                     + 20);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
        break;
      case 4u:
        *a1 = *a2;
        uint64_t v31 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0)
                     + 20);
        int v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        uint64_t v34 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
        break;
      case 5u:
        *a1 = *a2;
        uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0)
                     + 20);
        uint64_t v36 = (char *)a1 + v35;
        uint64_t v37 = (char *)a2 + v35;
        uint64_t v38 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
        break;
      default:
        *a1 = *a2;
        uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0)
                     + 20);
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_23:
  uint64_t v39 = *(int *)(a3 + 20);
  uint64_t v40 = (char *)a1 + v39;
  uint64_t v41 = (char *)a2 + v39;
  uint64_t v42 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25393FF04);
}

uint64_t sub_25393FF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE25A0);
}

uint64_t sub_25393FF10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_253944F84(a1, a2, a3, a4);
  sub_2535782A8();
  if (*(_DWORD *)(v7 + 84) == v4)
  {
    uint64_t v8 = sub_253945320();
  }
  else
  {
    uint64_t v9 = sub_253B07160();
    uint64_t v8 = v5 + *(int *)(v6 + 20);
  }
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, v4, v9);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25393FF90);
}

uint64_t sub_25393FF90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE25A0);
}

uint64_t sub_25393FF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  sub_253944B60(a1, a2, a3, a4, a5);
  sub_2535782A8();
  if (*(_DWORD *)(v6 + 84) == v5) {
    sub_253944FD8();
  }
  else {
    sub_253B07160();
  }
  sub_2535E228C();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, v8, v9, v10);
}

void sub_253940008(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_253940028(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  sub_253944F18(a1, a2, a3, a4, a5);
  if (v5 <= 0x3F)
  {
    sub_253945F00();
    sub_253B07160();
    if (v6 <= 0x3F)
    {
      sub_2539459B8();
      sub_2535E2578();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v12 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0)
                     + 20);
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = sub_253B07160();
        uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v16(v13, v14, v15);
        break;
      case 2u:
        *a1 = *a2;
        uint64_t v17 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0)
                     + 20);
        uint64_t v18 = (char *)a1 + v17;
        uint64_t v19 = (char *)a2 + v17;
        uint64_t v20 = sub_253B07160();
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v18, v19, v20);
        break;
      case 3u:
        *a1 = *a2;
        uint64_t v22 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0)
                     + 20);
        uint64_t v23 = (char *)a1 + v22;
        uint64_t v24 = (char *)a2 + v22;
        uint64_t v25 = sub_253B07160();
        uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
        swift_bridgeObjectRetain();
        v26(v23, v24, v25);
        break;
      case 4u:
        *a1 = *a2;
        uint64_t v27 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0)
                     + 20);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = sub_253B07160();
        uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
        swift_bridgeObjectRetain();
        v31(v28, v29, v30);
        break;
      case 5u:
        *a1 = *a2;
        uint64_t v32 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0)
                     + 20);
        uint64_t v33 = (char *)a1 + v32;
        uint64_t v34 = (char *)a2 + v32;
        uint64_t v35 = sub_253B07160();
        uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
        swift_bridgeObjectRetain();
        v36(v33, v34, v35);
        break;
      default:
        *a1 = *a2;
        uint64_t v6 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0)
                    + 20);
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = sub_253B07160();
        uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
        swift_bridgeObjectRetain();
        v10(v7, v8, v9);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
      goto LABEL_8;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
      goto LABEL_8;
    case 2:
      swift_bridgeObjectRelease();
      uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
      goto LABEL_8;
    case 3:
      swift_bridgeObjectRelease();
      uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
      goto LABEL_8;
    case 4:
      swift_bridgeObjectRelease();
      uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
      goto LABEL_8;
    case 5:
      swift_bridgeObjectRelease();
      uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
LABEL_8:
      uint64_t v4 = a1 + *(int *)(DecorationPrePlannerResultPayloadRepeatedStringVariant + 20);
      uint64_t v5 = sub_253B07160();
      uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      uint64_t result = v6(v4, v5);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *a1 = *a2;
      uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
      break;
    case 2u:
      *a1 = *a2;
      uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
      break;
    case 3u:
      *a1 = *a2;
      uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
      break;
    case 4u:
      *a1 = *a2;
      uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
      break;
    case 5u:
      *a1 = *a2;
      uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
      break;
    default:
      *a1 = *a2;
      uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
      break;
  }
  uint64_t v5 = *(int *)(DecorationPrePlannerResultPayloadRepeatedTypedValueVariant + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_253B07160();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
        break;
      case 2u:
        *a1 = *a2;
        uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
        break;
      case 3u:
        *a1 = *a2;
        uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
        break;
      case 4u:
        *a1 = *a2;
        uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
        break;
      case 5u:
        *a1 = *a2;
        uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
        break;
      default:
        *a1 = *a2;
        uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
        break;
    }
    uint64_t v5 = *(int *)(DecorationPrePlannerResultPayloadRepeatedTypedValueVariant + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_253B07160();
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *a1 = *a2;
      uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
      break;
    case 2u:
      *a1 = *a2;
      uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
      break;
    case 3u:
      *a1 = *a2;
      uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
      break;
    case 4u:
      *a1 = *a2;
      uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
      break;
    case 5u:
      *a1 = *a2;
      uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
      break;
    default:
      *a1 = *a2;
      uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
      break;
  }
  uint64_t v5 = *(int *)(DecorationPrePlannerResultPayloadRepeatedTypedValueVariant + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithTake for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
        break;
      case 2u:
        *a1 = *a2;
        uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
        break;
      case 3u:
        *a1 = *a2;
        uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
        break;
      case 4u:
        *a1 = *a2;
        uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
        break;
      case 5u:
        *a1 = *a2;
        uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
        break;
      default:
        *a1 = *a2;
        uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
        break;
    }
    uint64_t v5 = *(int *)(DecorationPrePlannerResultPayloadRepeatedTypedValueVariant + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253940B64()
{
  uint64_t result = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(319);
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(319);
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(319);
            if (v6 <= 0x3F)
            {
              swift_initEnumMetadataMultiPayload();
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoTextQuery(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a3[6];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_26B249528);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
      uint64_t v14 = v10[2];
      v9[1] = v10[1];
      v9[2] = v14;
      uint64_t v15 = *(int *)(v11 + 24);
      uint64_t v16 = (char *)v9 + v15;
      uint64_t v29 = (char *)v10 + v15;
      uint64_t v17 = sub_253B07160();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v16, v29, v17);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v19 = a3[7];
    uint64_t v20 = a3[8];
    uint64_t v21 = (void *)((char *)v4 + v19);
    uint64_t v22 = (uint64_t *)((char *)a2 + v19);
    uint64_t v23 = v22[1];
    void *v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = (char *)v4 + v20;
    uint64_t v25 = (uint64_t)a2 + v20;
    uint64_t v26 = sub_253B07160();
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
    swift_bridgeObjectRetain();
    v27(v24, v25, v26);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoTextQuery(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + *(int *)(a2 + 32);
  uint64_t v9 = sub_253B07160();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  return v10(v8, v9);
}

uint64_t initializeWithCopy for TranscriptProtoTextQuery(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoStatementID(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_26B249528);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
    uint64_t v12 = v9[2];
    v8[1] = v9[1];
    v8[2] = v12;
    uint64_t v13 = *(int *)(v10 + 24);
    uint64_t v14 = (char *)v8 + v13;
    uint64_t v27 = (char *)v9 + v13;
    uint64_t v15 = sub_253B07160();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v14, v27, v15);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)(a1 + v17);
  uint64_t v20 = (void *)(a2 + v17);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = a1 + v18;
  uint64_t v23 = a2 + v18;
  uint64_t v24 = sub_253B07160();
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16);
  swift_bridgeObjectRetain();
  v25(v22, v23, v24);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoTextQuery(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v25 = *(int *)(v9 + 24);
      uint64_t v26 = (char *)v7 + v25;
      uint64_t v27 = (char *)v8 + v25;
      uint64_t v28 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  uint64_t v12 = *(int *)(v9 + 24);
  uint64_t v13 = (char *)v7 + v12;
  uint64_t v29 = (char *)v8 + v12;
  uint64_t v14 = sub_253B07160();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v13, v29, v14);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoTextQuery(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = (_DWORD *)(a1 + v6);
  uint64_t v8 = (_DWORD *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *uint64_t v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    uint64_t v11 = *(int *)(v9 + 24);
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    uint64_t v14 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v15 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoTextQuery(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for TranscriptProtoStatementID(0);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v10);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, 1, v10);
  if (!v11)
  {
    if (!v12)
    {
      *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
      uint64_t v28 = *(void *)(v9 + 16);
      *(void *)(v8 + 8) = *(void *)(v9 + 8);
      *(void *)(v8 + 16) = v28;
      swift_bridgeObjectRelease();
      uint64_t v29 = *(int *)(v10 + 24);
      uint64_t v30 = v8 + v29;
      uint64_t v31 = v9 + v29;
      uint64_t v32 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 40))(v30, v31, v32);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v17 = sub_253462A5C(&qword_26B249528);
    memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
  uint64_t v13 = *(int *)(v10 + 24);
  uint64_t v14 = v8 + v13;
  uint64_t v15 = v9 + v13;
  uint64_t v16 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v8, 0, 1, v10);
LABEL_7:
  uint64_t v18 = a3[7];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoTextQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2539417D8);
}

uint64_t sub_2539417DC()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*(void *)(v1 + 8));
  }
  sub_2535E2460();
  sub_253462A5C(&qword_26B249528);
  sub_2535782A8();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    sub_2535E2560();
  }
  else
  {
    sub_253B07160();
    sub_2535E27E4();
  }
  uint64_t v6 = sub_2535E22C8(v5);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, v7, v8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoTextQuery(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253941880);
}

void sub_253941884()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E24BC();
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_26B249528);
    sub_2535782A8();
    if (*(_DWORD *)(v2 + 84) == v0)
    {
      sub_2535E26D8();
    }
    else
    {
      sub_253B07160();
      sub_2535E2830();
    }
    uint64_t v4 = sub_2535E2234(v3);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, v5, v6, v7);
  }
}

void sub_253941910()
{
}

void sub_25394191C()
{
  sub_253760A08(319, &qword_26B249530, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
  if (v0 <= 0x3F)
  {
    sub_253B07160();
    if (v1 <= 0x3F)
    {
      sub_25394507C();
      sub_2535E2578();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoExternalAgentTextQuery(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    int v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
    {
      uint64_t v13 = sub_253462A5C(&qword_269CE1AD0);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v15 = v11[1];
      void *v10 = *v11;
      v10[1] = v15;
      v10[2] = v11[2];
      uint64_t v16 = *(int *)(v12 + 24);
      uint64_t v24 = (char *)v11 + v16;
      uint64_t v25 = (char *)v10 + v16;
      uint64_t v17 = sub_253B07160();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18(v25, v24, v17);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
    }
    uint64_t v19 = *(int *)(a3 + 28);
    uint64_t v20 = (char *)v4 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoExternalAgentTextQuery(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  uint64_t v9 = sub_253B07160();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  return v10(v8, v9);
}

void *initializeWithCopy for TranscriptProtoExternalAgentTextQuery(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  uint64_t v11 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_253462A5C(&qword_269CE1AD0);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = v10[1];
    void *v9 = *v10;
    v9[1] = v13;
    v9[2] = v10[2];
    uint64_t v14 = *(int *)(v11 + 24);
    uint64_t v22 = (char *)v10 + v14;
    uint64_t v23 = (char *)v9 + v14;
    uint64_t v15 = sub_253B07160();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v23, v22, v15);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v17 = *(int *)(a3 + 28);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

void *assignWithCopy for TranscriptProtoExternalAgentTextQuery(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *uint64_t v7 = *v8;
      v7[1] = v8[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v21 = *(int *)(v9 + 24);
      uint64_t v22 = (char *)v7 + v21;
      uint64_t v23 = (char *)v8 + v21;
      uint64_t v24 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v15 = sub_253462A5C(&qword_269CE1AD0);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  uint64_t v12 = *(int *)(v9 + 24);
  uint64_t v25 = (char *)v8 + v12;
  uint64_t v26 = (char *)v7 + v12;
  uint64_t v13 = sub_253B07160();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v26, v25, v13);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 28);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoExternalAgentTextQuery(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_269CE1AD0);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    v8[2] = v9[2];
    uint64_t v12 = *(int *)(v10 + 24);
    uint64_t v13 = (char *)v8 + v12;
    uint64_t v14 = (char *)v9 + v12;
    uint64_t v15 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v16 = *(int *)(a3 + 28);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

void *assignWithTake for TranscriptProtoExternalAgentTextQuery(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  uint64_t v11 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v11);
  int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11);
  if (!v12)
  {
    if (!v13)
    {
      uint64_t v24 = v10[1];
      void *v9 = *v10;
      v9[1] = v24;
      swift_bridgeObjectRelease();
      v9[2] = v10[2];
      swift_bridgeObjectRelease();
      uint64_t v25 = *(int *)(v11 + 24);
      uint64_t v26 = (char *)v9 + v25;
      uint64_t v27 = (char *)v10 + v25;
      uint64_t v28 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v18 = sub_253462A5C(&qword_269CE1AD0);
    memcpy(v9, v10, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  v9[2] = v10[2];
  uint64_t v14 = *(int *)(v11 + 24);
  uint64_t v15 = (char *)v9 + v14;
  uint64_t v16 = (char *)v10 + v14;
  uint64_t v17 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
LABEL_7:
  uint64_t v19 = *(int *)(a3 + 28);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoExternalAgentTextQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253942484);
}

uint64_t sub_253942484()
{
  return sub_253942490();
}

uint64_t sub_253942490()
{
  sub_2535E2298();
  if (v6) {
    return sub_2534F89A0(*(void *)(v1 + 8));
  }
  sub_253944DB4(v2, v3, v4, v5);
  sub_2535782A8();
  if (*(_DWORD *)(v8 + 84) == v0)
  {
    sub_2535E2560();
  }
  else
  {
    sub_253B07160();
    sub_2535E256C();
  }
  uint64_t v10 = sub_2535E22C8(v9);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, v11, v12);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoExternalAgentTextQuery(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253942528);
}

void sub_253942528()
{
}

void sub_253942534()
{
  sub_2535E2244();
  if (v6)
  {
    sub_2535E24BC();
  }
  else
  {
    sub_253944D7C(v1, v2, v3, v4, v5);
    sub_2535782A8();
    if (*(_DWORD *)(v7 + 84) == v0)
    {
      sub_2535E26D8();
    }
    else
    {
      sub_253B07160();
      sub_2535E26E4();
    }
    uint64_t v9 = sub_2535E2234(v8);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v9, v10, v11, v12);
  }
}

void sub_2539425B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoSpeechQuery(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_253B07160();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t destroy for TranscriptProtoSpeechQuery(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_253B07160();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for TranscriptProtoSpeechQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_253B07160();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoSpeechQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoSpeechQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoSpeechQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSpeechQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253942A10);
}

uint64_t sub_253942A10()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*v0);
  }
  sub_2535E22D4();
  uint64_t v4 = sub_2535E22C8(*(int *)(v1 + 28));
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSpeechQuery(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253942A88);
}

void sub_253942A88()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E2538();
  }
  else
  {
    sub_2535E235C();
    uint64_t v2 = sub_2535E2234(*(int *)(v0 + 28));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, v3, v4, v5);
  }
}

uint64_t sub_253942AE8()
{
  return sub_253942B08();
}

uint64_t sub_253942B08()
{
  uint64_t result = sub_253B07160();
  if (v1 <= 0x3F)
  {
    sub_2539448CC();
    return sub_2535E2578();
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoExternalAgentSpeechQuery(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
    {
      uint64_t v13 = sub_253462A5C(&qword_269CE1AD0);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v14 = v11[1];
      void *v10 = *v11;
      v10[1] = v14;
      v10[2] = v11[2];
      uint64_t v15 = *(int *)(v12 + 24);
      uint64_t v23 = (char *)v11 + v15;
      uint64_t v24 = (char *)v10 + v15;
      uint64_t v16 = sub_253B07160();
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17(v24, v23, v16);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
    }
    uint64_t v18 = *(int *)(a3 + 28);
    uint64_t v19 = (char *)v7 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return v7;
}

uint64_t destroy for TranscriptProtoExternalAgentSpeechQuery(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  uint64_t v9 = sub_253B07160();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  return v10(v8, v9);
}

void *initializeWithCopy for TranscriptProtoExternalAgentSpeechQuery(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_269CE1AD0);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v12;
    v8[2] = v9[2];
    uint64_t v13 = *(int *)(v10 + 24);
    uint64_t v21 = (char *)v9 + v13;
    uint64_t v22 = (char *)v8 + v13;
    uint64_t v14 = sub_253B07160();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v22, v21, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v16 = *(int *)(a3 + 28);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

void *assignWithCopy for TranscriptProtoExternalAgentSpeechQuery(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *uint64_t v7 = *v8;
      v7[1] = v8[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v21 = *(int *)(v9 + 24);
      uint64_t v22 = (char *)v7 + v21;
      uint64_t v23 = (char *)v8 + v21;
      uint64_t v24 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v15 = sub_253462A5C(&qword_269CE1AD0);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  uint64_t v12 = *(int *)(v9 + 24);
  uint64_t v25 = (char *)v8 + v12;
  uint64_t v26 = (char *)v7 + v12;
  uint64_t v13 = sub_253B07160();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v26, v25, v13);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 28);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoExternalAgentSpeechQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE1AD0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    v7[2] = v8[2];
    uint64_t v11 = *(int *)(v9 + 24);
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    uint64_t v14 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v15 = *(int *)(a3 + 28);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

void *assignWithTake for TranscriptProtoExternalAgentSpeechQuery(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    if (!v12)
    {
      uint64_t v23 = v9[1];
      *uint64_t v8 = *v9;
      v8[1] = v23;
      swift_bridgeObjectRelease();
      v8[2] = v9[2];
      swift_bridgeObjectRelease();
      uint64_t v24 = *(int *)(v10 + 24);
      uint64_t v25 = (char *)v8 + v24;
      uint64_t v26 = (char *)v9 + v24;
      uint64_t v27 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v17 = sub_253462A5C(&qword_269CE1AD0);
    memcpy(v8, v9, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  v8[2] = v9[2];
  uint64_t v13 = *(int *)(v10 + 24);
  uint64_t v14 = (char *)v8 + v13;
  uint64_t v15 = (char *)v9 + v13;
  uint64_t v16 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 28);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoExternalAgentSpeechQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253943604);
}

uint64_t sub_253943604()
{
  return sub_253943610();
}

uint64_t sub_253943610()
{
  sub_2535E2298();
  if (v6) {
    return sub_2534F89A0(*v1);
  }
  sub_253944DB4(v2, v3, v4, v5);
  sub_2535782A8();
  if (*(_DWORD *)(v8 + 84) == v0)
  {
    sub_2535E2560();
  }
  else
  {
    sub_253B07160();
    sub_2535E256C();
  }
  uint64_t v10 = sub_2535E22C8(v9);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, v11, v12);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoExternalAgentSpeechQuery(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2539436A8);
}

void sub_2539436A8()
{
}

void sub_2539436B4()
{
  sub_2535E2244();
  if (v6)
  {
    sub_2535E2538();
  }
  else
  {
    sub_253944D7C(v1, v2, v3, v4, v5);
    sub_2535782A8();
    if (*(_DWORD *)(v7 + 84) == v0)
    {
      sub_2535E26D8();
    }
    else
    {
      sub_253B07160();
      sub_2535E26E4();
    }
    uint64_t v9 = sub_2535E2234(v8);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v9, v10, v11, v12);
  }
}

void sub_253943734(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_253943768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t *a6, void (*a7)(uint64_t))
{
  sub_253760A08(319, a6, a7);
  if (v7 <= 0x3F)
  {
    sub_253945F80();
    if (v8 <= 0x3F)
    {
      sub_2539448CC();
      sub_2535E2578();
    }
  }
}

uint64_t _s30IntelligenceFlowPlannerSupport55TranscriptProtoSystemPromptResolutionActionCancellationVwCP_0()
{
  sub_2539450FC();
  sub_25346CAF4();
  uint64_t v0 = sub_25349C5EC();
  return v1(v0);
}

uint64_t _s30IntelligenceFlowPlannerSupport55TranscriptProtoSystemPromptResolutionActionCancellationVwxx_0()
{
  sub_253B07160();
  sub_25346CAF4();
  uint64_t v0 = sub_2539446BC();
  return v1(v0);
}

uint64_t _s30IntelligenceFlowPlannerSupport55TranscriptProtoSystemPromptResolutionActionCancellationVwcp_0()
{
  sub_2539450FC();
  sub_25346CAF4();
  sub_2534B3428();
  v1();
  return v0;
}

uint64_t _s30IntelligenceFlowPlannerSupport55TranscriptProtoSystemPromptResolutionActionCancellationVwca_0()
{
  sub_2539450FC();
  sub_25346CAF4();
  sub_253944540();
  v1();
  return v0;
}

uint64_t _s30IntelligenceFlowPlannerSupport55TranscriptProtoSystemPromptResolutionActionCancellationVwtk_0()
{
  sub_2539450FC();
  sub_25346CAF4();
  sub_2534D8E14();
  v1();
  return v0;
}

uint64_t _s30IntelligenceFlowPlannerSupport55TranscriptProtoSystemPromptResolutionActionCancellationVwta_0()
{
  sub_2539450FC();
  sub_25346CAF4();
  sub_253944534();
  v1();
  return v0;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoContinuePlanning(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253943CD4);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoContinuePlanning(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253943C7C);
}

uint64_t sub_253943A1C()
{
  sub_2539461BC();
  uint64_t result = sub_253B07160();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return sub_2535E2578();
  }
  return result;
}

unint64_t sub_253943AA0()
{
  unint64_t result = qword_269CE4E70;
  if (!qword_269CE4E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE4E70);
  }
  return result;
}

uint64_t sub_253944248()
{
  return sub_253B096B0();
}

uint64_t sub_25394426C()
{
  return sub_253B07160();
}

uint64_t sub_253944288()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_2539442A4()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_2539442C0(uint64_t a1)
{
  *unint64_t v1 = a1;
  return swift_retain();
}

uint64_t sub_2539442E4(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v1, 1, a1);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v2, 1, a1);
}

uint64_t sub_253944328()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_253944340()
{
  return sub_253B07160();
}

uint64_t sub_253944360()
{
  return sub_253B07160();
}

uint64_t sub_25394437C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_25394439C()
{
  *(_DWORD *)uint64_t v0 = *(_DWORD *)v1;
  uint64_t v3 = *(void *)(v1 + 16);
  *(void *)(v0 + 8) = *(void *)(v1 + 8);
  *(void *)(v0 + 16) = v3;
  return sub_253B07160();
}

uint64_t sub_2539443D0()
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v0, 0, 1, v1);
}

uint64_t sub_2539443F0(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v1);
}

uint64_t sub_253944408(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
  return 0;
}

uint64_t sub_253944448(uint64_t a1, uint64_t a2)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, a2, 1, v2);
}

uint64_t sub_253944460()
{
  *(_DWORD *)uint64_t v0 = *(_DWORD *)v1;
  *(_OWORD *)(v0 + 8) = *(_OWORD *)(v1 + 8);
  return sub_253B07160();
}

uint64_t sub_253944490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_2536FA790(a1, v3);
}

uint64_t sub_2539444B8()
{
  return 0;
}

uint64_t sub_2539444CC()
{
  return sub_253B07160();
}

uint64_t sub_2539444F0()
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v1, 16, v0);
}

uint64_t sub_25394450C(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
  return 0;
}

uint64_t sub_25394456C()
{
  return 0;
}

uint64_t sub_253944580(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  return swift_bridgeObjectRetain();
}

uint64_t sub_2539445B0()
{
  return v0;
}

uint64_t sub_2539445C8()
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v0, 1, v1);
}

void *sub_2539445E4(uint64_t a1, uint64_t a2, size_t a3)
{
  return memcpy(v3, v4, a3);
}

uint64_t sub_2539445FC(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  return swift_bridgeObjectRelease();
}

uint64_t sub_253944624()
{
  *(_DWORD *)uint64_t v0 = *(_DWORD *)v1;
  uint64_t v3 = *(void *)(v1 + 16);
  *(void *)(v0 + 8) = *(void *)(v1 + 8);
  *(void *)(v0 + 16) = v3;
  return sub_253B07160();
}

uint64_t sub_253944658()
{
  return v0;
}

uint64_t sub_253944670()
{
  return v0;
}

uint64_t sub_253944688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_2536FA790(a1, v3);
}

uint64_t sub_2539446A0(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v1);
}

uint64_t sub_2539446BC()
{
  return v0;
}

uint64_t sub_2539446C8(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253944704(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v3, 1, 1, a1);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1 + *(int *)(v2 + 32), 1, 1, a1);
}

uint64_t sub_253944748()
{
  return 0;
}

uint64_t sub_25394476C()
{
  *(_DWORD *)uint64_t v0 = *(_DWORD *)v1;
  uint64_t v3 = *(void *)(v1 + 16);
  *(void *)(v0 + 8) = *(void *)(v1 + 8);
  *(void *)(v0 + 16) = v3;
  return sub_253B07160();
}

uint64_t sub_25394479C()
{
  *(_DWORD *)uint64_t v0 = *(_DWORD *)v1;
  *(_OWORD *)(v0 + 8) = *(_OWORD *)(v1 + 8);
  return sub_253B07160();
}

uint64_t sub_2539447CC()
{
  return 0;
}

uint64_t sub_2539447E0()
{
  return sub_253B07160();
}

uint64_t sub_253944804()
{
  return v0;
}

uint64_t sub_25394481C()
{
  return 0;
}

uint64_t sub_253944874()
{
  return 0;
}

uint64_t sub_253944884()
{
  uint64_t v1 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v0, 1, v1);
}

uint64_t sub_2539448CC()
{
  return swift_initStructMetadata();
}

uint64_t sub_2539448F0()
{
  return 0;
}

uint64_t sub_2539448FC()
{
  return sub_253B07160();
}

uint64_t sub_253944918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_2536FA858(a1, v3);
}

uint64_t sub_253944930()
{
  return sub_253B07160();
}

uint64_t sub_253944950(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  return sub_25348A9C8(v3, v4);
}

uint64_t sub_253944978()
{
  return 0;
}

uint64_t sub_25394498C(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
}

uint64_t sub_2539449AC()
{
  return 0;
}

void *sub_2539449C8(uint64_t a1, uint64_t a2, size_t a3)
{
  return memcpy(v3, v4, a3);
}

uint64_t sub_2539449E0()
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v0, 1, v1);
}

uint64_t sub_2539449FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 1, 1, a4);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253944A30()
{
  return sub_253B07160();
}

void *sub_253944A48(uint64_t a1, uint64_t a2, size_t a3)
{
  return memcpy(v3, v4, a3);
}

uint64_t sub_253944A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, 1, 1, a4);
  return 0;
}

uint64_t sub_253944A84(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v1);
}

uint64_t sub_253944A9C()
{
  *(void *)(v0 + 16) = *(void *)(v1 + 16);
  return sub_253B07160();
}

uint64_t sub_253944AC8@<X0>(uint64_t a1@<X8>)
{
  return sub_2534D88A0(v2 + a1, v3, v1);
}

uint64_t sub_253944AF0()
{
  return sub_253B07160();
}

uint64_t sub_253944B08()
{
  *(_DWORD *)uint64_t v0 = *(_DWORD *)v1;
  *(void *)(v0 + 8) = *(void *)(v1 + 8);
  *(void *)(v0 + 16) = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_253944B34()
{
  return v0;
}

uint64_t sub_253944B4C()
{
  return 0;
}

uint64_t sub_253944B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_253462A5C(a5);
}

uint64_t sub_253944B84()
{
  return sub_253B07160();
}

uint64_t sub_253944BA0()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_253944BB8()
{
  return sub_253B096B0();
}

uint64_t sub_253944BDC(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
}

uint64_t sub_253944BFC(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v3, 1, 1, a1);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1 + *(int *)(v2 + 28), 1, 1, a1);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253944C54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v4);
}

uint64_t sub_253944CAC()
{
  return sub_253B07160();
}

uint64_t sub_253944CD4()
{
  *(_DWORD *)uint64_t v0 = *(_DWORD *)v1;
  *(void *)(v0 + 8) = *(void *)(v1 + 8);
  *(void *)(v0 + 16) = *(void *)(v1 + 16);
  return sub_253B07160();
}

uint64_t sub_253944D10()
{
  return sub_253B07160();
}

uint64_t sub_253944D28()
{
  type metadata accessor for TranscriptProtoStatementID(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_253944D64()
{
  return sub_253B07160();
}

uint64_t sub_253944D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_253462A5C(a5);
}

uint64_t sub_253944D98()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_253944DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_253462A5C(a4);
}

uint64_t sub_253944DD0()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_253944DE8(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  return swift_bridgeObjectRetain();
}

void sub_253944E10()
{
  *(void *)uint64_t v0 = 0;
  *(void *)(v0 + 8) = 0xE000000000000000;
  *(unsigned char *)(v0 + 16) = 0;
}

uint64_t sub_253944E20(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253944E5C()
{
  return sub_253B07160();
}

uint64_t sub_253944E74()
{
  return sub_253B07160();
}

uint64_t sub_253944E94()
{
  return sub_253B07160();
}

uint64_t sub_253944EAC()
{
  return sub_253B07160();
}

uint64_t sub_253944ECC()
{
  return sub_253B07160();
}

uint64_t sub_253944EF8()
{
  return 0;
}

uint64_t sub_253944F0C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 - 96) = a1;
  *(void *)(v2 - 88) = a2;
  return 0;
}

void sub_253944F18(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  sub_253760A08(319, a4, a5);
}

uint64_t sub_253944F38(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v1, 1, a1);
}

uint64_t sub_253944F58()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253944F70()
{
  return 0;
}

uint64_t sub_253944F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_253462A5C(a4);
}

uint64_t sub_253944FA4()
{
  return v0;
}

uint64_t sub_253944FB8(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
}

uint64_t sub_253944FD8()
{
  return v0;
}

uint64_t sub_253944FF0()
{
  return 0;
}

uint64_t sub_253945004()
{
  return type metadata accessor for TranscriptProtoStatementID(0);
}

uint64_t sub_253945020()
{
  return sub_253B07160();
}

uint64_t sub_25394503C()
{
  return sub_253B08E50();
}

uint64_t sub_253945058()
{
  *(_DWORD *)uint64_t v0 = *(_DWORD *)v1;
  uint64_t v3 = *(void *)(v1 + 16);
  *(void *)(v0 + 8) = *(void *)(v1 + 8);
  *(void *)(v0 + 16) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t sub_25394507C()
{
  return swift_initStructMetadata();
}

uint64_t sub_2539450A0()
{
  return sub_253B08E50();
}

uint64_t sub_2539450BC(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 24);
  uint64_t v3 = type metadata accessor for TranscriptProtoStatementID(0);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, 1, 1, v3);
}

uint64_t sub_2539450FC()
{
  return sub_253B07160();
}

uint64_t sub_253945118()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253945130()
{
  return sub_2536FA858(v0, v1);
}

uint64_t sub_253945154()
{
  return swift_getEnumCaseMultiPayload();
}

void sub_253945170()
{
  *uint64_t v0 = 0;
  v0[1] = 0xE000000000000000;
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
}

uint64_t sub_253945180(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 1, 1, v1);
}

uint64_t sub_2539451A8()
{
  uint64_t v1 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v0, 1, v1);
}

uint64_t sub_2539451FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_2536FA790(a1, v3);
}

uint64_t sub_253945214()
{
  *(_DWORD *)uint64_t v0 = *(_DWORD *)v1;
  *(_OWORD *)(v0 + 8) = *(_OWORD *)(v1 + 8);
  return sub_253B07160();
}

uint64_t sub_253945244()
{
  return sub_253B07160();
}

uint64_t sub_25394525C()
{
  return sub_253B07160();
}

uint64_t sub_253945290()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_2539452A8()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_2539452C0()
{
  return type metadata accessor for TranscriptProtoResponseManifest(0);
}

uint64_t sub_2539452D8()
{
  return sub_2536FA858(v0, v1);
}

uint64_t sub_2539452F0()
{
  return sub_2536FA858(v0, v1);
}

uint64_t sub_253945308()
{
  return sub_2536FA858(v0, v1);
}

uint64_t sub_253945320()
{
  return v0;
}

uint64_t sub_253945338()
{
  return v0;
}

uint64_t sub_253945344(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v3, 1, 1, a1);
  uint64_t v4 = (void *)(v1 + *(int *)(v2 + 40));
  *uint64_t v4 = 0;
  v4[1] = 0;
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_25394538C(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v3, 1, 1, a1);
  uint64_t v4 = (void *)(v1 + *(int *)(v2 + 28));
  *uint64_t v4 = 0;
  v4[1] = 0;
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_2539453E0()
{
  *(_DWORD *)uint64_t v0 = *(_DWORD *)v1;
  *(void *)(v0 + 8) = *(void *)(v1 + 8);
  *(void *)(v0 + 16) = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_25394540C()
{
  return sub_253B07160();
}

uint64_t sub_253945458()
{
  return 0;
}

uint64_t sub_25394546C()
{
  *(_DWORD *)uint64_t v0 = *(_DWORD *)v1;
  *(void *)(v0 + 8) = *(void *)(v1 + 8);
  *(void *)(v0 + 16) = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_253945498(uint64_t *a1, _OWORD *a2)
{
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *(_OWORD *)a1 = *a2;
  return sub_253487D84(v5, v6);
}

uint64_t sub_2539454C4()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_2539454DC()
{
  return sub_253B07160();
}

uint64_t sub_2539454F8()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_253945510()
{
  return 0;
}

void sub_253945524(uint64_t a1@<X8>)
{
  *(void *)(v2 + a1 + 8) = v1;
}

void sub_253945534()
{
  uint64_t v2 = (void *)(v0 + *(int *)(v1 + 28));
  *uint64_t v2 = 0;
  v2[1] = 0;
  uint64_t v3 = (void *)(v0 + *(int *)(v1 + 32));
  *uint64_t v3 = 0;
  v3[1] = 0;
}

uint64_t sub_253945554()
{
  return sub_2536FA858(v0, v1);
}

void *sub_253945570(void *result, void *a2)
{
  uint64_t v2 = a2[1];
  *unint64_t result = *a2;
  result[1] = v2;
  return result;
}

uint64_t sub_253945580()
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v0, 0, 1, v1);
}

uint64_t sub_2539455A0()
{
  return sub_2536FA858(v0, v1);
}

uint64_t sub_2539455C4(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 1, 1, v1);
}

uint64_t sub_2539455E0(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 1, 1, v1);
}

uint64_t sub_2539455FC(uint64_t a1, uint64_t a2)
{
  return sub_2536FA9F0(v3, a2, v2);
}

uint64_t sub_253945620(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
}

void sub_253945640()
{
  *uint64_t v0 = *v1;
  v0[1] = v1[1];
  v0[2] = v1[2];
}

uint64_t sub_25394565C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 104);
  return sub_2536FA790(a1, v3);
}

uint64_t sub_253945674()
{
  return *(void *)v0;
}

uint64_t sub_2539456D4(void *a1, void *a2)
{
  *a1 = *a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2539456FC(void *a1, void *a2)
{
  *a1 = *a2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_253945724()
{
  return sub_2536FA73C();
}

void *sub_25394573C(uint64_t a1, uint64_t a2, size_t a3)
{
  return memcpy(v3, v4, a3);
}

uint64_t sub_253945754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, 1, 1, a4);
  return 0;
}

uint64_t sub_253945778(void *a1, void *a2)
{
  *a1 = *a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2539457A0(void *a1, void *a2)
{
  *a1 = *a2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2539457C8(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2539457F0()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253945808(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_2536FA9F0(v3, v4, a3);
}

uint64_t sub_253945820()
{
  return type metadata accessor for TranscriptProtoResponseOutput(0);
}

uint64_t sub_253945838()
{
  return type metadata accessor for TranscriptProtoStatementResult(0);
}

uint64_t sub_253945850()
{
  return type metadata accessor for TranscriptProtoAction(0);
}

uint64_t sub_253945868()
{
  return type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
}

__n128 sub_253945880(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  return result;
}

uint64_t sub_25394589C()
{
  return v0;
}

uint64_t sub_2539458B8()
{
  return v0;
}

uint64_t sub_2539458D4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_2536FA9F0(v3, v4, a3);
}

uint64_t sub_2539458EC()
{
  return sub_2536FA858(v0, v1);
}

uint64_t sub_253945904()
{
  return sub_253B096B0();
}

uint64_t sub_25394592C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + a1;
  uint64_t v3 = type metadata accessor for TranscriptProtoStatementID(0);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, 1, 1, v3);
}

uint64_t sub_253945960()
{
  return type metadata accessor for TranscriptProtoEvent(0);
}

uint64_t sub_253945978()
{
  *(void *)(v1 + 16) = *(void *)(v0 + 16);
  *(void *)(v1 + 24) = *(void *)(v0 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2539459B8()
{
  return swift_initStructMetadata();
}

uint64_t sub_2539459DC()
{
  *uint64_t v0 = *v1;
  v0[1] = v1[1];
  return swift_bridgeObjectRetain();
}

uint64_t sub_253945A00()
{
  *(_DWORD *)uint64_t v0 = *(_DWORD *)v1;
  uint64_t v3 = *(void *)(v1 + 16);
  *(void *)(v0 + 8) = *(void *)(v1 + 8);
  *(void *)(v0 + 16) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t sub_253945A4C()
{
  return swift_retain();
}

uint64_t sub_253945A70()
{
  return swift_retain();
}

uint64_t sub_253945A94()
{
  return v0;
}

uint64_t sub_253945AAC()
{
  return v0;
}

uint64_t sub_253945AC4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 112);
  return sub_2536FA790(a1, v3);
}

uint64_t sub_253945AEC()
{
  *(_DWORD *)uint64_t v0 = *(_DWORD *)v1;
  uint64_t v3 = *(void *)(v1 + 16);
  *(void *)(v0 + 8) = *(void *)(v1 + 8);
  *(void *)(v0 + 16) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t sub_253945B10()
{
  uint64_t v3 = *(void *)(v1 - 88);
  return sub_2536FA858(v3, v0);
}

uint64_t sub_253945B3C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_253945B64()
{
  return v0;
}

uint64_t sub_253945B70()
{
  return v0;
}

uint64_t sub_253945B88()
{
  return sub_2536FA73C();
}

uint64_t sub_253945BA0()
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v1, 1, v0);
}

uint64_t sub_253945BBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_2536FA790(a1, v3);
}

uint64_t sub_253945BD4()
{
  uint64_t v3 = *(void *)(v0 + 24);
  *(void *)(v1 + 16) = *(void *)(v0 + 16);
  *(void *)(v1 + 24) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t sub_253945BF0()
{
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

void *sub_253945C08(void *result, void *a2)
{
  uint64_t v2 = a2[1];
  *__n128 result = *a2;
  result[1] = v2;
  return result;
}

uint64_t sub_253945C20()
{
  return sub_253B095A0();
}

uint64_t sub_253945C3C()
{
  uint64_t v3 = *(void *)(v1 - 104);
  return sub_2536FA790(v0, v3);
}

uint64_t sub_253945C58()
{
  return type metadata accessor for TranscriptProtoSystemResponse(0);
}

uint64_t sub_253945C70()
{
  return type metadata accessor for TranscriptProtoRequest(0);
}

uint64_t sub_253945C88()
{
  return type metadata accessor for TranscriptProtoActionSuccess(0);
}

void *sub_253945CA0(void *result, void *a2)
{
  uint64_t v2 = a2[1];
  *__n128 result = *a2;
  result[1] = v2;
  uint64_t v3 = a2[3];
  result[2] = a2[2];
  result[3] = v3;
  return result;
}

__n128 sub_253945CB8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_253945CC8()
{
  return sub_2536FA858(v0, v1);
}

uint64_t sub_253945CE0()
{
  return sub_2536FA858(v0, v1);
}

uint64_t sub_253945CF8()
{
  return v0;
}

void sub_253945D04()
{
  *uint64_t v0 = 0;
  v0[1] = 0xE000000000000000;
}

uint64_t sub_253945D10()
{
  return v0;
}

uint64_t sub_253945D1C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_253945D34(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
  return 0;
}

uint64_t sub_253945D64(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253945DA0(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253945DDC(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253945E18(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253945E54(uint64_t a1)
{
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
  return _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
}

uint64_t sub_253945E90()
{
  return sub_253B096B0();
}

uint64_t sub_253945EB4()
{
  return sub_253B08E50();
}

uint64_t sub_253945ECC()
{
  return sub_253B07160();
}

uint64_t sub_253945EE8()
{
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 32) = 0;
  return 0;
}

uint64_t sub_253945F00()
{
  return 319;
}

void sub_253945F20()
{
  sub_253760A08(319, v1, v0);
}

uint64_t sub_253945F40()
{
  return sub_253B07160();
}

void sub_253945F60(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *uint64_t v2 = *a2;
  v2[1] = v3;
}

void sub_253945F6C(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *uint64_t v2 = *a2;
  v2[1] = v3;
  uint64_t v4 = a2[3];
  v2[2] = a2[2];
  v2[3] = v4;
}

uint64_t sub_253945F80()
{
  return sub_253B07160();
}

uint64_t sub_253945FBC()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_253945FD4()
{
  return sub_2536FA73C();
}

void sub_253945FEC(char a1@<W8>)
{
  *(unsigned char *)(v1 + 8) = a1;
}

uint64_t sub_253946008()
{
  return type metadata accessor for TranscriptProtoStatementID(0);
}

uint64_t sub_253946028()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_253946040(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 - 104) = a1;
  *(void *)(v2 - 96) = a2;
  return 0;
}

uint64_t sub_25394604C(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, 1, 1, a1);
}

uint64_t sub_253946078()
{
  return v0 & 1;
}

uint64_t sub_253946084(uint64_t a1)
{
  return sub_2536FA9F0(a1, v2, v1);
}

uint64_t sub_2539460B0()
{
  return 0;
}

uint64_t sub_2539460BC()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_2539460D4()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_2539460EC()
{
  return sub_2536FA73C();
}

uint64_t sub_253946104()
{
  return sub_2536FA790(v1, v0);
}

uint64_t sub_25394611C()
{
  return 0;
}

uint64_t sub_253946130(uint64_t *a1)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  return sub_253487D84(v3, v4);
}

uint64_t sub_253946150()
{
  return 0;
}

uint64_t sub_253946164()
{
  return sub_253B08E50();
}

uint64_t sub_253946184()
{
  uint64_t v2 = *v0;
  unint64_t v3 = v0[1];
  return sub_25348A9C8(v2, v3);
}

uint64_t sub_2539461A4()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_2539461BC()
{
  return 319;
}

uint64_t sub_2539461C8()
{
  return type metadata accessor for TranscriptProtoProgramStatement(0);
}

uint64_t sub_2539461E0()
{
  return type metadata accessor for TranscriptProtoActionResolverRequest(0);
}

uint64_t sub_2539461F8()
{
  return type metadata accessor for TranscriptProtoSystemPromptResolution(0);
}

uint64_t sub_253946210()
{
  return type metadata accessor for TranscriptProtoCandidate(0);
}

uint64_t sub_253946228()
{
  return type metadata accessor for TranscriptProtoParameterQuery(0);
}

uint64_t sub_253946240()
{
  return v0;
}

uint64_t sub_253946254()
{
  return sub_2536FA73C();
}

uint64_t sub_25394626C()
{
  return v0;
}

uint64_t sub_253946280()
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v0, 0, 1, v1);
}

uint64_t sub_2539462A0()
{
  return v0;
}

uint64_t sub_2539462B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_2536FA9F0(v3, v4, a3);
}

uint64_t sub_2539462CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_2536FA9F0(v3, v4, a3);
}

void sub_2539462F0()
{
  *uint64_t v0 = 0;
  v0[1] = 0xE000000000000000;
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  v0[4] = 0;
  v0[5] = 0xE000000000000000;
}

uint64_t sub_253946310()
{
  return v0;
}

unsigned char *_s30IntelligenceFlowPlannerSupport29TranscriptProtoQueryPredicateV2opAA0efG8OperatorOvs_0(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

unsigned char *_s30IntelligenceFlowPlannerSupport21TranscriptProtoHandleV4kindAC4KindOSgvs_0(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

unint64_t SessionEventPayloadType.description.getter()
{
  return SessionEventPayloadType.rawValue.getter();
}

unint64_t SessionEventPayloadType.rawValue.getter()
{
  unint64_t result = 0x536E6F6973736553;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x74736575716552;
      break;
    case 2:
      unint64_t result = 0x616572436E616C50;
      break;
    case 3:
      unint64_t result = 0x72436E6F69746341;
      break;
    case 4:
      unint64_t result = 0x61436E6F69746341;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x4373656972657551;
      break;
    case 7:
      unint64_t result = 0x656C626169726156;
      break;
    case 8:
    case 9:
    case 0x1D:
      unint64_t result = 0xD000000000000010;
      break;
    case 0xA:
      unint64_t result = 0x6C61636974697243;
      break;
    case 0xB:
      unint64_t result = 0x616C50664F646E45;
      break;
    case 0xC:
      unint64_t result = 0x74616E696D726554;
      break;
    case 0xD:
      unint64_t result = 0x4573656972657551;
      break;
    case 0xE:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 0xF:
      unint64_t result = 0xD000000000000020;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000011;
      break;
    case 0x11:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x12:
      unint64_t result = 0xD000000000000017;
      break;
    case 0x13:
      unint64_t result = 0xD000000000000012;
      break;
    case 0x14:
      unint64_t result = 0xD000000000000014;
      break;
    case 0x15:
      unint64_t result = 0xD000000000000014;
      break;
    case 0x16:
      unint64_t result = 0xD000000000000023;
      break;
    case 0x17:
      unint64_t result = 0x6F7365526C6F6F54;
      break;
    case 0x18:
      unint64_t result = 0x6F6465526F646E55;
      break;
    case 0x19:
      unint64_t result = 0xD000000000000015;
      break;
    case 0x1A:
      unint64_t result = 0xD000000000000015;
      break;
    case 0x1B:
      unint64_t result = 0xD000000000000014;
      break;
    case 0x1C:
      unint64_t result = 0xD000000000000015;
      break;
    case 0x1E:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 0x1F:
      unint64_t result = 0x7461636572706544;
      break;
    default:
      return result;
  }
  return result;
}

IntelligenceFlowPlannerSupport::SessionEventPayloadType_optional __swiftcall SessionEventPayloadType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_253B0A510();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 14;
  switch(v3)
  {
    case 0:
      goto LABEL_16;
    case 1:
      char v5 = 1;
      goto LABEL_16;
    case 2:
      char v5 = 2;
      goto LABEL_16;
    case 3:
      char v5 = 3;
      goto LABEL_16;
    case 4:
      char v5 = 4;
      goto LABEL_16;
    case 5:
      char v5 = 5;
      goto LABEL_16;
    case 6:
      char v5 = 6;
      goto LABEL_16;
    case 7:
      char v5 = 7;
      goto LABEL_16;
    case 8:
      char v5 = 8;
      goto LABEL_16;
    case 9:
      char v5 = 9;
      goto LABEL_16;
    case 10:
      char v5 = 10;
      goto LABEL_16;
    case 11:
      char v5 = 11;
      goto LABEL_16;
    case 12:
      char v5 = 12;
      goto LABEL_16;
    case 13:
      char v5 = 13;
LABEL_16:
      char v6 = v5;
      break;
    case 14:
      break;
    case 15:
      char v6 = 15;
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    case 20:
      char v6 = 20;
      break;
    case 21:
      char v6 = 21;
      break;
    case 22:
      char v6 = 22;
      break;
    case 23:
      char v6 = 23;
      break;
    case 24:
      char v6 = 24;
      break;
    case 25:
      char v6 = 25;
      break;
    case 26:
      char v6 = 26;
      break;
    case 27:
      char v6 = 27;
      break;
    case 28:
      char v6 = 28;
      break;
    case 29:
      char v6 = 29;
      break;
    case 30:
      char v6 = 30;
      break;
    case 31:
      char v6 = 31;
      break;
    default:
      char v6 = 32;
      break;
  }
  *uint64_t v2 = v6;
  return result;
}

void *static SessionEventPayloadType.allCases.getter()
{
  return &unk_270341648;
}

IntelligenceFlowPlannerSupport::SessionEventPayloadType_optional sub_2539469A8(Swift::String *a1)
{
  return SessionEventPayloadType.init(rawValue:)(*a1);
}

unint64_t sub_2539469B4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = SessionEventPayloadType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2539469DC()
{
  return sub_253B09A10();
}

uint64_t sub_253946A3C()
{
  return sub_253B099E0();
}

uint64_t sub_253946A8C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25357B804(*a1, *a2);
}

unint64_t sub_253946A9C()
{
  unint64_t result = qword_269CE4E78;
  if (!qword_269CE4E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE4E78);
  }
  return result;
}

uint64_t sub_253946AE8()
{
  return sub_25397FDCC(*v0);
}

uint64_t sub_253946AF0(uint64_t a1)
{
  return sub_25398011C(a1, *v1);
}

uint64_t sub_253946AF8(uint64_t a1)
{
  return sub_253980D78(a1, *v1);
}

unint64_t sub_253946B08()
{
  unint64_t result = qword_269CE4E80;
  if (!qword_269CE4E80)
  {
    sub_25347907C(&qword_269CE4E88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE4E80);
  }
  return result;
}

void sub_253946B5C(void *a1@<X8>)
{
  *a1 = &unk_270341648;
}

uint64_t getEnumTagSinglePayload for SessionEventPayloadType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE1)
  {
    if (a2 + 31 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 31) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 32;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x20;
  int v5 = v6 - 32;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SessionEventPayloadType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 31 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 31) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE0)
  {
    unsigned int v6 = ((a2 - 225) >> 8) + 1;
    *unint64_t result = a2 + 31;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253946CC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 31;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionEventPayloadType()
{
  return &type metadata for SessionEventPayloadType;
}

unint64_t sub_253946CF8()
{
  unint64_t result = qword_269CE4E90;
  if (!qword_269CE4E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE4E90);
  }
  return result;
}

uint64_t PreassignedEventID.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_253B055C0();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t _s30IntelligenceFlowPlannerSupport18PreassignedEventIDV5valueAC10Foundation4UUIDV_tcfC_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_253B055C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t sub_253946E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253946E3C);
}

uint64_t sub_253946E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253B055C0();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, a2, v4);
}

uint64_t sub_253946E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253946E98);
}

uint64_t sub_253946E98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253B055C0();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PreassignedEventID()
{
  uint64_t result = qword_26B249158;
  if (!qword_26B249158) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ResponseGenerationInput.clientRequestId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ResponseGenerationInput.responseLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ResponseGenerationInput(0) + 20);
  sub_253B05630();
  sub_25346CAF4();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  return v6(a1, v3, v4);
}

uint64_t type metadata accessor for ResponseGenerationInput(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE4F78);
}

uint64_t ResponseGenerationInput.responseMode.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ResponseGenerationInput(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t ResponseGenerationInput.utterance.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ResponseGenerationInput(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ResponseGenerationInput.statementResultDigests.getter()
{
  type metadata accessor for ResponseGenerationInput(0);
  return swift_bridgeObjectRetain();
}

uint64_t ResponseGenerationInput.init(clientRequestId:responseLocale:responseMode:utterance:statementResultDigests:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  char v13 = *a4;
  *a8 = a1;
  a8[1] = a2;
  uint64_t v14 = (int *)type metadata accessor for ResponseGenerationInput(0);
  uint64_t v15 = (char *)a8 + v14[5];
  sub_253B05630();
  sub_25346CAF4();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 32))(v15, a3);
  *((unsigned char *)a8 + v14[6]) = v13;
  uint64_t v18 = (void *)((char *)a8 + v14[7]);
  *uint64_t v18 = a5;
  v18[1] = a6;
  *(void *)((char *)a8 + v14[8]) = a7;
  return result;
}

uint64_t sub_253947148(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6552746E65696C63 && a2 == 0xEF64497473657571;
  if (v2 || (sub_253B0A4C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x65736E6F70736572 && a2 == 0xEE00656C61636F4CLL;
    if (v6 || (sub_253B0A4C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x65736E6F70736572 && a2 == 0xEC00000065646F4DLL;
      if (v7 || (sub_253B0A4C0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x636E617265747475 && a2 == 0xE900000000000065;
        if (v8 || (sub_253B0A4C0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000016 && a2 == 0x8000000253B12F50)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v9 = sub_253B0A4C0();
          swift_bridgeObjectRelease();
          if (v9) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

unint64_t sub_2539473BC(char a1)
{
  unint64_t result = 0x6552746E65696C63;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0x65736E6F70736572;
      break;
    case 3:
      unint64_t result = 0x636E617265747475;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_253947484()
{
  return sub_2539473BC(*v0);
}

uint64_t sub_25394748C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253947148(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2539474B4(uint64_t a1)
{
  unint64_t v2 = sub_253947760();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539474F0(uint64_t a1)
{
  unint64_t v2 = sub_253947760();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ResponseGenerationInput.encode(to:)(void *a1)
{
  sub_253462A5C(&qword_269CE4E98);
  sub_253465998();
  MEMORY[0x270FA5388](v3);
  sub_253472068(a1, a1[3]);
  sub_253947760();
  sub_2534DA3BC();
  sub_253B0A3F0();
  if (!v1)
  {
    type metadata accessor for ResponseGenerationInput(0);
    sub_25394CB58();
    sub_253B05630();
    sub_2539477F8(&qword_269CE4EA8, MEMORY[0x263F07690]);
    sub_25394CB38();
    sub_253B0A440();
    sub_2539477AC();
    sub_253B0A440();
    sub_25394CB98();
    sub_253B0A3F0();
    sub_253462A5C(&qword_269CE4EB8);
    sub_253947CD4(&qword_269CE4EC0, &qword_269CE4EC8);
    sub_25394CBBC();
    sub_253B0A440();
  }
  uint64_t v4 = sub_2534F82A4();
  return v5(v4);
}

unint64_t sub_253947760()
{
  unint64_t result = qword_269CE4EA0;
  if (!qword_269CE4EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE4EA0);
  }
  return result;
}

unint64_t sub_2539477AC()
{
  unint64_t result = qword_269CE4EB0;
  if (!qword_269CE4EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE4EB0);
  }
  return result;
}

uint64_t sub_2539477F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for StatementResultDigest(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE4F88);
}

uint64_t ResponseGenerationInput.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = sub_253B05630();
  sub_253465998();
  uint64_t v19 = v5;
  MEMORY[0x270FA5388](v6);
  sub_253465A3C();
  sub_253462A5C(&qword_269CE4ED0);
  sub_253465998();
  MEMORY[0x270FA5388](v7);
  sub_25346CC44();
  BOOL v8 = (int *)type metadata accessor for ResponseGenerationInput(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v9);
  sub_25346CC6C();
  sub_253472068(a1, a1[3]);
  sub_253947760();
  sub_253B0A660();
  if (v20) {
    return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)a1);
  }
  *uint64_t v3 = sub_253B0A320();
  v3[1] = v10;
  sub_2539477F8(&qword_269CE4ED8, MEMORY[0x263F07690]);
  sub_253B0A370();
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))((char *)v3 + v8[5], v2, v18);
  sub_253947C88();
  sub_253B0A370();
  *((unsigned char *)v3 + v8[6]) = v22;
  sub_25394CB98();
  uint64_t v11 = sub_253B0A320();
  uint64_t v12 = (uint64_t *)((char *)v3 + v8[7]);
  *uint64_t v12 = v11;
  v12[1] = v13;
  sub_253462A5C(&qword_269CE4EB8);
  sub_253947CD4(&qword_269CE4EE8, &qword_269CE4EF0);
  sub_253B0A370();
  uint64_t v14 = sub_25394CB0C();
  v15(v14);
  *(uint64_t *)((char *)v3 + v8[8]) = v21;
  sub_253947E3C((uint64_t)v3, a2, (void (*)(void))type metadata accessor for ResponseGenerationInput);
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)a1);
  return sub_253948CB4((uint64_t)v3, (void (*)(void))type metadata accessor for ResponseGenerationInput);
}

unint64_t sub_253947C88()
{
  unint64_t result = qword_269CE4EE0;
  if (!qword_269CE4EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE4EE0);
  }
  return result;
}

uint64_t sub_253947CD4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25347907C(&qword_269CE4EB8);
    sub_2539477F8(a2, (void (*)(uint64_t))type metadata accessor for StatementResultDigest);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_253947D68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ResponseGenerationInput.init(from:)(a1, a2);
}

uint64_t sub_253947D80(void *a1)
{
  return ResponseGenerationInput.encode(to:)(a1);
}

uint64_t StatementResultDigest.toolDefinition.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2534B45B0(v1, a1, &qword_26B241270);
}

uint64_t StatementResultDigest.action.getter()
{
  uint64_t v2 = sub_25394CBA4();
  return sub_2534B45B0(v1 + *(int *)(v2 + 20), v0, &qword_269CE4EF8);
}

uint64_t StatementResultDigest.statementResult.getter()
{
  uint64_t v2 = sub_25394CBA4();
  return sub_253947E3C(v1 + *(int *)(v2 + 24), v0, (void (*)(void))type metadata accessor for StatementResult);
}

uint64_t sub_253947E3C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25346CAF4();
  uint64_t v4 = sub_2534B4668();
  v5(v4);
  return a2;
}

uint64_t StatementResultDigest.undoOperation.getter()
{
  uint64_t result = sub_25394CBA4();
  *uint64_t v0 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t StatementResultDigest.returnValueTypeDisplayRepresentation.getter()
{
  uint64_t v2 = sub_25394CBA4();
  return sub_2534B45B0(v1 + *(int *)(v2 + 32), v0, &qword_269CE4F00);
}

uint64_t StatementResultDigest.init(toolDefinition:action:statementResult:undoOperation:returnValueTypeDisplayRepresentation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v10 = *a4;
  sub_2534720AC(a1, a6, &qword_26B241270);
  uint64_t v11 = (int *)type metadata accessor for StatementResultDigest(0);
  sub_2534720AC(a2, a6 + v11[5], &qword_269CE4EF8);
  sub_253947F98(a3, a6 + v11[6]);
  *(unsigned char *)(a6 + v11[7]) = v10;
  return sub_2534720AC(a5, a6 + v11[8], &qword_269CE4F00);
}

uint64_t sub_253947F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StatementResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_253947FFC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696665446C6F6F74 && a2 == 0xEE006E6F6974696ELL;
  if (v2 || (sub_253B0A4C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E6F69746361 && a2 == 0xE600000000000000;
    if (v6 || (sub_253B0A4C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6E656D6574617473 && a2 == 0xEF746C7573655274;
      if (v7 || (sub_253B0A4C0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x7265704F6F646E75 && a2 == 0xED00006E6F697461;
        if (v8 || (sub_253B0A4C0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000024 && a2 == 0x8000000253B12F70)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v9 = sub_253B0A4C0();
          swift_bridgeObjectRelease();
          if (v9) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

uint64_t sub_253948270()
{
  return 5;
}

unint64_t sub_253948278(char a1)
{
  unint64_t result = 0x696665446C6F6F74;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6F69746361;
      break;
    case 2:
      unint64_t result = 0x6E656D6574617473;
      break;
    case 3:
      unint64_t result = 0x7265704F6F646E75;
      break;
    case 4:
      unint64_t result = 0xD000000000000024;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25394834C()
{
  return sub_253948278(*v0);
}

uint64_t sub_253948354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253947FFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25394837C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_253948270();
  *a1 = result;
  return result;
}

uint64_t sub_2539483A4(uint64_t a1)
{
  unint64_t v2 = sub_2539486D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539483E0(uint64_t a1)
{
  unint64_t v2 = sub_2539486D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StatementResultDigest.encode(to:)(void *a1)
{
  sub_253462A5C(&qword_269CE4F08);
  sub_253465998();
  MEMORY[0x270FA5388](v3);
  sub_253472068(a1, a1[3]);
  sub_2539486D0();
  sub_2534DA3BC();
  sub_253B08B30();
  sub_2539477F8(&qword_269CDE978, MEMORY[0x263F7FED0]);
  sub_25394CBBC();
  sub_253B0A3E0();
  if (!v1)
  {
    type metadata accessor for StatementResultDigest(0);
    uint64_t v4 = sub_25394CB58();
    type metadata accessor for Action(v4);
    sub_2539477F8(&qword_269CE4F18, (void (*)(uint64_t))type metadata accessor for Action);
    sub_25394CB38();
    sub_253B0A3E0();
    type metadata accessor for StatementResult(0);
    sub_2539477F8(&qword_269CE4F20, (void (*)(uint64_t))type metadata accessor for StatementResult);
    sub_253B0A440();
    sub_25394CB98();
    sub_25394871C();
    sub_253B0A3E0();
    sub_253B09460();
    sub_2539477F8(&qword_269CE4F30, MEMORY[0x263F80C68]);
    sub_253B0A3E0();
  }
  uint64_t v5 = sub_2534F82A4();
  return v6(v5);
}

unint64_t sub_2539486D0()
{
  unint64_t result = qword_269CE4F10;
  if (!qword_269CE4F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE4F10);
  }
  return result;
}

unint64_t sub_25394871C()
{
  unint64_t result = qword_269CE4F28;
  if (!qword_269CE4F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE4F28);
  }
  return result;
}

uint64_t StatementResultDigest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_253462A5C(&qword_269CE4F00);
  MEMORY[0x270FA5388](v4 - 8);
  sub_25346CB04();
  uint64_t v23 = v5;
  type metadata accessor for StatementResult(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v6);
  sub_25346CC6C();
  uint64_t v7 = sub_253462A5C(&qword_269CE4EF8);
  MEMORY[0x270FA5388](v7 - 8);
  sub_25346CC44();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_253462A5C(&qword_26B241270);
  MEMORY[0x270FA5388](v11 - 8);
  sub_25346CB04();
  uint64_t v24 = v12;
  sub_253462A5C(&qword_269CE4F38);
  sub_253465998();
  MEMORY[0x270FA5388](v13);
  sub_253465A3C();
  uint64_t v14 = (int *)type metadata accessor for StatementResultDigest(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v15);
  sub_25346CC44();
  uint64_t v18 = v17 - v16;
  sub_253472068(a1, a1[3]);
  sub_2539486D0();
  sub_253B0A660();
  if (v25) {
    return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)a1);
  }
  sub_253B08B30();
  sub_2539477F8(&qword_269CDE988, MEMORY[0x263F7FED0]);
  sub_25394CB74();
  sub_2534720AC(v24, v18, &qword_26B241270);
  type metadata accessor for Action(0);
  sub_2539477F8(&qword_269CE4F40, (void (*)(uint64_t))type metadata accessor for Action);
  sub_25394CB74();
  sub_2534720AC(v10, v18 + v14[5], &qword_269CE4EF8);
  sub_2539477F8(&qword_269CE4F48, (void (*)(uint64_t))type metadata accessor for StatementResult);
  sub_253B0A370();
  sub_253947F98(v2, v18 + v14[6]);
  sub_25394CB98();
  sub_253948D0C();
  sub_253B0A310();
  *(unsigned char *)(v18 + v14[7]) = v26;
  sub_253B09460();
  sub_2539477F8(&qword_269CE4F58, MEMORY[0x263F80C68]);
  sub_253B0A310();
  uint64_t v20 = sub_25394CB24();
  v21(v20);
  sub_2534720AC(v23, v18 + v14[8], &qword_269CE4F00);
  sub_253947E3C(v18, a2, (void (*)(void))type metadata accessor for StatementResultDigest);
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)a1);
  return sub_253948CB4(v18, (void (*)(void))type metadata accessor for StatementResultDigest);
}

uint64_t sub_253948CB4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_25346CAF4();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_253948D0C()
{
  unint64_t result = qword_269CE4F50;
  if (!qword_269CE4F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE4F50);
  }
  return result;
}

uint64_t sub_253948D58@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StatementResultDigest.init(from:)(a1, a2);
}

uint64_t sub_253948D70(void *a1)
{
  return StatementResultDigest.encode(to:)(a1);
}

IntelligenceFlowPlannerSupport::RequestType_optional __swiftcall RequestType.init(rawValue:)(Swift::String rawValue)
{
  return (IntelligenceFlowPlannerSupport::RequestType_optional)sub_253949104(v1);
}

uint64_t RequestType.rawValue.getter()
{
  if (*v0) {
    return 1868852853;
  }
  else {
    return 0x6D726F66726570;
  }
}

uint64_t sub_253948DC8(char *a1, char *a2)
{
  return sub_25357C20C(*a1, *a2);
}

uint64_t sub_253948DD4()
{
  return sub_25397FE00();
}

uint64_t sub_253948DDC()
{
  return sub_253980724();
}

uint64_t sub_253948DE4()
{
  return sub_253980B48();
}

IntelligenceFlowPlannerSupport::RequestType_optional sub_253948DEC(Swift::String *a1)
{
  return RequestType.init(rawValue:)(*a1);
}

uint64_t sub_253948DF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = RequestType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_253948E20()
{
  return sub_253B09A10();
}

uint64_t sub_253948E80()
{
  return sub_253B099E0();
}

void ResponseMode.condensed.getter(BOOL *a1@<X8>)
{
  *a1 = *v1 > 1u;
}

IntelligenceFlowPlannerSupport::ResponseMode_optional __swiftcall ResponseMode.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_253B0A2A0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t ResponseMode.rawValue.getter()
{
  uint64_t result = 0x726F466563696F76;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C6E4F6563696F76;
      break;
    case 2:
      uint64_t result = 0x4679616C70736964;
      break;
    case 3:
      uint64_t result = 0x4F79616C70736964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_253948FF0(unsigned __int8 *a1, char *a2)
{
  return sub_25357C060(*a1, *a2);
}

uint64_t sub_253948FFC()
{
  return sub_25397FE0C(*v0);
}

uint64_t sub_253949004()
{
  return sub_25398063C();
}

uint64_t sub_25394900C(uint64_t a1)
{
  return sub_253980BC0(a1, *v1);
}

IntelligenceFlowPlannerSupport::ResponseMode_optional sub_253949014(Swift::String *a1)
{
  return ResponseMode.init(rawValue:)(*a1);
}

uint64_t sub_253949020@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ResponseMode.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_253949048()
{
  return sub_253B09A10();
}

uint64_t sub_2539490A8()
{
  return sub_253B099E0();
}

IntelligenceFlowPlannerSupport::CondensedResponseMode_optional __swiftcall CondensedResponseMode.init(rawValue:)(Swift::String rawValue)
{
  return (IntelligenceFlowPlannerSupport::CondensedResponseMode_optional)sub_253949104(v1);
}

uint64_t sub_253949104@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_253B0A2A0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t CondensedResponseMode.rawValue.getter()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0x4149445F4C4C5546;
  }
}

uint64_t sub_2539491AC(char *a1, char *a2)
{
  return sub_25357B81C(*a1, *a2);
}

uint64_t sub_2539491B8()
{
  return sub_25397FE24();
}

uint64_t sub_2539491C0()
{
  return sub_253980134();
}

uint64_t sub_2539491C8()
{
  return sub_253980CCC();
}

IntelligenceFlowPlannerSupport::CondensedResponseMode_optional sub_2539491D0(Swift::String *a1)
{
  return CondensedResponseMode.init(rawValue:)(*a1);
}

uint64_t sub_2539491DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CondensedResponseMode.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_253949204()
{
  return sub_253B09A10();
}

uint64_t sub_253949264()
{
  return sub_253B099E0();
}

uint64_t static ResponseGenerationInput.load(fromProtobufJSON:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v21[1] = a3;
  type metadata accessor for ResponseGenerationProtoResponseGenerationInput(0);
  sub_25346CAF4();
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  v21[0] = (uint64_t)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v21 - v8;
  uint64_t v10 = sub_253B07190();
  sub_253465998();
  uint64_t v12 = v11;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v21 - v17;
  sub_253B07180();
  sub_253B07170();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v18, v10);
  sub_25348A9C8(a1, a2);
  sub_2539477F8((unint64_t *)&qword_269CE03C8, (void (*)(uint64_t))type metadata accessor for ResponseGenerationProtoResponseGenerationInput);
  uint64_t v19 = v21[3];
  sub_253B073A0();
  if (!v19)
  {
    sub_253947E3C((uint64_t)v9, v21[0], (void (*)(void))type metadata accessor for ResponseGenerationProtoResponseGenerationInput);
    ResponseGenerationInput.init(transcript:)();
    sub_253948CB4((uint64_t)v9, (void (*)(void))type metadata accessor for ResponseGenerationProtoResponseGenerationInput);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v18, v10);
}

unint64_t sub_2539494F4()
{
  unint64_t result = qword_269CE4F60;
  if (!qword_269CE4F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE4F60);
  }
  return result;
}

unint64_t sub_253949544()
{
  unint64_t result = qword_269CE4F68;
  if (!qword_269CE4F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE4F68);
  }
  return result;
}

unint64_t sub_253949594()
{
  unint64_t result = qword_269CE4F70;
  if (!qword_269CE4F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE4F70);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ResponseGenerationInput(void *a1, void *a2, int *a3)
{
  char v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *char v4 = *a2;
    char v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_253B05630();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *((unsigned char *)v4 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v14 = (void *)((char *)v4 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    *(void *)((char *)v4 + a3[8]) = *(void *)((char *)a2 + a3[8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ResponseGenerationInput(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_253B05630();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ResponseGenerationInput(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_253B05630();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ResponseGenerationInput(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B05630();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for ResponseGenerationInput(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B05630();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

void *assignWithTake for ResponseGenerationInput(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_253B05630();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseGenerationInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253949B08);
}

uint64_t sub_253949B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_253B05630();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ResponseGenerationInput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253949BA4);
}

uint64_t sub_253949BA4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_253B05630();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_253949C24()
{
  uint64_t result = sub_253B05630();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for StatementResultDigest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253B08B30();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_26B241270);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = a3[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = (int *)type metadata accessor for Action(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, (uint64_t)v13))
    {
      uint64_t v14 = sub_253462A5C(&qword_269CE4EF8);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v15 = sub_253B059D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v11, v12, v15);
      uint64_t v16 = v13[5];
      uint64_t v17 = &v11[v16];
      uint64_t v18 = &v12[v16];
      uint64_t v19 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v19;
      v11[v13[6]] = v12[v13[6]];
      *(void *)&v11[v13[7]] = *(void *)&v12[v13[7]];
      uint64_t v20 = v13[8];
      uint64_t v21 = &v11[v20];
      char v22 = &v12[v20];
      uint64_t v23 = *((void *)v22 + 1);
      *(void *)uint64_t v21 = *(void *)v22;
      *((void *)v21 + 1) = v23;
      uint64_t v24 = v13[9];
      uint64_t v25 = &v11[v24];
      char v26 = &v12[v24];
      uint64_t v27 = *((void *)v26 + 1);
      *(void *)uint64_t v25 = *(void *)v26;
      *((void *)v25 + 1) = v27;
      uint64_t v28 = *((void *)v26 + 3);
      *((void *)v25 + 2) = *((void *)v26 + 2);
      *((void *)v25 + 3) = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v11, 0, 1, (uint64_t)v13);
    }
    uint64_t v29 = a3[6];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    uint64_t v32 = sub_253B055C0();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v31, 1, v32))
    {
      uint64_t v33 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
      memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v30, 0, 1, v32);
    }
    uint64_t v34 = (int *)type metadata accessor for StatementResult(0);
    uint64_t v35 = v34[5];
    uint64_t v36 = &v30[v35];
    uint64_t v37 = &v31[v35];
    uint64_t v38 = sub_253B06850();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
    uint64_t v39 = *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
    uint64_t v40 = &v36[v39];
    uint64_t v41 = &v37[v39];
    uint64_t v42 = sub_253B06820();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v41, 1, v42))
    {
      uint64_t v43 = sub_253462A5C(&qword_269CDBB28);
      memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v40, 0, 1, v42);
    }
    uint64_t v44 = v34[6];
    uint64_t v45 = &v30[v44];
    uint64_t v46 = &v31[v44];
    uint64_t v47 = sub_253B059D0();
    uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16);
    v48(v45, v46, v47);
    v48(&v30[v34[7]], &v31[v34[7]], v47);
    v48(&v30[v34[8]], &v31[v34[8]], v47);
    uint64_t v49 = v34[9];
    uint64_t v50 = &v30[v49];
    uint64_t v51 = &v31[v49];
    uint64_t v52 = *((void *)v51 + 1);
    if (v52)
    {
      *(void *)uint64_t v50 = *(void *)v51;
      *((void *)v50 + 1) = v52;
      uint64_t v53 = *((void *)v51 + 3);
      *((void *)v50 + 2) = *((void *)v51 + 2);
      *((void *)v50 + 3) = v53;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v54 = *((_OWORD *)v51 + 1);
      *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
      *((_OWORD *)v50 + 1) = v54;
    }
    uint64_t v55 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    uint64_t v56 = (char *)a1 + v55;
    uint64_t v57 = (char *)a2 + v55;
    uint64_t v58 = sub_253B09460();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v57, 1, v58))
    {
      uint64_t v59 = sub_253462A5C(&qword_269CE4F00);
      memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v56, 0, 1, v58);
    }
  }
  return a1;
}

uint64_t destroy for StatementResultDigest(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_253B08B30();
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for Action(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v5, 1, v6))
  {
    uint64_t v7 = sub_253B059D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = a1 + a2[6];
  uint64_t v9 = sub_253B055C0();
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = (int *)type metadata accessor for StatementResult(0);
  uint64_t v11 = v8 + v10[5];
  uint64_t v12 = sub_253B06850();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v11 + *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
  uint64_t v14 = sub_253B06820();
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  uint64_t v15 = v8 + v10[6];
  uint64_t v16 = sub_253B059D0();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
  v17(v15, v16);
  v17(v8 + v10[7], v16);
  v17(v8 + v10[8], v16);
  if (*(void *)(v8 + v10[9] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = a1 + a2[8];
  uint64_t v19 = sub_253B09460();
  uint64_t result = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v18, 1, v19);
  if (!result)
  {
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8);
    return v21(v18, v19);
  }
  return result;
}

char *initializeWithCopy for StatementResultDigest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_253B08B30();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_26B241270);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = (int *)type metadata accessor for Action(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, (uint64_t)v11))
  {
    uint64_t v12 = sub_253462A5C(&qword_269CE4EF8);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_253B059D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v9, v10, v13);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    uint64_t v17 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    v9[v11[6]] = v10[v11[6]];
    *(void *)&v9[v11[7]] = *(void *)&v10[v11[7]];
    uint64_t v18 = v11[8];
    uint64_t v19 = &v9[v18];
    uint64_t v20 = &v10[v18];
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    uint64_t v22 = v11[9];
    uint64_t v23 = &v9[v22];
    uint64_t v24 = &v10[v22];
    uint64_t v25 = *((void *)v24 + 1);
    *(void *)uint64_t v23 = *(void *)v24;
    *((void *)v23 + 1) = v25;
    uint64_t v26 = *((void *)v24 + 3);
    *((void *)v23 + 2) = *((void *)v24 + 2);
    *((void *)v23 + 3) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, (uint64_t)v11);
  }
  uint64_t v27 = a3[6];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v30 = sub_253B055C0();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v30))
  {
    uint64_t v31 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
    memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v28, 0, 1, v30);
  }
  uint64_t v32 = (int *)type metadata accessor for StatementResult(0);
  uint64_t v33 = v32[5];
  uint64_t v34 = &v28[v33];
  uint64_t v35 = &v29[v33];
  uint64_t v36 = sub_253B06850();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
  uint64_t v37 = *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
  uint64_t v38 = &v34[v37];
  uint64_t v39 = &v35[v37];
  uint64_t v40 = sub_253B06820();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v39, 1, v40))
  {
    uint64_t v41 = sub_253462A5C(&qword_269CDBB28);
    memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v38, 0, 1, v40);
  }
  uint64_t v42 = v32[6];
  uint64_t v43 = &v28[v42];
  uint64_t v44 = &v29[v42];
  uint64_t v45 = sub_253B059D0();
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
  v46(v43, v44, v45);
  v46(&v28[v32[7]], &v29[v32[7]], v45);
  v46(&v28[v32[8]], &v29[v32[8]], v45);
  uint64_t v47 = v32[9];
  uint64_t v48 = &v28[v47];
  uint64_t v49 = &v29[v47];
  uint64_t v50 = *((void *)v49 + 1);
  if (v50)
  {
    *(void *)uint64_t v48 = *(void *)v49;
    *((void *)v48 + 1) = v50;
    uint64_t v51 = *((void *)v49 + 3);
    *((void *)v48 + 2) = *((void *)v49 + 2);
    *((void *)v48 + 3) = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v52 = *((_OWORD *)v49 + 1);
    *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
    *((_OWORD *)v48 + 1) = v52;
  }
  uint64_t v53 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  long long v54 = &a1[v53];
  uint64_t v55 = &a2[v53];
  uint64_t v56 = sub_253B09460();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v55, 1, v56))
  {
    uint64_t v57 = sub_253462A5C(&qword_269CE4F00);
    memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v54, 0, 1, v56);
  }
  return a1;
}

char *assignWithCopy for StatementResultDigest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_253B08B30();
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_253462A5C(&qword_26B241270);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = (int *)type metadata accessor for Action(0);
  int v15 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, (uint64_t)v14);
  int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, (uint64_t)v14);
  if (v15)
  {
    if (!v16)
    {
      uint64_t v17 = sub_253B059D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v12, v13, v17);
      uint64_t v18 = v14[5];
      uint64_t v19 = &v12[v18];
      uint64_t v20 = &v13[v18];
      *(void *)uint64_t v19 = *(void *)v20;
      *((void *)v19 + 1) = *((void *)v20 + 1);
      v12[v14[6]] = v13[v14[6]];
      *(void *)&v12[v14[7]] = *(void *)&v13[v14[7]];
      uint64_t v21 = v14[8];
      uint64_t v22 = &v12[v21];
      uint64_t v23 = &v13[v21];
      *(void *)uint64_t v22 = *(void *)v23;
      *((void *)v22 + 1) = *((void *)v23 + 1);
      uint64_t v24 = v14[9];
      uint64_t v25 = &v12[v24];
      uint64_t v26 = &v13[v24];
      *(void *)uint64_t v25 = *(void *)v26;
      *((void *)v25 + 1) = *((void *)v26 + 1);
      *((void *)v25 + 2) = *((void *)v26 + 2);
      *((void *)v25 + 3) = *((void *)v26 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, (uint64_t)v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    sub_253948CB4((uint64_t)v12, (void (*)(void))type metadata accessor for Action);
LABEL_12:
    uint64_t v27 = sub_253462A5C(&qword_269CE4EF8);
    memcpy(v12, v13, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v59 = sub_253B059D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 24))(v12, v13, v59);
  uint64_t v60 = v14[5];
  uint64_t v61 = &v12[v60];
  uint64_t v62 = &v13[v60];
  *(void *)uint64_t v61 = *(void *)v62;
  *((void *)v61 + 1) = *((void *)v62 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12[v14[6]] = v13[v14[6]];
  *(void *)&v12[v14[7]] = *(void *)&v13[v14[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v63 = v14[8];
  uint64_t v64 = &v12[v63];
  uint64_t v65 = &v13[v63];
  *(void *)uint64_t v64 = *(void *)v65;
  *((void *)v64 + 1) = *((void *)v65 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v66 = v14[9];
  uint64_t v67 = &v12[v66];
  uint64_t v68 = &v13[v66];
  *(void *)uint64_t v67 = *(void *)v68;
  *((void *)v67 + 1) = *((void *)v68 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v67 + 2) = *((void *)v68 + 2);
  *((void *)v67 + 3) = *((void *)v68 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v28 = a3[6];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  uint64_t v31 = sub_253B055C0();
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v31);
  int v33 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v30, 1, v31);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v29, 0, 1, v31);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  uint64_t v34 = *(void *)(v31 - 8);
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v31);
LABEL_18:
    uint64_t v35 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
    memcpy(v29, v30, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 24))(v29, v30, v31);
LABEL_19:
  uint64_t v36 = (int *)type metadata accessor for StatementResult(0);
  uint64_t v37 = v36[5];
  uint64_t v38 = &v29[v37];
  uint64_t v39 = &v30[v37];
  uint64_t v40 = sub_253B06850();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 24))(v38, v39, v40);
  uint64_t v41 = *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
  uint64_t v42 = &v38[v41];
  uint64_t v43 = &v39[v41];
  uint64_t v44 = sub_253B06820();
  int v45 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v42, 1, v44);
  int v46 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v43, 1, v44);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v42, 0, 1, v44);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v47 = *(void *)(v44 - 8);
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v42, v44);
LABEL_24:
    uint64_t v48 = sub_253462A5C(&qword_269CDBB28);
    memcpy(v42, v43, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v47 + 24))(v42, v43, v44);
LABEL_25:
  uint64_t v49 = v36[6];
  uint64_t v50 = &v29[v49];
  uint64_t v51 = &v30[v49];
  uint64_t v52 = sub_253B059D0();
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 24);
  v53(v50, v51, v52);
  v53(&v29[v36[7]], &v30[v36[7]], v52);
  v53(&v29[v36[8]], &v30[v36[8]], v52);
  uint64_t v54 = v36[9];
  uint64_t v55 = &v29[v54];
  uint64_t v56 = &v30[v54];
  uint64_t v57 = *(void *)&v30[v54 + 8];
  if (*((void *)v55 + 1))
  {
    if (v57)
    {
      *(void *)uint64_t v55 = *(void *)v56;
      *((void *)v55 + 1) = *((void *)v56 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v55 + 2) = *((void *)v56 + 2);
      *((void *)v55 + 3) = *((void *)v56 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_25394B3D4((uint64_t)v55);
      long long v58 = *((_OWORD *)v56 + 1);
      *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
      *((_OWORD *)v55 + 1) = v58;
    }
  }
  else if (v57)
  {
    *(void *)uint64_t v55 = *(void *)v56;
    *((void *)v55 + 1) = *((void *)v56 + 1);
    *((void *)v55 + 2) = *((void *)v56 + 2);
    *((void *)v55 + 3) = *((void *)v56 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v69 = *((_OWORD *)v56 + 1);
    *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
    *((_OWORD *)v55 + 1) = v69;
  }
  a1[a3[7]] = a2[a3[7]];
  uint64_t v70 = a3[8];
  uint64_t v71 = &a1[v70];
  uint64_t v72 = &a2[v70];
  uint64_t v73 = sub_253B09460();
  int v74 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v71, 1, v73);
  int v75 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v72, 1, v73);
  if (!v74)
  {
    uint64_t v76 = *(void *)(v73 - 8);
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v76 + 24))(v71, v72, v73);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v76 + 8))(v71, v73);
    goto LABEL_41;
  }
  if (v75)
  {
LABEL_41:
    uint64_t v77 = sub_253462A5C(&qword_269CE4F00);
    memcpy(v71, v72, *(void *)(*(void *)(v77 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v71, 0, 1, v73);
  return a1;
}

uint64_t sub_25394B3D4(uint64_t a1)
{
  return a1;
}

char *initializeWithTake for StatementResultDigest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_253B08B30();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_26B241270);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = (int *)type metadata accessor for Action(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, (uint64_t)v11))
  {
    uint64_t v12 = sub_253462A5C(&qword_269CE4EF8);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_253B059D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v9, v10, v13);
    *(_OWORD *)&v9[v11[5]] = *(_OWORD *)&v10[v11[5]];
    v9[v11[6]] = v10[v11[6]];
    *(void *)&v9[v11[7]] = *(void *)&v10[v11[7]];
    *(_OWORD *)&v9[v11[8]] = *(_OWORD *)&v10[v11[8]];
    uint64_t v14 = v11[9];
    int v15 = &v9[v14];
    int v16 = &v10[v14];
    long long v17 = *((_OWORD *)v16 + 1);
    *(_OWORD *)int v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v17;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, (uint64_t)v11);
  }
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_253B055C0();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21))
  {
    uint64_t v22 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v21);
  }
  uint64_t v23 = (int *)type metadata accessor for StatementResult(0);
  uint64_t v24 = v23[5];
  uint64_t v25 = &v19[v24];
  uint64_t v26 = &v20[v24];
  uint64_t v27 = sub_253B06850();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  uint64_t v28 = *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
  uint64_t v29 = &v25[v28];
  uint64_t v30 = &v26[v28];
  uint64_t v31 = sub_253B06820();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v30, 1, v31))
  {
    uint64_t v32 = sub_253462A5C(&qword_269CDBB28);
    memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v29, 0, 1, v31);
  }
  uint64_t v33 = v23[6];
  uint64_t v34 = &v19[v33];
  uint64_t v35 = &v20[v33];
  uint64_t v36 = sub_253B059D0();
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32);
  v37(v34, v35, v36);
  v37(&v19[v23[7]], &v20[v23[7]], v36);
  v37(&v19[v23[8]], &v20[v23[8]], v36);
  uint64_t v38 = v23[9];
  uint64_t v39 = &v19[v38];
  uint64_t v40 = &v20[v38];
  long long v41 = *((_OWORD *)v40 + 1);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *((_OWORD *)v39 + 1) = v41;
  uint64_t v42 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  uint64_t v45 = sub_253B09460();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v44, 1, v45))
  {
    uint64_t v46 = sub_253462A5C(&qword_269CE4F00);
    memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v43, 0, 1, v45);
  }
  return a1;
}

char *assignWithTake for StatementResultDigest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_253B08B30();
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_253462A5C(&qword_26B241270);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = (int *)type metadata accessor for Action(0);
  int v15 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, (uint64_t)v14);
  int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, (uint64_t)v14);
  if (v15)
  {
    if (!v16)
    {
      uint64_t v17 = sub_253B059D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v12, v13, v17);
      *(_OWORD *)&v12[v14[5]] = *(_OWORD *)&v13[v14[5]];
      v12[v14[6]] = v13[v14[6]];
      *(void *)&v12[v14[7]] = *(void *)&v13[v14[7]];
      *(_OWORD *)&v12[v14[8]] = *(_OWORD *)&v13[v14[8]];
      uint64_t v18 = v14[9];
      uint64_t v19 = &v12[v18];
      uint64_t v20 = &v13[v18];
      long long v21 = *((_OWORD *)v20 + 1);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v21;
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, (uint64_t)v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    sub_253948CB4((uint64_t)v12, (void (*)(void))type metadata accessor for Action);
LABEL_12:
    uint64_t v22 = sub_253462A5C(&qword_269CE4EF8);
    memcpy(v12, v13, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v64 = sub_253B059D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 40))(v12, v13, v64);
  uint64_t v65 = v14[5];
  uint64_t v66 = &v12[v65];
  uint64_t v67 = &v13[v65];
  uint64_t v69 = *(void *)v67;
  uint64_t v68 = *((void *)v67 + 1);
  *(void *)uint64_t v66 = v69;
  *((void *)v66 + 1) = v68;
  swift_bridgeObjectRelease();
  v12[v14[6]] = v13[v14[6]];
  *(void *)&v12[v14[7]] = *(void *)&v13[v14[7]];
  swift_bridgeObjectRelease();
  uint64_t v70 = v14[8];
  uint64_t v71 = &v12[v70];
  uint64_t v72 = &v13[v70];
  uint64_t v74 = *(void *)v72;
  uint64_t v73 = *((void *)v72 + 1);
  *(void *)uint64_t v71 = v74;
  *((void *)v71 + 1) = v73;
  swift_bridgeObjectRelease();
  uint64_t v75 = v14[9];
  uint64_t v76 = &v12[v75];
  uint64_t v77 = &v13[v75];
  uint64_t v78 = *((void *)v77 + 1);
  *(void *)uint64_t v76 = *(void *)v77;
  *((void *)v76 + 1) = v78;
  swift_bridgeObjectRelease();
  uint64_t v79 = *((void *)v77 + 3);
  *((void *)v76 + 2) = *((void *)v77 + 2);
  *((void *)v76 + 3) = v79;
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v23 = a3[6];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = sub_253B055C0();
  int v27 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v26);
  int v28 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v26);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v26);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  uint64_t v29 = *(void *)(v26 - 8);
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v24, v26);
LABEL_18:
    uint64_t v30 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
    memcpy(v24, v25, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 40))(v24, v25, v26);
LABEL_19:
  uint64_t v31 = (int *)type metadata accessor for StatementResult(0);
  uint64_t v32 = v31[5];
  uint64_t v33 = &v24[v32];
  uint64_t v34 = &v25[v32];
  uint64_t v35 = sub_253B06850();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 40))(v33, v34, v35);
  uint64_t v36 = *(int *)(type metadata accessor for StatementResultPayload(0) + 20);
  uint64_t v37 = &v33[v36];
  uint64_t v38 = &v34[v36];
  uint64_t v39 = sub_253B06820();
  int v40 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v37, 1, v39);
  int v41 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, v39);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v37, 0, 1, v39);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v42 = *(void *)(v39 - 8);
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v37, v39);
LABEL_24:
    uint64_t v43 = sub_253462A5C(&qword_269CDBB28);
    memcpy(v37, v38, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v37, v38, v39);
LABEL_25:
  uint64_t v44 = v31[6];
  uint64_t v45 = &v24[v44];
  uint64_t v46 = &v25[v44];
  uint64_t v47 = sub_253B059D0();
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 40);
  v48(v45, v46, v47);
  v48(&v24[v31[7]], &v25[v31[7]], v47);
  v48(&v24[v31[8]], &v25[v31[8]], v47);
  uint64_t v49 = v31[9];
  uint64_t v50 = &v24[v49];
  uint64_t v51 = &v25[v49];
  if (*((void *)v50 + 1))
  {
    uint64_t v52 = *((void *)v51 + 1);
    if (v52)
    {
      *(void *)uint64_t v50 = *(void *)v51;
      *((void *)v50 + 1) = v52;
      swift_bridgeObjectRelease();
      uint64_t v53 = *((void *)v51 + 3);
      *((void *)v50 + 2) = *((void *)v51 + 2);
      *((void *)v50 + 3) = v53;
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    sub_25394B3D4((uint64_t)v50);
  }
  long long v54 = *((_OWORD *)v51 + 1);
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  *((_OWORD *)v50 + 1) = v54;
LABEL_30:
  uint64_t v55 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v56 = &a1[v55];
  uint64_t v57 = &a2[v55];
  uint64_t v58 = sub_253B09460();
  int v59 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v56, 1, v58);
  int v60 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v57, 1, v58);
  if (!v59)
  {
    uint64_t v61 = *(void *)(v58 - 8);
    if (!v60)
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 40))(v56, v57, v58);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v61 + 8))(v56, v58);
    goto LABEL_35;
  }
  if (v60)
  {
LABEL_35:
    uint64_t v62 = sub_253462A5C(&qword_269CE4F00);
    memcpy(v56, v57, *(void *)(*(void *)(v62 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v56, 0, 1, v58);
  return a1;
}

uint64_t getEnumTagSinglePayload for StatementResultDigest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25394C110);
}

uint64_t sub_25394C110(uint64_t a1, uint64_t a2, int *a3)
{
  sub_253462A5C(&qword_26B241270);
  sub_253486600();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_16:
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, a2, v8);
  }
  sub_253462A5C(&qword_269CE4EF8);
  sub_253486600();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v12 = a3[5];
LABEL_15:
    uint64_t v9 = a1 + v12;
    goto LABEL_16;
  }
  type metadata accessor for StatementResult(0);
  sub_253486600();
  if (*(_DWORD *)(v14 + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v12 = a3[6];
    goto LABEL_15;
  }
  if (a2 != 253)
  {
    uint64_t v8 = sub_253462A5C(&qword_269CE4F00);
    uint64_t v12 = a3[8];
    goto LABEL_15;
  }
  if (*(unsigned __int8 *)(a1 + a3[7]) <= 2u) {
    int v15 = 2;
  }
  else {
    int v15 = *(unsigned __int8 *)(a1 + a3[7]);
  }
  unsigned int v16 = v15 - 2;
  if (*(unsigned __int8 *)(a1 + a3[7]) >= 2u) {
    return v16;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for StatementResultDigest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25394C22C);
}

void sub_25394C22C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_253462A5C(&qword_26B241270);
  sub_253486600();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_253462A5C(&qword_269CE4EF8);
    sub_253486600();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      type metadata accessor for StatementResult(0);
      sub_253486600();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[6];
      }
      else
      {
        if (a3 == 253)
        {
          *(unsigned char *)(a1 + a4[7]) = a2 + 2;
          return;
        }
        uint64_t v10 = sub_253462A5C(&qword_269CE4F00);
        uint64_t v14 = a4[8];
      }
    }
    uint64_t v11 = a1 + v14;
  }
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v11, a2, a2, v10);
}

void sub_25394C328()
{
  sub_25394C4C4(319, &qword_269CE4F98, MEMORY[0x263F7FED0]);
  if (v0 <= 0x3F)
  {
    sub_25394C4C4(319, &qword_269CE4FA0, (void (*)(uint64_t))type metadata accessor for Action);
    if (v1 <= 0x3F)
    {
      type metadata accessor for StatementResult(319);
      if (v2 <= 0x3F)
      {
        sub_25394C4C4(319, &qword_269CE4FA8, MEMORY[0x263F80C68]);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_25394C4C4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_253B09E00();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void type metadata accessor for RequestType()
{
}

unsigned char *storeEnumTagSinglePayload for ResponseMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25394C5F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for ResponseMode()
{
}

unsigned char *_s30IntelligenceFlowPlannerSupport11RequestTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25394C6F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for CondensedResponseMode()
{
}

ValueMetadata *type metadata accessor for StatementResultDigest.CodingKeys()
{
  return &type metadata for StatementResultDigest.CodingKeys;
}

unsigned char *_s30IntelligenceFlowPlannerSupport21StatementResultDigestV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25394C80CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseGenerationInput.CodingKeys()
{
  return &type metadata for ResponseGenerationInput.CodingKeys;
}

unint64_t sub_25394C848()
{
  unint64_t result = qword_269CE4FB0;
  if (!qword_269CE4FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE4FB0);
  }
  return result;
}

unint64_t sub_25394C898()
{
  unint64_t result = qword_269CE4FB8;
  if (!qword_269CE4FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE4FB8);
  }
  return result;
}

unint64_t sub_25394C8E8()
{
  unint64_t result = qword_269CE4FC0;
  if (!qword_269CE4FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE4FC0);
  }
  return result;
}

unint64_t sub_25394C938()
{
  unint64_t result = qword_269CE4FC8;
  if (!qword_269CE4FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE4FC8);
  }
  return result;
}

unint64_t sub_25394C988()
{
  unint64_t result = qword_269CE4FD0;
  if (!qword_269CE4FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE4FD0);
  }
  return result;
}

unint64_t sub_25394C9D8()
{
  unint64_t result = qword_269CE4FD8;
  if (!qword_269CE4FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE4FD8);
  }
  return result;
}

unint64_t sub_25394CA24()
{
  unint64_t result = qword_269CE4FE0;
  if (!qword_269CE4FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE4FE0);
  }
  return result;
}

unint64_t sub_25394CA70()
{
  unint64_t result = qword_269CE4FE8;
  if (!qword_269CE4FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE4FE8);
  }
  return result;
}

unint64_t sub_25394CABC()
{
  unint64_t result = qword_269CE4FF0;
  if (!qword_269CE4FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE4FF0);
  }
  return result;
}

uint64_t sub_25394CB0C()
{
  return v0;
}

uint64_t sub_25394CB24()
{
  return *(void *)(v0 - 96);
}

uint64_t sub_25394CB38()
{
  return v0;
}

uint64_t sub_25394CB58()
{
  *(unsigned char *)(v0 - 66) = 1;
  return 0;
}

uint64_t sub_25394CB74()
{
  return sub_253B0A310();
}

void sub_25394CB98()
{
  *(unsigned char *)(v0 - 69) = 3;
}

uint64_t sub_25394CBA4()
{
  return type metadata accessor for StatementResultDigest(0);
}

uint64_t ResponseGenerationInput.fsf_serialize()()
{
  sub_253B089F0();
  sub_253465998();
  MEMORY[0x270FA5388](v1);
  sub_25346CB04();
  sub_253B071B0();
  sub_253465998();
  MEMORY[0x270FA5388](v2);
  sub_25346CB04();
  uint64_t v3 = type metadata accessor for ResponseGenerationInput(0);
  uint64_t v4 = v3 - 8;
  MEMORY[0x270FA5388](v3);
  sub_25346CC44();
  uint64_t v7 = (void *)(v6 - v5);
  type metadata accessor for ResponseGenerationProtoResponseGenerationInput(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v8);
  sub_25346CC44();
  uint64_t v11 = v10 - v9;
  sub_25394D6DC(v0, (uint64_t)v7, (void (*)(void))type metadata accessor for ResponseGenerationInput);
  uint64_t v12 = v7[1];
  uint64_t v13 = (void *)((char *)v7 + *(int *)(v4 + 36));
  uint64_t v14 = v13[1];
  uint64_t v25 = *v13;
  uint64_t v26 = *v7;
  char v15 = *((unsigned char *)v7 + *(int *)(v4 + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_253B055E0();
  uint64_t v18 = v17;
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = sub_25394D254(v19);
  _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
  *(void *)uint64_t v11 = v26;
  *(void *)(v11 + 8) = v12;
  *(void *)(v11 + 16) = v25;
  *(void *)(v11 + 24) = v14;
  *(unsigned char *)(v11 + 32) = 0x4030102u >> (8 * v15);
  *(void *)(v11 + 40) = v16;
  *(void *)(v11 + 48) = v18;
  *(void *)(v11 + 56) = v20;
  sub_25394D73C((uint64_t)v7, (void (*)(void))type metadata accessor for ResponseGenerationInput);
  sub_253B071A0();
  sub_25394D68C();
  uint64_t v22 = sub_253B07390();
  uint64_t v23 = sub_25394D838();
  v24(v23);
  sub_25394D73C(v11, (void (*)(void))type metadata accessor for ResponseGenerationProtoResponseGenerationInput);
  return v22;
}

uint64_t static ResponseGenerationInput.fsf_deserialize(from:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_253B089F0();
  sub_253465998();
  MEMORY[0x270FA5388](v6);
  sub_25346CC44();
  static ResponseGenerationInput.load(fromProtobufJSON:)(a1, a2, a3);
  uint64_t v7 = type metadata accessor for ResponseGenerationInput(0);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a3, 0, 1, v7);
}

uint64_t sub_25394D254(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  uint64_t v4 = sub_25346CB34(v3);
  uint64_t v44 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v45 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v38 - v8;
  uint64_t v10 = type metadata accessor for StatementResultDigest(0);
  uint64_t v11 = sub_25346CB34(v10);
  uint64_t v13 = v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v38 = (char *)&v38 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v41 = (uint64_t)&v38 - v22;
  unint64_t v23 = *(void *)(a1 + 16);
  uint64_t v46 = MEMORY[0x263F8EE78];
  sub_2539E7E44();
  uint64_t v24 = v46;
  uint64_t v39 = v9;
  uint64_t v40 = a1;
  if (v23)
  {
    uint64_t v25 = *(void *)(a1 + 16);
    uint64_t v42 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v43 = v25;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v27 = 0;
    while (v43 != v27)
    {
      sub_25394D6DC(v42 + *(void *)(v13 + 72) * v27, (uint64_t)v19, (void (*)(void))type metadata accessor for StatementResultDigest);
      sub_25394D6DC((uint64_t)v19, (uint64_t)v16, (void (*)(void))type metadata accessor for StatementResultDigest);
      ResponseGenerationProtoStatementResultDigest.init(rg:)();
      if (v1)
      {
        swift_release();
        uint64_t v24 = v40;
        swift_bridgeObjectRelease();
        sub_25394D73C((uint64_t)v19, (void (*)(void))type metadata accessor for StatementResultDigest);
        swift_bridgeObjectRelease();
        return v24;
      }
      sub_25394D73C((uint64_t)v19, (void (*)(void))type metadata accessor for StatementResultDigest);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25394D814();
        uint64_t v24 = v46;
      }
      unint64_t v28 = *(void *)(v24 + 16);
      if (v28 >= *(void *)(v24 + 24) >> 1)
      {
        sub_2539E7E44();
        uint64_t v24 = v46;
      }
      ++v27;
      *(void *)(v24 + 16) = v28 + 1;
      sub_25394D7F8();
      uint64_t result = sub_25394D794(v29, v30);
      if (v23 == v27) {
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
  uint64_t result = swift_bridgeObjectRetain();
LABEL_12:
  uint64_t v31 = v40;
  unint64_t v32 = *(void *)(v40 + 16);
  if (v23 != v32)
  {
    uint64_t v34 = (uint64_t)v38;
    uint64_t v33 = (uint64_t)v39;
    while (v23 < v32)
    {
      uint64_t v35 = v41;
      sub_25394D6DC(v31+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v23, v41, (void (*)(void))type metadata accessor for StatementResultDigest);
      sub_25394D6DC(v35, v34, (void (*)(void))type metadata accessor for StatementResultDigest);
      ResponseGenerationProtoStatementResultDigest.init(rg:)();
      sub_25394D73C(v35, (void (*)(void))type metadata accessor for StatementResultDigest);
      if (v1)
      {
        swift_bridgeObjectRelease();
        uint64_t v24 = v46;
        swift_bridgeObjectRelease();
        swift_release();
        return v24;
      }
      uint64_t v24 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25394D814();
        uint64_t v24 = v46;
      }
      unint64_t v36 = *(void *)(v24 + 16);
      if (v36 >= *(void *)(v24 + 24) >> 1)
      {
        sub_2539E7E44();
        uint64_t v24 = v46;
      }
      ++v23;
      *(void *)(v24 + 16) = v36 + 1;
      sub_25394D7F8();
      uint64_t result = sub_25394D794(v33, v37);
      unint64_t v32 = *(void *)(v31 + 16);
      if (v23 == v32) {
        goto LABEL_13;
      }
    }
LABEL_27:
    __break(1u);
    return result;
  }
LABEL_13:
  swift_bridgeObjectRelease_n();
  return v24;
}

unint64_t sub_25394D68C()
{
  unint64_t result = qword_269CE03C8;
  if (!qword_269CE03C8)
  {
    type metadata accessor for ResponseGenerationProtoResponseGenerationInput(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE03C8);
  }
  return result;
}

uint64_t sub_25394D6DC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25346CAF4();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_25394D73C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_25346CAF4();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_25394D794(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_25394D814()
{
  sub_2539E7E44();
}

uint64_t sub_25394D838()
{
  return v0;
}

void sub_25394D850()
{
  sub_2534847F8();
  uint64_t v56 = v3;
  uint64_t v57 = v2;
  uint64_t v4 = v1;
  uint64_t v61 = v0;
  uint64_t v6 = v5;
  uint64_t v69 = v8;
  uint64_t v70 = v7;
  uint64_t v71 = v9;
  sub_2534727C4();
  uint64_t v55 = v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v68 = (char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v13);
  sub_2534B35DC();
  uint64_t v66 = v14;
  uint64_t v16 = v15;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_253465998();
  uint64_t v67 = v18;
  sub_253963118();
  MEMORY[0x270FA5388](v19);
  long long v54 = (char *)v53 - v20;
  sub_253483660();
  sub_253B09E00();
  sub_253465998();
  uint64_t v58 = v22;
  uint64_t v59 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v64 = (char *)v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)v53 - v26;
  MEMORY[0x270FA5388](v25);
  v53[1] = (char *)v53 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v29);
  sub_2534727C4();
  MEMORY[0x270FA5388](v30);
  sub_25346CB04();
  uint64_t v63 = v31;
  uint64_t v62 = v6;
  uint64_t v65 = v16;
  uint64_t v72 = swift_getAssociatedTypeWitness();
  sub_253465998();
  uint64_t v60 = v32;
  sub_253963118();
  MEMORY[0x270FA5388](v33);
  uint64_t v34 = sub_253B09970();
  sub_253B0A130();
  uint64_t v69 = sub_253B0A140();
  sub_253B0A0E0();
  sub_253962874();
  v35();
  sub_253B09960();
  if (v34 < 0)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    return;
  }
  if (v34)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_253B09E70();
      sub_2534D8B48((uint64_t)v27, 1, AssociatedTypeWitness);
      if (v36) {
        goto LABEL_20;
      }
      v70(v27, v68);
      if (v4)
      {
        sub_2534659CC();
        v48();
        swift_release();
        sub_2534D8E14();
        v49();
        sub_2534D9A08();
        v50();
        goto LABEL_18;
      }
      uint64_t v4 = 0;
      sub_2534D9A08();
      v37();
      sub_253B0A120();
      if (!--v34)
      {
        uint64_t v38 = v67;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v38 = v67;
LABEL_9:
  sub_253B09E70();
  uint64_t v39 = sub_2536D3ACC();
  sub_2534D8B48(v39, v40, AssociatedTypeWitness);
  if (v36)
  {
LABEL_15:
    sub_2534659CC();
    v46();
    sub_2534659CC();
    v47();
  }
  else
  {
    uint64_t v41 = *(char **)(v38 + 32);
    uint64_t v67 = v38 + 32;
    uint64_t v68 = v41;
    uint64_t v42 = v54;
    uint64_t v43 = (uint64_t)v64;
    while (1)
    {
      sub_25347FA84();
      v44();
      v70(v42, v66);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      sub_2534D91AC();
      v45();
      sub_253B0A120();
      sub_253B09E70();
      sub_2534D8B48(v43, 1, AssociatedTypeWitness);
      if (v36) {
        goto LABEL_15;
      }
    }
    sub_2534D91AC();
    v51();
    sub_2534659CC();
    v52();
    swift_release();
    (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v56, v66, v57);
  }
LABEL_18:
  sub_2534847C8();
}

void ResponseGenerationInput.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_253B05630();
  sub_253465998();
  MEMORY[0x270FA5388](v5);
  sub_25346CC54();
  uint64_t v6 = v2[1];
  uint64_t v18 = *v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_253B055D0();
  char v7 = 3;
  switch(*((unsigned char *)v2 + 32))
  {
    case 1:
      char v7 = 1;
      goto LABEL_6;
    case 2:
      char v7 = 0;
      goto LABEL_6;
    case 3:
      char v7 = 2;
      goto LABEL_6;
    case 4:
LABEL_6:
      uint64_t v9 = v2[3];
      uint64_t v17 = v2[2];
      swift_bridgeObjectRetain();
      uint64_t v10 = swift_bridgeObjectRetain();
      uint64_t v11 = sub_25394EA4C(v10);
      if (v0)
      {
        swift_bridgeObjectRelease();
LABEL_8:
        swift_bridgeObjectRelease();
        sub_253961FAC();
        sub_2534D9A08();
        v12();
      }
      else
      {
        uint64_t v16 = v11;
        sub_253961FAC();
        *uint64_t v4 = v18;
        v4[1] = v6;
        uint64_t v13 = (int *)type metadata accessor for ResponseGenerationInput(0);
        sub_2539630BC();
        v14();
        *((unsigned char *)v4 + v13[6]) = v7;
        uint64_t v15 = (void *)((char *)v4 + v13[7]);
        *uint64_t v15 = v17;
        v15[1] = v9;
        *(void *)((char *)v4 + v13[8]) = v16;
      }
      sub_2534847C8();
      return;
    default:
      sub_25394EA00();
      sub_2534D969C();
      *uint64_t v8 = 0;
      swift_willThrow();
      goto LABEL_8;
  }
}

uint64_t ResponseGenerationProtoResponseGenerationInput.init(rg:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = a1[1];
  uint64_t v18 = *a1;
  uint64_t v6 = type metadata accessor for ResponseGenerationInput(0);
  char v7 = (void *)((char *)a1 + *(int *)(v6 + 28));
  uint64_t v8 = v7[1];
  uint64_t v17 = *v7;
  char v9 = *((unsigned char *)a1 + *(int *)(v6 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_253B055E0();
  uint64_t v11 = v10;
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_25394D254(v12);
  if (v2)
  {
    sub_253961FAC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = v13;
    type metadata accessor for ResponseGenerationProtoResponseGenerationInput(0);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(void *)a2 = v18;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v17;
    *(void *)(a2 + 24) = v8;
    *(unsigned char *)(a2 + 32) = 0x4030102u >> (8 * v9);
    *(void *)(a2 + 40) = v16;
    *(void *)(a2 + 48) = v11;
    *(void *)(a2 + 56) = v15;
    return sub_253961FAC();
  }
}

uint64_t sub_25394E154()
{
  uint64_t v2 = type metadata accessor for ResponseGenerationInput(0);
  uint64_t v3 = v2 - 8;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = type metadata accessor for ResponseGenerationProtoResponseGenerationInput(0);
  MEMORY[0x270FA5388](v22);
  char v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253961FFC(v0, (uint64_t)v5, (void (*)(void))type metadata accessor for ResponseGenerationInput);
  uint64_t v8 = *v5;
  uint64_t v9 = v5[1];
  uint64_t v10 = (void *)((char *)v5 + *(int *)(v3 + 36));
  uint64_t v11 = v10[1];
  uint64_t v20 = *v10;
  uint64_t v21 = v8;
  char v12 = *((unsigned char *)v5 + *(int *)(v3 + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_253B055E0();
  uint64_t v15 = v14;
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_25394D254(v16);
  if (v1)
  {
    sub_253961FAC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = v17;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(void *)char v7 = v21;
    *((void *)v7 + 1) = v9;
    *((void *)v7 + 2) = v20;
    *((void *)v7 + 3) = v11;
    v7[32] = 0x4030102u >> (8 * v12);
    *((void *)v7 + 5) = v13;
    *((void *)v7 + 6) = v15;
    *((void *)v7 + 7) = v18;
    sub_253961FAC();
    sub_253961ECC((unint64_t *)&qword_269CE03C8, (void (*)(uint64_t))type metadata accessor for ResponseGenerationProtoResponseGenerationInput);
    uint64_t v15 = sub_253B073D0();
    sub_253961FAC();
  }
  return v15;
}

uint64_t sub_25394E3C0()
{
  uint64_t v2 = type metadata accessor for StatementResultDigest(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  MEMORY[0x270FA5388](v5);
  sub_253961FFC(v0, (uint64_t)v4, (void (*)(void))type metadata accessor for StatementResultDigest);
  ResponseGenerationProtoStatementResultDigest.init(rg:)();
  if (!v1)
  {
    sub_253961ECC(&qword_269CE0350, (void (*)(uint64_t))type metadata accessor for ResponseGenerationProtoStatementResultDigest);
    uint64_t v5 = sub_253B073D0();
    sub_253961FAC();
  }
  return v5;
}

void TranscriptResponseGenerationBidirectionalConvertibleProtocol.protoBytes()()
{
  sub_2534847F8();
  uint64_t v4 = v3;
  sub_253465998();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_2534B34A4();
  swift_getAssociatedTypeWitness();
  sub_253465998();
  sub_253963118();
  MEMORY[0x270FA5388](v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, v0, v4);
  sub_2534D99FC();
  swift_getAssociatedConformanceWitness();
  sub_25396308C();
  v9();
  if (!v1)
  {
    swift_getAssociatedConformanceWitness();
    sub_253B073D0();
    uint64_t v10 = sub_253962FB0();
    v11(v10);
  }
  sub_2534D99FC();
  sub_2534847C8();
}

uint64_t Array<A>.init<A>(rg:)(uint64_t a1, uint64_t a2)
{
  sub_253462A5C(&qword_26B24A590);
  sub_25394D850();
  if (v2)
  {
    sub_25347B88C();
    sub_2534659CC();
  }
  else
  {
    sub_253B09B80();
    swift_getWitnessTable();
    a2 = sub_253B09B90();
    sub_25347B88C();
    sub_25396308C();
  }
  v4();
  return a2;
}

uint64_t sub_25394E838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v14 = (char *)&v17 - v13;
  (*(void (**)(char *, uint64_t))(v15 + 16))((char *)&v17 - v13, a1);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a5 + 16))(v14, a3, a5);
  if (v7) {
    *a7 = v7;
  }
  return result;
}

IntelligenceFlowPlannerSupport::ResponseMode __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ResponseMode.init(transcript:)(IntelligenceFlowPlannerSupport::ResponseMode transcript)
{
  char v2 = 3;
  switch(*(unsigned char *)transcript)
  {
    case 1:
      char v2 = 1;
      goto LABEL_6;
    case 2:
      char v2 = 0;
      goto LABEL_6;
    case 3:
      char v2 = 2;
      goto LABEL_6;
    case 4:
LABEL_6:
      *uint64_t v1 = v2;
      break;
    default:
      sub_25394EA00();
      sub_2534D969C();
      *uint64_t v3 = 0;
      transcript = swift_willThrow();
      break;
  }
  return transcript;
}

unint64_t sub_25394EA00()
{
  unint64_t result = qword_269CE4FF8;
  if (!qword_269CE4FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE4FF8);
  }
  return result;
}

uint64_t sub_25394EA4C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for StatementResultDigest(0);
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v38 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v31 - v6;
  uint64_t v8 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8 - 8);
  char v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v31 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v31 = (char *)&v31 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v34 = (uint64_t)&v31 - v18;
  unint64_t v19 = *(void *)(a1 + 16);
  uint64_t v39 = MEMORY[0x263F8EE78];
  sub_2539E7DE0();
  uint64_t v20 = v39;
  uint64_t v32 = v7;
  uint64_t v33 = a1;
  if (v19)
  {
    uint64_t v21 = *(void *)(a1 + 16);
    uint64_t v35 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v36 = v21;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v23 = 0;
    while (v36 != v23)
    {
      sub_253961FFC(v35 + *(void *)(v9 + 72) * v23, (uint64_t)v15, (void (*)(void))type metadata accessor for ResponseGenerationProtoStatementResultDigest);
      sub_253961FFC((uint64_t)v15, (uint64_t)v12, (void (*)(void))type metadata accessor for ResponseGenerationProtoStatementResultDigest);
      StatementResultDigest.init(transcript:)();
      if (v1)
      {
        swift_release();
        uint64_t v20 = v33;
        swift_bridgeObjectRelease();
        sub_253961FAC();
        swift_bridgeObjectRelease();
        return v20;
      }
      sub_253961FAC();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2539E7DE0();
        uint64_t v20 = v39;
      }
      unint64_t v24 = *(void *)(v20 + 16);
      if (v24 >= *(void *)(v20 + 24) >> 1)
      {
        sub_2539E7DE0();
        uint64_t v20 = v39;
      }
      ++v23;
      *(void *)(v20 + 16) = v24 + 1;
      uint64_t result = sub_253962058(v38, v20+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v24, (void (*)(void))type metadata accessor for StatementResultDigest);
      if (v19 == v23) {
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
  uint64_t result = swift_bridgeObjectRetain();
LABEL_12:
  uint64_t v25 = v33;
  unint64_t v26 = *(void *)(v33 + 16);
  if (v19 != v26)
  {
    uint64_t v28 = (uint64_t)v31;
    uint64_t v27 = (uint64_t)v32;
    while (v19 < v26)
    {
      uint64_t v29 = v34;
      sub_253961FFC(v25+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v19, v34, (void (*)(void))type metadata accessor for ResponseGenerationProtoStatementResultDigest);
      sub_253961FFC(v29, v28, (void (*)(void))type metadata accessor for ResponseGenerationProtoStatementResultDigest);
      StatementResultDigest.init(transcript:)();
      sub_253961FAC();
      if (v1)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = v39;
        swift_bridgeObjectRelease();
        swift_release();
        return v20;
      }
      uint64_t v20 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2539E7DE0();
        uint64_t v20 = v39;
      }
      unint64_t v30 = *(void *)(v20 + 16);
      if (v30 >= *(void *)(v20 + 24) >> 1)
      {
        sub_2539E7DE0();
        uint64_t v20 = v39;
      }
      ++v19;
      *(void *)(v20 + 16) = v30 + 1;
      uint64_t result = sub_253962058(v27, v20+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v30, (void (*)(void))type metadata accessor for StatementResultDigest);
      unint64_t v26 = *(void *)(v25 + 16);
      if (v19 == v26) {
        goto LABEL_13;
      }
    }
LABEL_27:
    __break(1u);
    return result;
  }
LABEL_13:
  swift_bridgeObjectRelease_n();
  return v20;
}

void sub_25394EF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  sub_2539625F8();
  v39[8] = sub_253B06F40();
  sub_253465998();
  MEMORY[0x270FA5388](v16);
  v39[9] = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v18);
  v39[7] = (char *)v39 - v19;
  uint64_t v20 = sub_253483660();
  uint64_t v21 = type metadata accessor for TranscriptProtoInterpretedStatementResult(v20);
  uint64_t v22 = sub_25346CB34(v21);
  MEMORY[0x270FA5388](v22);
  v39[6] = (char *)v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v24);
  sub_2534F8600();
  MEMORY[0x270FA5388](v25);
  v39[0] = (char *)v39 - v26;
  sub_2534B324C();
  MEMORY[0x270FA5388](v27);
  sub_2539624A8();
  sub_2539622E0(MEMORY[0x263F8EE78]);
  sub_2539E7F70();
  sub_253962DE4();
  if (v14)
  {
    sub_2539621AC();
    sub_253962D88();
    while (1)
    {
      sub_253962D7C();
      if (v28) {
        break;
      }
      uint64_t v29 = sub_2539625C8();
      sub_253961FFC(v29, v12, (void (*)(void))type metadata accessor for TranscriptProtoInterpretedStatementResult);
      sub_253962478();
      uint64_t v30 = sub_25396239C();
      InterpretedStatementResult.init(transcript:)(v30);
      if (v11)
      {
        swift_release();
        sub_253962988();
        sub_253961FAC();
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      sub_253961FAC();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253962A40();
        uint64_t v10 = a10;
      }
      sub_2539624EC();
      if (v32)
      {
        sub_253962254(v31);
        sub_2539E7F70();
        uint64_t v10 = a10;
      }
      ++v15;
      *(void *)(v10 + 16) = type metadata accessor for TranscriptProtoInterpretedStatementResult;
      sub_2534D8E14();
      v33();
      sub_2539625B8();
      if (v28) {
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
LABEL_13:
  sub_253962350();
  if (!v28)
  {
    sub_253962590();
    while (v14 < v34)
    {
      unint64_t v35 = sub_2539622C4();
      sub_253961FFC(v35, v13, (void (*)(void))type metadata accessor for TranscriptProtoInterpretedStatementResult);
      sub_253962608();
      uint64_t v36 = sub_2539623E0();
      InterpretedStatementResult.init(transcript:)(v36);
      if (v11)
      {
        sub_253961FAC();
        swift_release();
        sub_253962460();
        goto LABEL_27;
      }
      sub_253961FAC();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_253962A40();
      }
      sub_25396244C();
      if (v32)
      {
        sub_253962194(v37);
        sub_2539E7F70();
        uint64_t v10 = a10;
      }
      ++v14;
      *(void *)(v10 + 16) = type metadata accessor for TranscriptProtoInterpretedStatementResult;
      sub_2534D8E14();
      v38();
      a10 = v10;
      sub_253962350();
      if (v28) {
        goto LABEL_15;
      }
    }
LABEL_29:
    __break(1u);
    return;
  }
LABEL_15:
  sub_253962460();
LABEL_27:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_25394F2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  sub_2534D9690();
  uint64_t v87 = sub_253B09120();
  sub_253465998();
  uint64_t v15 = v14;
  MEMORY[0x270FA5388](v16);
  uint64_t v81 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v18);
  uint64_t v86 = (void (**)(void))((char *)&v68 - v19);
  sub_2534B324C();
  MEMORY[0x270FA5388](v20);
  sub_2534B3318();
  uint64_t v72 = v21;
  sub_2534B324C();
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  sub_2539627FC(v23, v24, v25, v26, v27, v28, v29, v30, v68);
  uint64_t v31 = sub_253B08E50();
  sub_253465998();
  uint64_t v33 = v32;
  MEMORY[0x270FA5388](v34);
  uint64_t v79 = (char *)&v68 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v36);
  sub_2534B3318();
  uint64_t v78 = v37;
  sub_2534B324C();
  MEMORY[0x270FA5388](v38);
  uint64_t v80 = (char *)&v68 - v39;
  sub_2534B324C();
  MEMORY[0x270FA5388](v40);
  uint64_t v71 = (char *)&v68 - v41;
  sub_2534B324C();
  MEMORY[0x270FA5388](v42);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v43);
  sub_2534D97C0();
  unint64_t v44 = *(void *)(v10 + 16);
  sub_253962284(MEMORY[0x263F8EE78]);
  sub_2539E7D7C();
  uint64_t v73 = v10;
  uint64_t v83 = v33;
  uint64_t v84 = v15;
  unint64_t v82 = v44;
  uint64_t v69 = v13;
  uint64_t v70 = v12;
  if (v44)
  {
    sub_2539626B0();
    uint64_t v45 = *(void *)(v10 + 16);
    uint64_t v76 = v10 + v46;
    uint64_t v77 = v45;
    uint64_t v74 = (uint64_t *)(v33 + 8);
    uint64_t v75 = v33 + 16;
    uint64_t v85 = (void (**)(void))(v15 + 32);
    swift_bridgeObjectRetain();
    uint64_t v47 = 0;
    uint64_t v48 = v74;
    while (v77 != v47)
    {
      uint64_t v49 = *(void (**)(void))(v33 + 16);
      ((void (*)(char *, uint64_t, uint64_t))v49)(v80, v76 + *(void *)(v33 + 72) * v47, v31);
      uint64_t v50 = v31;
      uint64_t v51 = v78;
      sub_253963024();
      v49();
      ((void (*)(char *, uint64_t, uint64_t))v49)(v79, v51, v50);
      sub_253B09110();
      if (v11)
      {
        uint64_t v64 = (void (*)(uint64_t))*v74;
        uint64_t v65 = sub_2539627B8();
        v64(v65);
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v66 = sub_2535791D8();
        v64(v66);
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      uint64_t v52 = *v48;
      sub_2539627B8();
      sub_2534D9A08();
      ((void (*)(void))v52)();
      uint64_t v53 = *v85;
      sub_25347FA84();
      v53();
      sub_2535791D8();
      sub_2534D9A08();
      ((void (*)(void))v52)();
      uint64_t v31 = v50;
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253962D10();
        uint64_t v52 = a10;
      }
      unint64_t v54 = *(void *)(v52 + 16);
      if (v54 >= *(void *)(v52 + 24) >> 1)
      {
        sub_2539629F8();
        uint64_t v52 = a10;
      }
      ++v47;
      *(void *)(v52 + 16) = v54 + 1;
      sub_253962314();
      sub_25347FA84();
      v53();
      a10 = v52;
      uint64_t v33 = v83;
      if (v82 == v47) {
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
  sub_253962DB4();
LABEL_12:
  unint64_t v55 = *(void *)(v73 + 16);
  unint64_t v56 = v82;
  if (v82 != v55)
  {
    uint64_t v81 = (char *)(v33 + 16);
    uint64_t v85 = (void (**)(void))(v33 + 8);
    uint64_t v86 = (void (**)(void))(v84 + 32);
    while (v56 < v55)
    {
      sub_253963174();
      unint64_t v57 = v56;
      uint64_t v59 = *(void (**)(void))(v58 + 16);
      sub_253962F0C();
      v59();
      sub_253962F0C();
      v59();
      sub_253962F0C();
      v59();
      uint64_t v60 = v72;
      sub_253B09110();
      if (v11)
      {
        uint64_t v67 = *v85;
        sub_2534D9220();
        v67();
        sub_2534D9220();
        v67();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_25;
      }
      uint64_t v61 = *v85;
      sub_25351C3E8();
      v61();
      uint64_t v62 = *v86;
      sub_25347FA84();
      v62();
      sub_25351C3E8();
      v61();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253962D10();
        uint64_t v60 = a10;
      }
      unint64_t v63 = *(void *)(v60 + 16);
      if (v63 >= *(void *)(v60 + 24) >> 1)
      {
        sub_2539629F8();
        uint64_t v60 = a10;
      }
      ++v56;
      *(void *)(v60 + 16) = v63 + 1;
      sub_253962314();
      sub_25347FA84();
      v62();
      a10 = v60;
      unint64_t v55 = *(void *)(v73 + 16);
      if (v57 + 1 == v55) {
        goto LABEL_13;
      }
    }
LABEL_27:
    __break(1u);
    return;
  }
LABEL_13:
  sub_253962460();
LABEL_25:
  sub_2539624FC();
  sub_2534847C8();
}

void sub_25394F80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  sub_2534847F8();
  uint64_t v14 = sub_2539626F0();
  uint64_t v15 = type metadata accessor for AST.FlatValue(v14);
  uint64_t v16 = sub_25346CB34(v15);
  uint64_t v53 = v17;
  MEMORY[0x270FA5388](v16);
  unint64_t v54 = (char *)v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v19);
  uint64_t v20 = sub_253962344();
  uint64_t v21 = type metadata accessor for TranscriptProtoASTFlatValue(v20);
  uint64_t v22 = sub_25346CB34(v21);
  MEMORY[0x270FA5388](v22);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v23);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v24);
  v51[0] = (uint64_t)v51 - v25;
  sub_2534B324C();
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  sub_2539624BC(v27, v28, v29, v30, v31, v32, v33, v34, v51[0]);
  sub_253962284(MEMORY[0x263F8EE78]);
  sub_2539E7FD4();
  sub_253962F78();
  if (v13)
  {
    sub_253962370();
    uint64_t v35 = 0;
    while (1)
    {
      sub_253962F30();
      if (v36) {
        break;
      }
      uint64_t v37 = sub_253962554();
      sub_253961FFC(v37, v12, (void (*)(void))type metadata accessor for TranscriptProtoASTFlatValue);
      sub_253962780();
      uint64_t v38 = sub_2539626D0();
      AST.FlatValue.init(transcript:)(v38);
      if (v11)
      {
        swift_release();
        sub_2539630A4();
        sub_253961FAC();
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      sub_253961FAC();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253962CC8();
        uint64_t v10 = a10;
      }
      sub_25396250C();
      if (v40)
      {
        sub_25396226C(v39);
        sub_2539E7FD4();
        uint64_t v10 = a10;
      }
      ++v35;
      *((void *)v10 + 2) = type metadata accessor for TranscriptProtoASTFlatValue;
      sub_25394D7F8();
      sub_253962058(v41, v42, (void (*)(void))type metadata accessor for AST.FlatValue);
      sub_2539630E0();
      if (v36) {
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
LABEL_13:
  sub_253962548();
  if (!v36)
  {
    uint64_t v44 = v51[1];
    while (v13 < v43)
    {
      unint64_t v45 = sub_2539622A8();
      uint64_t v46 = type metadata accessor for TranscriptProtoASTFlatValue;
      uint64_t v47 = v52;
      sub_253961FFC(v45, v52, (void (*)(void))type metadata accessor for TranscriptProtoASTFlatValue);
      sub_25396279C();
      uint64_t v48 = sub_2539627C4();
      AST.FlatValue.init(transcript:)(v48);
      sub_253961FAC();
      if (v11)
      {
        swift_bridgeObjectRelease();
        sub_253962DCC();
        swift_release();
        goto LABEL_27;
      }
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253962CC8();
        uint64_t v46 = a10;
      }
      sub_253962498();
      if (v40)
      {
        sub_253962194(v49);
        sub_2539E7FD4();
        uint64_t v46 = a10;
      }
      ++v13;
      *((void *)v46 + 2) = v47;
      sub_25394D7F8();
      sub_253962058(v44, v50, (void (*)(void))type metadata accessor for AST.FlatValue);
      sub_253962548();
      if (v36) {
        goto LABEL_15;
      }
    }
LABEL_29:
    __break(1u);
    return;
  }
LABEL_15:
  sub_253962880();
LABEL_27:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_25394FB40()
{
  sub_253962DF0();
  uint64_t v98 = sub_253B07830();
  sub_253465998();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  uint64_t v90 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v8);
  uint64_t v89 = (char *)&v75 - v9;
  sub_2534B324C();
  MEMORY[0x270FA5388](v10);
  unint64_t v82 = (char *)&v75 - v11;
  sub_2534B324C();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = sub_2534F8208((uint64_t)&v75 - v13);
  uint64_t v15 = type metadata accessor for ContextProtoRetrievedTool.Definition(v14);
  uint64_t v16 = sub_25346CB4C(v15);
  MEMORY[0x270FA5388](v16);
  uint64_t v93 = (uint64_t)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v18);
  sub_2534F8208((uint64_t)&v75 - v19);
  uint64_t v20 = sub_253B077E0();
  uint64_t v21 = sub_25346CB4C(v20);
  MEMORY[0x270FA5388](v21);
  uint64_t v102 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v23);
  uint64_t v84 = (char *)&v75 - v24;
  sub_253483660();
  uint64_t v97 = sub_253B07850();
  sub_253465998();
  uint64_t v26 = v25;
  MEMORY[0x270FA5388](v27);
  uint64_t v101 = (char *)&v75 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v29);
  uint64_t v83 = (char *)&v75 - v30;
  uint64_t v31 = sub_253483660();
  uint64_t v100 = type metadata accessor for ContextProtoRetrievedTool(v31);
  sub_253465998();
  uint64_t v33 = v32;
  MEMORY[0x270FA5388](v34);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v35);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v36);
  uint64_t v95 = (uint64_t)&v75 - v37;
  sub_2534B324C();
  MEMORY[0x270FA5388](v38);
  uint64_t v88 = (uint64_t)&v75 - v39;
  unint64_t v40 = *(void *)(v1 + 16);
  uint64_t v103 = MEMORY[0x263F8EE78];
  sub_2539E8100();
  uint64_t v96 = v26;
  uint64_t v99 = v33;
  unint64_t v94 = v40;
  uint64_t v77 = v1;
  uint64_t v76 = v5;
  if (v40)
  {
    uint64_t v92 = *(void *)(v1 + 16);
    sub_2539625E8();
    uint64_t v91 = v41;
    int v80 = *v42;
    uint64_t v87 = v5 + 104;
    int v79 = *v43;
    HIDWORD(v78) = *v44;
    int v86 = *v45;
    uint64_t v46 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v85 = v26 + 32;
    swift_bridgeObjectRetain();
    uint64_t v47 = 0;
    while (1)
    {
      if (v92 == v47)
      {
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x253950454);
      }
      sub_253961FFC(v91 + *(void *)(v99 + 72) * v47, v3, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool);
      sub_253961FFC(v3, v2, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool);
      sub_25395D81C(&qword_269CDCB80, type metadata accessor for ContextProtoRetrievedTool.Definition, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.Definition, &qword_269CE5010, v93);
      if (v0) {
        break;
      }
      RetrievedTool.Definition.init(transcript:)();
      uint64_t v0 = 0;
      ++v47;
      uint64_t v48 = swift_bridgeObjectRetain();
      sub_253958B2C(v48);
      sub_25396303C();
      unint64_t v49 = v90;
      uint64_t v50 = v98;
      v51(v90);
      (*v46)(v89, v49, v50);
      sub_253B077F0();
      sub_253961FAC();
      sub_253961FAC();
      uint64_t v52 = v103;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253962E68();
        uint64_t v52 = v103;
      }
      unint64_t v53 = *(void *)(v52 + 16);
      if (v53 >= *(void *)(v52 + 24) >> 1)
      {
        sub_2539E8100();
        uint64_t v52 = v103;
      }
      *(void *)(v52 + 16) = v53 + 1;
      uint64_t v26 = v96;
      sub_253962D94();
      sub_2534D8E14();
      v54();
      uint64_t v103 = v52;
      if (v94 == v47) {
        goto LABEL_13;
      }
    }
    sub_253961FAC();
    swift_bridgeObjectRelease();
    swift_release();
    sub_253961FAC();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_13:
    uint64_t v55 = v77;
    unint64_t v56 = *(void *)(v77 + 16);
    unint64_t v57 = v94;
    if (v94 == v56)
    {
LABEL_14:
      swift_bridgeObjectRelease_n();
    }
    else
    {
      LODWORD(v93) = *MEMORY[0x263F4E480];
      uint64_t v58 = (void (**)(char *, uint64_t, uint64_t))(v76 + 104);
      LODWORD(v92) = *MEMORY[0x263F4E488];
      uint64_t v59 = (void (**)(uint64_t, char *, uint64_t))(v76 + 32);
      uint64_t v102 = (char *)(v26 + 32);
      LODWORD(v91) = *MEMORY[0x263F4E478];
      LODWORD(v101) = *MEMORY[0x263F4E470];
      while (1)
      {
        if (v57 >= v56) {
          goto LABEL_31;
        }
        sub_253963174();
        uint64_t v62 = v88;
        sub_253961FFC(v55 + v60 + *(void *)(v61 + 72) * v57, v88, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool);
        sub_253961FFC(v62, v95, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool);
        sub_253962838();
        sub_25395D81C(&qword_269CDCB80, v63, v64, &qword_269CE5010, v65);
        if (v0) {
          break;
        }
        RetrievedTool.Definition.init(transcript:)();
        uint64_t v0 = 0;
        unint64_t v66 = v57 + 1;
        uint64_t v67 = v95;
        uint64_t v68 = swift_bridgeObjectRetain();
        sub_253958B2C(v68);
        uint64_t v69 = v101;
        switch(*(unsigned char *)(v67 + 16))
        {
          case 1:
            uint64_t v69 = v91;
            break;
          case 2:
            uint64_t v69 = v92;
            break;
          case 3:
            uint64_t v69 = v93;
            break;
          default:
            break;
        }
        uint64_t v70 = v82;
        uint64_t v71 = v98;
        (*v58)(v82, v69, v98);
        (*v59)(v81, v70, v71);
        sub_253B077F0();
        sub_253961FAC();
        sub_253961FAC();
        uint64_t v72 = v103;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_253962E68();
          uint64_t v72 = v103;
        }
        unint64_t v73 = *(void *)(v72 + 16);
        if (v73 >= *(void *)(v72 + 24) >> 1)
        {
          sub_2539E8100();
          uint64_t v72 = v103;
        }
        *(void *)(v72 + 16) = v73 + 1;
        sub_253962D94();
        sub_2534D8E14();
        v74();
        uint64_t v103 = v72;
        unint64_t v56 = *(void *)(v55 + 16);
        unint64_t v57 = v66;
        if (v66 == v56) {
          goto LABEL_14;
        }
      }
      sub_253961FAC();
      sub_253961FAC();
      swift_release();
      swift_bridgeObjectRelease_n();
    }
  }
  sub_2536D3D5C();
}

void sub_253950474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  sub_2539625F8();
  v36[8] = sub_253B07AB0();
  sub_253465998();
  MEMORY[0x270FA5388](v16);
  v36[9] = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v18);
  v36[7] = (char *)v36 - v19;
  uint64_t v20 = type metadata accessor for ContextProtoRetrievedContext(0);
  uint64_t v21 = sub_25346CB34(v20);
  MEMORY[0x270FA5388](v21);
  v36[6] = (char *)v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v23);
  sub_2534F8600();
  MEMORY[0x270FA5388](v24);
  v36[0] = (char *)v36 - v25;
  sub_2534B324C();
  MEMORY[0x270FA5388](v26);
  sub_2539624A8();
  sub_2539622E0(MEMORY[0x263F8EE78]);
  sub_2539E81C8();
  sub_253962DE4();
  if (v14)
  {
    sub_2539621AC();
    sub_253962D88();
    while (1)
    {
      sub_253962D7C();
      if (v27) {
        break;
      }
      uint64_t v28 = sub_2539625C8();
      sub_253961FFC(v28, v12, (void (*)(void))type metadata accessor for ContextProtoRetrievedContext);
      sub_253962478();
      sub_25396239C();
      RetrievedContext.init(transcript:)();
      if (v11)
      {
        swift_release();
        sub_253962988();
        sub_253961FAC();
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      sub_253961FAC();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253962CEC();
        uint64_t v10 = a10;
      }
      sub_2539624EC();
      if (v30)
      {
        sub_253962254(v29);
        sub_2539E81C8();
        uint64_t v10 = a10;
      }
      ++v15;
      *(void *)(v10 + 16) = type metadata accessor for ContextProtoRetrievedContext;
      sub_2534D8E14();
      v31();
      sub_2539625B8();
      if (v27) {
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
LABEL_13:
  sub_253962350();
  if (!v27)
  {
    sub_253962590();
    while (v14 < v32)
    {
      unint64_t v33 = sub_2539622C4();
      sub_253961FFC(v33, v13, (void (*)(void))type metadata accessor for ContextProtoRetrievedContext);
      sub_253962608();
      sub_2539623E0();
      RetrievedContext.init(transcript:)();
      if (v11)
      {
        sub_253961FAC();
        swift_release();
        sub_253962460();
        goto LABEL_27;
      }
      sub_253961FAC();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_253962CEC();
      }
      sub_25396244C();
      if (v30)
      {
        sub_253962194(v34);
        sub_2539E81C8();
        uint64_t v10 = a10;
      }
      ++v14;
      *(void *)(v10 + 16) = type metadata accessor for ContextProtoRetrievedContext;
      sub_2534D8E14();
      v35();
      a10 = v10;
      sub_253962350();
      if (v27) {
        goto LABEL_15;
      }
    }
LABEL_29:
    __break(1u);
    return;
  }
LABEL_15:
  sub_253962460();
LABEL_27:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_2539507F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  sub_2534847F8();
  uint64_t v12 = v11;
  uint64_t v13 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  uint64_t v103 = (uint64_t)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v16);
  uint64_t v91 = (uint64_t)&v88 - v17;
  uint64_t v18 = sub_253462A5C(&qword_269CDB3F8);
  uint64_t v19 = sub_25346CB4C(v18);
  MEMORY[0x270FA5388](v19);
  sub_2534659D8();
  uint64_t v102 = v20;
  sub_2534B324C();
  MEMORY[0x270FA5388](v21);
  sub_2534B35DC();
  uint64_t v95 = v22;
  sub_253483660();
  uint64_t v23 = sub_253B07B60();
  sub_253465998();
  uint64_t v25 = v24;
  MEMORY[0x270FA5388](v26);
  uint64_t v98 = (char *)&v88 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v28);
  sub_2534B3318();
  uint64_t v97 = v29;
  sub_2534B324C();
  MEMORY[0x270FA5388](v30);
  uint64_t v107 = (char *)&v88 - v31;
  sub_2534B324C();
  MEMORY[0x270FA5388](v32);
  sub_2534B3318();
  uint64_t v89 = v33;
  sub_2534B324C();
  MEMORY[0x270FA5388](v34);
  sub_2534B3318();
  uint64_t v88 = v35;
  sub_2534B324C();
  MEMORY[0x270FA5388](v36);
  uint64_t v93 = (char *)&v88 - v37;
  uint64_t v38 = sub_253483660();
  uint64_t v106 = type metadata accessor for ContextProtoSpanMatchedEntity(v38);
  sub_253465998();
  uint64_t v40 = v39;
  MEMORY[0x270FA5388](v41);
  uint64_t v101 = (uint64_t)&v88 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v43);
  uint64_t v108 = (uint64_t)&v88 - v44;
  sub_2534B324C();
  MEMORY[0x270FA5388](v45);
  uint64_t v90 = (uint64_t)&v88 - v46;
  sub_2534B324C();
  MEMORY[0x270FA5388](v47);
  sub_2534B35DC();
  uint64_t v96 = v48;
  unint64_t v49 = *(void *)(v12 + 16);
  sub_253962E38(MEMORY[0x263F8EE78]);
  sub_2539E64B4();
  uint64_t v92 = v12;
  uint64_t v104 = v40;
  uint64_t v105 = v25;
  if (v49)
  {
    sub_253962DA4();
    uint64_t v99 = v50;
    uint64_t v100 = v51;
    uint64_t v52 = (void (**)(void))(v25 + 32);
    swift_bridgeObjectRetain();
    uint64_t v53 = 0;
    uint64_t v94 = v23;
    while (v100 != v53)
    {
      uint64_t v54 = v108;
      sub_253961FFC(v99 + *(void *)(v40 + 72) * v53, v108, (void (*)(void))type metadata accessor for ContextProtoSpanMatchedEntity);
      uint64_t v55 = v101;
      sub_253961FFC(v54, v101, (void (*)(void))type metadata accessor for ContextProtoSpanMatchedEntity);
      sub_253962910();
      sub_253961F60(v55 + v56, v103, &qword_269CDCBC8);
      sub_25395B0C0();
      if (v10)
      {
        sub_253961FAC();
        swift_bridgeObjectRelease();
        swift_release();
        sub_253961FAC();
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      uint64_t v57 = swift_bridgeObjectRetain();
      sub_25395178C(v57, v58, v59, v60, v61, v62, v63, v64, v88, v89);
      sub_253B07B30();
      uint64_t v65 = type metadata accessor for ContextProtoSpanMatchedEntity;
      sub_253961FAC();
      unint64_t v66 = *v52;
      sub_253962EFC();
      v66();
      sub_253962EFC();
      v66();
      sub_253961FAC();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253962B18();
        uint64_t v65 = a10;
      }
      sub_2539624EC();
      if (v68)
      {
        sub_253962254(v67);
        sub_2539E64B4();
        uint64_t v65 = a10;
      }
      ++v53;
      *((void *)v65 + 2) = v23;
      sub_253962314();
      uint64_t v23 = v94;
      sub_253962EFC();
      v66();
      a10 = v65;
      uint64_t v40 = v104;
      if (v49 == v53) {
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
LABEL_12:
  uint64_t v69 = v92;
  unint64_t v70 = *(void *)(v92 + 16);
  if (v49 != v70)
  {
    uint64_t v71 = (void (**)(void))(v105 + 32);
    while (v49 < v70)
    {
      uint64_t v72 = v96;
      sub_253961FFC(v69+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v49, v96, (void (*)(void))type metadata accessor for ContextProtoSpanMatchedEntity);
      uint64_t v73 = v72;
      uint64_t v74 = v90;
      sub_253961FFC(v73, v90, (void (*)(void))type metadata accessor for ContextProtoSpanMatchedEntity);
      sub_253962910();
      sub_253961F60(v74 + v75, v91, &qword_269CDCBC8);
      sub_25395B0C0();
      if (v10)
      {
        sub_253961FAC();
        sub_253961FAC();
        swift_release();
        swift_bridgeObjectRelease_n();
        goto LABEL_25;
      }
      uint64_t v76 = swift_bridgeObjectRetain();
      sub_25395178C(v76, v77, v78, v79, v80, v81, v82, v83, v88, v89);
      sub_253B07B30();
      uint64_t v84 = type metadata accessor for ContextProtoSpanMatchedEntity;
      sub_253961FAC();
      uint64_t v85 = *v71;
      sub_2534D9724();
      sub_2539627E0();
      v85();
      sub_2539627E0();
      v85();
      sub_253961FAC();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253962B18();
        uint64_t v84 = a10;
      }
      unint64_t v87 = *((void *)v84 + 2);
      unint64_t v86 = *((void *)v84 + 3);
      if (v87 >= v86 >> 1)
      {
        sub_253962434(v86);
        sub_2539E64B4();
        uint64_t v84 = a10;
      }
      ++v49;
      *((void *)v84 + 2) = v87 + 1;
      sub_25396291C();
      sub_2539627E0();
      v85();
      a10 = v84;
      uint64_t v69 = v92;
      unint64_t v70 = *(void *)(v92 + 16);
      uint64_t v40 = v104;
      if (v49 == v70) {
        goto LABEL_13;
      }
    }
LABEL_27:
    __break(1u);
    return;
  }
LABEL_13:
  swift_bridgeObjectRelease_n();
LABEL_25:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_253950F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  sub_2534847F8();
  uint64_t v12 = v10;
  uint64_t v14 = v13;
  uint64_t v15 = sub_253462A5C(&qword_269CDCB80);
  uint64_t v16 = sub_25346CB4C(v15);
  MEMORY[0x270FA5388](v16);
  sub_2534D9C38();
  MEMORY[0x270FA5388](v17);
  sub_2534B35DC();
  uint64_t v117 = v18;
  uint64_t v131 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v19);
  uint64_t v128 = (uint64_t)&v111 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  sub_2536D3B2C(v22, v23, v24, v25, v26, v27, v28, v29, v111);
  uint64_t v130 = sub_253B077E0();
  sub_253465998();
  uint64_t v31 = v30;
  MEMORY[0x270FA5388](v32);
  long long v127 = (char *)&v111 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v34);
  uint64_t v115 = (char *)&v111 - v35;
  sub_253483660();
  uint64_t v36 = type metadata accessor for ToolQuery.Output();
  uint64_t v37 = sub_25346CB34(v36);
  uint64_t v129 = v38;
  MEMORY[0x270FA5388](v37);
  uint64_t v124 = (char *)&v111 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v40);
  uint64_t v123 = (uint64_t)&v111 - v41;
  sub_2534B324C();
  uint64_t v43 = MEMORY[0x270FA5388](v42);
  uint64_t v45 = (char *)&v111 - v44;
  MEMORY[0x270FA5388](v43);
  uint64_t v114 = (char *)&v111 - v46;
  sub_2534B324C();
  MEMORY[0x270FA5388](v47);
  uint64_t v113 = (uint64_t)&v111 - v48;
  sub_2534B324C();
  MEMORY[0x270FA5388](v49);
  uint64_t v118 = (uint64_t)&v111 - v50;
  uint64_t v51 = sub_253483660();
  uint64_t Output = type metadata accessor for ContextProtoToolQueryOutput(v51);
  uint64_t v53 = sub_25346CB34(Output);
  uint64_t v55 = v54;
  MEMORY[0x270FA5388](v53);
  uint64_t v133 = (uint64_t)&v111 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v57);
  uint64_t v134 = (uint64_t)&v111 - v58;
  sub_2534B324C();
  MEMORY[0x270FA5388](v59);
  sub_2534B3318();
  uint64_t v122 = v60;
  sub_2534B324C();
  uint64_t v62 = MEMORY[0x270FA5388](v61);
  sub_25396314C(v62, v63, v64, v65, v66, v67, v68, v69, v111);
  unint64_t v70 = *(void *)(v14 + 16);
  sub_253962E50(MEMORY[0x263F8EE78]);
  sub_2539E8164();
  uint64_t v112 = v14;
  if (v70)
  {
    sub_253962DA4();
    uint64_t v125 = v71;
    uint64_t v126 = v72;
    uint64_t v119 = v31 + 32;
    swift_bridgeObjectRetain();
    uint64_t v73 = 0;
    uint64_t v120 = v31;
    while (v126 != v73)
    {
      unint64_t v74 = v70;
      uint64_t v75 = (uint64_t)v45;
      uint64_t v76 = v134;
      sub_253961FFC(v125 + *(void *)(v55 + 72) * v73, v134, (void (*)(void))type metadata accessor for ContextProtoToolQueryOutput);
      uint64_t v77 = v133;
      sub_253961FFC(v76, v133, (void (*)(void))type metadata accessor for ContextProtoToolQueryOutput);
      sub_253961F60(v77, v11, &qword_269CDCB80);
      sub_2534D8B48(v11, 1, v131);
      if (v78)
      {
        sub_253472458(v11, &qword_269CDCB80);
        uint64_t v135 = v131;
        sub_253462A5C(&qword_269CE5010);
        uint64_t v104 = sub_25396232C();
        uint64_t v106 = v105;
        sub_253961DC0();
        uint64_t v107 = sub_2534D969C();
        uint64_t *v108 = v104;
        v108[1] = v106;
        sub_253962224(v107, (uint64_t)v108);
LABEL_25:
        sub_253961FAC();
        swift_bridgeObjectRelease();
        swift_release();
        sub_253961FAC();
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
      sub_253962058(v11, v128, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.Definition);
      RetrievedTool.Definition.init(transcript:)();
      if (v12) {
        goto LABEL_25;
      }
      uint64_t v132 = 0;
      sub_25396303C();
      uint64_t v79 = v124;
      sub_2534D8E14();
      v80();
      uint64_t v81 = type metadata accessor for ContextProtoToolQueryOutput;
      sub_253961FAC();
      uint64_t v82 = (uint64_t)v79;
      uint64_t v83 = v123;
      sub_253962058(v82, v123, (void (*)(void))type metadata accessor for ToolQuery.Output);
      uint64_t v84 = v83;
      uint64_t v45 = (char *)v75;
      sub_253962058(v84, v75, (void (*)(void))type metadata accessor for ToolQuery.Output);
      sub_253961FAC();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253962CA4();
        uint64_t v81 = a10;
      }
      unint64_t v70 = v74;
      unint64_t v86 = *((void *)v81 + 2);
      unint64_t v85 = *((void *)v81 + 3);
      if (v86 >= v85 >> 1)
      {
        sub_253962254(v85);
        sub_2539E8164();
        uint64_t v81 = a10;
      }
      ++v73;
      *((void *)v81 + 2) = v86 + 1;
      sub_2539623C4();
      sub_253962058((uint64_t)v45, v87, (void (*)(void))type metadata accessor for ToolQuery.Output);
      uint64_t v12 = v132;
      if (v74 == v73) {
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
LABEL_13:
  uint64_t v88 = v112;
  unint64_t v89 = *(void *)(v112 + 16);
  if (v70 != v89)
  {
    while (v70 < v89)
    {
      sub_253962D94();
      uint64_t v91 = v121;
      sub_253961FFC(v90 + *(void *)(v55 + 72) * v70, v121, (void (*)(void))type metadata accessor for ContextProtoToolQueryOutput);
      uint64_t v92 = v91;
      uint64_t v93 = v122;
      sub_253962954(v92);
      uint64_t v94 = v117;
      sub_253961F60(v93, v117, &qword_269CDCB80);
      sub_2534D8B48(v94, 1, v131);
      if (v78)
      {
        sub_253472458(v94, &qword_269CDCB80);
        uint64_t v135 = v131;
        sub_253462A5C(&qword_269CE5010);
        sub_25396232C();
        sub_25396263C();
        uint64_t v109 = sub_2534D969C();
        *uint64_t v110 = &qword_269CDCB80;
        v110[1] = v94;
        sub_253962224(v109, (uint64_t)v110);
LABEL_27:
        sub_253961FAC();
        sub_253961FAC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_28;
      }
      sub_253962058(v94, v116, (void (*)(void))type metadata accessor for ContextProtoRetrievedTool.Definition);
      RetrievedTool.Definition.init(transcript:)();
      if (v12) {
        goto LABEL_27;
      }
      uint64_t v95 = v114;
      uint64_t v96 = sub_2535791D8();
      v97(v96);
      uint64_t v98 = type metadata accessor for ContextProtoToolQueryOutput;
      sub_253961FAC();
      uint64_t v99 = (uint64_t)v95;
      uint64_t v100 = v113;
      sub_253962058(v99, v113, (void (*)(void))type metadata accessor for ToolQuery.Output);
      sub_253962058(v100, v118, (void (*)(void))type metadata accessor for ToolQuery.Output);
      sub_253961FAC();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253962CA4();
        uint64_t v98 = a10;
      }
      sub_2539629A0();
      if (v102)
      {
        sub_2539625A0(v101);
        sub_2539E8164();
        uint64_t v98 = a10;
      }
      ++v70;
      *((void *)v98 + 2) = type metadata accessor for ToolQuery.Output;
      sub_2539623C4();
      sub_253962058(v118, v103, (void (*)(void))type metadata accessor for ToolQuery.Output);
      unint64_t v89 = *(void *)(v88 + 16);
      if (v70 == v89) {
        goto LABEL_14;
      }
    }
LABEL_30:
    __break(1u);
    return;
  }
LABEL_14:
  swift_bridgeObjectRelease_n();
LABEL_28:
  sub_2539624FC();
  sub_2534847C8();
}

void sub_25395178C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  sub_2539625F8();
  v37[8] = sub_253B07770();
  sub_253465998();
  MEMORY[0x270FA5388](v16);
  v37[9] = (char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v18);
  v37[7] = (char *)v37 - v19;
  uint64_t v20 = sub_253483660();
  uint64_t v21 = type metadata accessor for ContextProtoEntityMatch(v20);
  uint64_t v22 = sub_25346CB34(v21);
  MEMORY[0x270FA5388](v22);
  v37[6] = (char *)v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v24);
  sub_2534F8600();
  MEMORY[0x270FA5388](v25);
  v37[0] = (char *)v37 - v26;
  sub_2534B324C();
  MEMORY[0x270FA5388](v27);
  sub_2539624A8();
  sub_2539622E0(MEMORY[0x263F8EE78]);
  sub_2539E655C();
  sub_253962DE4();
  if (v14)
  {
    sub_2539621AC();
    sub_253962D88();
    while (1)
    {
      sub_253962D7C();
      if (v28) {
        break;
      }
      uint64_t v29 = sub_2539625C8();
      sub_253961FFC(v29, v12, (void (*)(void))type metadata accessor for ContextProtoEntityMatch);
      sub_253962478();
      sub_25396239C();
      EntityMatch.init(transcript:)();
      if (v11)
      {
        swift_release();
        sub_253962988();
        sub_253961FAC();
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      sub_253961FAC();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253962BCC();
        uint64_t v10 = a10;
      }
      sub_2539624EC();
      if (v31)
      {
        sub_253962254(v30);
        sub_2539E655C();
        uint64_t v10 = a10;
      }
      ++v15;
      *(void *)(v10 + 16) = type metadata accessor for ContextProtoEntityMatch;
      sub_2534D8E14();
      v32();
      sub_2539625B8();
      if (v28) {
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
LABEL_13:
  sub_253962350();
  if (!v28)
  {
    sub_253962590();
    while (v14 < v33)
    {
      unint64_t v34 = sub_2539622C4();
      sub_253961FFC(v34, v13, (void (*)(void))type metadata accessor for ContextProtoEntityMatch);
      sub_253962608();
      sub_2539623E0();
      EntityMatch.init(transcript:)();
      if (v11)
      {
        sub_253961FAC();
        swift_release();
        sub_253962460();
        goto LABEL_27;
      }
      sub_253961FAC();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_253962BCC();
      }
      sub_25396244C();
      if (v31)
      {
        sub_253962194(v35);
        sub_2539E655C();
        uint64_t v10 = a10;
      }
      ++v14;
      *(void *)(v10 + 16) = type metadata accessor for ContextProtoEntityMatch;
      sub_2534D8E14();
      v36();
      a10 = v10;
      sub_253962350();
      if (v28) {
        goto LABEL_15;
      }
    }
LABEL_29:
    __break(1u);
    return;
  }
LABEL_15:
  sub_253962460();
LABEL_27:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_253951B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  sub_2534847F8();
  uint64_t v13 = sub_253962DF0();
  uint64_t v14 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(v13);
  uint64_t v15 = sub_25346CB34(v14);
  uint64_t v17 = v16;
  MEMORY[0x270FA5388](v15);
  sub_2535B39C8();
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (uint64_t *)((char *)&v54 - v20);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  sub_2539627FC(v22, v23, v24, v25, v26, v27, v28, v29, v54);
  unint64_t v30 = *(void *)(v11 + 16);
  sub_253962624(MEMORY[0x263F8EE78]);
  sub_2539E7A8C();
  uint64_t v56 = v11;
  uint64_t v59 = v17;
  uint64_t v54 = v10;
  if (v30)
  {
    sub_2539625E8();
    uint64_t v57 = v31;
    uint64_t v58 = v32;
    swift_bridgeObjectRetain();
    uint64_t v33 = 0;
    while (v58 != v33)
    {
      sub_253961FFC(v57 + *(void *)(v17 + 72) * v33, (uint64_t)v21, (void (*)(void))type metadata accessor for TranscriptProtoGlobalToolIdentifier);
      sub_253961FFC((uint64_t)v21, (uint64_t)v12, (void (*)(void))type metadata accessor for TranscriptProtoGlobalToolIdentifier);
      uint64_t v34 = *v12;
      uint64_t v35 = v12[1];
      uint64_t v36 = v12[3];
      uint64_t v60 = v12[2];
      uint64_t v61 = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v37 = type metadata accessor for TranscriptProtoGlobalToolIdentifier;
      sub_253961FAC();
      sub_253579360();
      sub_253961FAC();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253962B84();
        uint64_t v37 = a10;
      }
      unint64_t v39 = *((void *)v37 + 2);
      unint64_t v38 = *((void *)v37 + 3);
      if (v39 >= v38 >> 1)
      {
        sub_253962194(v38);
        sub_2539E7A8C();
        uint64_t v37 = a10;
      }
      ++v33;
      *((void *)v37 + 2) = v39 + 1;
      uint64_t v40 = (void *)((char *)v37 + 32 * v39);
      v40[4] = v61;
      v40[5] = v35;
      uint64_t v17 = v59;
      v40[6] = v60;
      v40[7] = v36;
      if (v30 == v33) {
        goto LABEL_11;
      }
    }
    __break(1u);
  }
  else
  {
    sub_253962F60();
LABEL_11:
    sub_253962FDC();
    if (v42)
    {
LABEL_13:
      swift_bridgeObjectRelease_n();
      sub_2534847C8();
      return;
    }
    while (v30 < v41)
    {
      sub_2539626C0();
      uint64_t v45 = v55;
      sub_253961FFC(v43 + v44 + *(void *)(v17 + 72) * v30, v55, (void (*)(void))type metadata accessor for TranscriptProtoGlobalToolIdentifier);
      uint64_t v46 = sub_253578828();
      sub_253961FFC(v46, v47, (void (*)(void))type metadata accessor for TranscriptProtoGlobalToolIdentifier);
      uint64_t v48 = *v21;
      uint64_t v49 = v21[1];
      uint64_t v50 = v21[2];
      uint64_t v51 = v21[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_253961FAC();
      sub_253961FAC();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253962B84();
        uint64_t v45 = (uint64_t)a10;
      }
      unint64_t v52 = *(void *)(v45 + 16);
      if (v52 >= *(void *)(v45 + 24) >> 1)
      {
        sub_2539E7A8C();
        uint64_t v45 = (uint64_t)a10;
      }
      ++v30;
      *(void *)(v45 + 16) = v52 + 1;
      uint64_t v53 = (void *)(v45 + 32 * v52);
      v53[4] = v48;
      v53[5] = v49;
      v53[6] = v50;
      v53[7] = v51;
      sub_253962FDC();
      uint64_t v17 = v59;
      if (v42) {
        goto LABEL_13;
      }
    }
  }
  __break(1u);
}

void sub_253951DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  sub_2534847F8();
  uint64_t v113 = v11;
  uint64_t v14 = v13;
  uint64_t v15 = sub_253462A5C(&qword_26B249528);
  uint64_t v16 = sub_25346CB4C(v15);
  MEMORY[0x270FA5388](v16);
  uint64_t v131 = (uint64_t)v112 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v27 = sub_2536D3B2C(v19, v20, v21, v22, v23, v24, v25, v26, v112[0]);
  uint64_t v138 = type metadata accessor for TranscriptProtoStatementID(v27);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v28);
  uint64_t v129 = (uint64_t)v112 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v30);
  uint64_t v119 = (uint64_t)v112 - v31;
  uint64_t v136 = sub_253B059D0();
  sub_253465998();
  uint64_t v33 = v32;
  MEMORY[0x270FA5388](v34);
  uint64_t v130 = (char *)v112 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v36);
  uint64_t v118 = (char *)v112 - v37;
  uint64_t v38 = sub_253483660();
  type metadata accessor for SpeechRequestCandidate(v38);
  sub_253465998();
  uint64_t v134 = v40;
  uint64_t v135 = v39;
  MEMORY[0x270FA5388](v39);
  uint64_t v128 = (uint64_t *)((char *)v112 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2534B324C();
  MEMORY[0x270FA5388](v42);
  uint64_t v127 = (uint64_t)v112 - v43;
  sub_2534B324C();
  MEMORY[0x270FA5388](v44);
  sub_25351C738();
  MEMORY[0x270FA5388](v45);
  uint64_t v117 = (uint64_t *)((char *)v112 - v46);
  sub_2534B324C();
  MEMORY[0x270FA5388](v47);
  uint64_t v116 = (uint64_t)v112 - v48;
  sub_2534B324C();
  MEMORY[0x270FA5388](v49);
  sub_2534B35DC();
  uint64_t v132 = v50;
  uint64_t v51 = sub_253483660();
  uint64_t v137 = type metadata accessor for TranscriptProtoSpeechRequestCandidate(v51);
  sub_253465998();
  uint64_t v53 = v52;
  MEMORY[0x270FA5388](v54);
  sub_2535B38D8();
  uint64_t v56 = MEMORY[0x270FA5388](v55);
  uint64_t v58 = (char *)v112 - v57;
  uint64_t v59 = MEMORY[0x270FA5388](v56);
  uint64_t v61 = (char *)v112 - v60;
  MEMORY[0x270FA5388](v59);
  sub_2534B35DC();
  uint64_t v114 = v62;
  unint64_t v63 = *(void *)(v14 + 16);
  sub_253962284(MEMORY[0x263F8EE78]);
  sub_2539E8290();
  uint64_t v133 = v53;
  uint64_t v121 = v14;
  uint64_t v115 = (uint64_t *)v61;
  v112[1] = v33;
  if (v63)
  {
    sub_2539625E8();
    uint64_t v125 = v64;
    uint64_t v126 = v65;
    uint64_t v123 = v33 + 32;
    swift_bridgeObjectRetain();
    uint64_t v66 = 0;
    unint64_t v122 = v63;
    uint64_t v124 = v12;
    while (v126 != v66)
    {
      sub_253961FFC(v125 + *(void *)(v53 + 72) * v66, (uint64_t)v58, (void (*)(void))type metadata accessor for TranscriptProtoSpeechRequestCandidate);
      sub_253961FFC((uint64_t)v58, (uint64_t)v10, (void (*)(void))type metadata accessor for TranscriptProtoSpeechRequestCandidate);
      uint64_t v68 = *v10;
      uint64_t v67 = v10[1];
      sub_253962910();
      uint64_t v70 = v131;
      sub_253961F60((uint64_t)v10 + v69, v131, &qword_26B249528);
      uint64_t v71 = sub_2536D3ACC();
      sub_2534D8B48(v71, v72, v138);
      if (v73)
      {
        swift_bridgeObjectRetain();
        sub_253472458(v70, &qword_26B249528);
        uint64_t v139 = v138;
        sub_253462A5C(&qword_269CE5160);
        uint64_t v102 = sub_25396232C();
        uint64_t v104 = v103;
        sub_253961DC0();
        uint64_t v105 = sub_2534D969C();
        *uint64_t v106 = v102;
        v106[1] = v104;
        sub_253962224(v105, (uint64_t)v106);
        swift_bridgeObjectRelease();
        sub_253961FAC();
        swift_bridgeObjectRelease();
        swift_release();
        sub_253961FAC();
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      unint64_t v74 = v10;
      sub_253962058(v70, v129, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25396296C();
      sub_253961FAC();
      uint64_t v75 = v128;
      void *v128 = v68;
      v75[1] = v67;
      sub_253962E1C(v135);
      sub_25396303C();
      sub_2534D8E14();
      v76();
      uint64_t v77 = type metadata accessor for TranscriptProtoSpeechRequestCandidate;
      char v78 = v74;
      uint64_t v79 = v124;
      sub_253961FAC();
      uint64_t v80 = (uint64_t)v75;
      uint64_t v81 = v127;
      sub_253962058(v80, v127, (void (*)(void))type metadata accessor for SpeechRequestCandidate);
      sub_253962058(v81, v79, (void (*)(void))type metadata accessor for SpeechRequestCandidate);
      sub_253961FAC();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253962AAC();
        uint64_t v77 = a10;
      }
      uint64_t v53 = v133;
      unint64_t v63 = v122;
      uint64_t v10 = v78;
      sub_253962498();
      if (v82)
      {
        sub_2539629D4();
        uint64_t v77 = a10;
      }
      ++v66;
      *((void *)v77 + 2) = type metadata accessor for SpeechRequestCandidate;
      sub_25394D7F8();
      sub_253962058(v79, v83, (void (*)(void))type metadata accessor for SpeechRequestCandidate);
      if (v63 == v66) {
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
  sub_253962F60();
LABEL_12:
  uint64_t v84 = v120;
  uint64_t v85 = v121;
  unint64_t v86 = v115;
  uint64_t v87 = v114;
  if (v63 != *(void *)(v121 + 16))
  {
    sub_253963018();
    uint64_t v131 = v89;
    while (v63 < v88)
    {
      sub_2539626B0();
      sub_253961FFC(v85 + v90 + *(void *)(v53 + 72) * v63, v87, (void (*)(void))type metadata accessor for TranscriptProtoSpeechRequestCandidate);
      sub_253961FFC(v87, (uint64_t)v86, (void (*)(void))type metadata accessor for TranscriptProtoSpeechRequestCandidate);
      uint64_t v92 = *v86;
      uint64_t v91 = v86[1];
      sub_253962910();
      sub_253961F60((uint64_t)v86 + v93, v84, &qword_26B249528);
      uint64_t v94 = sub_2539627D4();
      sub_2534D8B48(v94, v95, v138);
      if (v73)
      {
        swift_bridgeObjectRetain();
        sub_253472458(v84, &qword_26B249528);
        uint64_t v139 = v138;
        sub_253462A5C(&qword_269CE5160);
        uint64_t v107 = sub_25396232C();
        uint64_t v109 = v108;
        sub_253961DC0();
        uint64_t v110 = sub_2534D969C();
        *uint64_t v111 = v107;
        v111[1] = v109;
        sub_253962224(v110, (uint64_t)v111);
        swift_bridgeObjectRelease();
        sub_253961FAC();
        sub_253962FC4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_25;
      }
      sub_253962058(v84, v119, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25396296C();
      sub_253961FAC();
      uint64_t v96 = v117;
      *uint64_t v117 = v92;
      v96[1] = v91;
      sub_253962E1C(v135);
      sub_2534D8E14();
      v97();
      uint64_t v98 = type metadata accessor for TranscriptProtoSpeechRequestCandidate;
      sub_253961FAC();
      uint64_t v99 = (uint64_t)v96;
      uint64_t v100 = v116;
      sub_253962058(v99, v116, (void (*)(void))type metadata accessor for SpeechRequestCandidate);
      sub_253962058(v100, v132, (void (*)(void))type metadata accessor for SpeechRequestCandidate);
      sub_253961FAC();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253962AAC();
        uint64_t v98 = a10;
      }
      sub_253962498();
      uint64_t v53 = v133;
      uint64_t v84 = v120;
      if (v82)
      {
        sub_2539629D4();
        uint64_t v98 = a10;
      }
      ++v63;
      *((void *)v98 + 2) = type metadata accessor for SpeechRequestCandidate;
      sub_25394D7F8();
      sub_253962058(v132, v101, (void (*)(void))type metadata accessor for SpeechRequestCandidate);
      uint64_t v85 = v121;
      unint64_t v88 = *(void *)(v121 + 16);
      if (v63 == v88) {
        goto LABEL_13;
      }
    }
LABEL_27:
    __break(1u);
    return;
  }
LABEL_13:
  swift_bridgeObjectRelease_n();
LABEL_25:
  sub_2534847C8();
}

void sub_2539526A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  sub_2534847F8();
  uint64_t v14 = sub_2539626F0();
  uint64_t v15 = type metadata accessor for Candidate(v14);
  uint64_t v16 = sub_25346CB34(v15);
  uint64_t v51 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v52 = (char *)v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v19);
  uint64_t v20 = sub_253962344();
  uint64_t v21 = type metadata accessor for TranscriptProtoCandidate(v20);
  uint64_t v22 = sub_25346CB34(v21);
  MEMORY[0x270FA5388](v22);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v23);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v24);
  v49[0] = (uint64_t)v49 - v25;
  sub_2534B324C();
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  sub_2539624BC(v27, v28, v29, v30, v31, v32, v33, v34, v49[0]);
  sub_253962284(MEMORY[0x263F8EE78]);
  sub_2539E82F4();
  sub_253962F78();
  if (v13)
  {
    sub_253962370();
    uint64_t v35 = 0;
    while (1)
    {
      sub_253962F30();
      if (v36) {
        break;
      }
      uint64_t v37 = sub_253962554();
      sub_253961FFC(v37, v12, (void (*)(void))type metadata accessor for TranscriptProtoCandidate);
      sub_253962780();
      sub_2539626D0();
      Candidate.init(transcript:)();
      if (v11)
      {
        swift_release();
        sub_2539630A4();
        sub_253961FAC();
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      sub_253961FAC();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253962A88();
        uint64_t v10 = a10;
      }
      sub_25396250C();
      if (v39)
      {
        sub_25396226C(v38);
        sub_2539E82F4();
        uint64_t v10 = a10;
      }
      ++v35;
      *((void *)v10 + 2) = type metadata accessor for TranscriptProtoCandidate;
      sub_25394D7F8();
      sub_253962058(v40, v41, (void (*)(void))type metadata accessor for Candidate);
      sub_2539630E0();
      if (v36) {
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
LABEL_13:
  sub_253962548();
  if (!v36)
  {
    uint64_t v43 = v49[1];
    while (v13 < v42)
    {
      unint64_t v44 = sub_2539622A8();
      uint64_t v45 = type metadata accessor for TranscriptProtoCandidate;
      uint64_t v46 = v50;
      sub_253961FFC(v44, v50, (void (*)(void))type metadata accessor for TranscriptProtoCandidate);
      sub_25396279C();
      sub_2539627C4();
      Candidate.init(transcript:)();
      sub_253961FAC();
      if (v11)
      {
        swift_bridgeObjectRelease();
        sub_253962DCC();
        swift_release();
        goto LABEL_27;
      }
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253962A88();
        uint64_t v45 = a10;
      }
      sub_253962498();
      if (v39)
      {
        sub_253962194(v47);
        sub_2539E82F4();
        uint64_t v45 = a10;
      }
      ++v13;
      *((void *)v45 + 2) = v46;
      sub_25394D7F8();
      sub_253962058(v43, v48, (void (*)(void))type metadata accessor for Candidate);
      sub_253962548();
      if (v36) {
        goto LABEL_15;
      }
    }
LABEL_29:
    __break(1u);
    return;
  }
LABEL_15:
  sub_253962880();
LABEL_27:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_2539529D8()
{
  sub_2534847F8();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_2534659D8();
  uint64_t v253 = v6;
  sub_2534B324C();
  MEMORY[0x270FA5388](v7);
  sub_2534B35DC();
  uint64_t v276 = sub_253962ED0(v8);
  sub_253465998();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  sub_2534659D8();
  uint64_t v235 = v12;
  sub_2534B324C();
  MEMORY[0x270FA5388](v13);
  sub_2534B3318();
  uint64_t v252 = v14;
  sub_2534B324C();
  MEMORY[0x270FA5388](v15);
  sub_2534B3318();
  unint64_t v269 = v16;
  sub_2534B324C();
  MEMORY[0x270FA5388](v17);
  sub_2534B3318();
  uint64_t v227 = v18;
  sub_2534B324C();
  MEMORY[0x270FA5388](v19);
  sub_2534B3318();
  uint64_t v246 = v20;
  sub_2534B324C();
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = sub_253962EB4((uint64_t)&v220 - v22);
  sub_253465998();
  uint64_t v25 = v24;
  MEMORY[0x270FA5388](v26);
  sub_2534659D8();
  uint64_t v234 = v27;
  sub_2534B324C();
  MEMORY[0x270FA5388](v28);
  sub_2534B3318();
  uint64_t v233 = v29;
  sub_2534B324C();
  MEMORY[0x270FA5388](v30);
  uint64_t v280 = (char *)&v220 - v31;
  sub_2534B324C();
  MEMORY[0x270FA5388](v32);
  sub_2534B3318();
  uint64_t v268 = v33;
  sub_2534B324C();
  MEMORY[0x270FA5388](v34);
  uint64_t v279 = (char *)&v220 - v35;
  sub_2534B324C();
  MEMORY[0x270FA5388](v36);
  sub_2534B3318();
  uint64_t v226 = v37;
  sub_2534B324C();
  MEMORY[0x270FA5388](v38);
  sub_2534B3318();
  uint64_t v225 = v39;
  sub_2534B324C();
  MEMORY[0x270FA5388](v40);
  sub_2534B3318();
  uint64_t v256 = v41;
  sub_2534B324C();
  MEMORY[0x270FA5388](v42);
  sub_2534B3318();
  uint64_t v250 = v43;
  sub_2534B324C();
  MEMORY[0x270FA5388](v44);
  sub_2534B35DC();
  uint64_t v286 = sub_253962E98(v45);
  sub_253465998();
  uint64_t v47 = v46;
  MEMORY[0x270FA5388](v48);
  uint64_t v285 = (void (*)(void))((char *)&v220 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2534B324C();
  MEMORY[0x270FA5388](v50);
  sub_2534B3318();
  uint64_t v282 = v51;
  sub_2534B324C();
  MEMORY[0x270FA5388](v52);
  sub_2534B3318();
  uint64_t v260 = v53;
  sub_2534B324C();
  MEMORY[0x270FA5388](v54);
  sub_2534D8F5C((uint64_t)&v220 - v55);
  uint64_t v273 = sub_253462A5C(&qword_269CDCC30);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v56);
  sub_2534659D8();
  uint64_t v267 = v57;
  sub_2534B324C();
  MEMORY[0x270FA5388](v58);
  uint64_t v283 = (int *)((char *)&v220 - v59);
  sub_2534B324C();
  MEMORY[0x270FA5388](v60);
  sub_2534B3318();
  uint64_t v266 = v61;
  sub_2534B324C();
  MEMORY[0x270FA5388](v62);
  sub_2534B3318();
  uint64_t v249 = v63;
  sub_2534B324C();
  MEMORY[0x270FA5388](v64);
  sub_2534B3318();
  uint64_t v258 = (int *)v65;
  sub_2534B324C();
  MEMORY[0x270FA5388](v66);
  uint64_t v248 = (char *)&v220 - v67;
  uint64_t v68 = sub_253483660();
  uint64_t v237 = type metadata accessor for VariableSetter(v68);
  sub_253465998();
  uint64_t v236 = v69;
  MEMORY[0x270FA5388](v70);
  sub_2534659D8();
  uint64_t v232 = v71;
  sub_2534B324C();
  MEMORY[0x270FA5388](v72);
  sub_2534B3318();
  uint64_t v231 = v73;
  sub_2534B324C();
  MEMORY[0x270FA5388](v74);
  sub_2534B3318();
  uint64_t v241 = v75;
  sub_2534B324C();
  MEMORY[0x270FA5388](v76);
  sub_2534B3318();
  uint64_t v224 = v77;
  sub_2534B324C();
  MEMORY[0x270FA5388](v78);
  sub_2534B3318();
  uint64_t v223 = v79;
  sub_2534B324C();
  MEMORY[0x270FA5388](v80);
  sub_2534B35DC();
  uint64_t v228 = v81;
  uint64_t v82 = sub_253483660();
  uint64_t v238 = type metadata accessor for TranscriptProtoVariableSetter(v82);
  sub_253465998();
  uint64_t v84 = v83;
  MEMORY[0x270FA5388](v85);
  sub_2534659D8();
  uint64_t v247 = (uint64_t *)v86;
  sub_2534B324C();
  MEMORY[0x270FA5388](v87);
  sub_2534B3318();
  uint64_t v245 = v88;
  sub_2534B324C();
  MEMORY[0x270FA5388](v89);
  uint64_t v242 = (uint64_t *)((char *)&v220 - v90);
  sub_2534B324C();
  MEMORY[0x270FA5388](v91);
  sub_2534B35DC();
  sub_2534D8F5C(v92);
  uint64_t v93 = *(void (***)(uint64_t, uint64_t))(v3 + 16);
  uint64_t v290 = (uint64_t (*)(uint64_t))MEMORY[0x263F8EE78];
  sub_2539E8358();
  uint64_t v94 = v93;
  uint64_t v271 = v10;
  uint64_t v284 = v23;
  uint64_t v272 = v25;
  uint64_t v259 = v47;
  if (!v93)
  {
    sub_253962DB4();
    goto LABEL_52;
  }
  sub_2539625D8();
  uint64_t v239 = v95;
  uint64_t v264 = v10 + 16;
  uint64_t v96 = *(void (***)(uint64_t, uint64_t))(v3 + 16);
  uint64_t v265 = (void (**)(uint64_t, uint64_t))(v10 + 8);
  uint64_t v277 = (void (**)(void))(v25 + 32);
  uint64_t v275 = (void (**)(void))(v47 + 16);
  uint64_t v262 = v25 + 16;
  uint64_t v254 = v25 + 40;
  uint64_t v263 = (uint64_t *)(v47 + 8);
  uint64_t v261 = v25 + 8;
  uint64_t v222 = v10 + 32;
  swift_bridgeObjectRetain();
  sub_253963104();
  uint64_t v221 = v94;
  uint64_t v220 = v96;
LABEL_3:
  if (v97 == v96)
  {
LABEL_116:
    __break(1u);
LABEL_117:
    __break(1u);
LABEL_118:
    sub_253B0A550();
    __break(1u);
    return;
  }
  uint64_t v230 = (void (**)(uint64_t, uint64_t))((char *)v97 + 1);
  uint64_t v98 = v245;
  sub_253961FFC(v239 + *(void *)(v84 + 72) * (void)v97, v245, (void (*)(void))type metadata accessor for TranscriptProtoVariableSetter);
  uint64_t v99 = v98;
  uint64_t v100 = v247;
  sub_253961FFC(v99, (uint64_t)v247, (void (*)(void))type metadata accessor for TranscriptProtoVariableSetter);
  uint64_t isUniquelyReferenced_nonNull_native = *v100;
  sub_253961ECC(&qword_269CDBEB0, MEMORY[0x263F4BF98]);
  swift_bridgeObjectRetain();
  uint64_t v102 = (void (*)(void))sub_253B095A0();
  sub_25397174C(isUniquelyReferenced_nonNull_native, v289);
  uint64_t v270 = v289[0];
  uint64_t v255 = v289[1];
  uint64_t v274 = v289[3];
  uint64_t v103 = v289[4];
  unint64_t v257 = (unint64_t)(v289[2] + 64) >> 6;
  uint64_t v243 = isUniquelyReferenced_nonNull_native;
  swift_bridgeObjectRetain();
  uint64_t v104 = v276;
  while (1)
  {
    uint64_t v281 = (void (**)(void))v102;
    if (v103)
    {
      uint64_t v105 = v1;
      sub_2534DA484();
      uint64_t v278 = v103;
      uint64_t v107 = v106 | (v274 << 6);
      goto LABEL_24;
    }
    if (__OFADD__(v274, 1)) {
      goto LABEL_109;
    }
    sub_253962844();
    if (v108 == v109)
    {
      uint64_t v139 = v253;
      uint64_t v140 = v252;
      goto LABEL_41;
    }
    sub_253962EEC();
    uint64_t v139 = v253;
    uint64_t v140 = v252;
    if (!v110)
    {
      sub_253962654();
      if (v108 == v109) {
        goto LABEL_41;
      }
      sub_253962660();
      if (!v111)
      {
        sub_253962654();
        if (v108 == v109) {
          goto LABEL_41;
        }
        sub_253962660();
        if (!v112)
        {
          sub_253962654();
          if (v108 == v109) {
            goto LABEL_41;
          }
          sub_253962660();
          if (!v113)
          {
            sub_253962654();
            if (v108 == v109) {
              goto LABEL_41;
            }
            sub_253962660();
            if (!v114)
            {
              sub_253962844();
              if (v108 == v109) {
                goto LABEL_41;
              }
              sub_253962EEC();
              if (!v137)
              {
                while (1)
                {
                  sub_253962844();
                  if (v108 == v109) {
                    break;
                  }
                  sub_253962EEC();
                  if (v138) {
                    goto LABEL_23;
                  }
                }
LABEL_41:
                swift_release();
                swift_bridgeObjectRelease();
                sub_253961F60((uint64_t)v247 + *(int *)(v238 + 20), v139, &qword_269CDCBC8);
                uint64_t v141 = sub_2539627D4();
                sub_2534D8B48(v141, v142, v104);
                if (v143)
                {
                  sub_253472458(v139, &qword_269CDCBC8);
                  uint64_t v287 = (void (*)(void))v104;
                  sub_253462A5C(&qword_269CE5170);
                  uint64_t v209 = sub_253B09730();
                  uint64_t v211 = v210;
                  sub_253961DC0();
                  uint64_t v212 = sub_2534D969C();
                  uint64_t *v213 = v209;
                  v213[1] = v211;
                  sub_253962224(v212, (uint64_t)v213);
                  goto LABEL_106;
                }
                sub_2534D8E14();
                v144();
                sub_2534DA678();
                sub_253962E8C();
                sub_2534B3428();
                v145();
                sub_253B09110();
                if (v1)
                {
                  (*v265)(v140, v104);
LABEL_106:
                  swift_bridgeObjectRelease();
LABEL_50:
                  sub_253961FAC();
                  swift_bridgeObjectRelease();
                  swift_release();
                  sub_253962FE8();
                  swift_bridgeObjectRelease();
                  goto LABEL_103;
                }
                sub_2534659CC();
                v146();
                uint64_t v147 = *v277;
                sub_253962810();
                v147();
                uint64_t v148 = (uint64_t)v232;
                _OWORD *v232 = v102;
                uint64_t v149 = sub_25396266C();
                ((void (*)(uint64_t))v147)(v149);
                sub_253961FAC();
                uint64_t v150 = type metadata accessor for VariableSetter;
                uint64_t v151 = v231;
                sub_253962058(v148, v231, (void (*)(void))type metadata accessor for VariableSetter);
                sub_253962058(v151, v241, (void (*)(void))type metadata accessor for VariableSetter);
                sub_253962FE8();
                if ((sub_2539621FC() & 1) == 0)
                {
                  sub_253962A64();
                  uint64_t v150 = v290;
                }
                if (*((void *)v150 + 2) >= *((void *)v150 + 3) >> 1) {
                  sub_253962A1C();
                }
                sub_253962568();
                sub_253962058(v241, v152, (void (*)(void))type metadata accessor for VariableSetter);
                uint64_t v97 = v230;
                uint64_t v94 = v221;
                uint64_t v3 = v244;
                uint64_t v25 = v272;
                uint64_t v84 = v229;
                uint64_t v96 = v220;
                if (v230 == v221)
                {
LABEL_52:
                  if (v94 == *(void (***)(uint64_t, uint64_t))(v3 + 16)) {
                    goto LABEL_53;
                  }
                  uint64_t v277 = (void (**)(void))(v10 + 16);
                  uint64_t v278 = v10 + 8;
                  uint64_t v282 = (void (**)(void))(v25 + 32);
                  uint64_t v281 = (void (**)(void))(v259 + 16);
                  uint64_t v274 = v25 + 16;
                  uint64_t v267 = (_DWORD *)(v25 + 40);
                  uint64_t v275 = (void (**)(void))(v259 + 8);
                  uint64_t v270 = v25 + 8;
                  uint64_t v264 = v10 + 32;
                  uint64_t v102 = v251;
                  sub_253963104();
                  while (1)
                  {
                    if (v94 >= v155) {
                      goto LABEL_117;
                    }
                    uint64_t v265 = (void (**)(uint64_t, uint64_t))((char *)v94 + 1);
                    sub_2539625D8();
                    uint64_t v157 = v240;
                    sub_253961FFC(v156 + *(void *)(v84 + 72) * (void)v94, v240, (void (*)(void))type metadata accessor for TranscriptProtoVariableSetter);
                    uint64_t v158 = v157;
                    uint64_t v159 = v242;
                    sub_253961FFC(v158, (uint64_t)v242, (void (*)(void))type metadata accessor for TranscriptProtoVariableSetter);
                    uint64_t v160 = *v159;
                    sub_253961ECC(&qword_269CDBEB0, MEMORY[0x263F4BF98]);
                    swift_bridgeObjectRetain();
                    uint64_t v161 = sub_253B095A0();
                    sub_25397174C(v160, v288);
                    uint64_t v279 = (char *)v288[0];
                    uint64_t v268 = v288[1];
                    uint64_t v280 = (char *)v288[3];
                    uint64_t v162 = v288[4];
                    unint64_t v269 = (unint64_t)(v288[2] + 64) >> 6;
                    uint64_t v266 = (_DWORD *)v160;
                    swift_bridgeObjectRetain();
                    while (1)
                    {
                      uint64_t v285 = (void (*)(void))v161;
                      if (v162)
                      {
                        sub_2534DA484();
                        uint64_t v283 = (int *)v162;
                        uint64_t v164 = v163 | ((void)v280 << 6);
                        goto LABEL_76;
                      }
                      if (__OFADD__(v280, 1)) {
                        goto LABEL_115;
                      }
                      sub_253962844();
                      if (v108 == v109)
                      {
                        uint64_t isUniquelyReferenced_nonNull_native = v276;
                        goto LABEL_93;
                      }
                      sub_253962E28();
                      uint64_t isUniquelyReferenced_nonNull_native = v276;
                      if (!v165)
                      {
                        sub_253962654();
                        if (v108 == v109) {
                          goto LABEL_93;
                        }
                        sub_253962660();
                        if (!v166)
                        {
                          sub_253962654();
                          if (v108 == v109) {
                            goto LABEL_93;
                          }
                          sub_253962660();
                          if (!v167)
                          {
                            sub_253962654();
                            if (v108 == v109) {
                              goto LABEL_93;
                            }
                            sub_253962660();
                            if (!v168)
                            {
                              sub_253962654();
                              if (v108 == v109) {
                                goto LABEL_93;
                              }
                              sub_253962660();
                              if (!v169)
                              {
                                sub_253962844();
                                if (v108 == v109) {
                                  goto LABEL_93;
                                }
                                sub_253962E28();
                                if (!v196) {
                                  break;
                                }
                              }
                            }
                          }
                        }
                      }
LABEL_75:
                      sub_2534D9174();
                      uint64_t v283 = (int *)v170;
                      uint64_t v164 = v172 + ((void)v171 << 6);
                      uint64_t v280 = v171;
LABEL_76:
                      int v173 = *(_DWORD *)(*((void *)v279 + 6) + 4 * v164);
                      uint64_t v174 = v248;
                      uint64_t v175 = *(void (**)(void))(v10 + 16);
                      sub_253962874();
                      v175();
                      *uint64_t v174 = v173;
                      uint64_t v176 = v258;
                      sub_253961F14((uint64_t)v174, (uint64_t)v258, &qword_269CDCC30);
                      int v177 = *v176;
                      sub_25396305C();
                      *uint64_t v249 = v177;
                      sub_253962874();
                      v175();
                      sub_253962874();
                      v175();
                      sub_253962838();
                      sub_253B09110();
                      if (v1)
                      {
                        sub_2534659CC();
                        v207();
                        sub_2534659CC();
                        v208();
                        swift_bridgeObjectRelease();
                        sub_253472458((uint64_t)v258, &qword_269CDCC30);
                        swift_bridgeObjectRelease();
                        swift_release();
                        goto LABEL_102;
                      }
                      sub_2534659CC();
                      v178();
                      uint64_t v179 = *v282;
                      sub_2534D9B1C();
                      sub_25347FA84();
                      v179();
                      uint64_t v180 = *v281;
                      sub_2534AF234();
                      v180();
                      sub_2534DA678();
                      sub_2534B3428();
                      v181();
                      uint64_t v182 = v285;
                      swift_isUniquelyReferenced_nonNull_native();
                      uint64_t v287 = v182;
                      sub_25396DFFC();
                      if (__OFADD__(*((void *)v182 + 2), (v184 & 1) == 0))
                      {
                        __break(1u);
LABEL_114:
                        __break(1u);
LABEL_115:
                        __break(1u);
                        goto LABEL_116;
                      }
                      unint64_t v185 = v183;
                      char v186 = v184;
                      sub_253462A5C((uint64_t *)&qword_269CE51D0);
                      char v187 = sub_253B0A190();
                      uint64_t v10 = v271;
                      if (v187)
                      {
                        sub_25396DFFC();
                        if ((v186 & 1) != (v189 & 1)) {
                          goto LABEL_118;
                        }
                        unint64_t v185 = v188;
                      }
                      uint64_t v190 = v287;
                      if (v186)
                      {
                        sub_253963030();
                        v191();
                      }
                      else
                      {
                        *((void *)v287 + (v185 >> 6) + 8) |= 1 << v185;
                        sub_2534AF234();
                        v180();
                        sub_253963030();
                        sub_25347FA84();
                        v179();
                        uint64_t v192 = *((void *)v190 + 2);
                        BOOL v109 = __OFADD__(v192, 1);
                        uint64_t v193 = v192 + 1;
                        if (v109) {
                          goto LABEL_114;
                        }
                        *((void *)v190 + 2) = v193;
                      }
                      uint64_t v161 = (uint64_t)v287;
                      swift_bridgeObjectRelease();
                      uint64_t v194 = *v275;
                      sub_2534D9220();
                      v194();
                      sub_2534DA678();
                      sub_2534659CC();
                      v195();
                      sub_2534D9220();
                      v194();
                      sub_253472458((uint64_t)v258, &qword_269CDCC30);
                      uint64_t v1 = 0;
                      uint64_t v102 = v251;
                      uint64_t v162 = (uint64_t)v283;
                    }
                    while (1)
                    {
                      sub_253962844();
                      if (v108 == v109) {
                        break;
                      }
                      sub_253962E28();
                      if (v197) {
                        goto LABEL_75;
                      }
                    }
LABEL_93:
                    swift_release();
                    swift_bridgeObjectRelease();
                    sub_253961F60((uint64_t)v242 + *(int *)(v238 + 20), (uint64_t)v102, &qword_269CDCBC8);
                    sub_2534D8B48((uint64_t)v102, 1, isUniquelyReferenced_nonNull_native);
                    if (v143) {
                      goto LABEL_110;
                    }
                    sub_2534DA678();
                    sub_2539627B8();
                    sub_2534D8E14();
                    v198();
                    sub_2534B3428();
                    v199();
                    sub_253B09110();
                    if (v1)
                    {
                      sub_2534659CC();
                      v219();
                      goto LABEL_112;
                    }
                    sub_2534659CC();
                    v200();
                    uint64_t v201 = *v282;
                    sub_253962810();
                    v201();
                    uint64_t v202 = (uint64_t)v224;
                    *uint64_t v224 = v285;
                    uint64_t v203 = sub_25396266C();
                    ((void (*)(uint64_t))v201)(v203);
                    sub_253961FAC();
                    uint64_t v204 = type metadata accessor for VariableSetter;
                    uint64_t v205 = v223;
                    sub_253962058(v202, v223, (void (*)(void))type metadata accessor for VariableSetter);
                    sub_253962058(v205, v228, (void (*)(void))type metadata accessor for VariableSetter);
                    sub_253962FE8();
                    if ((sub_2539621FC() & 1) == 0)
                    {
                      sub_253962A64();
                      uint64_t v204 = v290;
                    }
                    if (*((void *)v204 + 2) >= *((void *)v204 + 3) >> 1) {
                      sub_253962A1C();
                    }
                    sub_253962568();
                    sub_253962058(v228, v206, (void (*)(void))type metadata accessor for VariableSetter);
                    uint64_t v155 = *(void (***)(uint64_t, uint64_t))(v244 + 16);
                    uint64_t v94 = v265;
                    uint64_t v84 = v229;
                    if (v265 == v155)
                    {
LABEL_53:
                      swift_bridgeObjectRelease_n();
                      goto LABEL_103;
                    }
                  }
                }
                goto LABEL_3;
              }
            }
          }
        }
      }
    }
LABEL_23:
    uint64_t v105 = v1;
    sub_2534D9174();
    uint64_t v278 = v115;
    uint64_t v107 = v117 + (v116 << 6);
    uint64_t v274 = v116;
LABEL_24:
    int v118 = *(_DWORD *)(*(void *)(v270 + 48) + 4 * v107);
    uint64_t v119 = v266;
    uint64_t v120 = *(void (**)(void))(v10 + 16);
    sub_253962850();
    v120();
    _DWORD *v119 = v118;
    uint64_t v121 = v283;
    sub_253961F14((uint64_t)v119, (uint64_t)v283, &qword_269CDCC30);
    int v122 = *v121;
    sub_25396305C();
    *uint64_t v267 = v122;
    sub_253962850();
    v120();
    sub_253962850();
    v120();
    sub_253B09110();
    if (v105)
    {
      sub_2534659CC();
      v153();
      sub_2534DA678();
      sub_2534659CC();
      v154();
      swift_bridgeObjectRelease();
      sub_253472458((uint64_t)v283, &qword_269CDCC30);
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_50;
    }
    sub_2534659CC();
    v123();
    uint64_t v124 = *v277;
    sub_25347FA84();
    v124();
    uint64_t v102 = *v275;
    sub_2534AF234();
    v102();
    sub_2534DA678();
    sub_2534B3428();
    v125();
    uint64_t v126 = v281;
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v287 = (void (*)(void))v126;
    sub_25396DFFC();
    if (__OFADD__(v126[2], (v128 & 1) == 0)) {
      break;
    }
    unint64_t v129 = v127;
    char v130 = v128;
    sub_253462A5C((uint64_t *)&qword_269CE51D0);
    if (sub_253B0A190())
    {
      sub_25396DFFC();
      if ((v130 & 1) != (v132 & 1)) {
        goto LABEL_118;
      }
      unint64_t v129 = v131;
    }
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v287;
    if (v130)
    {
      sub_253963030();
      v133();
    }
    else
    {
      *((void *)v287 + (v129 >> 6) + 8) |= 1 << v129;
      sub_2534AF234();
      v102();
      sub_253963030();
      sub_25347FA84();
      v124();
      uint64_t v134 = *(void *)(isUniquelyReferenced_nonNull_native + 16);
      BOOL v109 = __OFADD__(v134, 1);
      uint64_t v135 = v134 + 1;
      if (v109) {
        goto LABEL_108;
      }
      *(void *)(isUniquelyReferenced_nonNull_native + 16) = v135;
    }
    uint64_t v102 = v287;
    swift_bridgeObjectRelease();
    uint64_t isUniquelyReferenced_nonNull_native = *v263;
    sub_2534D9220();
    ((void (*)(void))isUniquelyReferenced_nonNull_native)();
    sub_2534DA678();
    sub_2534659CC();
    v136();
    sub_2534D9220();
    ((void (*)(void))isUniquelyReferenced_nonNull_native)();
    sub_253472458((uint64_t)v283, &qword_269CDCC30);
    uint64_t v1 = 0;
    uint64_t v104 = v276;
    uint64_t v10 = v271;
    uint64_t v103 = v278;
  }
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  sub_253472458((uint64_t)v102, &qword_269CDCBC8);
  uint64_t v287 = (void (*)(void))isUniquelyReferenced_nonNull_native;
  sub_253462A5C(&qword_269CE5170);
  uint64_t v214 = sub_253B09730();
  uint64_t v216 = v215;
  sub_253961DC0();
  uint64_t v217 = sub_2534D969C();
  *uint64_t v218 = v214;
  v218[1] = v216;
  sub_253962224(v217, (uint64_t)v218);
LABEL_112:
  swift_bridgeObjectRelease();
LABEL_102:
  sub_253961FAC();
  sub_253962FE8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
LABEL_103:
  sub_2534847C8();
}

void sub_2539542B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  sub_2534847F8();
  uint64_t v140 = v11;
  uint64_t v15 = v14;
  uint64_t v16 = sub_253462A5C(&qword_269CE21A0);
  uint64_t v17 = sub_25346CB4C(v16);
  MEMORY[0x270FA5388](v17);
  uint64_t v128 = (uint64_t)&v110 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v19);
  sub_2534B35DC();
  uint64_t v21 = sub_2534F8208(v20);
  uint64_t v135 = type metadata accessor for ContextProtoRetrievedContext(v21);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v22);
  uint64_t v127 = (uint64_t)&v110 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v24);
  sub_2534B35DC();
  uint64_t v112 = v25;
  sub_253483660();
  uint64_t v132 = sub_253B07AB0();
  sub_253465998();
  uint64_t v27 = v26;
  MEMORY[0x270FA5388](v28);
  uint64_t v126 = (char *)&v110 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v30);
  sub_2534B35DC();
  sub_2534D8F5C(v31);
  uint64_t v32 = sub_253462A5C(&qword_26B249528);
  uint64_t v33 = sub_25346CB4C(v32);
  MEMORY[0x270FA5388](v33);
  uint64_t v129 = (uint64_t)&v110 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v35);
  sub_2534B35DC();
  uint64_t v115 = v36;
  uint64_t v136 = type metadata accessor for TranscriptProtoStatementID(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v37);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v38);
  sub_2534B35DC();
  uint64_t v133 = sub_253962E98(v39);
  sub_253465998();
  uint64_t v41 = v40;
  MEMORY[0x270FA5388](v42);
  uint64_t v138 = (char *)&v110 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v44);
  int v118 = (char *)&v110 - v45;
  uint64_t v46 = sub_253483660();
  type metadata accessor for RetrievedContextStatement(v46);
  sub_253465998();
  uint64_t v130 = v48;
  uint64_t v131 = v47;
  MEMORY[0x270FA5388](v47);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v49);
  uint64_t v123 = (uint64_t)&v110 - v50;
  sub_2534B324C();
  MEMORY[0x270FA5388](v51);
  uint64_t v137 = (uint64_t)&v110 - v52;
  sub_2534B324C();
  MEMORY[0x270FA5388](v53);
  sub_2534B35DC();
  uint64_t v117 = v54;
  uint64_t v55 = sub_253483660();
  uint64_t v134 = type metadata accessor for TranscriptProtoRetrievedContextStatement(v55);
  sub_253465998();
  uint64_t v57 = v56;
  MEMORY[0x270FA5388](v58);
  sub_2534D9C38();
  MEMORY[0x270FA5388](v59);
  sub_2534B3318();
  uint64_t v139 = v60;
  sub_2534B324C();
  MEMORY[0x270FA5388](v61);
  uint64_t v119 = (uint64_t)&v110 - v62;
  sub_2534B324C();
  MEMORY[0x270FA5388](v63);
  uint64_t v120 = (uint64_t)&v110 - v64;
  unint64_t v65 = *(void *)(v15 + 16);
  sub_253962284(MEMORY[0x263F8EE78]);
  sub_2539E8420();
  uint64_t v116 = v15;
  uint64_t v111 = v41;
  uint64_t v110 = v27;
  if (v65)
  {
    sub_2539625E8();
    uint64_t v124 = v66;
    uint64_t v125 = v67;
    uint64_t v121 = v27 + 32;
    uint64_t v122 = v41 + 32;
    swift_bridgeObjectRetain();
    uint64_t v68 = 0;
    while (v125 != v68)
    {
      uint64_t v69 = v139;
      sub_253961FFC(v124 + *(void *)(v57 + 72) * v68, v139, (void (*)(void))type metadata accessor for TranscriptProtoRetrievedContextStatement);
      sub_253962954(v69);
      uint64_t v70 = v129;
      sub_253961F60(v12, v129, &qword_26B249528);
      sub_2534D8B48(v70, 1, v136);
      if (v71)
      {
        sub_253472458(v70, &qword_26B249528);
        uint64_t v141 = v136;
        sub_253462A5C(&qword_269CE5160);
        sub_25396232C();
        sub_25396263C();
        uint64_t v99 = sub_2534D969C();
        *uint64_t v100 = v10;
        v100[1] = v70;
        sub_253962224(v99, (uint64_t)v100);
        sub_253961FAC();
LABEL_31:
        swift_bridgeObjectRelease();
        swift_release();
        sub_253961FAC();
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
      sub_253962058(v70, v10, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
      swift_bridgeObjectRetain();
      sub_2539630BC();
      sub_253B059B0();
      sub_253961FAC();
      uint64_t v72 = v128;
      sub_253961F60(v12 + *(int *)(v134 + 20), v128, &qword_269CE21A0);
      sub_2534D8B48(v72, 1, v135);
      if (v71)
      {
        sub_253472458(v72, &qword_269CE21A0);
        uint64_t v141 = v135;
        sub_253462A5C(&qword_269CE5048);
        sub_25396232C();
        sub_25396263C();
        uint64_t v101 = sub_2534D969C();
        uint64_t *v102 = v10;
        v102[1] = v72;
        sub_253962224(v101, (uint64_t)v102);
        sub_253961FAC();
        (*(void (**)(char *, uint64_t))(v111 + 8))(v138, v133);
        goto LABEL_31;
      }
      sub_253962058(v72, v127, (void (*)(void))type metadata accessor for ContextProtoRetrievedContext);
      uint64_t v73 = v140;
      RetrievedContext.init(transcript:)();
      uint64_t v140 = v73;
      if (v73)
      {
        sub_253961FAC();
        sub_2534659CC();
        v103();
        goto LABEL_31;
      }
      sub_2534D8E14();
      v74();
      sub_2534D8E14();
      v75();
      uint64_t v76 = type metadata accessor for TranscriptProtoRetrievedContextStatement;
      sub_253961FAC();
      uint64_t v77 = v123;
      sub_253962058(v13, v123, (void (*)(void))type metadata accessor for RetrievedContextStatement);
      sub_253962058(v77, v137, (void (*)(void))type metadata accessor for RetrievedContextStatement);
      sub_253961FAC();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253962B3C();
        uint64_t v76 = a10;
      }
      unint64_t v79 = *((void *)v76 + 2);
      unint64_t v78 = *((void *)v76 + 3);
      if (v79 >= v78 >> 1)
      {
        sub_25396226C(v78);
        sub_2539E8420();
        uint64_t v76 = a10;
      }
      ++v68;
      *((void *)v76 + 2) = v79 + 1;
      sub_2539623C4();
      sub_253962058(v137, v80, (void (*)(void))type metadata accessor for RetrievedContextStatement);
      if (v65 == v68) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_38:
    __break(1u);
  }
  else
  {
    sub_253962F60();
LABEL_14:
    sub_253962548();
    if (!v71)
    {
      uint64_t v82 = (void (**)(uint64_t, char *, uint64_t))(v111 + 32);
      uint64_t v83 = (void (**)(uint64_t, uint64_t, uint64_t))(v110 + 32);
      while (1)
      {
        if (v65 >= v81) {
          goto LABEL_38;
        }
        unint64_t v84 = sub_2539622A8();
        uint64_t v85 = v120;
        sub_253961FFC(v84, v120, (void (*)(void))type metadata accessor for TranscriptProtoRetrievedContextStatement);
        uint64_t v86 = v85;
        uint64_t v87 = v119;
        sub_253961FFC(v86, v119, (void (*)(void))type metadata accessor for TranscriptProtoRetrievedContextStatement);
        uint64_t v88 = v115;
        sub_253961F60(v87, v115, &qword_26B249528);
        sub_2534D8B48(v88, 1, v136);
        if (v71) {
          break;
        }
        uint64_t v89 = v113;
        sub_253962058(v88, v113, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
        uint64_t v90 = *(void *)(v89 + 16);
        swift_bridgeObjectRetain();
        sub_253B059B0();
        uint64_t v91 = v119;
        sub_253961FAC();
        uint64_t v92 = v114;
        sub_253961F60(v91 + *(int *)(v134 + 20), v114, &qword_269CE21A0);
        sub_2534D8B48(v92, 1, v135);
        if (v71)
        {
          sub_253472458(v92, &qword_269CE21A0);
          uint64_t v141 = v135;
          sub_253462A5C(&qword_269CE5048);
          sub_25396232C();
          sub_25396263C();
          uint64_t v106 = sub_2534D969C();
          *uint64_t v107 = &qword_26B249528;
          v107[1] = v92;
          sub_253962224(v106, (uint64_t)v107);
          sub_253961FAC();
          sub_2534659CC();
          v108();
          goto LABEL_35;
        }
        sub_253962058(v92, v112, (void (*)(void))type metadata accessor for ContextProtoRetrievedContext);
        sub_253962838();
        uint64_t v93 = v140;
        RetrievedContext.init(transcript:)();
        uint64_t v140 = v93;
        if (v93)
        {
          sub_253961FAC();
          sub_2534659CC();
          v109();
          goto LABEL_35;
        }
        uint64_t v94 = type metadata accessor for TranscriptProtoRetrievedContextStatement;
        sub_253961FAC();
        uint64_t v95 = v117;
        (*v82)(v117, v118, v133);
        (*v83)(v95 + *(int *)(v131 + 20), v90, v132);
        sub_253961FAC();
        if ((sub_2539621FC() & 1) == 0)
        {
          sub_253962B3C();
          uint64_t v94 = a10;
        }
        unint64_t v97 = *((void *)v94 + 2);
        unint64_t v96 = *((void *)v94 + 3);
        if (v97 >= v96 >> 1)
        {
          sub_253962434(v96);
          sub_2539E8420();
          uint64_t v94 = a10;
        }
        ++v65;
        *((void *)v94 + 2) = v97 + 1;
        sub_2539623C4();
        sub_253962058(v117, v98, (void (*)(void))type metadata accessor for RetrievedContextStatement);
        sub_253962548();
        if (v71) {
          goto LABEL_16;
        }
      }
      sub_253472458(v88, &qword_26B249528);
      uint64_t v141 = v136;
      sub_253462A5C(&qword_269CE5160);
      sub_25396232C();
      sub_25396263C();
      uint64_t v104 = sub_2534D969C();
      *uint64_t v105 = &qword_26B249528;
      v105[1] = v88;
      sub_253962224(v104, (uint64_t)v105);
      sub_253961FAC();
LABEL_35:
      sub_253963000();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_36;
    }
LABEL_16:
    sub_253962880();
LABEL_36:
    sub_2539624FC();
    sub_2534847C8();
  }
}

void sub_253954EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  sub_2534847F8();
  uint64_t v14 = sub_253962DF0();
  uint64_t Results = type metadata accessor for TranscriptProtoQueryResults(v14);
  uint64_t v16 = sub_25346CB34(Results);
  uint64_t v18 = v17;
  MEMORY[0x270FA5388](v16);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v19);
  sub_25351C738();
  MEMORY[0x270FA5388](v20);
  uint64_t v67 = (uint64_t)&v67 - v21;
  sub_2534B324C();
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  sub_253963138(v23, v24, v25, v26, v27, v28, v29, v30, v67);
  unint64_t v31 = *(void *)(v11 + 16);
  sub_253962624(MEMORY[0x263F8EE78]);
  sub_2539E8484();
  uint64_t v68 = (uint64_t (*)(uint64_t))v11;
  uint64_t v72 = v18;
  if (v31)
  {
    sub_2539625E8();
    uint64_t v70 = v32;
    uint64_t v71 = v33;
    swift_bridgeObjectRetain();
    uint64_t v34 = 0;
    while (v71 != v34)
    {
      uint64_t v35 = type metadata accessor for TranscriptProtoQueryResults;
      sub_253961FFC(v70 + *(void *)(v72 + 72) * v34, v12, (void (*)(void))type metadata accessor for TranscriptProtoQueryResults);
      sub_253961FFC(v12, v13, (void (*)(void))type metadata accessor for TranscriptProtoQueryResults);
      uint64_t v36 = swift_bridgeObjectRetain();
      sub_2539526A4(v36, v37, v38, v39, v40, v41, v42, v43, v67, v68);
      uint64_t v45 = v44;
      sub_253961FAC();
      if (v10)
      {
        swift_bridgeObjectRelease();
        swift_release();
        sub_253961FAC();
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      sub_253961FAC();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253962BA8();
        uint64_t v35 = a10;
      }
      unint64_t v47 = *((void *)v35 + 2);
      unint64_t v46 = *((void *)v35 + 3);
      if (v47 >= v46 >> 1)
      {
        sub_253962434(v46);
        sub_2539E8484();
        uint64_t v35 = a10;
      }
      ++v34;
      *((void *)v35 + 2) = v47 + 1;
      *((void *)v35 + v47 + 4) = v45;
      if (v31 == v34) {
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
  sub_253962F60();
LABEL_12:
  uint64_t v48 = v68;
  unint64_t v49 = *((void *)v68 + 2);
  if (v31 != v49)
  {
    uint64_t v50 = v72;
    uint64_t v51 = v67;
    while (v31 < v49)
    {
      sub_2539626C0();
      uint64_t v53 = v69;
      sub_253961FFC((uint64_t)v48 + v52 + *(void *)(v50 + 72) * v31, v69, (void (*)(void))type metadata accessor for TranscriptProtoQueryResults);
      sub_253961FFC(v53, v51, (void (*)(void))type metadata accessor for TranscriptProtoQueryResults);
      uint64_t v54 = swift_bridgeObjectRetain();
      sub_2539526A4(v54, v55, v56, v57, v58, v59, v60, v61, v67, v68);
      uint64_t v63 = v62;
      uint64_t v64 = type metadata accessor for TranscriptProtoQueryResults;
      sub_253961FAC();
      sub_2534DA828();
      sub_253961FAC();
      if (v10)
      {
        swift_bridgeObjectRelease();
        sub_253962DCC();
        swift_release();
        goto LABEL_25;
      }
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253962BA8();
        uint64_t v64 = a10;
      }
      sub_25396250C();
      if (v66)
      {
        sub_25396226C(v65);
        sub_2539E8484();
        uint64_t v64 = a10;
      }
      ++v31;
      *((void *)v64 + 2) = v12;
      *((void *)v64 + v53 + 4) = v63;
      unint64_t v49 = *((void *)v48 + 2);
      if (v31 == v49) {
        goto LABEL_13;
      }
    }
LABEL_27:
    __break(1u);
    return;
  }
LABEL_13:
  sub_253962880();
LABEL_25:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_2539551EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  sub_2534847F8();
  uint64_t v14 = sub_2539626F0();
  uint64_t v15 = type metadata accessor for StatementResult(v14);
  uint64_t v16 = sub_25346CB34(v15);
  uint64_t v51 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v52 = (char *)v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v19);
  uint64_t v20 = sub_253962344();
  uint64_t v21 = type metadata accessor for TranscriptProtoStatementResult(v20);
  uint64_t v22 = sub_25346CB34(v21);
  MEMORY[0x270FA5388](v22);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v23);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v24);
  v49[0] = (uint64_t)v49 - v25;
  sub_2534B324C();
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  sub_2539624BC(v27, v28, v29, v30, v31, v32, v33, v34, v49[0]);
  sub_253962284(MEMORY[0x263F8EE78]);
  sub_2539E8524();
  sub_253962F78();
  if (v13)
  {
    sub_253962370();
    uint64_t v35 = 0;
    while (1)
    {
      sub_253962F30();
      if (v36) {
        break;
      }
      uint64_t v37 = sub_253962554();
      sub_253961FFC(v37, v12, (void (*)(void))type metadata accessor for TranscriptProtoStatementResult);
      sub_253962780();
      sub_2539626D0();
      StatementResult.init(transcript:)();
      if (v11)
      {
        swift_release();
        sub_2539630A4();
        sub_253961FAC();
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      sub_253961FAC();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253962C80();
        uint64_t v10 = a10;
      }
      sub_25396250C();
      if (v39)
      {
        sub_25396226C(v38);
        sub_2539E8524();
        uint64_t v10 = a10;
      }
      ++v35;
      *((void *)v10 + 2) = type metadata accessor for TranscriptProtoStatementResult;
      sub_25394D7F8();
      sub_253962058(v40, v41, (void (*)(void))type metadata accessor for StatementResult);
      sub_2539630E0();
      if (v36) {
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
LABEL_13:
  sub_253962548();
  if (!v36)
  {
    uint64_t v43 = v49[1];
    while (v13 < v42)
    {
      unint64_t v44 = sub_2539622A8();
      uint64_t v45 = type metadata accessor for TranscriptProtoStatementResult;
      uint64_t v46 = v50;
      sub_253961FFC(v44, v50, (void (*)(void))type metadata accessor for TranscriptProtoStatementResult);
      sub_25396279C();
      sub_2539627C4();
      StatementResult.init(transcript:)();
      sub_253961FAC();
      if (v11)
      {
        swift_bridgeObjectRelease();
        sub_253962DCC();
        swift_release();
        goto LABEL_27;
      }
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253962C80();
        uint64_t v45 = a10;
      }
      sub_253962498();
      if (v39)
      {
        sub_253962194(v47);
        sub_2539E8524();
        uint64_t v45 = a10;
      }
      ++v13;
      *((void *)v45 + 2) = v46;
      sub_25394D7F8();
      sub_253962058(v43, v48, (void (*)(void))type metadata accessor for StatementResult);
      sub_253962548();
      if (v36) {
        goto LABEL_15;
      }
    }
LABEL_29:
    __break(1u);
    return;
  }
LABEL_15:
  sub_253962880();
LABEL_27:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_253955520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  sub_2534847F8();
  uint64_t v14 = sub_2539626F0();
  uint64_t v15 = type metadata accessor for ProgramStatement(v14);
  uint64_t v16 = sub_25346CB34(v15);
  uint64_t v51 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v52 = (char *)v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v19);
  uint64_t v20 = sub_253962344();
  uint64_t v21 = type metadata accessor for TranscriptProtoProgramStatement(v20);
  uint64_t v22 = sub_25346CB34(v21);
  MEMORY[0x270FA5388](v22);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v23);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v24);
  v49[0] = (uint64_t)v49 - v25;
  sub_2534B324C();
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  sub_2539624BC(v27, v28, v29, v30, v31, v32, v33, v34, v49[0]);
  sub_253962284(MEMORY[0x263F8EE78]);
  sub_2539E85EC();
  sub_253962F78();
  if (v13)
  {
    sub_253962370();
    uint64_t v35 = 0;
    while (1)
    {
      sub_253962F30();
      if (v36) {
        break;
      }
      uint64_t v37 = sub_253962554();
      sub_253961FFC(v37, v12, (void (*)(void))type metadata accessor for TranscriptProtoProgramStatement);
      sub_253962780();
      sub_2539626D0();
      ProgramStatement.init(transcript:)();
      if (v11)
      {
        swift_release();
        sub_2539630A4();
        sub_253961FAC();
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      sub_253961FAC();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253962BF0();
        uint64_t v10 = a10;
      }
      sub_25396250C();
      if (v39)
      {
        sub_25396226C(v38);
        sub_2539E85EC();
        uint64_t v10 = a10;
      }
      ++v35;
      *((void *)v10 + 2) = type metadata accessor for TranscriptProtoProgramStatement;
      sub_25394D7F8();
      sub_253962058(v40, v41, (void (*)(void))type metadata accessor for ProgramStatement);
      sub_2539630E0();
      if (v36) {
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
LABEL_13:
  sub_253962548();
  if (!v36)
  {
    uint64_t v43 = v49[1];
    while (v13 < v42)
    {
      unint64_t v44 = sub_2539622A8();
      uint64_t v45 = type metadata accessor for TranscriptProtoProgramStatement;
      uint64_t v46 = v50;
      sub_253961FFC(v44, v50, (void (*)(void))type metadata accessor for TranscriptProtoProgramStatement);
      sub_25396279C();
      sub_2539627C4();
      ProgramStatement.init(transcript:)();
      sub_253961FAC();
      if (v11)
      {
        swift_bridgeObjectRelease();
        sub_253962DCC();
        swift_release();
        goto LABEL_27;
      }
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253962BF0();
        uint64_t v45 = a10;
      }
      sub_253962498();
      if (v39)
      {
        sub_253962194(v47);
        sub_2539E85EC();
        uint64_t v45 = a10;
      }
      ++v13;
      *((void *)v45 + 2) = v46;
      sub_25394D7F8();
      sub_253962058(v43, v48, (void (*)(void))type metadata accessor for ProgramStatement);
      sub_253962548();
      if (v36) {
        goto LABEL_15;
      }
    }
LABEL_29:
    __break(1u);
    return;
  }
LABEL_15:
  sub_253962880();
LABEL_27:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_253955854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  uint64_t v14 = v11;
  uint64_t v15 = sub_2534D9690();
  uint64_t Data = type metadata accessor for TranscriptProtoQueryData(v15);
  uint64_t v17 = sub_25346CB4C(Data);
  MEMORY[0x270FA5388](v17);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v18);
  uint64_t v111 = (char *)&v108 - v19;
  uint64_t v20 = sub_253483660();
  uint64_t v21 = type metadata accessor for QueryData(v20);
  uint64_t v22 = sub_25346CB4C(v21);
  MEMORY[0x270FA5388](v22);
  uint64_t v128 = (uint64_t)&v108 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v24);
  sub_2534B35DC();
  uint64_t v114 = v25;
  uint64_t v26 = sub_253483660();
  uint64_t v27 = type metadata accessor for TranscriptProtoActionParameterContext(v26);
  uint64_t v28 = sub_25346CB4C(v27);
  MEMORY[0x270FA5388](v28);
  uint64_t v122 = (uint64_t)&v108 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v30);
  uint64_t v110 = (char *)&v108 - v31;
  uint64_t v32 = sub_253483660();
  uint64_t v33 = type metadata accessor for ActionParameterContext(v32);
  uint64_t v34 = sub_25346CB4C(v33);
  MEMORY[0x270FA5388](v34);
  uint64_t v129 = (uint64_t)&v108 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v36);
  uint64_t v115 = (uint64_t)&v108 - v37;
  uint64_t v38 = sub_253483660();
  type metadata accessor for ParameterQuery(v38);
  sub_253465998();
  uint64_t v125 = v40;
  uint64_t v126 = v39;
  MEMORY[0x270FA5388](v39);
  uint64_t v127 = (uint64_t)&v108 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v42);
  uint64_t v113 = (uint64_t)&v108 - v43;
  uint64_t v44 = sub_253483660();
  uint64_t v45 = type metadata accessor for TranscriptProtoParameterQuery(v44);
  sub_253465998();
  uint64_t v47 = v46;
  MEMORY[0x270FA5388](v48);
  sub_2534D9C38();
  MEMORY[0x270FA5388](v49);
  uint64_t v130 = (uint64_t)&v108 - v50;
  sub_2534B324C();
  MEMORY[0x270FA5388](v51);
  uint64_t v109 = (uint64_t)&v108 - v52;
  sub_2534B324C();
  MEMORY[0x270FA5388](v53);
  sub_2534B35DC();
  uint64_t v119 = v54;
  unint64_t v55 = *(void *)(v10 + 16);
  sub_253962E50(MEMORY[0x263F8EE78]);
  sub_2539E8650();
  unint64_t v56 = v55;
  uint64_t v112 = v10;
  uint64_t v123 = v47;
  uint64_t v124 = v45;
  if (v55)
  {
    sub_2539625D8();
    uint64_t v120 = v57;
    uint64_t v121 = v58;
    swift_bridgeObjectRetain();
    uint64_t v59 = 0;
    uint64_t v117 = v13;
    unint64_t v118 = v55;
    uint64_t v116 = v12;
    while (v121 != v59)
    {
      uint64_t v60 = v130;
      sub_253961FFC(v120 + *(void *)(v47 + 72) * v59, v130, (void (*)(void))type metadata accessor for TranscriptProtoParameterQuery);
      sub_253962954(v60);
      uint64_t v61 = v122;
      sub_25395D81C(&qword_269CE1FA8, type metadata accessor for TranscriptProtoActionParameterContext, (void (*)(void))type metadata accessor for TranscriptProtoActionParameterContext, &qword_269CE5118, v122);
      if (v14)
      {
        sub_253961FAC();
        swift_bridgeObjectRelease();
        swift_release();
        sub_253961FAC();
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      ActionParameterContext.init(transcript:)(v61, v62, v63, v64, v65, v66, v67, v68, v108, v109);
      sub_25395D81C(&qword_269CE1F98, type metadata accessor for TranscriptProtoQueryData, (void (*)(void))type metadata accessor for TranscriptProtoQueryData, &qword_269CE5110, v13);
      QueryData.init(transcript:)(v13);
      uint64_t v14 = 0;
      swift_bridgeObjectRetain();
      Dictionary<>.init(transcript:)();
      uint64_t v70 = v69;
      uint64_t v71 = (uint64_t *)(v12 + *(int *)(v45 + 28));
      uint64_t v72 = *v71;
      uint64_t v73 = v71[1];
      swift_bridgeObjectRetain();
      sub_253961FAC();
      uint64_t v75 = v126;
      uint64_t v74 = v127;
      uint64_t v76 = (void *)(v127 + *(int *)(v126 + 28));
      sub_253962058(v129, v127, (void (*)(void))type metadata accessor for ActionParameterContext);
      sub_253962058(v128, v74 + *(int *)(v75 + 20), (void (*)(void))type metadata accessor for QueryData);
      *(void *)(v74 + *(int *)(v75 + 24)) = v70;
      *uint64_t v76 = v72;
      v76[1] = v73;
      sub_253961FAC();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253962C14();
        uint64_t v70 = a10;
      }
      uint64_t v47 = v123;
      unint64_t v78 = *(void *)(v70 + 16);
      unint64_t v77 = *(void *)(v70 + 24);
      uint64_t v12 = v116;
      uint64_t v13 = v117;
      if (v78 >= v77 >> 1)
      {
        sub_253962434(v77);
        sub_2539E8650();
        uint64_t v70 = a10;
      }
      ++v59;
      *(void *)(v70 + 16) = v78 + 1;
      sub_253962314();
      sub_253962058(v127, v79 + v80 * v78, (void (*)(void))type metadata accessor for ParameterQuery);
      unint64_t v56 = v118;
      uint64_t v45 = v124;
      if (v118 == v59) {
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
  sub_253962DB4();
LABEL_12:
  unint64_t v81 = *(void *)(v112 + 16);
  if (v56 != v81)
  {
    uint64_t v83 = (uint64_t)v110;
    uint64_t v82 = (uint64_t)v111;
    uint64_t v84 = v109;
    while (v56 < v81)
    {
      sub_253962DA4();
      uint64_t v86 = v85 + *(void *)(v47 + 72) * v56;
      uint64_t v87 = v119;
      sub_253961FFC(v86, v119, (void (*)(void))type metadata accessor for TranscriptProtoParameterQuery);
      sub_253962954(v87);
      sub_25395D81C(&qword_269CE1FA8, type metadata accessor for TranscriptProtoActionParameterContext, (void (*)(void))type metadata accessor for TranscriptProtoActionParameterContext, &qword_269CE5118, v83);
      if (v14)
      {
        sub_253961FAC();
        sub_253961FAC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_25;
      }
      ActionParameterContext.init(transcript:)(v83, v88, v89, v90, v91, v92, v93, v94, v108, v109);
      sub_25395D81C(&qword_269CE1F98, type metadata accessor for TranscriptProtoQueryData, (void (*)(void))type metadata accessor for TranscriptProtoQueryData, &qword_269CE5110, v82);
      QueryData.init(transcript:)(v82);
      uint64_t v14 = 0;
      swift_bridgeObjectRetain();
      Dictionary<>.init(transcript:)();
      uint64_t v96 = v95;
      unint64_t v97 = (uint64_t *)(v84 + *(int *)(v45 + 28));
      uint64_t v98 = *v97;
      uint64_t v99 = v97[1];
      swift_bridgeObjectRetain();
      sub_253961FAC();
      uint64_t v100 = v126;
      uint64_t v101 = v113;
      uint64_t v102 = (void *)(v113 + *(int *)(v126 + 28));
      sub_253962058(v115, v113, (void (*)(void))type metadata accessor for ActionParameterContext);
      sub_253962058(v114, v101 + *(int *)(v100 + 20), (void (*)(void))type metadata accessor for QueryData);
      *(void *)(v101 + *(int *)(v100 + 24)) = v96;
      void *v102 = v98;
      v102[1] = v99;
      sub_253961FAC();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253962C14();
        uint64_t v96 = a10;
      }
      uint64_t v83 = (uint64_t)v110;
      uint64_t v82 = (uint64_t)v111;
      unint64_t v103 = v56;
      unint64_t v104 = *(void *)(v96 + 16);
      uint64_t v45 = v124;
      uint64_t v84 = v109;
      if (v104 >= *(void *)(v96 + 24) >> 1)
      {
        sub_2539E8650();
        unint64_t v103 = v56;
        uint64_t v96 = a10;
      }
      unint64_t v105 = v103 + 1;
      *(void *)(v96 + 16) = v104 + 1;
      sub_253962314();
      sub_253962058(v113, v106 + v107 * v104, (void (*)(void))type metadata accessor for ParameterQuery);
      unint64_t v56 = v105;
      unint64_t v81 = *(void *)(v112 + 16);
      uint64_t v47 = v123;
      if (v105 == v81) {
        goto LABEL_13;
      }
    }
LABEL_27:
    __break(1u);
    return;
  }
LABEL_13:
  swift_bridgeObjectRelease_n();
LABEL_25:
  sub_2539624FC();
  sub_2534847C8();
}

void sub_2539561E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  sub_2534847F8();
  uint64_t v224 = v10;
  uint64_t v12 = v11;
  uint64_t v13 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  sub_2534659D8();
  uint64_t v256 = v15;
  sub_2534B324C();
  MEMORY[0x270FA5388](v16);
  sub_2534B35DC();
  uint64_t v273 = sub_253962ED0(v17);
  sub_253465998();
  uint64_t v269 = v18;
  MEMORY[0x270FA5388](v19);
  sub_2534659D8();
  uint64_t v253 = v20;
  sub_2534B324C();
  MEMORY[0x270FA5388](v21);
  sub_2534B3318();
  uint64_t v252 = v22;
  sub_2534B324C();
  MEMORY[0x270FA5388](v23);
  sub_2534B3318();
  uint64_t v223 = v24;
  sub_2534B324C();
  MEMORY[0x270FA5388](v25);
  sub_2534B35DC();
  uint64_t v268 = sub_253962EB4(v26);
  sub_253465998();
  uint64_t v221 = v27;
  MEMORY[0x270FA5388](v28);
  sub_2534659D8();
  uint64_t v251 = v29;
  sub_2534B324C();
  MEMORY[0x270FA5388](v30);
  sub_2534B3318();
  uint64_t v250 = v31;
  sub_2534B324C();
  MEMORY[0x270FA5388](v32);
  sub_2534B3318();
  uint64_t v222 = v33;
  sub_2534B324C();
  MEMORY[0x270FA5388](v34);
  sub_2534B35DC();
  sub_2534D8F5C(v35);
  uint64_t v36 = sub_253462A5C(&qword_269CDFA30);
  uint64_t v37 = sub_25346CB4C(v36);
  MEMORY[0x270FA5388](v37);
  sub_2534659D8();
  uint64_t v260 = v38;
  sub_2534B324C();
  MEMORY[0x270FA5388](v39);
  sub_2534B35DC();
  uint64_t v231 = v40;
  uint64_t v272 = sub_253B08E60();
  sub_253465998();
  uint64_t v42 = v41;
  MEMORY[0x270FA5388](v43);
  sub_2534659D8();
  uint64_t v259 = v44;
  sub_2534B324C();
  MEMORY[0x270FA5388](v45);
  sub_2534B3318();
  uint64_t v258 = v46;
  sub_2534B324C();
  MEMORY[0x270FA5388](v47);
  uint64_t v227 = (char *)v220 - v48;
  sub_2534B324C();
  MEMORY[0x270FA5388](v49);
  sub_2534B35DC();
  uint64_t v226 = v50;
  uint64_t v271 = sub_253B09150();
  sub_253465998();
  uint64_t v52 = v51;
  MEMORY[0x270FA5388](v53);
  sub_2534659D8();
  uint64_t v257 = v54;
  sub_2534B324C();
  MEMORY[0x270FA5388](v55);
  uint64_t v279 = (char *)v220 - v56;
  sub_2534B324C();
  MEMORY[0x270FA5388](v57);
  sub_2534B3318();
  uint64_t v225 = v58;
  sub_2534B324C();
  MEMORY[0x270FA5388](v59);
  sub_2534B35DC();
  sub_2534D8F5C(v60);
  uint64_t v61 = sub_253462A5C(&qword_269CE21B8);
  uint64_t v62 = sub_25346CB4C(v61);
  MEMORY[0x270FA5388](v62);
  sub_2534659D8();
  uint64_t v262 = v63;
  sub_2534B324C();
  MEMORY[0x270FA5388](v64);
  sub_2534B35DC();
  uint64_t v229 = v65;
  uint64_t v66 = type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v67);
  uint64_t v284 = (uint64_t)v220 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v69);
  uint64_t v264 = (void *)((char *)v220 - v70);
  uint64_t v267 = sub_253B081D0();
  sub_253465998();
  uint64_t v72 = v71;
  MEMORY[0x270FA5388](v73);
  sub_2534659D8();
  uint64_t v249 = v74;
  sub_2534B324C();
  MEMORY[0x270FA5388](v75);
  sub_2534B35DC();
  sub_2534D8F5C(v76);
  uint64_t v77 = sub_253462A5C(&qword_26B249528);
  uint64_t v78 = sub_25346CB4C(v77);
  MEMORY[0x270FA5388](v78);
  uint64_t v263 = (char *)v220 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v80);
  sub_2534B35DC();
  uint64_t v230 = v81;
  uint64_t v276 = type metadata accessor for TranscriptProtoStatementID(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v82);
  uint64_t v261 = (char *)v220 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v84);
  sub_2534B35DC();
  uint64_t v274 = sub_253962E98(v85);
  sub_253465998();
  uint64_t v87 = v86;
  MEMORY[0x270FA5388](v88);
  uint64_t v280 = (char *)v220 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v90);
  uint64_t v236 = (char *)v220 - v91;
  uint64_t v92 = sub_253483660();
  type metadata accessor for DynamicEnumerationEntityStatement(v92);
  sub_253465998();
  uint64_t v265 = v94;
  uint64_t v266 = v93;
  MEMORY[0x270FA5388](v93);
  uint64_t v278 = (uint64_t)v220 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v96);
  uint64_t v233 = (uint64_t)v220 - v97;
  uint64_t v98 = sub_253483660();
  uint64_t v275 = type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement(v98);
  sub_253465998();
  uint64_t v100 = v99;
  MEMORY[0x270FA5388](v101);
  uint64_t v281 = (char *)v220 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v103);
  uint64_t v282 = (uint64_t)v220 - v104;
  sub_2534B324C();
  MEMORY[0x270FA5388](v105);
  uint64_t v240 = (uint64_t)v220 - v106;
  sub_2534B324C();
  MEMORY[0x270FA5388](v107);
  sub_2534D8F5C((uint64_t)v220 - v108);
  uint64_t v109 = *(void *)(v12 + 16);
  sub_253962E38(MEMORY[0x263F8EE78]);
  sub_2539E8704();
  uint64_t v234 = v12;
  v220[1] = v52;
  uint64_t v283 = v66;
  uint64_t v270 = v100;
  uint64_t v277 = v109;
  v220[0] = v42;
  v220[2] = v87;
  if (v109)
  {
    sub_2539626E0();
    uint64_t v254 = v110;
    uint64_t v247 = v42 + 32;
    uint64_t v255 = *(void *)(v12 + 16);
    uint64_t v246 = v42 + 16;
    uint64_t v248 = v42 + 8;
    uint64_t v245 = v52 + 32;
    uint64_t v243 = v269 + 32;
    uint64_t v242 = v269 + 16;
    uint64_t v244 = v269 + 8;
    uint64_t v239 = v221 + 32;
    uint64_t v238 = v87 + 32;
    uint64_t v237 = v72 + 32;
    swift_bridgeObjectRetain();
    uint64_t v111 = 0;
    uint64_t v112 = v224;
    uint64_t v113 = (uint64_t)v281;
    while (1)
    {
      uint64_t v114 = v273;
      if (v255 == v111) {
        break;
      }
      uint64_t v115 = v254 + *(void *)(v100 + 72) * v111;
      uint64_t v116 = v282;
      sub_253961FFC(v115, v282, (void (*)(void))type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement);
      sub_253961FFC(v116, v113, (void (*)(void))type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement);
      sub_253962F54();
      sub_253961F60(v117, v118, &qword_26B249528);
      uint64_t v119 = sub_2539627D4();
      sub_2534D8B48(v119, v120, v276);
      if (v121)
      {
        sub_253472458(v116, &qword_26B249528);
        uint64_t v285 = v276;
        sub_253462A5C(&qword_269CE5160);
        sub_25396232C();
        sub_25396263C();
        uint64_t v192 = sub_2534D969C();
        uint64_t *v193 = v116;
        v193[1] = (uint64_t)type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement;
        sub_253962224(v192, (uint64_t)v193);
        sub_253961FAC();
        goto LABEL_38;
      }
      sub_253962F54();
      sub_253962058(v122, v123, v124);
      uint64_t v125 = *(void *)(v116 + 8);
      swift_bridgeObjectRetain();
      sub_253B059B0();
      sub_253961FAC();
      sub_253962F54();
      sub_253961F60(v126, v127, &qword_269CE21B8);
      uint64_t v128 = sub_2539627D4();
      uint64_t v129 = v283;
      sub_2534D8B48(v128, v130, v283);
      if (v121)
      {
        sub_253472458(v116, &qword_269CE21B8);
        uint64_t v285 = v129;
        sub_253462A5C(&qword_269CE5040);
        sub_25396232C();
        sub_25396263C();
        uint64_t v194 = sub_2534D969C();
        *uint64_t v195 = v116;
        v195[1] = v125;
        sub_253962224(v194, (uint64_t)v195);
        sub_253961FAC();
        sub_2535794C4();
        v196(v280, v274);
        goto LABEL_38;
      }
      uint64_t v131 = v116;
      uint64_t v132 = v284;
      sub_253962058(v131, v284, (void (*)(void))type metadata accessor for ContextProtoDynamicEnumerationEntity);
      uint64_t v133 = *(void *)(v132 + 8);
      sub_253962F54();
      sub_253961F60(v134, v135, &qword_269CDFA30);
      uint64_t v136 = sub_2539627D4();
      uint64_t v137 = v272;
      sub_2534D8B48(v136, v138, v272);
      if (v121)
      {
        swift_bridgeObjectRetain();
        sub_253472458(v132, &qword_269CDFA30);
        uint64_t v285 = v137;
        sub_253462A5C(&qword_269CE5168);
        uint64_t v197 = sub_25396232C();
        uint64_t v199 = v198;
        sub_253961DC0();
        uint64_t v200 = sub_2534D969C();
        uint64_t *v201 = v197;
        v201[1] = v199;
        sub_253962224(v200, (uint64_t)v201);
        sub_253961FAC();
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
      sub_2534DA678();
      sub_253963098();
      sub_2534D8E14();
      v139();
      sub_2534DA678();
      sub_253962E8C();
      sub_2534B3428();
      v140();
      swift_bridgeObjectRetain();
      sub_253B09140();
      if (v112)
      {
        sub_2534659CC();
        v202();
        sub_253961FAC();
        swift_bridgeObjectRelease();
        sub_253962F18();
        goto LABEL_37;
      }
      sub_2534659CC();
      v141();
      sub_2534DA678();
      sub_2534D8E14();
      v142();
      uint64_t v143 = v256;
      sub_253961F60(v284 + *(int *)(v283 + 24), v256, &qword_269CDCBC8);
      uint64_t v144 = sub_2536D3ACC();
      sub_2534D8B48(v144, v145, v114);
      if (v121)
      {
        sub_253472458(v143, &qword_269CDCBC8);
        uint64_t v285 = v114;
        sub_253462A5C(&qword_269CE5170);
        uint64_t v203 = sub_25396232C();
        uint64_t v205 = v204;
        sub_253961DC0();
        uint64_t v206 = sub_2534D969C();
        *uint64_t v207 = v203;
        v207[1] = v205;
        sub_253962224(v206, (uint64_t)v207);
        swift_bridgeObjectRelease();
        sub_253961FAC();
        sub_2535794C4();
        v208(v279, v271);
LABEL_36:
        sub_253962F18();
LABEL_37:
        sub_253961FAC();
        (*(void (**)(char *, uint64_t))(v133 + 8))(v280, v274);
LABEL_38:
        swift_bridgeObjectRelease();
        swift_release();
        sub_253961FAC();
        swift_bridgeObjectRelease();
        goto LABEL_47;
      }
      sub_2534DA678();
      sub_2534D8E14();
      v146();
      sub_2534DA678();
      sub_2534B3428();
      v147();
      sub_253B09110();
      uint64_t v112 = 0;
      sub_2534659CC();
      v148();
      sub_2534DA678();
      sub_253962E8C();
      sub_2534D8E14();
      v149();
      sub_253962838();
      sub_253B08190();
      sub_253961FAC();
      uint64_t v150 = type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement;
      sub_253961FAC();
      sub_2534DA678();
      sub_2534D8E14();
      v151();
      sub_253962E1C(v266);
      sub_2534DA678();
      sub_2534D8E14();
      v152();
      sub_253961FAC();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253962C38();
        uint64_t v150 = a10;
      }
      uint64_t v100 = v270;
      unint64_t v153 = *((void *)v150 + 2);
      uint64_t v113 = (uint64_t)v281;
      if (v153 >= *((void *)v150 + 3) >> 1)
      {
        sub_2539E8704();
        uint64_t v150 = a10;
      }
      ++v111;
      *((void *)v150 + 2) = v153 + 1;
      sub_253962314();
      sub_253962058(v278, v154 + v155 * v153, (void (*)(void))type metadata accessor for DynamicEnumerationEntityStatement);
      uint64_t v156 = v269;
      if (v277 == v111) {
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_49:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v156 = v269;
    uint64_t v112 = v224;
LABEL_16:
    uint64_t v157 = v234;
    unint64_t v158 = v277;
    if (v277 != *(void *)(v234 + 16))
    {
      uint64_t v281 = (char *)(v220[0] + 16);
      uint64_t v282 = v220[0] + 32;
      uint64_t v284 = v220[0] + 8;
      sub_253963018();
      uint64_t v280 = v159;
      uint64_t v278 = v156 + 32;
      uint64_t v263 = (char *)(v156 + 16);
      uint64_t v279 = (char *)(v156 + 8);
      sub_253963018();
      uint64_t v269 = v160;
      sub_253963018();
      uint64_t v262 = v162;
      uint64_t v261 = (char *)(v72 + 32);
      uint64_t v163 = v232;
      uint64_t v164 = v272;
      uint64_t v165 = v231;
      uint64_t v166 = v230;
      while (1)
      {
        if (v158 >= v161) {
          goto LABEL_49;
        }
        sub_2539626E0();
        uint64_t v169 = v241;
        sub_253961FFC(v168 + *(void *)(v167 + 72) * v158, v241, (void (*)(void))type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement);
        uint64_t v170 = v169;
        uint64_t v171 = v240;
        sub_253961FFC(v170, v240, (void (*)(void))type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement);
        sub_253961F60(v171, v166, &qword_26B249528);
        sub_2534D8B48(v166, 1, v276);
        if (v121) {
          break;
        }
        uint64_t v277 = v158;
        sub_253962058(v166, v228, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
        swift_bridgeObjectRetain();
        sub_2539630BC();
        uint64_t v172 = v283;
        sub_253B059B0();
        sub_253961FAC();
        uint64_t v173 = v229;
        sub_253961F60(v171 + *(int *)(v275 + 20), v229, &qword_269CE21B8);
        sub_2534D8B48(v173, 1, v172);
        if (v121)
        {
          sub_253472458(v173, &qword_269CE21B8);
          uint64_t v285 = v172;
          sub_253462A5C(&qword_269CE5040);
          sub_25396232C();
          sub_25396263C();
          uint64_t v211 = sub_2534D969C();
          *uint64_t v212 = v164;
          v212[1] = v172;
          sub_253962224(v211, (uint64_t)v212);
          goto LABEL_45;
        }
        uint64_t v174 = v264;
        sub_253962058(v173, (uint64_t)v264, (void (*)(void))type metadata accessor for ContextProtoDynamicEnumerationEntity);
        uint64_t v175 = *v174;
        sub_253961F60((uint64_t)v174 + *(int *)(v172 + 20), v165, &qword_269CDFA30);
        sub_2534D8B48(v165, 1, v164);
        if (v121)
        {
          swift_bridgeObjectRetain();
          sub_253472458(v165, &qword_269CDFA30);
          uint64_t v285 = v164;
          sub_253462A5C(&qword_269CE5168);
          sub_25396232C();
          sub_25396285C();
          uint64_t v213 = sub_2534D969C();
          *uint64_t v214 = v164;
          v214[1] = v157;
          sub_253962224(v213, (uint64_t)v214);
          goto LABEL_43;
        }
        sub_2534D8E14();
        v176();
        sub_2534B3428();
        v177();
        swift_bridgeObjectRetain();
        sub_253B09140();
        if (v112)
        {
          sub_25396308C();
          v215();
LABEL_43:
          sub_253963000();
          swift_bridgeObjectRelease();
LABEL_45:
          sub_253961FAC();
          sub_2535794C4();
          v219(v236, v274);
LABEL_46:
          sub_253961FAC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_47;
        }
        sub_2534659CC();
        v178();
        sub_2534D8E14();
        v179();
        sub_253961F60((uint64_t)v264 + *(int *)(v283 + 24), v163, &qword_269CDCBC8);
        uint64_t v180 = v273;
        sub_2534D8B48(v163, 1, v273);
        if (v121)
        {
          sub_253472458(v163, &qword_269CDCBC8);
          uint64_t v285 = v180;
          sub_253462A5C(&qword_269CE5170);
          sub_25396232C();
          sub_25396285C();
          uint64_t v216 = sub_2534D969C();
          *uint64_t v217 = v180;
          v217[1] = v157;
          sub_253962224(v216, (uint64_t)v217);
          swift_bridgeObjectRelease();
          sub_253963000();
          sub_2535794C4();
          v218(v235, v271);
          goto LABEL_45;
        }
        sub_2534D8E14();
        v181();
        sub_2534DA678();
        sub_2534B3428();
        v182();
        sub_253B09110();
        sub_2534659CC();
        v183();
        sub_253962E8C();
        sub_2534D8E14();
        v184();
        sub_253B08190();
        sub_253963000();
        unint64_t v185 = type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement;
        sub_253961FAC();
        sub_2534DA678();
        sub_253962E8C();
        sub_2534D8E14();
        v186();
        sub_253962E1C(v266);
        sub_2534DA678();
        sub_2534D8E14();
        v187();
        sub_253961FAC();
        if ((sub_2539621FC() & 1) == 0)
        {
          sub_253962C38();
          unint64_t v185 = a10;
        }
        uint64_t v163 = v232;
        uint64_t v164 = v272;
        uint64_t v165 = v231;
        uint64_t v166 = v230;
        sub_25396250C();
        if (v189)
        {
          sub_25396226C(v188);
          sub_2539E8704();
          unint64_t v185 = a10;
        }
        unint64_t v190 = v277 + 1;
        *((void *)v185 + 2) = v175;
        unint64_t v158 = v190;
        sub_25394D7F8();
        sub_253962058(v233, v191, (void (*)(void))type metadata accessor for DynamicEnumerationEntityStatement);
        uint64_t v157 = v234;
        unint64_t v161 = *(void *)(v234 + 16);
        if (v158 == v161) {
          goto LABEL_17;
        }
      }
      sub_253472458(v166, &qword_26B249528);
      uint64_t v285 = v276;
      sub_253462A5C(&qword_269CE5160);
      sub_25396232C();
      sub_25396263C();
      uint64_t v209 = sub_2534D969C();
      *uint64_t v210 = v164;
      v210[1] = (uint64_t)type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement;
      sub_253962224(v209, (uint64_t)v210);
      sub_253961FAC();
      goto LABEL_46;
    }
LABEL_17:
    swift_bridgeObjectRelease_n();
LABEL_47:
    sub_2539624FC();
    sub_2534847C8();
  }
}

void sub_253957884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t a1))
{
  sub_2534847F8();
  uint64_t v12 = v11;
  uint64_t v13 = sub_253462A5C(&qword_269CDCBC8);
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  uint64_t v166 = (uint64_t)v142 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = sub_253962ED0((uint64_t)v142 - v17);
  sub_253465998();
  uint64_t v171 = v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v163 = (char *)v142 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v22);
  uint64_t v162 = (char *)v142 - v23;
  sub_2534B324C();
  MEMORY[0x270FA5388](v24);
  sub_2534B3318();
  v142[4] = v25;
  sub_2534B324C();
  MEMORY[0x270FA5388](v26);
  sub_2534B35DC();
  uint64_t v174 = sub_253962EB4(v27);
  sub_253465998();
  uint64_t v29 = v28;
  MEMORY[0x270FA5388](v30);
  unint64_t v161 = (char *)v142 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v32);
  sub_2534B3318();
  uint64_t v160 = v33;
  sub_2534B324C();
  MEMORY[0x270FA5388](v34);
  sub_2534B3318();
  v142[2] = v35;
  sub_2534B324C();
  MEMORY[0x270FA5388](v36);
  sub_2534D8F5C((uint64_t)v142 - v37);
  uint64_t v38 = sub_253462A5C(&qword_269CDFA30);
  uint64_t v39 = sub_25346CB4C(v38);
  MEMORY[0x270FA5388](v39);
  uint64_t v170 = (uint64_t)v142 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v41);
  sub_2534B35DC();
  uint64_t v143 = v42;
  uint64_t v179 = sub_253B08E60();
  sub_253465998();
  uint64_t v44 = v43;
  MEMORY[0x270FA5388](v45);
  sub_2534659D8();
  uint64_t v169 = v46;
  sub_2534B324C();
  MEMORY[0x270FA5388](v47);
  uint64_t v168 = (char *)v142 - v48;
  sub_2534B324C();
  MEMORY[0x270FA5388](v49);
  sub_2534B3318();
  v142[7] = v50;
  sub_2534B324C();
  MEMORY[0x270FA5388](v51);
  v142[6] = (char *)v142 - v52;
  uint64_t v177 = sub_253B09150();
  sub_253465998();
  v142[0] = v53;
  MEMORY[0x270FA5388](v54);
  sub_2534659D8();
  uint64_t v167 = v55;
  sub_2534B324C();
  MEMORY[0x270FA5388](v56);
  uint64_t v181 = (char *)v142 - v57;
  sub_2534B324C();
  MEMORY[0x270FA5388](v58);
  v142[5] = (char *)v142 - v59;
  sub_2534B324C();
  MEMORY[0x270FA5388](v60);
  sub_2534B35DC();
  uint64_t v148 = v61;
  uint64_t v173 = sub_253B081D0();
  sub_253465998();
  uint64_t v63 = v62;
  MEMORY[0x270FA5388](v64);
  uint64_t v180 = (char *)v142 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v66);
  sub_2534B35DC();
  uint64_t v147 = v67;
  uint64_t v183 = type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  sub_253465998();
  uint64_t v69 = v68;
  MEMORY[0x270FA5388](v70);
  char v184 = (char *)v142 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v72);
  uint64_t v182 = (uint64_t)v142 - v73;
  sub_2534B324C();
  MEMORY[0x270FA5388](v74);
  sub_2534B3318();
  uint64_t v145 = v75;
  sub_2534B324C();
  MEMORY[0x270FA5388](v76);
  sub_2534B35DC();
  sub_2534D8F5C(v77);
  unint64_t v78 = *(void *)(v12 + 16);
  sub_253962624(MEMORY[0x263F8EE78]);
  sub_2539E8768();
  uint64_t v146 = v12;
  uint64_t v175 = v63;
  uint64_t v176 = v18;
  uint64_t v172 = v69;
  if (v78)
  {
    sub_2539625D8();
    uint64_t v164 = v79;
    uint64_t v158 = v44 + 32;
    uint64_t v165 = *(void *)(v12 + 16);
    uint64_t v157 = v44 + 16;
    uint64_t v159 = v44 + 8;
    uint64_t v156 = v142[0] + 32;
    uint64_t v155 = v171 + 32;
    uint64_t v154 = v171 + 16;
    uint64_t v153 = v171 + 8;
    uint64_t v151 = v29 + 32;
    uint64_t v150 = v63 + 32;
    swift_bridgeObjectRetain();
    uint64_t v80 = 0;
    uint64_t v81 = v179;
    uint64_t v152 = v44;
    while (v165 != v80)
    {
      uint64_t v82 = v164 + *(void *)(v69 + 72) * v80;
      uint64_t v83 = v182;
      sub_253961FFC(v82, v182, (void (*)(void))type metadata accessor for ContextProtoDynamicEnumerationEntity);
      uint64_t v84 = v83;
      uint64_t v85 = (uint64_t *)v184;
      sub_253962954(v84);
      uint64_t v86 = v85[1];
      uint64_t v178 = *v85;
      sub_253962910();
      uint64_t v88 = v170;
      sub_253961F60((uint64_t)v85 + v87, v170, &qword_269CDFA30);
      sub_2534D8B48(v88, 1, v81);
      if (v89)
      {
        swift_bridgeObjectRetain();
        sub_253472458(v88, &qword_269CDFA30);
        uint64_t v185 = v81;
        sub_253462A5C(&qword_269CE5168);
        sub_25396232C();
        sub_25396285C();
        uint64_t v130 = sub_2534D969C();
        *uint64_t v131 = v81;
        v131[1] = (uint64_t)v85;
        sub_253962224(v130, (uint64_t)v131);
        sub_253961FAC();
        swift_bridgeObjectRelease();
LABEL_31:
        swift_bridgeObjectRelease();
        swift_release();
        sub_253961FAC();
        swift_bridgeObjectRelease();
        goto LABEL_37;
      }
      sub_2534DA678();
      sub_2534DA828();
      sub_2534D8E14();
      v90();
      sub_2534DA678();
      sub_2534B3428();
      v91();
      uint64_t v179 = v86;
      swift_bridgeObjectRetain();
      sub_253B09140();
      if (v10)
      {
        sub_2534659CC();
        v132();
        sub_253961FAC();
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      uint64_t v92 = v29;
      unint64_t v93 = v78;
      sub_2534659CC();
      v94();
      sub_2534DA678();
      sub_2534D8E14();
      v95();
      uint64_t v96 = v166;
      sub_253961F60((uint64_t)&v184[*(int *)(v183 + 24)], v166, &qword_269CDCBC8);
      uint64_t v97 = v176;
      sub_2534D8B48(v96, 1, v176);
      if (v89)
      {
        sub_253472458(v96, &qword_269CDCBC8);
        uint64_t v185 = v97;
        sub_253462A5C(&qword_269CE5170);
        sub_25396232C();
        sub_25396285C();
        uint64_t v133 = sub_2534D969C();
        uint64_t *v134 = v81;
        v134[1] = v97;
        sub_253962224(v133, (uint64_t)v134);
        swift_bridgeObjectRelease();
        sub_253961FAC();
        sub_2535794C4();
        sub_2534659CC();
        v135();
        goto LABEL_31;
      }
      sub_2534DA678();
      sub_253963024();
      sub_2534D8E14();
      v98();
      sub_2534DA678();
      sub_2534B3428();
      v99();
      sub_253962838();
      sub_253B09110();
      sub_2534659CC();
      v100();
      sub_2534DA678();
      sub_253578828();
      sub_2534D8E14();
      v101();
      sub_253B08190();
      uint64_t v102 = type metadata accessor for ContextProtoDynamicEnumerationEntity;
      sub_253961FAC();
      sub_253961FAC();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253962D34();
        uint64_t v102 = a10;
      }
      unint64_t v78 = v93;
      uint64_t v29 = v92;
      unint64_t v103 = *((void *)v102 + 2);
      if (v103 >= *((void *)v102 + 3) >> 1)
      {
        sub_2539629B0();
        uint64_t v102 = a10;
      }
      ++v80;
      *((void *)v102 + 2) = v103 + 1;
      sub_25396291C();
      sub_2534D8E14();
      v104();
      a10 = v102;
      uint64_t v105 = v171;
      uint64_t v69 = v172;
      uint64_t v44 = v152;
      if (v78 == v80) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
  }
  else
  {
    sub_253962DB4();
    uint64_t v105 = v171;
    uint64_t v81 = v179;
LABEL_14:
    sub_253962FDC();
    if (!v89)
    {
      uint64_t v180 = (char *)(v44 + 16);
      uint64_t v181 = (char *)(v44 + 32);
      uint64_t v182 = v44 + 8;
      uint64_t v169 = v105 + 16;
      uint64_t v170 = v105 + 32;
      uint64_t v178 = v105 + 8;
      uint64_t v179 = v142[0] + 32;
      uint64_t v171 = v29 + 32;
      uint64_t v168 = (char *)(v175 + 32);
      uint64_t v108 = v144;
      uint64_t v109 = v145;
      while (1)
      {
        if (v78 >= v107) {
          goto LABEL_39;
        }
        uint64_t v110 = v106
             + ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))
             + *(void *)(v69 + 72) * v78;
        uint64_t v111 = v149;
        sub_253961FFC(v110, v149, (void (*)(void))type metadata accessor for ContextProtoDynamicEnumerationEntity);
        sub_253961FFC(v111, (uint64_t)v109, (void (*)(void))type metadata accessor for ContextProtoDynamicEnumerationEntity);
        uint64_t v113 = *v109;
        uint64_t v112 = (char *)v109[1];
        sub_253962910();
        uint64_t v115 = v143;
        sub_253961F60((uint64_t)v109 + v114, v143, &qword_269CDFA30);
        sub_2534D8B48(v115, 1, v81);
        if (v89) {
          break;
        }
        sub_2534D9724();
        sub_2534D8E14();
        v116();
        sub_2534B3428();
        v117();
        char v184 = v112;
        swift_bridgeObjectRetain();
        sub_253B09140();
        if (v10)
        {
          sub_2534659CC();
          v138();
          sub_253961FAC();
          goto LABEL_34;
        }
        sub_2534659CC();
        v118();
        sub_2534D8E14();
        v119();
        sub_253961F60((uint64_t)v109 + *(int *)(v183 + 24), v108, &qword_269CDCBC8);
        uint64_t v120 = sub_2536D42D4();
        uint64_t v121 = v176;
        sub_2534D8B48(v120, v122, v176);
        if (v89)
        {
          sub_253472458(v108, &qword_269CDCBC8);
          uint64_t v185 = v121;
          sub_253462A5C(&qword_269CE5170);
          sub_25396232C();
          sub_25396285C();
          uint64_t v139 = sub_2534D969C();
          uint64_t *v140 = v81;
          v140[1] = v113;
          sub_253962224(v139, (uint64_t)v140);
          swift_bridgeObjectRelease();
          sub_253961FAC();
          sub_2535794C4();
          v141(v148, v177);
          goto LABEL_36;
        }
        sub_2534D8E14();
        v123();
        sub_25396303C();
        sub_2534B3428();
        v124();
        sub_253962838();
        sub_253B09110();
        sub_2534659CC();
        v125();
        sub_2534D9724();
        sub_2534D8E14();
        v126();
        sub_2534DA828();
        sub_253B08190();
        uint64_t v127 = type metadata accessor for ContextProtoDynamicEnumerationEntity;
        uint64_t v109 = v145;
        sub_253961FAC();
        sub_253961FAC();
        if ((sub_2539621FC() & 1) == 0)
        {
          sub_253962D34();
          uint64_t v127 = a10;
        }
        uint64_t v108 = v144;
        unint64_t v128 = *((void *)v127 + 2);
        if (v128 >= *((void *)v127 + 3) >> 1)
        {
          sub_2539629B0();
          uint64_t v127 = a10;
        }
        ++v78;
        *((void *)v127 + 2) = v128 + 1;
        sub_2539626C0();
        sub_2534D8E14();
        v129();
        a10 = v127;
        sub_253962FDC();
        uint64_t v69 = v172;
        if (v89) {
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRetain();
      sub_253472458(v115, &qword_269CDFA30);
      uint64_t v185 = v81;
      sub_253462A5C(&qword_269CE5168);
      sub_25396232C();
      sub_25396285C();
      uint64_t v136 = sub_2534D969C();
      *uint64_t v137 = v81;
      v137[1] = v113;
      sub_253962224(v136, (uint64_t)v137);
      sub_253961FAC();
LABEL_34:
      swift_bridgeObjectRelease();
LABEL_36:
      sub_253961FAC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_37;
    }
LABEL_16:
    swift_bridgeObjectRelease_n();
LABEL_37:
    sub_2539624FC();
    sub_2534847C8();
  }
}

void sub_2539587B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  sub_2539625F8();
  v39[8] = sub_253B07A20();
  sub_253465998();
  MEMORY[0x270FA5388](v16);
  v39[9] = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v18);
  v39[7] = (char *)v39 - v19;
  uint64_t v20 = sub_253483660();
  uint64_t v21 = type metadata accessor for ContextProtoSurroundingText(v20);
  uint64_t v22 = sub_25346CB34(v21);
  MEMORY[0x270FA5388](v22);
  v39[6] = (char *)v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v24);
  sub_2534F8600();
  MEMORY[0x270FA5388](v25);
  v39[0] = (char *)v39 - v26;
  sub_2534B324C();
  MEMORY[0x270FA5388](v27);
  sub_2539624A8();
  sub_2539622E0(MEMORY[0x263F8EE78]);
  sub_2539E8830();
  sub_253962DE4();
  if (v14)
  {
    sub_2539621AC();
    sub_253962D88();
    while (1)
    {
      sub_253962D7C();
      if (v28) {
        break;
      }
      uint64_t v29 = sub_2539625C8();
      sub_253961FFC(v29, v12, (void (*)(void))type metadata accessor for ContextProtoSurroundingText);
      sub_253962478();
      uint64_t v30 = (uint64_t *)sub_25396239C();
      SurroundingText.init(transcript:)(v30);
      if (v11)
      {
        swift_release();
        sub_253962988();
        sub_253961FAC();
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      sub_253961FAC();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253962AF4();
        uint64_t v10 = a10;
      }
      sub_2539624EC();
      if (v32)
      {
        sub_253962254(v31);
        sub_2539E8830();
        uint64_t v10 = a10;
      }
      ++v15;
      *(void *)(v10 + 16) = type metadata accessor for ContextProtoSurroundingText;
      sub_2534D8E14();
      v33();
      sub_2539625B8();
      if (v28) {
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
LABEL_13:
  sub_253962350();
  if (!v28)
  {
    sub_253962590();
    while (v14 < v34)
    {
      unint64_t v35 = sub_2539622C4();
      sub_253961FFC(v35, v13, (void (*)(void))type metadata accessor for ContextProtoSurroundingText);
      sub_253962608();
      uint64_t v36 = (uint64_t *)sub_2539623E0();
      SurroundingText.init(transcript:)(v36);
      if (v11)
      {
        sub_253961FAC();
        swift_release();
        sub_253962460();
        goto LABEL_27;
      }
      sub_253961FAC();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_253962AF4();
      }
      sub_25396244C();
      if (v32)
      {
        sub_253962194(v37);
        sub_2539E8830();
        uint64_t v10 = a10;
      }
      ++v14;
      *(void *)(v10 + 16) = type metadata accessor for ContextProtoSurroundingText;
      sub_2534D8E14();
      v38();
      a10 = v10;
      sub_253962350();
      if (v28) {
        goto LABEL_15;
      }
    }
LABEL_29:
    __break(1u);
    return;
  }
LABEL_15:
  sub_253962460();
LABEL_27:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_253958B2C(uint64_t a1)
{
  uint64_t v39 = sub_253B07AF0();
  sub_253465998();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_2536D4118();
  uint64_t v10 = type metadata accessor for ContextProtoSampleInvocation(v9);
  uint64_t v11 = sub_25346CB34(v10);
  MEMORY[0x270FA5388](v11);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v12);
  sub_25351C738();
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  sub_2539627FC(v14, v15, v16, v17, v18, v19, v20, v21, v35);
  uint64_t v22 = *(void *)(a1 + 16);
  uint64_t v40 = MEMORY[0x263F8EE78];
  sub_2539E8894();
  if (v22)
  {
    sub_2539626E0();
    uint64_t v37 = v23;
    uint64_t v38 = v24;
    swift_bridgeObjectRetain();
    while (v38)
    {
      sub_253961FFC(v37, v3, (void (*)(void))type metadata accessor for ContextProtoSampleInvocation);
      sub_253961FFC(v3, v1, (void (*)(void))type metadata accessor for ContextProtoSampleInvocation);
      swift_bridgeObjectRetain();
      sub_253B07AC0();
      sub_253961FAC();
      sub_253961FAC();
      uint64_t v25 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253962D58();
        uint64_t v25 = v40;
      }
      sub_2539629A0();
      if (v26)
      {
        sub_2539E8894();
        uint64_t v25 = v40;
      }
      sub_25396251C();
      sub_2534D8E14();
      v27();
      uint64_t v40 = v25;
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_253962F3C();
    if (v29)
    {
LABEL_11:
      sub_253962460();
      return;
    }
    while (v28)
    {
      unint64_t v30 = sub_253962938();
      sub_253961FFC(v30, v36, (void (*)(void))type metadata accessor for ContextProtoSampleInvocation);
      sub_253961FFC(v36, v3, (void (*)(void))type metadata accessor for ContextProtoSampleInvocation);
      swift_bridgeObjectRetain();
      sub_253B07AC0();
      sub_253961FAC();
      sub_253961FAC();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_253962D58();
      }
      uint64_t v31 = v40;
      unint64_t v32 = *(void *)(v40 + 16);
      if (v32 >= *(void *)(v40 + 24) >> 1)
      {
        sub_2539E8894();
        uint64_t v31 = v40;
      }
      sub_253962734();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v33 + v34 * v32, v2, v39);
      uint64_t v40 = v31;
      sub_253962F3C();
      if (v29) {
        goto LABEL_11;
      }
    }
  }
  __break(1u);
}

void sub_253958ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  sub_2534D9690();
  uint64_t v66 = sub_253B069C0();
  sub_253465998();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v15);
  uint64_t v62 = (char *)v57 - v16;
  uint64_t v17 = sub_253483660();
  uint64_t v18 = type metadata accessor for TranscriptProtoResponseParameter(v17);
  uint64_t v19 = sub_25346CB34(v18);
  uint64_t v21 = v20;
  MEMORY[0x270FA5388](v19);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v22);
  sub_2534B3318();
  uint64_t v63 = v23;
  sub_2534B324C();
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  sub_25396314C(v25, v26, v27, v28, v29, v30, v31, v32, v57[0]);
  unint64_t v33 = *(void *)(v10 + 16);
  sub_2539622E0(MEMORY[0x263F8EE78]);
  sub_2539E88F8();
  uint64_t v58 = v10;
  uint64_t v64 = v21;
  uint64_t v65 = v13;
  if (v33)
  {
    uint64_t v61 = *(void *)(v10 + 16);
    sub_2539625D8();
    uint64_t v60 = v34;
    uint64_t v59 = v13 + 32;
    swift_bridgeObjectRetain();
    uint64_t v35 = 0;
    unint64_t v71 = v33;
    while (v61 != v35)
    {
      uint64_t v36 = v63;
      sub_253961FFC(v60 + *(void *)(v21 + 72) * v35, v63, (void (*)(void))type metadata accessor for TranscriptProtoResponseParameter);
      sub_253961FFC(v36, v11, (void (*)(void))type metadata accessor for TranscriptProtoResponseParameter);
      uint64_t v37 = *(void *)v11;
      uint64_t v38 = *(void *)(v11 + 8);
      uint64_t v68 = *(void *)(v11 + 32);
      uint64_t v69 = v37;
      uint64_t v70 = *(void *)(v11 + 56);
      int v67 = *(unsigned __int8 *)(v11 + 48);
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_2534D9B1C();
      sub_2535342E8(v39, v40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_253B06960();
      sub_253961FAC();
      sub_253961FAC();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253962AD0();
        uint64_t v38 = a10;
      }
      unint64_t v33 = v71;
      unint64_t v42 = *(void *)(v38 + 16);
      unint64_t v41 = *(void *)(v38 + 24);
      uint64_t v21 = v64;
      if (v42 >= v41 >> 1)
      {
        sub_2539625A0(v41);
        sub_2539E88F8();
        uint64_t v38 = a10;
      }
      ++v35;
      *(void *)(v38 + 16) = v42 + 1;
      uint64_t v13 = v65;
      sub_253962760();
      sub_2534D8E14();
      v43();
      a10 = v38;
      if (v33 == v35) {
        goto LABEL_11;
      }
    }
    __break(1u);
  }
  else
  {
    sub_253962DB4();
LABEL_11:
    unint64_t v44 = *(void *)(v58 + 16);
    if (v33 == v44)
    {
LABEL_12:
      swift_bridgeObjectRelease_n();
      sub_2534847C8();
      return;
    }
    uint64_t v61 = v13 + 32;
    uint64_t v45 = v57[2];
    uint64_t v46 = v63;
    while (v33 < v44)
    {
      sub_2539626B0();
      uint64_t v49 = *(void *)(v21 + 72);
      unint64_t v71 = v33;
      sub_253961FFC(v47 + v48 + v49 * v33, v45, (void (*)(void))type metadata accessor for TranscriptProtoResponseParameter);
      sub_253961FFC(v45, v46, (void (*)(void))type metadata accessor for TranscriptProtoResponseParameter);
      uint64_t v50 = *(void *)v46;
      uint64_t v51 = *(void *)(v46 + 16);
      unint64_t v52 = *(void *)(v46 + 24);
      uint64_t v68 = *(void *)(v46 + 32);
      uint64_t v69 = v50;
      uint64_t v70 = *(void *)(v46 + 56);
      int v67 = *(unsigned __int8 *)(v46 + 48);
      swift_bridgeObjectRetain();
      sub_2535342E8(v51, v52);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_253B06960();
      sub_253961FAC();
      sub_253962FC4();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_253962AD0();
      }
      uint64_t v53 = a10;
      unint64_t v55 = *(void *)(a10 + 16);
      unint64_t v54 = *(void *)(a10 + 24);
      if (v55 >= v54 >> 1)
      {
        sub_253962194(v54);
        sub_2539E88F8();
        uint64_t v53 = a10;
      }
      unint64_t v33 = v71 + 1;
      *(void *)(v53 + 16) = v55 + 1;
      sub_253962760();
      sub_2534D8E14();
      v56();
      a10 = v53;
      unint64_t v44 = *(void *)(v58 + 16);
      uint64_t v21 = v64;
      if (v33 == v44) {
        goto LABEL_12;
      }
    }
  }
  __break(1u);
}

void sub_253959314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  sub_2539625F8();
  v38[8] = sub_253B063E0();
  sub_253465998();
  MEMORY[0x270FA5388](v17);
  v38[9] = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v19);
  v38[7] = (char *)v38 - v20;
  uint64_t v21 = sub_253483660();
  uint64_t v22 = type metadata accessor for TranscriptProtoVisualOutput(v21);
  uint64_t v23 = sub_25346CB34(v22);
  MEMORY[0x270FA5388](v23);
  v38[6] = (char *)v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v25);
  sub_2534F8600();
  MEMORY[0x270FA5388](v26);
  v38[0] = (char *)v38 - v27;
  sub_2534B324C();
  MEMORY[0x270FA5388](v28);
  sub_2539624A8();
  sub_2539622E0(MEMORY[0x263F8EE78]);
  sub_2539E895C();
  sub_253962DE4();
  if (v15)
  {
    sub_2539621AC();
    sub_253962D88();
    while (1)
    {
      sub_253962D7C();
      if (v29) {
        break;
      }
      uint64_t v30 = sub_2539625C8();
      sub_253961FFC(v30, v13, (void (*)(void))type metadata accessor for TranscriptProtoVisualOutput);
      sub_253962478();
      uint64_t v12 = v10;
      ResponseOutput.VisualOutput.init(transcript:)();
      if (v10)
      {
        swift_release();
        sub_253962988();
        sub_253961FAC();
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      sub_253961FAC();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253962C5C();
        uint64_t v11 = a10;
      }
      sub_2539624EC();
      if (v32)
      {
        sub_253962254(v31);
        sub_2539E895C();
        uint64_t v11 = a10;
      }
      ++v16;
      *(void *)(v11 + 16) = type metadata accessor for TranscriptProtoVisualOutput;
      sub_2534D8E14();
      v33();
      sub_2539625B8();
      if (v29) {
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
LABEL_13:
  sub_253962350();
  if (!v29)
  {
    sub_253962590();
    while (v15 < v34)
    {
      unint64_t v35 = sub_2539622C4();
      sub_253961FFC(v35, v14, (void (*)(void))type metadata accessor for TranscriptProtoVisualOutput);
      sub_253962608();
      sub_2539623E0();
      ResponseOutput.VisualOutput.init(transcript:)();
      if (v12)
      {
        sub_253961FAC();
        swift_release();
        sub_253962460();
        goto LABEL_27;
      }
      sub_253961FAC();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_253962C5C();
      }
      sub_25396244C();
      if (v32)
      {
        sub_253962194(v36);
        sub_2539E895C();
        uint64_t v11 = a10;
      }
      ++v15;
      *(void *)(v11 + 16) = type metadata accessor for TranscriptProtoVisualOutput;
      sub_2534D8E14();
      v37();
      a10 = v11;
      sub_253962350();
      if (v29) {
        goto LABEL_15;
      }
    }
LABEL_29:
    __break(1u);
    return;
  }
LABEL_15:
  sub_253962460();
LABEL_27:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_253959694()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  sub_253B059D0();
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_2536D4118();
  uint64_t v7 = type metadata accessor for TranscriptProtoStatementID(v6);
  uint64_t v8 = sub_25346CB34(v7);
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v8);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v11);
  sub_25351C738();
  MEMORY[0x270FA5388](v12);
  sub_2534B35DC();
  uint64_t v25 = v13;
  uint64_t v14 = *(void *)(v3 + 16);
  uint64_t v28 = (uint64_t (*)(uint64_t))MEMORY[0x263F8EE78];
  sub_2539E7ADC();
  if (v14)
  {
    uint64_t v26 = v3 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v27 = *(void *)(v3 + 16);
    swift_bridgeObjectRetain();
    while (v27)
    {
      sub_253961FFC(v26, v1, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
      sub_253961FFC(v1, v0, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
      swift_bridgeObjectRetain();
      sub_253B059B0();
      unint64_t v15 = type metadata accessor for TranscriptProtoStatementID;
      sub_253961FAC();
      sub_253961FAC();
      if ((sub_2539621FC() & 1) == 0)
      {
        sub_253962B60();
        unint64_t v15 = v28;
      }
      sub_2539629A0();
      if (v17)
      {
        sub_2539625A0(v16);
        sub_2539E7ADC();
        unint64_t v15 = v28;
      }
      sub_25396251C();
      sub_2534D8E14();
      v18();
      uint64_t v28 = v15;
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_253962F3C();
    if (v20)
    {
LABEL_11:
      sub_253962460();
      sub_2534847C8();
      return;
    }
    while (v19)
    {
      unint64_t v21 = sub_253962938();
      sub_253961FFC(v21, v25, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
      sub_253961FFC(v25, v1, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
      swift_bridgeObjectRetain();
      sub_25396296C();
      sub_253961FAC();
      sub_253961FAC();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_253962B60();
      }
      uint64_t v22 = v28;
      sub_253962498();
      if (v17)
      {
        sub_253962194(v23);
        sub_2539E7ADC();
        uint64_t v22 = v28;
      }
      sub_253962734();
      sub_2534D8E14();
      v24();
      uint64_t v28 = v22;
      sub_253962F3C();
      if (v20) {
        goto LABEL_11;
      }
    }
  }
  __break(1u);
}

void sub_2539599F4()
{
}

uint64_t sub_253959A0C()
{
  return sub_25394E154();
}

IntelligenceFlowPlannerSupport::ResponseGenerationProtoResponseMode __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ResponseGenerationProtoResponseMode.init(rg:)(IntelligenceFlowPlannerSupport::ResponseGenerationProtoResponseMode rg)
{
  *uint64_t v1 = 0x4030102u >> (8 * *(unsigned char *)rg);
  return rg;
}

uint64_t sub_253959A40(uint64_t a1, void *a2)
{
  return sub_25394E838(a1, v2[6], v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_253959A68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ResponseGenerationProtoResponseGenerationInput.init(rg:)(a1, a2);
}

uint64_t sub_253959A80(char *a1)
{
  char v2 = *a1;
  return ResponseMode.init(transcript:)((IntelligenceFlowPlannerSupport::ResponseGenerationProtoResponseMode)&v2);
}

uint64_t sub_253959AAC(char *a1)
{
  char v2 = *a1;
  return ResponseGenerationProtoResponseMode.init(rg:)((IntelligenceFlowPlannerSupport::ResponseMode)&v2);
}

void StatementResultDigest.init(transcript:)()
{
  sub_2534847F8();
  uint64_t v7 = v6;
  uint64_t v104 = v8;
  uint64_t v9 = sub_253462A5C(&qword_269CE0368);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  sub_25346CB04();
  uint64_t v110 = v11;
  uint64_t v12 = sub_253462A5C(&qword_269CE4F00);
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  sub_25346CB04();
  uint64_t v109 = v14;
  sub_253B059D0();
  sub_253465998();
  uint64_t v107 = v15;
  uint64_t v108 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v113 = (char *)&v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v18);
  sub_2534B35DC();
  uint64_t v111 = v19;
  uint64_t v20 = sub_253462A5C(&qword_269CE0378);
  uint64_t v21 = sub_25346CB4C(v20);
  MEMORY[0x270FA5388](v21);
  sub_253483628(v22, v98);
  uint64_t v23 = sub_253462A5C(&qword_269CDBB28);
  uint64_t v24 = sub_25346CB4C(v23);
  MEMORY[0x270FA5388](v24);
  uint64_t v117 = (char *)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_253483660();
  uint64_t v27 = type metadata accessor for TranscriptProtoStatementOutcome(v26);
  uint64_t v28 = sub_25346CB4C(v27);
  MEMORY[0x270FA5388](v28);
  sub_2534AF2A0(v29, v98);
  sub_253B06850();
  sub_253465998();
  uint64_t v115 = v31;
  uint64_t v116 = v30;
  MEMORY[0x270FA5388](v30);
  uint64_t v119 = (uint64_t (*)(uint64_t))((char *)&v98 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = sub_253483660();
  uint64_t v105 = type metadata accessor for StatementResultPayload(v33);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v34);
  uint64_t v106 = (uint64_t)&v98 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v36);
  uint64_t v112 = (uint64_t)&v98 - v37;
  uint64_t v38 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v39 = sub_25346CB4C(v38);
  MEMORY[0x270FA5388](v39);
  uint64_t v120 = (char *)&v98 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_253483660();
  uint64_t v42 = type metadata accessor for StatementResult(v41);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v43);
  sub_2534847E0();
  uint64_t v44 = sub_253462A5C(&qword_269CE0398);
  uint64_t v45 = sub_25346CB4C(v44);
  MEMORY[0x270FA5388](v45);
  sub_25346CC6C();
  uint64_t v46 = sub_253462A5C(&qword_269CE4EF8);
  uint64_t v47 = sub_25346CB4C(v46);
  MEMORY[0x270FA5388](v47);
  sub_2534B34A4();
  uint64_t v48 = sub_253462A5C(&qword_269CDFA70);
  uint64_t v49 = sub_25346CB4C(v48);
  MEMORY[0x270FA5388](v49);
  sub_25353CE24();
  MEMORY[0x270FA5388](v50);
  unint64_t v52 = (char *)&v98 - v51;
  uint64_t v53 = sub_253462A5C(&qword_26B241270);
  uint64_t v54 = sub_25346CB4C(v53);
  MEMORY[0x270FA5388](v54);
  sub_2534966B0();
  sub_253961F60(v7, (uint64_t)v52, &qword_269CDFA70);
  sub_25395AB34();
  if (v1)
  {
    sub_253961FAC();
  }
  else
  {
    uint64_t v55 = v0;
    uint64_t v102 = (int *)v42;
    uint64_t v103 = v2;
    uint64_t v56 = (uint64_t)v120;
    uint64_t v121 = v4;
    uint64_t v57 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
    sub_253961F60(v7 + *(int *)(v57 + 20), v3, &qword_269CE0398);
    sub_25395ACC4(v3, v5);
    uint64_t v58 = v7;
    uint64_t v101 = v5;
    uint64_t v99 = sub_253B055C0();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v56, 1, 1, v99);
    sub_253961F60(v7, v55, &qword_269CDFA70);
    uint64_t v59 = sub_253B08F30();
    uint64_t v60 = sub_2539627D4();
    sub_2534D8B48(v60, v61, v59);
    if (v62)
    {
      sub_253472458(v55, &qword_269CDFA70);
      uint64_t v98 = 0;
      uint64_t v100 = 0;
    }
    else
    {
      uint64_t v98 = sub_253B08F20();
      uint64_t v100 = v63;
      sub_25347B88C();
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v55, v59);
    }
    uint64_t v65 = v118;
    sub_25395D81C(&qword_269CE0388, type metadata accessor for TranscriptProtoStatementOutcome, (void (*)(void))type metadata accessor for TranscriptProtoStatementOutcome, &qword_269CE5228, v118);
    StatementOutcome.init(transcript:)(v65, v66, v67, v68, v69, v70, v71, v72, v98, v99, v100, v101, (uint64_t)v102, v103, v104, v105, v106, v107, v108,
      v109);
    uint64_t v73 = v57;
    sub_253961F60(v58 + *(int *)(v57 + 32), v114, &qword_269CE0378);
    uint64_t v74 = (uint64_t)v117;
    sub_25395AF28();
    uint64_t v75 = v106;
    uint64_t v76 = v106 + *(int *)(v105 + 20);
    uint64_t v77 = sub_253B06820();
    sub_25346CC08(v76, v78, v79, v77);
    sub_2534D8E14();
    v80();
    sub_253961BF0(v74, v76, &qword_269CDBB28);
    uint64_t v119 = type metadata accessor for StatementResultPayload;
    sub_253962058(v75, v112, (void (*)(void))type metadata accessor for StatementResultPayload);
    sub_25396305C();
    sub_25396305C();
    uint64_t v81 = v103;
    uint64_t v82 = sub_2536D42D4();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v82, v83, 1, v99);
    uint64_t v84 = v102;
    uint64_t v85 = v81 + v102[9];
    *(_OWORD *)uint64_t v85 = 0u;
    *(_OWORD *)(v85 + 16) = 0u;
    sub_253961B44(v56, v81);
    uint64_t v86 = v100;
    if (v100) {
      uint64_t v87 = v98;
    }
    else {
      uint64_t v87 = 0;
    }
    sub_253472458(v56, (uint64_t *)&unk_26B248CB0);
    sub_253961BAC(*(void *)v85, *(void *)(v85 + 8));
    *(void *)uint64_t v85 = v87;
    *(void *)(v85 + 8) = v86;
    *(void *)(v85 + 16) = 0;
    *(void *)(v85 + 24) = 0;
    sub_253962058(v112, v81 + v84[5], (void (*)(void))v119);
    uint64_t v88 = v107;
    char v89 = *(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 32);
    v89(v81 + v84[6], v111, v107);
    uint64_t v90 = v113;
    sub_253962850();
    v91();
    uint64_t v92 = v103;
    v89(v103 + v84[8], (uint64_t)v90, v88);
    int v93 = *(unsigned __int8 *)(v58 + *(int *)(v73 + 28));
    sub_253961F60(v58 + *(int *)(v73 + 36), v110, &qword_269CE0368);
    uint64_t v94 = v109;
    sub_25395B0C0();
    if (v93 == 2) {
      char v95 = 2;
    }
    else {
      char v95 = v93 & 1;
    }
    sub_253961FAC();
    uint64_t v96 = v104;
    sub_253961F14(v121, v104, &qword_26B241270);
    uint64_t v97 = (int *)type metadata accessor for StatementResultDigest(0);
    sub_253961F14(v101, v96 + v97[5], &qword_269CE4EF8);
    sub_253962058(v92, v96 + v97[6], (void (*)(void))type metadata accessor for StatementResult);
    *(unsigned char *)(v96 + v97[7]) = v95;
    sub_253961F14(v94, v96 + v97[8], &qword_269CE4F00);
  }
  sub_2534847C8();
}

void sub_25395A48C()
{
}

void sub_25395A4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_2535B4280();
  a17 = v20;
  a18 = v21;
  uint64_t v23 = v22;
  uint64_t v24 = sub_253462A5C(&qword_26B2496F0);
  uint64_t v25 = sub_25346CB4C(v24);
  MEMORY[0x270FA5388](v25);
  uint64_t v26 = sub_2534AF2D8();
  uint64_t v27 = type metadata accessor for TranscriptProtoParticipantID(v26);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v28);
  sub_2534B340C();
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (char *)&a9 - v30;
  uint64_t v32 = sub_2534D99FC();
  sub_253961F60(v32, v33, &qword_26B2496F0);
  uint64_t v34 = sub_2536D3ACC();
  sub_2534D8B48(v34, v35, v27);
  if (v36)
  {
    sub_253472458(v23, &qword_26B2496F0);
    sub_253472458(v18, &qword_26B2496F0);
  }
  else
  {
    sub_253962058(v18, (uint64_t)v31, (void (*)(void))type metadata accessor for TranscriptProtoParticipantID);
    sub_253961FFC((uint64_t)v31, v19, (void (*)(void))type metadata accessor for TranscriptProtoParticipantID);
    swift_bridgeObjectRetain();
    sub_253961FAC();
    sub_253472458(v23, &qword_26B2496F0);
    sub_253961FAC();
  }
  sub_2536D30A0();
  sub_2535B42DC();
}

void sub_25395A67C()
{
  sub_2535B4280();
  uint64_t v4 = v3;
  uint64_t v5 = sub_253462A5C(&qword_26B2492C8);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_253465A3C();
  uint64_t v7 = type metadata accessor for TranscriptProtoSpanID(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v8);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_253963124();
  sub_253961F60(v10, v0, &qword_26B2492C8);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v0, 1, v7) == 1)
  {
    uint64_t v11 = sub_253578828();
    sub_253472458(v11, v12);
    uint64_t v13 = sub_2534D9B1C();
    sub_253472458(v13, v14);
  }
  else
  {
    uint64_t v15 = sub_2534D9B1C();
    sub_253962058(v15, v16, v17);
    sub_253961FFC(v1, v2, (void (*)(void))type metadata accessor for TranscriptProtoSpanID);
    sub_253961FAC();
    sub_253472458(v4, &qword_26B2492C8);
    sub_253961FAC();
  }
  sub_2536D30A0();
  sub_2535B42DC();
}

void sub_25395A804()
{
  sub_2534847F8();
  uint64_t v4 = sub_2539620F0(v3);
  type metadata accessor for RequestPrescribedPlan(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  sub_2534847E0();
  uint64_t v6 = sub_253462A5C(&qword_269CE1AE0);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_2534D8CAC();
  uint64_t v9 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(v8);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v10);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v11);
  sub_253962104();
  uint64_t v12 = sub_2534D8B48(v2, 1, v9);
  if (v14)
  {
    sub_25396223C();
    sub_253962404();
    sub_25396229C();
LABEL_6:
    sub_2539621E0(v15, v16);
    goto LABEL_7;
  }
  uint64_t v17 = sub_25396241C(v12, v13, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlan);
  sub_2539623EC(v17, v18, (void (*)(void))type metadata accessor for TranscriptProtoRequestPrescribedPlan);
  sub_253962214();
  RequestPrescribedPlan.init(transcript:)();
  sub_253472458(v1, &qword_269CE1AE0);
  uint64_t v19 = sub_253961FAC();
  if (!v0)
  {
    uint64_t v15 = sub_2539622F8(v19, v20, (void (*)(void))type metadata accessor for RequestPrescribedPlan);
    uint64_t v16 = 0;
    goto LABEL_6;
  }
LABEL_7:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_25395A99C()
{
  sub_2534847F8();
  sub_2539620F0(v3);
  sub_253B06770();
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_2534847E0();
  uint64_t v5 = sub_253462A5C(&qword_269CE1BD0);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_2534D8CAC();
  uint64_t v8 = type metadata accessor for TranscriptProtoPromptSelection(v7);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v9);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v10);
  sub_253962104();
  uint64_t v11 = sub_2534D8B48(v2, 1, v8);
  if (v13)
  {
    sub_25396223C();
    sub_253962404();
    sub_25396229C();
LABEL_6:
    sub_2539621E0(v14, v15);
    goto LABEL_7;
  }
  uint64_t v16 = sub_25396241C(v11, v12, (void (*)(void))type metadata accessor for TranscriptProtoPromptSelection);
  sub_2539623EC(v16, v17, (void (*)(void))type metadata accessor for TranscriptProtoPromptSelection);
  uint64_t v18 = (uint64_t *)sub_253962214();
  PromptSelection.init(transcript:)(v18, v19);
  sub_253472458(v1, &qword_269CE1BD0);
  sub_253961FAC();
  if (!v0)
  {
    uint64_t v20 = sub_2539620B4();
    uint64_t v14 = v21(v20);
    uint64_t v15 = 0;
    goto LABEL_6;
  }
LABEL_7:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_25395AB34()
{
  sub_2534847F8();
  sub_2539620F0(v3);
  sub_253B08B30();
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_2534847E0();
  uint64_t v5 = sub_253462A5C(&qword_269CDFA70);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_25349888C();
  uint64_t v7 = sub_253B08F30();
  sub_253465998();
  MEMORY[0x270FA5388](v8);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v9);
  sub_25396216C();
  sub_2534D8B48(v2, 1, v7);
  if (v10)
  {
    sub_25396223C();
    sub_2539624D4();
    sub_25396229C();
LABEL_7:
    sub_2539621E0(v11, v12);
    goto LABEL_8;
  }
  uint64_t v13 = sub_25396212C();
  v14(v13);
  uint64_t v15 = sub_25396214C();
  v16(v15);
  sub_253962360();
  ToolDefinition.init(transcript:)(v17);
  if (!v0)
  {
    sub_253472458(v1, &qword_269CDFA70);
    uint64_t v20 = sub_2539620D8();
    v21(v20);
    sub_2534D8E14();
    uint64_t v11 = v22();
    uint64_t v12 = 0;
    goto LABEL_7;
  }
  sub_253472458(v1, &qword_269CDFA70);
  uint64_t v18 = sub_2539620D8();
  v19(v18);
LABEL_8:
  sub_2536D3D5C();
  sub_2534847C8();
}

uint64_t sub_25395ACC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = type metadata accessor for Action(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_253462A5C(&qword_269CE0398);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TranscriptProtoAction(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v19 - v14;
  sub_253961F60(a1, (uint64_t)v9, &qword_269CE0398);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10) == 1)
  {
    sub_253472458(a1, &qword_269CE0398);
    sub_253472458((uint64_t)v9, &qword_269CE0398);
    uint64_t v16 = 1;
    uint64_t v17 = v20;
  }
  else
  {
    sub_253962058((uint64_t)v9, (uint64_t)v15, (void (*)(void))type metadata accessor for TranscriptProtoAction);
    sub_253961FFC((uint64_t)v15, (uint64_t)v13, (void (*)(void))type metadata accessor for TranscriptProtoAction);
    Action.init(transcript:)();
    sub_253472458(a1, &qword_269CE0398);
    uint64_t result = sub_253961FAC();
    if (v2) {
      return result;
    }
    uint64_t v17 = v20;
    sub_253962058((uint64_t)v6, v20, (void (*)(void))type metadata accessor for Action);
    uint64_t v16 = 0;
  }
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v17, v16, 1, v4);
}

void sub_25395AF28()
{
  sub_2534847F8();
  sub_2539620F0(v3);
  sub_253B06820();
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_2534847E0();
  uint64_t v5 = sub_253462A5C(&qword_269CE0378);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_2534D8CAC();
  uint64_t v8 = type metadata accessor for TranscriptProtoResponseManifest(v7);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v9);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v10);
  sub_253962104();
  uint64_t v11 = sub_2534D8B48(v2, 1, v8);
  if (v13)
  {
    sub_25396223C();
    sub_253962404();
    sub_25396229C();
LABEL_6:
    sub_2539621E0(v14, v15);
    goto LABEL_7;
  }
  uint64_t v16 = sub_25396241C(v11, v12, (void (*)(void))type metadata accessor for TranscriptProtoResponseManifest);
  sub_2539623EC(v16, v17, (void (*)(void))type metadata accessor for TranscriptProtoResponseManifest);
  sub_253962214();
  ResponseManifest.init(transcript:)();
  sub_253472458(v1, &qword_269CE0378);
  sub_253961FAC();
  if (!v0)
  {
    uint64_t v18 = sub_2539620B4();
    uint64_t v14 = v19(v18);
    uint64_t v15 = 0;
    goto LABEL_6;
  }
LABEL_7:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_25395B0C0()
{
  sub_2534847F8();
  uint64_t v41 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v43 = v12(0);
  sub_253465998();
  uint64_t v40 = v13;
  sub_253963118();
  MEMORY[0x270FA5388](v14);
  uint64_t v42 = (char *)&v38 - v15;
  uint64_t v16 = sub_253462A5C(v7);
  uint64_t v17 = sub_25346CB4C(v16);
  MEMORY[0x270FA5388](v17);
  uint64_t v18 = sub_2534B33AC();
  uint64_t v19 = v5(v18);
  sub_253465998();
  uint64_t v21 = v20;
  MEMORY[0x270FA5388](v22);
  sub_2534D8CC8();
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  MEMORY[0x270FA5388](v24);
  sub_253963024();
  sub_253961F60(v25, v26, v27);
  sub_2534D8B48(v2, 1, v19);
  if (v28)
  {
    sub_253472458(v9, v7);
    uint64_t v29 = sub_2535791D8();
    sub_253472458(v29, v30);
    uint64_t v31 = 1;
    uint64_t v32 = v43;
LABEL_7:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v11, v31, 1, v32);
    goto LABEL_8;
  }
  uint64_t v38 = v11;
  uint64_t v39 = v9;
  sub_25347FA84();
  v33();
  uint64_t v34 = *(void (**)(void))(v21 + 16);
  sub_253962874();
  v34();
  sub_2539630BC();
  sub_253962874();
  v34();
  v41(v1);
  if (!v0)
  {
    char v36 = *(void (**)(void))(v21 + 8);
    sub_2539627EC();
    v36();
    sub_253472458(v39, v7);
    sub_2539627EC();
    v36();
    uint64_t v11 = v38;
    sub_2534D9724();
    uint64_t v32 = v43;
    sub_2534D8E14();
    v37();
    uint64_t v31 = 0;
    goto LABEL_7;
  }
  uint64_t v35 = *(void (**)(void))(v21 + 8);
  sub_2539627EC();
  v35();
  sub_253472458(v39, v7);
  sub_2539627EC();
  v35();
LABEL_8:
  sub_253962714();
  sub_2534847C8();
}

void sub_25395B33C()
{
  sub_2534847F8();
  sub_2539620F0(v3);
  sub_253B08270();
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_2534847E0();
  uint64_t v5 = sub_253462A5C(&qword_269CDFA00);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_2534D8CAC();
  uint64_t DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(v7);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v9);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v10);
  sub_253962104();
  uint64_t v11 = sub_2534D8B48(v2, 1, DecorationToolRetrievalResponse);
  if (v13)
  {
    sub_25396223C();
    sub_253962404();
    sub_25396229C();
LABEL_6:
    sub_2539621E0(v14, v15);
    goto LABEL_7;
  }
  uint64_t v16 = sub_25396241C(v11, v12, (void (*)(void))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
  sub_2539623EC(v16, v17, (void (*)(void))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
  sub_253962214();
  QueryDecorationToolRetrievalResponse.init(transcript:)();
  sub_253472458(v1, &qword_269CDFA00);
  sub_253961FAC();
  if (!v0)
  {
    uint64_t v18 = sub_2539620B4();
    uint64_t v14 = v19(v18);
    uint64_t v15 = 0;
    goto LABEL_6;
  }
LABEL_7:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_25395B4D4()
{
  sub_2534847F8();
  sub_253962720(v4);
  uint64_t v5 = sub_253B059D0();
  sub_253465998();
  MEMORY[0x270FA5388](v6);
  sub_2534847E0();
  uint64_t v7 = sub_253462A5C(&qword_26B249528);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_25349888C();
  uint64_t v10 = type metadata accessor for TranscriptProtoStatementID(v9);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v11);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v12);
  sub_253962898();
  sub_2534D8B48(v3, 1, v10);
  if (v13)
  {
    sub_253472458(v0, &qword_26B249528);
    sub_253472458(v3, &qword_26B249528);
    uint64_t v16 = 1;
    uint64_t v15 = v17;
  }
  else
  {
    sub_253962058(v3, v1, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
    sub_253961FFC(v1, v2, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
    swift_bridgeObjectRetain();
    sub_253963098();
    sub_253B059B0();
    sub_253961FAC();
    sub_253472458(v0, &qword_26B249528);
    sub_253961FAC();
    sub_253962810();
    v14();
    uint64_t v15 = sub_253962F48();
  }
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v15, v16, 1, v5);
  sub_253962714();
  sub_2534847C8();
}

void sub_25395B6D8()
{
  sub_2534847F8();
  uint64_t v5 = v4;
  uint64_t v7 = sub_253962754(v6);
  uint64_t v8 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(v7);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  sub_2534D8CAC();
  uint64_t v10 = sub_253B05C60();
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  sub_25349888C();
  sub_253B05CB0();
  sub_253465998();
  v29[1] = v13;
  uint64_t v30 = v12;
  MEMORY[0x270FA5388](v12);
  sub_2534966B0();
  uint64_t v14 = sub_253462A5C(&qword_26B249680);
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_2534B464C();
  uint64_t v17 = type metadata accessor for TranscriptProtoDeviceDetails(v16);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v18);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v29 - v20;
  uint64_t v22 = sub_253579360();
  sub_253961F60(v22, v23, &qword_26B249680);
  sub_2534D8B48(v0, 1, v17);
  if (v24)
  {
    sub_2539630EC();
    sub_2539630C8();
    sub_25396229C();
    uint64_t v27 = v30;
    uint64_t v26 = v31;
LABEL_7:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, v25, 1, v27);
    goto LABEL_8;
  }
  sub_253962058(v0, (uint64_t)v21, (void (*)(void))type metadata accessor for TranscriptProtoDeviceDetails);
  sub_253961FFC((uint64_t)v21, (uint64_t)v2, (void (*)(void))type metadata accessor for TranscriptProtoDeviceDetails);
  v29[0] = *v2;
  swift_bridgeObjectRetain();
  sub_25395D81C(&qword_269CE2510, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType, (void (*)(void))type metadata accessor for TranscriptProtoDeviceDetailsDeviceType, &qword_269CE5148, v3);
  if (!v1)
  {
    sub_253B05C40();
    sub_253961FAC();
    sub_253B05C70();
    uint64_t v26 = type metadata accessor for TranscriptProtoDeviceDetails;
    sub_253961FAC();
    sub_253472458(v5, &qword_26B249680);
    sub_253961FAC();
    uint64_t v27 = v30;
    sub_253963048();
    sub_2534D8E14();
    v28();
    uint64_t v25 = 0;
    goto LABEL_7;
  }
  sub_253961FAC();
  swift_bridgeObjectRelease();
  sub_253472458(v5, &qword_26B249680);
  sub_253961FAC();
LABEL_8:
  sub_2534847C8();
}

void sub_25395B9F8()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_253462A5C(&qword_269CE1D00);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_2534D8CAC();
  uint64_t v9 = type metadata accessor for TranscriptProtoHandle(v8);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v10);
  sub_2534B340C();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v24 - v12;
  sub_253961F60(v3, v1, &qword_269CE1D00);
  sub_2534D8B48(v1, 1, v9);
  if (v14)
  {
    sub_253472458(v3, &qword_269CE1D00);
    uint64_t v15 = sub_2539627B8();
    sub_253472458(v15, v16);
    *uint64_t v5 = 0;
    v5[1] = 0;
    v5[3] = 0;
    v5[4] = 0;
    v5[2] = 1;
  }
  else
  {
    uint64_t v17 = sub_2539627B8();
    sub_253962058(v17, v18, v19);
    sub_253961FFC((uint64_t)v13, v0, (void (*)(void))type metadata accessor for TranscriptProtoHandle);
    char v20 = *(unsigned char *)v0;
    uint64_t v21 = *(void *)(v0 + 8);
    uint64_t v22 = *(void *)(v0 + 16);
    uint64_t v23 = *(void *)(v0 + 32);
    uint64_t v25 = *(void *)(v0 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_253961FAC();
    sub_253472458(v3, &qword_269CE1D00);
    sub_253961FAC();
    *(unsigned char *)uint64_t v5 = v20;
    v5[1] = v21;
    v5[2] = v22;
    v5[3] = v25;
    v5[4] = v23;
  }
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_25395BBC0()
{
  sub_2535B4280();
  sub_253962F84();
  uint64_t v2 = sub_253B07D80();
  sub_253465998();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  sub_2534D9C38();
  MEMORY[0x270FA5388](v6);
  sub_2534B347C();
  switch(v1)
  {
    case 5:
      uint64_t v10 = sub_2536D3ACC();
      break;
    default:
      uint64_t v7 = sub_253962690();
      v8(v7);
      uint64_t v9 = *(void (**)(void))(v4 + 32);
      sub_2539627E0();
      v9();
      sub_2539627E0();
      v9();
      uint64_t v10 = v0;
      uint64_t v11 = 0;
      break;
  }
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v10, v11, 1, v2);
  sub_2536D30A0();
  sub_2535B42DC();
}

void sub_25395BD04()
{
  sub_2535B4280();
  sub_253962F84();
  uint64_t v2 = sub_253B07C00();
  sub_253465998();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  sub_2534D9C38();
  MEMORY[0x270FA5388](v6);
  sub_2534B347C();
  switch(v1)
  {
    case 12:
      uint64_t v10 = sub_2536D3ACC();
      break;
    default:
      uint64_t v7 = sub_253962690();
      v8(v7);
      uint64_t v9 = *(void (**)(void))(v4 + 32);
      sub_2539627E0();
      v9();
      sub_2539627E0();
      v9();
      uint64_t v10 = v0;
      uint64_t v11 = 0;
      break;
  }
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v10, v11, 1, v2);
  sub_2536D30A0();
  sub_2535B42DC();
}

void sub_25395BEAC()
{
  sub_2534847F8();
  sub_2539620F0(v3);
  sub_253B07FD0();
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_2534847E0();
  uint64_t v5 = sub_253462A5C(&qword_269CDF8E0);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_2534D8CAC();
  uint64_t v8 = type metadata accessor for ContextProtoStructuredContext(v7);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v9);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v10);
  sub_253962104();
  uint64_t v11 = sub_2534D8B48(v2, 1, v8);
  if (v13)
  {
    sub_25396223C();
    sub_253962404();
    sub_25396229C();
LABEL_6:
    sub_2539621E0(v14, v15);
    goto LABEL_7;
  }
  uint64_t v16 = sub_25396241C(v11, v12, (void (*)(void))type metadata accessor for ContextProtoStructuredContext);
  sub_2539623EC(v16, v17, (void (*)(void))type metadata accessor for ContextProtoStructuredContext);
  sub_253962214();
  StructuredContext.init(transcript:)();
  sub_253472458(v1, &qword_269CDF8E0);
  sub_253961FAC();
  if (!v0)
  {
    uint64_t v18 = sub_2539620B4();
    uint64_t v14 = v19(v18);
    uint64_t v15 = 0;
    goto LABEL_6;
  }
LABEL_7:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_25395C044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  sub_2539620F0(v17);
  sub_253B07600();
  sub_253465998();
  uint64_t v33 = v19;
  uint64_t v34 = v18;
  MEMORY[0x270FA5388](v18);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v20);
  sub_2534B347C();
  uint64_t v21 = sub_253462A5C(&qword_269CDF900);
  uint64_t v22 = sub_25346CB4C(v21);
  MEMORY[0x270FA5388](v22);
  uint64_t v23 = sub_25349888C();
  uint64_t v24 = type metadata accessor for ContextProtoConfidence(v23);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v25);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v26);
  sub_25396216C();
  uint64_t v27 = sub_2536D42D4();
  sub_2534D8B48(v27, v28, v24);
  if (v29)
  {
    sub_25396223C();
    sub_2539624D4();
    uint64_t v30 = 1;
    uint64_t v31 = a10;
LABEL_7:
    sub_253578EBC(v31, v30);
    goto LABEL_8;
  }
  sub_253962058(v15, v14, (void (*)(void))type metadata accessor for ContextProtoConfidence);
  sub_253961FFC(v14, v16, (void (*)(void))type metadata accessor for ContextProtoConfidence);
  sub_253B075D0();
  sub_253961FAC();
  if (!v10)
  {
    uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32);
    v32(v12, v13, v34);
    sub_253472458(v11, &qword_269CDF900);
    sub_253961FAC();
    uint64_t v31 = a10;
    v32(a10, v12, v34);
    uint64_t v30 = 0;
    goto LABEL_7;
  }
  sub_253472458(v11, &qword_269CDF900);
  sub_253961FAC();
LABEL_8:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_25395C288()
{
  sub_2534847F8();
  sub_2539620F0(v3);
  sub_253B07990();
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_2534847E0();
  uint64_t v5 = sub_253462A5C(&qword_269CDF8F0);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_2534D8CAC();
  uint64_t v8 = type metadata accessor for ContextProtoContextMetadata(v7);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v9);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v10);
  sub_253962104();
  uint64_t v11 = sub_2534D8B48(v2, 1, v8);
  if (v13)
  {
    sub_25396223C();
    sub_253962404();
    sub_25396229C();
LABEL_6:
    sub_2539621E0(v14, v15);
    goto LABEL_7;
  }
  uint64_t v16 = sub_25396241C(v11, v12, (void (*)(void))type metadata accessor for ContextProtoContextMetadata);
  sub_2539623EC(v16, v17, (void (*)(void))type metadata accessor for ContextProtoContextMetadata);
  sub_253962214();
  ContextMetadata.init(transcript:)();
  sub_253472458(v1, &qword_269CDF8F0);
  sub_253961FAC();
  if (!v0)
  {
    uint64_t v18 = sub_2539620B4();
    uint64_t v14 = v19(v18);
    uint64_t v15 = 0;
    goto LABEL_6;
  }
LABEL_7:
  sub_2536D3D5C();
  sub_2534847C8();
}

uint64_t sub_25395C420(uint64_t a1)
{
  sub_253B07670();
  sub_253465998();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_253462A5C(&qword_269CDCCC0);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_25349888C();
  uint64_t v10 = type metadata accessor for ContextProtoBoundingBox(v9);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v11);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v12);
  sub_253962898();
  sub_2534D8B48(v4, 1, v10);
  if (v13)
  {
    sub_25396223C();
    uint64_t v14 = sub_2539624D4();
    uint64_t v15 = 1;
    return sub_2539621E0(v14, v15);
  }
  sub_253962058(v4, v2, (void (*)(void))type metadata accessor for ContextProtoBoundingBox);
  sub_253961FFC(v2, (uint64_t)v3, (void (*)(void))type metadata accessor for ContextProtoBoundingBox);
  sub_25396281C(*v3);
  if (!v1)
  {
    sub_25396281C(v3[2]);
    sub_25396281C(v3[4]);
    sub_25396281C(v3[6]);
    sub_253B07620();
    sub_253961FAC();
    sub_253472458(a1, &qword_269CDCCC0);
    sub_253961FAC();
    uint64_t v17 = sub_2534D99FC();
    uint64_t v14 = v18(v17);
    uint64_t v15 = 0;
    return sub_2539621E0(v14, v15);
  }
  sub_253961FAC();
  sub_253472458(a1, &qword_269CDCCC0);
  return sub_253961FAC();
}

void sub_25395C700()
{
  sub_2534847F8();
  sub_2539620F0(v3);
  sub_253B075C0();
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_2534847E0();
  uint64_t v5 = sub_253462A5C(&qword_269CDFB20);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_2534D8CAC();
  uint64_t v8 = type metadata accessor for ContextProtoAliasTypes(v7);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v9);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v10);
  sub_253962104();
  uint64_t v11 = sub_2534D8B48(v2, 1, v8);
  if (v13)
  {
    sub_25396223C();
    sub_253962404();
    sub_25396229C();
LABEL_6:
    sub_2539621E0(v14, v15);
    goto LABEL_7;
  }
  uint64_t v16 = sub_25396241C(v11, v12, (void (*)(void))type metadata accessor for ContextProtoAliasTypes);
  sub_2539623EC(v16, v17, (void (*)(void))type metadata accessor for ContextProtoAliasTypes);
  sub_253962214();
  AliasTypes.init(transcript:)();
  sub_253472458(v1, &qword_269CDFB20);
  sub_253961FAC();
  if (!v0)
  {
    uint64_t v18 = sub_2539620B4();
    uint64_t v14 = v19(v18);
    uint64_t v15 = 0;
    goto LABEL_6;
  }
LABEL_7:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_25395C898()
{
  sub_2534847F8();
  sub_2539620F0(v3);
  sub_253B06AB0();
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_2534847E0();
  uint64_t v5 = sub_253462A5C(&qword_269CE0480);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_2534D8CAC();
  uint64_t v8 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(v7);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v9);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v10);
  sub_253962104();
  uint64_t v11 = sub_2534D8B48(v2, 1, v8);
  if (v13)
  {
    sub_25396223C();
    sub_253962404();
    sub_25396229C();
LABEL_6:
    sub_2539621E0(v14, v15);
    goto LABEL_7;
  }
  uint64_t v16 = sub_25396241C(v11, v12, (void (*)(void))type metadata accessor for TranscriptProtoActionConfirmationSystemStyle);
  sub_2539623EC(v16, v17, (void (*)(void))type metadata accessor for TranscriptProtoActionConfirmationSystemStyle);
  sub_253962214();
  ActionConfirmation.SystemStyle.init(transcript:)();
  sub_253472458(v1, &qword_269CE0480);
  sub_253961FAC();
  if (!v0)
  {
    uint64_t v18 = sub_2539620B4();
    uint64_t v14 = v19(v18);
    uint64_t v15 = 0;
    goto LABEL_6;
  }
LABEL_7:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_25395CA30()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_253B062E0();
  sub_253465998();
  uint64_t v24 = v7;
  MEMORY[0x270FA5388](v8);
  sub_25346CB04();
  uint64_t v9 = sub_253462A5C(&qword_269CE04B8);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_25349888C();
  uint64_t v12 = type metadata accessor for TranscriptProtoResponseDialog(v11);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v13);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v20 - v15;
  sub_253961F60(v3, v1, &qword_269CE04B8);
  sub_2534D8B48(v1, 1, v12);
  if (v17)
  {
    sub_2539630EC();
    sub_253472458(v1, &qword_269CE04B8);
    uint64_t v19 = 1;
  }
  else
  {
    sub_253962058(v1, (uint64_t)v16, (void (*)(void))type metadata accessor for TranscriptProtoResponseDialog);
    sub_253961FFC((uint64_t)v16, v0, (void (*)(void))type metadata accessor for TranscriptProtoResponseDialog);
    v20[1] = *(void *)(v0 + 32);
    uint64_t v21 = v3;
    uint64_t v22 = v6;
    uint64_t v23 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_253963098();
    uint64_t v6 = v22;
    uint64_t v5 = v23;
    sub_253B062B0();
    sub_253961FAC();
    sub_253472458(v21, &qword_269CE04B8);
    sub_253961FAC();
    sub_2534D8E14();
    v18();
    uint64_t v19 = 0;
  }
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v5, v19, 1, v6);
  sub_253962714();
  sub_2534847C8();
}

void sub_25395CC9C()
{
  sub_2534847F8();
  sub_2539620F0(v3);
  sub_253B06680();
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_2534847E0();
  uint64_t v5 = sub_253462A5C(&qword_269CE04C8);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_2534D8CAC();
  uint64_t v8 = type metadata accessor for TranscriptProtoResponseVisual(v7);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v9);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v10);
  sub_253962104();
  uint64_t v11 = sub_2534D8B48(v2, 1, v8);
  if (v13)
  {
    sub_25396223C();
    sub_253962404();
    sub_25396229C();
LABEL_6:
    sub_2539621E0(v14, v15);
    goto LABEL_7;
  }
  uint64_t v16 = sub_25396241C(v11, v12, (void (*)(void))type metadata accessor for TranscriptProtoResponseVisual);
  sub_2539623EC(v16, v17, (void (*)(void))type metadata accessor for TranscriptProtoResponseVisual);
  sub_253962214();
  ResponseVisual.init(transcript:)();
  sub_253472458(v1, &qword_269CE04C8);
  sub_253961FAC();
  if (!v0)
  {
    uint64_t v18 = sub_2539620B4();
    uint64_t v14 = v19(v18);
    uint64_t v15 = 0;
    goto LABEL_6;
  }
LABEL_7:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_25395CE34()
{
  sub_2534847F8();
  sub_2539620F0(v3);
  sub_253B06600();
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_2534847E0();
  uint64_t v5 = sub_253462A5C(&qword_269CE04D0);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_2534D8CAC();
  uint64_t v8 = type metadata accessor for TranscriptProtoUIType(v7);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v9);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v10);
  sub_253962104();
  uint64_t v11 = sub_2534D8B48(v2, 1, v8);
  if (v13)
  {
    sub_25396223C();
    sub_253962404();
    sub_25396229C();
LABEL_6:
    sub_2539621E0(v14, v15);
    goto LABEL_7;
  }
  uint64_t v16 = sub_25396241C(v11, v12, (void (*)(void))type metadata accessor for TranscriptProtoUIType);
  sub_2539623EC(v16, v17, (void (*)(void))type metadata accessor for TranscriptProtoUIType);
  sub_253962214();
  ResponseVisual.UIType.init(transcript:)();
  sub_253472458(v1, &qword_269CE04D0);
  sub_253961FAC();
  if (!v0)
  {
    uint64_t v18 = sub_2539620B4();
    uint64_t v14 = v19(v18);
    uint64_t v15 = 0;
    goto LABEL_6;
  }
LABEL_7:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_25395CFCC()
{
  sub_2534847F8();
  sub_2539620F0(v3);
  sub_253B06450();
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_2534847E0();
  uint64_t v5 = sub_253462A5C(&qword_269CE2010);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_2534D8CAC();
  uint64_t v8 = type metadata accessor for TranscriptProtoDialogType(v7);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v9);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v10);
  sub_253962104();
  uint64_t v11 = sub_2534D8B48(v2, 1, v8);
  if (v13)
  {
    sub_25396223C();
    sub_253962404();
    sub_25396229C();
LABEL_6:
    sub_2539621E0(v14, v15);
    goto LABEL_7;
  }
  uint64_t v16 = sub_25396241C(v11, v12, (void (*)(void))type metadata accessor for TranscriptProtoDialogType);
  sub_2539623EC(v16, v17, (void (*)(void))type metadata accessor for TranscriptProtoDialogType);
  sub_253962214();
  ResponseOutput.DialogType.init(transcript:)();
  sub_253472458(v1, &qword_269CE2010);
  sub_253961FAC();
  if (!v0)
  {
    uint64_t v18 = sub_2539620B4();
    uint64_t v14 = v19(v18);
    uint64_t v15 = 0;
    goto LABEL_6;
  }
LABEL_7:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_25395D164()
{
  sub_2534847F8();
  sub_2539620F0(v3);
  sub_253B063E0();
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_2534847E0();
  uint64_t v5 = sub_253462A5C(&qword_269CE1FF0);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_2534D8CAC();
  uint64_t v8 = type metadata accessor for TranscriptProtoVisualOutput(v7);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v9);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v10);
  sub_253962104();
  uint64_t v11 = sub_2534D8B48(v2, 1, v8);
  if (v13)
  {
    sub_25396223C();
    sub_253962404();
    sub_25396229C();
LABEL_6:
    sub_2539621E0(v14, v15);
    goto LABEL_7;
  }
  uint64_t v16 = sub_25396241C(v11, v12, (void (*)(void))type metadata accessor for TranscriptProtoVisualOutput);
  sub_2539623EC(v16, v17, (void (*)(void))type metadata accessor for TranscriptProtoVisualOutput);
  sub_253962214();
  ResponseOutput.VisualOutput.init(transcript:)();
  sub_253472458(v1, &qword_269CE1FF0);
  sub_253961FAC();
  if (!v0)
  {
    uint64_t v18 = sub_2539620B4();
    uint64_t v14 = v19(v18);
    uint64_t v15 = 0;
    goto LABEL_6;
  }
LABEL_7:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_25395D2FC()
{
  sub_2534847F8();
  uint64_t v5 = v4;
  sub_253962754(v6);
  uint64_t v7 = sub_253B055C0();
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_25346CC6C();
  uint64_t v9 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  sub_2539628E8();
  sub_253465998();
  uint64_t v25 = v11;
  MEMORY[0x270FA5388](v11);
  sub_2534966B0();
  uint64_t v12 = sub_253462A5C(&qword_269CE0450);
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_2534AF2D8();
  uint64_t v15 = type metadata accessor for TranscriptProtoUndoContext(v14);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v16);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v17);
  sub_2534D97C0();
  sub_253961F60(v5, v1, &qword_269CE0450);
  uint64_t v18 = sub_2536D3ACC();
  sub_2534D8B48(v18, v19, v15);
  if (v20)
  {
    sub_2539630EC();
    sub_253472458(v1, &qword_269CE0450);
    uint64_t v21 = 1;
    uint64_t v23 = v25;
    uint64_t v22 = v26;
LABEL_7:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v22, v21, 1, v23);
    goto LABEL_8;
  }
  sub_253962058(v1, v2, (void (*)(void))type metadata accessor for TranscriptProtoUndoContext);
  sub_253961FFC(v2, v3, (void (*)(void))type metadata accessor for TranscriptProtoUndoContext);
  sub_253B05560();
  sub_25395DB2C();
  sub_2539630C8();
  if (!v0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_253B05BA0();
    uint64_t v22 = type metadata accessor for TranscriptProtoUndoContext;
    sub_253961FAC();
    sub_253472458(v5, &qword_269CE0450);
    sub_253962FC4();
    uint64_t v23 = v25;
    sub_253963048();
    sub_2534D8E14();
    v24();
    uint64_t v21 = 0;
    goto LABEL_7;
  }
  sub_253961FAC();
  sub_253472458(v5, &qword_269CE0450);
  sub_253962FC4();
LABEL_8:
  sub_2534847C8();
}

void sub_25395D5E4()
{
  sub_2534847F8();
  sub_2539620F0(v3);
  sub_253B05B40();
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_2534847E0();
  uint64_t v5 = sub_253462A5C(&qword_269CE0468);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_2534D8CAC();
  uint64_t v8 = type metadata accessor for TranscriptProtoFollowUpAction(v7);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v9);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v10);
  sub_253962104();
  uint64_t v11 = sub_2534D8B48(v2, 1, v8);
  if (v13)
  {
    sub_25396223C();
    sub_253962404();
    sub_25396229C();
LABEL_6:
    sub_2539621E0(v14, v15);
    goto LABEL_7;
  }
  uint64_t v16 = sub_25396241C(v11, v12, (void (*)(void))type metadata accessor for TranscriptProtoFollowUpAction);
  sub_2539623EC(v16, v17, (void (*)(void))type metadata accessor for TranscriptProtoFollowUpAction);
  sub_253962214();
  ActionSuccess.FollowUpAction.init(transcript:)();
  sub_253472458(v1, &qword_269CE0468);
  sub_253961FAC();
  if (!v0)
  {
    uint64_t v18 = sub_2539620B4();
    uint64_t v14 = v19(v18);
    uint64_t v15 = 0;
    goto LABEL_6;
  }
LABEL_7:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_25395D77C(uint64_t a1@<X8>)
{
}

void sub_25395D7CC(uint64_t a1@<X8>)
{
}

void sub_25395D81C(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, void (*a3)(void)@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v11 = v5;
  uint64_t v13 = sub_253462A5C(a1);
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  sub_25346CC6C();
  sub_253961F60(v11, v6, a1);
  uint64_t v15 = a2(0);
  sub_2534D8B48(v6, 1, v15);
  if (v16)
  {
    sub_253963074();
    sub_253462A5C(a4);
    sub_253B09730();
    sub_253962F98();
    uint64_t v17 = sub_2534D969C();
    *uint64_t v18 = a5;
    v18[1] = (uint64_t)a4;
    sub_253962224(v17, (uint64_t)v18);
  }
  else
  {
    sub_253962058(v6, a5, a3);
  }
  sub_2536D30A0();
}

void sub_25395D924(uint64_t a1@<X8>)
{
}

void sub_25395D974()
{
}

void sub_25395D9B0(uint64_t a1@<X8>)
{
}

void sub_25395DA00(uint64_t a1@<X8>)
{
}

void sub_25395DA50(uint64_t a1@<X8>)
{
}

void sub_25395DAA0(uint64_t a1@<X8>)
{
}

void sub_25395DAF0()
{
}

void sub_25395DB2C()
{
  sub_2535B4280();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = v0;
  uint64_t v10 = v9;
  uint64_t v11 = sub_253462A5C(v6);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  sub_2534847E0();
  sub_253961F60(v8, v1, v7);
  uint64_t v13 = v5(0);
  sub_2534D8B48(v1, 1, v13);
  if (v14)
  {
    sub_253472458(v1, v7);
    sub_253462A5C(v3);
    sub_253B09730();
    sub_253962F98();
    uint64_t v15 = sub_2534D969C();
    *char v16 = v10;
    v16[1] = v3;
    sub_253962224(v15, (uint64_t)v16);
  }
  else
  {
    sub_25347B88C();
    uint64_t v17 = sub_253578828();
    v18(v17);
  }
  sub_2536D30A0();
  sub_2535B42DC();
}

void sub_25395DC48(uint64_t a1@<X8>)
{
}

void sub_25395DC98(uint64_t a1@<X8>)
{
}

void sub_25395DCE8()
{
}

void sub_25395DD24(uint64_t a1@<X8>)
{
}

void sub_25395DD74(uint64_t a1@<X8>)
{
}

void sub_25395DDC4(uint64_t a1@<X8>)
{
}

void sub_25395DE14(uint64_t a1@<X8>)
{
}

uint64_t sub_25395DE64(uint64_t result)
{
  if ((result & 0x100000000) != 0)
  {
    sub_253462A5C(&qword_269CE5210);
    sub_253B09730();
    sub_253962F98();
    uint64_t v3 = sub_2534D969C();
    *uint64_t v4 = v1;
    v4[1] = v2;
    return sub_253962224(v3, (uint64_t)v4);
  }
  return result;
}

uint64_t sub_25395DEE0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = a1;
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_253462A5C(&qword_269CE5218);
    sub_253B09730();
    sub_253962F98();
    uint64_t v4 = sub_2534D969C();
    *uint64_t v5 = v2;
    v5[1] = v3;
    sub_253962224(v4, (uint64_t)v5);
  }
  return v2;
}

void sub_25395DF70()
{
}

void sub_25395DFAC()
{
}

void sub_25395DFE8()
{
}

void sub_25395E024(uint64_t a1@<X8>)
{
}

void sub_25395E074(uint64_t a1@<X8>)
{
}

void sub_25395E0C4(uint64_t a1@<X8>)
{
}

void sub_25395E114(uint64_t a1@<X8>)
{
}

void sub_25395E164(uint64_t a1@<X8>)
{
}

void sub_25395E1B4(uint64_t a1@<X8>)
{
}

void sub_25395E204(uint64_t a1@<X8>)
{
}

void sub_25395E254(uint64_t a1@<X8>)
{
}

void sub_25395E2A4(uint64_t a1@<X8>)
{
}

void sub_25395E2F4(uint64_t a1@<X8>)
{
}

void sub_25395E344(uint64_t a1@<X8>)
{
}

void sub_25395E394(uint64_t a1@<X8>)
{
}

void sub_25395E3E4(uint64_t a1@<X8>)
{
}

void sub_25395E434()
{
}

void sub_25395E470(uint64_t a1@<X8>)
{
}

void sub_25395E4C0(uint64_t a1@<X8>)
{
}

void sub_25395E510(uint64_t a1@<X8>)
{
}

void sub_25395E560(uint64_t a1@<X8>)
{
}

void sub_25395E5B0(uint64_t a1@<X8>)
{
}

void sub_25395E600(uint64_t a1@<X8>)
{
}

void sub_25395E650()
{
}

void sub_25395E68C(uint64_t a1@<X8>)
{
}

void sub_25395E6DC(uint64_t a1@<X8>)
{
}

void sub_25395E72C(uint64_t a1@<X8>)
{
}

void sub_25395E77C(uint64_t a1@<X8>)
{
}

void sub_25395E7CC(uint64_t a1@<X8>)
{
}

void sub_25395E81C(uint64_t a1@<X8>)
{
}

void sub_25395E86C(uint64_t a1@<X8>)
{
}

void sub_25395E8BC(uint64_t a1@<X8>)
{
}

void sub_25395E90C(uint64_t a1@<X8>)
{
}

void sub_25395E95C(uint64_t a1@<X8>)
{
}

void sub_25395E9AC(uint64_t a1@<X8>)
{
}

void sub_25395E9FC(uint64_t a1@<X8>)
{
}

void sub_25395EA4C()
{
}

uint64_t sub_25395EA64()
{
  return sub_25394E3C0();
}

void ResponseGenerationProtoStatementResultDigest.init(rg:)()
{
  sub_2534847F8();
  uint64_t v7 = v6;
  uint64_t v81 = v8;
  uint64_t v80 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v9);
  sub_253483628(v10, v77);
  uint64_t v11 = sub_253462A5C(&qword_269CE4F00);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  sub_2534AF2A0(v13, v77);
  uint64_t v14 = sub_253462A5C(&qword_269CE0368);
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  uint64_t v82 = (uint64_t)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_253462A5C(&qword_269CDBB28);
  uint64_t v18 = sub_25346CB4C(v17);
  MEMORY[0x270FA5388](v18);
  uint64_t v85 = (uint64_t)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_253462A5C(&qword_269CE0378);
  uint64_t v21 = sub_25346CB4C(v20);
  MEMORY[0x270FA5388](v21);
  uint64_t v84 = (char *)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253B06850();
  sub_253465998();
  uint64_t v86 = v23;
  MEMORY[0x270FA5388](v24);
  sub_2534847E0();
  uint64_t v25 = sub_253462A5C(&qword_269CE0388);
  uint64_t v26 = sub_25346CB4C(v25);
  MEMORY[0x270FA5388](v26);
  sub_25346CC6C();
  uint64_t v27 = sub_253462A5C(&qword_269CE4EF8);
  uint64_t v28 = sub_25346CB4C(v27);
  MEMORY[0x270FA5388](v28);
  sub_25346CC54();
  uint64_t v29 = sub_253462A5C(&qword_269CE0398);
  uint64_t v30 = sub_25346CB4C(v29);
  MEMORY[0x270FA5388](v30);
  sub_2534966B0();
  uint64_t v31 = sub_253462A5C(&qword_26B241270);
  uint64_t v32 = sub_25346CB4C(v31);
  MEMORY[0x270FA5388](v32);
  sub_2534835B0();
  uint64_t v33 = sub_253462A5C(&qword_269CDFA70);
  uint64_t v34 = sub_25346CB4C(v33);
  MEMORY[0x270FA5388](v34);
  sub_253465A3C();
  sub_253963098();
  sub_253961F60(v35, v36, v37);
  sub_25395F1DC();
  if (!v1)
  {
    uint64_t v87 = v2;
    uint64_t v78 = v4;
    uint64_t v38 = (int *)type metadata accessor for StatementResultDigest(0);
    sub_253961F60(v7 + v38[5], v0, &qword_269CE4EF8);
    sub_2539618C8(v0, v5);
    uint64_t v39 = v7 + v38[6];
    uint64_t v40 = v39 + *(int *)(type metadata accessor for StatementResult(0) + 20);
    sub_253579360();
    sub_2534B3428();
    v41();
    uint64_t v42 = v78;
    TranscriptProtoStatementOutcome.init(handwritten:)(v3, v43, v44, v45, v46, v47, v48, v49, v77, v78);
    uint64_t v86 = v5;
    type metadata accessor for TranscriptProtoStatementOutcome(0);
    sub_253578EBC(v42, 0);
    int v50 = *(unsigned __int8 *)(v7 + v38[7]);
    if (v50 == 2) {
      char v51 = 2;
    }
    else {
      char v51 = v50 & 1;
    }
    uint64_t v52 = type metadata accessor for StatementResultPayload(0);
    sub_253961F60(v40 + *(int *)(v52 + 20), v85, &qword_269CDBB28);
    uint64_t v53 = (uint64_t)v84;
    sub_253960658();
    uint64_t v54 = v83;
    sub_253961F60(v7 + v38[8], v83, &qword_269CE4F00);
    sub_25395F4A0(v54, v82);
    uint64_t v55 = sub_253B08F30();
    uint64_t v56 = v79;
    sub_25346CC08(v79, v57, v58, v55);
    uint64_t v59 = (int *)v80;
    uint64_t v83 = v56 + *(int *)(v80 + 20);
    uint64_t v60 = v83;
    uint64_t v61 = type metadata accessor for TranscriptProtoAction(0);
    sub_25346CC08(v60, v62, v63, v61);
    uint64_t v77 = v56 + v59[6];
    sub_253578EBC(v77, 1);
    uint64_t v64 = v59[7];
    *(unsigned char *)(v56 + v64) = 2;
    uint64_t v65 = v59[8];
    uint64_t v85 = v7;
    uint64_t v66 = v56 + v65;
    uint64_t v67 = type metadata accessor for TranscriptProtoResponseManifest(0);
    sub_25346CC08(v66, v68, v69, v67);
    sub_253B08F00();
    uint64_t v70 = sub_253962700();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v70, v71, v72, v73);
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    sub_253961BF0(v87, v56, &qword_269CDFA70);
    sub_253961BF0(v86, v83, &qword_269CE0398);
    sub_253961BF0(v78, v77, &qword_269CE0388);
    *(unsigned char *)(v56 + v64) = v51;
    sub_253961BF0(v53, v66, &qword_269CE0378);
    uint64_t v74 = sub_253579360();
    sub_253961BF0(v74, v75, v76);
    sub_253962058(v56, v81, (void (*)(void))type metadata accessor for ResponseGenerationProtoStatementResultDigest);
  }
  sub_253961FAC();
  sub_2534847C8();
}

void sub_25395F124()
{
}

void sub_25395F180()
{
}

void sub_25395F1DC()
{
  sub_2534847F8();
  uint64_t v43 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = sub_253962754(v7);
  uint64_t v44 = v9(v8);
  sub_253465998();
  MEMORY[0x270FA5388](v10);
  sub_2534D9C1C();
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  sub_253963138(v12, v13, v14, v15, v16, v17, v18, v19, v42);
  uint64_t v20 = sub_253462A5C(v6);
  uint64_t v21 = sub_25346CB4C(v20);
  MEMORY[0x270FA5388](v21);
  sub_2534835B0();
  uint64_t v22 = v4(0);
  sub_253465998();
  uint64_t v24 = v23;
  MEMORY[0x270FA5388](v25);
  sub_25353CE24();
  MEMORY[0x270FA5388](v26);
  uint64_t v27 = sub_253963160();
  sub_253961F60(v27, v0, v6);
  uint64_t v28 = sub_2539627D4();
  sub_2534D8B48(v28, v29, v22);
  if (v30)
  {
    sub_253963074();
    sub_253472458(v0, v6);
    uint64_t v31 = 1;
    uint64_t v33 = v44;
    uint64_t v32 = v45;
LABEL_7:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v32, v31, 1, v33);
    goto LABEL_8;
  }
  sub_25347FA84();
  v34();
  sub_2534AF234();
  uint64_t v36 = v35();
  v43(v36);
  if (!v1)
  {
    sub_25351C3E8();
    v38();
    uint64_t v33 = v44;
    sub_253962810();
    v39();
    sub_253963074();
    sub_25351C3E8();
    v40();
    uint64_t v32 = v45;
    sub_253962810();
    v41();
    uint64_t v31 = 0;
    goto LABEL_7;
  }
  uint64_t v37 = *(void (**)(void))(v24 + 8);
  sub_25351C3E8();
  v37();
  sub_253963074();
  sub_25351C3E8();
  v37();
LABEL_8:
  sub_2534847C8();
}

void sub_25395F444()
{
}

uint64_t sub_25395F4A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v3 = sub_253B08F00();
  uint64_t v21 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_253462A5C(&qword_269CE4F00);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253B09460();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v21 - v14;
  sub_253961F60(a1, (uint64_t)v8, &qword_269CE4F00);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9) == 1)
  {
    sub_253472458(a1, &qword_269CE4F00);
    sub_253472458((uint64_t)v8, &qword_269CE4F00);
    uint64_t v16 = 1;
    uint64_t v17 = v22;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    sub_253B09450();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v10 + 8);
    v18(v13, v9);
    sub_253472458(a1, &qword_269CE4F00);
    v18(v15, v9);
    uint64_t v19 = v22;
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v22, v5, v3);
    uint64_t v16 = 0;
    uint64_t v17 = v19;
  }
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v17, v16, 1, v3);
}

uint64_t sub_25395F758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (a2)
  {
    uint64_t v8 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    sub_253961E88(a1, a2);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = a3;
    uint64_t v9 = (uint64_t)a4;
    uint64_t v10 = 0;
    uint64_t v11 = 1;
    uint64_t v12 = v8;
  }
  else
  {
    type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
    uint64_t v9 = sub_253962700();
  }
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v9, v10, v11, v12);
}

void sub_25395F808()
{
  sub_2534847F8();
  uint64_t v4 = sub_2539620F0(v3);
  type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  sub_2534847E0();
  uint64_t v6 = sub_253462A5C(&qword_269CDBB30);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_25349888C();
  uint64_t v8 = sub_253B08270();
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v10);
  sub_25396216C();
  sub_2534D8B48(v2, 1, v8);
  if (v11)
  {
    sub_25396223C();
    sub_2539624D4();
    sub_25396229C();
LABEL_7:
    sub_2539623A8(v12, v13);
    goto LABEL_8;
  }
  uint64_t v14 = sub_25396212C();
  v15(v14);
  uint64_t v16 = sub_25396214C();
  v17(v16);
  sub_253962360();
  ContextProtoQueryDecorationToolRetrievalResponse.init(handwritten:)();
  if (!v0)
  {
    sub_253472458(v1, &qword_269CDBB30);
    uint64_t v20 = sub_2539620D8();
    uint64_t v22 = v21(v20);
    uint64_t v12 = sub_2539622F8(v22, v23, (void (*)(void))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
    uint64_t v13 = 0;
    goto LABEL_7;
  }
  sub_253472458(v1, &qword_269CDBB30);
  uint64_t v18 = sub_2539620D8();
  v19(v18);
LABEL_8:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_25395F984()
{
  sub_2534847F8();
  uint64_t v23 = v2;
  uint64_t v4 = v3;
  uint64_t v24 = type metadata accessor for TranscriptProtoStatementID(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  sub_25346CC6C();
  uint64_t v6 = sub_253462A5C(&qword_269CDB460);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_2534D9B74();
  uint64_t v8 = sub_253B059D0();
  sub_253465998();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  sub_25353CE24();
  MEMORY[0x270FA5388](v12);
  sub_2534D97C0();
  uint64_t v13 = v4;
  sub_253961F60(v4, v1, &qword_269CDB460);
  sub_2534D8B48(v1, 1, v8);
  if (v14)
  {
    sub_2539630EC();
    sub_253472458(v1, &qword_269CDB460);
    uint64_t v22 = 1;
  }
  else
  {
    sub_25347FA84();
    v15();
    sub_2534AF234();
    v16();
    int v17 = sub_253B059C0();
    uint64_t v18 = sub_253B059A0();
    uint64_t v20 = v19;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *(_DWORD *)uint64_t v0 = v17;
    *(void *)(v0 + 8) = v18;
    *(void *)(v0 + 16) = v20;
    uint64_t v21 = *(void (**)(void))(v10 + 8);
    sub_25351C3E8();
    v21();
    sub_253472458(v13, &qword_269CDB460);
    sub_25351C3E8();
    v21();
    sub_253962058(v0, v23, (void (*)(void))type metadata accessor for TranscriptProtoStatementID);
    uint64_t v22 = 0;
  }
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v23, v22, 1, v24);
  sub_2534847C8();
}

void sub_25395FB90()
{
  sub_2534847F8();
  uint64_t v4 = v3;
  uint64_t v6 = sub_253962754(v5);
  uint64_t v34 = type metadata accessor for TranscriptProtoPromptSelection(v6);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v7);
  uint64_t v33 = (uint64_t *)((char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2534B324C();
  MEMORY[0x270FA5388](v9);
  sub_2534B347C();
  uint64_t v10 = sub_253462A5C(&qword_269CDCB00);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  sub_2534B464C();
  uint64_t v12 = sub_253B06770();
  sub_253465998();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  sub_2535B38D8();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  MEMORY[0x270FA5388](v17);
  uint64_t v18 = sub_253963160();
  sub_253961F60(v18, v1, &qword_269CDCB00);
  sub_2534D8B48(v1, 1, v12);
  if (v19)
  {
    sub_253472458(v4, &qword_269CDCB00);
    sub_2539630C8();
    uint64_t v20 = 1;
    uint64_t v21 = v35;
LABEL_11:
    sub_253578EBC(v21, v20);
    sub_253962714();
    sub_2534847C8();
    return;
  }
  uint64_t v32 = v4;
  sub_25347FA84();
  v22();
  uint64_t v23 = *(void (**)(void))(v14 + 16);
  sub_253962F0C();
  v23();
  sub_253962F0C();
  v23();
  int v24 = (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 88))(v0, v12);
  int v25 = v24;
  int v26 = *MEMORY[0x263F4C6D8];
  if (v24 == *MEMORY[0x263F4C6D8])
  {
    (*(void (**)(uint64_t *, uint64_t))(v14 + 96))(v0, v12);
    uint64_t v31 = *v0;
    goto LABEL_10;
  }
  if (v24 == *MEMORY[0x263F4C6E8])
  {
    uint64_t v31 = 0;
LABEL_10:
    LODWORD(v34) = v25 != v26;
    uint64_t v27 = (uint64_t)v33;
    void *v33 = 0;
    *(_WORD *)(v27 + 8) = 256;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    uint64_t v28 = *(void (**)(void))(v14 + 8);
    sub_2534D91AC();
    v28();
    sub_253962058(v27, v2, (void (*)(void))type metadata accessor for TranscriptProtoPromptSelection);
    uint64_t v29 = v32;
    *(void *)uint64_t v2 = v31;
    *(_WORD *)(v2 + 8) = v34;
    sub_253472458(v29, &qword_269CDCB00);
    sub_2534D91AC();
    v28();
    uint64_t v21 = v35;
    sub_253962058(v2, v35, (void (*)(void))type metadata accessor for TranscriptProtoPromptSelection);
    uint64_t v20 = 0;
    goto LABEL_11;
  }
  if (v24 == *MEMORY[0x263F4C6E0])
  {
    uint64_t v31 = 1;
    goto LABEL_10;
  }
  sub_253B0A4B0();
  __break(1u);
}

void sub_25395FEC0()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v37 = type metadata accessor for TranscriptProtoResponseDialog(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v6);
  sub_25346CC6C();
  uint64_t v7 = sub_253462A5C(&qword_269CE50B0);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_2534D9B74();
  uint64_t v9 = sub_253B062E0();
  sub_253465998();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  sub_25353CE24();
  MEMORY[0x270FA5388](v13);
  sub_2534D97C0();
  uint64_t v36 = v3;
  sub_253961F60(v3, v1, &qword_269CE50B0);
  sub_2534D8B48(v1, 1, v9);
  if (v14)
  {
    sub_253472458(v3, &qword_269CE50B0);
    sub_253472458(v1, &qword_269CE50B0);
    uint64_t v30 = 1;
  }
  else
  {
    sub_25347FA84();
    v15();
    sub_2534AF234();
    v16();
    uint64_t v17 = sub_253B062C0();
    uint64_t v34 = v18;
    uint64_t v19 = sub_253B062D0();
    uint64_t v32 = v20;
    uint64_t v33 = v19;
    uint64_t v35 = v5;
    uint64_t v21 = sub_253B06290();
    uint64_t v31 = v22;
    uint64_t v23 = sub_253B062A0();
    uint64_t v25 = v24;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    *uint64_t v0 = v17;
    v0[1] = v34;
    v0[2] = v33;
    v0[3] = v32;
    v0[4] = v21;
    uint64_t v5 = v35;
    v0[5] = v31;
    v0[6] = v23;
    v0[7] = v25;
    int v26 = *(void (**)(void))(v11 + 8);
    sub_25351C3E8();
    v26();
    sub_253472458(v36, &qword_269CE50B0);
    sub_25351C3E8();
    v26();
    uint64_t v27 = sub_2534D9724();
    sub_253962058(v27, v28, v29);
    uint64_t v30 = 0;
  }
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v5, v30, 1, v37);
  sub_2534847C8();
}

void sub_25396010C()
{
  sub_2534847F8();
  uint64_t v4 = sub_2539620F0(v3);
  uint64_t v33 = type metadata accessor for TranscriptProtoResponseVisual(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  sub_2534847E0();
  uint64_t v6 = sub_253462A5C(&qword_269CE50A8);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_25349888C();
  uint64_t v8 = sub_253B06680();
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v10);
  sub_25396216C();
  sub_2534D8B48(v2, 1, v8);
  if (v11)
  {
    sub_25396223C();
    sub_2539624D4();
    sub_25396229C();
LABEL_7:
    sub_2539623A8(v12, v13);
    goto LABEL_8;
  }
  uint64_t v14 = sub_25396212C();
  v15(v14);
  uint64_t v16 = sub_25396214C();
  v17(v16);
  uint64_t v18 = sub_253962360();
  TranscriptProtoResponseVisual.init(handwritten:)(v18, v19, v20, v21, v22, v23, v24, v25, v32, v33);
  if (!v0)
  {
    sub_253472458(v1, &qword_269CE50A8);
    uint64_t v28 = sub_2539620D8();
    uint64_t v30 = v29(v28);
    uint64_t v12 = sub_2539622F8(v30, v31, (void (*)(void))type metadata accessor for TranscriptProtoResponseVisual);
    uint64_t v13 = 0;
    goto LABEL_7;
  }
  sub_253472458(v1, &qword_269CE50A8);
  uint64_t v26 = sub_2539620D8();
  v27(v26);
LABEL_8:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_253960288()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  uint64_t v26 = v4;
  uint64_t v5 = sub_253462A5C(&qword_269CE50A0);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_25349888C();
  uint64_t v7 = sub_253B06780();
  sub_253465998();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v11);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_253963124();
  sub_253961F60(v13, v1, &qword_269CE50A0);
  uint64_t v14 = sub_2536D42D4();
  sub_2534D8B48(v14, v15, v7);
  if (v22)
  {
    sub_253472458(v3, &qword_269CE50A0);
    sub_253472458(v1, &qword_269CE50A0);
    char v16 = 2;
LABEL_10:
    char *v26 = v16;
    goto LABEL_11;
  }
  sub_25347FA84();
  v17();
  uint64_t v18 = *(void (**)(void))(v9 + 16);
  sub_253962850();
  v18();
  sub_253963024();
  sub_253962850();
  v18();
  uint64_t v19 = sub_2539627B8();
  int v21 = v20(v19);
  BOOL v22 = v21 == *MEMORY[0x263F4C758] || v21 == *MEMORY[0x263F4C750];
  if (v22)
  {
    char v16 = v21 != *MEMORY[0x263F4C758];
    uint64_t v23 = *(void (**)(void))(v9 + 8);
    sub_2534D91AC();
    v23();
    sub_253472458(v3, &qword_269CE50A0);
    sub_2534D91AC();
    v23();
    goto LABEL_10;
  }
  sub_25394EA00();
  sub_2534D969C();
  *uint64_t v24 = 0;
  swift_willThrow();
  uint64_t v25 = *(void (**)(void))(v9 + 8);
  sub_2534D91AC();
  v25();
  sub_2539627B8();
  sub_2534D91AC();
  v25();
  sub_253472458(v3, &qword_269CE50A0);
  ((void (*)(uint64_t, uint64_t))v25)(v0, v7);
LABEL_11:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_2539604DC()
{
  sub_2534847F8();
  uint64_t v4 = sub_2539620F0(v3);
  type metadata accessor for TranscriptProtoUIType(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  sub_2534847E0();
  uint64_t v6 = sub_253462A5C(&qword_269CE5098);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_25349888C();
  uint64_t v8 = sub_253B06600();
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v10);
  sub_25396216C();
  sub_2534D8B48(v2, 1, v8);
  if (v11)
  {
    sub_25396223C();
    sub_2539624D4();
    sub_25396229C();
LABEL_7:
    sub_2539623A8(v12, v13);
    goto LABEL_8;
  }
  uint64_t v14 = sub_25396212C();
  v15(v14);
  uint64_t v16 = sub_25396214C();
  v17(v16);
  sub_253962360();
  TranscriptProtoUIType.init(handwritten:)();
  if (!v0)
  {
    sub_253472458(v1, &qword_269CE5098);
    uint64_t v20 = sub_2539620D8();
    uint64_t v22 = v21(v20);
    uint64_t v12 = sub_2539622F8(v22, v23, (void (*)(void))type metadata accessor for TranscriptProtoUIType);
    uint64_t v13 = 0;
    goto LABEL_7;
  }
  sub_253472458(v1, &qword_269CE5098);
  uint64_t v18 = sub_2539620D8();
  v19(v18);
LABEL_8:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_253960658()
{
  sub_2534847F8();
  uint64_t v4 = sub_2539620F0(v3);
  uint64_t v33 = type metadata accessor for TranscriptProtoResponseManifest(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  sub_2534847E0();
  uint64_t v6 = sub_253462A5C(&qword_269CDBB28);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_25349888C();
  uint64_t v8 = sub_253B06820();
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v10);
  sub_25396216C();
  sub_2534D8B48(v2, 1, v8);
  if (v11)
  {
    sub_25396223C();
    sub_2539624D4();
    sub_25396229C();
LABEL_7:
    sub_2539623A8(v12, v13);
    goto LABEL_8;
  }
  uint64_t v14 = sub_25396212C();
  v15(v14);
  uint64_t v16 = sub_25396214C();
  v17(v16);
  uint64_t v18 = sub_253962360();
  TranscriptProtoResponseManifest.init(handwritten:)(v18, v19, v20, v21, v22, v23, v24, v25, v32, v33, SWORD2(v33), SBYTE6(v33), SHIBYTE(v33));
  if (!v0)
  {
    sub_253472458(v1, &qword_269CDBB28);
    uint64_t v28 = sub_2539620D8();
    uint64_t v30 = v29(v28);
    uint64_t v12 = sub_2539622F8(v30, v31, (void (*)(void))type metadata accessor for TranscriptProtoResponseManifest);
    uint64_t v13 = 0;
    goto LABEL_7;
  }
  sub_253472458(v1, &qword_269CDBB28);
  uint64_t v26 = sub_2539620D8();
  v27(v26);
LABEL_8:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_2539607D4()
{
  sub_2535B4280();
  uint64_t v5 = v4;
  if (v1)
  {
    uint64_t v6 = v3;
    uint64_t v7 = v2;
    uint64_t v8 = v1;
    uint64_t v9 = v0;
    uint64_t v10 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    uint64_t v11 = sub_2534D9724();
    sub_253961BAC(v11, v12);
    *uint64_t v5 = v9;
    v5[1] = v8;
    v5[2] = v7;
    v5[3] = v6;
    uint64_t v13 = (uint64_t)v5;
    uint64_t v14 = 0;
    uint64_t v15 = 1;
    uint64_t v16 = v10;
  }
  else
  {
    type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
    uint64_t v13 = sub_253962700();
  }
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v13, v14, v15, v16);
  sub_2535B42DC();
}

void sub_253960888()
{
  sub_2534847F8();
  uint64_t v4 = sub_253962720(v3);
  uint64_t v5 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v6);
  sub_2534847E0();
  uint64_t v7 = sub_253462A5C(&qword_269CE50F8);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_2534B33AC();
  uint64_t v9 = sub_253B06AB0();
  sub_253465998();
  MEMORY[0x270FA5388](v10);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v11);
  sub_2539628C0();
  sub_2534D8B48(v2, 1, v9);
  if (v12)
  {
    sub_253472458(v0, &qword_269CE50F8);
    sub_253472458(v2, &qword_269CE50F8);
    uint64_t v17 = 1;
    uint64_t v16 = v18;
  }
  else
  {
    sub_25347FA84();
    v13();
    sub_2534AF234();
    v14();
    TranscriptProtoActionConfirmationSystemStyle.init(handwritten:)();
    sub_253472458(v0, &qword_269CE50F8);
    sub_2534D9220();
    v15();
    sub_253962058(v1, v18, (void (*)(void))type metadata accessor for TranscriptProtoActionConfirmationSystemStyle);
    uint64_t v16 = sub_253962F48();
  }
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v16, v17, 1, v5);
  sub_253962714();
  sub_2534847C8();
}

void sub_253960A4C()
{
  sub_2534847F8();
  uint64_t v4 = sub_2539620F0(v3);
  uint64_t v33 = type metadata accessor for TranscriptProtoResponseOutput(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  sub_2534847E0();
  uint64_t v6 = sub_253462A5C(&qword_269CE5150);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_25349888C();
  uint64_t v8 = sub_253B064B0();
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v10);
  sub_25396216C();
  sub_2534D8B48(v2, 1, v8);
  if (v11)
  {
    sub_25396223C();
    sub_2539624D4();
    sub_25396229C();
LABEL_7:
    sub_2539623A8(v12, v13);
    goto LABEL_8;
  }
  uint64_t v14 = sub_25396212C();
  v15(v14);
  uint64_t v16 = sub_25396214C();
  v17(v16);
  uint64_t v18 = sub_253962360();
  TranscriptProtoResponseOutput.init(handwritten:)(v18, v19, v20, v21, v22, v23, v24, v25, v32, v33);
  if (!v0)
  {
    sub_253472458(v1, &qword_269CE5150);
    uint64_t v28 = sub_2539620D8();
    uint64_t v30 = v29(v28);
    uint64_t v12 = sub_2539622F8(v30, v31, (void (*)(void))type metadata accessor for TranscriptProtoResponseOutput);
    uint64_t v13 = 0;
    goto LABEL_7;
  }
  sub_253472458(v1, &qword_269CE5150);
  uint64_t v26 = sub_2539620D8();
  v27(v26);
LABEL_8:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_253960BC8()
{
  sub_2534847F8();
  uint64_t v4 = sub_2539620F0(v3);
  type metadata accessor for TranscriptProtoDialogType(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  sub_2534847E0();
  uint64_t v6 = sub_253462A5C(&qword_269CE5128);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_25349888C();
  uint64_t v8 = sub_253B06450();
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v10);
  sub_25396216C();
  sub_2534D8B48(v2, 1, v8);
  if (v11)
  {
    sub_25396223C();
    sub_2539624D4();
    sub_25396229C();
LABEL_7:
    sub_2539623A8(v12, v13);
    goto LABEL_8;
  }
  uint64_t v14 = sub_25396212C();
  v15(v14);
  uint64_t v16 = sub_25396214C();
  v17(v16);
  sub_253962360();
  TranscriptProtoDialogType.init(handwritten:)();
  if (!v0)
  {
    sub_253472458(v1, &qword_269CE5128);
    uint64_t v20 = sub_2539620D8();
    uint64_t v22 = v21(v20);
    uint64_t v12 = sub_2539622F8(v22, v23, (void (*)(void))type metadata accessor for TranscriptProtoDialogType);
    uint64_t v13 = 0;
    goto LABEL_7;
  }
  sub_253472458(v1, &qword_269CE5128);
  uint64_t v18 = sub_2539620D8();
  v19(v18);
LABEL_8:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_253960D44()
{
  sub_2534847F8();
  uint64_t v4 = sub_2539620F0(v3);
  type metadata accessor for TranscriptProtoVisualOutput(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  sub_2534847E0();
  uint64_t v6 = sub_253462A5C(&qword_269CE5120);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_25349888C();
  uint64_t v8 = sub_253B063E0();
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v10);
  sub_25396216C();
  sub_2534D8B48(v2, 1, v8);
  if (v11)
  {
    sub_25396223C();
    sub_2539624D4();
    sub_25396229C();
LABEL_7:
    sub_2539623A8(v12, v13);
    goto LABEL_8;
  }
  uint64_t v14 = sub_25396212C();
  v15(v14);
  uint64_t v16 = sub_25396214C();
  v17(v16);
  sub_253962360();
  TranscriptProtoVisualOutput.init(handwritten:)();
  if (!v0)
  {
    sub_253472458(v1, &qword_269CE5120);
    uint64_t v20 = sub_2539620D8();
    uint64_t v22 = v21(v20);
    uint64_t v12 = sub_2539622F8(v22, v23, (void (*)(void))type metadata accessor for TranscriptProtoVisualOutput);
    uint64_t v13 = 0;
    goto LABEL_7;
  }
  sub_253472458(v1, &qword_269CE5120);
  uint64_t v18 = sub_2539620D8();
  v19(v18);
LABEL_8:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_253960EC0()
{
  sub_2534847F8();
  uint64_t v2 = (uint64_t *)v1;
  uint64_t v4 = v3;
  sub_253961F14(v1, (uint64_t)v13, &qword_269CE5138);
  char v6 = v13[0];
  uint64_t v5 = v14;
  uint64_t v7 = v15;
  uint64_t v12 = v16;
  uint64_t v8 = v17;
  type metadata accessor for TranscriptProtoHandle(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v9);
  sub_2534966B0();
  uint64_t v10 = sub_253961F14((uint64_t)v2, (uint64_t)v18, &qword_269CE5138);
  if (v18[2] == 1)
  {
    uint64_t v11 = 1;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    sub_253961E0C(v2);
    *(unsigned char *)uint64_t v0 = v6;
    *(void *)(v0 + 8) = v5;
    *(void *)(v0 + 16) = v7;
    *(void *)(v0 + 24) = v12;
    *(void *)(v0 + 32) = v8;
    uint64_t v10 = sub_253962058(v0, v4, (void (*)(void))type metadata accessor for TranscriptProtoHandle);
    uint64_t v11 = 0;
  }
  sub_2539621E0(v10, v11);
  sub_253962714();
  sub_2534847C8();
}

void sub_253960FDC()
{
  sub_2534847F8();
  uint64_t v43 = v3;
  uint64_t v5 = v4;
  sub_253B055C0();
  sub_253465998();
  uint64_t v40 = v7;
  uint64_t v41 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = sub_25349888C();
  uint64_t v44 = type metadata accessor for TranscriptProtoUndoContext(v8);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v9);
  sub_25346CC6C();
  uint64_t v10 = sub_253462A5C(&qword_269CE50C0);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = sub_2539628E8();
  sub_253465998();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v37 - v17;
  uint64_t v42 = v5;
  uint64_t v19 = sub_2534DA828();
  sub_253961F60(v19, v20, &qword_269CE50C0);
  sub_2534D8B48(v0, 1, v12);
  if (v21)
  {
    sub_253472458(v42, &qword_269CE50C0);
    sub_2539630C8();
    uint64_t v36 = 1;
    uint64_t v35 = v43;
  }
  else
  {
    sub_25347FA84();
    v22();
    sub_2534AF234();
    v23();
    sub_253B05B90();
    uint64_t v24 = sub_253B05570();
    uint64_t v38 = v25;
    uint64_t v39 = v24;
    sub_2534659CC();
    v26();
    uint64_t v27 = sub_253B05B70();
    uint64_t v29 = v28;
    uint64_t v30 = sub_253B05B80();
    uint64_t v32 = v31;
    _s30IntelligenceFlowPlannerSupport033TranscriptProtoRequestContentStopH0VACycfC_0();
    uint64_t v33 = v38;
    *uint64_t v2 = v39;
    v2[1] = v33;
    v2[2] = v27;
    v2[3] = v29;
    v2[4] = v30;
    v2[5] = v32;
    uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v34(v1, v12);
    sub_253472458(v42, &qword_269CE50C0);
    v34((uint64_t)v18, v12);
    sub_253962058((uint64_t)v2, v43, (void (*)(void))type metadata accessor for TranscriptProtoUndoContext);
    uint64_t v35 = sub_253962F48();
  }
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v35, v36, 1, v44);
  sub_2534847C8();
}

void sub_253961274()
{
  sub_2534847F8();
  uint64_t v4 = sub_2539620F0(v3);
  type metadata accessor for TranscriptProtoFollowUpAction(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  sub_2534847E0();
  uint64_t v6 = sub_253462A5C(&qword_269CE50B8);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_25349888C();
  uint64_t v8 = sub_253B05B40();
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v10);
  sub_25396216C();
  sub_2534D8B48(v2, 1, v8);
  if (v11)
  {
    sub_25396223C();
    sub_2539624D4();
    sub_25396229C();
LABEL_7:
    sub_2539623A8(v12, v13);
    goto LABEL_8;
  }
  uint64_t v14 = sub_25396212C();
  v15(v14);
  uint64_t v16 = sub_25396214C();
  v17(v16);
  sub_253962360();
  TranscriptProtoFollowUpAction.init(handwritten:)();
  if (!v0)
  {
    sub_253472458(v1, &qword_269CE50B8);
    uint64_t v20 = sub_2539620D8();
    uint64_t v22 = v21(v20);
    uint64_t v12 = sub_2539622F8(v22, v23, (void (*)(void))type metadata accessor for TranscriptProtoFollowUpAction);
    uint64_t v13 = 0;
    goto LABEL_7;
  }
  sub_253472458(v1, &qword_269CE50B8);
  uint64_t v18 = sub_2539620D8();
  v19(v18);
LABEL_8:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_2539613F0()
{
  sub_2534847F8();
  uint64_t v4 = sub_2539620F0(v3);
  type metadata accessor for ContextProtoAliasTypes(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  sub_2534847E0();
  uint64_t v6 = sub_253462A5C((uint64_t *)&unk_269CDB4D0);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_25349888C();
  uint64_t v8 = sub_253B075C0();
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v10);
  sub_25396216C();
  sub_2534D8B48(v2, 1, v8);
  if (v11)
  {
    sub_25396223C();
    sub_2539624D4();
    sub_25396229C();
LABEL_7:
    sub_2539623A8(v12, v13);
    goto LABEL_8;
  }
  uint64_t v14 = sub_25396212C();
  v15(v14);
  uint64_t v16 = sub_25396214C();
  v17(v16);
  sub_253962360();
  ContextProtoAliasTypes.init(handwritten:)();
  if (!v0)
  {
    sub_253472458(v1, (uint64_t *)&unk_269CDB4D0);
    uint64_t v20 = sub_2539620D8();
    uint64_t v22 = v21(v20);
    uint64_t v12 = sub_2539622F8(v22, v23, (void (*)(void))type metadata accessor for ContextProtoAliasTypes);
    uint64_t v13 = 0;
    goto LABEL_7;
  }
  sub_253472458(v1, (uint64_t *)&unk_269CDB4D0);
  uint64_t v18 = sub_2539620D8();
  v19(v18);
LABEL_8:
  sub_2536D3D5C();
  sub_2534847C8();
}

#error "253961694: call analysis failed (funcsize=95)"

void sub_253961704()
{
  sub_2534847F8();
  uint64_t v4 = sub_253962720(v3);
  uint64_t v5 = type metadata accessor for TranscriptProtoDeviceDetails(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v6);
  sub_2534847E0();
  uint64_t v7 = sub_253462A5C(&qword_26B248CD0);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_2534B33AC();
  uint64_t v9 = sub_253B05CB0();
  sub_253465998();
  MEMORY[0x270FA5388](v10);
  sub_2534D9C1C();
  MEMORY[0x270FA5388](v11);
  sub_2539628C0();
  sub_2534D8B48(v2, 1, v9);
  if (v12)
  {
    sub_253472458(v0, &qword_26B248CD0);
    sub_253472458(v2, &qword_26B248CD0);
    uint64_t v17 = 1;
    uint64_t v16 = v18;
  }
  else
  {
    sub_25347FA84();
    v13();
    sub_2534AF234();
    v14();
    TranscriptProtoDeviceDetails.init(handwritten:)();
    sub_253472458(v0, &qword_26B248CD0);
    sub_2534D9220();
    v15();
    sub_253962058(v1, v18, (void (*)(void))type metadata accessor for TranscriptProtoDeviceDetails);
    uint64_t v16 = sub_253962F48();
  }
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v16, v17, 1, v5);
  sub_253962714();
  sub_2534847C8();
}

uint64_t sub_2539618C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = type metadata accessor for TranscriptProtoAction(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_253462A5C(&qword_269CE4EF8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Action(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v19 - v14;
  sub_253961F60(a1, (uint64_t)v9, &qword_269CE4EF8);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10) == 1)
  {
    sub_253472458(a1, &qword_269CE4EF8);
    sub_253472458((uint64_t)v9, &qword_269CE4EF8);
    uint64_t v16 = 1;
    uint64_t v17 = v20;
  }
  else
  {
    sub_253962058((uint64_t)v9, (uint64_t)v15, (void (*)(void))type metadata accessor for Action);
    sub_253961FFC((uint64_t)v15, (uint64_t)v13, (void (*)(void))type metadata accessor for Action);
    TranscriptProtoAction.init(handwritten:)();
    sub_253472458(a1, &qword_269CE4EF8);
    uint64_t result = sub_253961FAC();
    if (v2) {
      return result;
    }
    uint64_t v17 = v20;
    sub_253962058((uint64_t)v6, v20, (void (*)(void))type metadata accessor for TranscriptProtoAction);
    uint64_t v16 = 0;
  }
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v17, v16, 1, v4);
}

void sub_253961B2C()
{
}

uint64_t sub_253961B44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_253961BAC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_253961BF0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_253962E00(a1, a2, a3);
  sub_25346CAF4();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v3, v4);
  return v3;
}

_UNKNOWN **sub_253961C40()
{
  return &protocol witness table for ResponseGenerationProtoResponseGenerationInput;
}

uint64_t sub_253961C4C(uint64_t a1)
{
  uint64_t result = sub_253961ECC(&qword_269CE5000, (void (*)(uint64_t))type metadata accessor for ResponseGenerationInput);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253961CA4()
{
  return sub_253961ECC((unint64_t *)&qword_269CE03C8, (void (*)(uint64_t))type metadata accessor for ResponseGenerationProtoResponseGenerationInput);
}

_UNKNOWN **sub_253961CEC()
{
  return &protocol witness table for ResponseGenerationProtoStatementResultDigest;
}

uint64_t sub_253961CF8(uint64_t a1)
{
  uint64_t result = sub_253961ECC(&qword_269CE5008, (void (*)(uint64_t))type metadata accessor for StatementResultDigest);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_253961D50()
{
  return sub_253961ECC(&qword_269CE0350, (void (*)(uint64_t))type metadata accessor for ResponseGenerationProtoStatementResultDigest);
}

uint64_t dispatch thunk of ConvertibleFromResponseGenerationProtocol.init(rg:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

unint64_t sub_253961DC0()
{
  unint64_t result = qword_269CE5018;
  if (!qword_269CE5018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5018);
  }
  return result;
}

uint64_t *sub_253961E0C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_253961E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_253961E88(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_253961ECC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_253961F14(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_253962E00(a1, a2, a3);
  sub_25346CAF4();
  sub_2534D8E14();
  v4();
  return v3;
}

uint64_t sub_253961F60(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_253962E00(a1, a2, a3);
  sub_25346CAF4();
  sub_2534B3428();
  v4();
  return v3;
}

uint64_t sub_253961FAC()
{
  uint64_t v1 = sub_2534D9690();
  v2(v1);
  sub_25346CAF4();
  sub_2534659CC();
  v3();
  return v0;
}

uint64_t sub_253961FFC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25346CAF4();
  sub_2534B3428();
  v4();
  return a2;
}

uint64_t sub_253962058(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25346CAF4();
  sub_2534D8E14();
  v4();
  return a2;
}

uint64_t sub_2539620B4()
{
  return *(void *)(v0 - 72);
}

uint64_t sub_2539620D8()
{
  return v0;
}

uint64_t sub_2539620F0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 72) = a1;
  return 0;
}

uint64_t sub_253962104()
{
  return sub_253961F60(v0, v1, v2);
}

uint64_t sub_25396212C()
{
  return v0;
}

uint64_t sub_25396214C()
{
  return v0;
}

uint64_t sub_25396216C()
{
  return sub_253961F60(v1, v2, v0);
}

BOOL sub_253962194@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_2539621AC()
{
  uint64_t v5 = *(void *)(v1 + 16);
  *(void *)(v3 - 128) = v1
                        + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  *(void *)(v3 - 120) = v5;
  *(void *)(v3 - 144) = v0 + 32;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2539621E0(uint64_t a1, uint64_t a2)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, a2, 1, v3);
}

uint64_t sub_2539621FC()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_253962214()
{
  return v0;
}

uint64_t sub_253962224(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a2 + 16) = 0;
  return swift_willThrow();
}

uint64_t sub_25396223C()
{
  return sub_253472458(v1, v0);
}

BOOL sub_253962254@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

BOOL sub_25396226C@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_253962284@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 72) = a1;
  return 0;
}

unint64_t sub_2539622A8()
{
  return v0
       + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
       + *(void *)(v1 + 72) * v2;
}

unint64_t sub_2539622C4()
{
  return v1
       + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
       + *(void *)(v2 + 72) * v0;
}

uint64_t sub_2539622E0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 72) = a1;
  return 0;
}

uint64_t sub_2539622F8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v6 = *(void *)(v4 - 72);
  return sub_253962058(v3, v6, a3);
}

uint64_t sub_25396232C()
{
  return sub_253B09730();
}

uint64_t sub_253962344()
{
  return 0;
}

uint64_t sub_253962360()
{
  return v0;
}

uint64_t sub_253962370()
{
  uint64_t v4 = *(void *)(v0 + 16);
  *(void *)(v2 - 112) = v0
                        + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  *(void *)(v2 - 104) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25396239C()
{
  return v0;
}

uint64_t sub_2539623A8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v3 - 88);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, a2, 1, v5);
}

uint64_t sub_2539623E0()
{
  return v0;
}

uint64_t sub_2539623EC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_253961FFC(v3, v4, a3);
}

uint64_t sub_253962404()
{
  return sub_253472458(v1, v0);
}

uint64_t sub_25396241C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_253962058(v3, v4, a3);
}

BOOL sub_253962434@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_253962460()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_253962478()
{
  uint64_t v4 = *(void *)(v2 - 112);
  return sub_253961FFC(v0, v4, v1);
}

void sub_2539624BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 120) = (char *)&a9 - v9;
}

uint64_t sub_2539624D4()
{
  return sub_253472458(v1, v0);
}

uint64_t sub_2539624FC()
{
  return v0;
}

unint64_t sub_25396251C()
{
  *(void *)(v0 + 16) = v1;
  return v0
       + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
       + *(void *)(v2 + 72) * v3;
}

uint64_t sub_253962554()
{
  return *(void *)(v2 - 112) + *(void *)(v1 + 72) * v0;
}

void sub_253962568()
{
  *(void *)(v1 + 16) = v0;
}

void sub_253962590()
{
  *(void *)(v1 - 88) = v0 + 32;
}

BOOL sub_2539625A0@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void sub_2539625B8()
{
  *(void *)(v1 - 72) = v0;
}

uint64_t sub_2539625C8()
{
  return *(void *)(v2 - 128) + *(void *)(v1 + 72) * v0;
}

uint64_t sub_2539625F8()
{
  return 0;
}

uint64_t sub_253962608()
{
  return sub_253961FFC(v1, v2, v0);
}

uint64_t sub_253962624@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 72) = a1;
  return 0;
}

unint64_t sub_25396263C()
{
  return sub_253961DC0();
}

uint64_t sub_25396266C()
{
  return v0 + *(int *)(*(void *)(v1 - 600) + 20);
}

uint64_t sub_253962690()
{
  return v0;
}

uint64_t sub_2539626D0()
{
  return v0;
}

uint64_t sub_2539626F0()
{
  return 0;
}

uint64_t sub_253962700()
{
  return v0;
}

uint64_t sub_253962720@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 72) = v1;
  *(void *)(v2 - 88) = a1;
  return 0;
}

void sub_253962734()
{
  *(void *)(v0 + 16) = v1;
}

uint64_t sub_253962754@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 88) = a1;
  return 0;
}

unint64_t sub_253962760()
{
  return v1
       + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
       + *(void *)(v2 + 72) * v0;
}

uint64_t sub_253962780()
{
  return sub_253961FFC(v1, v0, v2);
}

uint64_t sub_25396279C()
{
  return sub_253961FFC(v1, v2, v0);
}

uint64_t sub_2539627B8()
{
  return v0;
}

uint64_t sub_2539627C4()
{
  return v0;
}

uint64_t sub_2539627D4()
{
  return v0;
}

void sub_2539627FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 136) = (char *)&a9 - v9;
}

uint64_t sub_25396281C@<X0>(uint64_t a1@<X8>)
{
  return sub_25395DE64(a1 | ((unint64_t)v1 << 32));
}

unint64_t sub_25396285C()
{
  return sub_253961DC0();
}

uint64_t sub_253962880()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_253962898()
{
  return sub_253961F60(v0, v1, v2);
}

uint64_t sub_2539628C0()
{
  return sub_253961F60(v1, v2, v0);
}

uint64_t sub_2539628E8()
{
  return sub_253B05BB0();
}

unint64_t sub_25396291C()
{
  return v1
       + ((*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80))
       + *(void *)(v0 + 72) * v2;
}

unint64_t sub_253962938()
{
  return v2
       + ((*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80))
       + *(void *)(v0 + 72) * v1;
}

uint64_t sub_253962954(uint64_t a1)
{
  return sub_253961FFC(a1, v2, v1);
}

uint64_t sub_25396296C()
{
  return sub_253B059B0();
}

uint64_t sub_253962988()
{
  return swift_bridgeObjectRelease();
}

void sub_2539629B0()
{
  sub_2539E8768();
}

void sub_2539629D4()
{
  sub_2539E8290();
}

void sub_2539629F8()
{
  sub_2539E7D7C();
}

void sub_253962A1C()
{
  sub_2539E8358();
}

void sub_253962A40()
{
  sub_2539E7F70();
}

void sub_253962A64()
{
  sub_2539E8358();
}

void sub_253962A88()
{
  sub_2539E82F4();
}

void sub_253962AAC()
{
  sub_2539E8290();
}

void sub_253962AD0()
{
  sub_2539E88F8();
}

void sub_253962AF4()
{
  sub_2539E8830();
}

void sub_253962B18()
{
  sub_2539E64B4();
}

void sub_253962B3C()
{
  sub_2539E8420();
}

void sub_253962B60()
{
  sub_2539E7ADC();
}

void sub_253962B84()
{
  sub_2539E7A8C();
}

void sub_253962BA8()
{
  sub_2539E8484();
}

void sub_253962BCC()
{
  sub_2539E655C();
}

void sub_253962BF0()
{
  sub_2539E85EC();
}

void sub_253962C14()
{
  sub_2539E8650();
}

void sub_253962C38()
{
  sub_2539E8704();
}

void sub_253962C5C()
{
  sub_2539E895C();
}

void sub_253962C80()
{
  sub_2539E8524();
}

void sub_253962CA4()
{
  sub_2539E8164();
}

void sub_253962CC8()
{
  sub_2539E7FD4();
}

void sub_253962CEC()
{
  sub_2539E81C8();
}

void sub_253962D10()
{
  sub_2539E7D7C();
}

void sub_253962D34()
{
  sub_2539E8768();
}

void sub_253962D58()
{
  sub_2539E8894();
}

void sub_253962D88()
{
  *(void *)(v1 - 136) = v0;
}

uint64_t sub_253962DB4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_253962DCC()
{
  return swift_bridgeObjectRelease();
}

void sub_253962DE4()
{
  *(void *)(v1 - 152) = v0;
}

uint64_t sub_253962DF0()
{
  return 0;
}

uint64_t sub_253962E00(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_253462A5C(a3);
}

uint64_t sub_253962E1C@<X0>(uint64_t a1@<X8>)
{
  return v1 + *(int *)(a1 + 20);
}

uint64_t sub_253962E38@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 72) = a1;
  return 0;
}

uint64_t sub_253962E50@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 72) = a1;
  return 0;
}

void sub_253962E68()
{
  sub_2539E8100();
}

uint64_t sub_253962E8C()
{
  return *(void *)(v0 - 256);
}

uint64_t sub_253962E98@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return sub_253B059D0();
}

uint64_t sub_253962EB4@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return sub_253B09120();
}

uint64_t sub_253962ED0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return sub_253B08E50();
}

uint64_t sub_253962F18()
{
  return *(void *)(v0 - 128);
}

uint64_t sub_253962F48()
{
  return v0;
}

uint64_t sub_253962F60()
{
  return swift_bridgeObjectRetain();
}

void sub_253962F78()
{
  *(void *)(v2 - 136) = v1;
  *(void *)(v2 - 128) = v0;
}

uint64_t sub_253962F84()
{
  return 0;
}

unint64_t sub_253962F98()
{
  return sub_253961DC0();
}

uint64_t sub_253962FB0()
{
  return v0;
}

uint64_t sub_253962FC4()
{
  return sub_253961FAC();
}

uint64_t sub_253962FE8()
{
  return sub_253961FAC();
}

uint64_t sub_253963000()
{
  return sub_253961FAC();
}

uint64_t sub_253963048()
{
  return *(void *)(v0 - 88);
}

uint64_t sub_25396305C()
{
  return sub_253B059B0();
}

uint64_t sub_253963074()
{
  return sub_253472458(v1, v0);
}

uint64_t sub_2539630A4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2539630C8()
{
  return sub_253472458(v1, v0);
}

uint64_t sub_2539630EC()
{
  return sub_253472458(v1, v0);
}

void sub_253963104()
{
  *(void *)(v2 - 544) = v0;
  *(void *)(v2 - 664) = v1;
}

uint64_t sub_253963124()
{
  return v0;
}

void sub_253963138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 112) = (char *)&a9 - v9;
}

void sub_25396314C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 208) = (char *)&a9 - v9;
}

uint64_t sub_253963160()
{
  return v0;
}

uint64_t sub_253963188(uint64_t a1, uint64_t a2)
{
  uint64_t v65 = sub_253462A5C(&qword_269CE52C8);
  uint64_t v90 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v64 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_253462A5C(&qword_269CE52D0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v76 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_253462A5C(&qword_269CE52D8);
  uint64_t v8 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v63 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Expression(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_253462A5C(&qword_269CE52E0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_253B06FD0();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v85 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v75 = (char *)&v59 - v20;
  uint64_t v21 = *(void *)(a1 + 16);
  if (v21)
  {
    uint64_t v77 = (uint64_t *)v12;
    uint64_t v78 = v2;
    uint64_t v22 = v10;
    uint64_t v23 = a2;
    uint64_t v24 = v19;
    uint64_t v84 = type metadata accessor for ProgramStatement(0);
    uint64_t v25 = *(void *)(v84 - 8);
    uint64_t v26 = a1 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
    uint64_t v62 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
    uint64_t v61 = (void (**)(char *, uint64_t))(v90 + 8);
    uint64_t v60 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v74 = v24;
    uint64_t v83 = (void (**)(char *, char *, uint64_t))(v24 + 32);
    uint64_t v27 = v22;
    uint64_t v28 = v77;
    uint64_t v82 = *(void *)(v25 + 72);
    uint64_t v59 = a1;
    swift_bridgeObjectRetain();
    uint64_t v90 = MEMORY[0x263F8EE78];
    uint64_t v72 = v27;
    uint64_t v73 = v23;
    uint64_t v70 = v16;
    uint64_t v71 = v15;
    do
    {
      sub_25397187C(v26 + *(int *)(v84 + 20), (uint64_t)v28, (void (*)(void))type metadata accessor for Expression);
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        uint64_t v29 = *v28;
        uint64_t v30 = v28[1];
        uint64_t v31 = v28[3];
        uint64_t v80 = v28[4];
        uint64_t v81 = v31;
        uint64_t v86 = v29;
        uint64_t v87 = v30;
        uint64_t v32 = qword_269CDB080;
        swift_bridgeObjectRetain();
        if (v32 != -1) {
          swift_once();
        }
        uint64_t v33 = sub_253462A5C(&qword_269CE52E8);
        sub_253462BD4(v33, (uint64_t)qword_269CE5230);
        sub_25350D820();
        sub_25350D86C(&qword_269CE52F0, &qword_269CE52E8);
        uint64_t v34 = (uint64_t)v76;
        sub_253B09660();
        swift_bridgeObjectRelease();
        uint64_t v35 = v79;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v34, 1, v79) == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_253472458(v34, &qword_269CE52D0);
          uint64_t v16 = v70;
          uint64_t v15 = v71;
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v71, 1, 1, v70);
          uint64_t v23 = v73;
        }
        else
        {
          uint64_t v36 = v63;
          (*v62)(v63, v34, v35);
          swift_getKeyPath();
          sub_253B07060();
          swift_release();
          uint64_t v69 = MEMORY[0x25A268760](v86, v87, v88, v89);
          uint64_t v68 = v37;
          swift_bridgeObjectRelease();
          swift_getKeyPath();
          sub_253B07060();
          swift_release();
          uint64_t v67 = MEMORY[0x25A268760](v86, v87, v88, v89);
          uint64_t v66 = v38;
          swift_bridgeObjectRelease();
          uint64_t v39 = v73;
          sub_253970894(v73);
          uint64_t v40 = swift_bridgeObjectRetain();
          uint64_t v41 = v78;
          uint64_t v42 = sub_253963A94(v40, v39);
          uint64_t v78 = v41;
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v86 = v42;
          swift_getKeyPath();
          uint64_t v43 = v64;
          sub_253B051D0();
          sub_253462A5C(&qword_269CE52F8);
          sub_25350D86C(&qword_269CE5300, &qword_269CE52F8);
          sub_25350D86C(&qword_269CE5308, &qword_269CE52C8);
          uint64_t v44 = v65;
          uint64_t v45 = sub_253B09950();
          (*v61)(v43, v44);
          swift_bridgeObjectRelease();
          uint64_t v46 = (uint64_t)v71;
          uint64_t v23 = v39;
          MEMORY[0x25A265F50](v69, v68, v67, v66, v45);
          uint64_t v47 = v36;
          uint64_t v15 = (char *)v46;
          (*v60)(v47, v79);
          uint64_t v16 = v70;
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v46, 0, 1, v70);
        }
        uint64_t v27 = v72;
      }
      else
      {
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 1, 1, v16);
        sub_2539718D8((uint64_t)v28, (void (*)(void))type metadata accessor for Expression);
      }
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16) == 1)
      {
        sub_253472458((uint64_t)v15, &qword_269CE52E0);
      }
      else
      {
        uint64_t v48 = v27;
        uint64_t v49 = *v83;
        int v50 = v75;
        (*v83)(v75, v15, v16);
        v49(v85, v50, v16);
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          uint64_t v51 = v90;
        }
        else
        {
          sub_2535238F4(0, *(void *)(v90 + 16) + 1, 1, v90);
          uint64_t v51 = v56;
        }
        unint64_t v53 = *(void *)(v51 + 16);
        unint64_t v52 = *(void *)(v51 + 24);
        uint64_t v54 = v74;
        if (v53 >= v52 >> 1)
        {
          sub_2535238F4(v52 > 1, v53 + 1, 1, v51);
          uint64_t v54 = v74;
          uint64_t v51 = v57;
        }
        *(void *)(v51 + 16) = v53 + 1;
        unint64_t v55 = (*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
        uint64_t v90 = v51;
        v49((char *)(v51 + v55 + *(void *)(v54 + 72) * v53), v85, v16);
        uint64_t v27 = v48;
        uint64_t v28 = v77;
      }
      v26 += v82;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
    sub_2539708E8(v23);
    return v90;
  }
  else
  {
    sub_2539708E8(a2);
    return MEMORY[0x263F8EE78];
  }
}

uint64_t sub_253963A94(uint64_t a1, uint64_t a2)
{
  uint64_t v79 = a2;
  uint64_t v3 = sub_253462A5C(&qword_269CE5310);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_253B06FB0();
  uint64_t v6 = *(void *)(v85 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v85);
  uint64_t v70 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v69 = (char *)&v58 - v9;
  uint64_t v10 = sub_253462A5C(&qword_269CE5318);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v77 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_253B06FC0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v62 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v59 = (char *)&v58 - v16;
  uint64_t v17 = sub_253462A5C(&qword_269CDCD00);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v67 = (uint64_t *)((char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v75 = (char *)&v58 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v74 = (char *)&v58 - v22;
  sub_2539717A0(a1, v84);
  uint64_t v78 = v84[0];
  int64_t v80 = v84[3];
  uint64_t v72 = v84[1];
  int64_t v73 = (unint64_t)(v84[2] + 64) >> 6;
  unint64_t v23 = v84[4];
  uint64_t v66 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v65 = (void (**)(char *, char *, uint64_t))(v6 + 16);
  uint64_t v64 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v60 = v13;
  uint64_t v61 = (void (**)(char *, uint64_t, uint64_t))(v13 + 32);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v63 = MEMORY[0x263F8EE78];
  uint64_t v76 = v17;
  uint64_t v71 = v5;
  uint64_t v68 = v12;
  uint64_t v25 = v75;
  while (1)
  {
    if (v23)
    {
      uint64_t v83 = (v23 - 1) & v23;
      unint64_t v26 = __clz(__rbit64(v23)) | (v80 << 6);
      goto LABEL_20;
    }
    int64_t v27 = v80 + 1;
    if (__OFADD__(v80, 1)) {
      break;
    }
    if (v27 >= v73) {
      goto LABEL_30;
    }
    unint64_t v28 = *(void *)(v72 + 8 * v27);
    int64_t v29 = v80 + 1;
    if (!v28)
    {
      int64_t v29 = v80 + 2;
      if (v80 + 2 >= v73) {
        goto LABEL_30;
      }
      unint64_t v28 = *(void *)(v72 + 8 * v29);
      if (!v28)
      {
        int64_t v29 = v80 + 3;
        if (v80 + 3 >= v73) {
          goto LABEL_30;
        }
        unint64_t v28 = *(void *)(v72 + 8 * v29);
        if (!v28)
        {
          int64_t v29 = v80 + 4;
          if (v80 + 4 >= v73) {
            goto LABEL_30;
          }
          unint64_t v28 = *(void *)(v72 + 8 * v29);
          if (!v28)
          {
            int64_t v29 = v80 + 5;
            if (v80 + 5 >= v73) {
              goto LABEL_30;
            }
            unint64_t v28 = *(void *)(v72 + 8 * v29);
            if (!v28)
            {
              int64_t v30 = v80 + 6;
              while (v30 < v73)
              {
                unint64_t v28 = *(void *)(v72 + 8 * v30++);
                if (v28)
                {
                  int64_t v29 = v30 - 1;
                  goto LABEL_19;
                }
              }
LABEL_30:
              swift_release();
              sub_2539708E8(v79);
              return v63;
            }
          }
        }
      }
    }
LABEL_19:
    uint64_t v83 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v29 << 6);
    int64_t v80 = v29;
LABEL_20:
    uint64_t v31 = *(void *)(v78 + 56);
    uint64_t v32 = (uint64_t *)(*(void *)(v78 + 48) + 16 * v26);
    uint64_t v33 = *v32;
    uint64_t v34 = v32[1];
    uint64_t v35 = sub_253B059D0();
    uint64_t v36 = *(void *)(v35 - 8);
    uint64_t v37 = v31 + *(void *)(v36 + 72) * v26;
    uint64_t v38 = v74;
    uint64_t v39 = &v74[*(int *)(v17 + 48)];
    uint64_t v81 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
    uint64_t v82 = v36;
    v81(v39, v37, v35);
    void *v38 = v33;
    v38[1] = v34;
    sub_253961F14((uint64_t)v38, (uint64_t)v25, &qword_269CDCD00);
    uint64_t v40 = (char *)v25 + *(int *)(v17 + 48);
    uint64_t v41 = *(void *)(v79 + 32);
    swift_bridgeObjectRetain();
    sub_25396A2F8(v41, (uint64_t)v5);
    uint64_t v42 = v85;
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v5, 1, v85) == 1)
    {
      sub_253472458((uint64_t)v5, &qword_269CE5310);
      uint64_t v43 = 1;
      uint64_t v44 = (uint64_t)v77;
    }
    else
    {
      uint64_t v45 = v69;
      (*v66)(v69, v5, v42);
      uint64_t v46 = v67;
      uint64_t v47 = (char *)v67 + *(int *)(v17 + 48);
      uint64_t v48 = v25[1];
      *uint64_t v67 = *v25;
      v46[1] = v48;
      v81(v47, (uint64_t)v40, v35);
      (*v65)(v70, v45, v85);
      swift_bridgeObjectRetain();
      uint64_t v44 = (uint64_t)v77;
      uint64_t v5 = v71;
      sub_253B06F60();
      uint64_t v49 = v45;
      uint64_t v12 = v68;
      (*v64)(v49, v85);
      (*(void (**)(char *, uint64_t))(v82 + 8))(v47, v35);
      uint64_t v43 = 0;
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v44, v43, 1, v12);
    sub_253472458((uint64_t)v25, &qword_269CDCD00);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v44, 1, v12) == 1)
    {
      uint64_t result = sub_253472458(v44, &qword_269CE5318);
      uint64_t v17 = v76;
      unint64_t v23 = v83;
    }
    else
    {
      int v50 = *v61;
      uint64_t v51 = v59;
      (*v61)(v59, v44, v12);
      v50(v62, (uint64_t)v51, v12);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = v76;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_25352393C(0, *(void *)(v63 + 16) + 1, 1, v63);
        uint64_t v63 = v56;
      }
      unint64_t v54 = *(void *)(v63 + 16);
      unint64_t v53 = *(void *)(v63 + 24);
      if (v54 >= v53 >> 1)
      {
        sub_25352393C(v53 > 1, v54 + 1, 1, v63);
        uint64_t v63 = v57;
      }
      uint64_t v55 = v63;
      *(void *)(v63 + 16) = v54 + 1;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v50)(v55+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(void *)(v60 + 72) * v54, v62, v12);
      unint64_t v23 = v83;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_253964270(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_253462A5C(&qword_269CE5310);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253B06FB0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v33 = (char *)v28 - v13;
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    v28[1] = v2;
    uint64_t v15 = *(void *)(sub_253B059D0() - 8);
    uint64_t v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v31 = v9;
    uint64_t v17 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v18 = *(void *)(v15 + 72);
    v28[0] = a1;
    swift_bridgeObjectRetain();
    uint64_t v19 = MEMORY[0x263F8EE78];
    uint64_t v32 = a2;
    uint64_t v29 = v18;
    int64_t v30 = v12;
    do
    {
      sub_25396A2F8(a2);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v8) == 1)
      {
        sub_253472458((uint64_t)v7, &qword_269CE5310);
      }
      else
      {
        uint64_t v20 = *v17;
        uint64_t v21 = v33;
        (*v17)(v33, v7, v8);
        v20(v12, v21, v8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_253523984(0, *(void *)(v19 + 16) + 1, 1, v19);
          uint64_t v19 = v25;
        }
        unint64_t v23 = *(void *)(v19 + 16);
        unint64_t v22 = *(void *)(v19 + 24);
        if (v23 >= v22 >> 1)
        {
          sub_253523984(v22 > 1, v23 + 1, 1, v19);
          uint64_t v19 = v26;
        }
        *(void *)(v19 + 16) = v23 + 1;
        unint64_t v24 = v19
            + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))
            + *(void *)(v31 + 72) * v23;
        uint64_t v12 = v30;
        v20((char *)v24, v30, v8);
        a2 = v32;
        uint64_t v18 = v29;
      }
      v16 += v18;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v19;
}

uint64_t sub_253964574(uint64_t *a1)
{
  uint64_t v2 = *(void *)(sub_253462A5C(&qword_269CDE520) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_253971838();
    uint64_t v3 = v4;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  v7[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v7[1] = v5;
  uint64_t result = sub_25396F030(v7);
  *a1 = v3;
  return result;
}

uint64_t sub_253964620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v24 = MEMORY[0x263F8EE78];
    uint64_t v7 = (char *)sub_253971DEC();
    sub_2539E7C94(v7, v4, 0);
    uint64_t v5 = v24;
    for (uint64_t i = a3 + 56; ; i += 32)
    {
      swift_bridgeObjectRetain();
      sub_253971DE0();
      v9();
      if (v3) {
        break;
      }
      swift_bridgeObjectRelease();
      long long v10 = v18;
      uint64_t v11 = v20;
      char v12 = v22;
      uint64_t v13 = v23;
      unint64_t v15 = *(void *)(v24 + 16);
      unint64_t v14 = *(void *)(v24 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_2539E7C94((char *)(v14 > 1), v15 + 1, 1);
        uint64_t v13 = v23;
        uint64_t v11 = v20;
        char v12 = v22;
        long long v10 = v18;
      }
      *(void *)(v24 + 16) = v15 + 1;
      uint64_t v16 = v24 + 56 * v15;
      *(_OWORD *)(v16 + 32) = v10;
      *(void *)(v16 + 48) = v19;
      *(void *)(v16 + 56) = v11;
      *(void *)(v16 + 64) = v21;
      *(unsigned char *)(v16 + 72) = v12;
      *(void *)(v16 + 80) = v13;
      if (!--v4) {
        return v5;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v5;
}

void sub_25396478C()
{
}

void sub_2539647F4()
{
  sub_2534847F8();
  uint64_t v29 = v2;
  uint64_t v30 = v1;
  int64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v31 = v7;
  uint64_t v9 = v8(0);
  uint64_t v10 = sub_25346CB34(v9);
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v10);
  unint64_t v14 = (char *)&v26 - v13;
  unint64_t v15 = *(void *)(v6 + 16);
  if (v15)
  {
    uint64_t v32 = MEMORY[0x263F8EE78];
    uint64_t v16 = sub_253971DEC();
    int64_t v27 = v17;
    v17(v16, v15, 0);
    uint64_t v18 = v4(0);
    sub_25346CB34(v18);
    uint64_t v20 = v6 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    uint64_t v28 = *(void *)(v21 + 72);
    while (1)
    {
      sub_253971DE0();
      v22();
      if (v0) {
        break;
      }
      unint64_t v24 = *(void *)(v32 + 16);
      unint64_t v23 = *(void *)(v32 + 24);
      if (v24 >= v23 >> 1) {
        v27(v23 > 1, v24 + 1, 1);
      }
      *(void *)(v32 + 16) = v24 + 1;
      sub_2535786F4();
      sub_253971984((uint64_t)v14, v32 + v25 + *(void *)(v12 + 72) * v24, v29);
      v20 += v28;
      if (!--v15) {
        goto LABEL_9;
      }
    }
    swift_release();
  }
LABEL_9:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_25396499C()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  uint64_t updated = type metadata accessor for UpdateParametersExpression.UpdateParameter(0);
  uint64_t v5 = sub_25346CB34(updated);
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v5);
  sub_25346CC6C();
  uint64_t v8 = *(void *)(v3 + 16);
  if (v8)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_253971DEC();
    sub_2539E822C();
    uint64_t v9 = type metadata accessor for AST.Update(0);
    sub_25346CB34(v9);
    uint64_t v11 = v3 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v16 = *(void *)(v12 + 72);
    while (1)
    {
      sub_253971DE0();
      v13();
      if (v0) {
        break;
      }
      unint64_t v14 = *(void *)(v17 + 16);
      if (v14 >= *(void *)(v17 + 24) >> 1) {
        sub_2539E822C();
      }
      *(void *)(v17 + 16) = v14 + 1;
      sub_2535786F4();
      sub_253971984(v1, v17 + v15 + *(void *)(v7 + 72) * v14, (void (*)(void))type metadata accessor for UpdateParametersExpression.UpdateParameter);
      v11 += v16;
      if (!--v8) {
        goto LABEL_9;
      }
    }
    swift_release();
  }
LABEL_9:
  sub_2536D3D5C();
  sub_2534847C8();
}

void sub_253964B24()
{
  sub_2534847F8();
  uint64_t v2 = v1;
  sub_253B059D0();
  sub_253465998();
  MEMORY[0x270FA5388](v3);
  sub_2534966B0();
  uint64_t v4 = *(void *)(v2 + 16);
  if (v4)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_253971DEC();
    sub_2539E7ADC();
    uint64_t v5 = sub_253B055C0();
    sub_25346CB34(v5);
    uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v12 = *(void *)(v8 + 72);
    while (1)
    {
      sub_253971DE0();
      v9();
      if (v0) {
        break;
      }
      unint64_t v10 = *(void *)(v13 + 16);
      if (v10 >= *(void *)(v13 + 24) >> 1) {
        sub_2539E7ADC();
      }
      *(void *)(v13 + 16) = v10 + 1;
      sub_2535786F4();
      sub_2534D8E14();
      v11();
      v7 += v12;
      if (!--v4) {
        goto LABEL_9;
      }
    }
    swift_release();
  }
LABEL_9:
  sub_2536D3D5C();
  sub_2534847C8();
}

uint64_t sub_253964CB4@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a1;
  uint64_t v5 = sub_253B06130();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253462A5C(&qword_269CE5250);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253961F60(v2, (uint64_t)v11, &qword_269CE5250);
  uint64_t v12 = 1;
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v5) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    v16(v8);
    if (v3) {
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v12 = 0;
  }
  uint64_t v14 = type metadata accessor for RequestPrescribedPlan(0);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a2, v12, 1, v14);
}

void Request.init(client:context:)()
{
  sub_2534847F8();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v65 = v9;
  uint64_t v68 = type metadata accessor for Request(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v10);
  sub_25346CB04();
  uint64_t v67 = v11;
  uint64_t v66 = sub_253B061D0();
  sub_253465998();
  uint64_t v63 = v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v62 = &v55[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2534B324C();
  MEMORY[0x270FA5388](v15);
  uint64_t v61 = &v55[-v16];
  uint64_t v17 = sub_253462A5C(&qword_269CE5248);
  uint64_t v18 = sub_25346CB4C(v17);
  MEMORY[0x270FA5388](v18);
  uint64_t v64 = &v55[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2534B324C();
  MEMORY[0x270FA5388](v20);
  uint64_t v69 = &v55[-v21];
  uint64_t v22 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v23 = sub_25346CB4C(v22);
  MEMORY[0x270FA5388](v23);
  sub_2534966B0();
  uint64_t v24 = sub_253462A5C(&qword_269CE5250);
  uint64_t v25 = sub_25346CB4C(v24);
  MEMORY[0x270FA5388](v25);
  sub_253465A3C();
  uint64_t v26 = sub_253462A5C(&qword_269CDBB20);
  uint64_t v27 = sub_25346CB4C(v26);
  MEMORY[0x270FA5388](v27);
  sub_2534D8CAC();
  uint64_t v28 = sub_253B05E40();
  uint64_t v29 = sub_25346CB4C(v28);
  MEMORY[0x270FA5388](v29);
  uint64_t v30 = sub_2534D9B74();
  uint64_t v31 = type metadata accessor for RequestContent(v30);
  uint64_t v32 = sub_25346CB4C(v31);
  MEMORY[0x270FA5388](v32);
  sub_2534B3294();
  sub_253B05F30();
  sub_253476B80(v6, (uint64_t)&v71);
  RequestContent.init(client:context:)();
  if (v0)
  {
    sub_253B06240();
    sub_25346CAF4();
    sub_2534659CC();
    v33();
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v6);
  }
  else
  {
    int v56 = sub_253B061E0();
    uint64_t v34 = sub_253B061F0();
    MEMORY[0x270FA5388](v34);
    sub_253971CA8();
    uint64_t v70 = v6;
    *(void *)(v35 - 16) = v6;
    uint64_t v58 = v3;
    sub_253964CB4((void (*)(char *))sub_253966734, v3);
    uint64_t v57 = 0;
    sub_253472458(v2, &qword_269CE5250);
    uint64_t v59 = v4;
    sub_253B06200();
    uint64_t v36 = (uint64_t)v69;
    uint64_t v60 = v8;
    sub_253B06210();
    uint64_t v37 = v64;
    sub_253961F60(v36, (uint64_t)v64, &qword_269CE5248);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v37, 1, v66) == 1)
    {
      uint64_t v38 = v36;
      uint64_t v39 = 0;
      uint64_t v40 = 0;
      uint64_t v41 = 0;
    }
    else
    {
      uint64_t v42 = v63;
      sub_25347FA84();
      v43();
      sub_253971B14();
      sub_2534AF234();
      v44();
      uint64_t v39 = sub_253B061B0();
      uint64_t v40 = v45;
      uint64_t v41 = MEMORY[0x25A2651C0]();
      uint64_t v46 = *(void (**)(void))(v42 + 8);
      sub_2534F85D4();
      v46();
      sub_2534F85D4();
      v46();
      uint64_t v38 = (uint64_t)v69;
    }
    uint64_t v48 = v67;
    uint64_t v47 = (int *)v68;
    sub_253472458(v38, &qword_269CE5248);
    uint64_t v49 = v48 + v47[6];
    uint64_t v50 = type metadata accessor for RequestPrescribedPlan(0);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v49, 1, 1, v50);
    uint64_t v51 = v48 + v47[7];
    uint64_t v52 = sub_253B055C0();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v51, 1, 1, v52);
    unint64_t v53 = (uint64_t *)(v48 + v47[8]);
    *unint64_t v53 = 0;
    v53[1] = 0;
    void v53[2] = 0;
    sub_253971984(v1, v48, (void (*)(void))type metadata accessor for RequestContent);
    *(unsigned char *)(v48 + v47[5]) = v56 & 1;
    sub_253961BF0(v58, v49, &qword_269CDBB20);
    sub_253961BF0(v59, v51, (uint64_t *)&unk_26B248CB0);
    sub_253961E88(*v53, v53[1]);
    *unint64_t v53 = v39;
    v53[1] = v40;
    void v53[2] = v41;
    sub_253971984(v48, v65, (void (*)(void))type metadata accessor for Request);
    sub_253B06240();
    sub_25346CAF4();
    sub_2534659CC();
    v54();
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v70);
  }
  sub_2536D3D5C();
  sub_2534847C8();
}

void RequestContent.init(client:context:)()
{
  sub_2534847F8();
  uint64_t v92 = v1;
  uint64_t v93 = v2;
  uint64_t v4 = v3;
  uint64_t v91 = v5;
  sub_253B06E70();
  sub_253465998();
  uint64_t v82 = v7;
  uint64_t v83 = v6;
  MEMORY[0x270FA5388](v6);
  v79[1] = (char *)v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v9);
  int64_t v80 = (char *)v79 - v10;
  sub_253483660();
  sub_253B05E30();
  sub_253465998();
  uint64_t v84 = v12;
  uint64_t v85 = v11;
  MEMORY[0x270FA5388](v11);
  sub_25353CE24();
  MEMORY[0x270FA5388](v13);
  sub_2534B35DC();
  uint64_t v81 = v14;
  sub_253483660();
  sub_253B059D0();
  sub_253465998();
  uint64_t v86 = v16;
  uint64_t v87 = v15;
  MEMORY[0x270FA5388](v15);
  sub_25346CB04();
  uint64_t v88 = v17;
  uint64_t v18 = sub_253483660();
  uint64_t v90 = type metadata accessor for RequestContent(v18);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v19);
  sub_25346CB04();
  uint64_t v89 = v20;
  sub_253483660();
  sub_253B05DD0();
  sub_253465998();
  uint64_t v22 = v21;
  MEMORY[0x270FA5388](v23);
  sub_2534D9C38();
  MEMORY[0x270FA5388](v24);
  sub_2534DA41C();
  sub_253B05E40();
  sub_253465998();
  uint64_t v26 = v25;
  MEMORY[0x270FA5388](v27);
  sub_2534835B0();
  sub_253971B14();
  sub_2534AF234();
  v28();
  sub_253578368();
  int v30 = v29();
  if (v30 == *MEMORY[0x263F4C2B8])
  {
    uint64_t v31 = *(void (**)(void))(v26 + 8);
    sub_2534F85D4();
    v31();
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v93);
    sub_2534F85D4();
    v31();
    uint64_t v32 = (uint64_t)v89;
LABEL_9:
    swift_storeEnumTagMultiPayload();
    sub_253971984(v32, v91, (void (*)(void))type metadata accessor for RequestContent);
    sub_2534847C8();
    return;
  }
  v79[0] = v4;
  if (v30 == *MEMORY[0x263F4C2C0])
  {
    sub_253971A70();
    v34(v33);
    sub_253971D74();
    sub_25347FA84();
    v36(v35);
    sub_253971B90();
    sub_2534AF234();
    v38(v37);
    sub_253476B80(v93, (uint64_t)v94);
    uint64_t v39 = sub_253B05D80();
    uint64_t v84 = v40;
    uint64_t v85 = v39;
    uint64_t v41 = v95;
    uint64_t v42 = v96;
    sub_253472068(v94, v95);
    (*(void (**)(uint64_t, uint64_t))(v42 + 16))(v41, v42);
    uint64_t v43 = *(void (**)(uint64_t))(v22 + 8);
    sub_2534D9B1C();
    sub_2534D9A08();
    v43(v44);
    uint64_t v32 = (uint64_t)v89;
    uint64_t v45 = v84;
    *uint64_t v89 = v85;
    *(void *)(v32 + 8) = v45;
    type metadata accessor for RequestContent.TextContent(0);
    sub_2534D8E14();
    v47(v46);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v94);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v93);
    sub_2534F85D4();
    v49(v48);
    sub_2534D9A08();
    v43(v50);
    goto LABEL_9;
  }
  if (v30 == *MEMORY[0x263F4C2C8])
  {
    sub_253971A70();
    v52(v51);
    uint64_t v53 = v84;
    uint64_t v54 = v85;
    uint64_t v55 = v81;
    sub_25347FA84();
    v57(v56);
    sub_253578EE0();
    sub_2534AF234();
    v59(v58);
    uint64_t v60 = sub_253476B80(v93, (uint64_t)v94);
    uint64_t v61 = MEMORY[0x25A264DF0](v60);
    uint64_t v88 = v79;
    MEMORY[0x270FA5388](v61);
    sub_253971CA8();
    *(void *)(v62 - 16) = v94;
    sub_2539647F4();
    uint64_t v92 = v63;
    uint64_t v64 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
    v64(v0, v54);
    swift_bridgeObjectRelease();
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v94);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v93);
    sub_2534F85D4();
    v66(v65);
    v64(v55, v54);
    uint64_t v32 = (uint64_t)v89;
    *uint64_t v89 = v92;
    goto LABEL_9;
  }
  uint64_t v67 = v93;
  if (v30 == *MEMORY[0x263F4C2B0])
  {
    sub_253971A70();
    v69(v68);
    uint64_t v70 = v82;
    uint64_t v71 = v80;
    uint64_t v72 = v83;
    sub_25347FA84();
    v74(v73);
    sub_2534AF234();
    v76(v75);
    sub_253476B80(v67, (uint64_t)v94);
    uint64_t v32 = (uint64_t)v89;
    RequestContent.SystemPromptResolution.init(client:context:)();
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v67);
    sub_2534F85D4();
    v78(v77);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
    goto LABEL_9;
  }
  sub_253B0A4B0();
  __break(1u);
}

void sub_253965A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253B06130();
  MEMORY[0x270FA5388](v4);
  (*(void (**)(unsigned char *, uint64_t))(v6 + 16))(&v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], a1);
  sub_253476B80(a2, (uint64_t)v8);
  RequestPrescribedPlan.init(client:context:)();
}

void RequestPrescribedPlan.init(client:context:)()
{
  sub_2534B3258();
  unint64_t v161 = v1;
  uint64_t v162 = v0;
  uint64_t v3 = v2;
  uint64_t v142 = sub_253B05F70();
  sub_253465998();
  uint64_t v141 = v4;
  MEMORY[0x270FA5388](v5);
  uint64_t v136 = (char *)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v7);
  sub_2534B35DC();
  uint64_t v140 = v8;
  sub_253483660();
  uint64_t v139 = sub_253B059D0();
  sub_253465998();
  uint64_t v137 = v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v134 = (char *)&v130 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  uint64_t v138 = sub_253B060E0();
  sub_253465998();
  uint64_t v135 = v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v132 = (char *)&v130 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v15);
  sub_2534B35DC();
  uint64_t v133 = v16;
  sub_253483660();
  sub_253B06070();
  sub_253465998();
  uint64_t v145 = v18;
  uint64_t v146 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v143 = (char *)&v130 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v20);
  uint64_t v144 = (char *)&v130 - v21;
  sub_253483660();
  sub_253B06030();
  sub_253465998();
  uint64_t v149 = v23;
  uint64_t v150 = v22;
  MEMORY[0x270FA5388](v22);
  sub_2534659D8();
  uint64_t v147 = v24;
  sub_2534B324C();
  MEMORY[0x270FA5388](v25);
  uint64_t v148 = (char *)&v130 - v26;
  sub_253483660();
  sub_253B05FF0();
  sub_253465998();
  uint64_t v153 = v28;
  uint64_t v154 = v27;
  MEMORY[0x270FA5388](v27);
  uint64_t v151 = (char *)&v130 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v30);
  uint64_t v152 = (char *)&v130 - v31;
  sub_253483660();
  sub_253B06120();
  sub_253465998();
  uint64_t v157 = v33;
  uint64_t v158 = v32;
  MEMORY[0x270FA5388](v32);
  sub_2534659D8();
  uint64_t v155 = v34;
  sub_2534B324C();
  MEMORY[0x270FA5388](v35);
  uint64_t v156 = (char *)&v130 - v36;
  sub_253483660();
  sub_253B060A0();
  sub_253465998();
  uint64_t v159 = v38;
  uint64_t v160 = v37;
  MEMORY[0x270FA5388](v37);
  sub_2534D9C38();
  MEMORY[0x270FA5388](v39);
  sub_2534DA41C();
  sub_253B05FB0();
  sub_253465998();
  uint64_t v41 = v40;
  MEMORY[0x270FA5388](v42);
  sub_25353CE24();
  MEMORY[0x270FA5388](v43);
  sub_2534D97C0();
  uint64_t v44 = sub_253B06130();
  sub_253465998();
  uint64_t v46 = v45;
  MEMORY[0x270FA5388](v47);
  sub_2534847E0();
  sub_2534AF234();
  v48();
  sub_253578368();
  int v50 = v49();
  if (v50 == *MEMORY[0x263F4C3F0])
  {
    sub_253971A70();
    v51();
    sub_25347FA84();
    v52();
    sub_2534AF234();
    v53();
    uint64_t v54 = sub_253B05FA0();
    uint64_t v160 = v55;
    char v56 = sub_253B05F80();
    uint64_t v57 = *(void (**)(void))(v41 + 8);
    sub_2535793C0();
    sub_2534DA4BC();
    v57();
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v162);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v3, v44);
    sub_2534DA4BC();
    v57();
    uint64_t v58 = v160;
    uint64_t v59 = v161;
    uint64_t *v161 = v54;
    v59[1] = v58;
    *((unsigned char *)v59 + 16) = v56 & 1;
    *((unsigned char *)v59 + 17) = 0;
    type metadata accessor for RequestPrescribedPlan(0);
    sub_253971D44();
LABEL_17:
    swift_storeEnumTagMultiPayload();
    sub_253465A14();
    return;
  }
  uint64_t v131 = v3;
  if (v50 == *MEMORY[0x263F4C458])
  {
    sub_253971A70();
    v60();
    uint64_t v61 = v159;
    sub_25347FA84();
    v62();
    sub_2534AF234();
    v63();
    uint64_t v64 = sub_253B05D80();
    uint64_t v66 = v65;
    uint64_t v67 = *(void (**)(void))(v61 + 8);
    sub_2534DA178();
    sub_2534DA4BC();
    v67();
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v162);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v131, v44);
    sub_2534D973C();
    sub_2534DA4BC();
    v67();
    uint64_t v68 = v161;
    uint64_t *v161 = v64;
    v68[1] = v66;
    type metadata accessor for RequestPrescribedPlan(0);
    sub_253971D54();
    goto LABEL_17;
  }
  if (v50 == *MEMORY[0x263F4C480])
  {
    sub_253971BD0();
    sub_253971A70();
    v69();
    uint64_t v70 = v157;
    sub_253971C3C();
    sub_25347FA84();
    v71();
    sub_253971B14();
    sub_2534AF234();
    v72();
    uint64_t v73 = sub_253B05FE0();
    uint64_t v75 = v74;
    char v76 = sub_253B05FC0();
    uint64_t v77 = *(void (**)(void))(v70 + 8);
    sub_2534F85D4();
    v77();
    sub_253971C84();
    sub_2534D97B4();
    v78();
    sub_253971C3C();
    sub_2534F85D4();
    v77();
    uint64_t v79 = v161;
    uint64_t *v161 = v73;
    v79[1] = v75;
    *((unsigned char *)v79 + 16) = v76 & 1;
    type metadata accessor for RequestPrescribedPlan(0);
    goto LABEL_17;
  }
  if (v50 == *MEMORY[0x263F4C428])
  {
    sub_253971BD0();
    sub_253971A70();
    v80();
    uint64_t v81 = v153;
    sub_253971D94();
    sub_25347FA84();
    v82();
    sub_253971B14();
    sub_2534AF234();
    v83();
    uint64_t v84 = sub_253B05FE0();
    uint64_t v86 = v85;
    char v87 = sub_253B05FC0();
    uint64_t v88 = *(void (**)(void))(v81 + 8);
    sub_2534F85D4();
    v88();
    sub_253971C84();
    sub_2534D97B4();
    v89();
    sub_2534F85D4();
    v88();
    uint64_t v90 = v161;
    uint64_t *v161 = v84;
    v90[1] = v86;
    *((unsigned char *)v90 + 16) = v87 & 1;
    type metadata accessor for RequestPrescribedPlan(0);
    goto LABEL_17;
  }
  uint64_t v91 = v161;
  if (v50 == *MEMORY[0x263F4C430])
  {
    sub_253971BD0();
    sub_253971A70();
    v92();
    uint64_t v93 = v149;
    sub_253971D94();
    sub_25347FA84();
    v94();
    sub_253971B14();
    sub_2534AF234();
    v95();
    uint64_t v96 = sub_253B05FE0();
    uint64_t v160 = v97;
    char v98 = sub_253B05FC0();
    uint64_t v99 = *(void (**)(void))(v93 + 8);
    sub_2534F85D4();
    v99();
    sub_253971C84();
    sub_2534D97B4();
    v100();
    sub_2534F85D4();
    v99();
    uint64_t v101 = v160;
    *uint64_t v91 = v96;
    v91[1] = v101;
    *((unsigned char *)v91 + 16) = v98 & 1;
    type metadata accessor for RequestPrescribedPlan(0);
    sub_253971DF8();
    goto LABEL_17;
  }
  uint64_t v102 = v162;
  if (v50 == *MEMORY[0x263F4C450])
  {
    sub_253971BD0();
    sub_253971A70();
    v103();
    uint64_t v104 = v145;
    sub_25351C9FC();
    sub_253971C3C();
    sub_25347FA84();
    v105();
    sub_2534AF234();
    v106();
    uint64_t v160 = sub_253B05FE0();
    uint64_t v108 = v107;
    char v109 = sub_253B05FC0();
    uint64_t v110 = *(void (**)(void))(v104 + 8);
    sub_2534D97B4();
    v110();
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v162);
    sub_2534F85D4();
    v111();
    sub_2534D97B4();
    v110();
    *uint64_t v91 = v160;
    v91[1] = v108;
    *((unsigned char *)v91 + 16) = v109 & 1;
    type metadata accessor for RequestPrescribedPlan(0);
    sub_253971DF8();
    goto LABEL_17;
  }
  if (v50 == *MEMORY[0x263F4C478])
  {
    sub_253971A70();
    v112();
    uint64_t v113 = v135;
    sub_25351C9FC();
    sub_253971C3C();
    sub_25347FA84();
    v114();
    sub_2534AF234();
    v115();
    sub_253B060D0();
    uint64_t v160 = sub_253B060B0();
    char v117 = v116;
    uint64_t v118 = *(void (**)(void))(v113 + 8);
    sub_2534D97B4();
    v118();
    uint64_t v119 = (char *)v91 + *(int *)(type metadata accessor for RequestPrescribedPlan.OpenTool(0) + 20);
    sub_2534D8E14();
    v120();
    *(void *)uint64_t v119 = v160;
    v119[8] = v117 & 1;
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v162);
    sub_2534F85D4();
    v121();
    sub_2534D97B4();
    v118();
    type metadata accessor for RequestPrescribedPlan(0);
    sub_253971DF8();
    goto LABEL_17;
  }
  if (v50 == *MEMORY[0x263F4C3E8])
  {
    sub_253971A70();
    v122();
    uint64_t v123 = v141;
    sub_25351C9FC();
    sub_25347FA84();
    v124();
    sub_2534AF234();
    v125();
    uint64_t v126 = sub_253B05F60();
    LODWORD(v160) = v127;
    unint64_t v128 = *(void (**)(void))(v123 + 8);
    sub_2534D97B4();
    v128();
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v102);
    sub_2534F85D4();
    v129();
    sub_2534D97B4();
    v128();
    *uint64_t v91 = v126;
    *((unsigned char *)v91 + 8) = v160 & 1;
    type metadata accessor for RequestPrescribedPlan(0);
    sub_253971DF8();
    goto LABEL_17;
  }
  sub_253B0A4B0();
  __break(1u);
}

uint64_t ExternalAgentRequestRewriteMetadata.init(client:context:)()
{
  sub_253971ABC();
  uint64_t v1 = sub_253B061B0();
  uint64_t v3 = v2;
  uint64_t v4 = MEMORY[0x25A2651C0]();
  sub_253971B74();
  sub_253B061D0();
  sub_25346CAF4();
  sub_2534659CC();
  uint64_t result = v5();
  *uint64_t v0 = v1;
  v0[1] = v3;
  v0[2] = v4;
  return result;
}

void sub_253966734(uint64_t a1)
{
  sub_253965A44(a1, *(void *)(v1 + 16));
}

void MessagePayload.Request.init(ifps:)()
{
  sub_2534B3258();
  uint64_t v7 = v6;
  uint64_t v8 = sub_253462A5C(&qword_269CE5248);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  sub_2534D92D4(v10, v39);
  uint64_t v11 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_25346CBDC();
  uint64_t v14 = type metadata accessor for RequestPrescribedPlan(v13);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v15);
  sub_2534D8CE4();
  MEMORY[0x270FA5388](v16);
  sub_2534D97C0();
  uint64_t v17 = sub_253462A5C(&qword_269CDBB20);
  uint64_t v18 = sub_25346CB4C(v17);
  MEMORY[0x270FA5388](v18);
  sub_25346CC54();
  uint64_t v19 = sub_253462A5C(&qword_269CE5250);
  uint64_t v20 = sub_25346CB4C(v19);
  MEMORY[0x270FA5388](v20);
  uint64_t v21 = sub_2534D9C00();
  uint64_t v22 = type metadata accessor for RequestContent(v21);
  uint64_t v23 = sub_25346CB4C(v22);
  MEMORY[0x270FA5388](v23);
  sub_2534AF2D8();
  uint64_t v24 = sub_253B05E40();
  uint64_t v25 = sub_25346CB4C(v24);
  MEMORY[0x270FA5388](v25);
  sub_2534847E0();
  sub_25397187C(v7, v2, (void (*)(void))type metadata accessor for RequestContent);
  MessagePayload.RequestContent.init(ifps:)();
  uint64_t v26 = (int *)type metadata accessor for Request(0);
  sub_253961F60(v7 + v26[6], v0, &qword_269CDBB20);
  uint64_t v27 = 1;
  sub_2534D8B48(v0, 1, v14);
  if (!v28)
  {
    sub_253971984(v0, v5, (void (*)(void))type metadata accessor for RequestPrescribedPlan);
    sub_25397187C(v5, v4, (void (*)(void))type metadata accessor for RequestPrescribedPlan);
    MessagePayload.RequestPrescribedPlan.init(ifps:)();
    sub_2539718D8(v5, (void (*)(void))type metadata accessor for RequestPrescribedPlan);
    uint64_t v27 = 0;
  }
  uint64_t v29 = sub_253B06130();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v3, v27, 1, v29);
  sub_253961F60(v7 + v26[7], v1, (uint64_t *)&unk_26B248CB0);
  if (*(void *)(v7 + v26[8] + 8))
  {
    uint64_t v30 = sub_253971D24();
    sub_25396DF48(v30, v31);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_253971D24();
    MEMORY[0x25A2651A0](v32);
    uint64_t v33 = sub_253B061D0();
    sub_253971DA8(v40, v34, v35, v33);
    uint64_t v36 = sub_253971D24();
    sub_253961E88(v36, v37);
  }
  else
  {
    uint64_t v38 = sub_253B061D0();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v40, 1, 1, v38);
  }
  sub_253B06220();
  sub_2539718D8(v7, (void (*)(void))type metadata accessor for Request);
  sub_253465A14();
}

void MessagePayload.RequestContent.init(ifps:)()
{
  sub_2535B3C98();
  uint64_t v6 = sub_253971B04();
  uint64_t v7 = type metadata accessor for RequestContent.SystemPromptResolution(v6);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_2534DA444();
  uint64_t v11 = type metadata accessor for RequestContent.TextContent(v10);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  sub_2534B340C();
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_253971BBC();
  type metadata accessor for RequestContent(v14);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v15);
  sub_25346CC6C();
  uint64_t v16 = sub_253578EE0();
  sub_25397187C(v16, v17, v18);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_253971984(v5, v3, (void (*)(void))type metadata accessor for RequestContent.TextContent);
      sub_25397187C(v3, (uint64_t)v4, (void (*)(void))type metadata accessor for RequestContent.TextContent);
      uint64_t v19 = *v4;
      uint64_t v20 = v4[1];
      swift_bridgeObjectRetain();
      MEMORY[0x25A264DB0](v19, v20);
      sub_2539718D8((uint64_t)v4, (void (*)(void))type metadata accessor for RequestContent.TextContent);
      sub_2539718D8(v0, (void (*)(void))type metadata accessor for RequestContent);
      sub_2539718D8(v3, (void (*)(void))type metadata accessor for RequestContent.TextContent);
      break;
    case 2u:
      MessagePayload.RequestContent.SpeechContent.init(ifps:)();
      sub_2539718D8(v0, (void (*)(void))type metadata accessor for RequestContent);
      break;
    case 3u:
      sub_253971984(v5, v1, (void (*)(void))type metadata accessor for RequestContent.SystemPromptResolution);
      sub_25397187C(v1, v2, (void (*)(void))type metadata accessor for RequestContent.SystemPromptResolution);
      SystemPromptResolution.init(ifps:)();
      sub_2539718D8(v0, (void (*)(void))type metadata accessor for RequestContent);
      sub_2539718D8(v1, (void (*)(void))type metadata accessor for RequestContent.SystemPromptResolution);
      break;
    default:
      _s16IntelligenceFlow14MessagePayloadO14RequestContentO04StopF0V0aB14PlannerSupportE4ifpsAghDOAFV_tcfC_0();
      sub_2539718D8(v0, (void (*)(void))type metadata accessor for RequestContent);
      break;
  }
  sub_253971BE0();
  sub_253B05E40();
  sub_25346CAF4();
  uint64_t v21 = sub_253971AA8();
  v22(v21);
  sub_25346CD04();
}

void MessagePayload.RequestPrescribedPlan.init(ifps:)()
{
  sub_2534B3258();
  uint64_t v5 = v4;
  uint64_t v6 = sub_253B059D0();
  sub_253465998();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_2534AF2D8();
  type metadata accessor for RequestPrescribedPlan.OpenTool(v10);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v11);
  sub_2534B340C();
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_253971BBC();
  type metadata accessor for RequestPrescribedPlan(v13);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v14);
  sub_2534966B0();
  uint64_t v15 = sub_2536D500C();
  sub_25397187C(v15, v16, v17);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      MEMORY[0x25A265080](*v3, v3[1]);
      sub_2539718D8(v5, (void (*)(void))type metadata accessor for RequestPrescribedPlan);
      break;
    case 2u:
    case 3u:
    case 4u:
    case 5u:
      sub_253971BAC();
      sub_253B05FD0();
      sub_2539718D8(v5, (void (*)(void))type metadata accessor for RequestPrescribedPlan);
      break;
    case 6u:
      sub_253971984((uint64_t)v3, v1, (void (*)(void))type metadata accessor for RequestPrescribedPlan.OpenTool);
      sub_25397187C(v1, v2, (void (*)(void))type metadata accessor for RequestPrescribedPlan.OpenTool);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v0, v2, v6);
      sub_253B060C0();
      sub_2539718D8(v2, (void (*)(void))type metadata accessor for RequestPrescribedPlan.OpenTool);
      sub_2539718D8(v5, (void (*)(void))type metadata accessor for RequestPrescribedPlan);
      sub_2539718D8(v1, (void (*)(void))type metadata accessor for RequestPrescribedPlan.OpenTool);
      break;
    case 7u:
      sub_253B05F50();
      sub_2539718D8(v5, (void (*)(void))type metadata accessor for RequestPrescribedPlan);
      break;
    default:
      sub_253B05F90();
      sub_2539718D8(v5, (void (*)(void))type metadata accessor for RequestPrescribedPlan);
      break;
  }
  sub_253971BE0();
  sub_253B06130();
  sub_25346CAF4();
  uint64_t v18 = sub_253971AA8();
  v19(v18);
  sub_253465A14();
}

uint64_t MessagePayload.ExternalAgentRequestRewriteMetadata.init(ifps:)()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_2534DA2E4();
  MEMORY[0x25A2651A0](v0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void ExternalAgentRequest.init(client:context:)()
{
  sub_2534847F8();
  uint64_t v59 = v0;
  uint64_t v6 = v5;
  uint64_t v55 = v7;
  uint64_t v57 = type metadata accessor for ExternalAgentRequest(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v8);
  sub_25346CB04();
  uint64_t v56 = v9;
  uint64_t v58 = sub_253B061D0();
  sub_253465998();
  uint64_t v54 = v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v52 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v13);
  uint64_t v53 = (char *)&v49 - v14;
  uint64_t v15 = sub_253462A5C(&qword_269CE5248);
  uint64_t v16 = sub_25346CB4C(v15);
  MEMORY[0x270FA5388](v16);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v17);
  sub_2534D9EC0();
  uint64_t v18 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v19 = sub_25346CB4C(v18);
  MEMORY[0x270FA5388](v19);
  sub_2534AF2D8();
  uint64_t v20 = sub_253B05E40();
  uint64_t v21 = sub_25346CB4C(v20);
  MEMORY[0x270FA5388](v21);
  uint64_t v22 = sub_2534D8CAC();
  uint64_t v23 = type metadata accessor for RequestContent(v22);
  uint64_t v24 = sub_25346CB4C(v23);
  MEMORY[0x270FA5388](v24);
  sub_2534847E0();
  sub_253472068(v6, v6[3]);
  uint64_t v25 = sub_253971DD4();
  v26(v25);
  sub_253B05F30();
  sub_253476B80((uint64_t)v6, (uint64_t)&v60);
  uint64_t v27 = v59;
  RequestContent.init(client:context:)();
  if (v27)
  {
    uint64_t v28 = sub_253971B38();
    v29(v28);
    sub_253B05F40();
    sub_25346CAF4();
    sub_2534659CC();
    v30();
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v6);
  }
  else
  {
    uint64_t v31 = v54;
    uint64_t v59 = 0;
    uint64_t v51 = v1;
    sub_253B05F00();
    sub_253B05F10();
    sub_253961F60(v3, v4, &qword_269CE5248);
    uint64_t v32 = v3;
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v58) == 1)
    {
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      uint64_t v35 = 0;
    }
    else
    {
      sub_253971D74();
      sub_25347FA84();
      v36();
      sub_253971B90();
      uint64_t v50 = v3;
      sub_2534DA138();
      sub_2534AF234();
      v37();
      uint64_t v38 = sub_253B061B0();
      uint64_t v49 = v39;
      uint64_t v35 = MEMORY[0x25A2651C0]();
      uint64_t v40 = *(void (**)(void))(v31 + 8);
      uint64_t v32 = v50;
      sub_2534D9A08();
      v40();
      uint64_t v33 = v38;
      sub_2534D9A08();
      v40();
      uint64_t v34 = v49;
    }
    uint64_t v42 = v56;
    uint64_t v41 = v57;
    sub_253472458(v32, &qword_269CE5248);
    uint64_t v43 = v42 + *(int *)(v41 + 20);
    uint64_t v44 = sub_253B055C0();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v43, 1, 1, v44);
    uint64_t v45 = (uint64_t *)(v42 + *(int *)(v41 + 24));
    *uint64_t v45 = 0;
    v45[1] = 0;
    v45[2] = 0;
    sub_253971984(v2, v42, (void (*)(void))type metadata accessor for RequestContent);
    sub_253961BF0(v51, v43, (uint64_t *)&unk_26B248CB0);
    sub_253961E88(*v45, v45[1]);
    *uint64_t v45 = v33;
    v45[1] = v34;
    v45[2] = v35;
    sub_253971984(v42, v55, (void (*)(void))type metadata accessor for ExternalAgentRequest);
    uint64_t v46 = sub_253971B38();
    v47(v46);
    sub_253B05F40();
    sub_25346CAF4();
    sub_2534659CC();
    v48();
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v6);
  }
  sub_2534847C8();
}

void MessagePayload.ExternalAgentRequest.init(ifps:)()
{
  sub_2535B3C98();
  uint64_t v4 = v3;
  uint64_t v5 = sub_253462A5C(&qword_269CE5248);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_25348366C();
  uint64_t v7 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_2534AF2D8();
  uint64_t v10 = type metadata accessor for RequestContent(v9);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  sub_2534D8CAC();
  uint64_t v12 = sub_253B05E40();
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  sub_253465A3C();
  sub_25397187C(v4, v2, (void (*)(void))type metadata accessor for RequestContent);
  MessagePayload.RequestContent.init(ifps:)();
  uint64_t v14 = type metadata accessor for ExternalAgentRequest(0);
  sub_253961F60(v4 + *(int *)(v14 + 20), v1, (uint64_t *)&unk_26B248CB0);
  if (*(void *)(v4 + *(int *)(v14 + 24) + 8))
  {
    uint64_t v15 = sub_253971D34();
    sub_25396DF48(v15, v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_253971D34();
    MEMORY[0x25A2651A0](v17);
    uint64_t v18 = sub_253B061D0();
    sub_253971DA8(v0, v19, v20, v18);
    uint64_t v21 = sub_253971D34();
    sub_253961E88(v21, v22);
  }
  else
  {
    uint64_t v23 = sub_253B061D0();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v0, 1, 1, v23);
  }
  sub_253B05F20();
  sub_2539718D8(v4, (void (*)(void))type metadata accessor for ExternalAgentRequest);
  sub_25346CD04();
}

void RequestContent.TextContent.init(client:context:)()
{
}

uint64_t RequestContent.SpeechContent.init(client:context:)@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  MEMORY[0x25A264DF0]();
  sub_2539647F4();
  uint64_t v5 = v4;
  sub_253B05E30();
  sub_25346CAF4();
  sub_2534659CC();
  v6();
  swift_bridgeObjectRelease();
  uint64_t result = _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(a1);
  *a2 = v5;
  return result;
}

void RequestContent.SystemPromptResolution.init(client:context:)()
{
  sub_2534B3258();
  sub_253971ABC();
  uint64_t v2 = sub_253B06DE0();
  uint64_t v3 = sub_25346CB4C(v2);
  MEMORY[0x270FA5388](v3);
  sub_253465A3C();
  uint64_t v4 = sub_253462A5C(&qword_269CE5258);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_2534AF2D8();
  uint64_t v6 = sub_253B059D0();
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_25348360C();
  uint64_t v8 = sub_253B06DF0();
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_25349888C();
  uint64_t v11 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(v10);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_253971C48();
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  sub_2534966B0();
  uint64_t v15 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v16 = sub_25346CB4C(v15);
  MEMORY[0x270FA5388](v16);
  sub_25347FAAC();
  sub_253B066A0();
  sub_253B06E50();
  sub_253B06E00();
  sub_253476B80(v0, (uint64_t)v21);
  RequestContent.SystemPromptResolution.UserAction.init(client:context:)();
  sub_253B06E10();
  sub_253B06E60();
  sub_253476B80(v0, (uint64_t)v21);
  RequestContent.SystemPromptResolution.ResolutionInput.init(client:context:)();
  uint64_t v17 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
  sub_253971DA8(v1, v18, v19, v17);
  RequestContent.SystemPromptResolution.init(actionEventId:systemResponseEventId:userAction:statementId:input:)();
  sub_253971B74();
  sub_253B06E70();
  sub_25346CAF4();
  sub_2534659CC();
  v20();
  sub_253465A14();
}

uint64_t RequestContent.StopContent.init(client:context:)(uint64_t a1, uint64_t a2)
{
  return sub_2539693F0(a1, a2, MEMORY[0x263F4C278]);
}

uint64_t MessagePayload.RequestContent.TextContent.init(ifps:)(uint64_t a1)
{
  return sub_253968540(a1, MEMORY[0x263F4C280], (void (*)(void))type metadata accessor for RequestContent.TextContent);
}

void MessagePayload.RequestContent.SpeechContent.init(ifps:)()
{
  sub_2534B3258();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for SpeechRequestCandidate(0);
  uint64_t v6 = sub_25346CB34(v5);
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v40 = (uint64_t)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v10);
  sub_2534B35DC();
  uint64_t v39 = v11;
  sub_253483660();
  uint64_t v12 = sub_253B05E20();
  sub_253465998();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  sub_2534659D8();
  uint64_t v41 = v16;
  sub_2534B324C();
  MEMORY[0x270FA5388](v17);
  sub_2534D97C0();
  uint64_t v18 = *v2;
  uint64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    v34[1] = v4;
    uint64_t v42 = MEMORY[0x263F8EE78];
    sub_2539E89C0();
    sub_2535786F4();
    v34[0] = v18;
    uint64_t v21 = v18 + v20;
    uint64_t v36 = *(void *)(v8 + 72);
    uint64_t v37 = v14;
    uint64_t v22 = (void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32);
    uint64_t v38 = v12;
    uint64_t v35 = v0;
    uint64_t v23 = v39;
    uint64_t v24 = v41;
    do
    {
      sub_25397187C(v21, v23, (void (*)(void))type metadata accessor for SpeechRequestCandidate);
      uint64_t v25 = v40;
      sub_25397187C(v23, v40, (void (*)(void))type metadata accessor for SpeechRequestCandidate);
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_2536D500C();
      MEMORY[0x25A264E00](v26);
      sub_2539718D8(v25, (void (*)(void))type metadata accessor for SpeechRequestCandidate);
      uint64_t v27 = *v22;
      (*v22)(v0, v24, v12);
      sub_2539718D8(v23, (void (*)(void))type metadata accessor for SpeechRequestCandidate);
      uint64_t v28 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2539E89C0();
        uint64_t v28 = v42;
      }
      unint64_t v30 = *(void *)(v28 + 16);
      unint64_t v29 = *(void *)(v28 + 24);
      uint64_t v0 = v35;
      if (v30 >= v29 >> 1)
      {
        sub_253526BBC(v29);
        sub_2539E89C0();
        uint64_t v28 = v42;
      }
      *(void *)(v28 + 16) = v30 + 1;
      sub_2535786F4();
      unint64_t v33 = v28 + v31 + *(void *)(v32 + 72) * v30;
      uint64_t v12 = v38;
      v27(v33, v0, v38);
      uint64_t v42 = v28;
      v21 += v36;
      --v19;
    }
    while (v19);
  }
  swift_bridgeObjectRelease();
  sub_253B05DE0();
  sub_253465A14();
}

void SystemPromptResolution.init(ifps:)()
{
  sub_2534B3258();
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_2534D92D4(v8, v30);
  uint64_t v9 = sub_253462A5C(&qword_269CE5260);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  sub_25346CBDC();
  uint64_t v32 = sub_253B059D0();
  sub_253465998();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  sub_25346CB04();
  uint64_t v31 = v14;
  uint64_t v15 = sub_253483660();
  uint64_t v16 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(v15);
  uint64_t v17 = sub_25346CB4C(v16);
  MEMORY[0x270FA5388](v17);
  sub_25349888C();
  uint64_t v18 = sub_253B06DF0();
  uint64_t v19 = sub_25346CB4C(v18);
  MEMORY[0x270FA5388](v19);
  uint64_t v20 = sub_253971C48();
  sub_253465998();
  uint64_t v22 = v21;
  MEMORY[0x270FA5388](v23);
  sub_2534966B0();
  uint64_t v24 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v25 = sub_25346CB4C(v24);
  MEMORY[0x270FA5388](v25);
  sub_25347FAAC();
  sub_253961F60(v5, v3, (uint64_t *)&unk_26B248CB0);
  uint64_t v26 = (int *)type metadata accessor for RequestContent.SystemPromptResolution(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v1, v5 + v26[5], v20);
  sub_25397187C(v5 + v26[6], v2, (void (*)(void))type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
  SystemPromptResolution.UserAction.init(ifps:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v31, v5 + v26[7], v32);
  sub_25397187C(v5 + v26[8], v33, (void (*)(void))type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput);
  SystemPromptResolution.ResolutionInput.init(ifps:)();
  uint64_t v27 = sub_253B06DE0();
  sub_253971DA8(v0, v28, v29, v27);
  sub_253B06E20();
  sub_2539718D8(v5, (void (*)(void))type metadata accessor for RequestContent.SystemPromptResolution);
  sub_253465A14();
}

uint64_t sub_253968170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v21 = a3;
  uint64_t v22 = sub_253B059D0();
  uint64_t v20 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_253B05E20();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_253476B80(a2, (uint64_t)v23);
  uint64_t v11 = sub_253B05D80();
  uint64_t v13 = v12;
  uint64_t v14 = v24;
  uint64_t v15 = v25;
  sub_253472068(v23, v24);
  (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v16 = v21;
  uint64_t *v21 = v11;
  v16[1] = v13;
  uint64_t v17 = v16;
  uint64_t v18 = type metadata accessor for SpeechRequestCandidate(0);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))((char *)v17 + *(int *)(v18 + 20), v6, v22);
  return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v23);
}

void SpeechRequestCandidate.init(client:context:)()
{
}

void sub_2539683C0()
{
  sub_2534B3258();
  uint64_t v24 = v0;
  uint64_t v22 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v23 = sub_253B059D0();
  sub_253465998();
  uint64_t v9 = v8;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v3(v11);
  uint64_t v16 = v15;
  uint64_t v17 = v5[3];
  uint64_t v18 = v5[4];
  sub_253472068(v5, v17);
  (*(void (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
  v22(0);
  sub_25346CAF4();
  sub_2534659CC();
  v19();
  *uint64_t v7 = v14;
  v7[1] = v16;
  uint64_t v20 = v24(0);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))((char *)v7 + *(int *)(v20 + 20), v13, v23);
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v5);
  sub_253465A14();
}

uint64_t MessagePayload.RequestContent.SpeechContent.Candidate.init(ifps:)(uint64_t a1)
{
  return sub_253968540(a1, MEMORY[0x263F4C298], (void (*)(void))type metadata accessor for SpeechRequestCandidate);
}

uint64_t sub_253968540(uint64_t a1, void (*a2)(uint64_t), void (*a3)(void))
{
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_2534D9B1C();
  a2(v6);
  return sub_2539718D8(a1, a3);
}

void RequestContent.SystemPromptResolution.UserAction.init(client:context:)()
{
  sub_2534B3258();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_253B06DD0();
  sub_253465998();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_2534D8CE4();
  MEMORY[0x270FA5388](v8);
  sub_253B06DF0();
  sub_253465998();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  sub_25346CC54();
  sub_2534AF234();
  v12();
  sub_253578368();
  int v14 = v13();
  if (v14 == *MEMORY[0x263F4CB40])
  {
    uint64_t v15 = sub_253971A40();
    v16(v15);
    uint64_t v17 = sub_253971A7C();
    v18(v17);
    *uint64_t v4 = *v0;
    type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
    sub_253971D44();
LABEL_16:
    swift_storeEnumTagMultiPayload();
    sub_253465A14();
    return;
  }
  if (v14 == *MEMORY[0x263F4CB60])
  {
    uint64_t v19 = sub_253971A40();
    v20(v19);
    uint64_t v21 = sub_253971A7C();
    v22(v21);
    sub_253B09120();
    sub_25346CAF4();
    sub_2534D8E14();
    v23();
    type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
    sub_253971D54();
    goto LABEL_16;
  }
  if (v14 == *MEMORY[0x263F4CB48])
  {
    uint64_t v24 = sub_253971A40();
    v25(v24);
    uint64_t v26 = sub_253971A7C();
    v27(v26);
    *uint64_t v4 = *v0;
    type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
    goto LABEL_16;
  }
  if (v14 == *MEMORY[0x263F4CB58] || v14 == *MEMORY[0x263F4CB68])
  {
    uint64_t v28 = sub_253971A40();
    v29(v28);
    uint64_t v30 = sub_253971A7C();
    v31(v30);
    *(void *)uint64_t v4 = *(void *)v0;
    type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
    sub_2539446BC();
    goto LABEL_16;
  }
  if (v14 == *MEMORY[0x263F4CB50])
  {
    sub_253971A70();
    v32();
    sub_253971D74();
    sub_25347FA84();
    v33();
    sub_253971B90();
    sub_2534AF234();
    v34();
    char v39 = sub_253B06DC0();
    uint64_t v35 = *(void (**)(void))(v6 + 8);
    sub_2534D9FA8();
    sub_2534D9A08();
    v35();
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v2);
    sub_2534D97B4();
    v36();
    sub_2534D9A08();
    v35();
    *uint64_t v4 = v39 & 1;
    type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
    sub_2539446BC();
    goto LABEL_16;
  }
  if (v14 == *MEMORY[0x263F4CB30])
  {
    uint64_t v37 = *(void (**)(void))(v10 + 8);
    sub_2534D97B4();
    v37();
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v2);
    sub_2534D97B4();
    v37();
    type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
    sub_2539446BC();
    goto LABEL_16;
  }
  if (v14 == *MEMORY[0x263F4CB38])
  {
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v2);
    sub_2534D97B4();
    v38();
    type metadata accessor for RequestContent.SystemPromptResolution.UserAction(0);
    sub_2539446BC();
    goto LABEL_16;
  }
  sub_253B0A4B0();
  __break(1u);
}

void RequestContent.SystemPromptResolution.ResolutionInput.init(client:context:)()
{
  sub_2534B3258();
  uint64_t v42 = v2;
  uint64_t v43 = v1;
  sub_253B05E30();
  sub_253465998();
  uint64_t v39 = v3;
  MEMORY[0x270FA5388](v4);
  sub_25353CE24();
  MEMORY[0x270FA5388](v5);
  sub_2534D9EC0();
  sub_253B059D0();
  sub_253465998();
  MEMORY[0x270FA5388](v6);
  sub_25346CB04();
  sub_253483660();
  uint64_t v7 = sub_253B05DD0();
  sub_253465998();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v11);
  sub_2534B35DC();
  uint64_t v13 = v12;
  sub_253483660();
  sub_253B06DE0();
  sub_253465998();
  MEMORY[0x270FA5388](v14);
  sub_2534835B0();
  sub_253971B90();
  sub_2534AF234();
  v15();
  sub_253578368();
  int v17 = v16();
  if (v17 == *MEMORY[0x263F4CB18])
  {
    sub_253971A70();
    v18();
    sub_25347FA84();
    v19();
    sub_2534DA138();
    sub_2534AF234();
    v20();
    sub_253476B80(v43, (uint64_t)v44);
    uint64_t v21 = sub_253B05D80();
    uint64_t v40 = v22;
    uint64_t v41 = v21;
    uint64_t v24 = v45;
    uint64_t v23 = v46;
    sub_253472068(v44, v45);
    (*(void (**)(uint64_t, uint64_t))(v23 + 16))(v24, v23);
    uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v25(v0, v7);
    *uint64_t v42 = v41;
    v42[1] = v40;
    type metadata accessor for RequestContent.TextContent(0);
    sub_2534D8E14();
    v26();
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v44);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v43);
    sub_2534D9A08();
    v27();
    v25(v13, v7);
    type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
    sub_253971D44();
LABEL_8:
    swift_storeEnumTagMultiPayload();
    sub_253465A14();
    return;
  }
  if (v17 == *MEMORY[0x263F4CB28])
  {
    sub_253971A70();
    v28();
    sub_25351C9FC();
    sub_25347FA84();
    v29();
    sub_2536D500C();
    sub_2534AF234();
    v30();
    uint64_t v31 = sub_253476B80(v43, (uint64_t)v44);
    uint64_t v32 = MEMORY[0x25A264DF0](v31);
    MEMORY[0x270FA5388](v32);
    sub_253971CA8();
    *(void *)(v33 - 16) = v44;
    sub_2539647F4();
    uint64_t v35 = v34;
    uint64_t v36 = *(void (**)(void))(v39 + 8);
    sub_253578EE0();
    sub_2534D97B4();
    v36();
    swift_bridgeObjectRelease();
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v44);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v43);
    sub_2534D9A08();
    v37();
    sub_2534D97B4();
    v36();
    *uint64_t v42 = v35;
    type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
    sub_253971D54();
    goto LABEL_8;
  }
  if (v17 == *MEMORY[0x263F4CB20] || v17 == *MEMORY[0x263F4CB10])
  {
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v43);
    sub_2534D9A08();
    v38();
    type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
    goto LABEL_8;
  }
  sub_253B0A4B0();
  __break(1u);
}

uint64_t SystemPromptResolution.UserAction.init(ifps:)()
{
  uint64_t v3 = sub_253971B04();
  type metadata accessor for RequestContent.SystemPromptResolution.UserAction(v3);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v4);
  sub_25348366C();
  uint64_t v5 = sub_2534DA2E4();
  sub_25397187C(v5, v6, v7);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_2539718D8(v1, (void (*)(void))type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
      sub_253B09120();
      sub_25346CAF4();
      sub_2534D8E14();
      v8();
      break;
    case 3u:
    case 4u:
      sub_2539718D8(v1, (void (*)(void))type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
      *uint64_t v0 = *v2;
      break;
    case 5u:
      sub_253B06DB0();
      sub_2539718D8(v1, (void (*)(void))type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
      break;
    case 6u:
      _s16IntelligenceFlow22SystemPromptResolutionV18ActionCancellationV0aB14PlannerSupportE4ifpsAeF14RequestContentOABVADV_tcfC_0();
      sub_2539718D8(v1, (void (*)(void))type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
      break;
    case 7u:
      sub_2539718D8(v1, (void (*)(void))type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
      break;
    default:
      sub_2539718D8(v1, (void (*)(void))type metadata accessor for RequestContent.SystemPromptResolution.UserAction);
      *(unsigned char *)uint64_t v0 = *(unsigned char *)v2;
      break;
  }
  sub_253971BE0();
  sub_253B06DF0();
  sub_25346CAF4();
  uint64_t v9 = sub_253971AA8();
  return v10(v9);
}

uint64_t SystemPromptResolution.ResolutionInput.init(ifps:)()
{
  uint64_t v4 = sub_253971B04();
  uint64_t v5 = type metadata accessor for RequestContent.TextContent(v4);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_2534DA444();
  type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(v8);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v9);
  sub_253465A3C();
  sub_25397187C(v0, v3, (void (*)(void))type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput);
  sub_2534D9B1C();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      MessagePayload.RequestContent.SpeechContent.init(ifps:)();
      sub_2539718D8(v0, (void (*)(void))type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput);
      break;
    case 2u:
    case 3u:
      sub_2539718D8(v0, (void (*)(void))type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput);
      break;
    default:
      uint64_t v10 = sub_2534DA178();
      sub_253971984(v10, v11, v12);
      sub_25397187C(v1, v2, (void (*)(void))type metadata accessor for RequestContent.TextContent);
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_2534D9B1C();
      MEMORY[0x25A264DB0](v13);
      sub_2539718D8(v2, (void (*)(void))type metadata accessor for RequestContent.TextContent);
      sub_2539718D8(v0, (void (*)(void))type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput);
      sub_2539718D8(v1, (void (*)(void))type metadata accessor for RequestContent.TextContent);
      break;
  }
  sub_253971BE0();
  sub_253B06DE0();
  sub_25346CAF4();
  uint64_t v14 = sub_253971AA8();
  return v15(v14);
}

uint64_t RequestContent.SystemPromptResolution.RequirementResolution.init(client:context:)()
{
  sub_253971ABC();
  char v1 = sub_253B06DC0();
  sub_253971B74();
  sub_253B06DD0();
  sub_25346CAF4();
  sub_2534659CC();
  uint64_t result = v2();
  *uint64_t v0 = v1 & 1;
  return result;
}

uint64_t RequestContent.SystemPromptResolution.ActionCancellation.init(client:context:)(uint64_t a1, uint64_t a2)
{
  return sub_2539693F0(a1, a2, MEMORY[0x263F4CB70]);
}

uint64_t sub_2539693F0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(a2);
  a3(0);
  sub_25346CAF4();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  return v7(a1, v5);
}

uint64_t SystemPromptResolution.RequirementResolution.init(ifps:)()
{
  return sub_253B06DB0();
}

uint64_t RequestPrescribedPlan.SearchTool.init(client:context:)()
{
  sub_253971ABC();
  uint64_t v1 = sub_253B05FA0();
  uint64_t v3 = v2;
  char v4 = sub_253B05F80();
  sub_253971B74();
  sub_253B05FB0();
  sub_25346CAF4();
  sub_2534659CC();
  uint64_t result = v5();
  *(void *)uint64_t v0 = v1;
  *(void *)(v0 + 8) = v3;
  *(unsigned char *)(v0 + 16) = v4 & 1;
  *(unsigned char *)(v0 + 17) = 0;
  return result;
}

uint64_t RequestPrescribedPlan.LowConfidenceKnowledgeTool.init(client:context:)()
{
  sub_253971ABC();
  uint64_t v1 = sub_253B05D80();
  uint64_t v3 = v2;
  sub_253971B74();
  sub_253B060A0();
  sub_25346CAF4();
  sub_2534659CC();
  uint64_t result = v4();
  *uint64_t v0 = v1;
  v0[1] = v3;
  return result;
}

void RequestPrescribedPlan.TextTool.init(client:context:)()
{
}

void RequestPrescribedPlan.ConvertTool.init(client:context:)()
{
}

void RequestPrescribedPlan.DisplayTool.init(client:context:)()
{
}

void RequestPrescribedPlan.KnowledgeTool.init(client:context:)()
{
}

void sub_253969654()
{
  sub_2535B3C98();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8();
  uint64_t v11 = v10;
  LOBYTE(v3) = v3();
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v5);
  v1(0);
  sub_25346CAF4();
  sub_2534659CC();
  v12();
  *(void *)uint64_t v7 = v9;
  *(void *)(v7 + 8) = v11;
  *(unsigned char *)(v7 + 16) = v3 & 1;
  sub_25346CD04();
}

void RequestPrescribedPlan.OpenTool.init(client:context:)()
{
  sub_2535B3C98();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_253B059D0();
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_253465A3C();
  sub_253B060D0();
  uint64_t v5 = sub_253B060B0();
  char v7 = v6;
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v1);
  sub_253B060E0();
  sub_25346CAF4();
  sub_2534659CC();
  v8();
  uint64_t v9 = v3 + *(int *)(type metadata accessor for RequestPrescribedPlan.OpenTool(0) + 20);
  sub_253971D64();
  v10();
  *(void *)uint64_t v9 = v5;
  *(unsigned char *)(v9 + 8) = v7 & 1;
  sub_25346CD04();
}

uint64_t RequestPrescribedPlan.OpenSuccessValueFromLatestRequestTool.init(client:context:)()
{
  sub_253971ABC();
  uint64_t v1 = sub_253B05F60();
  char v3 = v2;
  sub_253971B74();
  sub_253B05F70();
  sub_25346CAF4();
  sub_2534659CC();
  uint64_t result = v4();
  *(void *)uint64_t v0 = v1;
  *(unsigned char *)(v0 + 8) = v3 & 1;
  return result;
}

uint64_t MessagePayload.RequestPrescribedPlan.SearchTool.init(ifps:)()
{
  return sub_253B05F90();
}

void MessagePayload.RequestPrescribedPlan.LowConfidenceKnowledgeTool.init(ifps:)()
{
}

uint64_t MessagePayload.RequestPrescribedPlan.TextTool.init(ifps:)()
{
  return sub_253B05FD0();
}

uint64_t MessagePayload.RequestPrescribedPlan.ConvertTool.init(ifps:)()
{
  return sub_253B05FD0();
}

uint64_t MessagePayload.RequestPrescribedPlan.DisplayTool.init(ifps:)()
{
  return sub_253B05FD0();
}

uint64_t MessagePayload.RequestPrescribedPlan.KnowledgeTool.init(ifps:)()
{
  return sub_253B05FD0();
}

uint64_t MessagePayload.RequestPrescribedPlan.OpenTool.init(ifps:)(uint64_t a1)
{
  sub_253B059D0();
  sub_253465998();
  MEMORY[0x270FA5388](v3);
  sub_25348366C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v1, a1);
  type metadata accessor for RequestPrescribedPlan.OpenTool(0);
  sub_253B060C0();
  return sub_2539718D8(a1, (void (*)(void))type metadata accessor for RequestPrescribedPlan.OpenTool);
}

uint64_t MessagePayload.RequestPrescribedPlan.OpenSuccessValueFromLatestRequestTool.init(ifps:)()
{
  return sub_253B05F50();
}

uint64_t sub_253969994@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_253968170(a1, *(void *)(v2 + 16), a2);
}

void MessagePayload.PlannerReturnedRawPlan.init(ifps:)()
{
  sub_2534B3258();
  uint64_t v2 = v1;
  uint64_t v3 = sub_253B06160();
  sub_253465998();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  sub_2534D9C38();
  MEMORY[0x270FA5388](v7);
  long long v8 = v2[2];
  long long v9 = *v2;
  v13[1] = v2[1];
  *(_OWORD *)uint64_t v14 = v8;
  v13[0] = v9;
  *(_OWORD *)&v14[9] = *(long long *)((char *)v2 + 41);
  uint64_t v10 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_253970894((uint64_t)v13);
  sub_253963188(v10, (uint64_t)v13);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v0, **((unsigned int **)&unk_265397F48 + v14[24]), v3);
  uint64_t v11 = sub_2534DA138();
  v12(v11);
  sub_253B06150();
  sub_2539708E8((uint64_t)v13);
  sub_253465A14();
}

uint64_t MessagePayload.PlannerReturnedRawPlan.Source.init(ifps:)@<X0>(uint64_t a1@<X8>)
{
  sub_253971BE0();
  sub_253B06160();
  sub_25346CAF4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104);
  return v5(a1, v1, v3);
}

void MessagePayload.ActionWillExecute.init(ifps:)()
{
  sub_2534B3258();
  uint64_t v2 = v1;
  sub_253B059D0();
  sub_253465998();
  MEMORY[0x270FA5388](v3);
  sub_2534B3294();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v0, v2);
  uint64_t v5 = *(void *)(v2 + *(int *)(type metadata accessor for Action(0) + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25397093C(v5);
  swift_bridgeObjectRetain();
  sub_253B05E50();
  sub_2539718D8(v2, (void (*)(void))type metadata accessor for Action);
  sub_253465A14();
}

void MessagePayload.ActionWillExecute.ParameterValue.init(ifps:)()
{
  sub_2534B3258();
  uint64_t v4 = v3;
  sub_253B06770();
  sub_253465998();
  MEMORY[0x270FA5388](v5);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_253462A5C(&qword_269CDCB00);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_25346CC6C();
  uint64_t v9 = sub_253462A5C(&qword_269CE5268);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_25348360C();
  uint64_t v12 = type metadata accessor for ToolParameterValue(v11);
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  sub_2534D9B74();
  uint64_t v14 = sub_253B05EE0();
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  sub_2534966B0();
  sub_25397187C(v4, v2, (void (*)(void))type metadata accessor for ToolParameterValue);
  MessagePayload.ActionWillExecute.ToolParameterValue.init(ifps:)();
  uint64_t v16 = type metadata accessor for Action.ParameterValue(0);
  sub_253961F60(v4 + *(int *)(v16 + 20), v1, &qword_269CDCB00);
  uint64_t v17 = 1;
  sub_253592EEC(v1);
  if (!v18)
  {
    sub_25347FA84();
    v19();
    sub_2534AF234();
    v20();
    MessagePayload.ActionWillExecute.PromptSelection.init(ifps:)();
    sub_2534DA178();
    sub_2534D9220();
    v21();
    uint64_t v17 = 0;
  }
  uint64_t v22 = sub_253B05EB0();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v0, v17, 1, v22);
  sub_2534D9FA8();
  sub_253B05E60();
  sub_2539718D8(v4, (void (*)(void))type metadata accessor for Action.ParameterValue);
  sub_253465A14();
}

void MessagePayload.ActionWillExecute.ToolParameterValue.init(ifps:)()
{
  sub_2535B3C98();
  sub_253971B04();
  sub_253B09120();
  sub_253465998();
  MEMORY[0x270FA5388](v2);
  sub_2534D9C38();
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = sub_2534DA41C();
  type metadata accessor for ToolParameterValue(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  sub_2534847E0();
  sub_25397187C(v0, (uint64_t)v1, (void (*)(void))type metadata accessor for ToolParameterValue);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_25347FA84();
    v6();
    sub_253971B14();
    sub_2534AF234();
    v7();
    sub_253B05EC0();
    sub_2539718D8(v0, (void (*)(void))type metadata accessor for ToolParameterValue);
    sub_2534D973C();
    sub_2534F85D4();
    v8();
  }
  else
  {
    MEMORY[0x25A264ED0](*v1, v1[1]);
    sub_2539718D8(v0, (void (*)(void))type metadata accessor for ToolParameterValue);
  }
  sub_253971BE0();
  sub_253B05EE0();
  sub_25346CAF4();
  uint64_t v9 = sub_253971AA8();
  v10(v9);
  sub_25346CD04();
}

uint64_t MessagePayload.ActionWillExecute.PromptSelection.init(ifps:)()
{
  sub_253971B04();
  sub_253B06770();
  sub_253465998();
  MEMORY[0x270FA5388](v0);
  sub_2534B3294();
  sub_2534AF234();
  v1();
  sub_253578368();
  int v3 = v2();
  if (v3 == *MEMORY[0x263F4C6D8])
  {
    sub_253971A70();
    v4();
    sub_253B05E80();
    uint64_t v5 = sub_253971B20();
    v6(v5);
LABEL_7:
    sub_253971BE0();
    sub_253B05EB0();
    sub_25346CAF4();
    uint64_t v11 = sub_253971AA8();
    return v12(v11);
  }
  if (v3 == *MEMORY[0x263F4C6E8])
  {
    sub_253B05EA0();
    uint64_t v7 = sub_253971B20();
    v8(v7);
    goto LABEL_7;
  }
  if (v3 == *MEMORY[0x263F4C6E0])
  {
    sub_253B05E90();
    uint64_t v9 = sub_253971B20();
    v10(v9);
    goto LABEL_7;
  }
  uint64_t result = sub_253B0A4B0();
  __break(1u);
  return result;
}

uint64_t sub_25396A278()
{
  uint64_t v0 = sub_253462A5C(&qword_269CE52E8);
  sub_2534AF1BC(v0, qword_269CE5230);
  sub_253462BD4(v0, (uint64_t)qword_269CE5230);
  sub_253462A5C(&qword_269CE5330);
  return sub_253B07050();
}

uint64_t sub_25396A2F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v4 = sub_253462A5C(&qword_269CE5320);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v55 = (uint64_t **)((char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_253462A5C(&qword_269CE5328);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v53 = (uint64_t *)((char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v56 = (uint64_t)&v53 - v9;
  uint64_t v62 = type metadata accessor for ProgramStatement(0);
  uint64_t v10 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for Expression(0);
  MEMORY[0x270FA5388](v63);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_253B059D0();
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v59 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v53 - v18;
  uint64_t v57 = v20;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v20 + 16);
  uint64_t v61 = v22;
  v21((char *)&v53 - v18, v2);
  uint64_t v58 = a1;
  uint64_t v60 = *(void *)(a1 + 16);
  if (v60)
  {
    uint64_t v23 = v58 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v24 = (void (**)(char *, char *, uint64_t))(v57 + 32);
    uint64_t v25 = (void (**)(char *, char *, uint64_t))(v57 + 40);
    uint64_t v26 = *(void *)(v10 + 72);
    while (1)
    {
      uint64_t v27 = v60;
      while (1)
      {
        --v27;
        sub_25397187C(v23 + v26 * v27, (uint64_t)v12, (void (*)(void))type metadata accessor for ProgramStatement);
        uint64_t v28 = v19;
        char v29 = _s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0();
        sub_2539718D8((uint64_t)v12, (void (*)(void))type metadata accessor for ProgramStatement);
        if (v29) {
          break;
        }
        uint64_t v19 = v28;
        if (!v27) {
          goto LABEL_10;
        }
      }
      sub_25397187C(v23 + v26 * v27 + *(int *)(v62 + 20), (uint64_t)v14, (void (*)(void))type metadata accessor for Expression);
      if (swift_getEnumCaseMultiPayload() != 1) {
        break;
      }
      uint64_t v30 = v59;
      uint64_t v31 = v61;
      (*v24)(v59, v14, v61);
      uint64_t v19 = v28;
      (*v25)(v28, v30, v31);
    }
    sub_2539718D8((uint64_t)v14, (void (*)(void))type metadata accessor for Expression);
    uint64_t v19 = v28;
  }
LABEL_10:
  uint64_t v64 = v58;
  uint64_t v32 = sub_253971594(v58, (uint64_t)v19);
  MEMORY[0x270FA5388](v32);
  *(&v53 - 2) = &v64;
  uint64_t v33 = v55;
  sub_253A560C4((void *(*)(void *__return_ptr, uint64_t *))sub_253971964, v34, v35, v55);
  uint64_t v36 = v62;
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v33, 1, v62) == 1)
  {
    sub_253472458((uint64_t)v33, &qword_269CE5320);
    uint64_t v37 = v56;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v56, 1, 1, v63);
  }
  else
  {
    uint64_t v37 = v56;
    sub_25397187C((uint64_t)v33 + *(int *)(v36 + 20), v56, (void (*)(void))type metadata accessor for Expression);
    sub_2539718D8((uint64_t)v33, (void (*)(void))type metadata accessor for ProgramStatement);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v37, 0, 1, v63);
    uint64_t v38 = v53;
    sub_253961F60(v37, (uint64_t)v53, &qword_269CE5328);
    if (!swift_getEnumCaseMultiPayload())
    {
      uint64_t v45 = *v38;
      uint64_t v44 = v38[1];
      int v46 = *((unsigned __int8 *)v38 + 16);
      if (v46 == 4)
      {
        uint64_t v50 = v58;
        swift_bridgeObjectRetain();
        sub_253964270(v45, v50);
        sub_2534E43E0(v45, v44, 4);
        uint64_t v51 = v54;
        sub_253B05DE0();
        uint64_t v52 = *MEMORY[0x263F4CCC0];
        uint64_t v49 = sub_253B06FB0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 104))(v51, v52, v49);
        uint64_t v41 = v51;
      }
      else
      {
        if (v46 != 3)
        {
          sub_2534E43E0(*v38, v38[1], v46);
          goto LABEL_14;
        }
        uint64_t v47 = v54;
        MEMORY[0x25A265FA0](*v38, v38[1]);
        uint64_t v48 = *MEMORY[0x263F4CCC8];
        uint64_t v49 = sub_253B06FB0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 104))(v47, v48, v49);
        uint64_t v41 = v47;
      }
      uint64_t v42 = 0;
      uint64_t v40 = v49;
      goto LABEL_15;
    }
    sub_2539718D8((uint64_t)v38, (void (*)(void))type metadata accessor for Expression);
  }
LABEL_14:
  uint64_t v39 = v54;
  uint64_t v40 = sub_253B06FB0();
  uint64_t v41 = v39;
  uint64_t v42 = 1;
LABEL_15:
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v41, v42, 1, v40);
  sub_253472458(v37, &qword_269CE5328);
  return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v19, v61);
}

uint64_t sub_25396A998()
{
  return sub_253B06F80();
}

void PlannerPromptData.init(ifps:)()
{
  sub_2534B3258();
  uint64_t v4 = v3;
  uint64_t v188 = v5;
  uint64_t v6 = sub_253B077E0();
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_2534D8F5C((uint64_t)&v177 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_253462A5C(&qword_269CE5270);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  sub_25346CB04();
  uint64_t v211 = v11;
  sub_253483660();
  uint64_t v218 = sub_253B06920();
  sub_253465998();
  uint64_t v183 = v12;
  MEMORY[0x270FA5388](v13);
  sub_2534659D8();
  uint64_t v206 = v14;
  sub_2534B324C();
  MEMORY[0x270FA5388](v15);
  sub_2534B35DC();
  sub_2534D8F5C(v16);
  uint64_t v17 = sub_253462A5C(&qword_269CE5278);
  uint64_t v18 = sub_25346CB4C(v17);
  MEMORY[0x270FA5388](v18);
  sub_25346CB04();
  uint64_t v208 = v19;
  sub_253483660();
  uint64_t v221 = sub_253B06940();
  sub_253465998();
  uint64_t v207 = v20;
  MEMORY[0x270FA5388](v21);
  uint64_t v217 = (char *)&v177 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v23);
  sub_2534B3318();
  uint64_t v205 = v24;
  sub_2534B324C();
  MEMORY[0x270FA5388](v25);
  sub_2534B3318();
  uint64_t v204 = v26;
  sub_2534B324C();
  MEMORY[0x270FA5388](v27);
  sub_2534B35DC();
  uint64_t v203 = v28;
  sub_253483660();
  uint64_t v210 = sub_253B07850();
  sub_253465998();
  uint64_t v219 = v29;
  MEMORY[0x270FA5388](v30);
  uint64_t v220 = (char *)&v177 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v32);
  sub_2534B35DC();
  sub_2534D8F5C(v33);
  uint64_t v34 = sub_253462A5C(&qword_269CDB3F8);
  uint64_t v35 = sub_25346CB4C(v34);
  MEMORY[0x270FA5388](v35);
  sub_25346CC54();
  uint64_t v36 = sub_253B09120();
  sub_253465998();
  uint64_t v38 = v37;
  MEMORY[0x270FA5388](v39);
  sub_2534659D8();
  uint64_t v202 = v40;
  sub_2534B324C();
  MEMORY[0x270FA5388](v41);
  sub_2534B35DC();
  uint64_t v201 = v42;
  sub_253483660();
  uint64_t v236 = sub_253B07680();
  sub_253465998();
  uint64_t v240 = v43;
  MEMORY[0x270FA5388](v44);
  uint64_t v235 = (char *)&v177 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v46);
  sub_2534B35DC();
  uint64_t v234 = v47;
  uint64_t v48 = sub_253462A5C(&qword_269CE5280);
  uint64_t v49 = sub_25346CB4C(v48);
  MEMORY[0x270FA5388](v49);
  sub_25349888C();
  uint64_t v231 = sub_253B06880();
  sub_253465998();
  uint64_t v238 = v50;
  MEMORY[0x270FA5388](v51);
  sub_2534659D8();
  uint64_t v200 = v52;
  sub_2534B324C();
  MEMORY[0x270FA5388](v53);
  uint64_t v230 = (char *)&v177 - v54;
  sub_2534B324C();
  MEMORY[0x270FA5388](v55);
  uint64_t v246 = sub_253B07AB0();
  sub_253465998();
  uint64_t v57 = v56;
  MEMORY[0x270FA5388](v58);
  sub_25346CB04();
  uint64_t v243 = v59;
  uint64_t v60 = sub_253462A5C(&qword_269CE5288);
  uint64_t v61 = sub_25346CB4C(v60);
  MEMORY[0x270FA5388](v61);
  sub_2534D9C00();
  uint64_t v242 = sub_253B068A0();
  sub_253465998();
  uint64_t v63 = v62;
  MEMORY[0x270FA5388](v64);
  uint64_t v233 = (char *)&v177 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v66);
  sub_2534B3318();
  uint64_t v199 = v67;
  sub_2534B324C();
  MEMORY[0x270FA5388](v68);
  sub_2534B3318();
  uint64_t v198 = v69;
  sub_2534B324C();
  MEMORY[0x270FA5388](v70);
  sub_2534B35DC();
  uint64_t v216 = v71;
  uint64_t v72 = sub_253483660();
  uint64_t v232 = type metadata accessor for RetrievedContextStatement(v72);
  sub_253465998();
  uint64_t v74 = v73;
  MEMORY[0x270FA5388](v75);
  sub_25346CB04();
  uint64_t v245 = v76;
  uint64_t v77 = sub_253462A5C(&qword_269CDBB30);
  uint64_t v78 = sub_25346CB4C(v77);
  MEMORY[0x270FA5388](v78);
  sub_25346CB04();
  sub_2534D8F5C(v79);
  uint64_t v80 = *(void *)(*(void *)(v4 + 8) + 16);
  uint64_t v186 = v4;
  if (v80)
  {
    uint64_t v244 = v80;
    sub_2535786F4();
    uint64_t v83 = v81 + v82;
    uint64_t v84 = *(void *)(v74 + 72);
    uint64_t v227 = v57 + 16;
    uint64_t v228 = v84;
    uint64_t v226 = v240 + 4;
    uint64_t v225 = (void (**)(char *, uint64_t))(v240 + 11);
    int v224 = *MEMORY[0x263F4E258];
    int v215 = *MEMORY[0x263F4E2D8];
    int v197 = *MEMORY[0x263F4E2C8];
    int v190 = *MEMORY[0x263F4E2E0];
    int v185 = *MEMORY[0x263F4E2A0];
    int v181 = *MEMORY[0x263F4E2B8];
    int v179 = *MEMORY[0x263F4E228];
    uint64_t v177 = v240 + 1;
    int v178 = *MEMORY[0x263F4C858];
    uint64_t v222 = (void (**)(void, void, void))(v238 + 13);
    int v180 = *MEMORY[0x263F4C838];
    int v184 = *MEMORY[0x263F4C830];
    int v189 = *MEMORY[0x263F4C850];
    uint64_t v240 = (void (**)(void, void, void))(v238 + 4);
    uint64_t v196 = v38 + 32;
    int v195 = *MEMORY[0x263F4C840];
    uint64_t v194 = v38 + 16;
    uint64_t v193 = (void (**)(void, void, void))(v238 + 2);
    uint64_t v229 = v57 + 8;
    int v214 = *MEMORY[0x263F4C848];
    uint64_t v192 = v38 + 8;
    uint64_t v213 = (void (**)(void, void, void))(v238 + 1);
    uint64_t v212 = v63;
    uint64_t v238 = (void (**)(void))(v63 + 32);
    int v85 = *MEMORY[0x263F4C860];
    uint64_t v182 = v81;
    swift_bridgeObjectRetain();
    uint64_t v237 = MEMORY[0x263F8EE78];
    uint64_t v223 = v2;
    uint64_t v239 = v1;
    uint64_t v241 = v0;
    int v191 = v85;
    while (1)
    {
      uint64_t v86 = v36;
      sub_25397187C(v83, (uint64_t)v245, (void (*)(void))type metadata accessor for RetrievedContextStatement);
      sub_2534B3428();
      v87();
      sub_253B07A80();
      uint64_t v89 = v235;
      uint64_t v88 = v236;
      sub_2534D8E14();
      v90();
      (*v225)(v89, v88);
      sub_253971C30();
      if (v99
        || (sub_253971C30(), v99)
        || (sub_253971C30(), v99)
        || (sub_253971C30(), v99)
        || (sub_253971C30(), v99)
        || (sub_253971C30(), v99)
        || (sub_253971C30(), v99))
      {
        sub_2534DA678();
        uint64_t v91 = v231;
        v92(v230);
        uint64_t v124 = v223;
        sub_2534D8E14();
        v93();
        uint64_t v125 = v91;
        uint64_t v123 = 0;
        uint64_t v36 = v86;
      }
      else
      {
        sub_2534DA678();
        sub_2534659CC();
        v122();
        uint64_t v123 = 1;
        uint64_t v124 = v223;
        uint64_t v36 = v86;
        uint64_t v125 = v231;
      }
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v124, v123, 1, v125);
      sub_253592EEC(v124);
      if (v99) {
        break;
      }
      sub_2534D8E14();
      v97();
      sub_253B07A70();
      uint64_t v98 = v241;
      sub_2534D8B48(v241, 1, v36);
      if (v99)
      {
        sub_2534659CC();
        v100();
        sub_2534659CC();
        v101();
        uint64_t v95 = v98;
        uint64_t v96 = &qword_269CDB3F8;
        goto LABEL_18;
      }
      sub_2534DA678();
      sub_2534D8E14();
      v102();
      sub_2534DA678();
      sub_2534B3428();
      v103();
      sub_2534DA678();
      sub_253971C3C();
      sub_2534B3428();
      v104();
      uint64_t v105 = v199;
      sub_2535793C0();
      sub_253B06890();
      sub_2534659CC();
      v106();
      uint64_t v36 = v86;
      sub_2534659CC();
      v107();
      sub_2534659CC();
      v108();
      char v109 = *v238;
      uint64_t v110 = v198;
      uint64_t v111 = v242;
      ((void (*)(uint64_t, uint64_t, uint64_t))*v238)(v198, v105, v242);
      ((void (*)(uint64_t, uint64_t, uint64_t))v109)(v239, v110, v111);
      uint64_t v112 = 0;
LABEL_19:
      uint64_t v113 = v239;
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v239, v112, 1, v111);
      sub_2539718D8((uint64_t)v245, (void (*)(void))type metadata accessor for RetrievedContextStatement);
      sub_253592EEC(v113);
      if (v99)
      {
        sub_253472458(v113, &qword_269CE5288);
      }
      else
      {
        uint64_t v114 = *v238;
        sub_253971D64();
        v114();
        sub_253971D64();
        v114();
        uint64_t v115 = v237;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          char v126 = sub_253971D14();
          sub_253523A14(v126, v127, v128, v115);
          uint64_t v115 = v129;
        }
        uint64_t v117 = v115;
        unint64_t v118 = *(void *)(v115 + 16);
        uint64_t v119 = v117;
        unint64_t v120 = *(void *)(v117 + 24);
        if (v118 >= v120 >> 1)
        {
          char v130 = sub_253526BBC(v120);
          sub_253523A14(v130, v118 + 1, 1, v131);
          uint64_t v119 = v132;
        }
        *(void *)(v119 + 16) = v118 + 1;
        sub_2535786F4();
        uint64_t v237 = v121;
        sub_25347FA84();
        v114();
      }
      v83 += v228;
      if (!--v244)
      {
        swift_bridgeObjectRelease();
        uint64_t v4 = v186;
        goto LABEL_30;
      }
    }
    sub_2534659CC();
    v94();
    uint64_t v95 = v124;
    uint64_t v96 = &qword_269CE5280;
LABEL_18:
    sub_253472458(v95, v96);
    uint64_t v112 = 1;
    uint64_t v111 = v242;
    goto LABEL_19;
  }
  uint64_t v237 = MEMORY[0x263F8EE78];
LABEL_30:
  uint64_t DecorationResult = type metadata accessor for QueryDecorationResult(0);
  uint64_t v134 = v187;
  sub_253961F60(v4 + *(int *)(DecorationResult + 28), v187, &qword_269CDBB30);
  sub_253B08270();
  sub_253592EEC(v134);
  uint64_t v135 = v211;
  uint64_t v136 = v210;
  uint64_t v137 = v220;
  if (v99)
  {
    sub_253472458(v134, &qword_269CDBB30);
LABEL_50:
    uint64_t v176 = MEMORY[0x263F8EE78];
    uint64_t v175 = v237;
    goto LABEL_51;
  }
  uint64_t v138 = sub_253B08250();
  sub_2534DA2E4();
  sub_2534659CC();
  v139();
  uint64_t v140 = *(void *)(v138 + 16);
  uint64_t v141 = v209;
  if (!v140)
  {
    swift_bridgeObjectRelease();
    goto LABEL_50;
  }
  uint64_t v245 = *(void (**)(char *, uint64_t, uint64_t))(v219 + 16);
  sub_2535786F4();
  uint64_t v143 = v138 + v142;
  uint64_t v244 = *(void *)(v144 + 56);
  uint64_t v240 = (void (**)(void, void, void))(v183 + 16);
  uint64_t v241 = v183 + 32;
  uint64_t v219 = v144;
  unint64_t v145 = v144 - 8;
  uint64_t v239 = v183 + 8;
  uint64_t v146 = (void (**)(void))v138;
  uint64_t v147 = (void (**)(void))(v207 + 32);
  uint64_t v238 = v146;
  swift_bridgeObjectRetain();
  uint64_t v246 = MEMORY[0x263F8EE78];
  uint64_t v243 = (void (**)(char *, uint64_t))v145;
  uint64_t v242 = v145 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v148 = v208;
  do
  {
    uint64_t v149 = sub_2534D973C();
    uint64_t v150 = v245;
    ((void (*)(uint64_t))v245)(v149);
    v150(v137, v141, v136);
    sub_253B07800();
    PlannerPromptData.Tool.Definition.init(ifps:)();
    sub_2534D8B48(v135, 1, v218);
    if (v99)
    {
      uint64_t v153 = *v243;
      (*v243)(v137, v136);
      sub_253472458(v135, &qword_269CE5270);
      uint64_t v157 = 1;
      uint64_t v156 = v221;
    }
    else
    {
      sub_253971C3C();
      sub_2534D8E14();
      v151();
      sub_2535793C0();
      sub_2534B3428();
      v152();
      sub_253B06930();
      uint64_t v153 = *v243;
      uint64_t v141 = v209;
      (*v243)(v137, v136);
      uint64_t v148 = v208;
      sub_2534659CC();
      v154();
      uint64_t v155 = *v147;
      uint64_t v156 = v221;
      sub_253971B9C();
      v155();
      sub_253971DD4();
      uint64_t v136 = v210;
      sub_253971B9C();
      v155();
      uint64_t v157 = 0;
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v148, v157, 1, v156);
    uint64_t v158 = sub_2534DA138();
    ((void (*)(uint64_t))v153)(v158);
    sub_2534D8B48(v148, 1, v156);
    if (v99)
    {
      sub_253472458(v148, &qword_269CE5278);
      uint64_t v137 = v220;
    }
    else
    {
      uint64_t v159 = *v147;
      sub_2535793C0();
      sub_253971B9C();
      v159();
      sub_253971B9C();
      v159();
      char v160 = swift_isUniquelyReferenced_nonNull_native();
      if (v160)
      {
        uint64_t v161 = v246;
      }
      else
      {
        char v167 = sub_253971D14();
        sub_2535239CC(v167, v168, v169, v170);
        uint64_t v161 = v171;
      }
      unint64_t v163 = *(void *)(v161 + 16);
      unint64_t v162 = *(void *)(v161 + 24);
      uint64_t v137 = v220;
      if (v163 >= v162 >> 1)
      {
        char v172 = sub_253526BBC(v162);
        sub_2535239CC(v172, v163 + 1, 1, v173);
        uint64_t v161 = v174;
      }
      *(void *)(v161 + 16) = v163 + 1;
      sub_2535786F4();
      uint64_t v246 = v164;
      ((void (*)(unint64_t, char *, uint64_t))v159)(v164 + v165 + *(void *)(v166 + 72) * v163, v217, v221);
      uint64_t v135 = v211;
    }
    v143 += v244;
    --v140;
  }
  while (v140);
  swift_bridgeObjectRelease_n();
  uint64_t v4 = v186;
  uint64_t v175 = v237;
  uint64_t v176 = v246;
LABEL_51:
  MEMORY[0x25A265870](v175, v176);
  sub_2539718D8(v4, (void (*)(void))type metadata accessor for QueryDecorationResult);
  sub_253465A14();
}

void PlannerPromptData.OnScreenContextValue.init(ifps:)()
{
  sub_2534B3258();
  uint64_t v33 = v2;
  uint64_t v3 = sub_253462A5C(&qword_269CDB3F8);
  uint64_t v4 = sub_25346CB4C(v3);
  MEMORY[0x270FA5388](v4);
  sub_2534AF2D8();
  sub_253B09120();
  sub_253465998();
  v32[2] = v5;
  MEMORY[0x270FA5388](v6);
  v32[1] = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v8);
  sub_253971BBC();
  uint64_t v9 = sub_253B07680();
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  sub_2534835B0();
  uint64_t v11 = sub_253462A5C(&qword_269CE5280);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  sub_2534D9B74();
  uint64_t v13 = sub_253B06880();
  sub_253465998();
  MEMORY[0x270FA5388](v14);
  sub_2535B39C8();
  MEMORY[0x270FA5388](v15);
  sub_2534D9EC0();
  sub_253B07A80();
  PlannerPromptData.OnScreenContextValue.ContextType.init(ifps:)();
  sub_2534D8B48(v1, 1, v13);
  if (v20)
  {
    sub_253B07AB0();
    sub_25346CAF4();
    sub_2534659CC();
    v16();
    uint64_t v17 = &qword_269CE5280;
    uint64_t v18 = v1;
LABEL_7:
    sub_253472458(v18, v17);
    uint64_t v30 = 1;
    uint64_t v26 = v33;
    goto LABEL_8;
  }
  sub_25347FA84();
  v19();
  sub_253B07A70();
  sub_253592EEC(v0);
  if (v20)
  {
    sub_253B07AB0();
    sub_25346CAF4();
    sub_2534659CC();
    v21();
    sub_2534DA4BC();
    v22();
    uint64_t v17 = &qword_269CDB3F8;
    uint64_t v18 = v0;
    goto LABEL_7;
  }
  sub_253971D74();
  sub_25347FA84();
  v23();
  sub_253971B90();
  sub_2534AF234();
  v24();
  sub_2534AF234();
  v25();
  uint64_t v26 = v33;
  sub_253B06890();
  sub_253B07AB0();
  sub_25346CAF4();
  sub_2534659CC();
  v27();
  sub_2534DA178();
  sub_2534D9A08();
  v28();
  sub_2534DA4BC();
  v29();
  uint64_t v30 = 0;
LABEL_8:
  uint64_t v31 = sub_253B068A0();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v26, v30, 1, v31);
  sub_253465A14();
}

void PlannerPromptData.Tool.init(ifps:)()
{
  sub_2535B3C98();
  sub_253971B04();
  uint64_t v2 = sub_253B077E0();
  uint64_t v3 = sub_25346CB4C(v2);
  MEMORY[0x270FA5388](v3);
  sub_25346CC6C();
  uint64_t v4 = sub_253462A5C(&qword_269CE5270);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_2534AF2D8();
  sub_253B06920();
  sub_253465998();
  MEMORY[0x270FA5388](v6);
  sub_2534B340C();
  MEMORY[0x270FA5388](v7);
  sub_253971D80();
  sub_253B07800();
  PlannerPromptData.Tool.Definition.init(ifps:)();
  sub_253592EEC(v1);
  if (v8)
  {
    sub_253B07850();
    sub_25346CAF4();
    sub_2534659CC();
    v9();
    sub_253472458(v1, &qword_269CE5270);
    uint64_t v14 = 1;
  }
  else
  {
    sub_25347FA84();
    v10();
    sub_253971B14();
    sub_2534AF234();
    v11();
    sub_253B06930();
    sub_253B07850();
    sub_25346CAF4();
    sub_2534659CC();
    v12();
    sub_2534DA178();
    sub_2534F85D4();
    v13();
    uint64_t v14 = 0;
  }
  uint64_t v15 = sub_253B06940();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v0, v14, 1, v15);
  sub_25346CD04();
}

void PlannerPromptData.Tool.Definition.init(ifps:)()
{
  sub_2534B3258();
  uint64_t v97 = v1;
  uint64_t v98 = v0;
  uint64_t v2 = sub_253462A5C(&qword_269CE5290);
  uint64_t v3 = sub_25346CB4C(v2);
  MEMORY[0x270FA5388](v3);
  sub_25346CB04();
  uint64_t v91 = v4;
  sub_253483660();
  uint64_t v90 = sub_253B068E0();
  sub_253465998();
  uint64_t v85 = v5;
  MEMORY[0x270FA5388](v6);
  sub_25346CB04();
  uint64_t v84 = v7;
  sub_253483660();
  sub_253B078B0();
  sub_253465998();
  uint64_t v88 = v9;
  uint64_t v89 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v86 = (char *)v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v11);
  char v87 = (char *)v82 - v12;
  sub_253483660();
  sub_253B08B30();
  sub_253465998();
  uint64_t v95 = v14;
  uint64_t v96 = v13;
  MEMORY[0x270FA5388](v13);
  sub_2534659D8();
  uint64_t v16 = v15;
  sub_2534B324C();
  MEMORY[0x270FA5388](v17);
  sub_2534B35DC();
  uint64_t v19 = v18;
  sub_253483660();
  uint64_t v20 = sub_253B09440();
  sub_253465998();
  uint64_t v94 = v21;
  MEMORY[0x270FA5388](v22);
  sub_2534659D8();
  uint64_t v92 = v23;
  sub_2534B324C();
  MEMORY[0x270FA5388](v24);
  sub_2534B35DC();
  uint64_t v93 = v25;
  sub_253483660();
  uint64_t v26 = sub_253B077E0();
  sub_253465998();
  MEMORY[0x270FA5388](v27);
  sub_2534D8CAC();
  uint64_t v28 = sub_253B06920();
  sub_253465998();
  uint64_t v30 = v29;
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)v82 - v33;
  sub_253971B14();
  sub_2534AF234();
  v35();
  sub_253578368();
  int v37 = v36();
  if (v37 == *MEMORY[0x263F4E430])
  {
    sub_253971A70();
    v38();
    sub_253578EE0();
    sub_25347FA84();
    v39();
    sub_2534AF234();
    v40();
    sub_253B068F0();
    sub_2534F85D4();
    v41();
    uint64_t v42 = sub_253578EE0();
    v43(v42);
    sub_253971BFC();
    v44();
    uint64_t v45 = *(void (**)(uint64_t))(v30 + 32);
LABEL_8:
    uint64_t v58 = sub_2534DA178();
LABEL_9:
    v45(v58);
    uint64_t v59 = v97;
    ((void (*)(uint64_t, char *, uint64_t))v45)(v97, v34, v28);
    goto LABEL_10;
  }
  v82[0] = v16;
  v82[1] = v19;
  uint64_t v46 = (void (*)(uint64_t))v26;
  uint64_t v45 = v96;
  uint64_t v83 = v34;
  if (v37 == *MEMORY[0x263F4E438])
  {
    uint64_t v45 = v46;
    sub_253971A70();
    v47();
    uint64_t v34 = (char *)v20;
    sub_25347FA84();
    v48();
    sub_253971B14();
    sub_2534AF234();
    v49();
    sub_253B06910();
    sub_2534D9220();
    v50();
    sub_253971DD4();
    sub_2534F85D4();
    v51();
LABEL_7:
    sub_253971BFC();
    v57();
    sub_253971DC0();
    goto LABEL_8;
  }
  uint64_t v34 = (char *)v46;
  if (v37 == *MEMORY[0x263F4E428])
  {
    sub_253971A70();
    v52();
    sub_25347FA84();
    v53();
    sub_253971B90();
    sub_2534D9FA8();
    sub_2534AF234();
    v54();
    sub_253B068F0();
    sub_2534D9220();
    v55();
    sub_2534D9A08();
    v56();
    goto LABEL_7;
  }
  if (v37 == *MEMORY[0x263F4E420])
  {
    sub_253971A70();
    v61();
    sub_25347FA84();
    v62();
    sub_253971B90();
    sub_2534AF234();
    v63();
    sub_253B06900();
    sub_2534D9220();
    v64();
    sub_2534D9A08();
    v65();
    sub_253971BFC();
    v66();
    sub_253971DC0();
    uint64_t v58 = (uint64_t)v34;
    goto LABEL_9;
  }
  if (v37 == *MEMORY[0x263F4E440])
  {
    sub_253971A70();
    v67();
    uint64_t v69 = v87;
    uint64_t v68 = v88;
    uint64_t v70 = v89;
    sub_25347FA84();
    v71();
    sub_2534AF234();
    v72();
    uint64_t v73 = v91;
    PlannerPromptData.Tool.Definition.UIControlTool.init(ifps:)();
    sub_253971DD4();
    sub_2534D9220();
    v74();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v70);
    uint64_t v75 = v90;
    sub_2534D8B48(v73, 1, v90);
    uint64_t v59 = v97;
    if (v76)
    {
      sub_253472458(v73, &qword_269CE5290);
      uint64_t v60 = 1;
      goto LABEL_11;
    }
    uint64_t v77 = v84;
    uint64_t v78 = *(void (**)(uint64_t))(v85 + 32);
    uint64_t v79 = sub_2534D9FA8();
    v78(v79);
    uint64_t v80 = v83;
    ((void (*)(char *, uint64_t, uint64_t))v78)(v83, v77, v75);
    sub_253971BFC();
    v81();
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v59, v80, v28);
LABEL_10:
    uint64_t v60 = 0;
LABEL_11:
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v59, v60, 1, v28);
    sub_253465A14();
    return;
  }
  sub_253B0A4B0();
  __break(1u);
}

void PlannerPromptData.Tool.Definition.UIControlTool.init(ifps:)()
{
  sub_2534B3258();
  uint64_t v3 = v2;
  uint64_t v4 = sub_253B068D0();
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_25348366C();
  uint64_t v6 = sub_253462A5C(&qword_26B241270);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_2534D8CAC();
  uint64_t v8 = sub_253B08B30();
  sub_253465998();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  sub_2534B340C();
  MEMORY[0x270FA5388](v12);
  sub_253971D80();
  sub_253B07880();
  sub_2534D8B48(v1, 1, v8);
  if (v13)
  {
    sub_253B078B0();
    sub_25346CAF4();
    sub_2534659CC();
    v14();
    sub_253472458(v1, &qword_26B241270);
    uint64_t v18 = 1;
  }
  else
  {
    sub_25347FA84();
    v15();
    sub_253B07860();
    sub_253B07870();
    sub_253B078A0();
    sub_253B068C0();
    sub_2534AF234();
    v16();
    sub_253B068B0();
    sub_253B078B0();
    sub_25346CAF4();
    sub_2534659CC();
    v17();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0, v8);
    uint64_t v18 = 0;
  }
  uint64_t v19 = sub_253B068E0();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v3, v18, 1, v19);
  sub_253465A14();
}

void PlannerPromptData.OnScreenContextValue.ContextType.init(ifps:)()
{
  sub_2535B3C98();
  uint64_t v2 = v1;
  uint64_t v3 = sub_253B06880();
  sub_253465998();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  sub_25346CBDC();
  sub_253B07680();
  sub_253578368();
  int v8 = v7();
  if (v8 == *MEMORY[0x263F4E258])
  {
    uint64_t v9 = (unsigned int *)MEMORY[0x263F4C860];
LABEL_15:
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v0, *v9, v3);
    uint64_t v10 = sub_2534DA2E4();
    v11(v10);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2, 0, 1, v3);
    sub_25346CD04();
    return;
  }
  if (v8 == *MEMORY[0x263F4E2D8])
  {
    uint64_t v9 = (unsigned int *)MEMORY[0x263F4C848];
    goto LABEL_15;
  }
  if (v8 == *MEMORY[0x263F4E2C8])
  {
    uint64_t v9 = (unsigned int *)MEMORY[0x263F4C840];
    goto LABEL_15;
  }
  if (v8 == *MEMORY[0x263F4E2E0])
  {
    uint64_t v9 = (unsigned int *)MEMORY[0x263F4C850];
    goto LABEL_15;
  }
  if (v8 == *MEMORY[0x263F4E2A0])
  {
    uint64_t v9 = (unsigned int *)MEMORY[0x263F4C830];
    goto LABEL_15;
  }
  if (v8 == *MEMORY[0x263F4E2B8])
  {
    uint64_t v9 = (unsigned int *)MEMORY[0x263F4C838];
    goto LABEL_15;
  }
  if (v8 == *MEMORY[0x263F4E228])
  {
    uint64_t v9 = (unsigned int *)MEMORY[0x263F4C858];
    goto LABEL_15;
  }
  sub_2534DA138();
  sub_2534DA4BC();
  v12();
  sub_25346CD04();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v13, v14, v15, v16);
}

uint64_t ActionResolutionUpdate.init(ifps:)(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ActionResolverRequest(0) + 44));
  uint64_t v3 = *v2;
  uint64_t v4 = v2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Dictionary<>.init(parameterCandidates:)();
  MEMORY[0x25A265DA0](v3, v4, v5);
  return sub_2539718D8(a1, (void (*)(void))type metadata accessor for ActionResolverRequest);
}

void Dictionary<>.init(parameterCandidates:)()
{
  sub_2534B3258();
  uint64_t v1 = v0;
  uint64_t v2 = 0;
  uint64_t v94 = sub_253462A5C(&qword_269CDE520);
  sub_253465998();
  uint64_t v87 = v3;
  MEMORY[0x270FA5388](v4);
  sub_25346CB04();
  uint64_t v100 = v5;
  uint64_t v93 = sub_253462A5C(&qword_269CDCA90);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v6);
  sub_2534659D8();
  uint64_t v92 = v7;
  sub_2534B324C();
  MEMORY[0x270FA5388](v8);
  sub_2534B3318();
  uint64_t v91 = v9;
  sub_2534B324C();
  MEMORY[0x270FA5388](v10);
  sub_2534B3318();
  uint64_t v90 = v11;
  sub_2534B324C();
  MEMORY[0x270FA5388](v12);
  uint64_t v99 = (uint64_t)v84 - v13;
  sub_2534B324C();
  MEMORY[0x270FA5388](v14);
  sub_2534B35DC();
  sub_2534D8F5C(v15);
  sub_2539717A0(v1, v103);
  uint64_t v95 = v103[0];
  uint64_t v85 = v103[1];
  int64_t v96 = v103[3];
  unint64_t v16 = v103[4];
  int64_t v86 = (unint64_t)(v103[2] + 64) >> 6;
  v84[1] = v1;
  swift_bridgeObjectRetain();
  uint64_t v17 = (void *)MEMORY[0x263F8EE80];
  uint64_t v88 = 0;
  if (!v16) {
    goto LABEL_3;
  }
LABEL_2:
  uint64_t v98 = (v16 - 1) & v16;
  unint64_t v18 = __clz(__rbit64(v16)) | (v96 << 6);
  while (1)
  {
    uint64_t v26 = *(void *)(v95 + 56);
    uint64_t v27 = *(void *)(v95 + 48) + 32 * v18;
    uint64_t v28 = *(void *)v27;
    uint64_t v29 = *(void *)(v27 + 8);
    uint64_t v30 = *(void *)(v27 + 16);
    char v31 = *(unsigned char *)(v27 + 24);
    uint64_t v32 = type metadata accessor for Candidate(0);
    sub_25346CB4C(v32);
    uint64_t v34 = v26 + *(void *)(v33 + 72) * v18;
    uint64_t v35 = v93;
    uint64_t v36 = v89;
    sub_25397187C(v34, v89 + *(int *)(v93 + 48), (void (*)(void))type metadata accessor for Candidate);
    *(void *)uint64_t v36 = v28;
    *(void *)(v36 + 8) = v29;
    *(void *)(v36 + 16) = v30;
    *(unsigned char *)(v36 + 24) = v31;
    uint64_t v37 = v99;
    sub_253961F14(v36, v99, &qword_269CDCA90);
    uint64_t v38 = *(void *)v37;
    uint64_t v39 = *(void *)(v37 + 8);
    uint64_t v40 = *(void *)(v37 + 16);
    LOBYTE(v37) = *(unsigned char *)(v37 + 24);
    uint64_t v41 = sub_253971C1C();
    uint64_t v97 = v42;
    sub_25397187C(v41, v42, (void (*)(void))type metadata accessor for Candidate);
    uint64_t v43 = v91 + *(int *)(v35 + 48);
    uint64_t v44 = sub_253971C1C();
    sub_25397187C(v44, v43, (void (*)(void))type metadata accessor for Candidate);
    uint64_t v45 = v92 + *(int *)(v35 + 48);
    uint64_t v46 = sub_253971C1C();
    sub_25397187C(v46, v45, (void (*)(void))type metadata accessor for Candidate);
    uint64_t v47 = v100;
    uint64_t v48 = (uint64_t)v100 + *(int *)(v94 + 48);
    *uint64_t v100 = v40;
    *((unsigned char *)v47 + 8) = v37;
    sub_253971984(v45, v48, (void (*)(void))type metadata accessor for Candidate);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    v104[0] = v17;
    unint64_t v49 = sub_25396E0AC();
    if (__OFADD__(v17[2], (v50 & 1) == 0))
    {
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
    unint64_t v51 = v49;
    char v52 = v50;
    sub_253462A5C(&qword_269CE5298);
    char v53 = sub_253B0A190();
    uint64_t v17 = (void *)v104[0];
    if (v53)
    {
      unint64_t v54 = sub_25396E0AC();
      if ((v52 & 1) != (v55 & 1)) {
        goto LABEL_68;
      }
      unint64_t v51 = v54;
    }
    swift_bridgeObjectRelease();
    if ((v52 & 1) == 0)
    {
      v17[(v51 >> 6) + 8] |= 1 << v51;
      uint64_t v56 = (void *)(v17[6] + 16 * v51);
      *uint64_t v56 = v38;
      v56[1] = v39;
      *(void *)(v17[7] + 8 * v51) = MEMORY[0x263F8EE78];
      uint64_t v57 = v17[2];
      BOOL v23 = __OFADD__(v57, 1);
      uint64_t v58 = v57 + 1;
      if (v23) {
        goto LABEL_64;
      }
      v17[2] = v58;
      swift_bridgeObjectRetain();
    }
    uint64_t v59 = v17[7];
    uint64_t v60 = *(void *)(v59 + 8 * v51);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v59 + 8 * v51) = v60;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      char v66 = sub_253971D14();
      uint64_t v60 = sub_253523A5C(v66, v67, v68, v60);
      *(void *)(v59 + 8 * v51) = v60;
    }
    unint64_t v63 = *(void *)(v60 + 16);
    unint64_t v62 = *(void *)(v60 + 24);
    if (v63 >= v62 >> 1)
    {
      char v69 = sub_253526BBC(v62);
      uint64_t v60 = sub_253523A5C(v69, v63 + 1, 1, v60);
      *(void *)(v59 + 8 * v51) = v60;
    }
    *(void *)(v60 + 16) = v63 + 1;
    sub_2535786F4();
    sub_253961F14((uint64_t)v100, v60 + v64 + *(void *)(v65 + 72) * v63, &qword_269CDE520);
    swift_bridgeObjectRelease();
    sub_2539718D8(v43, (void (*)(void))type metadata accessor for Candidate);
    sub_2539718D8(v97, (void (*)(void))type metadata accessor for Candidate);
    sub_253472458(v99, &qword_269CDCA90);
    uint64_t v2 = v88;
    unint64_t v16 = v98;
    if (v98) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v19 = v96 + 1;
    if (__OFADD__(v96, 1)) {
      goto LABEL_65;
    }
    if (v19 >= v86) {
      goto LABEL_38;
    }
    unint64_t v20 = *(void *)(v85 + 8 * v19);
    int64_t v21 = v96 + 1;
    if (!v20)
    {
      sub_253971C0C();
      if (v22 == v23) {
        goto LABEL_38;
      }
      sub_253971BEC();
      if (!v20)
      {
        sub_253971C0C();
        if (v22 == v23) {
          goto LABEL_38;
        }
        sub_253971BEC();
        if (!v20)
        {
          sub_253971C0C();
          if (v22 == v23) {
            goto LABEL_38;
          }
          sub_253971BEC();
          if (!v20)
          {
            sub_253971C0C();
            if (v22 == v23) {
              goto LABEL_38;
            }
            sub_253971BEC();
            if (!v20)
            {
              int64_t v21 = v24 + 5;
              if (v24 + 5 >= v86) {
                goto LABEL_38;
              }
              unint64_t v20 = *(void *)(v85 + 8 * v21);
              if (!v20) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_24:
    uint64_t v98 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
    int64_t v96 = v21;
  }
  int64_t v25 = v96 + 7;
  while (v25 < v86)
  {
    unint64_t v20 = *(void *)(v85 + 8 * v25++);
    if (v20)
    {
      int64_t v21 = v25 - 1;
      goto LABEL_24;
    }
  }
LABEL_38:
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v102 = MEMORY[0x263F8EE80];
  sub_2539717A0((uint64_t)v17, v104);
  uint64_t v70 = v104[0];
  uint64_t v71 = v104[1];
  int64_t v72 = v104[3];
  unint64_t v73 = v104[4];
  int64_t v74 = (unint64_t)(v104[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  if (!v73) {
    goto LABEL_40;
  }
LABEL_39:
  unint64_t v75 = __clz(__rbit64(v73));
  v73 &= v73 - 1;
  unint64_t v76 = v75 | (v72 << 6);
  while (1)
  {
    uint64_t v80 = (uint64_t *)(*(void *)(v70 + 48) + 16 * v76);
    uint64_t v81 = v80[1];
    uint64_t v82 = *(void *)(*(void *)(v70 + 56) + 8 * v76);
    v101[0] = *v80;
    v101[1] = v81;
    v101[2] = v82;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25396D714((uint64_t)&v102, v101);
    if (v2) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v73) {
      goto LABEL_39;
    }
LABEL_40:
    int64_t v77 = v72 + 1;
    if (__OFADD__(v72, 1)) {
      goto LABEL_66;
    }
    if (v77 >= v74) {
      goto LABEL_62;
    }
    unint64_t v78 = *(void *)(v71 + 8 * v77);
    if (!v78)
    {
      int64_t v79 = v72 + 2;
      if (v72 + 2 >= v74) {
        goto LABEL_62;
      }
      unint64_t v78 = *(void *)(v71 + 8 * v79);
      if (v78) {
        goto LABEL_51;
      }
      int64_t v79 = v72 + 3;
      if (v72 + 3 >= v74) {
        goto LABEL_62;
      }
      unint64_t v78 = *(void *)(v71 + 8 * v79);
      if (v78) {
        goto LABEL_51;
      }
      int64_t v79 = v72 + 4;
      if (v72 + 4 >= v74) {
        goto LABEL_62;
      }
      unint64_t v78 = *(void *)(v71 + 8 * v79);
      if (v78) {
        goto LABEL_51;
      }
      int64_t v79 = v72 + 5;
      if (v72 + 5 >= v74) {
        goto LABEL_62;
      }
      unint64_t v78 = *(void *)(v71 + 8 * v79);
      if (v78)
      {
LABEL_51:
        int64_t v77 = v79;
      }
      else
      {
        int64_t v77 = v72 + 6;
        if (v72 + 6 >= v74) {
          goto LABEL_62;
        }
        unint64_t v78 = *(void *)(v71 + 8 * v77);
        if (!v78)
        {
          int64_t v83 = v72 + 7;
          while (v83 < v74)
          {
            unint64_t v78 = *(void *)(v71 + 8 * v83++);
            if (v78)
            {
              int64_t v77 = v83 - 1;
              goto LABEL_52;
            }
          }
LABEL_62:
          swift_bridgeObjectRelease();
          swift_release();
          sub_253465A14();
          return;
        }
      }
    }
LABEL_52:
    unint64_t v73 = (v78 - 1) & v78;
    unint64_t v76 = __clz(__rbit64(v78)) + (v77 << 6);
    int64_t v72 = v77;
  }
LABEL_67:
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_68:
  sub_253B0A550();
  __break(1u);
}

void ActionExecutionOutcome.init(ifps:)()
{
  sub_2534B3258();
  uint64_t v3 = v2;
  uint64_t v31 = v4;
  uint64_t v5 = sub_253B06850();
  sub_253465998();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_2534B3294();
  uint64_t v9 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  sub_2534966B0();
  uint64_t v11 = sub_253B055C0();
  sub_253465998();
  uint64_t v13 = v12;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v30 - v16;
  uint64_t v18 = sub_2536D500C();
  sub_253961F60(v18, v19, (uint64_t *)&unk_26B248CB0);
  sub_2534D8B48(v1, 1, v11);
  if (v20)
  {
    sub_2539718D8(v3, (void (*)(void))type metadata accessor for StatementResult);
    sub_253472458(v1, (uint64_t *)&unk_26B248CB0);
LABEL_7:
    uint64_t v28 = 1;
    uint64_t v26 = v31;
    goto LABEL_8;
  }
  sub_253971D74();
  sub_25347FA84();
  v21();
  uint64_t v22 = type metadata accessor for StatementResult(0);
  BOOL v23 = (uint64_t *)(v3 + *(int *)(v22 + 36));
  if (!v23[1])
  {
    sub_2539718D8(v3, (void (*)(void))type metadata accessor for StatementResult);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v11);
    goto LABEL_7;
  }
  uint64_t v24 = v22;
  uint64_t v30 = *v23;
  sub_253971B90();
  sub_2534AF234();
  v25();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v0, v3 + *(int *)(v24 + 20), v5);
  swift_bridgeObjectRetain();
  uint64_t v26 = v31;
  sub_253B06D80();
  sub_2539718D8(v3, (void (*)(void))type metadata accessor for StatementResult);
  sub_2534D9A08();
  v27();
  uint64_t v28 = 0;
LABEL_8:
  uint64_t v29 = sub_253B06D90();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v26, v28, 1, v29);
  sub_253465A14();
}

void sub_25396D714(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = sub_253B09120();
  uint64_t v84 = *(void *)(v5 - 8);
  uint64_t v85 = v5;
  MEMORY[0x270FA5388](v5);
  int64_t v83 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_253462A5C(&qword_269CDB3F8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v81 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)&v67 - v10);
  uint64_t v12 = sub_253B091F0();
  uint64_t v74 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  int64_t v72 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  unint64_t v73 = (char *)&v67 - v15;
  uint64_t v16 = sub_253462A5C(&qword_269CE52B0);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  unint64_t v76 = (char *)&v67 - v20;
  uint64_t v21 = type metadata accessor for Candidate(0);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v71 = (uint64_t)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v78 = (uint64_t)&v67 - v24;
  uint64_t v86 = sub_253462A5C(&qword_269CDE520);
  uint64_t v25 = MEMORY[0x270FA5388](v86);
  uint64_t v82 = (uint64_t *)((char *)&v67 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v67 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v32 = (char *)&v67 - v31;
  uint64_t v33 = *a2;
  uint64_t v34 = a2[1];
  uint64_t v35 = a2[2];
  uint64_t v79 = v34;
  uint64_t v80 = v33;
  uint64_t v36 = *(void *)(v35 + 16);
  if (!v36)
  {
LABEL_8:
    sub_253981420(v35);
    uint64_t v42 = v86;
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v86) == 1)
    {
      swift_bridgeObjectRetain();
      sub_253472458((uint64_t)v19, &qword_269CE52B0);
      uint64_t v43 = 1;
      uint64_t v44 = v85;
      uint64_t v45 = (uint64_t)v81;
    }
    else
    {
      uint64_t v46 = (uint64_t)&v19[*(int *)(v42 + 48)];
      uint64_t v44 = v85;
      uint64_t v45 = (uint64_t)v81;
      (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v81, v46, v85);
      swift_bridgeObjectRetain();
      sub_2539718D8(v46, (void (*)(void))type metadata accessor for Candidate);
      uint64_t v43 = 0;
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v45, v43, 1, v44);
    sub_253469144();
    return;
  }
  char v69 = v11;
  uint64_t v70 = v12;
  uint64_t v75 = a1;
  uint64_t v77 = v2;
  unint64_t v68 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v37 = v35 + v68;
  uint64_t v38 = *(void *)(v30 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_253961F60(v37, (uint64_t)v32, &qword_269CDE520);
    int v39 = v32[8];
    sub_253472458((uint64_t)v32, &qword_269CDE520);
    if (v39 != 1) {
      break;
    }
    v37 += v38;
    if (!--v36)
    {
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v40 = (uint64_t)v76;
  sub_253981420(v35);
  uint64_t v41 = v86;
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v40, 1, v86) == 1)
  {
    sub_253472458(v40, &qword_269CE52B0);
    goto LABEL_8;
  }
  uint64_t v47 = v40 + *(int *)(v41 + 48);
  uint64_t v48 = v71;
  sub_253971984(v47, v71, (void (*)(void))type metadata accessor for Candidate);
  sub_253971984(v48, v78, (void (*)(void))type metadata accessor for Candidate);
  uint64_t v87 = v35;
  swift_bridgeObjectRetain();
  uint64_t v49 = v77;
  sub_253964574(&v87);
  uint64_t v50 = v85;
  if (v49)
  {
    swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v51 = v87;
    uint64_t v52 = *(void *)(v87 + 16);
    char v53 = v83;
    if (v52)
    {
      uint64_t v77 = 0;
      uint64_t v87 = MEMORY[0x263F8EE78];
      sub_2539E7D7C();
      unint64_t v76 = (char *)v51;
      uint64_t v54 = v51 + v68;
      char v55 = (void (**)(char *, uint64_t, uint64_t))(v84 + 16);
      uint64_t v81 = (char *)(v84 + 32);
      do
      {
        sub_253961F60(v54, (uint64_t)v29, &qword_269CDE520);
        uint64_t v56 = *(int *)(v86 + 48);
        uint64_t v57 = v82;
        uint64_t v58 = (uint64_t)v82 + v56;
        char v59 = v29[8];
        *uint64_t v82 = *(void *)v29;
        *((unsigned char *)v57 + 8) = v59;
        sub_25397187C((uint64_t)&v29[v56], v58, (void (*)(void))type metadata accessor for Candidate);
        (*v55)(v53, v58, v50);
        sub_2539718D8(v58, (void (*)(void))type metadata accessor for Candidate);
        sub_253472458((uint64_t)v29, &qword_269CDE520);
        uint64_t v60 = v87;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2539E7D7C();
          uint64_t v60 = v87;
        }
        unint64_t v61 = *(void *)(v60 + 16);
        if (v61 >= *(void *)(v60 + 24) >> 1)
        {
          sub_2539E7D7C();
          uint64_t v60 = v87;
        }
        *(void *)(v60 + 16) = v61 + 1;
        uint64_t v50 = v85;
        unint64_t v62 = v60
            + ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))
            + *(void *)(v84 + 72) * v61;
        char v53 = v83;
        (*(void (**)(unint64_t, char *, uint64_t))(v84 + 32))(v62, v83, v85);
        uint64_t v87 = v60;
        v54 += v38;
        --v52;
      }
      while (v52);
    }
    swift_release();
    unint64_t v63 = v73;
    sub_253B090C0();
    sub_253B08F70();
    uint64_t v64 = swift_allocBox();
    uint64_t v65 = v74;
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v72, v63, v70);
    swift_bridgeObjectRetain();
    sub_253B08F40();
    uint64_t v66 = (uint64_t)v69;
    *char v69 = v64;
    (*(void (**)(uint64_t, void, uint64_t))(v84 + 104))(v66, *MEMORY[0x263F804A0], v50);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v66, 0, 1, v50);
    sub_253469144();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v63, v70);
    sub_2539718D8(v78, (void (*)(void))type metadata accessor for Candidate);
  }
}

uint64_t sub_25396DF48(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_25396DF8C()
{
  sub_253971CF0();
  swift_bridgeObjectRetain();
  sub_253B09630();
  swift_bridgeObjectRelease();
  sub_253B0A630();
  uint64_t v0 = sub_2534D973C();
  return sub_25396E740(v0, v1, v2);
}

void sub_25396DFFC()
{
}

unint64_t sub_25396E0AC()
{
  sub_253971CF0();
  sub_253B09630();
  sub_253B0A630();
  uint64_t v0 = sub_2534D973C();
  return sub_25396E740(v0, v1, v2);
}

unint64_t sub_25396E10C(unsigned int a1)
{
  uint64_t v3 = MEMORY[0x25A2695D0](*(void *)(v1 + 40), a1, 4);
  return sub_25396E824(a1, v3);
}

void sub_25396E154()
{
}

unint64_t sub_25396E204(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v8 = a4 & 1;
  sub_253B0A5F0();
  swift_bridgeObjectRetain();
  sub_253971CD4();
  swift_bridgeObjectRelease();
  sub_253B0A610();
  if ((a4 & 1) == 0) {
    sub_253B0A600();
  }
  uint64_t v9 = sub_253B0A630();
  return sub_25396EA28(a1, a2, a3, v8, v9);
}

unint64_t sub_25396E2C8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  sub_253B0A5F0();
  if (a4)
  {
    sub_253B0A600();
    if (a4 == 1) {
      sub_253971CD4();
    }
    sub_253B0A600();
  }
  else
  {
    sub_253B0A600();
    sub_253971CD4();
  }
  uint64_t v8 = sub_253B0A630();
  return sub_25396EB18(a1, a2, a3, a4, v8);
}

unint64_t sub_25396E398(uint64_t *a1)
{
  sub_253B0A5F0();
  swift_bridgeObjectRetain();
  sub_253971CB8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_253971CB8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_253971CB8();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_253B0A630();
  return sub_25396EE64(a1, v2);
}

void sub_25396E440()
{
}

void sub_25396E4F0()
{
}

void sub_25396E5A0()
{
}

unint64_t sub_25396E650()
{
  sub_253B0A5E0();
  uint64_t v0 = sub_2539446BC();
  return sub_25396EF94(v0, v1);
}

void sub_25396E690()
{
}

unint64_t sub_25396E740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_253B0A4C0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_253B0A4C0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_25396E824(int a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

void sub_25396E8C0()
{
  sub_2534B3258();
  uint64_t v25 = v1;
  uint64_t v26 = v2;
  uint64_t v24 = v3;
  uint64_t v5 = v4;
  v22[1] = v6;
  uint64_t v8 = v7(0);
  sub_253465998();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v22 - v12;
  uint64_t v23 = v0;
  uint64_t v14 = -1 << *(unsigned char *)(v0 + 32);
  unint64_t v15 = v5 & ~v14;
  v22[0] = v0 + 64;
  if ((*(void *)(v0 + 64 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
    uint64_t v18 = v10 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v13, *(void *)(v23 + 48) + v20 * v15, v8);
      sub_2539719E0(v24, v25);
      char v21 = sub_253B096B0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v13, v8);
      if (v21) {
        break;
      }
      unint64_t v15 = (v15 + 1) & v16;
    }
    while (((*(void *)(v22[0] + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
  }
  sub_253465A14();
}

unint64_t sub_25396EA28(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v6 = v5 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = a5 & ~v7;
  if ((*(void *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v13 = ~v7;
    uint64_t v14 = *(void *)(v5 + 48);
    do
    {
      uint64_t v15 = v14 + 32 * v8;
      uint64_t v16 = *(void *)(v15 + 16);
      char v17 = *(unsigned char *)(v15 + 24);
      BOOL v18 = *(void *)v15 == a1 && *(void *)(v15 + 8) == a2;
      if (v18 || (sub_253B0A4C0() & 1) != 0)
      {
        if (v17)
        {
          if (a4) {
            return v8;
          }
        }
        else if ((a4 & 1) == 0 && v16 == a3)
        {
          return v8;
        }
      }
      unint64_t v8 = (v8 + 1) & v13;
    }
    while (((*(void *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

unint64_t sub_25396EB18(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5)
{
  uint64_t v6 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v7 = a5 & ~v6;
  if ((*(void *)(v5 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v22 = ~v6;
    do
    {
      uint64_t v12 = *(void *)(v5 + 48) + 32 * v7;
      uint64_t v13 = *(void *)v12;
      uint64_t v14 = *(void *)(v12 + 8);
      uint64_t v15 = *(void *)(v12 + 16);
      int v16 = *(unsigned __int8 *)(v12 + 24);
      if (*(unsigned char *)(v12 + 24))
      {
        if (v16 != 1)
        {
          if (a4 == 2)
          {
            sub_2534D2608(v13, v14, v15, 2u);
            sub_2534D2608(a1, a2, a3, 2u);
            if (v13 == a1) {
              return v7;
            }
            goto LABEL_18;
          }
          goto LABEL_17;
        }
        if (a4 != 1) {
          goto LABEL_13;
        }
        if (v13 == a1 && v14 == a2)
        {
          sub_25346CA34(a1, a2, v15, 1u);
          sub_25346CA34(a1, a2, a3, 1u);
          sub_2534D2608(a1, a2, v15, 1u);
          sub_2534D2608(a1, a2, a3, 1u);
        }
        else
        {
          char v21 = sub_253B0A4C0();
          sub_25346CA34(v13, v14, v15, 1u);
          sub_25346CA34(a1, a2, a3, 1u);
          sub_2534D2608(v13, v14, v15, 1u);
          sub_2534D2608(a1, a2, a3, 1u);
          if ((v21 & 1) == 0) {
            goto LABEL_18;
          }
        }
        if (v15 == a3) {
          return v7;
        }
      }
      else
      {
        if (a4)
        {
LABEL_13:
          swift_bridgeObjectRetain_n();
LABEL_17:
          sub_25346CA34(a1, a2, a3, a4);
          sub_2534D2608(v13, v14, v15, v16);
          sub_2534D2608(a1, a2, a3, a4);
          sub_2534D2608(v13, v14, v15, v16);
          goto LABEL_18;
        }
        if (v13 == a1 && v14 == a2)
        {
          sub_25346CA34(a1, a2, *(void *)(v12 + 16), 0);
          sub_25346CA34(a1, a2, a3, 0);
          sub_2534D2608(a1, a2, v15, 0);
          sub_2534D2608(a1, a2, a3, 0);
          return v7;
        }
        char v19 = sub_253B0A4C0();
        sub_25346CA34(v13, v14, v15, 0);
        sub_25346CA34(a1, a2, a3, 0);
        sub_2534D2608(v13, v14, v15, 0);
        sub_2534D2608(a1, a2, a3, 0);
        if (v19) {
          return v7;
        }
      }
LABEL_18:
      unint64_t v7 = (v7 + 1) & v22;
    }
    while (((*(void *)(v5 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_25396EE64(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v19 = ~v4;
    uint64_t v7 = *(void *)(v2 + 48);
    uint64_t v8 = *a1;
    uint64_t v9 = a1[1];
    do
    {
      uint64_t v10 = (void *)(v7 + 48 * v5);
      uint64_t v11 = v10[2];
      uint64_t v12 = v10[3];
      uint64_t v13 = v10[4];
      uint64_t v14 = v10[5];
      BOOL v15 = *v10 == v8 && v10[1] == v9;
      if (v15 || (sub_253B0A4C0() & 1) != 0)
      {
        BOOL v16 = v11 == a1[2] && v12 == a1[3];
        if (v16 || (sub_253B0A4C0() & 1) != 0)
        {
          BOOL v17 = v13 == a1[4] && v14 == a1[5];
          if (v17 || (sub_253B0A4C0() & 1) != 0) {
            break;
          }
        }
      }
      unint64_t v5 = (v5 + 1) & v19;
    }
    while (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_25396EF94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_25396F030(uint64_t *a1)
{
  uint64_t v199 = sub_253462A5C(&qword_269CDE520);
  uint64_t v189 = *(void *)(v199 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v199);
  uint64_t v181 = (uint64_t)&v171 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v200 = (uint64_t)&v171 - v5;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v194 = (uint64_t *)((char *)&v171 - v7);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v193 = (uint64_t *)((char *)&v171 - v9);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v192 = (uint64_t)&v171 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v191 = (uint64_t)&v171 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  int v185 = (uint64_t *)((char *)&v171 - v15);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  int v184 = (uint64_t *)((char *)&v171 - v17);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v183 = (uint64_t)&v171 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v182 = (uint64_t)&v171 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v171 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  int v178 = (uint64_t *)((char *)&v171 - v26);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v177 = (uint64_t)&v171 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v176 = (uint64_t)&v171 - v29;
  uint64_t v30 = a1[1];
  uint64_t result = sub_253B0A460();
  if (result >= v30)
  {
    if ((v30 & 0x8000000000000000) == 0)
    {
      if (v30) {
        return sub_25396FDB4(0, v30, 1, a1);
      }
      return result;
    }
LABEL_158:
    __break(1u);
    goto LABEL_159;
  }
  uint64_t v174 = result;
  uint64_t result = sub_2539DF828(v30 / 2);
  uint64_t v173 = result;
  unint64_t v188 = v32;
  if (v30 > 0)
  {
    char v172 = v24;
    uint64_t v33 = 0;
    uint64_t v34 = (char *)MEMORY[0x263F8EE78];
    uint64_t v35 = v30;
    uint64_t v175 = v30;
    uint64_t v187 = a1;
    while (1)
    {
      uint64_t v36 = v33;
      uint64_t v37 = v33 + 1;
      int v180 = v34;
      if (v33 + 1 < v35)
      {
        uint64_t v179 = *a1;
        uint64_t v38 = v179;
        uint64_t v39 = *(void *)(v189 + 72);
        uint64_t v203 = v39;
        uint64_t v40 = v176;
        sub_253961F60(v179 + v39 * v37, v176, &qword_269CDE520);
        uint64_t v41 = v177;
        sub_253961F60(v38 + v39 * v36, v177, &qword_269CDE520);
        uint64_t v202 = v35;
        uint64_t v42 = v199;
        uint64_t v43 = *(int *)(v199 + 48);
        uint64_t v44 = v178;
        uint64_t v45 = (uint64_t)v178 + v43;
        uint64_t v186 = v36;
        uint64_t v46 = *(void *)v40;
        LODWORD(v39) = *(unsigned __int8 *)(v40 + 8);
        *int v178 = *(void *)v40;
        *((unsigned char *)v44 + 8) = v39;
        uint64_t v204 = type metadata accessor for Candidate;
        sub_25397187C(v40 + v43, (uint64_t)v44 + v43, (void (*)(void))type metadata accessor for Candidate);
        if (v39) {
          uint64_t v47 = 0;
        }
        else {
          uint64_t v47 = v46;
        }
        uint64_t v201 = v47;
        sub_2539718D8(v45, (void (*)(void))type metadata accessor for Candidate);
        uint64_t v48 = *(int *)(v42 + 48);
        uint64_t v49 = v172;
        uint64_t v50 = (uint64_t)v172 + v48;
        uint64_t v51 = *(void *)v41;
        int v52 = *(unsigned __int8 *)(v41 + 8);
        void *v172 = *(void *)v41;
        *((unsigned char *)v49 + 8) = v52;
        sub_25397187C(v41 + v48, (uint64_t)v49 + v48, (void (*)(void))v204);
        BOOL v53 = v52 == 0;
        uint64_t v35 = v202;
        if (v53) {
          uint64_t v54 = v51;
        }
        else {
          uint64_t v54 = 0;
        }
        uint64_t v197 = v54;
        uint64_t v36 = v186;
        sub_2539718D8(v50, (void (*)(void))type metadata accessor for Candidate);
        sub_253472458(v41, &qword_269CDE520);
        uint64_t result = sub_253472458(v40, &qword_269CDE520);
        uint64_t v55 = v203;
        uint64_t v71 = v36 + 2;
        if (v36 + 2 < v35)
        {
          uint64_t v56 = v179;
          uint64_t v195 = v203 * v71;
          uint64_t v196 = v203 * v37;
          while (1)
          {
            uint64_t v198 = v71;
            LODWORD(v204) = v201 < v197;
            uint64_t v57 = v182;
            sub_253961F60(v56 + v195, v182, &qword_269CDE520);
            uint64_t v58 = v183;
            sub_253961F60(v56 + v196, v183, &qword_269CDE520);
            uint64_t v59 = v199;
            uint64_t v60 = *(int *)(v199 + 48);
            unint64_t v61 = v184;
            uint64_t v62 = (uint64_t)v184 + v60;
            uint64_t v63 = *(void *)v57;
            int v64 = *(unsigned __int8 *)(v57 + 8);
            void *v184 = *(void *)v57;
            *((unsigned char *)v61 + 8) = v64;
            sub_25397187C(v57 + v60, (uint64_t)v61 + v60, (void (*)(void))type metadata accessor for Candidate);
            if (v64) {
              uint64_t v65 = 0;
            }
            else {
              uint64_t v65 = v63;
            }
            sub_2539718D8(v62, (void (*)(void))type metadata accessor for Candidate);
            uint64_t v66 = *(int *)(v59 + 48);
            uint64_t v67 = v185;
            uint64_t v68 = (uint64_t)v185 + v66;
            uint64_t v69 = *(void *)v58;
            int v70 = *(unsigned __int8 *)(v58 + 8);
            void *v185 = *(void *)v58;
            *((unsigned char *)v67 + 8) = v70;
            sub_25397187C(v58 + v66, (uint64_t)v67 + v66, (void (*)(void))type metadata accessor for Candidate);
            if (v70) {
              uint64_t v69 = 0;
            }
            sub_2539718D8(v68, (void (*)(void))type metadata accessor for Candidate);
            sub_253472458(v58, &qword_269CDE520);
            uint64_t result = sub_253472458(v57, &qword_269CDE520);
            if (v204 == v65 >= v69) {
              break;
            }
            uint64_t v71 = v198 + 1;
            uint64_t v55 = v203;
            v56 += v203;
            if (v198 + 1 >= v202)
            {
              uint64_t v35 = v202;
              uint64_t v71 = v202;
              uint64_t v36 = v186;
              goto LABEL_23;
            }
          }
          uint64_t v71 = v198;
          uint64_t v36 = v186;
          uint64_t v35 = v202;
          uint64_t v55 = v203;
        }
LABEL_23:
        a1 = v187;
        if (v201 < v197)
        {
          if (v71 < v36) {
            goto LABEL_160;
          }
          if (v36 < v71)
          {
            uint64_t v72 = v36;
            uint64_t v73 = 0;
            uint64_t v74 = v55 * (v71 - 1);
            uint64_t v75 = v71 * v55;
            uint64_t v76 = v72;
            uint64_t v77 = v72 * v55;
            do
            {
              if (v76 != v71 + v73 - 1)
              {
                uint64_t v78 = v71;
                uint64_t v79 = v179;
                if (!v179) {
                  goto LABEL_166;
                }
                unint64_t v80 = v179 + v77;
                uint64_t v204 = (uint64_t (*)(uint64_t))(v179 + v74);
                sub_253961F14(v179 + v77, v181, &qword_269CDE520);
                if (v77 < v74 || v80 >= v79 + v75)
                {
                  uint64_t v82 = v204;
                  swift_arrayInitWithTakeFrontToBack();
                }
                else
                {
                  uint64_t v82 = v204;
                  if (v77 != v74) {
                    swift_arrayInitWithTakeBackToFront();
                  }
                }
                uint64_t result = sub_253961F14(v181, (uint64_t)v82, &qword_269CDE520);
                uint64_t v71 = v78;
                uint64_t v55 = v203;
              }
              ++v76;
              --v73;
              v74 -= v55;
              v75 -= v55;
              v77 += v55;
            }
            while (v76 < v71 + v73);
            uint64_t v36 = v186;
            a1 = v187;
            uint64_t v35 = v202;
          }
        }
      }
      else
      {
        uint64_t v71 = v33 + 1;
      }
      if (v71 < v35)
      {
        if (__OFSUB__(v71, v36)) {
          goto LABEL_157;
        }
        if (v71 - v36 < v174)
        {
          if (__OFADD__(v36, v174)) {
            goto LABEL_161;
          }
          if (v36 + v174 >= v35) {
            uint64_t v83 = v35;
          }
          else {
            uint64_t v83 = v36 + v174;
          }
          if (v83 < v36)
          {
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
            return result;
          }
          if (v71 != v83)
          {
            uint64_t v186 = v36;
            uint64_t v84 = *(void *)(v189 + 72);
            uint64_t v85 = v84 * (v71 - 1);
            uint64_t v195 = v84;
            uint64_t v86 = v71 * v84;
            uint64_t v179 = v83;
            do
            {
              uint64_t v87 = 0;
              uint64_t v88 = v186;
              uint64_t v197 = v85;
              uint64_t v198 = v71;
              uint64_t v196 = v86;
              while (1)
              {
                uint64_t v203 = v88;
                uint64_t v89 = *a1;
                uint64_t v202 = v86 + v87;
                uint64_t v90 = v191;
                sub_253961F60(v86 + v87 + v89, v191, &qword_269CDE520);
                uint64_t v201 = v85 + v87;
                uint64_t v91 = v85 + v87 + v89;
                uint64_t v92 = v192;
                sub_253961F60(v91, v192, &qword_269CDE520);
                uint64_t v93 = v199;
                uint64_t v94 = *(int *)(v199 + 48);
                uint64_t v95 = v193;
                uint64_t v96 = (uint64_t)v193 + v94;
                uint64_t v97 = *(void *)v90;
                int v98 = *(unsigned __int8 *)(v90 + 8);
                void *v193 = *(void *)v90;
                *((unsigned char *)v95 + 8) = v98;
                sub_25397187C(v90 + v94, (uint64_t)v95 + v94, (void (*)(void))type metadata accessor for Candidate);
                uint64_t v99 = v98 ? 0 : (uint64_t (*)(uint64_t))v97;
                uint64_t v204 = v99;
                sub_2539718D8(v96, (void (*)(void))type metadata accessor for Candidate);
                uint64_t v100 = *(int *)(v93 + 48);
                uint64_t v101 = v194;
                uint64_t v102 = (uint64_t)v194 + v100;
                uint64_t v103 = *(void *)v92;
                int v104 = *(unsigned __int8 *)(v92 + 8);
                *uint64_t v194 = *(void *)v92;
                *((unsigned char *)v101 + 8) = v104;
                sub_25397187C(v92 + v100, (uint64_t)v101 + v100, (void (*)(void))type metadata accessor for Candidate);
                uint64_t v105 = v104 ? 0 : v103;
                sub_2539718D8(v102, (void (*)(void))type metadata accessor for Candidate);
                sub_253472458(v92, &qword_269CDE520);
                uint64_t result = sub_253472458(v90, &qword_269CDE520);
                if ((uint64_t)v204 >= v105) {
                  break;
                }
                uint64_t v106 = *a1;
                if (!*a1) {
                  goto LABEL_164;
                }
                uint64_t v86 = v196;
                uint64_t v85 = v197;
                uint64_t v107 = v106 + v197 + v87;
                sub_253961F14(v106 + v196 + v87, v200, &qword_269CDE520);
                swift_arrayInitWithTakeFrontToBack();
                uint64_t result = sub_253961F14(v200, v107, &qword_269CDE520);
                v87 -= v195;
                uint64_t v88 = v203 + 1;
                uint64_t v108 = v198;
                if (v198 == v203 + 1) {
                  goto LABEL_62;
                }
              }
              uint64_t v85 = v197;
              uint64_t v108 = v198;
              uint64_t v86 = v196;
LABEL_62:
              uint64_t v71 = v108 + 1;
              v85 += v195;
              v86 += v195;
            }
            while (v71 != v179);
            uint64_t v71 = v179;
            uint64_t v36 = v186;
          }
        }
      }
      if (v71 < v36) {
        goto LABEL_156;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v198 = v71;
      if (result)
      {
        uint64_t v34 = v180;
      }
      else
      {
        uint64_t result = (uint64_t)sub_25397078C(0, *((void *)v180 + 2) + 1, 1, v180);
        uint64_t v34 = (char *)result;
      }
      unint64_t v110 = *((void *)v34 + 2);
      unint64_t v109 = *((void *)v34 + 3);
      unint64_t v111 = v110 + 1;
      if (v110 >= v109 >> 1)
      {
        uint64_t result = (uint64_t)sub_25397078C((char *)(v109 > 1), v110 + 1, 1, v34);
        uint64_t v34 = (char *)result;
      }
      *((void *)v34 + 2) = v111;
      uint64_t v112 = v34 + 32;
      uint64_t v113 = &v34[16 * v110 + 32];
      uint64_t v114 = v198;
      *(void *)uint64_t v113 = v36;
      *((void *)v113 + 1) = v114;
      if (v110)
      {
        while (1)
        {
          unint64_t v115 = v111 - 1;
          if (v111 >= 4)
          {
            unint64_t v120 = &v112[16 * v111];
            uint64_t v121 = *((void *)v120 - 8);
            uint64_t v122 = *((void *)v120 - 7);
            BOOL v126 = __OFSUB__(v122, v121);
            uint64_t v123 = v122 - v121;
            if (v126) {
              goto LABEL_141;
            }
            uint64_t v125 = *((void *)v120 - 6);
            uint64_t v124 = *((void *)v120 - 5);
            BOOL v126 = __OFSUB__(v124, v125);
            uint64_t v118 = v124 - v125;
            char v119 = v126;
            if (v126) {
              goto LABEL_142;
            }
            unint64_t v127 = v111 - 2;
            char v128 = &v112[16 * v111 - 32];
            uint64_t v130 = *(void *)v128;
            uint64_t v129 = *((void *)v128 + 1);
            BOOL v126 = __OFSUB__(v129, v130);
            uint64_t v131 = v129 - v130;
            if (v126) {
              goto LABEL_143;
            }
            BOOL v126 = __OFADD__(v118, v131);
            uint64_t v132 = v118 + v131;
            if (v126) {
              goto LABEL_145;
            }
            if (v132 >= v123)
            {
              uint64_t v150 = &v112[16 * v115];
              uint64_t v152 = *(void *)v150;
              uint64_t v151 = *((void *)v150 + 1);
              BOOL v126 = __OFSUB__(v151, v152);
              uint64_t v153 = v151 - v152;
              if (v126) {
                goto LABEL_151;
              }
              BOOL v143 = v118 < v153;
              goto LABEL_101;
            }
          }
          else
          {
            if (v111 != 3)
            {
              uint64_t v144 = *((void *)v34 + 4);
              uint64_t v145 = *((void *)v34 + 5);
              BOOL v126 = __OFSUB__(v145, v144);
              uint64_t v137 = v145 - v144;
              char v138 = v126;
              goto LABEL_95;
            }
            uint64_t v117 = *((void *)v34 + 4);
            uint64_t v116 = *((void *)v34 + 5);
            BOOL v126 = __OFSUB__(v116, v117);
            uint64_t v118 = v116 - v117;
            char v119 = v126;
          }
          if (v119) {
            goto LABEL_144;
          }
          unint64_t v127 = v111 - 2;
          uint64_t v133 = &v112[16 * v111 - 32];
          uint64_t v135 = *(void *)v133;
          uint64_t v134 = *((void *)v133 + 1);
          BOOL v136 = __OFSUB__(v134, v135);
          uint64_t v137 = v134 - v135;
          char v138 = v136;
          if (v136) {
            goto LABEL_146;
          }
          uint64_t v139 = &v112[16 * v115];
          uint64_t v141 = *(void *)v139;
          uint64_t v140 = *((void *)v139 + 1);
          BOOL v126 = __OFSUB__(v140, v141);
          uint64_t v142 = v140 - v141;
          if (v126) {
            goto LABEL_148;
          }
          if (__OFADD__(v137, v142)) {
            goto LABEL_150;
          }
          if (v137 + v142 >= v118)
          {
            BOOL v143 = v118 < v142;
LABEL_101:
            if (v143) {
              unint64_t v115 = v127;
            }
            goto LABEL_103;
          }
LABEL_95:
          if (v138) {
            goto LABEL_147;
          }
          uint64_t v146 = &v112[16 * v115];
          uint64_t v148 = *(void *)v146;
          uint64_t v147 = *((void *)v146 + 1);
          BOOL v126 = __OFSUB__(v147, v148);
          uint64_t v149 = v147 - v148;
          if (v126) {
            goto LABEL_149;
          }
          if (v149 < v137) {
            goto LABEL_112;
          }
LABEL_103:
          unint64_t v154 = v115 - 1;
          if (v115 - 1 >= v111)
          {
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
            goto LABEL_152;
          }
          uint64_t v155 = *a1;
          if (!*a1) {
            goto LABEL_165;
          }
          uint64_t v156 = v34;
          uint64_t v157 = &v112[16 * v154];
          uint64_t v158 = *(void *)v157;
          uint64_t v159 = &v112[16 * v115];
          uint64_t v160 = *((void *)v159 + 1);
          uint64_t v161 = v190;
          uint64_t result = sub_25397012C(v155 + *(void *)(v189 + 72) * *(void *)v157, v155 + *(void *)(v189 + 72) * *(void *)v159, (void *)(v155 + *(void *)(v189 + 72) * v160), v188);
          if (v161)
          {
            uint64_t v30 = v175;
LABEL_119:
            uint64_t result = swift_bridgeObjectRelease();
            if (v30 >= -1)
            {
              *(void *)(v173 + 16) = 0;
              return swift_bridgeObjectRelease();
            }
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
            goto LABEL_162;
          }
          if (v160 < v158) {
            goto LABEL_138;
          }
          if (v115 > *((void *)v156 + 2)) {
            goto LABEL_139;
          }
          *(void *)uint64_t v157 = v158;
          *(void *)&v112[16 * v154 + 8] = v160;
          unint64_t v162 = *((void *)v156 + 2);
          if (v115 >= v162) {
            goto LABEL_140;
          }
          uint64_t v190 = 0;
          unint64_t v111 = v162 - 1;
          uint64_t result = (uint64_t)memmove(&v112[16 * v115], v159 + 16, 16 * (v162 - 1 - v115));
          uint64_t v34 = v156;
          *((void *)v156 + 2) = v162 - 1;
          a1 = v187;
          if (v162 <= 2) {
            goto LABEL_112;
          }
        }
      }
      unint64_t v111 = 1;
LABEL_112:
      uint64_t v35 = a1[1];
      uint64_t v33 = v198;
      uint64_t v30 = v175;
      if (v198 >= v35) {
        goto LABEL_122;
      }
    }
  }
  uint64_t v34 = (char *)MEMORY[0x263F8EE78];
  unint64_t v111 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_122:
  if (v111 >= 2)
  {
    uint64_t v163 = *a1;
    while (1)
    {
      unint64_t v164 = v111 - 2;
      if (v111 < 2) {
        break;
      }
      if (!v163) {
        goto LABEL_167;
      }
      uint64_t v165 = (uint64_t)v34;
      uint64_t v166 = *(void *)&v34[16 * v164 + 32];
      uint64_t v167 = *(void *)&v34[16 * v111 + 24];
      uint64_t v168 = v190;
      uint64_t result = sub_25397012C(v163 + *(void *)(v189 + 72) * v166, v163 + *(void *)(v189 + 72) * *(void *)&v34[16 * v111 + 16], (void *)(v163 + *(void *)(v189 + 72) * v167), v188);
      if (v168) {
        goto LABEL_119;
      }
      if (v167 < v166) {
        goto LABEL_153;
      }
      uint64_t v190 = 0;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_253970884();
        uint64_t v165 = result;
      }
      if (v164 >= *(void *)(v165 + 16)) {
        goto LABEL_154;
      }
      char v169 = (void *)(v165 + 32 + 16 * v164);
      void *v169 = v166;
      v169[1] = v167;
      unint64_t v170 = *(void *)(v165 + 16);
      if (v111 > v170) {
        goto LABEL_155;
      }
      uint64_t result = (uint64_t)memmove((void *)(v165 + 32 + 16 * (v111 - 1)), (const void *)(v165 + 32 + 16 * v111), 16 * (v170 - v111));
      uint64_t v34 = (char *)v165;
      *(void *)(v165 + 16) = v170 - 1;
      unint64_t v111 = v170 - 1;
      if (v170 <= 2) {
        goto LABEL_133;
      }
    }
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
    goto LABEL_158;
  }
LABEL_133:
  uint64_t result = swift_bridgeObjectRelease();
  if (v30 < -1) {
    goto LABEL_163;
  }
  *(void *)(v173 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_25396FDB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v47 = a1;
  uint64_t v56 = sub_253462A5C(&qword_269CDE520);
  uint64_t v7 = MEMORY[0x270FA5388](v56);
  uint64_t v57 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v51 = (uint64_t *)((char *)&v45 - v10);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v50 = (uint64_t *)((char *)&v45 - v12);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v49 = (uint64_t)&v45 - v14;
  uint64_t result = MEMORY[0x270FA5388](v13);
  uint64_t v48 = (uint64_t)&v45 - v17;
  uint64_t v55 = a3;
  uint64_t v46 = a2;
  if (a3 != a2)
  {
    uint64_t v18 = *(void *)(v16 + 72);
    uint64_t v19 = v18 * (v55 - 1);
    uint64_t v52 = v18;
    uint64_t v20 = v18 * v55;
    unint64_t v61 = a4;
    while (2)
    {
      uint64_t v21 = 0;
      uint64_t v59 = v47;
      uint64_t v53 = v20;
      uint64_t v54 = v19;
      do
      {
        uint64_t v22 = *v61;
        uint64_t v58 = v20 + v21;
        uint64_t v23 = v20 + v21 + v22;
        uint64_t v24 = v48;
        sub_253961F60(v23, v48, &qword_269CDE520);
        uint64_t v25 = v19 + v21 + v22;
        uint64_t v26 = v49;
        sub_253961F60(v25, v49, &qword_269CDE520);
        uint64_t v27 = v56;
        uint64_t v28 = *(int *)(v56 + 48);
        uint64_t v29 = v50;
        uint64_t v30 = (uint64_t)v50 + v28;
        uint64_t v31 = *(void *)v24;
        int v32 = *(unsigned __int8 *)(v24 + 8);
        *uint64_t v50 = *(void *)v24;
        *((unsigned char *)v29 + 8) = v32;
        sub_25397187C(v24 + v28, (uint64_t)v29 + v28, (void (*)(void))type metadata accessor for Candidate);
        if (v32) {
          uint64_t v33 = 0;
        }
        else {
          uint64_t v33 = v31;
        }
        uint64_t v60 = v33;
        sub_2539718D8(v30, (void (*)(void))type metadata accessor for Candidate);
        uint64_t v34 = *(int *)(v27 + 48);
        uint64_t v35 = v51;
        uint64_t v36 = (uint64_t)v51 + v34;
        uint64_t v37 = *(void *)v26;
        int v38 = *(unsigned __int8 *)(v26 + 8);
        *uint64_t v51 = *(void *)v26;
        *((unsigned char *)v35 + 8) = v38;
        sub_25397187C(v26 + v34, (uint64_t)v35 + v34, (void (*)(void))type metadata accessor for Candidate);
        if (v38) {
          uint64_t v39 = 0;
        }
        else {
          uint64_t v39 = v37;
        }
        uint64_t v40 = v61;
        sub_2539718D8(v36, (void (*)(void))type metadata accessor for Candidate);
        uint64_t v41 = v26;
        uint64_t v19 = v54;
        sub_253472458(v41, &qword_269CDE520);
        uint64_t v42 = v24;
        uint64_t v20 = v53;
        uint64_t result = sub_253472458(v42, &qword_269CDE520);
        if (v60 >= v39) {
          break;
        }
        uint64_t v43 = *v40;
        if (!*v40)
        {
          __break(1u);
          return result;
        }
        uint64_t v44 = v43 + v19 + v21;
        sub_253961F14(v43 + v20 + v21, v57, &qword_269CDE520);
        swift_arrayInitWithTakeFrontToBack();
        uint64_t result = sub_253961F14(v57, v44, &qword_269CDE520);
        v21 -= v52;
        ++v59;
      }
      while (v55 != v59);
      v19 += v52;
      v20 += v52;
      if (++v55 != v46) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_25397012C(unint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v95 = sub_253462A5C(&qword_269CDE520);
  uint64_t v8 = MEMORY[0x270FA5388](v95);
  uint64_t v86 = (uint64_t *)((char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v85 = (uint64_t *)((char *)&v80 - v11);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v84 = (uint64_t)&v80 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v83 = (uint64_t)&v80 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v90 = (uint64_t *)((char *)&v80 - v17);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v89 = (uint64_t *)((char *)&v80 - v19);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  unint64_t v88 = (unint64_t)&v80 - v21;
  uint64_t result = MEMORY[0x270FA5388](v20);
  uint64_t v87 = (char *)&v80 - v23;
  uint64_t v25 = *(void *)(v24 + 72);
  if (!v25)
  {
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  int64_t v26 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v25 == -1) {
    goto LABEL_85;
  }
  uint64_t v28 = (uint64_t)a3 - a2;
  if ((void *)((char *)a3 - a2) == (void *)0x8000000000000000 && v25 == -1) {
    goto LABEL_86;
  }
  uint64_t v30 = v26 / v25;
  uint64_t v31 = v28 / v25;
  uint64_t v91 = v25;
  if (v26 / v25 >= v28 / v25)
  {
    uint64_t result = sub_253525BB8(a2, v28 / v25);
    unint64_t v32 = a4 + v31 * v25;
    if (v31 * v25 < 1 || a1 >= a2) {
      goto LABEL_79;
    }
    uint64_t v82 = -v25;
    unint64_t v93 = a1;
    unint64_t v94 = a4;
    while (1)
    {
      uint64_t v89 = (void *)a2;
      uint64_t v90 = a3;
      unint64_t v92 = v32;
      uint64_t v55 = v82;
      unint64_t v88 = v32 + v82;
      uint64_t v56 = v83;
      sub_253961F60(v88, v83, &qword_269CDE520);
      uint64_t v87 = (char *)(a2 + v55);
      uint64_t v57 = v84;
      sub_253961F60(a2 + v55, v84, &qword_269CDE520);
      uint64_t v58 = v95;
      uint64_t v59 = *(int *)(v95 + 48);
      uint64_t v60 = v85;
      uint64_t v61 = (uint64_t)v85 + v59;
      uint64_t v62 = *(void *)v56;
      int v63 = *(unsigned __int8 *)(v56 + 8);
      *uint64_t v85 = *(void *)v56;
      *((unsigned char *)v60 + 8) = v63;
      sub_25397187C(v56 + v59, (uint64_t)v60 + v59, (void (*)(void))type metadata accessor for Candidate);
      uint64_t v64 = v63 ? 0 : v62;
      sub_2539718D8(v61, (void (*)(void))type metadata accessor for Candidate);
      uint64_t v65 = *(int *)(v58 + 48);
      uint64_t v66 = v86;
      uint64_t v67 = (uint64_t)v86 + v65;
      uint64_t v68 = *(void *)v57;
      int v69 = *(unsigned __int8 *)(v57 + 8);
      *uint64_t v86 = *(void *)v57;
      *((unsigned char *)v66 + 8) = v69;
      sub_25397187C(v57 + v65, (uint64_t)v66 + v65, (void (*)(void))type metadata accessor for Candidate);
      uint64_t v70 = v69 ? 0 : v68;
      uint64_t v71 = v90;
      a3 = (void *)((char *)v90 + v55);
      sub_2539718D8(v67, (void (*)(void))type metadata accessor for Candidate);
      sub_253472458(v57, &qword_269CDE520);
      uint64_t result = sub_253472458(v56, &qword_269CDE520);
      if (v64 < v70) {
        break;
      }
      BOOL v73 = (unint64_t)v71 < v92 || (unint64_t)a3 >= v92;
      a2 = (unint64_t)v89;
      if (v73)
      {
        uint64_t v74 = v88;
        uint64_t result = swift_arrayInitWithTakeFrontToBack();
        unint64_t v32 = v74;
LABEL_68:
        unint64_t v75 = v93;
        a4 = v94;
        uint64_t v25 = v91;
        goto LABEL_75;
      }
      unint64_t v75 = v93;
      a4 = v94;
      uint64_t v25 = v91;
      if (v71 == (void *)v92)
      {
        unint64_t v32 = v88;
      }
      else
      {
        uint64_t v76 = v88;
        uint64_t result = swift_arrayInitWithTakeBackToFront();
        unint64_t v32 = v76;
      }
LABEL_75:
      if (v32 <= a4 || a2 <= v75) {
        goto LABEL_79;
      }
    }
    unint64_t v32 = v92;
    if (v71 >= v89 && a3 < v89)
    {
      unint64_t v75 = v93;
      a4 = v94;
      uint64_t v25 = v91;
      a2 = (unint64_t)v87;
      if (v71 != v89) {
        uint64_t result = swift_arrayInitWithTakeBackToFront();
      }
      goto LABEL_75;
    }
    a2 = (unint64_t)v87;
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
    goto LABEL_68;
  }
  uint64_t result = sub_253525BB8(a1, v26 / v25);
  unint64_t v32 = a4 + v30 * v25;
  if (v30 * v25 >= 1 && a2 < (unint64_t)a3)
  {
    uint64_t v81 = a3;
    unint64_t v92 = a4 + v30 * v25;
    uint64_t v34 = (uint64_t)v87;
    do
    {
      unint64_t v93 = a1;
      unint64_t v94 = a4;
      sub_253961F60(a2, v34, &qword_269CDE520);
      uint64_t v35 = v88;
      sub_253961F60(a4, v88, &qword_269CDE520);
      uint64_t v36 = v95;
      uint64_t v37 = *(int *)(v95 + 48);
      int v38 = v89;
      uint64_t v39 = (uint64_t)v89 + v37;
      uint64_t v40 = *(void *)v34;
      int v41 = *(unsigned __int8 *)(v34 + 8);
      *uint64_t v89 = *(void *)v34;
      *((unsigned char *)v38 + 8) = v41;
      unint64_t v42 = a2;
      sub_25397187C(v34 + v37, (uint64_t)v38 + v37, (void (*)(void))type metadata accessor for Candidate);
      if (v41) {
        uint64_t v43 = 0;
      }
      else {
        uint64_t v43 = v40;
      }
      sub_2539718D8(v39, (void (*)(void))type metadata accessor for Candidate);
      uint64_t v44 = *(int *)(v36 + 48);
      uint64_t v45 = v90;
      uint64_t v46 = (uint64_t)v90 + v44;
      uint64_t v47 = *(void *)v35;
      int v48 = *(unsigned __int8 *)(v35 + 8);
      void *v90 = *(void *)v35;
      *((unsigned char *)v45 + 8) = v48;
      sub_25397187C(v35 + v44, (uint64_t)v45 + v44, (void (*)(void))type metadata accessor for Candidate);
      if (v48) {
        uint64_t v47 = 0;
      }
      sub_2539718D8(v46, (void (*)(void))type metadata accessor for Candidate);
      sub_253472458(v35, &qword_269CDE520);
      uint64_t result = sub_253472458(v34, &qword_269CDE520);
      if (v43 >= v47)
      {
        uint64_t v25 = v91;
        unint64_t v49 = v93;
        a4 = v94 + v91;
        if (v93 < v94 || v93 >= a4)
        {
LABEL_33:
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
          unint64_t v52 = (unint64_t)v81;
          goto LABEL_38;
        }
        unint64_t v52 = (unint64_t)v81;
        if (v93 != v94) {
LABEL_37:
        }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
      }
      else
      {
        uint64_t v25 = v91;
        a2 += v91;
        unint64_t v49 = v93;
        a4 = v94;
        if (v93 < v42 || v93 >= a2) {
          goto LABEL_33;
        }
        unint64_t v52 = (unint64_t)v81;
        if (v93 != v42) {
          goto LABEL_37;
        }
      }
LABEL_38:
      unint64_t v32 = v92;
      a1 = v49 + v25;
    }
    while (a4 < v92 && a2 < v52);
  }
LABEL_79:
  int64_t v78 = v32 - a4;
  if (v25 != -1 || v78 != 0x8000000000000000)
  {
    sub_253525BB8(a4, v78 / v25);
    return 1;
  }
LABEL_87:
  __break(1u);
  return result;
}

char *sub_25397078C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_253462A5C(&qword_269CE52B8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12) {
      memmove(v12, v13, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_253970884()
{
  uint64_t v0 = (char *)sub_253971C70();
  return sub_25397078C(v0, v1, v2, v3);
}

uint64_t sub_253970894(uint64_t a1)
{
  return a1;
}

uint64_t sub_2539708E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_25397093C(uint64_t a1)
{
  uint64_t v2 = sub_253B06770();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  int v98 = &v79[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v79[-v7];
  MEMORY[0x270FA5388](v6);
  unint64_t v115 = &v79[-v9];
  uint64_t v10 = sub_253462A5C(&qword_269CDCB00);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v114 = &v79[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_253462A5C(&qword_269CE5268);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v113 = &v79[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v97 = sub_253B09120();
  uint64_t v14 = *(void *)(v97 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v97);
  uint64_t v96 = &v79[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v15);
  uint64_t v95 = &v79[-v17];
  uint64_t v112 = type metadata accessor for ToolParameterValue(0);
  uint64_t v18 = MEMORY[0x270FA5388](v112);
  uint64_t v20 = &v79[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = &v79[-v21];
  uint64_t v111 = sub_253B05EE0();
  uint64_t v121 = *(void *)(v111 - 8);
  MEMORY[0x270FA5388](v111);
  uint64_t v123 = &v79[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v110 = sub_253B05E70();
  uint64_t v24 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  uint64_t v108 = &v79[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = type metadata accessor for Action.ParameterValue(0);
  uint64_t v106 = *(void *)(v26 - 8);
  uint64_t v107 = v26;
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v124 = &v79[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v27);
  uint64_t v122 = &v79[-v29];
  sub_253462A5C(&qword_269CE52C0);
  uint64_t v30 = sub_253B0A230();
  uint64_t v31 = (void *)v30;
  int64_t v32 = 0;
  uint64_t v33 = *(void *)(a1 + 64);
  uint64_t v100 = a1 + 64;
  uint64_t v34 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v35 = -1;
  if (v34 < 64) {
    uint64_t v35 = ~(-1 << v34);
  }
  unint64_t v36 = v35 & v33;
  int64_t v101 = (unint64_t)(v34 + 63) >> 6;
  int v94 = *MEMORY[0x263F4C328];
  uint64_t v105 = (void (**)(unsigned char *, uint64_t, uint64_t))(v121 + 104);
  unint64_t v93 = (void (**)(unsigned char *, void *, uint64_t))(v14 + 32);
  unint64_t v92 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 16);
  uint64_t v91 = (void (**)(unsigned char *, uint64_t))(v14 + 8);
  int v90 = *MEMORY[0x263F4C320];
  uint64_t v89 = (void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 32);
  unint64_t v88 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16);
  uint64_t v87 = (uint64_t (**)(unsigned char *, uint64_t))(v3 + 88);
  int v86 = *MEMORY[0x263F4C6D8];
  int v85 = *MEMORY[0x263F4C6E8];
  int v82 = *MEMORY[0x263F4C6E0];
  uint64_t v99 = (void (**)(unsigned char *, uint64_t))(v3 + 8);
  unsigned int v81 = *MEMORY[0x263F4C310];
  unsigned int v80 = *MEMORY[0x263F4C318];
  uint64_t v84 = (void (**)(unsigned char *, uint64_t))(v3 + 96);
  unsigned int v83 = *MEMORY[0x263F4C308];
  uint64_t v37 = v30 + 64;
  uint64_t v109 = v24;
  uint64_t v104 = v24 + 32;
  uint64_t v116 = a1;
  uint64_t v102 = v8;
  uint64_t v103 = v20;
  uint64_t v117 = v22;
  if (!v36) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v118 = (v36 - 1) & v36;
  int64_t v119 = v32;
  for (unint64_t i = __clz(__rbit64(v36)) | (v32 << 6); ; unint64_t i = __clz(__rbit64(v40)) + (v41 << 6))
  {
    uint64_t v43 = *(void *)(v116 + 56);
    uint64_t v44 = (uint64_t *)(*(void *)(v116 + 48) + 16 * i);
    uint64_t v45 = v44[1];
    uint64_t v120 = *v44;
    uint64_t v46 = v122;
    sub_25397187C(v43 + *(void *)(v106 + 72) * i, (uint64_t)v122, (void (*)(void))type metadata accessor for Action.ParameterValue);
    uint64_t v47 = (uint64_t)v46;
    int v48 = v124;
    sub_25397187C(v47, (uint64_t)v124, (void (*)(void))type metadata accessor for Action.ParameterValue);
    sub_25397187C((uint64_t)v48, (uint64_t)v22, (void (*)(void))type metadata accessor for ToolParameterValue);
    sub_25397187C((uint64_t)v22, (uint64_t)v20, (void (*)(void))type metadata accessor for ToolParameterValue);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unint64_t v49 = v95;
      uint64_t v50 = v97;
      (*v93)(v95, v20, v97);
      (*v92)(v96, v49, v50);
      swift_bridgeObjectRetain();
      uint64_t v51 = v123;
      sub_253B05EC0();
      sub_2539718D8((uint64_t)v117, (void (*)(void))type metadata accessor for ToolParameterValue);
      unint64_t v52 = v49;
      uint64_t v22 = v117;
      (*v91)(v52, v50);
      uint64_t v53 = (char *)&v122 + 4;
    }
    else
    {
      uint64_t v55 = *v20;
      uint64_t v54 = v20[1];
      swift_bridgeObjectRetain();
      uint64_t v51 = v123;
      MEMORY[0x25A264ED0](v55, v54);
      sub_2539718D8((uint64_t)v22, (void (*)(void))type metadata accessor for ToolParameterValue);
      uint64_t v53 = (char *)&v124 + 4;
    }
    uint64_t v56 = *((unsigned int *)v53 - 64);
    uint64_t v57 = (uint64_t)v114;
    uint64_t v121 = v45;
    (*v105)(v51, v56, v111);
    sub_253961F60((uint64_t)&v124[*(int *)(v107 + 20)], v57, &qword_269CDCB00);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v57, 1, v2) == 1)
    {
      uint64_t v58 = sub_253B05EB0();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v113, 1, 1, v58);
    }
    else
    {
      uint64_t v59 = v115;
      (*v89)(v115, v57, v2);
      uint64_t v60 = *v88;
      uint64_t v61 = v102;
      (*v88)(v102, v59, v2);
      uint64_t v62 = v98;
      v60(v98, v61, v2);
      int v63 = (*v87)(v62, v2);
      if (v63 == v86)
      {
        uint64_t v64 = v61;
        uint64_t v65 = v37;
        uint64_t v66 = v31;
        uint64_t v67 = v99;
        (*v84)(v62, v2);
        uint64_t v68 = v113;
        sub_253B05E80();
        int v69 = *v67;
        (*v67)(v64, v2);
        uint64_t v31 = v66;
        uint64_t v37 = v65;
        uint64_t v70 = sub_253B05EB0();
        (*(void (**)(unsigned char *, void, uint64_t))(*(void *)(v70 - 8) + 104))(v68, v83, v70);
      }
      else if (v63 == v85)
      {
        uint64_t v68 = v113;
        uint64_t v71 = v99;
        sub_253B05EA0();
        int v69 = *v71;
        (*v71)(v102, v2);
        uint64_t v70 = sub_253B05EB0();
        (*(void (**)(unsigned char *, void, uint64_t))(*(void *)(v70 - 8) + 104))(v68, v80, v70);
      }
      else
      {
        uint64_t v68 = v113;
        if (v63 != v82) {
          goto LABEL_38;
        }
        sub_253B05E90();
        int v69 = *v99;
        (*v99)(v102, v2);
        uint64_t v70 = sub_253B05EB0();
        (*(void (**)(unsigned char *, void, uint64_t))(*(void *)(v70 - 8) + 104))(v68, v81, v70);
      }
      v69(v115, v2);
      sub_253B05EB0();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v68, 0, 1, v70);
      uint64_t v22 = v117;
    }
    uint64_t v72 = v108;
    sub_253B05E60();
    sub_2539718D8((uint64_t)v124, (void (*)(void))type metadata accessor for Action.ParameterValue);
    sub_2539718D8((uint64_t)v122, (void (*)(void))type metadata accessor for Action.ParameterValue);
    *(void *)(v37 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    BOOL v73 = (void *)(v31[6] + 16 * i);
    uint64_t v74 = v121;
    *BOOL v73 = v120;
    v73[1] = v74;
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v109 + 32))(v31[7] + *(void *)(v109 + 72) * i, v72, v110);
    uint64_t v75 = v31[2];
    BOOL v76 = __OFADD__(v75, 1);
    uint64_t v77 = v75 + 1;
    if (v76)
    {
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v31[2] = v77;
    uint64_t v20 = v103;
    unint64_t v36 = v118;
    int64_t v32 = v119;
    if (v118) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v39 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      goto LABEL_36;
    }
    if (v39 >= v101) {
      return (uint64_t)v31;
    }
    unint64_t v40 = *(void *)(v100 + 8 * v39);
    int64_t v41 = v32 + 1;
    if (!v40)
    {
      int64_t v41 = v32 + 2;
      if (v32 + 2 >= v101) {
        return (uint64_t)v31;
      }
      unint64_t v40 = *(void *)(v100 + 8 * v41);
      if (!v40)
      {
        int64_t v41 = v32 + 3;
        if (v32 + 3 >= v101) {
          return (uint64_t)v31;
        }
        unint64_t v40 = *(void *)(v100 + 8 * v41);
        if (!v40) {
          break;
        }
      }
    }
LABEL_18:
    uint64_t v118 = (v40 - 1) & v40;
    int64_t v119 = v41;
  }
  uint64_t v42 = v32 + 4;
  if (v32 + 4 >= v101) {
    return (uint64_t)v31;
  }
  unint64_t v40 = *(void *)(v100 + 8 * v42);
  if (v40)
  {
    int64_t v41 = v32 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v41 = v42 + 1;
    if (__OFADD__(v42, 1)) {
      break;
    }
    if (v41 >= v101) {
      return (uint64_t)v31;
    }
    unint64_t v40 = *(void *)(v100 + 8 * v41);
    ++v42;
    if (v40) {
      goto LABEL_18;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  uint64_t result = sub_253B0A4B0();
  __break(1u);
  return result;
}

uint64_t sub_253971594(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = a2;
  uint64_t v4 = sub_253B059D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    return 0;
  }
  v17[1] = v2;
  uint64_t v9 = *(void *)(type metadata accessor for ProgramStatement(0) - 8);
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v11 = *(void *)(v9 + 72);
  uint64_t v12 = v8 - 1;
  uint64_t v13 = a1
      + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + v11 * (v8 - 1);
  uint64_t v14 = -v11;
  while (1)
  {
    v10(v7, v18, v4);
    char v15 = _s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v15) {
      break;
    }
    --v12;
    v13 += v14;
    if (v12 == -1) {
      return 0;
    }
  }
  return v12;
}

uint64_t dispatch thunk of ClientConversionContext.transcript.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ClientConversionContext.generateNextStatmentId()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ClientConversionContext.enableStatementId()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ClientConversionContext.disableStatementId()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_2539717A0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  *a2 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

void sub_2539717D8()
{
}

void sub_2539717E8()
{
}

void sub_2539717F8()
{
}

void sub_253971808()
{
}

void sub_253971818()
{
}

void sub_253971828()
{
}

void sub_253971838()
{
}

uint64_t sub_25397184C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_253B06F70();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25397187C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25346CAF4();
  sub_2534B3428();
  v4();
  return a2;
}

uint64_t sub_2539718D8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_25346CAF4();
  sub_2534659CC();
  v3();
  return a1;
}

unint64_t sub_25397192C(unint64_t *a1, uint64_t *a2)
{
  return sub_253A55FBC(*a1, *a2, (uint64_t)v3);
}

unint64_t sub_253971964(unint64_t *a1)
{
  return sub_25397192C(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_253971984(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25346CAF4();
  sub_2534D8E14();
  v4();
  return a2;
}

uint64_t sub_2539719E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_253971A28@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_253969994(a1, a2);
}

uint64_t sub_253971A40()
{
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v1);
  return v0;
}

uint64_t sub_253971A7C()
{
  return v0;
}

uint64_t sub_253971A94()
{
  return 0;
}

uint64_t sub_253971AA8()
{
  return v0;
}

void sub_253971ACC()
{
  sub_25396E8C0();
}

uint64_t sub_253971AE8()
{
  return sub_253B095C0();
}

uint64_t sub_253971B04()
{
  return 0;
}

uint64_t sub_253971B20()
{
  return v0;
}

uint64_t sub_253971B38()
{
  uint64_t v1 = v0[3];
  sub_253472068(v0, v1);
  return v1;
}

uint64_t sub_253971B74()
{
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v0);
  return 0;
}

uint64_t sub_253971BAC()
{
  return *(void *)v0;
}

uint64_t sub_253971BBC()
{
  return 0;
}

uint64_t sub_253971BD0()
{
  return v0;
}

uint64_t sub_253971BE0()
{
  return 0;
}

uint64_t sub_253971C1C()
{
  *(void *)uint64_t v0 = v2;
  *(void *)(v0 + 8) = v4;
  *(void *)(v0 + 16) = v5;
  *(unsigned char *)(v0 + 24) = v3;
  return v1;
}

uint64_t sub_253971C3C()
{
  return v0;
}

uint64_t sub_253971C48()
{
  return sub_253B055C0();
}

uint64_t sub_253971C70()
{
  return 0;
}

uint64_t sub_253971C84()
{
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(*(void *)(v0 - 96));
  return *(void *)(v0 - 344);
}

uint64_t sub_253971CB8()
{
  return sub_253B09630();
}

uint64_t sub_253971CD4()
{
  return sub_253B09630();
}

uint64_t sub_253971CF0()
{
  return sub_253B0A5F0();
}

uint64_t sub_253971D14()
{
  return 0;
}

uint64_t sub_253971D24()
{
  return v0;
}

uint64_t sub_253971D34()
{
  return v0;
}

uint64_t sub_253971D44()
{
  return v0;
}

uint64_t sub_253971D54()
{
  return v0;
}

uint64_t sub_253971D94()
{
  return v0;
}

uint64_t sub_253971DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, a4);
}

uint64_t sub_253971DD4()
{
  return v0;
}

uint64_t sub_253971DEC()
{
  return 0;
}

uint64_t sub_253971DF8()
{
  return v0;
}

Swift::UInt32 __swiftcall Session.StatementIdCounter.newStatementIdIndex()()
{
  return atomic_fetch_add_explicit((atomic_uint *volatile)(v0 + 16), 1u, memory_order_relaxed);
}

uint64_t Session.SessionState.transcript.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_253973520(v1, a1, (void (*)(void))type metadata accessor for Session.Transcript);
}

uint64_t Session.SessionState.transcript.setter(uint64_t a1)
{
  return sub_253971E50(a1, v1);
}

uint64_t sub_253971E50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Session.Transcript(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*Session.SessionState.transcript.modify())()
{
  return nullsub_1;
}

uint64_t Session.SessionState.statementIdCounter.getter()
{
  type metadata accessor for Session.SessionState();
  return swift_retain();
}

uint64_t type metadata accessor for Session.SessionState()
{
  uint64_t result = qword_26B249EF0;
  if (!qword_26B249EF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t Session.SessionState.init(transcript:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_253973520(a1, a2, (void (*)(void))type metadata accessor for Session.Transcript);
  type metadata accessor for Session.Transcript(0);
  uint64_t v4 = swift_bridgeObjectRetain();
  int v5 = sub_253972000(v4);
  swift_bridgeObjectRelease();
  type metadata accessor for Session.StatementIdCounter();
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 16) = v5;
  sub_253973648(a1, (void (*)(void))type metadata accessor for Session.Transcript);
  uint64_t result = type metadata accessor for Session.SessionState();
  *(void *)(a2 + *(int *)(result + 20)) = v6;
  return result;
}

uint64_t sub_253972000(uint64_t a1)
{
  uint64_t v116 = sub_253B059D0();
  uint64_t v2 = *(void *)(v116 - 8);
  MEMORY[0x270FA5388](v116);
  uint64_t v4 = (char *)&v100 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Session.Event(0);
  uint64_t v110 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v109 = (uint64_t)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v100 - v8;
  uint64_t v10 = sub_253462A5C(&qword_26B241248);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v104 = (uint64_t)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v103 = (uint64_t)&v100 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v100 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v100 - v18;
  uint64_t v20 = *(void *)(a1 + 16);
  uint64_t v107 = v2;
  uint64_t v114 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v115 = v2 + 16;
  uint64_t v112 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v111 = v20;
  uint64_t v108 = v5;
  uint64_t v105 = v9;
  int64_t v101 = v17;
  uint64_t v102 = v19;
  if (!v20) {
    goto LABEL_27;
  }
LABEL_2:
  if (--v20 >= v111)
  {
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    return result;
  }
  sub_253973520(v112+ ((*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80))+ *(void *)(v110 + 72) * v20, (uint64_t)v19, (void (*)(void))type metadata accessor for Session.Event);
  for (uint64_t i = 0; ; uint64_t i = 1)
  {
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, i, 1, v5);
    sub_253973580((uint64_t)v19, (uint64_t)v17);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v5) == 1)
    {
      int v52 = 0;
      goto LABEL_72;
    }
    uint64_t v113 = v20;
    uint64_t v23 = sub_2539735E8((uint64_t)v17, (uint64_t)v9, (void (*)(void))type metadata accessor for Session.Event);
    Session.Event.Payload.statementIds.getter(v23, v24, v25, v26, v27, v28, v29, v30, v100, (uint64_t)v101, (uint64_t)v102, v103, v104, (uint64_t)v105, v106, v107, v108, v109, v110,
      v111);
    uint64_t v32 = v31;
    uint64_t v33 = *(void *)(v31 + 16);
    if (v33)
    {
      uint64_t v117 = MEMORY[0x263F8EE78];
      sub_2539E8A24(0, v33, 0);
      uint64_t v34 = *(unsigned __int8 *)(v107 + 80);
      uint64_t v106 = v32;
      uint64_t v35 = v32 + ((v34 + 32) & ~v34);
      uint64_t v36 = *(void *)(v107 + 72);
      uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v107 + 16);
      do
      {
        uint64_t v38 = v116;
        v37(v4, v35, v116);
        int v39 = sub_253B059C0();
        (*v114)(v4, v38);
        uint64_t v40 = v117;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2539E8A24(0, *(void *)(v40 + 16) + 1, 1);
          uint64_t v40 = v117;
        }
        unint64_t v42 = *(void *)(v40 + 16);
        unint64_t v41 = *(void *)(v40 + 24);
        if (v42 >= v41 >> 1)
        {
          sub_2539E8A24(v41 > 1, v42 + 1, 1);
          uint64_t v40 = v117;
        }
        *(void *)(v40 + 16) = v42 + 1;
        *(_DWORD *)(v40 + 4 * v42 + 32) = v39;
        v35 += v36;
        --v33;
      }
      while (v33);
      swift_bridgeObjectRelease();
      uint64_t v17 = v101;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v40 = MEMORY[0x263F8EE78];
    }
    uint64_t v43 = *(void *)(v40 + 16);
    if (v43)
    {
      uint64_t v44 = (int *)(v40 + 32);
      uint64_t v45 = MEMORY[0x263F8EE78];
      do
      {
        int v47 = *v44++;
        int v46 = v47;
        if (v47)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v117 = v45;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_2539E8A24(0, *(void *)(v45 + 16) + 1, 1);
            uint64_t v45 = v117;
          }
          unint64_t v50 = *(void *)(v45 + 16);
          unint64_t v49 = *(void *)(v45 + 24);
          if (v50 >= v49 >> 1)
          {
            sub_2539E8A24(v49 > 1, v50 + 1, 1);
            uint64_t v45 = v117;
          }
          *(void *)(v45 + 16) = v50 + 1;
          *(_DWORD *)(v45 + 4 * v50 + 32) = v46;
        }
        --v43;
      }
      while (v43);
    }
    else
    {
      uint64_t v45 = MEMORY[0x263F8EE78];
    }
    swift_bridgeObjectRelease();
    uint64_t v51 = *(void *)(v45 + 16);
    if (v51) {
      break;
    }
    swift_release();
    uint64_t v9 = v105;
    uint64_t result = sub_253973648((uint64_t)v105, (void (*)(void))type metadata accessor for Session.Event);
    uint64_t v5 = v108;
    uint64_t v20 = v113;
    uint64_t v19 = v102;
    if (v113) {
      goto LABEL_2;
    }
LABEL_27:
    ;
  }
  unsigned int v53 = *(_DWORD *)(v45 + 32);
  uint64_t v54 = v51 - 1;
  uint64_t v55 = v108;
  uint64_t v56 = v113;
  uint64_t v57 = (uint64_t)v105;
  if (v54)
  {
    uint64_t v58 = (unsigned int *)(v45 + 36);
    do
    {
      unsigned int v60 = *v58++;
      unsigned int v59 = v60;
      if (v53 <= v60) {
        unsigned int v53 = v59;
      }
      --v54;
    }
    while (v54);
  }
  LODWORD(v102) = v53;
  swift_release();
  uint64_t v61 = v57;
LABEL_35:
  uint64_t result = sub_253973648(v61, (void (*)(void))type metadata accessor for Session.Event);
  while (1)
  {
    uint64_t v63 = v103;
    uint64_t v62 = v104;
    if (v56)
    {
      if (--v56 >= v111) {
        goto LABEL_75;
      }
      sub_253973520(v112+ ((*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80))+ *(void *)(v110 + 72) * v56, v103, (void (*)(void))type metadata accessor for Session.Event);
      uint64_t v64 = 0;
    }
    else
    {
      uint64_t v64 = 1;
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v63, v64, 1, v55);
    sub_253973580(v63, v62);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v62, 1, v55) == 1) {
      break;
    }
    uint64_t v65 = sub_2539735E8(v62, v109, (void (*)(void))type metadata accessor for Session.Event);
    Session.Event.Payload.statementIds.getter(v65, v66, v67, v68, v69, v70, v71, v72, v100, (uint64_t)v101, (uint64_t)v102, v103, v104, (uint64_t)v105, v106, v107, v108, v109, v110,
      v111);
    uint64_t v74 = v73;
    uint64_t v75 = *(void *)(v73 + 16);
    if (v75)
    {
      uint64_t v113 = v56;
      uint64_t v117 = MEMORY[0x263F8EE78];
      sub_2539E8A24(0, v75, 0);
      uint64_t v76 = *(unsigned __int8 *)(v107 + 80);
      uint64_t v106 = v74;
      uint64_t v77 = v74 + ((v76 + 32) & ~v76);
      uint64_t v78 = *(void *)(v107 + 72);
      uint64_t v79 = *(void (**)(char *, uint64_t, uint64_t))(v107 + 16);
      do
      {
        uint64_t v80 = v116;
        v79(v4, v77, v116);
        int v81 = sub_253B059C0();
        (*v114)(v4, v80);
        uint64_t v82 = v117;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2539E8A24(0, *(void *)(v82 + 16) + 1, 1);
          uint64_t v82 = v117;
        }
        unint64_t v84 = *(void *)(v82 + 16);
        unint64_t v83 = *(void *)(v82 + 24);
        if (v84 >= v83 >> 1)
        {
          sub_2539E8A24(v83 > 1, v84 + 1, 1);
          uint64_t v82 = v117;
        }
        *(void *)(v82 + 16) = v84 + 1;
        *(_DWORD *)(v82 + 4 * v84 + 32) = v81;
        v77 += v78;
        --v75;
      }
      while (v75);
      swift_bridgeObjectRelease();
      uint64_t v55 = v108;
      uint64_t v56 = v113;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v82 = MEMORY[0x263F8EE78];
    }
    uint64_t v85 = *(void *)(v82 + 16);
    if (v85)
    {
      int v86 = (int *)(v82 + 32);
      uint64_t v87 = MEMORY[0x263F8EE78];
      do
      {
        int v89 = *v86++;
        int v88 = v89;
        if (v89)
        {
          char v90 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v117 = v87;
          if ((v90 & 1) == 0)
          {
            sub_2539E8A24(0, *(void *)(v87 + 16) + 1, 1);
            uint64_t v87 = v117;
          }
          unint64_t v92 = *(void *)(v87 + 16);
          unint64_t v91 = *(void *)(v87 + 24);
          if (v92 >= v91 >> 1)
          {
            sub_2539E8A24(v91 > 1, v92 + 1, 1);
            uint64_t v87 = v117;
          }
          *(void *)(v87 + 16) = v92 + 1;
          *(_DWORD *)(v87 + 4 * v92 + 32) = v88;
        }
        --v85;
      }
      while (v85);
    }
    else
    {
      uint64_t v87 = MEMORY[0x263F8EE78];
    }
    swift_bridgeObjectRelease();
    uint64_t v93 = *(void *)(v87 + 16);
    if (!v93)
    {
      swift_release();
      uint64_t v61 = v109;
      goto LABEL_35;
    }
    unsigned int v94 = *(_DWORD *)(v87 + 32);
    uint64_t v95 = v93 - 1;
    if (v95)
    {
      uint64_t v96 = (unsigned int *)(v87 + 36);
      do
      {
        unsigned int v98 = *v96++;
        unsigned int v97 = v98;
        if (v94 <= v98) {
          unsigned int v94 = v97;
        }
        --v95;
      }
      while (v95);
    }
    swift_release();
    uint64_t result = sub_253973648(v109, (void (*)(void))type metadata accessor for Session.Event);
    unsigned int v99 = v102;
    if (v102 <= v94) {
      unsigned int v99 = v94;
    }
    LODWORD(v102) = v99;
  }
  int v52 = (int)v102;
LABEL_72:
  swift_bridgeObjectRelease();
  uint64_t result = (v52 + 1);
  if (v52 == -1) {
    goto LABEL_76;
  }
  return result;
}

uint64_t Session.StatementIdCounter.__allocating_init(baseStatementIdIndex:)(int a1)
{
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 16) = a1;
  return result;
}

uint64_t type metadata accessor for Session.StatementIdCounter()
{
  return self;
}

uint64_t Session.SessionState.init(events:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for Session.Transcript(0);
  sub_25346CAF4();
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v41 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v14 = type metadata accessor for Session.SessionState();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16))
  {
    uint64_t v18 = type metadata accessor for Session.Event(0);
    uint64_t v19 = (int *)(v18 - 8);
    uint64_t v20 = *(unsigned __int8 *)(*(void *)(v18 - 8) + 80);
    uint64_t v42 = v14;
    uint64_t v21 = a1 + ((v20 + 32) & ~v20);
    uint64_t v22 = v21 + *(int *)(v18 + 20);
    sub_253B055C0();
    sub_25346CAF4();
    (*(void (**)(char *, uint64_t))(v23 + 16))(v8, v22);
    uint64_t v24 = (uint64_t *)(v21 + v19[11]);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v27 = &v8[v4[5]];
    *(void *)uint64_t v27 = v25;
    *((void *)v27 + 1) = v26;
    uint64_t v28 = (uint64_t *)(v21 + v19[12]);
    uint64_t v41 = a2;
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = &v8[v4[6]];
    *(void *)uint64_t v31 = v29;
    *((void *)v31 + 1) = v30;
    uint64_t v32 = (uint64_t *)(v21 + v19[13]);
    uint64_t v33 = *v32;
    uint64_t v34 = v32[1];
    uint64_t v35 = &v8[v4[7]];
    *(void *)uint64_t v35 = v33;
    *((void *)v35 + 1) = v34;
    *(void *)&v8[v4[8]] = a1;
    sub_2539735E8((uint64_t)v8, (uint64_t)v11, (void (*)(void))type metadata accessor for Session.Transcript);
    sub_2539735E8((uint64_t)v11, (uint64_t)v13, (void (*)(void))type metadata accessor for Session.Transcript);
    sub_253973520((uint64_t)v13, (uint64_t)v17, (void (*)(void))type metadata accessor for Session.Transcript);
    uint64_t v36 = *(void *)&v13[v4[8]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v30) = sub_253972000(v36);
    swift_bridgeObjectRelease();
    type metadata accessor for Session.StatementIdCounter();
    uint64_t v37 = swift_allocObject();
    *(_DWORD *)(v37 + 16) = v30;
    sub_253973648((uint64_t)v13, (void (*)(void))type metadata accessor for Session.Transcript);
    uint64_t v39 = v41;
    uint64_t v38 = v42;
    *(void *)&v17[*(int *)(v42 + 20)] = v37;
    sub_2539735E8((uint64_t)v17, v39, (void (*)(void))type metadata accessor for Session.SessionState);
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v39, 0, 1, v38);
  }
  else
  {
    swift_bridgeObjectRelease();
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a2, 1, 1, v14);
  }
}

uint64_t Session.StatementIdCounter.init(baseStatementIdIndex:)(int a1)
{
  *(_DWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t Session.StatementIdCounter.newStatementId()()
{
  atomic_fetch_add_explicit((atomic_uint *volatile)(v0 + 16), 1u, memory_order_relaxed);
  return sub_253B059B0();
}

uint64_t Session.StatementIdCounter.deinit()
{
  sub_253462A5C(&qword_26B2411C0);
  sub_25346CAF4();
  uint64_t v1 = sub_25346CBCC();
  v2(v1);
  return v0;
}

uint64_t Session.StatementIdCounter.__deallocating_deinit()
{
  sub_253462A5C(&qword_26B2411C0);
  sub_25346CAF4();
  uint64_t v1 = sub_25346CBCC();
  v2(v1);
  return MEMORY[0x270FA0228](v0, 20, 7);
}

uint64_t *_s14descr27033EE49O12SessionStateVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_253B055C0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for Session.Transcript(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = (uint64_t *)((char *)v4 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    void *v10 = v13;
    v10[1] = v12;
    uint64_t v14 = v8[6];
    uint64_t v15 = (uint64_t *)((char *)v4 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = v8[7];
    uint64_t v19 = (uint64_t *)((char *)v4 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    *(uint64_t *)((char *)v4 + v8[8]) = *(uint64_t *)((char *)a2 + v8[8]);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t _s14descr27033EE49O12SessionStateVwxx(uint64_t a1)
{
  uint64_t v2 = sub_253B055C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for Session.Transcript(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t _s14descr27033EE49O12SessionStateVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253B055C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for Session.Transcript(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  void *v9 = v12;
  v9[1] = v11;
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = v7[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t _s14descr27033EE49O12SessionStateVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253B055C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for Session.Transcript(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  void *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v7[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v7[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s14descr27033EE49O12SessionStateVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253B055C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for Session.Transcript(0);
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s14descr27033EE49O12SessionStateVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253B055C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for Session.Transcript(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  void *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = v7[7];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t _s14descr27033EE49O12SessionStateVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25397330C);
}

uint64_t sub_25397330C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Session.Transcript(0);
  sub_253486600();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t _s14descr27033EE49O12SessionStateVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2539733AC);
}

void sub_2539733AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Session.Transcript(0);
  sub_253486600();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t sub_253973434()
{
  uint64_t result = type metadata accessor for Session.Transcript(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t method lookup function for Session.StatementIdCounter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Session.StatementIdCounter);
}

uint64_t dispatch thunk of Session.StatementIdCounter.__allocating_init(baseStatementIdIndex:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_2539734F8()
{
  if (MEMORY[0x263F8EEE0]) {
    return sub_253462A5C(&qword_26B2411C0);
  }
  else {
    return MEMORY[0x263F8EE60] + 8;
  }
}

uint64_t sub_253973520(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25346CAF4();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_253973580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253462A5C(&qword_26B241248);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2539735E8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25346CAF4();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_253973648(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_25346CAF4();
  uint64_t v3 = sub_25346CBCC();
  v4(v3);
  return a1;
}

uint64_t Session.StatusUpdateEvent.id.getter()
{
  sub_2534F8A1C();
  sub_253B055C0();
  sub_25346CAF4();
  uint64_t v0 = sub_2534ACF74();
  return v1(v0);
}

uint64_t Session.StatusUpdateEvent.id.setter(uint64_t a1)
{
  sub_253B055C0();
  sub_25346CAF4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40);
  return v5(v1, a1, v3);
}

uint64_t (*Session.StatusUpdateEvent.id.modify())()
{
  return nullsub_1;
}

uint64_t Session.StatusUpdateEvent.sessionId.getter()
{
  sub_25397F81C();
  sub_253B055C0();
  sub_25346CAF4();
  uint64_t v0 = sub_2534ACF74();
  return v1(v0);
}

uint64_t type metadata accessor for Session.StatusUpdateEvent(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_26B249F40);
}

uint64_t Session.StatusUpdateEvent.sessionId.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Session.StatusUpdateEvent(0) + 20);
  sub_253B055C0();
  sub_25346CAF4();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 40);
  return v6(v3, a1, v4);
}

uint64_t (*Session.StatusUpdateEvent.sessionId.modify())()
{
  return nullsub_1;
}

uint64_t Session.StatusUpdateEvent.queryEventId.getter()
{
  uint64_t v2 = v1 + *(int *)(sub_25397F81C() + 24);
  return sub_2539738E4(v2, v0);
}

uint64_t sub_2539738E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Session.StatusUpdateEvent.queryEventId.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Session.StatusUpdateEvent(0) + 24);
  return sub_253973990(a1, v3);
}

uint64_t sub_253973990(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*Session.StatusUpdateEvent.queryEventId.modify())()
{
  return nullsub_1;
}

uint64_t Session.StatusUpdateEvent.clientRequestId.getter()
{
  return sub_2534ACF74();
}

uint64_t Session.StatusUpdateEvent.clientRequestId.setter()
{
  sub_25397F5EC();
  uint64_t result = sub_2535E2648();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*Session.StatusUpdateEvent.clientRequestId.modify())()
{
  return nullsub_1;
}

uint64_t Session.StatusUpdateEvent.clientSessionId.getter()
{
  return sub_2534ACF74();
}

uint64_t Session.StatusUpdateEvent.clientSessionId.setter()
{
  sub_25397F5EC();
  uint64_t result = sub_2535E2648();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*Session.StatusUpdateEvent.clientSessionId.modify())()
{
  return nullsub_1;
}

uint64_t Session.StatusUpdateEvent.clientApplicationId.getter()
{
  return sub_2534ACF74();
}

uint64_t Session.StatusUpdateEvent.clientApplicationId.setter()
{
  sub_25397F5EC();
  uint64_t result = sub_2535E2648();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*Session.StatusUpdateEvent.clientApplicationId.modify())()
{
  return nullsub_1;
}

uint64_t Session.StatusUpdateEvent.clientGroupId.getter()
{
  return sub_2534ACF74();
}

uint64_t Session.StatusUpdateEvent.clientGroupId.setter()
{
  sub_25397F5EC();
  uint64_t result = sub_2535E2648();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*Session.StatusUpdateEvent.clientGroupId.modify())()
{
  return nullsub_1;
}

uint64_t Session.StatusUpdateEvent.timepoint.getter()
{
  return sub_253973F44();
}

uint64_t Session.StatusUpdateEvent.timepoint.setter()
{
  return sub_253974000();
}

uint64_t (*Session.StatusUpdateEvent.timepoint.modify())()
{
  return nullsub_1;
}

uint64_t Session.StatusUpdateEvent.sender.getter()
{
  return sub_2534ACF74();
}

uint64_t Session.StatusUpdateEvent.sender.setter()
{
  sub_25397F5EC();
  uint64_t result = sub_2535E2648();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*Session.StatusUpdateEvent.sender.modify())()
{
  return nullsub_1;
}

uint64_t Session.StatusUpdateEvent.postingSpan.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Session.StatusUpdateEvent(0) + 52));
}

uint64_t Session.StatusUpdateEvent.postingSpan.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for Session.StatusUpdateEvent(0);
  uint64_t v6 = v2 + *(int *)(result + 52);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*Session.StatusUpdateEvent.postingSpan.modify())()
{
  return nullsub_1;
}

uint64_t Session.StatusUpdateEvent.payload.getter()
{
  return sub_253973F44();
}

uint64_t sub_253973F44()
{
  uint64_t v1 = sub_2534D8D00();
  v2(v1);
  sub_25346CAF4();
  uint64_t v3 = sub_2534FE10C();
  v4(v3);
  return v0;
}

uint64_t type metadata accessor for Session.StatusUpdateEvent.Payload(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_26B249F30);
}

uint64_t Session.StatusUpdateEvent.payload.setter()
{
  return sub_253974000();
}

uint64_t sub_253974000()
{
  uint64_t v1 = sub_2534D8D00();
  v2(v1);
  sub_25346CAF4();
  uint64_t v3 = sub_2534FE10C();
  v4(v3);
  return v0;
}

uint64_t (*Session.StatusUpdateEvent.payload.modify())()
{
  return nullsub_1;
}

uint64_t static Session.StatusUpdateEvent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = sub_253B055C0();
  sub_253465998();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_2534847E0();
  uint64_t v11 = sub_253462A5C(&qword_269CDDCC0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v12);
  sub_253465A3C();
  uint64_t v13 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  sub_2534D8E78();
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = &v58[-v17];
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = &v58[-v19];
  if ((sub_253B055A0() & 1) == 0) {
    goto LABEL_49;
  }
  uint64_t v61 = v9;
  uint64_t updated = type metadata accessor for Session.StatusUpdateEvent(0);
  if ((sub_253B055A0() & 1) == 0) {
    goto LABEL_49;
  }
  sub_2539738E4(a1 + *(int *)(updated + 24), (uint64_t)v20);
  uint64_t v60 = updated;
  sub_2539738E4(a2 + *(int *)(updated + 24), (uint64_t)v18);
  uint64_t v22 = v2 + *(int *)(v11 + 48);
  sub_2539738E4((uint64_t)v20, v2);
  sub_2539738E4((uint64_t)v18, v22);
  sub_2534F88B8(v2);
  if (v23)
  {
    sub_253472458((uint64_t)v18, (uint64_t *)&unk_26B248CB0);
    sub_253472458((uint64_t)v20, (uint64_t *)&unk_26B248CB0);
    sub_2534F88B8(v22);
    if (v23)
    {
      sub_253472458(v2, (uint64_t *)&unk_26B248CB0);
      goto LABEL_13;
    }
LABEL_11:
    sub_253472458(v2, &qword_269CDDCC0);
    goto LABEL_49;
  }
  sub_2539738E4(v2, v4);
  sub_2534F88B8(v22);
  if (v23)
  {
    sub_253472458((uint64_t)v18, (uint64_t *)&unk_26B248CB0);
    sub_253472458((uint64_t)v20, (uint64_t *)&unk_26B248CB0);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v4, v7);
    goto LABEL_11;
  }
  uint64_t v24 = v61;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 32))(v3, v22, v7);
  sub_253978890((unint64_t *)&qword_269CDCCE8, MEMORY[0x263F07508]);
  int v59 = sub_253B096B0();
  uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  v25(v3, v7);
  sub_253472458((uint64_t)v18, (uint64_t *)&unk_26B248CB0);
  sub_253472458((uint64_t)v20, (uint64_t *)&unk_26B248CB0);
  v25(v4, v7);
  sub_253472458(v2, (uint64_t *)&unk_26B248CB0);
  if ((v59 & 1) == 0) {
    goto LABEL_49;
  }
LABEL_13:
  uint64_t v26 = v60;
  sub_25397F578();
  if (v23) {
    BOOL v29 = v27 == v28;
  }
  else {
    BOOL v29 = 0;
  }
  if (v29 || (sub_253B0A4C0(), char v30 = sub_25397F648(), (v31 & 1) != 0))
  {
    sub_25397F578();
    BOOL v34 = v23 && v32 == v33;
    if (v34 || (sub_253B0A4C0(), char v30 = sub_25397F648(), (v35 & 1) != 0))
    {
      sub_25397F578();
      BOOL v38 = v23 && v36 == v37;
      if (v38 || (sub_253B0A4C0(), char v30 = sub_25397F648(), (v39 & 1) != 0))
      {
        sub_25397F7CC();
        if (v40)
        {
          if (!v41) {
            goto LABEL_49;
          }
          if (*v42 != *v43 || v40 != v41)
          {
            sub_253B0A4C0();
            char v30 = sub_25397F648();
            if ((v45 & 1) == 0) {
              return v30 & 1;
            }
          }
        }
        else if (v41)
        {
          goto LABEL_49;
        }
        if (static Timepoint.== infix(_:_:)(a1 + *(int *)(v26 + 44), a2 + *(int *)(v26 + 44)))
        {
          sub_25397F7CC();
          if (v46)
          {
            if (v47)
            {
              if (*v48 != *v49 || v46 != v47)
              {
                sub_253B0A4C0();
                char v30 = sub_25397F648();
                if ((v51 & 1) == 0) {
                  return v30 & 1;
                }
              }
LABEL_47:
              uint64_t v52 = *(int *)(v26 + 52);
              unsigned int v53 = (void *)(a1 + v52);
              char v54 = *(unsigned char *)(a1 + v52 + 8);
              uint64_t v55 = (void *)(a2 + v52);
              int v56 = *(unsigned __int8 *)(a2 + v52 + 8);
              if (v54)
              {
                if (!v56) {
                  goto LABEL_49;
                }
              }
              else
              {
                if (*v53 != *v55) {
                  LOBYTE(v56) = 1;
                }
                if (v56) {
                  goto LABEL_49;
                }
              }
              char v30 = static Session.StatusUpdateEvent.Payload.== infix(_:_:)();
              return v30 & 1;
            }
          }
          else if (!v47)
          {
            goto LABEL_47;
          }
        }
LABEL_49:
        char v30 = 0;
      }
    }
  }
  return v30 & 1;
}

uint64_t static Session.StatusUpdateEvent.Payload.== infix(_:_:)()
{
  type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = sub_2534B464C();
  type metadata accessor for Session.StatusUpdateEvent.Payload(v3);
  sub_25346CAF4();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (void *)((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = sub_253462A5C(&qword_269CE5348);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  sub_2535E2544();
  uint64_t v13 = (int *)(v0 + v12);
  sub_253973F44();
  sub_253973F44();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_253973F44();
    uint64_t v17 = *((void *)v9 + 2);
    uint64_t v18 = *((void *)v9 + 4);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v19 = *((void *)v9 + 3);
      uint64_t v20 = *((void *)v9 + 1);
      int v21 = *v13;
      uint64_t v22 = *((void *)v13 + 1);
      uint64_t v23 = *((void *)v13 + 4);
      int v30 = *(_DWORD *)v9;
      uint64_t v31 = v20;
      uint64_t v32 = v17;
      uint64_t v33 = v19;
      uint64_t v34 = v18;
      int v26 = v21;
      uint64_t v27 = v22;
      long long v25 = *((_OWORD *)v13 + 1);
      long long v28 = v25;
      uint64_t v29 = v23;
      char v16 = static Session.StatusUpdateEvent.ToolExecutionProgressUpdate.== infix(_:_:)((uint64_t)&v30, (uint64_t)&v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_253976288(v0, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.Payload);
      return v16 & 1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  sub_253973F44();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_253976288((uint64_t)v7, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult);
LABEL_14:
    sub_253472458(v0, &qword_269CE5348);
LABEL_17:
    char v16 = 0;
    return v16 & 1;
  }
  sub_253978970();
  BOOL v14 = *v7 == *v1 && v7[1] == v1[1];
  if (!v14 && (sub_253B0A4C0() & 1) == 0
    || (static Session.StatusUpdateEvent.IntermediateQueryResult.Source.== infix(_:_:)() & 1) == 0
    || (sub_2534B5D10(), (v15 & 1) == 0))
  {
    sub_253976288((uint64_t)v1, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult);
    sub_25397F780();
    sub_253976288(v0, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.Payload);
    goto LABEL_17;
  }
  sub_253976288((uint64_t)v1, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult);
  sub_25397F780();
  sub_253976288(v0, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.Payload);
  char v16 = 1;
  return v16 & 1;
}

uint64_t sub_2539748AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_253B0A4C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064;
    if (v6 || (sub_253B0A4C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6576457972657571 && a2 == 0xEC0000006449746ELL;
      if (v7 || (sub_253B0A4C0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6552746E65696C63 && a2 == 0xEF64497473657571;
        if (v8 || (sub_253B0A4C0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6553746E65696C63 && a2 == 0xEF64496E6F697373;
          if (v9 || (sub_253B0A4C0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0xD000000000000013 && a2 == 0x8000000253B12900 || (sub_253B0A4C0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            BOOL v10 = a1 == 0x7247746E65696C63 && a2 == 0xED0000644970756FLL;
            if (v10 || (sub_253B0A4C0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              BOOL v11 = a1 == 0x6E696F70656D6974 && a2 == 0xE900000000000074;
              if (v11 || (sub_253B0A4C0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                BOOL v12 = a1 == 0x7265646E6573 && a2 == 0xE600000000000000;
                if (v12 || (sub_253B0A4C0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  BOOL v13 = a1 == 0x53676E6974736F70 && a2 == 0xEB000000006E6170;
                  if (v13 || (sub_253B0A4C0() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 9;
                  }
                  else if (a1 == 0x64616F6C796170 && a2 == 0xE700000000000000)
                  {
                    swift_bridgeObjectRelease();
                    return 10;
                  }
                  else
                  {
                    char v15 = sub_253B0A4C0();
                    swift_bridgeObjectRelease();
                    if (v15) {
                      return 10;
                    }
                    else {
                      return 11;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

unint64_t sub_253974D84(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x496E6F6973736573;
      break;
    case 2:
      unint64_t result = 0x6576457972657571;
      break;
    case 3:
      unint64_t result = 0x6552746E65696C63;
      break;
    case 4:
      unint64_t result = 0x6553746E65696C63;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x7247746E65696C63;
      break;
    case 7:
      unint64_t result = 0x6E696F70656D6974;
      break;
    case 8:
      unint64_t result = 0x7265646E6573;
      break;
    case 9:
      unint64_t result = 0x53676E6974736F70;
      break;
    case 10:
      unint64_t result = 0x64616F6C796170;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_253974F10()
{
  return sub_253974D84(*v0);
}

uint64_t sub_253974F18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2539748AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253974F40(uint64_t a1)
{
  unint64_t v2 = sub_253978844();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253974F7C(uint64_t a1)
{
  unint64_t v2 = sub_253978844();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Session.StatusUpdateEvent.encode(to:)()
{
  sub_2534847F8();
  uint64_t v2 = sub_253462A5C(&qword_269CE5350);
  sub_253465998();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  BOOL v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25397F66C();
  sub_253978844();
  sub_2534F82BC();
  LOBYTE(v11) = 0;
  sub_253B055C0();
  sub_253978890(&qword_26B248CA0, MEMORY[0x263F07508]);
  sub_25397F654();
  if (!v1)
  {
    uint64_t updated = (int *)type metadata accessor for Session.StatusUpdateEvent(0);
    sub_25397F628(1);
    sub_253B0A440();
    sub_25397F628(2);
    sub_253B0A3E0();
    sub_25397F7C0(updated[7]);
    LOBYTE(v11) = 3;
    sub_25397F5D0();
    sub_25397F7C0(updated[8]);
    LOBYTE(v11) = 4;
    sub_25397F5D0();
    sub_25397F7C0(updated[9]);
    LOBYTE(v11) = 5;
    sub_25397F5D0();
    sub_25397F7C0(updated[10]);
    LOBYTE(v11) = 6;
    sub_25397F738();
    LOBYTE(v11) = 7;
    type metadata accessor for Timepoint();
    sub_253978890(&qword_26B241260, (void (*)(uint64_t))type metadata accessor for Timepoint);
    sub_25397F7AC();
    sub_25397F654();
    long long v11 = *(_OWORD *)(v0 + updated[12]);
    sub_2539788D8();
    sub_25397F6FC();
    BOOL v9 = (uint64_t *)(v0 + updated[13]);
    uint64_t v10 = *v9;
    LOBYTE(v9) = *((unsigned char *)v9 + 8);
    *(void *)&long long v11 = v10;
    BYTE8(v11) = (_BYTE)v9;
    sub_253978924();
    sub_25397F6FC();
    LOBYTE(v11) = 10;
    type metadata accessor for Session.StatusUpdateEvent.Payload(0);
    sub_253978890(&qword_269CE5360, (void (*)(uint64_t))type metadata accessor for Session.StatusUpdateEvent.Payload);
    sub_25397F7AC();
    sub_25397F654();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  sub_2534847C8();
}

void Session.StatusUpdateEvent.init(from:)()
{
  sub_2534847F8();
  uint64_t v77 = v1;
  uint64_t v6 = v5;
  uint64_t v67 = v7;
  uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.Payload(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v8);
  sub_25346CB04();
  uint64_t v69 = v9;
  uint64_t v71 = type metadata accessor for Timepoint();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v10);
  sub_25346CB04();
  uint64_t v70 = v11;
  uint64_t v12 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  sub_2534AF2D8();
  uint64_t v14 = sub_253B055C0();
  sub_253465998();
  uint64_t v82 = v15;
  MEMORY[0x270FA5388](v16);
  sub_2534B340C();
  MEMORY[0x270FA5388](v17);
  uint64_t v72 = (char *)&v65 - v18;
  sub_253462A5C(&qword_269CE5368);
  sub_253465998();
  uint64_t v73 = v20;
  uint64_t v74 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = sub_25397F55C();
  uint64_t v22 = (int *)type metadata accessor for Session.StatusUpdateEvent(v21);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v23);
  sub_2534B34A4();
  uint64_t v80 = v4 + *(int *)(v24 + 24);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v80, 1, 1, v14);
  long long v25 = (uint64_t *)(v4 + v22[10]);
  *long long v25 = 0;
  v25[1] = 0;
  uint64_t v79 = v25;
  int v26 = (void *)(v4 + v22[12]);
  void *v26 = 0;
  v26[1] = 0;
  uint64_t v78 = v26;
  int v81 = v22;
  uint64_t v27 = v22[13];
  uint64_t v83 = v4;
  uint64_t v28 = v4 + v27;
  *(void *)uint64_t v28 = 0;
  *(unsigned char *)(v28 + 8) = 1;
  uint64_t v29 = v6[3];
  uint64_t v76 = v6;
  sub_253472068(v6, v29);
  sub_253978844();
  uint64_t v75 = v0;
  uint64_t v30 = v77;
  sub_253B0A660();
  if (v30)
  {
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v76);
    int v32 = 0;
    int v33 = 0;
    int v34 = 0;
    uint64_t v35 = v83;
    uint64_t v36 = v81;
    int v37 = 0;
  }
  else
  {
    uint64_t v77 = v2;
    uint64_t v66 = (void *)v28;
    LOBYTE(v84) = 0;
    sub_253978890(&qword_269CDBCC8, MEMORY[0x263F07508]);
    uint64_t v31 = v72;
    sub_25397F7E0();
    uint64_t v39 = v83;
    uint64_t v72 = *(char **)(v82 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v72)(v83, v31, v14);
    LOBYTE(v84) = 1;
    sub_25397F7E0();
    uint64_t v40 = v81;
    ((void (*)(uint64_t, uint64_t, uint64_t))v72)(v39 + v81[5], v3, v14);
    LOBYTE(v84) = 2;
    uint64_t v41 = v77;
    sub_253B0A310();
    sub_253973990(v41, v80);
    uint64_t v42 = sub_25397F608(3);
    uint64_t v43 = v83;
    uint64_t v44 = (uint64_t *)(v83 + v40[7]);
    *uint64_t v44 = v42;
    v44[1] = v45;
    uint64_t v46 = sub_25397F608(4);
    uint64_t v47 = (uint64_t *)(v43 + v40[8]);
    uint64_t *v47 = v46;
    v47[1] = v48;
    uint64_t v49 = sub_25397F608(5);
    unint64_t v50 = (uint64_t *)(v43 + v40[9]);
    *unint64_t v50 = v49;
    v50[1] = v51;
    LOBYTE(v84) = 6;
    uint64_t v52 = sub_253B0A2E0();
    uint64_t v54 = v53;
    uint64_t v55 = v79;
    swift_bridgeObjectRelease();
    *uint64_t v55 = v52;
    v55[1] = v54;
    LOBYTE(v84) = 7;
    sub_253978890(&qword_269CE5370, (void (*)(uint64_t))type metadata accessor for Timepoint);
    sub_253B0A370();
    LODWORD(v72) = 1;
    sub_253978970();
    sub_2539789C0();
    sub_253B0A310();
    uint64_t v56 = v84;
    uint64_t v57 = v85;
    uint64_t v58 = v78;
    swift_bridgeObjectRelease();
    *uint64_t v58 = v56;
    v58[1] = v57;
    sub_253978A0C();
    sub_253B0A310();
    uint64_t v77 = 0;
    char v59 = v85;
    uint64_t v60 = v66;
    *uint64_t v66 = v84;
    *((unsigned char *)v60 + 8) = v59;
    LOBYTE(v84) = 10;
    sub_253978890(&qword_269CE5388, (void (*)(uint64_t))type metadata accessor for Session.StatusUpdateEvent.Payload);
    uint64_t v61 = v77;
    sub_253B0A370();
    uint64_t v77 = v61;
    if (!v61)
    {
      sub_2534659CC();
      v63();
      uint64_t v64 = v83;
      sub_253978970();
      sub_253973F44();
      _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v76);
      sub_253976288(v64, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent);
      goto LABEL_11;
    }
    sub_2534659CC();
    v62();
    uint64_t v36 = v81;
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v76);
    int v32 = 1;
    int v33 = 1;
    int v34 = 1;
    uint64_t v35 = v83;
    BOOL v38 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
    v38(v83, v14);
    int v37 = (int)v72;
    v38(v35 + v36[5], v14);
  }
  sub_253472458(v80, (uint64_t *)&unk_26B248CB0);
  if (v32)
  {
    swift_bridgeObjectRelease();
    if (!v33) {
      goto LABEL_6;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    if (!v34) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  if (v33) {
    goto LABEL_13;
  }
LABEL_6:
  if (v34) {
LABEL_7:
  }
    swift_bridgeObjectRelease();
LABEL_8:
  swift_bridgeObjectRelease();
  if (v37) {
    sub_253976288(v35 + v36[11], (void (*)(void))type metadata accessor for Timepoint);
  }
  swift_bridgeObjectRelease();
LABEL_11:
  sub_2534847C8();
}

uint64_t sub_253975B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  uint64_t v22 = sub_253B055C0();
  sub_25346CAF4();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32);
  v24(a9, a1, v22);
  uint64_t updated = (int *)type metadata accessor for Session.StatusUpdateEvent(0);
  v24(a9 + updated[5], a2, v22);
  sub_25397F4F4(a3, a9 + updated[6]);
  int v26 = (void *)(a9 + updated[7]);
  void *v26 = a4;
  v26[1] = a5;
  uint64_t v27 = (void *)(a9 + updated[8]);
  void *v27 = a6;
  v27[1] = a7;
  uint64_t v28 = (void *)(a9 + updated[9]);
  *uint64_t v28 = a8;
  v28[1] = a10;
  uint64_t v29 = (void *)(a9 + updated[10]);
  *uint64_t v29 = a11;
  v29[1] = a12;
  sub_253978970();
  uint64_t v30 = (void *)(a9 + updated[12]);
  *uint64_t v30 = a14;
  v30[1] = a15;
  uint64_t v31 = a9 + updated[13];
  *(void *)uint64_t v31 = a16;
  *(unsigned char *)(v31 + 8) = a17 & 1;
  return sub_253978970();
}

void sub_253975D18()
{
}

void sub_253975D30()
{
}

uint64_t Session.Event.formingStatusUpdate(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for PreassignedEventID();
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_2534B3294();
  _s30IntelligenceFlowPlannerSupport20PlatformPnRTelemetryC7startedy10Foundation4UUIDVAA12StartedStateO_0aE7Library0aB11IdentifiersVSgAGtFZfA1__0();
  return Session.Event.formingStatusUpdate(id:_:)(v2, a1, a2);
}

uint64_t Session.Event.formingStatusUpdate(id:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.Payload(0);
  uint64_t v10 = sub_25346CB4C(updated);
  MEMORY[0x270FA5388](v10);
  sub_25346CB04();
  uint64_t v54 = v11;
  sub_253B05550();
  sub_253465998();
  uint64_t v52 = v13;
  uint64_t v53 = v12;
  MEMORY[0x270FA5388](v12);
  sub_25349888C();
  uint64_t v44 = type metadata accessor for Timepoint();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v14);
  sub_2534847E0();
  uint64_t v15 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v16 = sub_25346CB4C(v15);
  MEMORY[0x270FA5388](v16);
  sub_25346CBDC();
  uint64_t v17 = sub_253B055C0();
  sub_253465998();
  uint64_t v19 = v18;
  MEMORY[0x270FA5388](v20);
  sub_2534D8E78();
  MEMORY[0x270FA5388](v21);
  uint64_t v22 = *(void (**)(void))(v19 + 16);
  uint64_t v49 = (uint64_t)&v42 - v23;
  uint64_t v57 = a1;
  sub_25397F754();
  v22();
  uint64_t v24 = (int *)type metadata accessor for Session.Event(0);
  sub_2534F87A4();
  uint64_t v50 = v6;
  sub_25397F754();
  v22();
  uint64_t v25 = v3 + v24[6];
  uint64_t v51 = v4;
  sub_2539738E4(v25, v4);
  int v26 = (uint64_t *)(v3 + v24[8]);
  uint64_t v27 = *v26;
  uint64_t v28 = v26[1];
  uint64_t v29 = (uint64_t *)(v3 + v24[9]);
  uint64_t v30 = *v29;
  uint64_t v31 = v29[1];
  uint64_t v46 = v27;
  uint64_t v47 = v30;
  int v32 = (uint64_t *)(v3 + v24[10]);
  uint64_t v33 = *v32;
  uint64_t v34 = v32[1];
  uint64_t v35 = (uint64_t *)(v3 + v24[11]);
  uint64_t v36 = v35[1];
  uint64_t v42 = *v35;
  uint64_t v43 = v33;
  swift_bridgeObjectRetain();
  uint64_t v48 = v28;
  swift_bridgeObjectRetain();
  uint64_t v45 = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v37 = v7;
  sub_253B05520();
  __uint64_t v38 = clock_gettime_nsec_np(_CLOCK_UPTIME_RAW);
  __uint64_t v39 = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
  if (qword_26B241258 != -1) {
    swift_once();
  }
  sub_253462BD4(v17, (uint64_t)qword_26B24A6A8);
  uint64_t v40 = v44;
  sub_25397F754();
  v22();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v5, v37, v53);
  *(void *)(v5 + *(int *)(v40 + 20)) = v38;
  *(void *)(v5 + *(int *)(v40 + 24)) = v39;
  sub_253973F44();
  sub_253975B4C(v49, v50, v51, v46, v48, v47, v45, v43, v56, v34, v42, v36, v5, 0, 0, 0, 1);
  return sub_253976288(v57, (void (*)(void))type metadata accessor for PreassignedEventID);
}

uint64_t static Session.StatusUpdateEvent.ToolExecutionProgressUpdate.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(float *)a1 != *(float *)a2) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  if (!v3)
  {
    if (v6) {
      return 0;
    }
    goto LABEL_11;
  }
  if (!v6) {
    return 0;
  }
  BOOL v9 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && v3 == v6;
  if (v9 || (sub_253B0A4C0(), uint64_t result = sub_25397F648(), (v11 & 1) != 0))
  {
LABEL_11:
    if (v5)
    {
      if (v8)
      {
        if (v4 == v7 && v5 == v8) {
          return 1;
        }
        sub_2534ACF74();
        if (sub_253B0A4C0()) {
          return 1;
        }
      }
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

void static Session.StatusUpdateEvent.IntermediateQueryResult.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (sub_253B0A4C0() & 1) != 0)
  {
    type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult(0);
    if (static Session.StatusUpdateEvent.IntermediateQueryResult.Source.== infix(_:_:)())
    {
      sub_2534B5D10();
    }
  }
}

uint64_t type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_26B249F20);
}

uint64_t sub_253976288(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_25346CAF4();
  sub_2534659CC();
  v3();
  return a1;
}

uint64_t sub_2539762DC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000017 && a2 == 0x8000000253B13020 || (sub_253B0A4C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000253B13040)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_253B0A4C0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_2539763C8()
{
  return 0xD000000000000017;
}

unint64_t sub_2539763FC()
{
  return sub_2539763C8();
}

uint64_t sub_253976404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2539762DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25397642C(uint64_t a1)
{
  unint64_t v2 = sub_253978A58();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253976468(uint64_t a1)
{
  unint64_t v2 = sub_253978A58();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539764A4(uint64_t a1)
{
  unint64_t v2 = sub_253978AF0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539764E0(uint64_t a1)
{
  unint64_t v2 = sub_253978AF0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25397651C(uint64_t a1)
{
  unint64_t v2 = sub_253978AA4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253976558(uint64_t a1)
{
  unint64_t v2 = sub_253978AA4();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Session.StatusUpdateEvent.Payload.encode(to:)()
{
  sub_253547278();
  uint64_t v1 = v0;
  sub_253462A5C(&qword_269CE5390);
  sub_253465998();
  MEMORY[0x270FA5388](v2);
  sub_25346CB04();
  type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v3);
  sub_25346CB04();
  uint64_t v17 = v4;
  sub_253462A5C(&qword_269CE5398);
  sub_253465998();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_25397F55C();
  type metadata accessor for Session.StatusUpdateEvent.Payload(v6);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v7);
  sub_2534B34A4();
  sub_253462A5C(&qword_269CE53A0);
  sub_253465998();
  MEMORY[0x270FA5388](v8);
  sub_25397F800(v1);
  sub_253978A58();
  sub_253B0A680();
  sub_253973F44();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_253978970();
    sub_253978AA4();
    sub_253B0A3A0();
    sub_253978890(&qword_269CE53B8, (void (*)(uint64_t))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult);
    sub_253B0A440();
    sub_2534659CC();
    v10(v9);
    sub_253976288(v17, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult);
    uint64_t v11 = sub_25397F6A8();
    v12(v11);
  }
  else
  {
    sub_253978AF0();
    sub_253B0A3A0();
    sub_253978B3C();
    sub_253B0A440();
    sub_2534659CC();
    v14(v13);
    uint64_t v15 = sub_25397F6A8();
    v16(v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_25354725C();
}

void Session.StatusUpdateEvent.Payload.init(from:)()
{
  sub_2534847F8();
  uint64_t v4 = v3;
  uint64_t v46 = v5;
  sub_253462A5C(&qword_269CE53D0);
  sub_253465998();
  uint64_t v49 = v6;
  uint64_t v50 = v7;
  MEMORY[0x270FA5388](v6);
  sub_25346CB04();
  uint64_t v51 = v8;
  sub_253462A5C(&qword_269CE53D8);
  sub_253465998();
  uint64_t v47 = v10;
  uint64_t v48 = v9;
  MEMORY[0x270FA5388](v9);
  sub_25346CB04();
  uint64_t v53 = v11;
  uint64_t v54 = sub_253462A5C(&qword_269CE53E0);
  sub_253465998();
  uint64_t v52 = v12;
  MEMORY[0x270FA5388](v13);
  sub_2534847E0();
  uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.Payload(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v15);
  sub_2534D8E78();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v44 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)v44 - v20;
  sub_253472068(v4, v4[3]);
  sub_253978A58();
  sub_253B0A660();
  if (v0) {
    goto LABEL_10;
  }
  v44[0] = v19;
  v44[1] = v21;
  v44[2] = v2;
  uint64_t v45 = updated;
  uint64_t v22 = v54;
  uint64_t v58 = v4;
  uint64_t v23 = sub_253B0A390();
  uint64_t v24 = *(void *)(v23 + 16);
  if (!v24)
  {
    uint64_t v31 = v52;
LABEL_8:
    uint64_t v32 = v45;
    sub_253B0A090();
    swift_allocError();
    uint64_t v34 = v33;
    sub_253462A5C(&qword_269CDB688);
    *uint64_t v34 = v32;
    sub_253B0A2D0();
    sub_253B0A080();
    sub_25346CCF8();
    v35();
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v1, v22);
    uint64_t v4 = v58;
LABEL_10:
    uint64_t v36 = (uint64_t)v4;
    goto LABEL_11;
  }
  uint64_t v25 = v22;
  char v26 = *(unsigned char *)(v23 + 32);
  sub_25347B78C(1, v24, v23, v23 + 32, 0, (2 * v24) | 1);
  uint64_t v28 = v27;
  unint64_t v30 = v29;
  swift_bridgeObjectRelease();
  if (v28 != v30 >> 1)
  {
    uint64_t v31 = v52;
    uint64_t v22 = v25;
    goto LABEL_8;
  }
  if (v26)
  {
    LOBYTE(v55) = 1;
    sub_253978AA4();
    sub_25397F6C0();
    type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult(0);
    sub_253978890(&qword_269CE53E8, (void (*)(uint64_t))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult);
    sub_253B0A370();
    sub_2534659CC();
    v37();
    swift_unknownObjectRelease();
    uint64_t v38 = sub_25397F720();
    v39(v38);
  }
  else
  {
    LOBYTE(v55) = 0;
    sub_253978AF0();
    sub_25397F6C0();
    sub_25397A480();
    sub_253B0A370();
    sub_2534659CC();
    v40();
    swift_unknownObjectRelease();
    uint64_t v41 = sub_25397F720();
    v42(v41);
    uint64_t v43 = v44[0];
    *(_DWORD *)v44[0] = v55;
    *(_OWORD *)(v43 + 8) = v56;
    *(_OWORD *)(v43 + 24) = v57;
  }
  swift_storeEnumTagMultiPayload();
  sub_253978970();
  sub_253978970();
  uint64_t v36 = (uint64_t)v58;
LABEL_11:
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v36);
  sub_2534847C8();
}

void sub_253976E94()
{
}

void sub_253976EAC()
{
}

float Session.StatusUpdateEvent.ToolExecutionProgressUpdate.progress.getter()
{
  return *(float *)v0;
}

uint64_t Session.StatusUpdateEvent.ToolExecutionProgressUpdate.progressDescription.getter()
{
  return sub_2534ACF74();
}

uint64_t Session.StatusUpdateEvent.ToolExecutionProgressUpdate.additionalProgressDescription.getter()
{
  return sub_2534ACF74();
}

uint64_t Session.StatusUpdateEvent.ToolExecutionProgressUpdate.init(progress:progressDescription:additionalProgressDescription:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, float a6@<S0>)
{
  *(float *)a5 = a6;
  *(void *)(a5 + 8) = result;
  *(void *)(a5 + 16) = a2;
  *(void *)(a5 + 24) = a3;
  *(void *)(a5 + 32) = a4;
  return result;
}

uint64_t sub_253976F34(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73736572676F7270 && a2 == 0xE800000000000000;
  if (v2 || (sub_253B0A4C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000253B13060 || (sub_253B0A4C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000253B13080)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_253B0A4C0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_253977080(char a1)
{
  if (!a1) {
    return 0x73736572676F7270;
  }
  if (a1 == 1) {
    return 0xD000000000000013;
  }
  return 0xD00000000000001DLL;
}

uint64_t sub_2539770DC()
{
  return sub_253977080(*v0);
}

uint64_t sub_2539770E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253976F34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25397710C(uint64_t a1)
{
  unint64_t v2 = sub_25397A4CC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253977148(uint64_t a1)
{
  unint64_t v2 = sub_25397A4CC();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Session.StatusUpdateEvent.ToolExecutionProgressUpdate.encode(to:)()
{
  sub_253547278();
  uint64_t v3 = v2;
  uint64_t v4 = sub_253462A5C(&qword_269CE53F8);
  sub_253465998();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_2534B3294();
  sub_25397F800(v3);
  sub_25397A4CC();
  sub_25397F764();
  sub_253B0A420();
  if (!v0)
  {
    sub_25397F738();
    sub_25397F738();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_25354725C();
}

void Session.StatusUpdateEvent.ToolExecutionProgressUpdate.init(from:)()
{
  sub_253547278();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_253462A5C(&qword_269CE5408);
  sub_253465998();
  MEMORY[0x270FA5388](v5);
  sub_253472068(v2, v2[3]);
  sub_25397A4CC();
  sub_2534F8738();
  if (v0)
  {
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v2);
  }
  else
  {
    sub_253B0A350();
    int v7 = v6;
    uint64_t v8 = sub_253B0A2E0();
    uint64_t v10 = v9;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_253B0A2E0();
    uint64_t v13 = v12;
    uint64_t v16 = v11;
    uint64_t v14 = sub_25397F58C();
    v15(v14);
    *(_DWORD *)uint64_t v4 = v7;
    *(void *)(v4 + 8) = v8;
    *(void *)(v4 + 16) = v10;
    *(void *)(v4 + 24) = v16;
    *(void *)(v4 + 32) = v13;
    swift_bridgeObjectRetain();
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_25354725C();
}

void sub_253977480()
{
}

void sub_253977498()
{
}

uint64_t Session.StatusUpdateEvent.IntermediateQueryResult.query.getter()
{
  return sub_2534ACF74();
}

uint64_t Session.StatusUpdateEvent.IntermediateQueryResult.query.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Session.StatusUpdateEvent.IntermediateQueryResult.query.modify())()
{
  return nullsub_1;
}

uint64_t Session.StatusUpdateEvent.IntermediateQueryResult.source.getter()
{
  uint64_t v0 = sub_2534F8A1C();
  type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult(v0);
  return sub_253973F44();
}

uint64_t Session.StatusUpdateEvent.IntermediateQueryResult.source.setter()
{
  return sub_253974000();
}

uint64_t (*Session.StatusUpdateEvent.IntermediateQueryResult.source.modify())()
{
  return nullsub_1;
}

uint64_t Session.StatusUpdateEvent.IntermediateQueryResult.results.getter()
{
  type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult(0);
  return swift_bridgeObjectRetain();
}

uint64_t Session.StatusUpdateEvent.IntermediateQueryResult.results.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult(0) + 24);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*Session.StatusUpdateEvent.IntermediateQueryResult.results.modify())()
{
  return nullsub_1;
}

uint64_t Session.StatusUpdateEvent.IntermediateQueryResult.init(query:source:results:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult(0);
  uint64_t result = sub_253978970();
  *(void *)((char *)a4 + *(int *)(updated + 24)) = a3;
  return result;
}

uint64_t Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery.associatedActionContext.getter()
{
  return sub_253973F44();
}

uint64_t Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery.associatedActionContext.setter()
{
  return sub_253974000();
}

uint64_t (*Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery.associatedActionContext.modify())()
{
  return nullsub_1;
}

uint64_t Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery.init(associatedActionContext:)()
{
  return sub_253978970();
}

uint64_t Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.toolId.getter()
{
  return sub_2534ACF74();
}

uint64_t Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.toolId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.toolId.modify())()
{
  return nullsub_1;
}

uint64_t Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.parameterId.getter()
{
  return sub_2534ACF74();
}

uint64_t Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.parameterId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.parameterId.modify())()
{
  return nullsub_1;
}

uint64_t Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.init(toolId:parameterId:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t static Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (sub_253B0A4C0(), uint64_t result = sub_25397F648(), (v8 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      sub_2534ACF74();
      return sub_253B0A4C0();
    }
  }
  return result;
}

uint64_t sub_253977994(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000;
  if (v2 || (sub_253B0A4C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574656D61726170 && a2 == 0xEB00000000644972)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_253B0A4C0();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_253977A94(char a1)
{
  if (a1) {
    return 0x6574656D61726170;
  }
  else {
    return 0x64496C6F6F74;
  }
}

uint64_t sub_253977AD0()
{
  return sub_253977A94(*v0);
}

uint64_t sub_253977AD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253977994(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253977B00(uint64_t a1)
{
  unint64_t v2 = sub_25397A538();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253977B3C(uint64_t a1)
{
  unint64_t v2 = sub_25397A538();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.encode(to:)()
{
  sub_2534847F8();
  unint64_t v2 = v1;
  sub_253462A5C(&qword_269CE5410);
  sub_253465998();
  MEMORY[0x270FA5388](v3);
  sub_2534B3294();
  sub_25397F800(v2);
  sub_25397A538();
  sub_25397F764();
  sub_253B0A3F0();
  if (!v0)
  {
    sub_25351C8C4();
    sub_25397F5D0();
  }
  uint64_t v4 = sub_2534F82A4();
  v5(v4);
  sub_2534847C8();
}

void Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.init(from:)()
{
  sub_2534847F8();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_253462A5C(&qword_269CE5420);
  sub_253465998();
  MEMORY[0x270FA5388](v5);
  sub_253472068(v2, v2[3]);
  sub_25397A538();
  sub_2534F8738();
  if (v0)
  {
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v2);
  }
  else
  {
    uint64_t v6 = sub_253B0A320();
    uint64_t v8 = v7;
    sub_25351C8C4();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_253B0A320();
    uint64_t v11 = v10;
    uint64_t v14 = v9;
    uint64_t v12 = sub_25397F58C();
    v13(v12);
    *uint64_t v4 = v6;
    v4[1] = v8;
    v4[2] = v14;
    v4[3] = v11;
    swift_bridgeObjectRetain();
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_2534847C8();
}

void sub_253977E08()
{
}

void sub_253977E20()
{
}

uint64_t static Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (_s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0())
  {
    uint64_t v4 = type metadata accessor for ActionParameterContext(0);
    sub_25397F578();
    BOOL v7 = v7 && v5 == v6;
    if (v7 || (sub_253B0A4C0() & 1) != 0)
    {
      uint64_t v8 = *(int *)(v4 + 24);
      uint64_t v9 = *(void *)(a1 + v8);
      uint64_t v10 = *(void *)(a1 + v8 + 8);
      uint64_t v12 = *(void *)(a1 + v8 + 16);
      uint64_t v11 = *(void *)(a1 + v8 + 24);
      uint64_t v13 = (void *)(a2 + v8);
      uint64_t v15 = v13[2];
      uint64_t v14 = v13[3];
      BOOL v16 = v9 == *v13 && v10 == v13[1];
      if (v16 || (sub_253B0A4C0() & 1) != 0)
      {
        if (v11)
        {
          if (v14)
          {
            BOOL v17 = v12 == v15 && v11 == v14;
            if (v17 || (sub_253B0A4C0() & 1) != 0) {
              return 1;
            }
          }
        }
        else if (!v14)
        {
          return 1;
        }
      }
    }
  }
  return 0;
}

uint64_t sub_253977F0C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000017 && a2 == 0x8000000253B130A0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_253B0A4C0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_253977F94()
{
  return 0xD000000000000017;
}

uint64_t sub_253977FB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253977F0C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_253977FE0(uint64_t a1)
{
  unint64_t v2 = sub_25397A584();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25397801C(uint64_t a1)
{
  unint64_t v2 = sub_25397A584();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery.encode(to:)()
{
  uint64_t v1 = sub_253462A5C(&qword_269CE5428);
  sub_253465998();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  sub_2534847E0();
  sub_25397F66C();
  sub_25397A584();
  sub_2534F82BC();
  type metadata accessor for ActionParameterContext(0);
  sub_253978890(&qword_269CE5438, (void (*)(uint64_t))type metadata accessor for ActionParameterContext);
  sub_253B0A440();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
}

void Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery.init(from:)()
{
  sub_2534847F8();
  uint64_t v2 = v1;
  type metadata accessor for ActionParameterContext(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v3);
  sub_25346CB04();
  sub_253462A5C(&qword_269CE5440);
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_25349888C();
  uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery(v5);
  uint64_t v7 = sub_25346CB4C(updated);
  MEMORY[0x270FA5388](v7);
  sub_2534966B0();
  sub_253472068(v2, v2[3]);
  sub_25397A584();
  sub_253B0A660();
  if (!v0)
  {
    sub_253978890(&qword_269CE5448, (void (*)(uint64_t))type metadata accessor for ActionParameterContext);
    sub_253B0A370();
    sub_2534659CC();
    v8();
    sub_253978970();
    sub_253978970();
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v2);
  sub_2534847C8();
}

void sub_25397836C()
{
}

uint64_t sub_253978384()
{
  return Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery.encode(to:)();
}

uint64_t static Session.StatusUpdateEvent.IntermediateQueryResult.Source.OmniSearchQuery.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_2539783A8(uint64_t a1)
{
  unint64_t v2 = sub_25397A5F0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539783E4(uint64_t a1)
{
  unint64_t v2 = sub_25397A5F0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Session.StatusUpdateEvent.IntermediateQueryResult.Source.OmniSearchQuery.encode(to:)(void *a1)
{
  uint64_t v3 = sub_253462A5C(&qword_269CE5450);
  sub_253465998();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  sub_253465A3C();
  sub_25397F800(a1);
  sub_25397A5F0();
  sub_25397F764();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
}

uint64_t Session.StatusUpdateEvent.IntermediateQueryResult.Source.OmniSearchQuery.init(from:)(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(a1);
}

uint64_t sub_25397850C(uint64_t a1)
{
  return Session.StatusUpdateEvent.IntermediateQueryResult.Source.OmniSearchQuery.init(from:)(a1);
}

uint64_t sub_253978524(void *a1)
{
  return Session.StatusUpdateEvent.IntermediateQueryResult.Source.OmniSearchQuery.encode(to:)(a1);
}

uint64_t static Session.StatusUpdateEvent.IntermediateQueryResult.Source.== infix(_:_:)()
{
  uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery(0);
  uint64_t v3 = sub_25346CB4C(updated);
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = sub_2534B464C();
  type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253462A5C(&qword_269CE5460);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  sub_2535E2544();
  sub_253973F44();
  sub_253973F44();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    if (swift_getEnumCaseMultiPayload() != 1) {
      goto LABEL_23;
    }
    goto LABEL_25;
  }
  sub_253973F44();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_253976288((uint64_t)v7, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery);
LABEL_25:
    sub_253472458(v0, &qword_269CE5460);
    return 0;
  }
  sub_253978970();
  if (_s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0())
  {
    uint64_t v10 = type metadata accessor for ActionParameterContext(0);
    uint64_t v11 = *(int *)(v10 + 20);
    uint64_t v12 = *(void *)&v7[v11];
    uint64_t v13 = *(void *)&v7[v11 + 8];
    uint64_t v14 = (void *)(v1 + v11);
    BOOL v15 = v12 == *v14 && v13 == v14[1];
    if (v15 || (sub_253B0A4C0() & 1) != 0)
    {
      uint64_t v16 = *(int *)(v10 + 24);
      uint64_t v17 = *(void *)&v7[v16];
      uint64_t v18 = *(void *)&v7[v16 + 8];
      uint64_t v20 = *(void *)&v7[v16 + 16];
      uint64_t v19 = *(void *)&v7[v16 + 24];
      uint64_t v21 = (void *)(v1 + v16);
      uint64_t v23 = v21[2];
      uint64_t v22 = v21[3];
      BOOL v24 = v17 == *v21 && v18 == v21[1];
      if (v24 || (sub_253B0A4C0() & 1) != 0)
      {
        if (v19)
        {
          if (v22)
          {
            BOOL v25 = v20 == v23 && v19 == v22;
            if (v25 || (sub_253B0A4C0() & 1) != 0) {
              goto LABEL_21;
            }
          }
        }
        else if (!v22)
        {
LABEL_21:
          sub_253976288(v1, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery);
          sub_25397F780();
LABEL_23:
          sub_253976288(v0, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source);
          return 1;
        }
      }
    }
  }
  sub_253976288(v1, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery);
  sub_25397F780();
  sub_253976288(v0, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source);
  return 0;
}

unint64_t sub_253978844()
{
  unint64_t result = qword_269CE5358;
  if (!qword_269CE5358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5358);
  }
  return result;
}

uint64_t sub_253978890(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2539788D8()
{
  unint64_t result = qword_26B248FD8;
  if (!qword_26B248FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B248FD8);
  }
  return result;
}

unint64_t sub_253978924()
{
  unint64_t result = qword_26B249EA8;
  if (!qword_26B249EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B249EA8);
  }
  return result;
}

uint64_t sub_253978970()
{
  uint64_t v1 = sub_2534D8D00();
  v2(v1);
  sub_25346CAF4();
  uint64_t v3 = sub_2534FE10C();
  v4(v3);
  return v0;
}

unint64_t sub_2539789C0()
{
  unint64_t result = qword_269CE5378;
  if (!qword_269CE5378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5378);
  }
  return result;
}

unint64_t sub_253978A0C()
{
  unint64_t result = qword_269CE5380;
  if (!qword_269CE5380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5380);
  }
  return result;
}

unint64_t sub_253978A58()
{
  unint64_t result = qword_269CE53A8;
  if (!qword_269CE53A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE53A8);
  }
  return result;
}

unint64_t sub_253978AA4()
{
  unint64_t result = qword_269CE53B0;
  if (!qword_269CE53B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE53B0);
  }
  return result;
}

unint64_t sub_253978AF0()
{
  unint64_t result = qword_269CE53C0;
  if (!qword_269CE53C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE53C0);
  }
  return result;
}

unint64_t sub_253978B3C()
{
  unint64_t result = qword_269CE53C8;
  if (!qword_269CE53C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE53C8);
  }
  return result;
}

uint64_t sub_253978B88(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72616553696E6D6FLL && a2 == 0xEA00000000006863;
  if (v2 || (sub_253B0A4C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000253B130C0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_253B0A4C0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_253978C84(char a1)
{
  if (a1) {
    return 0xD000000000000014;
  }
  else {
    return 0x72616553696E6D6FLL;
  }
}

uint64_t sub_253978CC4(uint64_t a1)
{
  unint64_t v2 = sub_25397A688();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253978D00(uint64_t a1)
{
  unint64_t v2 = sub_25397A688();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253978D3C()
{
  return sub_253978C84(*v0);
}

uint64_t sub_253978D44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253978B88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253978D6C(uint64_t a1)
{
  unint64_t v2 = sub_25397A63C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253978DA8(uint64_t a1)
{
  unint64_t v2 = sub_25397A63C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253978DE4(uint64_t a1)
{
  unint64_t v2 = sub_25397A6D4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253978E20(uint64_t a1)
{
  unint64_t v2 = sub_25397A6D4();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Session.StatusUpdateEvent.IntermediateQueryResult.Source.encode(to:)()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  sub_253462A5C(&qword_269CE5468);
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_2534D8F84(v5, v17);
  type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v6);
  sub_25346CB04();
  uint64_t v20 = v7;
  sub_253462A5C(&qword_269CE5470);
  sub_253465998();
  uint64_t v18 = v9;
  uint64_t v19 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = sub_25397F55C();
  type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(v10);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v11);
  sub_2534B34A4();
  uint64_t v12 = sub_253462A5C(&qword_269CE5478);
  sub_253465998();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  sub_2534966B0();
  sub_253472068(v3, v3[3]);
  sub_25397A63C();
  sub_253B0A680();
  sub_253973F44();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_253978970();
    sub_25397A688();
    sub_253B0A3A0();
    sub_253978890(&qword_269CE5490, (void (*)(uint64_t))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery);
    sub_253B0A440();
    sub_2534659CC();
    v16();
    sub_253976288(v20, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery);
  }
  else
  {
    sub_25397A6D4();
    sub_253B0A3A0();
    sub_25397A720();
    sub_253B0A440();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v0, v19);
  }
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v1, v12);
  sub_2534847C8();
}

void Session.StatusUpdateEvent.IntermediateQueryResult.Source.init(from:)()
{
  sub_2534847F8();
  uint64_t v48 = v0;
  uint64_t v3 = v2;
  uint64_t v40 = v4;
  sub_253462A5C(&qword_269CE54A8);
  sub_253465998();
  uint64_t v43 = v5;
  uint64_t v44 = v6;
  MEMORY[0x270FA5388](v5);
  sub_25346CB04();
  uint64_t v47 = v7;
  sub_253462A5C(&qword_269CE54B0);
  sub_253465998();
  uint64_t v41 = v9;
  uint64_t v42 = v8;
  MEMORY[0x270FA5388](v8);
  sub_2534D8F84(v10, v38[0]);
  sub_253462A5C(&qword_269CE54B8);
  sub_253465998();
  uint64_t v45 = v12;
  uint64_t v46 = v11;
  MEMORY[0x270FA5388](v11);
  sub_253465A3C();
  uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v14);
  sub_2534B340C();
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v38 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v38 - v19;
  sub_253472068(v3, v3[3]);
  sub_25397A63C();
  uint64_t v21 = v48;
  sub_253B0A660();
  if (v21) {
    goto LABEL_6;
  }
  v38[0] = (uint64_t)v18;
  v38[1] = (uint64_t)v20;
  v38[2] = v1;
  uint64_t v39 = updated;
  uint64_t v48 = v3;
  uint64_t v22 = sub_253B0A390();
  uint64_t v23 = *(void *)(v22 + 16);
  if (!v23
    || (sub_25347B78C(1, v23, v22, v22 + 32, 0, (2 * v23) | 1),
        uint64_t v25 = v24,
        unint64_t v27 = v26,
        swift_bridgeObjectRelease(),
        v25 != v27 >> 1))
  {
    uint64_t v28 = v39;
    sub_253B0A090();
    swift_allocError();
    unint64_t v30 = v29;
    sub_253462A5C(&qword_269CDB688);
    *unint64_t v30 = v28;
    sub_253B0A2D0();
    sub_253B0A080();
    sub_25346CCF8();
    v31();
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v32 = sub_25397F5B8();
    v33(v32);
    uint64_t v3 = v48;
LABEL_6:
    uint64_t v37 = (uint64_t)v3;
    goto LABEL_7;
  }
  sub_25397A688();
  sub_2534F8370();
  type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery(0);
  sub_253978890(&qword_269CE54C0, (void (*)(uint64_t))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery);
  sub_253B0A370();
  sub_2534659CC();
  v34();
  swift_unknownObjectRelease();
  uint64_t v35 = sub_25397F5B8();
  v36(v35);
  swift_storeEnumTagMultiPayload();
  sub_253978970();
  sub_253978970();
  uint64_t v37 = (uint64_t)v48;
LABEL_7:
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v37);
  sub_2534847C8();
}

uint64_t sub_2539796C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
  if (v2 || (sub_253B0A4C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656372756F73 && a2 == 0xE600000000000000;
    if (v6 || (sub_253B0A4C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x73746C75736572 && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_253B0A4C0();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_253979804(char a1)
{
  if (!a1) {
    return 0x7972657571;
  }
  if (a1 == 1) {
    return 0x656372756F73;
  }
  return 0x73746C75736572;
}

void sub_253979858()
{
}

void sub_253979870()
{
}

uint64_t sub_253979888()
{
  return sub_253979804(*v0);
}

uint64_t sub_253979890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2539796C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2539798B8(uint64_t a1)
{
  unint64_t v2 = sub_25397A7B8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539798F4(uint64_t a1)
{
  unint64_t v2 = sub_25397A7B8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Session.StatusUpdateEvent.IntermediateQueryResult.encode(to:)()
{
  sub_253462A5C(&qword_269CE54D0);
  sub_253465998();
  MEMORY[0x270FA5388](v1);
  sub_25397F66C();
  sub_25397A7B8();
  sub_2534F82BC();
  sub_25397F5D0();
  if (!v0)
  {
    type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult(0);
    sub_25351C8C4();
    type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(0);
    sub_253978890(&qword_269CE54E0, (void (*)(uint64_t))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source);
    sub_25397F654();
    sub_253462A5C(&qword_269CDF1B8);
    sub_25397A804((unint64_t *)&qword_269CE54E8, &qword_269CDBAB8);
    sub_25397F654();
  }
  uint64_t v2 = sub_2534F82A4();
  return v3(v2);
}

void Session.StatusUpdateEvent.IntermediateQueryResult.init(from:)()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v4);
  sub_2534B3294();
  sub_253462A5C(&qword_269CE54F0);
  sub_253465998();
  MEMORY[0x270FA5388](v5);
  sub_2534966B0();
  uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v7);
  sub_2534847E0();
  sub_253472068(v3, v3[3]);
  sub_25397A7B8();
  sub_253B0A660();
  if (v0)
  {
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v3);
  }
  else
  {
    *uint64_t v1 = sub_253B0A320();
    v1[1] = v8;
    sub_25351C8C4();
    sub_253978890(&qword_269CE54F8, (void (*)(uint64_t))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source);
    sub_253B0A370();
    sub_253978970();
    sub_253462A5C(&qword_269CDF1B8);
    sub_25397A804((unint64_t *)&qword_269CE5500, &qword_269CDBAD0);
    sub_253B0A370();
    uint64_t v9 = sub_25397F6E4();
    v10(v9);
    *(uint64_t *)((char *)v1 + *(int *)(updated + 24)) = v11;
    sub_253973F44();
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v3);
    sub_253976288((uint64_t)v1, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult);
  }
  sub_2534847C8();
}

void sub_253979E2C()
{
}

uint64_t sub_253979E44()
{
  return Session.StatusUpdateEvent.IntermediateQueryResult.encode(to:)();
}

uint64_t SessionStatusUpdate.Payload.init(ifps:)(uint64_t a1)
{
  uint64_t v4 = sub_2534F8A1C();
  uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(v4);
  uint64_t v6 = sub_25346CB4C(updated);
  MEMORY[0x270FA5388](v6);
  sub_25346CBDC();
  uint64_t v7 = sub_253B06C50();
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_2534AF2D8();
  type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult(v9);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v10);
  sub_2534B340C();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v17 - v12;
  type metadata accessor for Session.StatusUpdateEvent.Payload(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v14);
  sub_2534966B0();
  sub_253973F44();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_253978970();
    sub_253973F44();
    sub_253973F44();
    swift_bridgeObjectRetain();
    sub_25397A150(v1);
    swift_bridgeObjectRetain();
    sub_253B06C00();
    sub_253976288(v2, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult);
    sub_253976288(a1, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.Payload);
    sub_253976288((uint64_t)v13, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_253B06BF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_253976288(a1, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.Payload);
  }
  sub_253B06C60();
  sub_25346CAF4();
  sub_25346CCF8();
  return v15();
}

uint64_t sub_25397A150(uint64_t a1)
{
  uint64_t v2 = sub_2534F8A1C();
  uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery(v2);
  uint64_t v4 = sub_25346CB4C(updated);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v13 - v8;
  type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v10);
  sub_253465A3C();
  sub_253973F44();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_253978970();
    sub_253973F44();
    sub_25397A33C((uint64_t)v7);
    sub_253976288(a1, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source);
    sub_253976288((uint64_t)v9, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery);
  }
  else
  {
    sub_253B06C10();
    sub_253976288(a1, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source);
  }
  sub_253B06C50();
  sub_25346CAF4();
  sub_25346CCF8();
  return v11();
}

uint64_t sub_25397A33C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ActionParameterContext(0);
  MEMORY[0x270FA5388](v3);
  sub_2534AF2D8();
  uint64_t v4 = sub_253B06C30();
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_253465A3C();
  sub_253973F44();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_253B06C20();
  sub_253976288(v1, (void (*)(void))type metadata accessor for ActionParameterContext);
  sub_253B06C40();
  return sub_253976288(a1, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery);
}

unint64_t sub_25397A480()
{
  unint64_t result = qword_269CE53F0;
  if (!qword_269CE53F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE53F0);
  }
  return result;
}

unint64_t sub_25397A4CC()
{
  unint64_t result = qword_269CE5400;
  if (!qword_269CE5400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5400);
  }
  return result;
}

uint64_t type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_26B249F10);
}

unint64_t sub_25397A538()
{
  unint64_t result = qword_269CE5418;
  if (!qword_269CE5418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5418);
  }
  return result;
}

unint64_t sub_25397A584()
{
  unint64_t result = qword_269CE5430;
  if (!qword_269CE5430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5430);
  }
  return result;
}

uint64_t type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE5508);
}

unint64_t sub_25397A5F0()
{
  unint64_t result = qword_269CE5458;
  if (!qword_269CE5458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5458);
  }
  return result;
}

unint64_t sub_25397A63C()
{
  unint64_t result = qword_269CE5480;
  if (!qword_269CE5480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5480);
  }
  return result;
}

unint64_t sub_25397A688()
{
  unint64_t result = qword_269CE5488;
  if (!qword_269CE5488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5488);
  }
  return result;
}

unint64_t sub_25397A6D4()
{
  unint64_t result = qword_269CE5498;
  if (!qword_269CE5498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5498);
  }
  return result;
}

unint64_t sub_25397A720()
{
  unint64_t result = qword_269CE54A0;
  if (!qword_269CE54A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE54A0);
  }
  return result;
}

unint64_t sub_25397A76C()
{
  unint64_t result = qword_269CE54C8;
  if (!qword_269CE54C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE54C8);
  }
  return result;
}

unint64_t sub_25397A7B8()
{
  unint64_t result = qword_269CE54D8;
  if (!qword_269CE54D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE54D8);
  }
  return result;
}

uint64_t sub_25397A804(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25347907C(&qword_269CDF1B8);
    sub_253978890(a2, MEMORY[0x263F80508]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25397A898()
{
  return sub_253978890(&qword_269CDCCD0, MEMORY[0x263F07508]);
}

uint64_t *_s14descr27033EE49O17StatusUpdateEventVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253B055C0();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8((char *)a1, (char *)a2, v7);
    v8((char *)a1 + a3[5], (char *)a2 + a3[5], v7);
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v68 = v7;
    uint64_t v69 = v8;
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v9, 1, v7))
    {
      uint64_t v12 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v7);
    }
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (uint64_t *)((char *)a1 + v14);
    uint64_t v17 = (uint64_t *)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = (uint64_t *)((char *)a1 + v15);
    uint64_t v20 = (uint64_t *)((char *)a2 + v15);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = a3[9];
    uint64_t v23 = a3[10];
    uint64_t v24 = (uint64_t *)((char *)a1 + v22);
    uint64_t v25 = (uint64_t *)((char *)a2 + v22);
    uint64_t v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    unint64_t v27 = (uint64_t *)((char *)a1 + v23);
    uint64_t v28 = (uint64_t *)((char *)a2 + v23);
    uint64_t v29 = v28[1];
    void *v27 = *v28;
    v27[1] = v29;
    uint64_t v30 = a3[11];
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = sub_253B05550();
    uint64_t v67 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v67(v31, v32, v33);
    uint64_t v34 = (int *)type metadata accessor for Timepoint();
    *(void *)&v31[v34[5]] = *(void *)&v32[v34[5]];
    *(void *)&v31[v34[6]] = *(void *)&v32[v34[6]];
    v69(&v31[v34[7]], &v32[v34[7]], v68);
    uint64_t v35 = a3[12];
    uint64_t v36 = a3[13];
    uint64_t v37 = (uint64_t *)((char *)a1 + v35);
    uint64_t v38 = (uint64_t *)((char *)a2 + v35);
    uint64_t v39 = v38[1];
    *uint64_t v37 = *v38;
    v37[1] = v39;
    uint64_t v40 = (char *)a1 + v36;
    uint64_t v41 = (char *)a2 + v36;
    v40[8] = v41[8];
    *(void *)uint64_t v40 = *(void *)v41;
    uint64_t v42 = a3[14];
    uint64_t v43 = (uint64_t *)((char *)a1 + v42);
    uint64_t v44 = (uint64_t *)((char *)a2 + v42);
    type metadata accessor for Session.StatusUpdateEvent.Payload(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v45 = v44[1];
      *uint64_t v43 = *v44;
      v43[1] = v45;
      uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult(0);
      uint64_t v47 = *(int *)(updated + 20);
      uint64_t v48 = (char *)v43 + v47;
      uint64_t v49 = (char *)v44 + v47;
      uint64_t v50 = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v51 = sub_253B059D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v48, v49, v51);
        uint64_t v52 = type metadata accessor for ActionParameterContext(0);
        uint64_t v53 = *(int *)(v52 + 20);
        uint64_t v54 = &v48[v53];
        int v55 = &v49[v53];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        *(void *)uint64_t v54 = v57;
        *((void *)v54 + 1) = v56;
        uint64_t v58 = *(int *)(v52 + 24);
        char v59 = &v48[v58];
        uint64_t v60 = &v49[v58];
        uint64_t v61 = *((void *)v60 + 1);
        *(void *)char v59 = *(void *)v60;
        *((void *)v59 + 1) = v61;
        uint64_t v62 = *((void *)v60 + 3);
        *((void *)v59 + 2) = *((void *)v60 + 2);
        *((void *)v59 + 3) = v62;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
      }
      *(void *)((char *)v43 + *(int *)(updated + 24)) = *(void *)((char *)v44 + *(int *)(updated + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
      uint64_t v63 = v44[2];
      v43[1] = v44[1];
      v43[2] = v63;
      uint64_t v64 = v44[3];
      uint64_t v65 = v44[4];
      v43[3] = v64;
      v43[4] = v65;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s14descr27033EE49O17StatusUpdateEventVwxx(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_253B055C0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  uint64_t v6 = a1 + a2[6];
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, 1, v4)) {
    v5(v6, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[11];
  uint64_t v8 = sub_253B05550();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = type metadata accessor for Timepoint();
  v5(v7 + *(int *)(v9 + 28), v4);
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + a2[14];
  type metadata accessor for Session.StatusUpdateEvent.Payload(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = v10 + *(int *)(type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult(0) + 20);
    type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_253B059D0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
      type metadata accessor for ActionParameterContext(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t _s14descr27033EE49O17StatusUpdateEventVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253B055C0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v66 = v7;
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v8, 1, v6))
  {
    uint64_t v11 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v6);
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v12);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)(a1 + v13);
  uint64_t v18 = (void *)(a2 + v13);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = (void *)(a1 + v20);
  uint64_t v23 = (void *)(a2 + v20);
  uint64_t v24 = v23[1];
  void *v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = (void *)(a1 + v21);
  uint64_t v26 = (void *)(a2 + v21);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = a3[11];
  uint64_t v67 = a1;
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = sub_253B05550();
  uint64_t v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v65(v29, v30, v31);
  uint64_t v32 = (int *)type metadata accessor for Timepoint();
  *(void *)(v29 + v32[5]) = *(void *)(v30 + v32[5]);
  *(void *)(v29 + v32[6]) = *(void *)(v30 + v32[6]);
  v66(v29 + v32[7], v30 + v32[7], v6);
  uint64_t v33 = a3[12];
  uint64_t v34 = a3[13];
  uint64_t v35 = (void *)(v67 + v33);
  uint64_t v36 = (void *)(a2 + v33);
  uint64_t v37 = v36[1];
  *uint64_t v35 = *v36;
  v35[1] = v37;
  uint64_t v38 = v67 + v34;
  uint64_t v39 = a2 + v34;
  *(unsigned char *)(v38 + 8) = *(unsigned char *)(v39 + 8);
  *(void *)uint64_t v38 = *(void *)v39;
  uint64_t v40 = a3[14];
  uint64_t v41 = (void *)(v67 + v40);
  uint64_t v42 = (void *)(a2 + v40);
  type metadata accessor for Session.StatusUpdateEvent.Payload(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v43 = v42[1];
    *uint64_t v41 = *v42;
    v41[1] = v43;
    uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult(0);
    uint64_t v45 = *(int *)(updated + 20);
    uint64_t v46 = (char *)v41 + v45;
    uint64_t v47 = (char *)v42 + v45;
    uint64_t v48 = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v49 = sub_253B059D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v46, v47, v49);
      uint64_t v50 = type metadata accessor for ActionParameterContext(0);
      uint64_t v51 = *(int *)(v50 + 20);
      uint64_t v52 = &v46[v51];
      uint64_t v53 = &v47[v51];
      uint64_t v55 = *(void *)v53;
      uint64_t v54 = *((void *)v53 + 1);
      *(void *)uint64_t v52 = v55;
      *((void *)v52 + 1) = v54;
      uint64_t v56 = *(int *)(v50 + 24);
      uint64_t v57 = &v46[v56];
      uint64_t v58 = &v47[v56];
      uint64_t v59 = *((void *)v58 + 1);
      *(void *)uint64_t v57 = *(void *)v58;
      *((void *)v57 + 1) = v59;
      uint64_t v60 = *((void *)v58 + 3);
      *((void *)v57 + 2) = *((void *)v58 + 2);
      *((void *)v57 + 3) = v60;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
    }
    *(void *)((char *)v41 + *(int *)(updated + 24)) = *(void *)((char *)v42 + *(int *)(updated + 24));
  }
  else
  {
    *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
    uint64_t v61 = v42[2];
    v41[1] = v42[1];
    v41[2] = v61;
    uint64_t v62 = v42[3];
    uint64_t v63 = v42[4];
    v41[3] = v62;
    v41[4] = v63;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v67;
}

uint64_t _s14descr27033EE49O17StatusUpdateEventVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253B055C0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v8(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1 + v9, 1, v6);
  int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v10, v11, v6);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    uint64_t v14 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[9];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  void *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[10];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  *uint64_t v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[11];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_253B05550();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = (int *)type metadata accessor for Timepoint();
  *(void *)(v28 + v31[5]) = *(void *)(v29 + v31[5]);
  *(void *)(v28 + v31[6]) = *(void *)(v29 + v31[6]);
  v8(v28 + v31[7], v29 + v31[7], v6);
  uint64_t v32 = a3[12];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (void *)(a2 + v32);
  void *v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[13];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = (uint64_t *)(a2 + v35);
  uint64_t v38 = *v37;
  *(unsigned char *)(v36 + 8) = *((unsigned char *)v37 + 8);
  *(void *)uint64_t v36 = v38;
  if (a1 != a2)
  {
    uint64_t v39 = a3[14];
    uint64_t v40 = (void *)(a1 + v39);
    uint64_t v41 = (void *)(a2 + v39);
    sub_253976288(a1 + v39, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.Payload);
    type metadata accessor for Session.StatusUpdateEvent.Payload(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v40 = *v41;
      v40[1] = v41[1];
      uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult(0);
      uint64_t v43 = *(int *)(updated + 20);
      uint64_t v44 = (char *)v40 + v43;
      uint64_t v45 = (char *)v41 + v43;
      uint64_t v46 = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v47 = sub_253B059D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v44, v45, v47);
        uint64_t v48 = type metadata accessor for ActionParameterContext(0);
        uint64_t v49 = *(int *)(v48 + 20);
        uint64_t v50 = &v44[v49];
        uint64_t v51 = &v45[v49];
        *(void *)uint64_t v50 = *(void *)v51;
        *((void *)v50 + 1) = *((void *)v51 + 1);
        uint64_t v52 = *(int *)(v48 + 24);
        uint64_t v53 = &v44[v52];
        uint64_t v54 = &v45[v52];
        *(void *)uint64_t v53 = *(void *)v54;
        *((void *)v53 + 1) = *((void *)v54 + 1);
        *((void *)v53 + 2) = *((void *)v54 + 2);
        *((void *)v53 + 3) = *((void *)v54 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
      }
      *(void *)((char *)v40 + *(int *)(updated + 24)) = *(void *)((char *)v41 + *(int *)(updated + 24));
    }
    else
    {
      *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
      v40[1] = v41[1];
      v40[2] = v41[2];
      v40[3] = v41[3];
      v40[4] = v41[4];
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s14descr27033EE49O17StatusUpdateEventVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253B055C0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2 + v8, 1, v6))
  {
    uint64_t v11 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v6);
  }
  uint64_t v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  uint64_t v13 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  uint64_t v14 = a3[11];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_253B05550();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  uint64_t v18 = (int *)type metadata accessor for Timepoint();
  *(void *)(v15 + v18[5]) = *(void *)(v16 + v18[5]);
  *(void *)(v15 + v18[6]) = *(void *)(v16 + v18[6]);
  v7(v15 + v18[7], v16 + v18[7], v6);
  uint64_t v19 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  *(void *)uint64_t v20 = *(void *)v21;
  uint64_t v22 = a3[14];
  uint64_t v23 = (_OWORD *)(a1 + v22);
  uint64_t v24 = (_OWORD *)(a2 + v22);
  uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.Payload(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v23 = *v24;
    uint64_t v26 = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult(0);
    uint64_t v27 = *(int *)(v26 + 20);
    uint64_t v28 = (char *)v23 + v27;
    uint64_t v29 = (char *)v24 + v27;
    uint64_t v30 = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v31 = sub_253B059D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v28, v29, v31);
      uint64_t v32 = type metadata accessor for ActionParameterContext(0);
      *(_OWORD *)&v28[*(int *)(v32 + 20)] = *(_OWORD *)&v29[*(int *)(v32 + 20)];
      uint64_t v33 = *(int *)(v32 + 24);
      uint64_t v34 = &v28[v33];
      uint64_t v35 = &v29[v33];
      long long v36 = *((_OWORD *)v35 + 1);
      *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
      *((_OWORD *)v34 + 1) = v36;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    *(void *)((char *)v23 + *(int *)(v26 + 24)) = *(void *)((char *)v24 + *(int *)(v26 + 24));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v23, v24, *(void *)(*(void *)(updated - 8) + 64));
  }
  return a1;
}

uint64_t _s14descr27033EE49O17StatusUpdateEventVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253B055C0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v8(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1 + v9, 1, v6);
  int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v10, v11, v6);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    uint64_t v14 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  void *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[9];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (uint64_t *)(a2 + v25);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  void *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[10];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (uint64_t *)(a2 + v30);
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  *uint64_t v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[11];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_253B05550();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = (int *)type metadata accessor for Timepoint();
  *(void *)(v36 + v39[5]) = *(void *)(v37 + v39[5]);
  *(void *)(v36 + v39[6]) = *(void *)(v37 + v39[6]);
  v8(v36 + v39[7], v37 + v39[7], v6);
  uint64_t v40 = a3[12];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (uint64_t *)(a2 + v40);
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  *uint64_t v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[13];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  *(void *)uint64_t v46 = *(void *)v47;
  *(unsigned char *)(v46 + 8) = *(unsigned char *)(v47 + 8);
  if (a1 != a2)
  {
    uint64_t v48 = a3[14];
    uint64_t v49 = (_OWORD *)(a1 + v48);
    uint64_t v50 = (_OWORD *)(a2 + v48);
    sub_253976288(a1 + v48, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.Payload);
    uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.Payload(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v49 = *v50;
      uint64_t v52 = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult(0);
      uint64_t v53 = *(int *)(v52 + 20);
      uint64_t v54 = (char *)v49 + v53;
      uint64_t v55 = (char *)v50 + v53;
      uint64_t v56 = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v57 = sub_253B059D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v54, v55, v57);
        uint64_t v58 = type metadata accessor for ActionParameterContext(0);
        *(_OWORD *)&v54[*(int *)(v58 + 20)] = *(_OWORD *)&v55[*(int *)(v58 + 20)];
        uint64_t v59 = *(int *)(v58 + 24);
        uint64_t v60 = &v54[v59];
        uint64_t v61 = &v55[v59];
        long long v62 = *((_OWORD *)v61 + 1);
        *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
        *((_OWORD *)v60 + 1) = v62;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
      }
      *(void *)((char *)v49 + *(int *)(v52 + 24)) = *(void *)((char *)v50 + *(int *)(v52 + 24));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v49, v50, *(void *)(*(void *)(updated - 8) + 64));
    }
  }
  return a1;
}

uint64_t _s14descr27033EE49O17StatusUpdateEventVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25397BFDC);
}

uint64_t sub_25397BFDC(uint64_t a1, uint64_t a2, int *a3)
{
  sub_253B055C0();
  sub_253486600();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t updated = v6;
    uint64_t v9 = a1;
  }
  else
  {
    sub_253462A5C((uint64_t *)&unk_26B248CB0);
    sub_253486600();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t updated = v10;
      uint64_t v12 = a3[6];
    }
    else
    {
      if (a2 == 0x7FFFFFFF) {
        return sub_2534F89A0(*(void *)(a1 + a3[7] + 8));
      }
      type metadata accessor for Timepoint();
      sub_253486600();
      if (*(_DWORD *)(v15 + 84) == a2)
      {
        uint64_t updated = v14;
        uint64_t v12 = a3[11];
      }
      else
      {
        uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.Payload(0);
        uint64_t v12 = a3[14];
      }
    }
    uint64_t v9 = a1 + v12;
  }
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, a2, updated);
}

uint64_t _s14descr27033EE49O17StatusUpdateEventVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25397C0E4);
}

void sub_25397C0E4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_253B055C0();
  sub_253486600();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t updated = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_253462A5C((uint64_t *)&unk_26B248CB0);
    sub_253486600();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t updated = v12;
      uint64_t v14 = a4[6];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(void *)(a1 + a4[7] + 8) = (a2 - 1);
        return;
      }
      type metadata accessor for Timepoint();
      sub_253486600();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t updated = v15;
        uint64_t v14 = a4[11];
      }
      else
      {
        uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.Payload(0);
        uint64_t v14 = a4[14];
      }
    }
    uint64_t v11 = a1 + v14;
  }
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v11, a2, a2, updated);
}

void sub_25397C1E0()
{
  sub_253B055C0();
  if (v0 <= 0x3F)
  {
    sub_253517EC0();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Timepoint();
      if (v2 <= 0x3F)
      {
        type metadata accessor for Session.StatusUpdateEvent.Payload(319);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *_s14descr27033EE49O17StatusUpdateEventV7PayloadOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult(0);
      uint64_t v8 = *(int *)(updated + 20);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v12 = sub_253B059D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
        uint64_t v13 = type metadata accessor for ActionParameterContext(0);
        uint64_t v14 = *(int *)(v13 + 20);
        uint64_t v15 = &v9[v14];
        uint64_t v16 = &v10[v14];
        uint64_t v18 = *(void *)v16;
        uint64_t v17 = *((void *)v16 + 1);
        *(void *)uint64_t v15 = v18;
        *((void *)v15 + 1) = v17;
        uint64_t v19 = *(int *)(v13 + 24);
        uint64_t v20 = &v9[v19];
        uint64_t v21 = &v10[v19];
        uint64_t v22 = *((void *)v21 + 1);
        *(void *)uint64_t v20 = *(void *)v21;
        *((void *)v20 + 1) = v22;
        uint64_t v23 = *((void *)v21 + 3);
        *((void *)v20 + 2) = *((void *)v21 + 2);
        *((void *)v20 + 3) = v23;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      }
      *(uint64_t *)((char *)a1 + *(int *)(updated + 24)) = *(uint64_t *)((char *)a2 + *(int *)(updated + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      uint64_t v25 = a2[2];
      a1[1] = a2[1];
      a1[2] = v25;
      uint64_t v26 = a2[3];
      uint64_t v27 = a2[4];
      a1[3] = v26;
      a1[4] = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s14descr27033EE49O17StatusUpdateEventV7PayloadOwxx(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = a1 + *(int *)(type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult(0) + 20);
    type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v3 = sub_253B059D0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
      type metadata accessor for ActionParameterContext(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void *_s14descr27033EE49O17StatusUpdateEventV7PayloadOwcp(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult(0);
    uint64_t v6 = *(int *)(updated + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_253B059D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v8, v10);
      uint64_t v11 = type metadata accessor for ActionParameterContext(0);
      uint64_t v12 = *(int *)(v11 + 20);
      uint64_t v13 = &v7[v12];
      uint64_t v14 = &v8[v12];
      uint64_t v16 = *(void *)v14;
      uint64_t v15 = *((void *)v14 + 1);
      *(void *)uint64_t v13 = v16;
      *((void *)v13 + 1) = v15;
      uint64_t v17 = *(int *)(v11 + 24);
      uint64_t v18 = &v7[v17];
      uint64_t v19 = &v8[v17];
      uint64_t v20 = *((void *)v19 + 1);
      *(void *)uint64_t v18 = *(void *)v19;
      *((void *)v18 + 1) = v20;
      uint64_t v21 = *((void *)v19 + 3);
      *((void *)v18 + 2) = *((void *)v19 + 2);
      *((void *)v18 + 3) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    *(void *)((char *)a1 + *(int *)(updated + 24)) = *(void *)((char *)a2 + *(int *)(updated + 24));
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v22 = a2[2];
    a1[1] = a2[1];
    a1[2] = v22;
    uint64_t v23 = a2[3];
    uint64_t v24 = a2[4];
    a1[3] = v23;
    a1[4] = v24;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *_s14descr27033EE49O17StatusUpdateEventV7PayloadOwca(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_253976288((uint64_t)a1, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.Payload);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult(0);
      uint64_t v5 = *(int *)(updated + 20);
      uint64_t v6 = (char *)a1 + v5;
      uint64_t v7 = (char *)a2 + v5;
      uint64_t v8 = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v9 = sub_253B059D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v6, v7, v9);
        uint64_t v10 = type metadata accessor for ActionParameterContext(0);
        uint64_t v11 = *(int *)(v10 + 20);
        uint64_t v12 = &v6[v11];
        uint64_t v13 = &v7[v11];
        *(void *)uint64_t v12 = *(void *)v13;
        *((void *)v12 + 1) = *((void *)v13 + 1);
        uint64_t v14 = *(int *)(v10 + 24);
        uint64_t v15 = &v6[v14];
        uint64_t v16 = &v7[v14];
        *(void *)uint64_t v15 = *(void *)v16;
        *((void *)v15 + 1) = *((void *)v16 + 1);
        *((void *)v15 + 2) = *((void *)v16 + 2);
        *((void *)v15 + 3) = *((void *)v16 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
      }
      *(void *)((char *)a1 + *(int *)(updated + 24)) = *(void *)((char *)a2 + *(int *)(updated + 24));
    }
    else
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *_s14descr27033EE49O17StatusUpdateEventV7PayloadOwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult(0);
    uint64_t v7 = *(int *)(updated + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_253B059D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      uint64_t v12 = type metadata accessor for ActionParameterContext(0);
      *(_OWORD *)&v8[*(int *)(v12 + 20)] = *(_OWORD *)&v9[*(int *)(v12 + 20)];
      uint64_t v13 = *(int *)(v12 + 24);
      uint64_t v14 = &v8[v13];
      uint64_t v15 = &v9[v13];
      long long v16 = *((_OWORD *)v15 + 1);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v16;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    *(void *)((char *)a1 + *(int *)(updated + 24)) = *(void *)((char *)a2 + *(int *)(updated + 24));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *_s14descr27033EE49O17StatusUpdateEventV7PayloadOwta(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_253976288((uint64_t)a1, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.Payload);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult(0);
      uint64_t v7 = *(int *)(updated + 20);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v11 = sub_253B059D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
        uint64_t v12 = type metadata accessor for ActionParameterContext(0);
        *(_OWORD *)&v8[*(int *)(v12 + 20)] = *(_OWORD *)&v9[*(int *)(v12 + 20)];
        uint64_t v13 = *(int *)(v12 + 24);
        uint64_t v14 = &v8[v13];
        uint64_t v15 = &v9[v13];
        long long v16 = *((_OWORD *)v15 + 1);
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = v16;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
      }
      *(void *)((char *)a1 + *(int *)(updated + 24)) = *(void *)((char *)a2 + *(int *)(updated + 24));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25397CCFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25397DF0C(a1, a2, a3, (uint64_t)"(", type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult);
}

uint64_t destroy for ClientAction.PersonQuery.Handle()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s14descr27033EE49O17StatusUpdateEventV27ToolExecutionProgressUpdateVwcp(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14descr27033EE49O17StatusUpdateEventV27ToolExecutionProgressUpdateVwca(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14descr27033EE49O17StatusUpdateEventV27ToolExecutionProgressUpdateVwta(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientAction.PersonQuery.Handle(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientAction.PersonQuery.Handle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

void type metadata accessor for Session.StatusUpdateEvent.ToolExecutionProgressUpdate()
{
}

uint64_t *_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_253B059D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
      uint64_t v13 = type metadata accessor for ActionParameterContext(0);
      uint64_t v14 = *(int *)(v13 + 20);
      uint64_t v15 = &v9[v14];
      long long v16 = &v10[v14];
      uint64_t v18 = *(void *)v16;
      uint64_t v17 = *((void *)v16 + 1);
      *(void *)uint64_t v15 = v18;
      *((void *)v15 + 1) = v17;
      uint64_t v19 = *(int *)(v13 + 24);
      uint64_t v20 = &v9[v19];
      uint64_t v21 = &v10[v19];
      uint64_t v22 = *((void *)v21 + 1);
      *(void *)uint64_t v20 = *(void *)v21;
      *((void *)v20 + 1) = v22;
      uint64_t v23 = *((void *)v21 + 3);
      *((void *)v20 + 2) = *((void *)v21 + 2);
      *((void *)v20 + 3) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(updated - 8) + 64));
    }
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t _s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultVwxx(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_253B059D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    type metadata accessor for ActionParameterContext(0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void *_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultVwcp(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_253B059D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v8, v9, v11);
    uint64_t v12 = type metadata accessor for ActionParameterContext(0);
    uint64_t v13 = *(int *)(v12 + 20);
    uint64_t v14 = &v8[v13];
    uint64_t v15 = &v9[v13];
    uint64_t v17 = *(void *)v15;
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = v17;
    *((void *)v14 + 1) = v16;
    uint64_t v18 = *(int *)(v12 + 24);
    uint64_t v19 = &v8[v18];
    uint64_t v20 = &v9[v18];
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    uint64_t v22 = *((void *)v20 + 3);
    *((void *)v19 + 2) = *((void *)v20 + 2);
    *((void *)v19 + 3) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(updated - 8) + 64));
  }
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

void *_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultVwca(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_253976288((uint64_t)a1 + v6, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source);
    uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_253B059D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v8, v10);
      uint64_t v11 = type metadata accessor for ActionParameterContext(0);
      uint64_t v12 = *(int *)(v11 + 20);
      uint64_t v13 = &v7[v12];
      uint64_t v14 = &v8[v12];
      *(void *)uint64_t v13 = *(void *)v14;
      *((void *)v13 + 1) = *((void *)v14 + 1);
      uint64_t v15 = *(int *)(v11 + 24);
      uint64_t v16 = &v7[v15];
      uint64_t v17 = &v8[v15];
      *(void *)uint64_t v16 = *(void *)v17;
      *((void *)v16 + 1) = *((void *)v17 + 1);
      *((void *)v16 + 2) = *((void *)v17 + 2);
      *((void *)v16 + 3) = *((void *)v17 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(updated - 8) + 64));
    }
  }
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_253B059D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    uint64_t v11 = type metadata accessor for ActionParameterContext(0);
    *(_OWORD *)&v7[*(int *)(v11 + 20)] = *(_OWORD *)&v8[*(int *)(v11 + 20)];
    uint64_t v12 = *(int *)(v11 + 24);
    uint64_t v13 = &v7[v12];
    uint64_t v14 = &v8[v12];
    long long v15 = *((_OWORD *)v14 + 1);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v15;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(updated - 8) + 64));
  }
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultVwta(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_253976288((uint64_t)a1 + v7, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source);
    uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_253B059D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      uint64_t v12 = type metadata accessor for ActionParameterContext(0);
      *(_OWORD *)&v8[*(int *)(v12 + 20)] = *(_OWORD *)&v9[*(int *)(v12 + 20)];
      uint64_t v13 = *(int *)(v12 + 24);
      uint64_t v14 = &v8[v13];
      long long v15 = &v9[v13];
      long long v16 = *((_OWORD *)v15 + 1);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v16;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(updated - 8) + 64));
    }
  }
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25397D708);
}

uint64_t sub_25397D708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_2534F89A0(*(void *)(a1 + 8));
  }
  uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(0);
  uint64_t v8 = a1 + *(int *)(a3 + 20);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, a2, updated);
}

uint64_t _s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25397D798);
}

uint64_t sub_25397D798(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t updated = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(0);
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v8, a2, a2, updated);
  }
  return result;
}

uint64_t sub_25397D818()
{
  uint64_t result = type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_253B059D0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = type metadata accessor for ActionParameterContext(0);
      uint64_t v9 = *(int *)(v8 + 20);
      uint64_t v10 = (uint64_t *)((char *)a1 + v9);
      uint64_t v11 = (uint64_t *)((char *)a2 + v9);
      uint64_t v13 = *v11;
      uint64_t v12 = v11[1];
      void *v10 = v13;
      v10[1] = v12;
      uint64_t v14 = *(int *)(v8 + 24);
      long long v15 = (uint64_t *)((char *)a1 + v14);
      long long v16 = (uint64_t *)((char *)a2 + v14);
      uint64_t v17 = v16[1];
      *long long v15 = *v16;
      v15[1] = v17;
      uint64_t v18 = v16[3];
      v15[2] = v16[2];
      v15[3] = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t _s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceOwxx(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = sub_253B059D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    type metadata accessor for ActionParameterContext(0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceOwcp(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_253B059D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = type metadata accessor for ActionParameterContext(0);
    uint64_t v8 = *(int *)(v7 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v12 = *(void *)v10;
    uint64_t v11 = *((void *)v10 + 1);
    *(void *)uint64_t v9 = v12;
    *((void *)v9 + 1) = v11;
    uint64_t v13 = *(int *)(v7 + 24);
    uint64_t v14 = &a1[v13];
    long long v15 = &a2[v13];
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = *((void *)v15 + 3);
    *((void *)v14 + 2) = *((void *)v15 + 2);
    *((void *)v14 + 3) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceOwca(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_253976288((uint64_t)a1, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_253B059D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for ActionParameterContext(0);
      uint64_t v8 = *(int *)(v7 + 20);
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      *(void *)uint64_t v9 = *(void *)v10;
      *((void *)v9 + 1) = *((void *)v10 + 1);
      uint64_t v11 = *(int *)(v7 + 24);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      *(void *)uint64_t v12 = *(void *)v13;
      *((void *)v12 + 1) = *((void *)v13 + 1);
      *((void *)v12 + 2) = *((void *)v13 + 2);
      *((void *)v12 + 3) = *((void *)v13 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

char *_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceOwtk(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_253B059D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = type metadata accessor for ActionParameterContext(0);
    *(_OWORD *)&a1[*(int *)(v7 + 20)] = *(_OWORD *)&a2[*(int *)(v7 + 20)];
    uint64_t v8 = *(int *)(v7 + 24);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    long long v11 = *((_OWORD *)v10 + 1);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v11;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceOwta(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_253976288((uint64_t)a1, (void (*)(void))type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_253B059D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for ActionParameterContext(0);
      *(_OWORD *)&a1[*(int *)(v7 + 20)] = *(_OWORD *)&a2[*(int *)(v7 + 20)];
      uint64_t v8 = *(int *)(v7 + 24);
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      long long v11 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v11;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25397DEE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25397DF0C(a1, a2, a3, MEMORY[0x263F8EE68] + 64, type metadata accessor for ActionParameterContext);
}

uint64_t sub_25397DF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t result = a5(319);
  if (v6 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceO20AppEntityStringQueryVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for ActionParameterContext(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = sub_253B059D0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(v6 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    void *v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = *(int *)(v6 + 24);
    uint64_t v13 = (uint64_t *)((char *)a1 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = v14[3];
    _OWORD v13[2] = v14[2];
    v13[3] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceO20AppEntityStringQueryVwxx(uint64_t a1)
{
  uint64_t v2 = sub_253B059D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for ActionParameterContext(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceO20AppEntityStringQueryVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253B059D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for ActionParameterContext(0);
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (uint64_t *)(a2 + v6);
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  *uint64_t v7 = v10;
  v7[1] = v9;
  uint64_t v11 = *(int *)(v5 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = v13[3];
  v12[2] = v13[2];
  v12[3] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceO20AppEntityStringQueryVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253B059D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for ActionParameterContext(0);
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(v5 + 24);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = a2 + v9;
  void *v10 = *(void *)(a2 + v9);
  v10[1] = *(void *)(a2 + v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[2] = *(void *)(v11 + 16);
  v10[3] = *(void *)(v11 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceO20AppEntityStringQueryVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253B059D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for ActionParameterContext(0);
  *(_OWORD *)(a1 + *(int *)(v5 + 20)) = *(_OWORD *)(a2 + *(int *)(v5 + 20));
  uint64_t v6 = *(int *)(v5 + 24);
  uint64_t v7 = (_OWORD *)(a1 + v6);
  uint64_t v8 = (_OWORD *)(a2 + v6);
  long long v9 = v8[1];
  *uint64_t v7 = *v8;
  v7[1] = v9;
  return a1;
}

uint64_t _s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceO20AppEntityStringQueryVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253B059D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for ActionParameterContext(0);
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (uint64_t *)(a2 + v6);
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  *uint64_t v7 = v10;
  v7[1] = v9;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(v5 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = v13[3];
  v12[2] = v13[2];
  v12[3] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceO20AppEntityStringQueryVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25397E44C);
}

uint64_t sub_25397E44C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActionParameterContext(0);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, a2, v4);
}

uint64_t _s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceO20AppEntityStringQueryVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25397E4A8);
}

uint64_t sub_25397E4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActionParameterContext(0);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, a2, a2, v4);
}

uint64_t sub_25397E4F4()
{
  uint64_t result = type metadata accessor for ActionParameterContext(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext()
{
}

void type metadata accessor for Session.StatusUpdateEvent.IntermediateQueryResult.Source.OmniSearchQuery()
{
}

ValueMetadata *_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV10CodingKeysOMa()
{
  return &_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV10CodingKeysON;
}

ValueMetadata *_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceO10CodingKeysOMa()
{
  return &_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceO10CodingKeysON;
}

ValueMetadata *_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceO20OmniSearchCodingKeysOMa()
{
  return &_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceO20OmniSearchCodingKeysON;
}

ValueMetadata *_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceO30AppEntityStringQueryCodingKeysOMa()
{
  return &_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceO30AppEntityStringQueryCodingKeysON;
}

ValueMetadata *_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceO15OmniSearchQueryV10CodingKeysOMa()
{
  return &_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceO15OmniSearchQueryV10CodingKeysON;
}

ValueMetadata *_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceO20AppEntityStringQueryV10CodingKeysOMa()
{
  return &_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceO20AppEntityStringQueryV10CodingKeysON;
}

ValueMetadata *_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceO20AppEntityStringQueryV13ActionContextV10CodingKeysOMa()
{
  return &_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceO20AppEntityStringQueryV13ActionContextV10CodingKeysON;
}

unsigned char *_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25397E6E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr27033EE49O17StatusUpdateEventV27ToolExecutionProgressUpdateV10CodingKeysOMa()
{
  return &_s14descr27033EE49O17StatusUpdateEventV27ToolExecutionProgressUpdateV10CodingKeysON;
}

unsigned char *_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25397E7E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr27033EE49O17StatusUpdateEventV7PayloadO10CodingKeysOMa()
{
  return &_s14descr27033EE49O17StatusUpdateEventV7PayloadO10CodingKeysON;
}

ValueMetadata *_s14descr27033EE49O17StatusUpdateEventV7PayloadO33ExecutionProgressUpdateCodingKeysOMa()
{
  return &_s14descr27033EE49O17StatusUpdateEventV7PayloadO33ExecutionProgressUpdateCodingKeysON;
}

unsigned char *_s14descr27033EE49O17StatusUpdateEventV23IntermediateQueryResultV6SourceO20OmniSearchCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25397E8C8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s14descr27033EE49O17StatusUpdateEventV7PayloadO33IntermediateQueryResultCodingKeysOMa()
{
  return &_s14descr27033EE49O17StatusUpdateEventV7PayloadO33IntermediateQueryResultCodingKeysON;
}

unsigned char *_s14descr27033EE49O17StatusUpdateEventV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25397E9CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr27033EE49O17StatusUpdateEventV10CodingKeysOMa()
{
  return &_s14descr27033EE49O17StatusUpdateEventV10CodingKeysON;
}

unint64_t sub_25397EA08()
{
  unint64_t result = qword_269CE5518;
  if (!qword_269CE5518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5518);
  }
  return result;
}

unint64_t sub_25397EA58()
{
  unint64_t result = qword_269CE5520;
  if (!qword_269CE5520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5520);
  }
  return result;
}

unint64_t sub_25397EAA8()
{
  unint64_t result = qword_269CE5528;
  if (!qword_269CE5528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5528);
  }
  return result;
}

unint64_t sub_25397EAF8()
{
  unint64_t result = qword_269CE5530;
  if (!qword_269CE5530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5530);
  }
  return result;
}

unint64_t sub_25397EB48()
{
  unint64_t result = qword_269CE5538;
  if (!qword_269CE5538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5538);
  }
  return result;
}

unint64_t sub_25397EB98()
{
  unint64_t result = qword_269CE5540;
  if (!qword_269CE5540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5540);
  }
  return result;
}

unint64_t sub_25397EBE8()
{
  unint64_t result = qword_269CE5548;
  if (!qword_269CE5548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5548);
  }
  return result;
}

unint64_t sub_25397EC38()
{
  unint64_t result = qword_269CE5550;
  if (!qword_269CE5550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5550);
  }
  return result;
}

unint64_t sub_25397EC88()
{
  unint64_t result = qword_269CE5558;
  if (!qword_269CE5558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5558);
  }
  return result;
}

unint64_t sub_25397ECD8()
{
  unint64_t result = qword_269CE5560;
  if (!qword_269CE5560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5560);
  }
  return result;
}

unint64_t sub_25397ED28()
{
  unint64_t result = qword_269CE5568;
  if (!qword_269CE5568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5568);
  }
  return result;
}

unint64_t sub_25397ED78()
{
  unint64_t result = qword_269CE5570;
  if (!qword_269CE5570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5570);
  }
  return result;
}

unint64_t sub_25397EDC8()
{
  unint64_t result = qword_269CE5578;
  if (!qword_269CE5578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5578);
  }
  return result;
}

unint64_t sub_25397EE18()
{
  unint64_t result = qword_269CE5580;
  if (!qword_269CE5580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5580);
  }
  return result;
}

unint64_t sub_25397EE68()
{
  unint64_t result = qword_269CE5588;
  if (!qword_269CE5588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5588);
  }
  return result;
}

unint64_t sub_25397EEB8()
{
  unint64_t result = qword_269CE5590;
  if (!qword_269CE5590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5590);
  }
  return result;
}

unint64_t sub_25397EF08()
{
  unint64_t result = qword_269CE5598;
  if (!qword_269CE5598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5598);
  }
  return result;
}

unint64_t sub_25397EF58()
{
  unint64_t result = qword_269CE55A0;
  if (!qword_269CE55A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE55A0);
  }
  return result;
}

unint64_t sub_25397EFA8()
{
  unint64_t result = qword_269CE55A8;
  if (!qword_269CE55A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE55A8);
  }
  return result;
}

unint64_t sub_25397EFF8()
{
  unint64_t result = qword_269CE55B0;
  if (!qword_269CE55B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE55B0);
  }
  return result;
}

unint64_t sub_25397F048()
{
  unint64_t result = qword_269CE55B8;
  if (!qword_269CE55B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE55B8);
  }
  return result;
}

unint64_t sub_25397F098()
{
  unint64_t result = qword_269CE55C0;
  if (!qword_269CE55C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE55C0);
  }
  return result;
}

unint64_t sub_25397F0E8()
{
  unint64_t result = qword_269CE55C8;
  if (!qword_269CE55C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE55C8);
  }
  return result;
}

unint64_t sub_25397F138()
{
  unint64_t result = qword_269CE55D0;
  if (!qword_269CE55D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE55D0);
  }
  return result;
}

unint64_t sub_25397F188()
{
  unint64_t result = qword_269CE55D8;
  if (!qword_269CE55D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE55D8);
  }
  return result;
}

unint64_t sub_25397F1D8()
{
  unint64_t result = qword_269CE55E0;
  if (!qword_269CE55E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE55E0);
  }
  return result;
}

unint64_t sub_25397F228()
{
  unint64_t result = qword_269CE55E8;
  if (!qword_269CE55E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE55E8);
  }
  return result;
}

unint64_t sub_25397F278()
{
  unint64_t result = qword_269CE55F0;
  if (!qword_269CE55F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE55F0);
  }
  return result;
}

unint64_t sub_25397F2C8()
{
  unint64_t result = qword_269CE55F8;
  if (!qword_269CE55F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE55F8);
  }
  return result;
}

unint64_t sub_25397F318()
{
  unint64_t result = qword_269CE5600;
  if (!qword_269CE5600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5600);
  }
  return result;
}

unint64_t sub_25397F368()
{
  unint64_t result = qword_269CE5608;
  if (!qword_269CE5608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5608);
  }
  return result;
}

unint64_t sub_25397F3B8()
{
  unint64_t result = qword_269CE5610;
  if (!qword_269CE5610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5610);
  }
  return result;
}

unint64_t sub_25397F408()
{
  unint64_t result = qword_269CE5618;
  if (!qword_269CE5618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5618);
  }
  return result;
}

unint64_t sub_25397F458()
{
  unint64_t result = qword_269CE5620;
  if (!qword_269CE5620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5620);
  }
  return result;
}

unint64_t sub_25397F4A8()
{
  unint64_t result = qword_269CE5628;
  if (!qword_269CE5628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269CE5628);
  }
  return result;
}

uint64_t sub_25397F4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25397F55C()
{
  return 0;
}

uint64_t sub_25397F578()
{
  return *(void *)v0;
}

uint64_t sub_25397F58C()
{
  return v0;
}

uint64_t sub_25397F5A0()
{
  return v0;
}

uint64_t sub_25397F5B8()
{
  return v0;
}

uint64_t sub_25397F5D0()
{
  return sub_253B0A3F0();
}

uint64_t sub_25397F5EC()
{
  return type metadata accessor for Session.StatusUpdateEvent(0);
}

uint64_t sub_25397F608@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 104) = a1;
  return sub_253B0A320();
}

void sub_25397F628(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
}

uint64_t sub_25397F648()
{
  return 0;
}

uint64_t sub_25397F654()
{
  return sub_253B0A440();
}

void *sub_25397F66C()
{
  return sub_253472068(v0, v0[3]);
}

uint64_t sub_25397F690()
{
  return type metadata accessor for Session.StatusUpdateEvent(0);
}

uint64_t sub_25397F6A8()
{
  return v0;
}

uint64_t sub_25397F6C0()
{
  return sub_253B0A2C0();
}

uint64_t sub_25397F6E4()
{
  return v0;
}

uint64_t sub_25397F6FC()
{
  return sub_253B0A3E0();
}

uint64_t sub_25397F720()
{
  return v0;
}

uint64_t sub_25397F738()
{
  return sub_253B0A3B0();
}

uint64_t sub_25397F764()
{
  return sub_253B0A680();
}

uint64_t sub_25397F780()
{
  return sub_253976288(v0, v1);
}

uint64_t sub_25397F798()
{
  return v0;
}

uint64_t sub_25397F7AC()
{
  return v0;
}

uint64_t sub_25397F7C0@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t sub_25397F7E0()
{
  return sub_253B0A370();
}

void *sub_25397F800(void *a1)
{
  return sub_253472068(a1, v1);
}

uint64_t sub_25397F81C()
{
  return type metadata accessor for Session.StatusUpdateEvent(0);
}

uint64_t sub_25397F834(uint64_t a1)
{
  return sub_25397FE6C(a1, (void (*)(unsigned char *, uint64_t))sub_253980818);
}

uint64_t sub_25397F84C(uint64_t a1)
{
  return sub_25397FE6C(a1, (void (*)(unsigned char *, uint64_t))sub_25398034C);
}

uint64_t sub_25397F864(uint64_t a1)
{
  return sub_25397FE6C(a1, (void (*)(unsigned char *, uint64_t))sub_2539803FC);
}

uint64_t sub_25397F87C()
{
  return sub_253980AA0();
}

uint64_t sub_25397F888(uint64_t a1)
{
  return sub_253980D90(0, a1, (void (*)(uint64_t))ExpressionFlattener.BuiltinIdentifiers.rawValue.getter);
}

uint64_t sub_25397F8BC()
{
  return sub_253B0A630();
}

uint64_t sub_25397F908()
{
  return sub_253B0A630();
}

uint64_t sub_25397F948(uint64_t a1)
{
  return sub_25397FE6C(a1, (void (*)(unsigned char *, uint64_t))sub_253980228);
}

uint64_t sub_25397F960(char a1)
{
  return sub_253980DFC(0, a1);
}

uint64_t sub_25397F970()
{
  return sub_253B0A630();
}

uint64_t sub_25397F9B0()
{
  return sub_253B0A630();
}

uint64_t sub_25397F9F0()
{
  return sub_25397FD80();
}

uint64_t sub_25397FA10()
{
  return sub_25397FD80();
}

uint64_t sub_25397FA30()
{
  return sub_25397FD80();
}

uint64_t sub_25397FA50()
{
  return sub_25397FD80();
}

uint64_t sub_25397FA70()
{
  return sub_25397FD80();
}

uint64_t sub_25397FA90()
{
  return sub_25397FD80();
}

uint64_t sub_25397FAB0()
{
  return sub_25397FD80();
}

uint64_t sub_25397FAD0()
{
  return sub_25397FD80();
}

uint64_t sub_25397FAF0()
{
  return sub_25397FD80();
}

uint64_t sub_25397FB10()
{
  return sub_25397FD80();
}

uint64_t sub_25397FB30()
{
  return sub_25397FD80();
}

uint64_t sub_25397FB50()
{
  return sub_25397FD80();
}

uint64_t sub_25397FB70()
{
  return sub_25397FCF0();
}

uint64_t sub_25397FB90()
{
  return sub_25397FD80();
}

uint64_t sub_25397FBB0()
{
  return sub_25397FD80();
}

uint64_t sub_25397FBD0()
{
  return sub_25397FD80();
}

uint64_t sub_25397FBF0()
{
  return sub_25397FCF0();
}

uint64_t sub_25397FC10()
{
  return sub_25397FCF0();
}

uint64_t sub_25397FC30()
{
  return sub_25397FD80();
}

uint64_t sub_25397FC50()
{
  return sub_25397FD80();
}

uint64_t sub_25397FC70()
{
  return sub_25397FD80();
}

uint64_t sub_25397FC90()
{
  return sub_25397FD80();
}

uint64_t sub_25397FCB0()
{
  return sub_25397FCF0();
}

uint64_t sub_25397FCD0()
{
  return sub_25397FCF0();
}

uint64_t sub_25397FCF0()
{
  sub_253A3F71C();
  uint64_t v1 = sub_253B0A5F0();
  v0(v1);
  sub_253A3C86C();
  return sub_253B0A630();
}

uint64_t sub_25397FD40()
{
  return sub_25397FD80();
}

uint64_t sub_25397FD60()
{
  return sub_25397FD80();
}

uint64_t sub_25397FD80()
{
  sub_253A3F71C();
  uint64_t v1 = sub_253B0A5F0();
  v0(v1);
  sub_253A3C86C();
  return sub_253B0A630();
}

uint64_t sub_25397FDCC(uint64_t a1)
{
  return sub_253980D90(0, a1, (void (*)(uint64_t))SessionEventPayloadType.rawValue.getter);
}

uint64_t sub_25397FE00()
{
  return sub_253980B48();
}

uint64_t sub_25397FE0C(uint64_t a1)
{
  return sub_25397FE6C(a1, (void (*)(unsigned char *, uint64_t))sub_25398063C);
}

uint64_t sub_25397FE24()
{
  return sub_253980CCC();
}

uint64_t sub_25397FE30()
{
  return sub_253B0A630();
}

uint64_t sub_25397FE6C(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  sub_2534D938C();
  a2(v5, a1);
  return sub_253B0A630();
}

uint64_t sub_25397FEB4(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 2:
      sub_253465A08();
      break;
    default:
      break;
  }
  sub_253B09630();
  return swift_bridgeObjectRelease();
}

uint64_t sub_253980028()
{
  return sub_253B09630();
}

uint64_t sub_253980044()
{
  return sub_253B09630();
}

uint64_t sub_253980054()
{
  return sub_253B09630();
}

uint64_t sub_253980068()
{
  return sub_253B0A620();
}

uint64_t sub_253980090(uint64_t a1, char a2)
{
  if (!a2) {
    sub_253A3F6B0();
  }
  sub_253B09630();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25398011C(uint64_t a1, uint64_t a2)
{
  return sub_2539801C4(a1, a2, (void (*)(void))SessionEventPayloadType.rawValue.getter);
}

uint64_t sub_253980134()
{
  sub_253B09630();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2539801AC(uint64_t a1, uint64_t a2)
{
  return sub_2539801C4(a1, a2, (void (*)(void))ExpressionFlattener.BuiltinIdentifiers.rawValue.getter);
}

uint64_t sub_2539801C4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  sub_253B09630();
  return swift_bridgeObjectRelease();
}

uint64_t sub_253980228()
{
  sub_253A3EA30();
  switch(v0)
  {
    case 2:
    case 5:
      sub_253A3F65C();
      break;
    case 3:
      sub_253465A08();
      break;
    default:
      break;
  }
  sub_253B09630();
  return swift_bridgeObjectRelease();
}

uint64_t sub_253980324()
{
  return sub_253B0A610();
}

uint64_t sub_25398034C()
{
  sub_253A3EA30();
  switch(v0)
  {
    case 1:
    case 2:
    case 3:
      sub_253465A08();
      break;
    default:
      break;
  }
  sub_253B09630();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2539803FC()
{
  sub_253B09630();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2539804C0()
{
  sub_253B09630();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2539805E8()
{
  sub_253A3EAF4();
  swift_bridgeObjectRetain();
  sub_253B09630();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25398063C()
{
  sub_253B09630();
  return swift_bridgeObjectRelease();
}

uint64_t sub_253980724()
{
  sub_253B09630();
  return swift_bridgeObjectRelease();
}

uint64_t sub_253980788(uint64_t a1, char a2)
{
  if (!a2) {
    sub_253465A08();
  }
  sub_253B09630();
  return swift_bridgeObjectRelease();
}

uint64_t sub_253980818()
{
  sub_253A3EA30();
  switch(v0)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      sub_253465A08();
      break;
    default:
      break;
  }
  sub_253B09630();
  return swift_bridgeObjectRelease();
}

uint64_t sub_253980918()
{
  return sub_253B0A620();
}

uint64_t sub_253980940()
{
  return sub_25398109C();
}

uint64_t sub_253980960()
{
  return sub_25398109C();
}

uint64_t sub_253980980()
{
  return sub_25398109C();
}

uint64_t sub_2539809A0()
{
  return sub_25398109C();
}

uint64_t sub_2539809C0()
{
  return sub_25398109C();
}

uint64_t sub_2539809E0()
{
  return sub_25398109C();
}

uint64_t sub_253980A00()
{
  return sub_25398109C();
}

uint64_t sub_253980A20()
{
  return sub_253981104();
}

uint64_t sub_253980A44()
{
  return sub_253B0A630();
}

uint64_t sub_253980A88(uint64_t a1, uint64_t a2)
{
  return sub_2539811D4(a1, a2, (void (*)(unsigned char *, uint64_t))sub_253980818);
}

uint64_t sub_253980AA0()
{
  return sub_253B0A630();
}

uint64_t sub_253980B48()
{
  return sub_253B0A630();
}

uint64_t sub_253980BC0(uint64_t a1, uint64_t a2)
{
  return sub_2539811D4(a1, a2, (void (*)(unsigned char *, uint64_t))sub_25398063C);
}

uint64_t sub_253980BD8()
{
  return sub_253B0A630();
}

uint64_t sub_253980C28(uint64_t a1, uint64_t a2)
{
  return sub_2539811D4(a1, a2, (void (*)(unsigned char *, uint64_t))sub_2539803FC);
}

uint64_t sub_253980C40(uint64_t a1, uint64_t a2)
{
  return sub_2539811D4(a1, a2, (void (*)(unsigned char *, uint64_t))sub_25398034C);
}

uint64_t sub_253980C58()
{
  return sub_253B0A630();
}

uint64_t sub_253980C9C(uint64_t a1, uint64_t a2)
{
  return sub_2539811D4(a1, a2, (void (*)(unsigned char *, uint64_t))sub_253980228);
}

uint64_t sub_253980CB4(uint64_t a1, uint64_t a2)
{
  return sub_253980D90(a1, a2, (void (*)(uint64_t))ExpressionFlattener.BuiltinIdentifiers.rawValue.getter);
}

uint64_t sub_253980CCC()
{
  return sub_253B0A630();
}

uint64_t sub_253980D58()
{
  return sub_25398109C();
}

uint64_t sub_253980D78(uint64_t a1, uint64_t a2)
{
  return sub_253980D90(a1, a2, (void (*)(uint64_t))SessionEventPayloadType.rawValue.getter);
}

uint64_t sub_253980D90(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = sub_253B0A5F0();
  a3(v4);
  sub_253B09630();
  swift_bridgeObjectRelease();
  return sub_253B0A630();
}

uint64_t sub_253980DFC(uint64_t a1, char a2)
{
  if (!a2) {
    sub_253A3F6B0();
  }
  sub_253B09630();
  swift_bridgeObjectRelease();
  return sub_253B0A630();
}

uint64_t sub_253980E9C()
{
  return sub_25398109C();
}

uint64_t sub_253980EBC()
{
  return sub_25398109C();
}

uint64_t sub_253980EDC()
{
  return sub_25398109C();
}

uint64_t sub_253980EFC()
{
  return sub_25398109C();
}

uint64_t sub_253980F1C()
{
  return sub_25398109C();
}

uint64_t sub_253980F3C()
{
  return sub_25398109C();
}

uint64_t sub_253980F5C()
{
  return sub_253981104();
}

uint64_t sub_253980F7C()
{
  return sub_25398109C();
}

uint64_t sub_253980F9C()
{
  return sub_253981104();
}

uint64_t sub_253980FBC()
{
  return sub_25398109C();
}

uint64_t sub_253980FDC()
{
  return sub_25398109C();
}

uint64_t sub_253980FFC()
{
  return sub_25398109C();
}

uint64_t sub_25398101C()
{
  return sub_253981104();
}

uint64_t sub_25398103C()
{
  return sub_25398109C();
}

uint64_t sub_25398105C()
{
  return sub_25398109C();
}

uint64_t sub_25398107C()
{
  return sub_25398109C();
}

uint64_t sub_25398109C()
{
  sub_253A3F594();
  uint64_t v1 = sub_253B0A5F0();
  v0(v1);
  sub_253A3C86C();
  return sub_253B0A630();
}

uint64_t sub_2539810E4()
{
  return sub_253981104();
}

uint64_t sub_253981104()
{
  sub_253A3F594();
  uint64_t v1 = sub_253B0A5F0();
  v0(v1);
  sub_253A3C86C();
  return sub_253B0A630();
}

uint64_t sub_253981150()
{
  return sub_253B0A630();
}

uint64_t sub_253981194()
{
  return sub_253B0A630();
}

uint64_t sub_2539811D4(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t))
{
  sub_253B0A5F0();
  a3(v6, a2);
  return sub_253B0A630();
}

uint64_t sub_253981220(uint64_t a1)
{
  return sub_25398142C(a1, (uint64_t *)&unk_269CDB490);
}

uint64_t sub_25398122C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  sub_253B08B30();
  if (v1)
  {
    sub_25347B88C();
    sub_2534B3428();
    v2();
  }
  uint64_t v3 = sub_253A3EB78();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v3, v4, v5, v6);
}

uint64_t sub_2539812C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_25353E23C(a1);
  if (v6) {
    goto LABEL_10;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  sub_253A3E984();
  if (v7 == v9)
  {
    uint64_t v10 = 1;
  }
  else
  {
    sub_253A3B374(v7, v8, a1, a2);
    uint64_t v10 = 0;
  }
  uint64_t v11 = type metadata accessor for ToolboxCustomKeyResult(0);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a2, v10, 1, v11);
}

void sub_253981354()
{
  sub_253A3C038();
  if ((v1 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(v1) & 0xF;
  }
  else {
    uint64_t v2 = v0 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    unint64_t v3 = v1;
    uint64_t v4 = v0;
    sub_253A3D860();
    sub_2539E9FE8();
    if ((v3 & 0x1000000000000000) != 0)
    {
      sub_253A3D860();
      sub_253B09FF0();
    }
    else
    {
      if ((v3 & 0x2000000000000000) == 0 && (v4 & 0x1000000000000000) == 0)
      {
        sub_2534D973C();
        sub_253B0A0A0();
      }
      sub_253B0A0B0();
    }
  }
  sub_253A3BEC0();
}

uint64_t sub_253981420(uint64_t a1)
{
  return sub_25398142C(a1, &qword_269CDE520);
}

uint64_t sub_25398142C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_253462A5C(a2);
  if (v2)
  {
    sub_2535782A8();
    uint64_t v4 = sub_253A3E86C(*(unsigned __int8 *)(v3 + 80));
    sub_253961F60(v4, v5, v6);
  }
  uint64_t v7 = sub_253A3EB78();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, v8, v9, v10);
}

uint64_t sub_2539814AC(uint64_t a1)
{
  return sub_253981530(a1, (void (*)(void))type metadata accessor for SpeechRequestCandidate);
}

uint64_t sub_2539814D8(uint64_t a1)
{
  return sub_253981530(a1, (void (*)(void))type metadata accessor for AST.Update);
}

uint64_t sub_253981504(uint64_t a1)
{
  return sub_253981530(a1, (void (*)(void))type metadata accessor for AST.FlatValue);
}

uint64_t sub_253981530(uint64_t a1, void (*a2)(void))
{
  uint64_t v2 = *(void *)(a1 + 16);
  a2(0);
  if (v2)
  {
    sub_2535782A8();
    uint64_t v4 = sub_253A3E86C(*(unsigned __int8 *)(v3 + 80));
    sub_2539DF660(v4, v5);
  }
  uint64_t v6 = sub_253A3EB78();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v6, v7, v8, v9);
}

uint64_t sub_2539815B4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return sub_253B09910();
  }
  else {
    return sub_2535E2578();
  }
}

uint64_t sub_253981600(uint64_t a1)
{
  uint64_t v31 = a1 + 56;
  uint64_t v1 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v2 = -1;
  if (v1 < 64) {
    uint64_t v2 = ~(-1 << v1);
  }
  uint64_t v3 = v2 & *(void *)(a1 + 56);
  int64_t v32 = (unint64_t)(v1 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v4 = 0;
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (!v3) {
    goto LABEL_5;
  }
LABEL_4:
  for (v3 &= v3 - 1; ; uint64_t v3 = (v7 - 1) & v7)
  {
    swift_bridgeObjectRetain();
    sub_253981CB0();
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    uint64_t v11 = *(void *)(v10 + 16);
    uint64_t v12 = *(void *)(v5 + 16);
    uint64_t v13 = v12 + v11;
    if (__OFADD__(v12, v11))
    {
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (!isUniquelyReferenced_nonNull_native || v13 > *(void *)(v5 + 24) >> 1)
    {
      if (v12 <= v13) {
        uint64_t v15 = v12 + v11;
      }
      else {
        uint64_t v15 = v12;
      }
      sub_253522EC4(isUniquelyReferenced_nonNull_native, v15, 1, v5);
      uint64_t v5 = v16;
    }
    if (*(void *)(v10 + 16))
    {
      uint64_t v17 = *(void *)(v5 + 16);
      uint64_t v18 = (*(void *)(v5 + 24) >> 1) - v17;
      uint64_t v19 = *(void *)(sub_253B059D0() - 8);
      uint64_t v20 = *(void *)(v19 + 72);
      if (v18 < v11) {
        goto LABEL_45;
      }
      unint64_t v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
      unint64_t v22 = v5 + v21 + v20 * v17;
      unint64_t v23 = v10 + v21;
      uint64_t v24 = v20 * v11;
      unint64_t v25 = v22 + v24;
      unint64_t v26 = v23 + v24;
      if (v23 < v25 && v22 < v26) {
        goto LABEL_49;
      }
      swift_arrayInitWithCopy();
      if (v11)
      {
        uint64_t v28 = *(void *)(v5 + 16);
        BOOL v6 = __OFADD__(v28, v11);
        uint64_t v29 = v28 + v11;
        if (v6) {
          goto LABEL_46;
        }
        *(void *)(v5 + 16) = v29;
      }
    }
    else if (v11)
    {
      goto LABEL_44;
    }
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v6 = __OFADD__(v4++, 1);
    if (v6) {
      goto LABEL_47;
    }
    if (v4 >= v32) {
      goto LABEL_42;
    }
    uint64_t v7 = *(void *)(v31 + 8 * v4);
    if (!v7) {
      break;
    }
LABEL_17:
    ;
  }
  int64_t v8 = v4 + 1;
  if (v4 + 1 >= v32) {
    goto LABEL_42;
  }
  uint64_t v7 = *(void *)(v31 + 8 * v8);
  if (v7) {
    goto LABEL_16;
  }
  int64_t v8 = v4 + 2;
  if (v4 + 2 >= v32) {
    goto LABEL_42;
  }
  uint64_t v7 = *(void *)(v31 + 8 * v8);
  if (v7) {
    goto LABEL_16;
  }
  int64_t v8 = v4 + 3;
  if (v4 + 3 >= v32) {
    goto LABEL_42;
  }
  uint64_t v7 = *(void *)(v31 + 8 * v8);
  if (v7) {
    goto LABEL_16;
  }
  int64_t v8 = v4 + 4;
  if (v4 + 4 >= v32)
  {
LABEL_42:
    swift_release();
    return v5;
  }
  uint64_t v7 = *(void *)(v31 + 8 * v8);
  if (v7)
  {
LABEL_16:
    int64_t v4 = v8;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v4 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      break;
    }
    if (v4 >= v32) {
      goto LABEL_42;
    }
    uint64_t v7 = *(void *)(v31 + 8 * v4);
    ++v8;
    if (v7) {
      goto LABEL_17;
    }
  }
LABEL_48:
  __break(1u);
LABEL_49:
  uint64_t result = sub_253B0A260();
  __break(1u);
  return result;
}

void sub_253981928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  sub_2539460B0();
  uint64_t v12 = sub_253B059D0();
  sub_253465998();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  sub_2534847E0();
  uint64_t v16 = *(void *)(v11 + 16);
  if (v16)
  {
    sub_253A3E7F0();
    uint64_t v23 = type metadata accessor for SpeechRequestCandidate(0);
    sub_253526778();
    uint64_t v18 = v11 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    uint64_t v22 = *(void *)(v19 + 72);
    unint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
    do
    {
      v21(v10, v18 + *(int *)(v23 + 20), v12);
      if (*(void *)(a10 + 16) >= *(void *)(a10 + 24) >> 1) {
        sub_2539E7ADC();
      }
      sub_253A3DC14();
      sub_253A3E794();
      sub_2534D8E14();
      v20();
      v18 += v22;
      --v16;
    }
    while (v16);
  }
  sub_2536D3D5C();
  sub_2534847C8();
}

uint64_t sub_253981A98(uint64_t a1)
{
  uint64_t v3 = sub_253B059D0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  BOOL v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v7)
  {
    v13[1] = v1;
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_2539E7ADC();
    uint64_t v8 = v17;
    uint64_t v16 = type metadata accessor for Candidate(0);
    uint64_t v9 = a1
       + ((*(unsigned __int8 *)(*(void *)(v16 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v16 - 8) + 80));
    uint64_t v15 = *(void *)(*(void *)(v16 - 8) + 72);
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    _OWORD v13[2] = v4 + 32;
    uint64_t v14 = v10;
    do
    {
      v14(v6, v9 + *(int *)(v16 + 28), v3);
      uint64_t v17 = v8;
      unint64_t v11 = *(void *)(v8 + 16);
      if (v11 >= *(void *)(v8 + 24) >> 1)
      {
        sub_2539E7ADC();
        uint64_t v8 = v17;
      }
      *(void *)(v8 + 16) = v11 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v11, v6, v3);
      v9 += v15;
      --v7;
    }
    while (v7);
  }
  return v8;
}

void sub_253981CB0()
{
  sub_2534847F8();
  uint64_t v2 = v1;
  type metadata accessor for Candidate(0);
  sub_253465998();
  uint64_t v31 = v4;
  uint64_t v32 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v30 = (uint64_t)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v6);
  sub_2534B35DC();
  uint64_t v29 = v7;
  uint64_t v8 = sub_253B059D0();
  sub_253465998();
  uint64_t v33 = v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v34 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v2 + 16);
  if (v12)
  {
    v24[1] = v0;
    uint64_t v35 = MEMORY[0x263F8EE78];
    sub_253A3F4A0();
    sub_2539E7ADC();
    uint64_t v13 = sub_253A3B424(v2);
    if ((v13 & 0x8000000000000000) == 0)
    {
      unint64_t v15 = v13;
      if (v13 < 1 << *(unsigned char *)(v2 + 32))
      {
        int v16 = v14;
        uint64_t v17 = v2 + 64;
        uint64_t v26 = v33 + 32;
        uint64_t v27 = v33 + 16;
        uint64_t v28 = v8;
        uint64_t v25 = v2 + 64;
        while ((*(void *)(v17 + 8 * (v15 >> 6)) & (1 << v15)) != 0)
        {
          if (v16 != *(_DWORD *)(v2 + 36)) {
            goto LABEL_20;
          }
          uint64_t v18 = v29;
          sub_2539DF660(*(void *)(v2 + 56) + *(void *)(v31 + 72) * v15, v29);
          sub_2539DF5B8(v18, v30);
          sub_2534B3428();
          v19();
          sub_2539DF610();
          uint64_t v20 = v35;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_253A3E764();
            sub_2539E7ADC();
            uint64_t v20 = v35;
          }
          unint64_t v21 = *(void *)(v20 + 16);
          if (v21 >= *(void *)(v20 + 24) >> 1)
          {
            sub_2539E7ADC();
            uint64_t v20 = v35;
          }
          *(void *)(v20 + 16) = v21 + 1;
          sub_2534D8E14();
          v22();
          uint64_t v35 = v20;
          if ((uint64_t)v15 >= -(-1 << *(unsigned char *)(v2 + 32))) {
            goto LABEL_21;
          }
          uint64_t v17 = v25;
          if ((*(void *)(v25 + 8 * (v15 >> 6)) & (1 << v15)) == 0) {
            goto LABEL_22;
          }
          if (v16 != *(_DWORD *)(v2 + 36)) {
            goto LABEL_23;
          }
          sub_2535787F4();
          uint64_t v23 = sub_253B09F70();
          if (!--v12) {
            goto LABEL_18;
          }
          unint64_t v15 = v23;
          if ((v23 & 0x8000000000000000) == 0)
          {
            int v16 = *(_DWORD *)(v2 + 36);
            if (v23 < 1 << *(unsigned char *)(v2 + 32)) {
              continue;
            }
          }
          goto LABEL_24;
        }
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
      }
    }
LABEL_24:
    __break(1u);
  }
  else
  {
LABEL_18:
    sub_2536D3D5C();
    sub_2534847C8();
  }
}

void sub_253981FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_2534847F8();
  uint64_t v12 = v11;
  sub_2534DA6BC();
  sub_253B059D0();
  sub_253465998();
  MEMORY[0x270FA5388](v13);
  sub_2534847E0();
  uint64_t v14 = *(void *)(v10 + 16);
  if (v14)
  {
    sub_253A3E7F0();
    uint64_t v15 = v12(0);
    sub_25346CB34(v15);
    uint64_t v17 = v10 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v21 = *(void *)(v18 + 72);
    do
    {
      sub_2535925F4();
      sub_253535668();
      v19();
      if (*(void *)(a10 + 16) >= *(void *)(a10 + 24) >> 1) {
        sub_2539E7ADC();
      }
      sub_253A3DC14();
      sub_253A3E794();
      sub_2534D8E14();
      v20();
      v17 += v21;
      --v14;
    }
    while (v14);
  }
  sub_2536D3D5C();
  sub_2534847C8();
}

uint64_t sub_253982140(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Session.Event.Payload(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    uint64_t v18 = MEMORY[0x263F8EE78];
    sub_2539E8A60();
    uint64_t v11 = v18;
    uint64_t v12 = (uint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v13 = *(v12 - 1);
      uint64_t v14 = *v12;
      swift_bridgeObjectRetain();
      sub_2539CC42C(v13, v14, a2, (uint64_t)v9);
      if (v3) {
        break;
      }
      swift_bridgeObjectRelease();
      uint64_t v18 = v11;
      unint64_t v15 = *(void *)(v11 + 16);
      if (v15 >= *(void *)(v11 + 24) >> 1)
      {
        sub_2539E8A60();
        uint64_t v11 = v18;
      }
      v12 += 2;
      *(void *)(v11 + 16) = v15 + 1;
      sub_2539DF5B8((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v15);
      if (!--v10)
      {
        swift_release();
        return v11;
      }
    }
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  return v11;
}

uint64_t sub_25398231C()
{
  sub_253B09860();
  return swift_bridgeObjectRelease();
}

uint64_t sub_253982494()
{
  sub_253B0A000();
  swift_bridgeObjectRelease();
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_253B09860();
  sub_253B09860();
  return swift_bridgeObjectRelease();
}

uint64_t sub_253982570()
{
  sub_253B09860();
  return swift_bridgeObjectRelease();
}

void Session.Event.Payload.description.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_2534B3258();
  a19 = v28;
  a20 = v29;
  uint64_t v249 = v21;
  uint64_t DecorationPrePlannerResult = type metadata accessor for QueryDecorationPrePlannerResult(0);
  uint64_t v31 = sub_25346CB4C(DecorationPrePlannerResult);
  MEMORY[0x270FA5388](v31);
  uint64_t v238 = (uint64_t)v224 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DecorationResult = type metadata accessor for QueryDecorationResult(0);
  uint64_t v34 = sub_25346CB4C(DecorationResult);
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = sub_253A3D0E4(v35, v224[0]);
  uint64_t v37 = type metadata accessor for TypeConversionResult(v36);
  uint64_t v38 = sub_25346CB4C(v37);
  MEMORY[0x270FA5388](v38);
  uint64_t v40 = sub_253A3D150(v39, v224[0]);
  uint64_t v41 = type metadata accessor for TypeConversionRequest(v40);
  uint64_t v42 = sub_25346CB4C(v41);
  MEMORY[0x270FA5388](v42);
  uint64_t v236 = (char *)v224 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for ClientUndoRedoRequest(0);
  uint64_t v45 = sub_25346CB4C(v44);
  MEMORY[0x270FA5388](v45);
  uint64_t v47 = sub_253A3BA50(v46, v224[0]);
  uint64_t v48 = type metadata accessor for UndoRedoRequest(v47);
  uint64_t v49 = sub_25346CB4C(v48);
  MEMORY[0x270FA5388](v49);
  uint64_t v235 = (char *)v224 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for ToolResolution(0);
  uint64_t v52 = sub_25346CB4C(v51);
  MEMORY[0x270FA5388](v52);
  uint64_t v54 = sub_253A3BFDC(v53, v224[0]);
  uint64_t v231 = type metadata accessor for ExternalAgentOutcome(v54);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v55);
  sub_2534D9BE4(v56, v224[0]);
  uint64_t v57 = type metadata accessor for ExternalAgentRequest(0);
  uint64_t v58 = sub_25346CB4C(v57);
  MEMORY[0x270FA5388](v58);
  uint64_t v60 = sub_253A3D778(v59, v224[0]);
  uint64_t v61 = type metadata accessor for ExternalAgentSpeechQuery(v60);
  uint64_t v62 = sub_25346CB4C(v61);
  MEMORY[0x270FA5388](v62);
  uint64_t v64 = sub_253A3D108(v63, v224[0]);
  uint64_t v65 = type metadata accessor for ExternalAgentTextQuery(v64);
  uint64_t v66 = sub_25346CB4C(v65);
  MEMORY[0x270FA5388](v66);
  sub_2534F8208((uint64_t)v224 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v232 = sub_253B06850();
  sub_253465998();
  uint64_t v233 = v68;
  MEMORY[0x270FA5388](v69);
  uint64_t v229 = sub_253A3E654((uint64_t)v224 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25346CAF4();
  MEMORY[0x270FA5388](v71);
  uint64_t v73 = sub_253A3C264(v72, v224[0]);
  uint64_t v74 = type metadata accessor for ActionCancellation(v73);
  uint64_t v75 = sub_25346CB4C(v74);
  MEMORY[0x270FA5388](v75);
  uint64_t v228 = (char *)v224 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v227 = type metadata accessor for SessionError();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v77);
  uint64_t v79 = sub_253A3D12C(v78, v224[0]);
  Stepuint64_t Results = type metadata accessor for QueryStepResults(v79);
  uint64_t v81 = sub_25346CB4C(StepResults);
  MEMORY[0x270FA5388](v81);
  uint64_t v248 = (uint64_t)v224 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  v224[2] = sub_253B06EC0();
  sub_253465998();
  v224[1] = v83;
  MEMORY[0x270FA5388](v84);
  sub_2534F8208((uint64_t)v224 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0));
  v224[5] = sub_253B06D60();
  sub_253465998();
  v224[4] = v86;
  MEMORY[0x270FA5388](v87);
  sub_2534F8208((uint64_t)v224 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0));
  v224[8] = sub_253B06B60();
  sub_253465998();
  v224[7] = v89;
  MEMORY[0x270FA5388](v90);
  sub_2534F8208((uint64_t)v224 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0));
  v224[16] = sub_253B06AF0();
  sub_253465998();
  v224[15] = v92;
  MEMORY[0x270FA5388](v93);
  sub_2534F8208((uint64_t)v224 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_253B09120();
  sub_253465998();
  uint64_t v243 = v96;
  v244[0] = v95;
  MEMORY[0x270FA5388](v95);
  uint64_t v242 = (char *)v224 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  sub_253B05C30();
  sub_253465998();
  v244[1] = v99;
  uint64_t v245 = v98;
  MEMORY[0x270FA5388](v98);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v100);
  sub_2534F823C();
  MEMORY[0x270FA5388](v101);
  sub_2534B35DC();
  sub_2534F8208(v102);
  sub_253B05AB0();
  sub_253465998();
  uint64_t v246 = v103;
  uint64_t v247 = v104;
  MEMORY[0x270FA5388](v103);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v105);
  sub_2534B35DC();
  uint64_t v226 = v106;
  v224[23] = type metadata accessor for ActionStepResult(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v107);
  uint64_t v230 = (uint64_t)v224 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224[21] = type metadata accessor for VariableStep(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v109);
  v224[19] = sub_253A3E670((uint64_t)v224 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25346CAF4();
  MEMORY[0x270FA5388](v111);
  v224[20] = (uint64_t)v224 - ((v112 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for ClientAction(0);
  uint64_t v114 = sub_25346CB4C(v113);
  MEMORY[0x270FA5388](v114);
  v224[18] = (uint64_t)v224 - ((v115 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for Action(0);
  uint64_t v117 = sub_25346CB4C(v116);
  MEMORY[0x270FA5388](v117);
  v224[17] = (uint64_t)v224 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = type metadata accessor for RequestContent.SystemPromptResolution(0);
  uint64_t v120 = sub_25346CB4C(v119);
  MEMORY[0x270FA5388](v120);
  uint64_t v122 = sub_2534F8208((uint64_t)v224 - ((v121 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v123 = type metadata accessor for RequestContent.TextContent(v122);
  uint64_t v124 = sub_25346CB4C(v123);
  MEMORY[0x270FA5388](v124);
  uint64_t v126 = sub_2534F8208((uint64_t)v224 - ((v125 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v127 = type metadata accessor for RequestContent(v126);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v128);
  sub_2534B340C();
  MEMORY[0x270FA5388](v129);
  sub_2535B3D6C();
  uint64_t v130 = type metadata accessor for Request(0);
  uint64_t v131 = sub_25346CB4C(v130);
  MEMORY[0x270FA5388](v131);
  sub_2534D8F5C((uint64_t)v224 - ((v132 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v133 = sub_253462A5C(&qword_26B249348);
  uint64_t v134 = sub_25346CB4C(v133);
  MEMORY[0x270FA5388](v134);
  sub_253578D44();
  MEMORY[0x270FA5388](v135);
  sub_2535B45C8();
  MEMORY[0x270FA5388](v136);
  sub_253A3D64C();
  MEMORY[0x270FA5388](v137);
  uint64_t v138 = sub_2536D415C();
  uint64_t v139 = type metadata accessor for TextQuery(v138);
  uint64_t v140 = sub_25346CB4C(v139);
  MEMORY[0x270FA5388](v140);
  sub_253A3C548();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v141);
  sub_25346CC6C();
  sub_2539DF660(v249, (uint64_t)v25);
  sub_2536D3F90();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v142 = sub_253578D2C();
      sub_2539DF5B8(v142, v143);
      sub_253A3CCAC();
      swift_bridgeObjectRetain();
      sub_253A3E604();
      swift_bridgeObjectRelease();
      goto LABEL_94;
    case 2u:
      uint64_t v144 = *v25;
      sub_253A3CCAC();
      sub_253981530(v144, (void (*)(void))type metadata accessor for SpeechRequestCandidate);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_253A3F8B4();
      sub_2534D8B48(v20, 1, v145);
      if (v146)
      {
        sub_253472458(v20, &qword_26B249348);
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_2539DF610();
      }
      goto LABEL_49;
    case 3u:
      uint64_t v147 = v225;
      sub_2539DF5B8((uint64_t)v25, v225);
      sub_2539DF660(v147, (uint64_t)v27);
      sub_253A3D030();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_253A3BE74((uint64_t)v27, (uint64_t)v237);
          sub_253A3D620();
          sub_253A3E604();
          swift_bridgeObjectRelease();
          goto LABEL_65;
        case 2u:
          uint64_t v205 = *v27;
          sub_253A3CCAC();
          sub_253981530(v205, (void (*)(void))type metadata accessor for SpeechRequestCandidate);
          swift_bridgeObjectRelease();
          sub_253A3F8B4();
          sub_2534D8B48(v22, 1, v206);
          if (v146)
          {
            sub_253472458(v22, &qword_26B249348);
          }
          else
          {
            swift_bridgeObjectRetain();
            sub_2539DF610();
          }
          sub_253B09860();
          swift_bridgeObjectRelease();
          break;
        case 3u:
          sub_253A3B8D4((uint64_t)v27, (uint64_t)&v236);
          RequestContent.SystemPromptResolution.description.getter();
          sub_253A3C064();
          goto LABEL_65;
        default:
          goto LABEL_94;
      }
      goto LABEL_94;
    case 4u:
      unint64_t v250 = 0x203A6E616C70;
      unint64_t v251 = 0xE600000000000000;
      swift_bridgeObjectRetain();
      sub_253A3E9E4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_50;
    case 5u:
      sub_253A3B8D4((uint64_t)v25, (uint64_t)&v243);
      Action.description.getter();
      sub_253A3C064();
      goto LABEL_94;
    case 6u:
      sub_253A3B8D4((uint64_t)v25, (uint64_t)&v253);
      ActionCancellation.description.getter();
      sub_253A3C064();
      goto LABEL_94;
    case 7u:
      sub_253A3B8D4((uint64_t)v25, (uint64_t)v244);
      ClientAction.description.getter();
      sub_253A3C064();
      goto LABEL_94;
    case 8u:
      sub_253A3B8D4((uint64_t)v25, (uint64_t)&v245);
      uint64_t v148 = sub_253A3F2EC();
      uint64_t v149 = type metadata accessor for ParameterQuery(v148);
      MEMORY[0x25A268A80](v20, v149);
      sub_253A3C064();
      goto LABEL_94;
    case 9u:
      sub_253A3B8D4((uint64_t)v25, (uint64_t)&v247);
      uint64_t v150 = sub_253A3F2EC();
      uint64_t v151 = type metadata accessor for VariableSetter(v150);
      MEMORY[0x25A268A80](v20, v151);
      sub_253A3C064();
      goto LABEL_94;
    case 0xAu:
    case 0x15u:
    case 0x17u:
    case 0x18u:
    case 0x1Au:
      swift_bridgeObjectRelease();
      goto LABEL_47;
    case 0xBu:
      sub_253A3F28C();
      sub_253B0A000();
      swift_bridgeObjectRelease();
      sub_253A3F670(0xD000000000000013);
LABEL_49:
      sub_253B09860();
      goto LABEL_50;
    case 0xCu:
      unint64_t v153 = *v25;
      unint64_t v152 = v25[1];
      uint64_t v155 = v25[2];
      uint64_t v154 = v25[3];
      uint64_t v157 = v25[4];
      uint64_t v156 = v25[5];
      sub_253A3F28C();
      sub_253B0A000();
      v255[0] = v250;
      v255[1] = v251;
      sub_253578F2C();
      sub_253B09860();
      unint64_t v250 = v153;
      unint64_t v251 = v152;
      uint64_t v252 = v155;
      uint64_t v253 = v154;
      v254[0] = v157;
      v254[1] = v156;
      sub_253B0A170();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_95;
    case 0xDu:
      sub_253A3B8D4((uint64_t)v25, (uint64_t)v254);
      sub_253A3CC44();
      sub_253B09860();
      sub_253B0A170();
      sub_25351C9C4();
      goto LABEL_94;
    case 0xEu:
      uint64_t v158 = v25[2];
      unint64_t v159 = v25[3];
      sub_253A3CC44();
      sub_253B0A000();
      swift_bridgeObjectRelease();
      unint64_t v250 = 0x203A6D6F74737563;
      unint64_t v251 = 0xE800000000000000;
      sub_2534D970C();
      v255[0] = sub_253B05460();
      sub_253B0A480();
      sub_253B09860();
      swift_bridgeObjectRelease();
      sub_253B09860();
      v255[0] = sub_253B05460();
      sub_253B0A480();
      sub_253B09860();
      swift_bridgeObjectRelease();
      sub_253B09860();
      sub_253B09860();
      swift_bridgeObjectRelease();
      sub_253487D84(v158, v159);
      uint64_t v160 = sub_2534D970C();
      sub_253487D84(v160, v161);
      goto LABEL_95;
    case 0xFu:
    case 0x10u:
    case 0x13u:
    case 0x14u:
    case 0x1Eu:
      sub_2539DF610();
      goto LABEL_47;
    case 0x11u:
      sub_2539DF5B8((uint64_t)v25, v230);
      sub_253A3F300();
      uint64_t v163 = v246;
      uint64_t v162 = v247;
      sub_253A3F588();
      uint64_t v164 = v226;
      sub_2534AF234();
      v165();
      int v166 = (*(uint64_t (**)(uint64_t, uint64_t))(v162 + 88))(v164, v163);
      if (v166 == *MEMORY[0x263F4C100])
      {
        uint64_t v167 = sub_253A3BDB8();
        v168(v167);
        sub_253578D2C();
        sub_25347FA84();
        v169();
        sub_253A3F298();
        sub_253A3C1EC();
        sub_253B05BF0();
        sub_253B0A170();
        sub_2534659CC();
        v170();
        sub_253A3BDE0();
        sub_253B05BC0();
        sub_253B09860();
        swift_bridgeObjectRelease();
LABEL_88:
        sub_2534D91AC();
        v214();
        goto LABEL_94;
      }
      if (v166 == *MEMORY[0x263F4C0B8]
        || v166 == *MEMORY[0x263F4C0C8]
        || v166 == *MEMORY[0x263F4C0E0]
        || v166 == *MEMORY[0x263F4C0E8])
      {
        uint64_t v211 = sub_253A3BDB8();
        v212(v211);
        sub_253A3C1DC();
        sub_253578E40();
        sub_25347FA84();
        v213();
        unint64_t v250 = 0;
        unint64_t v251 = 0xE000000000000000;
        sub_253A3C1EC();
        sub_253B0A170();
        goto LABEL_88;
      }
      sub_2539DF610();
      sub_2534B3470();
      v222();
LABEL_47:
      sub_253578F2C();
LABEL_95:
      sub_253465A14();
      return;
    case 0x12u:
      uint64_t v171 = v248;
      sub_2539DF5B8((uint64_t)v25, v248);
      uint64_t v172 = *(void *)(*(void *)v171 + 16);
      unint64_t v173 = MEMORY[0x263F8EE78];
      if (v172)
      {
        v255[0] = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        sub_2539E6C84();
        unint64_t v173 = v255[0];
        type metadata accessor for Candidate(0);
        uint64_t v174 = 0;
        do
        {
          unint64_t v250 = 0x203A646E756F66;
          unint64_t v251 = 0xE700000000000000;
          swift_bridgeObjectRetain_n();
          uint64_t v175 = sub_2534D9A44();
          MEMORY[0x25A268A80](v175);
          sub_253B09860();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          unint64_t v176 = v250;
          unint64_t v177 = v251;
          v255[0] = v173;
          unint64_t v179 = *(void *)(v173 + 16);
          unint64_t v178 = *(void *)(v173 + 24);
          if (v179 >= v178 >> 1)
          {
            sub_253526BBC(v178);
            sub_2539E6C84();
            unint64_t v173 = v255[0];
          }
          ++v174;
          *(void *)(v173 + 16) = v179 + 1;
          unint64_t v180 = v173 + 16 * v179;
          *(void *)(v180 + 32) = v176;
          *(void *)(v180 + 40) = v177;
        }
        while (v172 != v174);
        swift_bridgeObjectRelease();
      }
      unint64_t v250 = v173;
      sub_253462A5C(&qword_269CDC550);
      sub_2534D359C();
      sub_253B096A0();
      swift_bridgeObjectRelease();
      sub_2539DF610();
      goto LABEL_95;
    case 0x16u:
    case 0x1Bu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_47;
    case 0x19u:
    case 0x2Bu:
    case 0x2Eu:
    case 0x2Fu:
    case 0x30u:
      goto LABEL_47;
    case 0x1Cu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_253A3F1BC();
      goto LABEL_95;
    case 0x1Du:
      uint64_t v181 = *v25;
      sub_253A3CC44();
      sub_253B0A000();
      swift_bridgeObjectRelease();
      unint64_t v250 = 0x20646E756F66;
      unint64_t v251 = 0xE600000000000000;
      uint64_t v182 = *(void *)(v181 + 16);
      swift_bridgeObjectRelease();
      v255[0] = v182;
      sub_253B0A480();
      sub_253B09860();
      swift_bridgeObjectRelease();
      sub_253B09860();
      goto LABEL_95;
    case 0x1Fu:
      sub_2539DF5B8((uint64_t)v25, v240);
      sub_253578ED4();
      uint64_t v183 = v234;
      uint64_t v184 = v232;
      sub_2534AF234();
      v185();
      sub_253A3E8DC();
      int v187 = v186();
      if (v187 == *MEMORY[0x263F4C7D8])
      {
        uint64_t v188 = sub_253A3BDA0();
        v189(v188);
        sub_253A3DB5C();
        sub_25347FA84();
        v190();
        sub_253A3F298();
        sub_253A3C1EC();
        sub_253B05BF0();
        sub_253A3F26C();
        sub_2534659CC();
        v191();
        sub_253A3BDE0();
        sub_253B05BC0();
        sub_253B09860();
        swift_bridgeObjectRelease();
        goto LABEL_93;
      }
      if (v187 == *MEMORY[0x263F4C790]
        || v187 == *MEMORY[0x263F4C7A0]
        || v187 == *MEMORY[0x263F4C7B8]
        || v187 == *MEMORY[0x263F4C7C0])
      {
        uint64_t v215 = sub_253A3BDA0();
        v216(v215);
        sub_25353CE6C();
        sub_25347FA84();
        v217();
        unint64_t v250 = 0;
        unint64_t v251 = 0xE000000000000000;
        sub_253A3C1EC();
        sub_253B0A170();
        goto LABEL_93;
      }
      sub_2539DF610();
      (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v183, v184);
      goto LABEL_47;
    case 0x20u:
      sub_253A3BE74((uint64_t)v25, (uint64_t)v255);
      sub_253A3DBD4();
      swift_bridgeObjectRelease();
      unint64_t v250 = v20 - 2;
      unint64_t v251 = 0x8000000253B13190;
      swift_bridgeObjectRetain();
      sub_253B09860();
      swift_bridgeObjectRelease();
      goto LABEL_94;
    case 0x21u:
      sub_253A3BE74((uint64_t)v25, (uint64_t)&a14);
      sub_253A3DBD4();
      swift_bridgeObjectRelease();
      sub_253A3F6C4();
      unint64_t v250 = v193;
      unint64_t v251 = v192;
      sub_253981530(*(void *)v127, (void (*)(void))type metadata accessor for SpeechRequestCandidate);
      sub_253A3F8B4();
      sub_2534D8B48(v26, 1, v194);
      if (v146)
      {
        sub_253472458(v26, &qword_26B249348);
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_2539DF610();
      }
      sub_253A3F60C();
      swift_bridgeObjectRelease();
      goto LABEL_94;
    case 0x22u:
      uint64_t v195 = (uint64_t)v25;
      uint64_t v196 = v239;
      sub_2539DF5B8(v195, v239);
      sub_2539DF660(v196, (uint64_t)v24);
      sub_25353CE60();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_253A3BE74((uint64_t)v24, (uint64_t)v237);
          sub_253A3D620();
          sub_253A3E604();
          swift_bridgeObjectRelease();
          goto LABEL_65;
        case 2u:
          uint64_t v207 = *v24;
          sub_253A3F28C();
          sub_253B0A000();
          swift_bridgeObjectRelease();
          unint64_t v250 = 0xD000000000000022;
          unint64_t v251 = 0x8000000253B13160;
          sub_253981530(v207, (void (*)(void))type metadata accessor for SpeechRequestCandidate);
          swift_bridgeObjectRelease();
          sub_253A3F8B4();
          uint64_t v208 = sub_2536D54B0();
          sub_2534D8B48(v208, v209, v210);
          if (v146)
          {
            sub_253472458(v23, &qword_26B249348);
          }
          else
          {
            swift_bridgeObjectRetain();
            sub_2539DF610();
          }
          sub_253A3F60C();
          swift_bridgeObjectRelease();
          break;
        case 3u:
          sub_253A3B8D4((uint64_t)v24, (uint64_t)&v236);
          RequestContent.SystemPromptResolution.description.getter();
          sub_253A3C064();
LABEL_65:
          sub_2539DF610();
          break;
        default:
          goto LABEL_94;
      }
      goto LABEL_94;
    case 0x23u:
      sub_2539DF5B8((uint64_t)v25, v241);
      sub_253578C34();
      sub_253B06830();
      uint64_t v197 = sub_2535B4148();
      int v199 = v198(v197);
      if (v199 == *MEMORY[0x263F4C100])
      {
        uint64_t v200 = sub_253A3BD88();
        v201(v200);
        sub_253A3DB5C();
        sub_25347FA84();
        v202();
        sub_253A3CC44();
        sub_253B0A000();
        sub_253A3C84C();
        sub_253B05BF0();
        sub_253A3F26C();
        sub_2534659CC();
        v203();
        sub_253A3BDE0();
        sub_253B05BC0();
        sub_253B09860();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v199 != *MEMORY[0x263F4C0B8]
          && v199 != *MEMORY[0x263F4C0C8]
          && v199 != *MEMORY[0x263F4C0E0]
          && v199 != *MEMORY[0x263F4C0E8])
        {
          sub_2539DF610();
          sub_2534D9220();
          v223();
          goto LABEL_47;
        }
        uint64_t v218 = sub_253A3BD88();
        v219(v218);
        sub_2535925F4();
        sub_25347FA84();
        v220();
        sub_253A3CC44();
        sub_253B0A000();
        sub_253A3C84C();
        sub_253B0A170();
      }
LABEL_93:
      sub_25351C3E8();
      v221();
LABEL_94:
      sub_2539DF610();
      goto LABEL_95;
    case 0x24u:
      sub_253A3F28C();
      sub_253B0A000();
      swift_bridgeObjectRelease();
      sub_253A3F670(0xD000000000000020);
      swift_bridgeObjectRetain();
      sub_253B09860();
      swift_bridgeObjectRelease();
      sub_253B09860();
      uint64_t v204 = swift_bridgeObjectRetain();
      MEMORY[0x25A268A80](v204, MEMORY[0x263F8D310]);
      sub_253B09860();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
LABEL_50:
      swift_bridgeObjectRelease();
      goto LABEL_95;
    case 0x25u:
      sub_253A3B8D4((uint64_t)v25, (uint64_t)&a11);
      ToolResolution.description.getter();
      sub_253A3C064();
      goto LABEL_94;
    case 0x26u:
      sub_253A3B8D4((uint64_t)v25, (uint64_t)&a13);
      UndoRedoRequest.description.getter();
      sub_253A3C064();
      goto LABEL_94;
    case 0x27u:
      sub_253A3B8D4((uint64_t)v25, (uint64_t)&a15);
      ClientUndoRedoRequest.description.getter();
      sub_253A3C064();
      goto LABEL_94;
    case 0x28u:
      sub_253A3B8D4((uint64_t)v25, (uint64_t)&a16);
      TypeConversionRequest.description.getter();
      sub_253A3C064();
      goto LABEL_94;
    case 0x29u:
      sub_253A3B8D4((uint64_t)v25, (uint64_t)&a17);
      TypeConversionResult.description.getter();
      sub_253A3C064();
      goto LABEL_94;
    case 0x2Au:
      sub_253A3B8D4((uint64_t)v25, (uint64_t)&a18);
      QueryDecorationResult.description.getter();
      sub_253A3C064();
      goto LABEL_94;
    case 0x2Cu:
      sub_2539DF5B8((uint64_t)v25, v238);
      QueryDecorationPrePlannerResult.description.getter();
      sub_2539DF610();
      goto LABEL_95;
    case 0x2Du:
      goto LABEL_95;
    default:
      goto LABEL_94;
  }
}

uint64_t static GlobalToolIdentifier.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v5 = a2[2];
  uint64_t v4 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (sub_253B0A4C0(), uint64_t result = sub_25397F648(), (v8 & 1) != 0))
  {
    if (v3)
    {
      if (v4)
      {
        BOOL v9 = v2 == v5 && v3 == v4;
        if (v9 || (sub_253A3CB64() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v4)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

IntelligenceFlowPlannerSupport::GlobalToolIdentifier __swiftcall GlobalToolIdentifier.init(toolId:deviceIdsId:)(Swift::String toolId, Swift::String_optional deviceIdsId)
{
  v2->value = toolId;
  v2[1] = deviceIdsId;
  result.deviceIdsId = deviceIdsId;
  result.toolId = toolId;
  return result;
}

void ProgramStatement.init(id:expression:isRoot:targetType:)()
{
  sub_2535B3C98();
  char v3 = v2;
  uint64_t v4 = sub_2539444B8();
  uint64_t v5 = (int *)type metadata accessor for ProgramStatement(v4);
  uint64_t v6 = v5[6];
  uint64_t v7 = v1 + v5[7];
  uint64_t v8 = sub_253B09150();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, 1, 1, v8);
  sub_253B059D0();
  sub_25346CAF4();
  sub_2534D8E14();
  v9();
  sub_2539DF5B8(v0, v1 + v5[5]);
  *(unsigned char *)(v1 + v6) = v3;
  uint64_t v10 = sub_253579258();
  sub_2539F0BE0(v10, v11, v12);
  sub_25346CD04();
}

void StatementResultPayload.init(outcome:response:)()
{
}

uint64_t StatementResult.init(actionEventId:toolId:payload:resultStatementId:originProgramStatementId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_2535E2390();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  sub_253A3F064();
  uint64_t v22 = sub_253B055C0();
  sub_253A3DE3C(v22);
  uint64_t v24 = v14 + v23;
  *(_OWORD *)uint64_t v24 = 0u;
  *(_OWORD *)(v24 + 16) = 0u;
  uint64_t v25 = sub_2534D9A78();
  sub_2539EFDC0(v25, v26, (uint64_t *)&unk_26B248CB0);
  if (!v19) {
    uint64_t v21 = 0;
  }
  uint64_t v27 = sub_2534D9840();
  sub_253472458(v27, v28);
  sub_253961BAC(*(void *)v24, *(void *)(v24 + 8));
  *(void *)uint64_t v24 = v21;
  *(void *)(v24 + 8) = v19;
  *(void *)(v24 + 16) = 0;
  *(void *)(v24 + 24) = 0;
  sub_2539DF5B8(v17, v14 + *(int *)(v15 + 20));
  sub_253B059D0();
  sub_253486600();
  uint64_t v42 = v29 + 32;
  uint64_t v43 = *(void *)(v29 + 32);
  sub_253A3E6BC();
  sub_253A3F038();
  v30();
  uint64_t v31 = sub_253A3D488();
  v32(v31);
  sub_253A3F018();
  sub_2535E2374();
  return v36(v33, v34, v35, v36, v37, v38, v39, v40, v42, v43, a11, a12, a13, a14);
}

__n128 Request.init(content:safetyMode:prescribedPlan:rewriteMetadataEventID:rewriteMetadataInlined:)()
{
  sub_2535E2390();
  sub_253A3F594();
  char v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  long long v25 = *v6;
  uint64_t v7 = *((void *)v6 + 2);
  uint64_t v8 = (int *)type metadata accessor for Request(0);
  uint64_t v9 = v5 + v8[6];
  uint64_t v10 = type metadata accessor for RequestPrescribedPlan(0);
  sub_25346CC08(v9, v11, v12, v10);
  uint64_t v13 = v5 + v8[7];
  uint64_t v14 = sub_253B055C0();
  sub_25346CC08(v13, v15, v16, v14);
  uint64_t v17 = (uint64_t *)(v5 + v8[8]);
  *uint64_t v17 = 0;
  v17[1] = 0;
  void v17[2] = 0;
  sub_2539DF5B8(v3, v5);
  *(unsigned char *)(v5 + v8[5]) = v1;
  uint64_t v18 = sub_253578EE0();
  sub_2539F0BE0(v18, v19, v20);
  uint64_t v21 = sub_253579270();
  sub_2539F0BE0(v21, v22, v23);
  sub_253961E88(*v17, v17[1]);
  *(_OWORD *)uint64_t v17 = v25;
  void v17[2] = v7;
  sub_2535E2374();
  return result;
}

__n128 ExternalAgentRequest.init(content:rewriteMetadataEventID:rewriteMetadataInlined:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9)
{
  sub_253A3C038();
  uint64_t v15 = sub_253A3D988();
  type metadata accessor for ExternalAgentRequest(v15);
  uint64_t v16 = sub_253A3F554();
  sub_253A3DE70(v16);
  sub_2539DF5B8(v10, v11);
  sub_2539F0BE0(v9, v13, (uint64_t *)&unk_26B248CB0);
  sub_253961E88(*v12, v12[1]);
  *(_OWORD *)uint64_t v12 = a9;
  v12[2] = v14;
  sub_253A3BEC0();
  return result;
}

uint64_t RequestContent.TextContent.init(text:statementId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_253985108(a1, a2, (void (*)(void))type metadata accessor for RequestContent.TextContent, a3);
}

uint64_t SpeechRequestCandidate.init(recognition:statementId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_253985108(a1, a2, (void (*)(void))type metadata accessor for SpeechRequestCandidate, a3);
}

uint64_t sub_253985108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(void)@<X3>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  a3(0);
  sub_2534F8578();
  sub_25346CAF4();
  uint64_t v4 = sub_25349C5EC();
  return v5(v4);
}

void RequestContent.SystemPromptResolution.init(actionEventId:systemResponseEventId:userAction:statementId:input:)()
{
  sub_2534B3258();
  uint64_t v2 = v1;
  sub_253A3E294();
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v6);
  sub_2534B464C();
  uint64_t v7 = sub_253B055C0();
  uint64_t v8 = sub_253A3D714();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v8, v9, v10, v7);
  uint64_t v11 = type metadata accessor for RequestContent.SystemPromptResolution(0);
  sub_2534D973C();
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = sub_253A3D518();
  sub_2539F0BE0(v12, v13, v14);
  sub_25347B88C();
  sub_253A3E6B0();
  sub_2534D8E14();
  v15();
  sub_2539DF5B8(v0, v4 + *(int *)(v11 + 24));
  sub_253B059D0();
  sub_25346CAF4();
  sub_2534D8E14();
  v16();
  sub_2534D8B48(v2, 1, v5);
  if (v17)
  {
    sub_2534DA2E4();
    swift_storeEnumTagMultiPayload();
    sub_253472458(v2, &qword_269CE5258);
  }
  else
  {
    uint64_t v18 = sub_2534ACF74();
    sub_2539DF5B8(v18, v19);
  }
  uint64_t v20 = sub_2534D99FC();
  sub_2539E7074(v20, v21);
  sub_253465A14();
}

IntelligenceFlowPlannerSupport::RequestContent::SystemPromptResolution::RequirementResolution __swiftcall RequestContent.SystemPromptResolution.RequirementResolution.init(isRequirementSatisfied:)(IntelligenceFlowPlannerSupport::RequestContent::SystemPromptResolution::RequirementResolution isRequirementSatisfied)
{
  v1->isRequirementSatisfied = isRequirementSatisfied.isRequirementSatisfied;
  return isRequirementSatisfied;
}

IntelligenceFlowPlannerSupport::RequestPrescribedPlan::SearchTool __swiftcall RequestPrescribedPlan.SearchTool.init(query:isLowConfidenceKnowledge:)(Swift::String query, Swift::Bool isLowConfidenceKnowledge)
{
  *(Swift::String *)uint64_t v2 = query;
  *(unsigned char *)(v2 + 16) = isLowConfidenceKnowledge;
  *(unsigned char *)(v2 + 17) = 0;
  result.query = query;
  result.isLowConfidenceKnowledge = isLowConfidenceKnowledge;
  return result;
}

IntelligenceFlowPlannerSupport::RequestPrescribedPlan::ConvertTool __swiftcall RequestPrescribedPlan.ConvertTool.init(query:isExplicit:)(Swift::String query, Swift::Bool isExplicit)
{
  *(Swift::String *)uint64_t v2 = query;
  *(unsigned char *)(v2 + 16) = isExplicit;
  result.query = query;
  result.isExplicit = isExplicit;
  return result;
}

uint64_t RequestPrescribedPlan.OpenTool.init(resultStatementId:elementAtIndex:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_2539447CC();
  type metadata accessor for RequestPrescribedPlan.OpenTool(v6);
  sub_253A3E338();
  sub_253B059D0();
  sub_25346CAF4();
  sub_2534D8E14();
  uint64_t result = v7();
  *(void *)uint64_t v4 = v3;
  *(unsigned char *)(v4 + 8) = a3 & 1;
  return result;
}

IntelligenceFlowPlannerSupport::RequestPrescribedPlan::OpenSuccessValueFromLatestRequestTool __swiftcall RequestPrescribedPlan.OpenSuccessValueFromLatestRequestTool.init(elementAtIndex:)(IntelligenceFlowPlannerSupport::RequestPrescribedPlan::OpenSuccessValueFromLatestRequestTool elementAtIndex)
{
  *(void *)uint64_t v1 = elementAtIndex.elementAtIndex.value;
  *(unsigned char *)(v1 + 8) = elementAtIndex.elementAtIndex.is_nil;
  return elementAtIndex;
}

uint64_t Action.toolId.getter()
{
  return sub_2539873EC();
}

uint64_t Action.deviceId.getter()
{
  return sub_2534ACF74();
}

void Session.Transcript.init(events:)()
{
  sub_2535B3C98();
  uint64_t v3 = v2;
  uint64_t v4 = sub_253A3F064();
  uint64_t v5 = (int *)type metadata accessor for Session.Transcript(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v6);
  sub_2534B3294();
  if (*(void *)(v3 + 16))
  {
    uint64_t v7 = (int *)(type metadata accessor for Session.Event(0) - 8);
    sub_2535786F4();
    uint64_t v9 = v3 + v8;
    sub_253B055C0();
    sub_25346CAF4();
    sub_253579334();
    sub_2534B3428();
    v10();
    uint64_t v11 = (uint64_t *)(v9 + v7[11]);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    uint64_t v14 = (void *)(v1 + v5[5]);
    *uint64_t v14 = v12;
    v14[1] = v13;
    uint64_t v15 = (uint64_t *)(v9 + v7[12]);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = (void *)(v1 + v5[6]);
    *uint64_t v18 = v16;
    v18[1] = v17;
    uint64_t v19 = (uint64_t *)(v9 + v7[13]);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = (void *)(v1 + v5[7]);
    void *v22 = v20;
    v22[1] = v21;
    *(void *)(v1 + v5[8]) = v3;
    sub_2539DF5B8(v1, v0);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v0, 0, 1, (uint64_t)v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25346CD04();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_253A3F684();
    sub_25346CD04();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v23, v24, v25, v26);
  }
}

uint64_t static ActionParameterContext.== infix(_:_:)()
{
  if ((sub_253A3D21C() & 1) == 0) {
    return 0;
  }
  uint64_t v3 = type metadata accessor for ActionParameterContext(0);
  sub_25397F578();
  BOOL v6 = v6 && v4 == v5;
  if (v6 || (sub_253B0A4C0(), uint64_t result = sub_25397F648(), (v8 & 1) != 0))
  {
    sub_253A3C160(*(int *)(v3 + 24));
    BOOL v11 = v6 && v9 == v10;
    if (v11 || (sub_253B0A4C0() & 1) != 0)
    {
      if (v1)
      {
        if (v0)
        {
          BOOL v12 = v3 == v2 && v1 == v0;
          if (v12 || (sub_25351C8D0() & 1) != 0) {
            return 1;
          }
        }
      }
      else if (!v0)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t ActionParameterContext.toolId.getter()
{
  return sub_2539856E0();
}

uint64_t Session.Transcript.sessionId.getter()
{
  return sub_2539DE358();
}

uint64_t Session.Transcript.clientSessionId.getter()
{
  return sub_2539B52EC();
}

uint64_t Session.Transcript.clientApplicationId.getter()
{
  return sub_2539856E0();
}

uint64_t sub_2539856E0()
{
  uint64_t v0 = sub_253A3C384();
  v1(v0);
  sub_2535E2488();
  return sub_2534ACF74();
}

uint64_t Session.Transcript.clientGroupId.getter()
{
  return sub_2539B00CC();
}

uint64_t Session.Transcript.events.getter()
{
  return sub_2539DA224();
}

uint64_t Session.Transcript.events.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Session.Transcript(0) + 32);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*Session.Transcript.events.modify())()
{
  return nullsub_1;
}

void Session.Transcript.init(sessionId:clientSessionId:clientApplicationId:clientGroupId:events:)()
{
  sub_2534B3258();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  sub_253A3B8FC();
  sub_253B055C0();
  sub_25346CAF4();
  sub_2534D8E14();
  v12();
  uint64_t v13 = (int *)type metadata accessor for Session.Transcript(0);
  uint64_t v14 = (void *)(v3 + v13[5]);
  *uint64_t v14 = v2;
  v14[1] = v1;
  uint64_t v15 = (void *)(v3 + v13[6]);
  *uint64_t v15 = v0;
  v15[1] = v11;
  uint64_t v16 = (void *)(v3 + v13[7]);
  *uint64_t v16 = v9;
  v16[1] = v7;
  *(void *)(v3 + v13[8]) = v5;
  sub_253465A14();
}

void Session.Transcript.init(sessionId:clientSessionId:clientApplicationId:clientGroupId:)()
{
  sub_2535B3C98();
  sub_253A3CABC();
  sub_253B055C0();
  sub_25346CAF4();
  sub_2534D8E14();
  v7();
  uint64_t v8 = (int *)type metadata accessor for Session.Transcript(0);
  uint64_t v9 = (void *)(v6 + v8[5]);
  void *v9 = v5;
  v9[1] = v4;
  uint64_t v10 = (void *)(v6 + v8[6]);
  void *v10 = v3;
  v10[1] = v2;
  uint64_t v11 = (void *)(v6 + v8[7]);
  *uint64_t v11 = v1;
  v11[1] = v0;
  *(void *)(v6 + v8[8]) = MEMORY[0x263F8EE78];
  sub_25346CD04();
}

void Session.Transcript.init(sessionId:clientSessionId:events:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2539444B8();
  sub_253B055C0();
  sub_25346CAF4();
  sub_2534D8E14();
  v8();
  uint64_t v9 = type metadata accessor for Session.Transcript(0);
  uint64_t v10 = (void *)(v5 + *(int *)(v9 + 20));
  void *v10 = v4;
  v10[1] = a3;
  sub_253A3E208((void *)(v5 + *(int *)(v9 + 24)));
  sub_253A3EF60((void *)(v5 + v11));
  *(void *)(v5 + v12) = a4;
}

uint64_t Session.Transcript.init(sessionId:clientSessionId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_253A3C038();
  sub_2539447CC();
  sub_253B055C0();
  sub_253465998();
  uint64_t v25 = v10;
  sub_2534D973C();
  sub_2534B3428();
  v11();
  uint64_t v12 = type metadata accessor for Session.Transcript(0);
  sub_253A3E2E4(v12);
  sub_253A3E208(v13);
  sub_253A3EF60((void *)(v9 + v14));
  *(void *)(v9 + v15) = MEMORY[0x263F8EE78];
  sub_253A3E9FC();
  sub_253A3BEC0();
  return v18(v16, v17, v18, v19, v20, v21, v22, v23, a9, v25);
}

uint64_t Session.Transcript.append(event:)(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for Session.Transcript(0) + 32));
  sub_2539DFADC((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_253523A70);
  uint64_t v4 = *(void *)(*v3 + 16);
  uint64_t v5 = sub_2534D973C();
  sub_2539DFBB0(v5, v6);
  uint64_t v7 = *v3;
  *(void *)(*v3 + 16) = v4 + 1;
  uint64_t v8 = type metadata accessor for Session.Event(0);
  sub_25346CB34(v8);
  uint64_t result = sub_2539DF660(a1, v7+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v10 + 72) * v4);
  *uint64_t v3 = v7;
  return result;
}

void Session.Transcript.formingQueryEvent(clientRequestId:_:)()
{
}

void Session.Transcript.formingQueryEvent(id:clientRequestId:_:)()
{
  sub_2534B3258();
  uint64_t v54 = v5;
  uint64_t v60 = v6;
  uint64_t v57 = v8;
  uint64_t v58 = v7;
  sub_2534D976C();
  sub_253B05550();
  sub_253465998();
  uint64_t v55 = v10;
  uint64_t v56 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v53 = sub_253A3DD4C();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Session.Event.Payload(0);
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  sub_25346CC6C();
  uint64_t v16 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v17 = sub_25346CB4C(v16);
  MEMORY[0x270FA5388](v17);
  uint64_t v18 = sub_253A3DC4C();
  sub_253465998();
  uint64_t v20 = v19;
  MEMORY[0x270FA5388](v21);
  sub_253A3B8EC();
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v31 = sub_253A3D8EC(v23, v24, v25, v26, v27, v28, v29, v30, v48[0]);
  uint64_t v32 = *(void (**)(void))(v20 + 16);
  uint64_t v50 = v31;
  sub_253535668();
  v32();
  uint64_t v51 = v4;
  sub_253A3E5C8();
  sub_253535668();
  v32();
  uint64_t v59 = v1;
  sub_253535668();
  v32();
  uint64_t v52 = v3;
  sub_2539446A0(v3);
  uint64_t v33 = v54;
  uint64_t v54 = v2;
  sub_2539DF660(v33, v2);
  uint64_t v34 = type metadata accessor for Session.Transcript(0);
  uint64_t v35 = *(void *)(v0 + *(int *)(v34 + 20) + 8);
  sub_253A3CF4C(v34);
  swift_bridgeObjectRetain();
  uint64_t v49 = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_253B05520();
  __uint64_t v36 = clock_gettime_nsec_np(_CLOCK_UPTIME_RAW);
  __uint64_t v37 = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
  if (qword_26B241258 != -1) {
    swift_once();
  }
  sub_253462BD4(v18, (uint64_t)qword_26B24A6A8);
  uint64_t v38 = v53;
  sub_253535668();
  v32();
  sub_2534D8E14();
  v39();
  *(void *)&v13[*(int *)(v38 + 20)] = v36;
  *(void *)&v13[*(int *)(v38 + 24)] = v37;
  sub_2539E6E54();
  uint64_t v40 = sub_253B095A0();
  sub_253A3BB08(v40, v41, v42, v43, v44, v45, v46, v47, v48[0], v48[1], v48[2], v48[3], v49, (uint64_t)v50, v51, v52, v53, v54);
  sub_2539DF610();
  sub_253465A14();
}

uint64_t Session.Event.init(id:sessionId:queryEventId:payload:clientRequestId:clientSessionId:clientApplicationId:clientGroupId:timepoint:sender:postingSpan:initiatedSpans:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17)
{
  uint64_t v18 = (int *)type metadata accessor for Session.Event(0);
  uint64_t v19 = a7 + v18[6];
  uint64_t v20 = sub_253B055C0();
  uint64_t v21 = sub_253A3CD60();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v21, v22, v23, v20);
  uint64_t v24 = (void *)(a7 + v18[11]);
  *uint64_t v24 = 0;
  v24[1] = 0;
  uint64_t v25 = (void *)(a7 + v18[13]);
  *uint64_t v25 = 0;
  v25[1] = 0;
  uint64_t v26 = a7 + v18[14];
  *(void *)uint64_t v26 = 0;
  *(unsigned char *)(v26 + 8) = 1;
  sub_25347B88C();
  uint64_t v28 = *(void (**)(void))(v27 + 32);
  sub_2534D970C();
  sub_253A3C378();
  v28();
  sub_253A3C378();
  v28();
  sub_2539F0BE0(a1, v19, (uint64_t *)&unk_26B248CB0);
  sub_2539DF5B8(a2, a7 + v18[7]);
  uint64_t v29 = (void *)(a7 + v18[8]);
  *uint64_t v29 = a3;
  v29[1] = a4;
  uint64_t v30 = (void *)(a7 + v18[9]);
  *uint64_t v30 = a5;
  v30[1] = a6;
  uint64_t v31 = (void *)(a7 + v18[10]);
  *uint64_t v31 = a8;
  v31[1] = a9;
  swift_bridgeObjectRelease();
  *uint64_t v24 = a10;
  v24[1] = a11;
  sub_2539DF5B8(a12, a7 + v18[12]);
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v25 = a13;
  v25[1] = a14;
  *(void *)uint64_t v26 = a15;
  *(unsigned char *)(v26 + 8) = a16 & 1;
  *(void *)(a7 + v18[15]) = a17;
  return result;
}

void Session.Transcript.formingQuerylessEvent(clientRequestId:_:)()
{
}

void sub_253986074()
{
  sub_2535B3C98();
  uint64_t v1 = v0;
  sub_253A3D4E4();
  uint64_t v2 = type metadata accessor for PreassignedEventID();
  uint64_t v3 = sub_25346CB4C(v2);
  MEMORY[0x270FA5388](v3);
  sub_253A3DD74();
  _s30IntelligenceFlowPlannerSupport20PlatformPnRTelemetryC7startedy10Foundation4UUIDVAA12StartedStateO_0aE7Library0aB11IdentifiersVSgAGtFZfA1__0();
  uint64_t v4 = sub_2539627B8();
  v1(v4);
  sub_25346CD04();
}

void Session.Transcript.formingQuerylessEvent(id:clientRequestId:_:)()
{
  sub_2534B3258();
  uint64_t v57 = v4;
  uint64_t v63 = v5;
  uint64_t v60 = v7;
  uint64_t v61 = v6;
  sub_253A3EF6C();
  sub_253B05550();
  sub_253465998();
  uint64_t v58 = v9;
  uint64_t v59 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v56 = sub_253A3DD4C();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Session.Event.Payload(0);
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  sub_25347FAAC();
  uint64_t v15 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v16 = sub_25346CB4C(v15);
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = sub_253A3DD24();
  sub_253465998();
  uint64_t v19 = v18;
  MEMORY[0x270FA5388](v20);
  sub_25351C738();
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v30 = sub_253A3D8EC(v22, v23, v24, v25, v26, v27, v28, v29, v51[0]);
  uint64_t v31 = *(void (**)(void))(v19 + 16);
  uint64_t v53 = v30;
  uint64_t v62 = v1;
  sub_253A3E7C8();
  v31();
  uint64_t v54 = v2;
  sub_2534DA604();
  sub_253A3E7C8();
  v31();
  uint64_t v32 = sub_253A3E424();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v32, v33, v34, v35);
  uint64_t v36 = v57;
  uint64_t v57 = v3;
  sub_2539DF660(v36, v3);
  uint64_t v37 = type metadata accessor for Session.Transcript(0);
  uint64_t v38 = *(void *)(v0 + *(int *)(v37 + 20) + 8);
  sub_253A3CF4C(v37);
  swift_bridgeObjectRetain();
  uint64_t v52 = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_253B05520();
  __uint64_t v39 = clock_gettime_nsec_np(_CLOCK_UPTIME_RAW);
  __uint64_t v40 = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
  if (qword_26B241258 != -1) {
    swift_once();
  }
  sub_253462BD4(v17, (uint64_t)qword_26B24A6A8);
  uint64_t v41 = v56;
  sub_253A3E7C8();
  v31();
  sub_2534D8E14();
  v42();
  *(void *)&v12[*(int *)(v41 + 20)] = v39;
  *(void *)&v12[*(int *)(v41 + 24)] = v40;
  sub_2539E6E54();
  uint64_t v43 = sub_253B095A0();
  sub_253A3BB08(v43, v44, v45, v46, v47, v48, v49, v50, v51[0], v51[1], v51[2], v51[3], v52, (uint64_t)v53, v54, v55, v56, v57);
  sub_2539DF610();
  sub_253465A14();
}

void Session.Transcript.formingOriginatingEventForTesting(_:clientRequestId:sender:)()
{
  sub_2535B3C98();
  sub_2535E2510();
  uint64_t v0 = type metadata accessor for PreassignedEventID();
  uint64_t v1 = sub_25346CB4C(v0);
  MEMORY[0x270FA5388](v1);
  sub_2534966B0();
  _s30IntelligenceFlowPlannerSupport20PlatformPnRTelemetryC7startedy10Foundation4UUIDVAA12StartedStateO_0aE7Library0aB11IdentifiersVSgAGtFZfA1__0();
  sub_253A3E7A0();
  Session.Transcript.formingOriginatingEventForTesting(id:_:clientRequestId:sender:)();
  sub_25346CD04();
}

void Session.Transcript.formingOriginatingEventForTesting(id:_:clientRequestId:sender:)()
{
  sub_2534B3258();
  uint64_t v51 = v4;
  uint64_t v53 = v5;
  uint64_t v54 = v6;
  uint64_t v49 = v7;
  uint64_t v52 = v8;
  sub_253B05550();
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  sub_2534D9B74();
  uint64_t v10 = type metadata accessor for Timepoint();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = sub_253A3C548();
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  sub_2534B3294();
  uint64_t v14 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_253A3DD24();
  sub_253465998();
  uint64_t v18 = v17;
  MEMORY[0x270FA5388](v19);
  sub_25351C738();
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  sub_253A3D8EC(v21, v22, v23, v24, v25, v26, v27, v28, v44);
  uint64_t v29 = *(void (**)(void))(v18 + 16);
  sub_253A3E108();
  v29();
  sub_2534DA604();
  sub_253A3E108();
  v29();
  uint64_t v48 = v0;
  sub_253A3D5E8(v0);
  uint64_t v30 = v49;
  uint64_t v50 = v2;
  sub_2539DF660(v30, v2);
  uint64_t v31 = (int *)type metadata accessor for Session.Transcript(0);
  uint64_t v32 = (uint64_t *)(v1 + v31[5]);
  uint64_t v33 = *v32;
  uint64_t v34 = v32[1];
  uint64_t v35 = (uint64_t *)(v1 + v31[6]);
  uint64_t v36 = v35[1];
  uint64_t v46 = *v35;
  uint64_t v47 = v33;
  uint64_t v37 = (uint64_t *)(v1 + v31[7]);
  uint64_t v38 = v37[1];
  uint64_t v45 = *v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_253B05520();
  __uint64_t v39 = clock_gettime_nsec_np(_CLOCK_UPTIME_RAW);
  __uint64_t v40 = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
  if (qword_26B241258 != -1) {
    swift_once();
  }
  sub_253462BD4(v16, (uint64_t)qword_26B24A6A8);
  sub_253A3E108();
  v29();
  sub_2534D8E14();
  v41();
  *(void *)(v3 + *(int *)(v10 + 20)) = v39;
  *(void *)(v3 + *(int *)(v10 + 24)) = v40;
  sub_2539E6E54();
  uint64_t v42 = sub_253B095A0();
  uint64_t v43 = swift_bridgeObjectRetain();
  Session.Event.init(id:sessionId:queryEventId:payload:clientRequestId:clientSessionId:clientApplicationId:clientGroupId:timepoint:sender:postingSpan:initiatedSpans:)(v48, v50, v53, v54, v47, v34, v52, v46, v36, v45, v38, v3, v51, v43, 0, 1, v42);
  sub_2539DF610();
  sub_253465A14();
}

uint64_t sub_2539867B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064;
  if (v2 || (sub_253B0A4C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6553746E65696C63 && a2 == 0xEF64496E6F697373;
    if (v6 || (sub_253B0A4C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x8000000253B12900 || (sub_253B0A4C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x7247746E65696C63 && a2 == 0xED0000644970756FLL;
      if (v7 || (sub_253B0A4C0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0x73746E657665 && a2 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        char v9 = sub_253B0A4C0();
        swift_bridgeObjectRelease();
        if (v9) {
          return 4;
        }
        else {
          return 5;
        }
      }
    }
  }
}

unint64_t sub_253986A08(char a1)
{
  unint64_t result = 0x496E6F6973736573;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6553746E65696C63;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x7247746E65696C63;
      break;
    case 4:
      unint64_t result = 0x73746E657665;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_253986AD4()
{
  return sub_253986A08(*v0);
}

uint64_t sub_253986ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2539867B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253986B04(uint64_t a1)
{
  unint64_t v2 = sub_2539E6EA0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253986B40(uint64_t a1)
{
  unint64_t v2 = sub_2539E6EA0();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Session.Transcript.encode(to:)()
{
  sub_2535B45A0();
  sub_2534F8530();
  sub_253462A5C(&qword_269CE5630);
  sub_253465998();
  MEMORY[0x270FA5388](v1);
  sub_25397F66C();
  sub_2539E6EA0();
  sub_2534DA3BC();
  sub_253A3DA50();
  sub_2539E6F90((uint64_t)&qword_26B248CA0);
  sub_253A3B6D0();
  if (!v0)
  {
    type metadata accessor for Session.Transcript(0);
    sub_253A3BC14();
    sub_253A3BF94();
    sub_253A3C964();
    sub_253462A5C(&qword_269CE5640);
    sub_2539E6EEC();
    sub_2534DA628();
  }
  uint64_t v2 = sub_2534F82A4();
  v3(v2);
  sub_2534F8864();
  sub_2535B4660();
}

void Session.Transcript.init(from:)()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  uint64_t v23 = v4;
  sub_253B055C0();
  sub_253465998();
  MEMORY[0x270FA5388](v5);
  sub_2534AF2A0(v6, v22);
  sub_253462A5C(&qword_269CE5650);
  sub_253465998();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_2534B33AC();
  char v9 = (int *)type metadata accessor for Session.Transcript(v8);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v10);
  sub_253465A3C();
  sub_25397F800(v3);
  sub_2539E6EA0();
  sub_253B0A660();
  if (v0)
  {
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v3);
  }
  else
  {
    sub_2539E6F90((uint64_t)&qword_269CDBCC8);
    sub_253A3C6B8();
    sub_253A3E478();
    sub_25347FA84();
    v11();
    sub_253A3CA94();
    uint64_t v12 = sub_253B0A320();
    uint64_t v13 = (uint64_t *)(v1 + v9[5]);
    *uint64_t v13 = v12;
    v13[1] = v14;
    sub_253A3D2C4();
    uint64_t v15 = sub_253B0A320();
    uint64_t v16 = (uint64_t *)(v1 + v9[6]);
    *uint64_t v16 = v15;
    v16[1] = v17;
    sub_253A3C954();
    uint64_t v18 = sub_253B0A2E0();
    uint64_t v19 = (uint64_t *)(v1 + v9[7]);
    *uint64_t v19 = v18;
    v19[1] = v20;
    sub_253462A5C(&qword_269CE5640);
    sub_253A3E054();
    sub_2539E6FD0();
    sub_253B0A370();
    sub_2534659CC();
    v21();
    *(void *)(v1 + v9[8]) = v24;
    sub_2539DF660(v1, v23);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v3);
    sub_2539DF610();
  }
  sub_2534F8590();
  sub_2534847C8();
}

void sub_2539870E4()
{
}

void sub_2539870FC()
{
}

uint64_t Session.Event.id.getter()
{
  return sub_2539DE358();
}

uint64_t Session.Event.id.setter()
{
  return sub_2539DE3D0();
}

uint64_t (*Session.Event.id.modify())()
{
  return nullsub_1;
}

uint64_t Session.Event.sessionId.getter()
{
  return sub_2539A3E30();
}

uint64_t Session.Event.sessionId.setter(uint64_t a1)
{
  return sub_2539A4674(a1, (uint64_t)type metadata accessor for Session.Event, MEMORY[0x263F07508]);
}

uint64_t (*Session.Event.sessionId.modify())()
{
  return nullsub_1;
}

uint64_t Session.Event.queryEventId.getter()
{
  return sub_2539A14E0();
}

uint64_t Session.Event.queryEventId.setter()
{
  return sub_2539A1538();
}

uint64_t (*Session.Event.queryEventId.modify())()
{
  return nullsub_1;
}

uint64_t Session.Event.payload.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Session.Event(0);
  return sub_2539DF660(v1 + *(int *)(v3 + 28), a1);
}

uint64_t Session.Event.payload.setter(uint64_t a1)
{
  type metadata accessor for Session.Event(0);
  sub_2535E2454();
  return sub_2539E7074(a1, v2);
}

uint64_t (*Session.Event.payload.modify())()
{
  return nullsub_1;
}

uint64_t Session.Event.clientRequestId.getter()
{
  return sub_2539CD70C();
}

uint64_t Session.Event.clientRequestId.setter()
{
  sub_253A3D96C();
  uint64_t result = sub_2535E2648();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*Session.Event.clientRequestId.modify())()
{
  return nullsub_1;
}

uint64_t Session.Event.clientSessionId.getter()
{
  return sub_2539873EC();
}

uint64_t sub_2539873EC()
{
  uint64_t v0 = sub_253A3C384();
  v1(v0);
  sub_2535E2488();
  return sub_2534ACF74();
}

uint64_t Session.Event.clientSessionId.setter(uint64_t a1, uint64_t a2)
{
  return sub_2539B246C(a1, a2);
}

uint64_t (*Session.Event.clientSessionId.modify())()
{
  return nullsub_1;
}

uint64_t Session.Event.clientApplicationId.getter()
{
  return sub_2534ACF74();
}

uint64_t Session.Event.clientApplicationId.setter()
{
  sub_253A3D96C();
  uint64_t result = sub_2535E2648();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*Session.Event.clientApplicationId.modify())()
{
  return nullsub_1;
}

uint64_t Session.Event.clientGroupId.getter()
{
  return sub_2534ACF74();
}

uint64_t Session.Event.clientGroupId.setter()
{
  sub_253A3D96C();
  uint64_t result = sub_2535E2648();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*Session.Event.clientGroupId.modify())()
{
  return nullsub_1;
}

uint64_t Session.Event.timepoint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Session.Event(0);
  return sub_2539DF660(v1 + *(int *)(v3 + 48), a1);
}

uint64_t Session.Event.timepoint.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Session.Event(0);
  return sub_2539E7074(a1, v1 + *(int *)(v3 + 48));
}

uint64_t (*Session.Event.timepoint.modify())()
{
  return nullsub_1;
}

uint64_t Session.Event.sender.getter()
{
  return sub_2534ACF74();
}

uint64_t Session.Event.sender.setter()
{
  sub_253A3D96C();
  uint64_t result = sub_2535E2648();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*Session.Event.sender.modify())()
{
  return nullsub_1;
}

uint64_t Session.Event.postingSpan.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Session.Event(0) + 56));
}

void Session.Event.postingSpan.setter()
{
  uint64_t v0 = type metadata accessor for Session.Event(0);
  sub_2535E28C4(*(int *)(v0 + 56));
}

uint64_t (*Session.Event.postingSpan.modify())()
{
  return nullsub_1;
}

uint64_t Session.Event.initiatedSpans.getter()
{
  type metadata accessor for Session.Event(0);
  return swift_bridgeObjectRetain();
}

uint64_t Session.Event.initiatedSpans.setter()
{
  uint64_t v2 = *(int *)(sub_253A3C8AC() + 60);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v2) = v0;
  return result;
}

uint64_t (*Session.Event.initiatedSpans.modify())()
{
  return nullsub_1;
}

void Session.Event.init(sessionId:queryEventId:payload:clientRequestId:clientSessionId:clientApplicationId:clientGroupId:timepoint:sender:postingSpan:initiatedSpans:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29)
{
  sub_2534B3258();
  uint64_t v54 = v33;
  uint64_t v55 = v32;
  uint64_t v57 = v34;
  uint64_t v58 = v35;
  uint64_t v56 = v36;
  uint64_t v38 = v37;
  uint64_t v53 = v39;
  uint64_t v40 = type metadata accessor for Timepoint();
  uint64_t v41 = sub_25346CB4C(v40);
  MEMORY[0x270FA5388](v41);
  uint64_t v42 = sub_2534D9C00();
  uint64_t v43 = type metadata accessor for Session.Event.Payload(v42);
  uint64_t v44 = sub_25346CB4C(v43);
  MEMORY[0x270FA5388](v44);
  sub_25346CC6C();
  uint64_t v45 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v46 = sub_25346CB4C(v45);
  MEMORY[0x270FA5388](v46);
  sub_253A3DC4C();
  sub_253465998();
  MEMORY[0x270FA5388](v47);
  sub_253A3B8EC();
  MEMORY[0x270FA5388](v48);
  sub_2536D4170();
  _s30IntelligenceFlowPlannerSupport20PlatformPnRTelemetryC7startedy10Foundation4UUIDVAA12StartedStateO_0aE7Library0aB11IdentifiersVSgAGtFZfA1__0();
  sub_253A3F588();
  sub_253A3E5C8();
  sub_2534AF234();
  v49();
  sub_253961F60(v38, v31, (uint64_t *)&unk_26B248CB0);
  uint64_t v50 = sub_253578D20();
  sub_2539DF660(v50, v51);
  sub_2539DF660(a24, v29);
  Session.Event.init(id:sessionId:queryEventId:payload:clientRequestId:clientSessionId:clientApplicationId:clientGroupId:timepoint:sender:postingSpan:initiatedSpans:)(v31, v30, v55, v56, v57, v58, v53, v54, a21, a22, a23, v29, a25, a26, a27, a28 & 1, a29);
  sub_2539DF610();
  sub_2539DF610();
  sub_253472458(v38, (uint64_t *)&unk_26B248CB0);
  sub_2534B3470();
  v52();
  sub_253465A14();
}

void Session.Event.init(sessionId:payload:clientRequestId:clientSessionId:clientApplicationId:clientGroupId:timestamp:sender:postingSpan:initiatedSpans:)()
{
}

void Session.Event.init(id:sessionId:payload:clientRequestId:clientSessionId:clientApplicationId:clientGroupId:timestamp:sender:postingSpan:initiatedSpans:)()
{
}

void Session.Event.init(sessionId:payload:clientRequestId:clientSessionId:timestamp:sender:postingSpan:initiatedSpans:)()
{
}

void Session.Event.timestamp.getter()
{
}

void sub_253987C44()
{
  uint64_t v0 = sub_253B05550();
  MEMORY[0x270FA5388](v0);
  (*(void (**)(void))(v1 + 16))();
  Session.Event.timestamp.setter();
}

void Session.Event.timestamp.setter()
{
}

void Session.Event.timestamp.modify()
{
}

uint64_t Session.Event.description.getter()
{
  sub_253B0A000();
  sub_253B09860();
  sub_253B055C0();
  sub_2539E6F90((uint64_t)&qword_26B248CA8);
  sub_253A3DDE8();
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_253B09860();
  uint64_t v1 = type metadata accessor for Session.Event(0);
  sub_253A3DDE8();
  sub_253A3F0F8();
  swift_bridgeObjectRelease();
  sub_253A3EA90();
  sub_253A3D400();
  sub_253A3DDD0();
  swift_bridgeObjectRelease();
  sub_253A3EA90();
  sub_253A3D400();
  sub_253A3DDD0();
  swift_bridgeObjectRelease();
  sub_253A3EA74();
  sub_253A3D400();
  sub_253A3DDD0();
  swift_bridgeObjectRelease();
  sub_253A3EA74();
  if (!*(void *)(v0 + *(int *)(v1 + 44) + 8)) {
    sub_253A3DFEC();
  }
  swift_bridgeObjectRetain();
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_253B09860();
  sub_253A3ECEC();
  sub_253B05550();
  sub_2539E6F90((uint64_t)&qword_26B248C98);
  sub_253B0A480();
  sub_253A3F0F8();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_253A3CE2C();
  Session.Event.Payload.description.getter(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12, 0, 0xE000000000000000, v14, v15, v16, v17, v18, v19, vars0,
    vars8);
  sub_253A3F0F8();
  swift_bridgeObjectRelease();
  sub_253A3EA74();
  if ((*(unsigned char *)(v0 + *(int *)(v1 + 56) + 8) & 1) == 0)
  {
    sub_25352C0D0();
    sub_253B09F00();
  }
  sub_253B09860();
  swift_bridgeObjectRelease();
  return v13;
}

BOOL sub_253988068()
{
  return sub_2539880A8();
}

BOOL sub_253988088()
{
  return sub_2539880A8();
}

BOOL sub_2539880A8()
{
  sub_253B0A2A0();
  sub_2534F8940();
  return v0 != 0;
}

BOOL sub_2539880E4()
{
  return sub_2539880A8();
}

uint64_t sub_253988108()
{
  return sub_25397FE30();
}

uint64_t sub_253988134()
{
  return sub_253981194();
}

BOOL sub_25398815C@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_2539880A8();
  *a1 = result;
  return result;
}

void sub_25398819C(void *a1@<X8>)
{
}

BOOL sub_2539881B0@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_253988068();
  *a1 = result;
  return result;
}

void sub_2539881E0(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_2539881EC(uint64_t a1)
{
  unint64_t v2 = sub_2539EB4D8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253988228(uint64_t a1)
{
  unint64_t v2 = sub_2539EB4D8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253988264()
{
  return sub_25397FE30();
}

uint64_t sub_253988298()
{
  return sub_253981194();
}

BOOL sub_2539882C8@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_2539880A8();
  *a1 = result;
  return result;
}

void sub_253988308(void *a1@<X8>)
{
}

uint64_t sub_253988324()
{
  return 0x74616469646E6163;
}

BOOL sub_253988340@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_253988088();
  *a1 = result;
  return result;
}

uint64_t sub_253988370(uint64_t a1)
{
  unint64_t v2 = sub_2539EB440();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539883AC(uint64_t a1)
{
  unint64_t v2 = sub_2539EB440();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539883E8()
{
  return sub_25397FE30();
}

uint64_t sub_253988410()
{
  return sub_253981194();
}

BOOL sub_253988434@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_2539880A8();
  *a1 = result;
  return result;
}

void sub_253988474(void *a1@<X8>)
{
}

uint64_t sub_253988484()
{
  return 1851878512;
}

BOOL sub_253988494@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_2539880E4();
  *a1 = result;
  return result;
}

uint64_t sub_2539884C4(uint64_t a1)
{
  unint64_t v2 = sub_2539EB35C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253988500(uint64_t a1)
{
  unint64_t v2 = sub_2539EB35C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Session.Event.Payload.queryBehavior.getter@<X0>(char *a1@<X8>)
{
  type metadata accessor for Session.Event.Payload(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v3);
  sub_25346CC54();
  sub_2539DF660(v1, v1);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if ((result - 32) < 5)
  {
    char v5 = 2;
  }
  else if ((result - 1) >= 3)
  {
    if (result)
    {
      if (result == 48)
      {
        char v5 = 3;
        goto LABEL_6;
      }
      char v5 = 0;
    }
    else
    {
      char v5 = 3;
    }
  }
  else
  {
    char v5 = 1;
  }
  uint64_t result = sub_2539DF610();
LABEL_6:
  *a1 = v5;
  return result;
}

uint64_t RequestContent.SystemPromptResolution.description.getter()
{
  uint64_t v1 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v2 = sub_25346CB4C(v1);
  MEMORY[0x270FA5388](v2);
  sub_2534B3294();
  sub_253A3BC78();
  sub_253B0A000();
  sub_253A3EC98();
  sub_253A3DEE8();
  sub_253A3D860();
  sub_253961F60(v3, v4, v5);
  uint64_t v6 = sub_253B055C0();
  sub_2534D8B48(v0, 1, v6);
  if (v7)
  {
    sub_253472458(v0, (uint64_t *)&unk_26B248CB0);
  }
  else
  {
    sub_253B05580();
    sub_25347B88C();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v6);
  }
  sub_2534D9A44();
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_253578F2C();
  sub_253B09860();
  type metadata accessor for RequestContent.SystemPromptResolution(0);
  sub_2539E6F90((uint64_t)&unk_26B248CA8);
  sub_253B0A480();
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_253B09860();
  RequestContent.SystemPromptResolution.UserAction.description.getter();
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_253A3B848();
  sub_253A3DA18();
  sub_2539E6F90((uint64_t)&unk_269CDC560);
  sub_253A3F4D0();
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_25351C9C4();
  return v10;
}

void Action.description.getter()
{
  sub_253A3C038();
  sub_253A3BDD0();
  sub_253B0A000();
  sub_253A3C8C4();
  sub_253A3C2E4();
  sub_253B059D0();
  sub_2539E6F90((uint64_t)&unk_269CDC560);
  sub_253A3E850();
  sub_253A3DE18();
  swift_bridgeObjectRelease();
  sub_253A3CE2C();
  uint64_t v1 = type metadata accessor for Action(0);
  swift_bridgeObjectRetain();
  sub_253A3DDD0();
  swift_bridgeObjectRelease();
  sub_253A3EAE8();
  sub_253B09860();
  if (!*(void *)(v0 + *(int *)(v1 + 20) + 8)) {
    sub_253A3DFEC();
  }
  swift_bridgeObjectRetain();
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_253A3D1D4();
  swift_bridgeObjectRetain();
  sub_253A3DDD0();
  swift_bridgeObjectRelease();
  sub_253A3C5D0();
  sub_253B09860();
  type metadata accessor for Action.ParameterValue(0);
  swift_bridgeObjectRetain();
  sub_253B09590();
  sub_253A3EE98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_253A3EAE8();
  sub_253B09860();
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_253A3B9F8();
  sub_253A3ECD8();
  swift_bridgeObjectRetain();
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_25351C9C4();
  sub_253A3BEC0();
}

void ClientAction.description.getter()
{
}

uint64_t ActionCancellation.description.getter()
{
  sub_253462A5C(&qword_269CDB460);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v0);
  sub_253A3BC78();
  sub_253B0A000();
  sub_253A3EC98();
  sub_253A3DEE8();
  uint64_t v1 = sub_253945CF8();
  sub_253961F60(v1, v2, &qword_269CDB460);
  sub_2534D9B10();
  sub_253B09730();
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_253578F2C();
  sub_253B09860();
  sub_253A3DF84();
  sub_253A3DA18();
  sub_2539E6F90((uint64_t)&unk_269CDC560);
  sub_253A3F4D0();
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_25351C9C4();
  return v4;
}

uint64_t ExternalAgentOutcome.outcome.getter()
{
  uint64_t v0 = sub_2534F8A1C();
  type metadata accessor for ExternalAgentOutcome(v0);
  return sub_253B06830();
}

uint64_t ToolResolution.description.getter()
{
  sub_253A3DFFC();
  sub_253A3C8C4();
  sub_253578F2C();
  sub_253B09860();
  sub_253B08AF0();
  sub_253A3DE18();
  swift_bridgeObjectRelease();
  sub_253A3B848();
  type metadata accessor for ToolResolution(0);
  sub_253A3DA18();
  sub_2539E6F90((uint64_t)&unk_269CDC560);
  sub_253A3DDE8();
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_253A3C2E4();
  sub_253A3DDE8();
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_25351C9C4();
  return v1;
}

void UndoRedoRequest.description.getter()
{
  sub_2534B3258();
  uint64_t v3 = sub_253B059D0();
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_2534B3294();
  uint64_t v5 = sub_253462A5C(&qword_269CDB460);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_2534847E0();
  uint64_t v7 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_2534966B0();
  sub_253B0A000();
  sub_253A3DEE8();
  uint64_t v9 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  sub_253579258();
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_253B09860();
  type metadata accessor for UndoRedoRequest(0);
  sub_253A3D3D4();
  sub_253961F60(v0 + v10, v2, (uint64_t *)&unk_26B248CB0);
  uint64_t v11 = sub_253B055C0();
  sub_2534D8B48(v2, 1, v11);
  if (v12)
  {
    sub_253472458(v2, (uint64_t *)&unk_26B248CB0);
  }
  else
  {
    sub_253B05570();
    sub_25347B88C();
    uint64_t v13 = sub_253A3E5D4();
    v14(v13);
  }
  sub_253579264();
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_253A3CFAC();
  sub_253B0A170();
  sub_253A3B848();
  sub_2539E6F90((uint64_t)&unk_269CDC560);
  sub_253B0A480();
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_253A3C84C();
  sub_253961F60(v0 + *(int *)(v9 + 32), v1, &qword_269CDB460);
  sub_2534D8B48(v1, 1, v3);
  if (!v12)
  {
    sub_253A3CF28();
    sub_253579334();
    sub_25347FA84();
    v15();
    sub_253B0A480();
    uint64_t v16 = sub_2534D973C();
    v17(v16);
  }
  sub_253945CF8();
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_25351C9C4();
  sub_253465A14();
}

void ClientUndoRedoRequest.description.getter()
{
  sub_2534B3258();
  uint64_t v0 = sub_253B059D0();
  sub_253465998();
  MEMORY[0x270FA5388](v1);
  sub_25348366C();
  uint64_t v2 = sub_253462A5C(&qword_269CDB460);
  uint64_t v3 = sub_25346CB4C(v2);
  MEMORY[0x270FA5388](v3);
  sub_253B0A000();
  sub_253A3DEE8();
  sub_253B05570();
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_253A3CFAC();
  type metadata accessor for ClientUndoRedoRequest(0);
  sub_253A3D3D4();
  sub_253B0A170();
  sub_253A3B848();
  sub_2539E6F90((uint64_t)&unk_269CDC560);
  sub_253B0A480();
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_253A3C84C();
  sub_253A3F548();
  sub_253961F60(v4, v5, v6);
  uint64_t v7 = sub_2536D54B0();
  sub_2534D8B48(v7, v8, v0);
  if (v9)
  {
    sub_253A3DFEC();
  }
  else
  {
    sub_25347FA84();
    v10();
    sub_253B0A480();
    uint64_t v11 = sub_25351C5CC();
    v12(v11);
  }
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_25351C9C4();
  sub_253465A14();
}

void TypeConversionRequest.description.getter()
{
}

void TypeConversionResult.description.getter()
{
}

void QueryDecorationResult.description.getter()
{
  sub_2534B3258();
  sub_253462A5C(&qword_269CDBB30);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v0);
  sub_2534847E0();
  sub_253462A5C(&qword_269CDE490);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_253B36A70;
  uint64_t v2 = sub_253B07B60();
  uint64_t v3 = swift_bridgeObjectRetain();
  MEMORY[0x25A268A80](v3, v2);
  swift_bridgeObjectRelease();
  sub_253A3EC0C(0x203A736E6170737BLL);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_253A3D234();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = v13;
  *(void *)(v1 + 40) = v14;
  uint64_t v4 = type metadata accessor for RetrievedContextStatement(0);
  uint64_t v5 = swift_bridgeObjectRetain();
  MEMORY[0x25A268A80](v5, v4);
  swift_bridgeObjectRelease();
  sub_253A3F6C4();
  uint64_t v15 = v6;
  sub_2534D9840();
  sub_253B09860();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_253A3D234();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = 0xD000000000000012;
  *(void *)(v1 + 56) = v15;
  uint64_t v7 = swift_bridgeObjectRetain();
  MEMORY[0x25A268A80](v7, v4);
  swift_bridgeObjectRelease();
  sub_253A3EC0C(0xD000000000000013);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_253A3D234();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = 0xD000000000000012;
  *(void *)(v1 + 72) = v15;
  type metadata accessor for QueryDecorationResult(0);
  sub_253A3E7A0();
  sub_253961F60(v8, v9, v10);
  sub_25353CE60();
  sub_253B09730();
  sub_253B09860();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_253A3D234();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 80) = 0xD000000000000018;
  *(void *)(v1 + 88) = 0x8000000253B136B0;
  uint64_t v11 = type metadata accessor for DynamicEnumerationEntityStatement(0);
  uint64_t v12 = swift_bridgeObjectRetain();
  MEMORY[0x25A268A80](v12, v11);
  swift_bridgeObjectRelease();
  sub_253A3E9E4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_253A3D234();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 96) = 0xD00000000000001DLL;
  *(void *)(v1 + 104) = 0x8000000253B136D0;
  sub_253462A5C(&qword_269CDC550);
  sub_2534D359C();
  sub_253B096A0();
  swift_bridgeObjectRelease();
  sub_2534DA2E4();
  sub_253465A14();
}

uint64_t QueryDecorationPrePlannerResult.description.getter()
{
  sub_253B0A000();
  swift_bridgeObjectRelease();
  sub_253A3ECF8();
  sub_253B059D0();
  sub_2539E6F90((uint64_t)&unk_269CDC560);
  sub_253A3E850();
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_253A3D234();
  sub_253B0A000();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_253A3ECF8();
  type metadata accessor for QueryDecorationPrePlannerResult(v0);
  swift_bridgeObjectRetain();
  sub_253B09860();
  swift_bridgeObjectRelease();
  sub_253A3D234();
  swift_bridgeObjectRetain();
  sub_253B09860();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_253A3CE2C();
  sub_253A3E230();
  sub_253B0A170();
  sub_253A3D234();
  swift_bridgeObjectRetain();
  sub_2534D9AA0();
  sub_253B09860();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t Session.Event.Payload.eventTypeString.getter()
{
  unint64_t v1 = 0xD000000000000010;
  type metadata accessor for Session.Event.Payload(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v2);
  sub_25346CC54();
  sub_2539DF660(v0, v0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_2539DF610();
      return 0x7265755174786554;
    case 2u:
      sub_2539DF610();
      return 0x7551686365657053;
    case 3u:
      sub_2539DF610();
      return 0x74736575716552;
    case 4u:
      sub_2539DF610();
      return 0x616572436E616C50;
    case 5u:
      sub_2539DF610();
      return 0x72436E6F69746341;
    case 6u:
      sub_2539DF610();
      sub_253A3E52C();
      return 0x6143000000000010;
    case 7u:
    case 0x1Au:
      sub_2539DF610();
      unint64_t v1 = 0xD000000000000013;
      goto LABEL_35;
    case 8u:
      sub_2539DF610();
      return 0x4373656972657551;
    case 9u:
      sub_2539DF610();
      return 0x656C626169726156;
    case 0xAu:
      sub_2539DF610();
      return 0x6578457370657453;
    case 0xBu:
    case 0xCu:
    case 0x1Bu:
      sub_2539DF610();
      goto LABEL_35;
    case 0xDu:
      sub_2539DF610();
      return 0x6C61636974697243;
    case 0xEu:
      sub_2539DF610();
      return 0x7543746E65696C43;
    case 0xFu:
    case 0x17u:
    case 0x27u:
    case 0x28u:
    case 0x2Au:
      sub_2539DF610();
      unint64_t v1 = 0xD000000000000015;
      goto LABEL_35;
    case 0x10u:
    case 0x22u:
    case 0x23u:
    case 0x29u:
      sub_2539DF610();
      unint64_t v1 = 0xD000000000000014;
      goto LABEL_35;
    case 0x11u:
      sub_2539DF610();
      sub_253A3E52C();
      return 0x7845000000000010;
    case 0x12u:
      sub_2539DF610();
      return 0x4573656972657551;
    case 0x13u:
    case 0x18u:
    case 0x1Eu:
      sub_2539DF610();
      unint64_t v1 = 0xD000000000000017;
      goto LABEL_35;
    case 0x14u:
      sub_2539DF610();
      unint64_t v1 = 0xD00000000000001CLL;
      goto LABEL_35;
    case 0x15u:
      sub_2539DF610();
      unint64_t v1 = 0xD000000000000020;
      goto LABEL_35;
    case 0x16u:
      sub_2539DF610();
      unint64_t v1 = 0xD00000000000001BLL;
      goto LABEL_35;
    case 0x19u:
      unint64_t v1 = 0xD000000000000011;
      goto LABEL_35;
    case 0x1Cu:
      sub_2539DF610();
      sub_253A3F1BC();
      return 0x746552736C6F6F54;
    case 0x1Du:
      sub_2539DF610();
      unint64_t v1 = 0xD000000000000011;
      goto LABEL_35;
    case 0x1Fu:
      sub_2539DF610();
      unint64_t v1 = 0xD000000000000012;
      goto LABEL_35;
    case 0x20u:
      sub_2539DF610();
      unint64_t v1 = 0xD000000000000016;
      goto LABEL_35;
    case 0x21u:
      sub_2539DF610();
      unint64_t v1 = 0xD000000000000018;
      goto LABEL_35;
    case 0x24u:
      sub_2539DF610();
      unint64_t v1 = 0xD000000000000023;
      goto LABEL_35;
    case 0x25u:
      sub_2539DF610();
      return 0x6F7365526C6F6F54;
    case 0x26u:
      sub_2539DF610();
      return 0x6F6465526F646E55;
    case 0x2Bu:
    case 0x2Fu:
      goto LABEL_35;
    case 0x2Cu:
      sub_2539DF610();
      unint64_t v1 = 0xD00000000000001FLL;
LABEL_35:
      sub_253578F2C();
      break;
    case 0x2Du:
      return v1;
    case 0x2Eu:
      unint64_t v1 = 0x616C50664F646E45;
      break;
    case 0x30u:
      unint64_t v1 = 0x74616E696D726554;
      break;
    default:
      sub_2539DF610();
      unint64_t v1 = 0x536E6F6973736553;
      break;
  }
  return v1;
}

uint64_t Session.Event.Payload.payloadType.getter@<X0>(char *a1@<X8>)
{
  type metadata accessor for Session.Event.Payload(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v3);
  sub_25346CC54();
  sub_2539DF660(v1, v1);
  uint64_t result = swift_getEnumCaseMultiPayload();
  char v5 = 8;
  switch((int)result)
  {
    case 1:
    case 2:
    case 10:
    case 11:
    case 14:
    case 15:
    case 16:
    case 17:
    case 19:
    case 22:
    case 23:
    case 24:
    case 27:
    case 28:
    case 29:
    case 32:
    case 33:
      uint64_t result = sub_2539DF610();
      goto LABEL_3;
    case 3:
      uint64_t result = sub_2539DF610();
      char v5 = 1;
      break;
    case 4:
      uint64_t result = sub_2539DF610();
      char v5 = 2;
      break;
    case 5:
      uint64_t result = sub_2539DF610();
      char v5 = 3;
      break;
    case 6:
      uint64_t result = sub_2539DF610();
      char v5 = 4;
      break;
    case 7:
      uint64_t result = sub_2539DF610();
      char v5 = 5;
      break;
    case 8:
      uint64_t result = sub_2539DF610();
      char v5 = 6;
      break;
    case 9:
      uint64_t result = sub_2539DF610();
      char v5 = 7;
      break;
    case 12:
      uint64_t result = sub_2539DF610();
      char v5 = 9;
      break;
    case 13:
      uint64_t result = sub_2539DF610();
      char v5 = 10;
      break;
    case 18:
      uint64_t result = sub_2539DF610();
      char v5 = 13;
      break;
    case 20:
      uint64_t result = sub_2539DF610();
      char v5 = 14;
      break;
    case 21:
      uint64_t result = sub_2539DF610();
      char v5 = 15;
      break;
    case 25:
      char v5 = 16;
      break;
    case 26:
      uint64_t result = sub_2539DF610();
      char v5 = 17;
      break;
    case 30:
      uint64_t result = sub_2539DF610();
      char v5 = 18;
      break;
    case 31:
      uint64_t result = sub_2539DF610();
      char v5 = 19;
      break;
    case 34:
      uint64_t result = sub_2539DF610();
      char v5 = 20;
      break;
    case 35:
      uint64_t result = sub_2539DF610();
      char v5 = 21;
      break;
    case 36:
      uint64_t result = sub_2539DF610();
      char v5 = 22;
      break;
    case 37:
      uint64_t result = sub_2539DF610();
      char v5 = 23;
      break;
    case 38:
      uint64_t result = sub_2539DF610();
      char v5 = 24;
      break;
    case 39:
      uint64_t result = sub_2539DF610();
      char v5 = 25;
      break;
    case 40:
      uint64_t result = sub_2539DF610();
      char v5 = 26;
      break;
    case 41:
      uint64_t result = sub_2539DF610();
      char v5 = 27;
      break;
    case 42:
      uint64_t result = sub_2539DF610();
      char v5 = 28;
      break;
    case 43:
      char v5 = 29;
      break;
    case 44:
      uint64_t result = sub_2539DF610();
      char v5 = 30;
      break;
    case 45:
      break;
    case 46:
      char v5 = 11;
      break;
    case 47:
LABEL_3:
      char v5 = 31;
      break;
    case 48:
      char v5 = 12;
      break;
    default:
      uint64_t result = sub_2539DF610();
      char v5 = 0;
      break;
  }
  *a1 = v5;
  return result;
}

uint64_t sub_25398ACB0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x647261646E617473 && a2 == 0xE800000000000000;
  if (v2 || (sub_253B0A4C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
    if (v6 || (sub_253B0A4C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x79726F7369766461 && a2 == 0xE800000000000000;
      if (v7 || (sub_253B0A4C0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x8000000253B13A10)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v8 = sub_253B0A4C0();
        swift_bridgeObjectRelease();
        if (v8) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

unint64_t sub_25398AE58(char a1)
{
  unint64_t result = 0x647261646E617473;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7972657571;
      break;
    case 2:
      unint64_t result = 0x79726F7369766461;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25398AEE8(uint64_t a1)
{
  unint64_t v2 = sub_2539E71E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25398AF24(uint64_t a1)
{
  unint64_t v2 = sub_2539E71E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25398AF60(uint64_t a1)
{
  unint64_t v2 = sub_2539E7194();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25398AF9C(uint64_t a1)
{
  unint64_t v2 = sub_2539E7194();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_25398AFD8()
{
  return sub_25398AE58(*v0);
}

uint64_t sub_25398AFE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25398ACB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25398B008(uint64_t a1)
{
  unint64_t v2 = sub_2539E7148();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25398B044(uint64_t a1)
{
  unint64_t v2 = sub_2539E7148();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25398B080(uint64_t a1)
{
  unint64_t v2 = sub_2539E722C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25398B0BC(uint64_t a1)
{
  unint64_t v2 = sub_2539E722C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25398B0F8(uint64_t a1)
{
  unint64_t v2 = sub_2539E7278();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25398B134(uint64_t a1)
{
  unint64_t v2 = sub_2539E7278();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Session.Event.Payload.QueryTrackingBehavior.encode(to:)()
{
  sub_2534847F8();
  sub_253A3E9D8();
  sub_253462A5C(&qword_269CE5660);
  sub_253465998();
  MEMORY[0x270FA5388](v2);
  sub_2534AF2A0(v3, v15);
  sub_253462A5C(&qword_269CE5668);
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_25347FA68(v5, v16);
  sub_253462A5C(&qword_269CE5670);
  sub_253465998();
  MEMORY[0x270FA5388](v6);
  sub_2534D8F68(v7, v17);
  sub_253462A5C(&qword_269CE5678);
  sub_253465998();
  MEMORY[0x270FA5388](v8);
  sub_2534847E0();
  sub_253462A5C(&qword_269CE5680);
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  sub_25346CC6C();
  uint64_t v10 = *v0;
  sub_253A3BEA4(v1);
  sub_2539E7148();
  sub_253B0A680();
  switch(v10)
  {
    case 1:
      sub_2539E722C();
      sub_253A3C2A8();
      goto LABEL_6;
    case 2:
      sub_2539E71E0();
      sub_253A3C2A8();
      goto LABEL_6;
    case 3:
      sub_2539E7194();
      sub_253A3C2A8();
LABEL_6:
      sub_2534D8E50();
      break;
    default:
      sub_2539E7278();
      sub_253A3C2A8();
      break;
  }
  sub_2534659CC();
  v12(v11);
  sub_2534D91AC();
  v14(v13);
  sub_253A3F5C8();
  sub_2534847C8();
}

void Session.Event.Payload.QueryTrackingBehavior.init(from:)()
{
  sub_2534847F8();
  uint64_t v3 = v2;
  uint64_t v36 = v4;
  sub_253462A5C(&qword_269CE56B0);
  sub_253465998();
  MEMORY[0x270FA5388](v5);
  sub_2536D2C5C(v6, v33);
  sub_253462A5C(&qword_269CE56B8);
  sub_253465998();
  MEMORY[0x270FA5388](v7);
  sub_25347FA68(v8, v34);
  sub_253462A5C(&qword_269CE56C0);
  sub_253465998();
  MEMORY[0x270FA5388](v9);
  sub_253465A3C();
  sub_253462A5C(&qword_269CE56C8);
  sub_253465998();
  MEMORY[0x270FA5388](v10);
  sub_2534847E0();
  uint64_t v11 = sub_253462A5C(&qword_269CE56D0);
  sub_253465998();
  uint64_t v37 = v12;
  MEMORY[0x270FA5388](v13);
  sub_2534B34A4();
  uint64_t v14 = (void *)sub_25351C5C0();
  sub_253472068(v14, v15);
  sub_2539E7148();
  sub_253B0A660();
  if (v0) {
    goto LABEL_7;
  }
  uint64_t v38 = v3;
  uint64_t v16 = sub_253B0A390();
  if (!*(void *)(v16 + 16)
    || (sub_2534D96C0(),
        uint64_t v35 = *(unsigned __int8 *)(v16 + 32),
        sub_25347B78C(1, v17, v16, v16 + 32, 0, v18),
        uint64_t v20 = v19,
        unint64_t v22 = v21,
        swift_bridgeObjectRelease(),
        v20 != v22 >> 1))
  {
    sub_253B0A090();
    sub_2534D969C();
    uint64_t v24 = v23;
    sub_253462A5C(&qword_269CDB688);
    sub_253A3ED24();
    *uint64_t v24 = &type metadata for Session.Event.Payload.QueryTrackingBehavior;
    sub_253B0A2D0();
    sub_2534F8464();
    sub_25347B88C();
    uint64_t v25 = sub_2534F859C();
    v26(v25);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v1, v11);
    uint64_t v3 = v38;
LABEL_7:
    uint64_t v27 = v3;
    goto LABEL_8;
  }
  switch(v35)
  {
    case 1:
      sub_2539E722C();
      sub_253A3D314();
      goto LABEL_12;
    case 2:
      sub_2539E71E0();
      sub_253A3D314();
      goto LABEL_12;
    case 3:
      sub_2539E7194();
      sub_253A3D314();
      sub_2535B4148();
      sub_25351C3E8();
      v30();
      swift_unknownObjectRelease();
      sub_2534B3470();
      v31();
      uint64_t v27 = v38;
      uint64_t v32 = v36;
      goto LABEL_13;
    default:
      sub_2539E7278();
      sub_253A3D314();
LABEL_12:
      sub_2534F83C0();
      sub_2534659CC();
      v28();
      swift_unknownObjectRelease();
      sub_2534B3470();
      v29();
      uint64_t v27 = v38;
      uint64_t v32 = v36;
LABEL_13:
      unsigned char *v32 = v35;
      break;
  }
LABEL_8:
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v27);
  sub_2536D4C48();
  sub_2534847C8();
}

void sub_25398B910()
{
}

void sub_25398B928()
{
}

void static Session.Event.Payload.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_2534B3258();
  a19 = v26;
  a20 = v27;
  uint64_t v362 = v28;
  uint64_t v363 = (void *)v29;
  uint64_t DecorationPrePlannerResult = type metadata accessor for QueryDecorationPrePlannerResult(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v30);
  uint64_t v327 = (char *)v308 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t DecorationResult = type metadata accessor for QueryDecorationResult(0);
  uint64_t v33 = sub_25346CB4C(DecorationResult);
  MEMORY[0x270FA5388](v33);
  uint64_t v325 = (char *)v308 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for TypeConversionResult(0);
  uint64_t v36 = sub_25346CB4C(v35);
  MEMORY[0x270FA5388](v36);
  uint64_t v324 = (char *)v308 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for TypeConversionRequest(0);
  uint64_t v39 = sub_25346CB4C(v38);
  MEMORY[0x270FA5388](v39);
  uint64_t v323 = (char *)v308 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for ClientUndoRedoRequest(0);
  uint64_t v42 = sub_25346CB4C(v41);
  MEMORY[0x270FA5388](v42);
  uint64_t v322 = (char *)v308 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for UndoRedoRequest(0);
  uint64_t v45 = sub_25346CB4C(v44);
  MEMORY[0x270FA5388](v45);
  uint64_t v321 = (char *)v308 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for ToolResolution(0);
  uint64_t v48 = sub_25346CB4C(v47);
  MEMORY[0x270FA5388](v48);
  uint64_t v326 = (char *)v308 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v308[5] = type metadata accessor for ExternalAgentOutcome(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v50);
  uint64_t v52 = sub_2534F8208((uint64_t)v308 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v53 = type metadata accessor for ExternalAgentRequest(v52);
  uint64_t v54 = sub_25346CB4C(v53);
  MEMORY[0x270FA5388](v54);
  uint64_t v56 = sub_2534F8208((uint64_t)v308 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v57 = type metadata accessor for ExternalAgentSpeechQuery(v56);
  uint64_t v58 = sub_25346CB4C(v57);
  MEMORY[0x270FA5388](v58);
  sub_25346CB04();
  uint64_t v320 = v59;
  uint64_t v60 = type metadata accessor for ExternalAgentTextQuery(0);
  uint64_t v61 = sub_25346CB4C(v60);
  MEMORY[0x270FA5388](v61);
  uint64_t v63 = sub_253A3E654((uint64_t)v308 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v64 = sub_25346CB4C(v63);
  MEMORY[0x270FA5388](v64);
  uint64_t v319 = (char *)v308 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v332 = sub_253B06720();
  sub_253465998();
  v331[1] = v66;
  MEMORY[0x270FA5388](v67);
  sub_25346CB04();
  uint64_t v318 = v68;
  uint64_t v69 = type metadata accessor for ActionResolverRequest(0);
  uint64_t v70 = sub_25346CB4C(v69);
  MEMORY[0x270FA5388](v70);
  sub_2534F8208((uint64_t)v308 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0));
  v331[0] = sub_253B05CF0();
  sub_253465998();
  uint64_t v330 = v72;
  MEMORY[0x270FA5388](v73);
  uint64_t v316 = (char *)v308 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  v308[3] = type metadata accessor for QueryStepResults(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v75);
  sub_25346CB04();
  uint64_t v317 = v76;
  uint64_t v77 = type metadata accessor for ActionStepResult(0);
  uint64_t v78 = sub_25346CB4C(v77);
  MEMORY[0x270FA5388](v78);
  sub_25346CB04();
  uint64_t v315 = v79;
  uint64_t v80 = type metadata accessor for RequestContent.SystemPromptResolution(0);
  uint64_t v81 = sub_25346CB4C(v80);
  MEMORY[0x270FA5388](v81);
  sub_2534F8208((uint64_t)v308 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v329 = sub_253B059F0();
  sub_253465998();
  uint64_t v328 = v83;
  MEMORY[0x270FA5388](v84);
  uint64_t v314 = (char *)v308 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for SessionError();
  uint64_t v87 = sub_25346CB4C(v86);
  MEMORY[0x270FA5388](v87);
  sub_25346CB04();
  uint64_t v313 = v88;
  v308[2] = type metadata accessor for VariableStep(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v89);
  v308[1] = sub_253A3E670((uint64_t)v308 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25346CAF4();
  MEMORY[0x270FA5388](v91);
  sub_25346CB04();
  uint64_t v312 = v92;
  uint64_t v93 = type metadata accessor for ClientAction(0);
  uint64_t v94 = sub_25346CB4C(v93);
  MEMORY[0x270FA5388](v94);
  uint64_t v311 = (char *)v308 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for ActionCancellation(0);
  uint64_t v97 = sub_25346CB4C(v96);
  MEMORY[0x270FA5388](v97);
  sub_25346CB04();
  uint64_t v310 = v98;
  uint64_t v99 = type metadata accessor for Action(0);
  uint64_t v100 = sub_25346CB4C(v99);
  MEMORY[0x270FA5388](v100);
  uint64_t v102 = sub_2534F8208((uint64_t)v308 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v103 = type metadata accessor for Request(v102);
  uint64_t v104 = sub_25346CB4C(v103);
  MEMORY[0x270FA5388](v104);
  sub_25346CB04();
  uint64_t v106 = sub_2534F8208(v105);
  uint64_t v107 = type metadata accessor for TextQuery(v106);
  uint64_t v108 = sub_25346CB4C(v107);
  MEMORY[0x270FA5388](v108);
  sub_25346CB04();
  uint64_t v110 = sub_2534F8208(v109);
  uint64_t v111 = type metadata accessor for SessionStart(v110);
  uint64_t v112 = sub_25346CB4C(v111);
  MEMORY[0x270FA5388](v112);
  uint64_t v114 = sub_2534F8208((uint64_t)v308 - ((v113 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v361 = type metadata accessor for Session.Event.Payload(v114);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v115);
  sub_2534659D8();
  uint64_t v360 = v116;
  sub_2534B324C();
  MEMORY[0x270FA5388](v117);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v118);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v119);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v120);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v121);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v122);
  sub_2534F823C();
  MEMORY[0x270FA5388](v123);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v124);
  sub_2534B3318();
  unint64_t v359 = v125;
  sub_2534B324C();
  MEMORY[0x270FA5388](v126);
  sub_2534F823C();
  MEMORY[0x270FA5388](v127);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v128);
  sub_2534F823C();
  MEMORY[0x270FA5388](v129);
  sub_2534F823C();
  MEMORY[0x270FA5388](v130);
  sub_2534F823C();
  MEMORY[0x270FA5388](v131);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v132);
  sub_2534F823C();
  MEMORY[0x270FA5388](v133);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v134);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v135);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v136);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v137);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v138);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v139);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v140);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v141);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v142);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v143);
  sub_2534F823C();
  MEMORY[0x270FA5388](v144);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v145);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v146);
  sub_2534F823C();
  MEMORY[0x270FA5388](v147);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v148);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v149);
  sub_25351C99C();
  MEMORY[0x270FA5388](v150);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v151);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v152);
  sub_2534F823C();
  MEMORY[0x270FA5388](v153);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v154);
  sub_25351C3B4();
  MEMORY[0x270FA5388](v155);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v156);
  sub_253A3B9E4();
  uint64_t v158 = MEMORY[0x270FA5388](v157);
  uint64_t v160 = (char *)v308 - v159;
  MEMORY[0x270FA5388](v158);
  sub_2534F8600();
  MEMORY[0x270FA5388](v161);
  sub_2535B3D6C();
  uint64_t v162 = sub_253462A5C(&qword_269CE56D8);
  uint64_t v163 = sub_25346CB4C(v162);
  MEMORY[0x270FA5388](v163);
  sub_2534847E0();
  uint64_t v165 = (uint64_t *)(v22 + *(int *)(v164 + 56));
  sub_2539DF660(v362, v22);
  uint64_t v166 = (uint64_t)v363;
  uint64_t v363 = v165;
  sub_2539DF660(v166, (uint64_t)v165);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v167 = sub_25353CE60();
      sub_2539DF660(v167, v168);
      if (sub_253A3B7EC() != 1) {
        goto LABEL_195;
      }
      sub_253A3B8D4((uint64_t)v20, (uint64_t)&v332);
      uint64_t v169 = sub_2534D973C();
      static TextQuery.== infix(_:_:)(v169);
      goto LABEL_157;
    case 2u:
      uint64_t v170 = sub_253579360();
      sub_2539DF660(v170, v171);
      uint64_t v172 = *(void *)v160;
      uint64_t v173 = *((void *)v160 + 3);
      unint64_t v174 = (unint64_t)v363;
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_164;
      }
      uint64_t v175 = *((void *)v160 + 2);
      char v176 = v160[8];
      uint64_t v177 = *(void *)v174;
      char v178 = *(unsigned char *)(v174 + 8);
      uint64_t v179 = *(void *)(v174 + 16);
      uint64_t v180 = *(void *)(v174 + 24);
      uint64_t v372 = v172;
      LOBYTE(v373) = v176;
      uint64_t v374 = v175;
      uint64_t v375 = v173;
      uint64_t v364 = v177;
      LOBYTE(v365) = v178;
      uint64_t v366 = v179;
      uint64_t v367 = v180;
      uint64_t v181 = sub_253A3E574();
      static SpeechQuery.== infix(_:_:)(v181, v182);
      sub_253A3F6F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_210;
    case 3u:
      uint64_t v183 = sub_2534D9A44();
      sub_2539DF660(v183, v184);
      if (sub_253A3B7EC() != 3) {
        goto LABEL_195;
      }
      sub_253A3B8D4((uint64_t)v20, (uint64_t)&v333);
      sub_2534DA178();
      static Request.== infix(_:_:)();
      sub_2539DF610();
      goto LABEL_158;
    case 4u:
      uint64_t v185 = sub_2535925F4();
      sub_2539DF660(v185, v186);
      uint64_t v187 = v24[1];
      uint64_t v188 = v24[3];
      uint64_t v189 = v24[4];
      uint64_t v190 = v24[6];
      if (sub_253A3C4C0() != 4) {
        goto LABEL_163;
      }
      char v191 = *((unsigned char *)v24 + 56);
      uint64_t v192 = v24[5];
      uint64_t v193 = v24[2];
      uint64_t v194 = *v24;
      uint64_t v195 = *(void *)v160;
      uint64_t v196 = *((void *)v160 + 1);
      uint64_t v197 = *((void *)v160 + 2);
      uint64_t v198 = *((void *)v160 + 3);
      uint64_t v200 = *((void *)v160 + 4);
      uint64_t v199 = *((void *)v160 + 5);
      uint64_t v201 = *((void *)v160 + 6);
      char v202 = v160[56];
      uint64_t v372 = v194;
      uint64_t v373 = v187;
      uint64_t v374 = v193;
      uint64_t v375 = v188;
      uint64_t v376 = v189;
      uint64_t v377 = v192;
      uint64_t v378 = v190;
      v379[0] = v191;
      uint64_t v364 = v195;
      uint64_t v365 = v196;
      uint64_t v366 = v197;
      uint64_t v367 = v198;
      uint64_t v368 = v200;
      uint64_t v369 = v199;
      uint64_t v370 = v201;
      v371[0] = v202;
      sub_253A3E574();
      static Session.Plan.== infix(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_210;
    case 5u:
      uint64_t v203 = sub_25353CE6C();
      sub_2539DF660(v203, v204);
      if (sub_253A3C4C0() != 5) {
        goto LABEL_195;
      }
      sub_253A3BE74((uint64_t)v160, (uint64_t)&v334);
      sub_2534D9AA0();
      static Action.== infix(_:_:)();
      sub_2539DF610();
      sub_2534D970C();
      goto LABEL_158;
    case 6u:
      sub_253A3BE8C(v22, (uint64_t)&v357);
      if (sub_253A3B7EC() != 6) {
        goto LABEL_195;
      }
      sub_253A3B8D4((uint64_t)v20, (uint64_t)&v335);
      sub_2534D973C();
      static ActionCancellation.== infix(_:_:)();
      goto LABEL_157;
    case 7u:
      sub_253A3BE8C(v22, (uint64_t)&v359);
      if (sub_253A3B7EC() != 7) {
        goto LABEL_195;
      }
      sub_253A3B8D4((uint64_t)v20, (uint64_t)&v336);
      sub_2534D973C();
      static ClientAction.== infix(_:_:)();
      goto LABEL_157;
    case 8u:
      sub_253A3F30C(v22, (uint64_t)&v362);
      if (sub_253A3B7EC() != 8) {
        goto LABEL_195;
      }
      sub_253A3E77C((uint64_t)v20, (uint64_t)&v337);
      if (sub_253A3F5F4())
      {
        sub_253A3F2D8((uint64_t)&v327);
        sub_2534B5014();
      }
      goto LABEL_202;
    case 9u:
      sub_253A3F30C(v22, (uint64_t)&v363);
      if (sub_253A3B7EC() != 9) {
        goto LABEL_195;
      }
      sub_253A3E77C((uint64_t)v20, (uint64_t)&v338);
      if (sub_253A3F5F4())
      {
        sub_253A3F2D8((uint64_t)&v328);
        sub_2534B5294();
      }
      goto LABEL_202;
    case 0xAu:
      uint64_t v271 = sub_2534D954C();
      sub_2539DF660(v271, v272);
      if (sub_253A3C4C0() != 10) {
        goto LABEL_165;
      }
      sub_2534D970C();
      sub_2534B53DC();
      goto LABEL_145;
    case 0xBu:
      sub_253A3D6EC(v22, (uint64_t)&v358);
      if (sub_253A3D6CC() != 11) {
        goto LABEL_165;
      }
      uint64_t v205 = (char *)*v165;
      uint64_t v206 = (uint64_t *)v165[1];
      if (v160 == v205 && v20 == v206) {
        goto LABEL_166;
      }
      sub_253A3CB64();
      sub_253A3F6F0();
      goto LABEL_210;
    case 0xCu:
      sub_253A3D6EC(v22, (uint64_t)&v360);
      uint64_t v209 = *v20;
      uint64_t v208 = v20[1];
      uint64_t v211 = v20[2];
      uint64_t v210 = v20[3];
      uint64_t v213 = v20[4];
      uint64_t v212 = v20[5];
      int v214 = v363;
      if (swift_getEnumCaseMultiPayload() != 12)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_165;
      }
      uint64_t v362 = v22;
      uint64_t v215 = *v214;
      unint64_t v216 = v214[1];
      uint64_t v218 = v214[2];
      uint64_t v217 = v214[3];
      uint64_t v219 = v214;
      uint64_t v220 = v214[4];
      uint64_t v221 = v219[5];
      uint64_t v363 = (void *)v216;
      BOOL v222 = v209 == v215 && v208 == v216;
      uint64_t v223 = v217;
      if (v222 || (v224 = sub_253B0A4C0(), uint64_t v217 = v223, (v224))
        && (v211 == v218 ? (BOOL v225 = v210 == v217) : (BOOL v225 = 0), v225 || (sub_25351C8D0() & 1) != 0))
      {
        if (v213 == v220 && v212 == v221)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          sub_2539627B8();
          sub_253B0A4C0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_211;
    case 0xDu:
      sub_253A3BE8C(v22, (uint64_t)&v364);
      if (sub_253A3B7EC() != 13) {
        goto LABEL_195;
      }
      sub_253A3B8D4((uint64_t)v20, (uint64_t)&v339);
      uint64_t v227 = sub_2534D973C();
      static SessionError.== infix(_:_:)(v227, v228);
      goto LABEL_157;
    case 0xEu:
      uint64_t v362 = v22;
      sub_253A3F30C(v22, (uint64_t)&v361);
      uint64_t v229 = *v165;
      unint64_t v230 = v165[1];
      uint64_t v232 = v165[4];
      uint64_t v231 = v165[5];
      uint64_t v233 = v363;
      if (swift_getEnumCaseMultiPayload() != 14)
      {
        swift_bridgeObjectRelease();
        sub_253A3E734();
        sub_253487D84(v229, v230);
        uint64_t v22 = v362;
        goto LABEL_196;
      }
      uint64_t v361 = v231;
      uint64_t v234 = v229;
      uint64_t v235 = *v233;
      unint64_t v236 = v233[1];
      uint64_t v237 = v233[4];
      uint64_t v238 = v233[5];
      uint64_t v360 = v237;
      sub_253A3EB38();
      if ((MEMORY[0x25A264440]() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_253A3F33C();
        swift_bridgeObjectRelease();
        sub_253A3E734();
        uint64_t v304 = sub_253579270();
        sub_253487D84(v304, v305);
        uint64_t v306 = sub_2534DA5AC();
LABEL_208:
        sub_253487D84(v306, v307);
        goto LABEL_211;
      }
      uint64_t v358 = v234;
      unint64_t v359 = v230;
      uint64_t v363 = (void *)v236;
      uint64_t v239 = sub_2534D9B10();
      if ((MEMORY[0x25A264440](v239) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_253A3F33C();
        swift_bridgeObjectRelease();
        sub_253A3E734();
        sub_253487D84(v235, (unint64_t)v363);
        uint64_t v306 = v358;
        unint64_t v307 = v359;
        goto LABEL_208;
      }
      if (v232 == v360 && v361 == v238)
      {
        sub_253A3F33C();
        sub_253A3E734();
        sub_253487D84(v235, (unint64_t)v363);
        sub_253487D84(v358, v359);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        sub_253579360();
        sub_253B0A4C0();
        sub_253A3F33C();
        sub_253A3E734();
        sub_253487D84(v235, (unint64_t)v363);
        sub_253487D84(v358, v359);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_211:
      sub_2539DF610();
LABEL_197:
      sub_2534D9090();
      sub_253465A14();
      return;
    case 0xFu:
      sub_253A3F400(v22, (uint64_t)&v365);
      if (sub_253A3B7EC() != 15) {
        goto LABEL_194;
      }
      sub_253A3C1DC();
      sub_2535787F4();
      sub_25347FA84();
      v241();
      sub_2539627B8();
      sub_253B059E0();
      goto LABEL_148;
    case 0x10u:
      sub_253A3BE8C(v22, (uint64_t)&a14);
      if (sub_253A3B7EC() != 16) {
        goto LABEL_195;
      }
      sub_253A3B8D4((uint64_t)v20, (uint64_t)&v351);
      sub_2534D973C();
      static RequestContent.SystemPromptResolution.== infix(_:_:)();
      goto LABEL_157;
    case 0x11u:
      sub_253A3BE8C(v22, (uint64_t)&v367);
      if (sub_253A3B7EC() != 17) {
        goto LABEL_195;
      }
      sub_253A3B8D4((uint64_t)v20, (uint64_t)&v340);
      sub_2534D973C();
      static ActionStepResult.== infix(_:_:)();
      goto LABEL_157;
    case 0x12u:
      sub_253A3F30C(v22, (uint64_t)&v374);
      if (sub_253A3B7EC() != 18) {
        goto LABEL_195;
      }
      sub_253A3E77C((uint64_t)v20, (uint64_t)&v341);
      if (sub_2534B99A8())
      {
        sub_253A3F2C4((uint64_t)&v329);
        if (_s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0())
        {
          sub_253A3F300();
          sub_253B055A0();
        }
      }
      goto LABEL_202;
    case 0x13u:
      sub_253A3F400(v22, (uint64_t)&v370);
      if (sub_253A3B7EC() != 19) {
        goto LABEL_194;
      }
      sub_253A3C1DC();
      sub_2535787F4();
      sub_25347FA84();
      v273();
      sub_2539627B8();
      sub_253B05CE0();
      goto LABEL_148;
    case 0x14u:
      sub_253A3BE8C(v22, (uint64_t)&v372);
      if (sub_253A3B7EC() != 20) {
        goto LABEL_195;
      }
      sub_253A3B8D4((uint64_t)v20, (uint64_t)&v342);
      sub_2534D973C();
      static ActionResolverRequest.== infix(_:_:)();
      goto LABEL_157;
    case 0x15u:
      sub_253A3D6EC(v22, (uint64_t)&v366);
      if (sub_253A3C4C0() != 21) {
        goto LABEL_165;
      }
      sub_2534D970C();
      sub_2534B57A4();
      goto LABEL_145;
    case 0x16u:
      uint64_t v274 = v342;
      sub_2539DF660(v22, (uint64_t)v342);
      uint64_t v276 = *v274;
      uint64_t v275 = v274[1];
      if (sub_253A3D66C() != 22) {
        goto LABEL_164;
      }
      BOOL v277 = v276 == *v21 && v275 == v21[1];
      if (!v277 && (sub_253592308() & 1) == 0) {
        goto LABEL_189;
      }
      sub_2534D9718();
      sub_2534BF50C();
      goto LABEL_126;
    case 0x17u:
      sub_253A3D6EC(v22, (uint64_t)&v369);
      if (sub_253A3D6CC() == 23) {
        goto LABEL_128;
      }
      goto LABEL_165;
    case 0x18u:
      sub_253A3D6EC(v22, (uint64_t)v371);
      if (sub_253A3D6CC() != 24) {
        goto LABEL_165;
      }
LABEL_128:
      uint64_t v278 = (char *)*v165;
      uint64_t v279 = (uint64_t *)v165[1];
      if (v160 != v278 || v20 != v279)
      {
        sub_253A3CB64();
        sub_2534F8940();
        goto LABEL_210;
      }
LABEL_166:
      sub_253A3DF60();
      goto LABEL_211;
    case 0x19u:
      if (sub_253A3DDB8() != 25) {
        goto LABEL_196;
      }
      goto LABEL_211;
    case 0x1Au:
      sub_253A3D6EC(v22, (uint64_t)&v373);
      uint64_t v282 = *v20;
      uint64_t v281 = v20[1];
      if (sub_253A3D66C() != 26) {
        goto LABEL_165;
      }
      uint64_t v283 = v21[1];
      if (v281 && v283 && (v282 != *v21 || v281 != v283))
      {
        sub_2534DA5AC();
        sub_25351C8D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_211;
      }
      swift_bridgeObjectRelease();
      goto LABEL_210;
    case 0x1Bu:
      sub_2539DF660(v22, v355[5]);
      if (sub_253A3D66C() != 27) {
        goto LABEL_164;
      }
      sub_2534ACF74();
      sub_2534B9750();
      if ((v242 & 1) == 0) {
        goto LABEL_189;
      }
      sub_2534D9718();
      sub_2534B9750();
      goto LABEL_126;
    case 0x1Cu:
      sub_253A3F400(v22, (uint64_t)&v376);
      uint64_t v285 = v23[1];
      uint64_t v286 = v23[3];
      uint64_t v287 = v23[5];
      uint64_t v288 = v23[6];
      if (sub_253A3C4C0() == 28)
      {
        int v289 = *((_DWORD *)v23 + 8);
        uint64_t v290 = v23[2];
        uint64_t v291 = *v23;
        uint64_t v292 = *(void *)v160;
        uint64_t v293 = *((void *)v160 + 1);
        uint64_t v294 = *((void *)v160 + 2);
        uint64_t v295 = *((void *)v160 + 3);
        int v296 = *((_DWORD *)v160 + 8);
        uint64_t v297 = *((void *)v160 + 5);
        uint64_t v298 = *((void *)v160 + 6);
        uint64_t v372 = v291;
        uint64_t v373 = v285;
        uint64_t v374 = v290;
        uint64_t v375 = v286;
        LODWORD(v376) = v289;
        uint64_t v377 = v287;
        uint64_t v378 = v288;
        uint64_t v364 = v292;
        uint64_t v365 = v293;
        uint64_t v366 = v294;
        uint64_t v367 = v295;
        LODWORD(v368) = v296;
        uint64_t v369 = v297;
        uint64_t v370 = v298;
        uint64_t v299 = sub_253A3E574();
        static ToolRetrievalResponse.== infix(_:_:)(v299, v300);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_210;
      }
LABEL_163:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_164:
      swift_bridgeObjectRelease();
LABEL_165:
      swift_bridgeObjectRelease();
      goto LABEL_196;
    case 0x1Du:
      sub_253A3D6EC(v22, (uint64_t)&v375);
      if (sub_253A3C4C0() != 29) {
        goto LABEL_165;
      }
      sub_2534D970C();
      sub_2534B57F8();
LABEL_145:
      sub_2534F8940();
      goto LABEL_210;
    case 0x1Eu:
      sub_253A3F400(v22, (uint64_t)&v377);
      if (sub_253A3B7EC() != 30)
      {
LABEL_194:
        sub_253A3D000();
        sub_2534659CC();
        v303();
        goto LABEL_196;
      }
      sub_253A3C1DC();
      sub_2535787F4();
      sub_25347FA84();
      v301();
      sub_2539627B8();
      sub_253B066F0();
LABEL_148:
      uint64_t v302 = (void (*)(void))v21[1];
      sub_2534DA178();
      sub_2534D91AC();
      v302();
      sub_2536D42A4();
      sub_2534D91AC();
      v302();
      goto LABEL_211;
    case 0x1Fu:
      sub_253A3BE8C(v22, (uint64_t)&v378);
      if (sub_253A3B7EC() != 31) {
        goto LABEL_195;
      }
      sub_253A3B8D4((uint64_t)v20, (uint64_t)&v343);
      sub_2534D973C();
      static StatementResult.== infix(_:_:)();
      goto LABEL_157;
    case 0x20u:
      sub_253A3BE8C(v22, (uint64_t)v379);
      if (sub_253A3B7EC() != 32) {
        goto LABEL_195;
      }
      sub_253A3B8D4((uint64_t)v20, (uint64_t)&v344);
      sub_2534D973C();
      static ExternalAgentTextQuery.== infix(_:_:)();
      goto LABEL_157;
    case 0x21u:
      sub_253A3BE8C(v22, (uint64_t)&v380);
      if (sub_253A3B7EC() != 33) {
        goto LABEL_195;
      }
      sub_253A3B8D4((uint64_t)v20, (uint64_t)&v345);
      sub_2534D973C();
      static ExternalAgentSpeechQuery.== infix(_:_:)();
      goto LABEL_157;
    case 0x22u:
      sub_253A3BE8C(v22, (uint64_t)&a17);
      if (sub_253A3B7EC() != 34) {
        goto LABEL_195;
      }
      sub_253A3B8D4((uint64_t)v20, (uint64_t)&v352);
      sub_2534D973C();
      static ExternalAgentRequest.== infix(_:_:)();
      goto LABEL_157;
    case 0x23u:
      unint64_t v243 = v359;
      sub_2539DF660(v22, v359);
      if (sub_253A3B7EC() != 35) {
        goto LABEL_195;
      }
      sub_253A3E77C((uint64_t)v20, (uint64_t)&v354);
      if (sub_253A3F5F4())
      {
        sub_253A3F2C4((uint64_t)v331);
        if (sub_253B06840())
        {
          sub_253A3F300();
          sub_2534B5C40(*(void **)(v243 + v244), *(void **)&v160[v244]);
        }
      }
      goto LABEL_202;
    case 0x24u:
      uint64_t v245 = v356;
      sub_2539DF660(v22, (uint64_t)v356);
      uint64_t v247 = *v245;
      uint64_t v246 = v245[1];
      uint64_t v248 = (void *)v245[2];
      if (sub_253A3D66C() != 36) {
        goto LABEL_164;
      }
      uint64_t v249 = *v21;
      uint64_t v250 = v21[1];
      unint64_t v251 = (void *)v21[2];
      BOOL v252 = v247 == v249 && v246 == v250;
      if (v252 || (sub_253592308() & 1) != 0)
      {
        sub_2534B5C40(v248, v251);
LABEL_126:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_189:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_210:
        swift_bridgeObjectRelease();
      }
      goto LABEL_211;
    case 0x25u:
      sub_253A3BE8C(v22, (uint64_t)&a18);
      if (sub_253A3B7EC() != 37) {
        goto LABEL_195;
      }
      sub_253A3B8D4((uint64_t)v20, (uint64_t)&v353);
      uint64_t v253 = sub_2534D973C();
      static ToolResolution.== infix(_:_:)(v253, v254);
      goto LABEL_157;
    case 0x26u:
      sub_253A3BE8C(v22, (uint64_t)&a9);
      if (sub_253A3B7EC() != 38) {
        goto LABEL_195;
      }
      sub_253A3B8D4((uint64_t)v20, (uint64_t)&v346);
      sub_2534D973C();
      static UndoRedoRequest.== infix(_:_:)();
      goto LABEL_157;
    case 0x27u:
      sub_253A3BE8C(v22, (uint64_t)&a10);
      if (sub_253A3B7EC() != 39) {
        goto LABEL_195;
      }
      sub_253A3B8D4((uint64_t)v20, (uint64_t)&v347);
      sub_2534D973C();
      static ClientUndoRedoRequest.== infix(_:_:)();
      goto LABEL_157;
    case 0x28u:
      sub_253A3BE8C(v22, (uint64_t)&a11);
      if (sub_253A3B7EC() != 40) {
        goto LABEL_195;
      }
      sub_253A3B8D4((uint64_t)v20, (uint64_t)&v348);
      uint64_t v255 = sub_2534D973C();
      static TypeConversionRequest.== infix(_:_:)(v255, v256);
      goto LABEL_157;
    case 0x29u:
      sub_253A3BE8C(v22, (uint64_t)&a12);
      if (sub_253A3B7EC() != 41) {
        goto LABEL_195;
      }
      sub_253A3B8D4((uint64_t)v20, (uint64_t)&v349);
      uint64_t v257 = sub_2534D973C();
      static TypeConversionResult.== infix(_:_:)(v257, v258);
      goto LABEL_157;
    case 0x2Au:
      sub_253A3BE8C(v22, (uint64_t)&a13);
      if (sub_253A3B7EC() != 42) {
        goto LABEL_195;
      }
      sub_253A3B8D4((uint64_t)v20, (uint64_t)&v350);
      sub_2534D973C();
      static QueryDecorationResult.== infix(_:_:)();
LABEL_157:
      sub_2539DF610();
      goto LABEL_158;
    case 0x2Bu:
      if (sub_253A3DDB8() != 43) {
        goto LABEL_196;
      }
      goto LABEL_211;
    case 0x2Cu:
      uint64_t v259 = v360;
      sub_2539DF660(v22, v360);
      if (sub_253A3B7EC() != 44) {
        goto LABEL_195;
      }
      sub_253A3E77C((uint64_t)v20, (uint64_t)v355);
      if (sub_253A3F5F4())
      {
        uint64_t v260 = *(int *)(DecorationPrePlannerResult + 20);
        uint64_t v261 = *(void *)(v259 + v260);
        uint64_t v262 = *(void *)(v259 + v260 + 8);
        uint64_t v263 = &v160[v260];
        BOOL v264 = v261 == *(void *)v263 && v262 == *((void *)v263 + 1);
        if (v264 || (sub_253B0A4C0() & 1) != 0)
        {
          sub_253A3F300();
          char v266 = *(unsigned char *)(v259 + v265 + 8);
          uint64_t v372 = *(void *)(v259 + v265);
          LOBYTE(v373) = v266;
          sub_253A3F6E4();
          uint64_t v364 = v267;
          LOBYTE(v365) = v268;
          uint64_t v269 = sub_253A3E574();
          static QueryDecorationPrePlannerResultPayload.== infix(_:_:)(v269, v270);
        }
      }
LABEL_202:
      sub_2539DF610();
      sub_2539DF610();
      goto LABEL_211;
    case 0x2Du:
      if (sub_253A3DDB8() != 45) {
        goto LABEL_196;
      }
      goto LABEL_211;
    case 0x2Eu:
      if (sub_253A3DDB8() != 46) {
        goto LABEL_196;
      }
      goto LABEL_211;
    case 0x2Fu:
      if (sub_253A3DDB8() != 47) {
        goto LABEL_196;
      }
      goto LABEL_211;
    case 0x30u:
      if (sub_253A3DDB8() != 48) {
        goto LABEL_196;
      }
      goto LABEL_211;
    default:
      sub_2539DF660(v22, v25);
      if (!sub_253A3B7EC())
      {
        sub_253A3B8D4((uint64_t)v20, (uint64_t)&v330);
        static SessionStart.== infix(_:_:)();
        sub_2539DF610();
LABEL_158:
        sub_2539DF610();
        goto LABEL_211;
      }
LABEL_195:
      sub_2539DF610();
LABEL_196:
      sub_253472458(v22, &qword_269CE56D8);
      goto LABEL_197;
  }
}

void static SessionStart.== infix(_:_:)()
{
  sub_2534B3258();
  uint64_t v2 = v1;
  sub_2534DA6BC();
  sub_253B05CB0();
  sub_253465998();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  sub_25348366C();
  sub_253462A5C(&qword_269CE56E0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v6);
  sub_2534835B0();
  uint64_t v7 = sub_253462A5C(&qword_26B248CD0);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v9);
  sub_25351C770();
  MEMORY[0x270FA5388](v10);
  sub_253A3BB6C();
  if (sub_253B05D50())
  {
    uint64_t v11 = sub_253A3DBFC();
    uint64_t v12 = type metadata accessor for SessionStart(v11);
    uint64_t v13 = sub_253A3CB08(v12);
    sub_253A3DE00(v13);
    sub_253A3C488(*(int *)(v4 + 20));
    sub_253A3BACC();
    sub_253A3C4A4();
    uint64_t v14 = sub_2534F88B8(v0);
    if (!v16)
    {
      sub_253A3DF48(v14, v15, &qword_26B248CD0);
      sub_2534F88B8(v2);
      if (!v16)
      {
        sub_25347FA84();
        v19();
        sub_2539E6F90((uint64_t)&unk_269CE56E8);
        sub_2536D53CC();
        uint64_t v20 = *(void (**)(void))(v21 + 8);
        sub_2534D97B4();
        v20();
        sub_253A3BC88();
        sub_253A3BCE4();
        sub_2534D97B4();
        v20();
        sub_253A3CE14();
        goto LABEL_11;
      }
      sub_253A3BC88();
      sub_253A3BCE4();
      uint64_t v17 = sub_253A3BAB4();
      v18(v17);
LABEL_10:
      sub_253472458(v0, &qword_269CE56E0);
      goto LABEL_11;
    }
    sub_253A3BC88();
    sub_253A3BCE4();
    sub_2534F88B8(v2);
    if (!v16) {
      goto LABEL_10;
    }
    sub_253472458(v0, &qword_26B248CD0);
  }
LABEL_11:
  sub_253465A14();
}

uint64_t static TextQuery.== infix(_:_:)(uint64_t a1)
{
  sub_253A3C5FC(a1);
  BOOL v5 = v5 && v3 == v4;
  if (v5 || (sub_253B0A4C0(), uint64_t result = sub_25397F648(), (v7 & 1) != 0))
  {
    if (*(unsigned __int8 *)(v2 + 16) == *(unsigned __int8 *)(v1 + 16))
    {
      type metadata accessor for TextQuery(0);
      if (_s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0())
      {
        sub_253A3BE60();
        if (v10)
        {
          if (v8)
          {
            sub_2535B3D0C(v9);
            BOOL v13 = v5 && v11 == v12;
            if (v13 || (sub_253B0A4C0() & 1) != 0) {
              return 1;
            }
          }
        }
        else if (!v8)
        {
          return 1;
        }
      }
    }
    return 0;
  }
  return result;
}

uint64_t static SpeechQuery.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v5 = *(unsigned __int8 *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  sub_2534B9560();
  uint64_t result = sub_25397F648();
  if ((v9 & 1) != 0 && ((v2 ^ v5) & 1) == 0)
  {
    if (v3)
    {
      if (v6)
      {
        BOOL v10 = v4 == v7 && v3 == v6;
        if (v10 || (sub_253A3CB64() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v6)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

void static Request.== infix(_:_:)()
{
  sub_2534B3258();
  uint64_t v7 = v6;
  sub_2534DA6BC();
  uint64_t v88 = sub_253B055C0();
  sub_253465998();
  uint64_t v84 = v8;
  MEMORY[0x270FA5388](v9);
  sub_25347FA68(v10, v79);
  uint64_t v11 = sub_253462A5C(&qword_269CDDCC0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v12);
  sub_2536D2C5C(v13, v79);
  uint64_t v14 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  uint64_t v85 = (uint64_t)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2534B324C();
  MEMORY[0x270FA5388](v17);
  sub_2534B3318();
  uint64_t v89 = v18;
  sub_2534B324C();
  MEMORY[0x270FA5388](v19);
  sub_2534B35DC();
  uint64_t v86 = v20;
  uint64_t v21 = type metadata accessor for RequestPrescribedPlan(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v22);
  sub_2534B34A4();
  uint64_t v23 = sub_253462A5C(&qword_269CE56F0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v24);
  sub_25346CC54();
  uint64_t v25 = sub_253462A5C(&qword_269CDBB20);
  uint64_t v26 = sub_25346CB4C(v25);
  MEMORY[0x270FA5388](v26);
  sub_2534B340C();
  MEMORY[0x270FA5388](v27);
  sub_25351C3B4();
  MEMORY[0x270FA5388](v28);
  sub_2536D4170();
  static RequestContent.== infix(_:_:)();
  if ((v29 & 1) == 0) {
    goto LABEL_23;
  }
  uint64_t v30 = type metadata accessor for Request(0);
  if (*(unsigned __int8 *)(v4 + *(int *)(v30 + 20)) != *(unsigned __int8 *)(v7 + *(int *)(v30 + 20))) {
    goto LABEL_23;
  }
  uint64_t v83 = v11;
  uint64_t v31 = *(int *)(v30 + 24);
  uint64_t v80 = v4;
  uint64_t v32 = v30;
  sub_253961F60(v4 + v31, v2, &qword_269CDBB20);
  uint64_t v81 = v32;
  uint64_t v82 = v7;
  sub_253961F60(v7 + *(int *)(v32 + 24), v0, &qword_269CDBB20);
  uint64_t v33 = v1 + *(int *)(v23 + 48);
  uint64_t v34 = sub_2536D44B0();
  sub_253961F60(v34, v35, &qword_269CDBB20);
  uint64_t v36 = sub_253579258();
  sub_253961F60(v36, v37, &qword_269CDBB20);
  sub_2534D8B48(v1, 1, v21);
  if (v39)
  {
    sub_253A3CE14();
    sub_253472458(v2, &qword_269CDBB20);
    sub_2534D8B48(v33, 1, v21);
    uint64_t v38 = v83;
    if (v39)
    {
      sub_253472458(v1, &qword_269CDBB20);
      goto LABEL_13;
    }
LABEL_11:
    uint64_t v40 = &qword_269CE56F0;
    uint64_t v41 = v1;
LABEL_22:
    sub_253472458(v41, v40);
    goto LABEL_23;
  }
  sub_253961F60(v1, v3, &qword_269CDBB20);
  sub_2534D8B48(v33, 1, v21);
  uint64_t v38 = v83;
  if (v39)
  {
    sub_253A3CE14();
    sub_253472458(v2, &qword_269CDBB20);
    sub_2539DF610();
    goto LABEL_11;
  }
  sub_2539DF5B8(v33, v5);
  static RequestPrescribedPlan.== infix(_:_:)();
  char v43 = v42;
  sub_2539DF610();
  uint64_t v44 = sub_253579258();
  sub_253472458(v44, v45);
  sub_253472458(v2, &qword_269CDBB20);
  sub_2534D9A44();
  sub_2539DF610();
  uint64_t v46 = sub_253578EE0();
  sub_253472458(v46, v47);
  if ((v43 & 1) == 0) {
    goto LABEL_23;
  }
LABEL_13:
  uint64_t v49 = v80;
  uint64_t v48 = v81;
  uint64_t v50 = v86;
  sub_253961F60(v80 + *(int *)(v81 + 28), v86, (uint64_t *)&unk_26B248CB0);
  uint64_t v51 = v89;
  sub_253961F60(v82 + *(int *)(v48 + 28), v89, (uint64_t *)&unk_26B248CB0);
  uint64_t v52 = v87;
  uint64_t v53 = v87 + *(int *)(v38 + 48);
  uint64_t v54 = sub_253971C3C();
  sub_253961F60(v54, v55, (uint64_t *)&unk_26B248CB0);
  sub_253961F60(v51, v53, (uint64_t *)&unk_26B248CB0);
  uint64_t v56 = v88;
  sub_2534D8B48(v52, 1, v88);
  if (v39)
  {
    uint64_t v57 = sub_2536D3F90();
    sub_253472458(v57, v58);
    sub_253A3F324();
    sub_2534D8B48(v53, 1, v56);
    if (v39)
    {
      sub_253472458(v52, (uint64_t *)&unk_26B248CB0);
      goto LABEL_25;
    }
    goto LABEL_21;
  }
  uint64_t v59 = v85;
  sub_253961F60(v52, v85, (uint64_t *)&unk_26B248CB0);
  sub_2534D8B48(v53, 1, v56);
  if (v60)
  {
    sub_253A3D048();
    sub_253472458(v50, (uint64_t *)&unk_26B248CB0);
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v59, v56);
LABEL_21:
    uint64_t v40 = &qword_269CDDCC0;
    uint64_t v41 = v52;
    goto LABEL_22;
  }
  uint64_t v61 = v84;
  sub_25347FA84();
  v62();
  sub_2539E6F90((uint64_t)&qword_269CDCCE8);
  char v63 = sub_253B096B0();
  uint64_t v64 = *(void (**)(void))(v61 + 8);
  sub_2535791D8();
  sub_2534DA4BC();
  v64();
  sub_253472458(v89, (uint64_t *)&unk_26B248CB0);
  sub_253A3F324();
  sub_2534DA4BC();
  v64();
  uint64_t v65 = sub_253579360();
  sub_253472458(v65, v66);
  if ((v63 & 1) == 0) {
    goto LABEL_23;
  }
LABEL_25:
  uint64_t v67 = *(int *)(v81 + 32);
  uint64_t v69 = *(void *)(v49 + v67);
  uint64_t v68 = *(void *)(v49 + v67 + 8);
  uint64_t v70 = (void *)(v82 + v67);
  uint64_t v71 = v70[1];
  if (!v68)
  {
    if (!v71) {
      goto LABEL_23;
    }
    goto LABEL_36;
  }
  if (!v71)
  {
    sub_253A3EA08();
LABEL_36:
    sub_253A3E794();
    sub_25396DF48(v75, v76);
    sub_253961E88(v69, v68);
    sub_253A3E794();
    sub_253961E88(v77, v78);
    goto LABEL_23;
  }
  BOOL v72 = v69 == *v70 && v68 == v71;
  if (v72 || (sub_25351C5CC(), (sub_253B0A4C0() & 1) != 0))
  {
    uint64_t v73 = (void *)sub_2534D99FC();
    sub_2534B5C40(v73, v74);
    sub_253A3EA08();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_253A3EA08();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_23:
  sub_253465A14();
}

void static Session.Plan.== infix(_:_:)()
{
  sub_2535E2390();
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[5];
  uint64_t v9 = v1[6];
  BOOL v10 = *v0 == *v1 && v0[1] == v1[1];
  if (v10 || (sub_253B0A4C0(), sub_25397F648(), (v11 & 1) != 0))
  {
    BOOL v12 = v2 == v6 && v3 == v7;
    if (v12 || (sub_253578D2C(), sub_253B0A4C0(), sub_25397F648(), (v13 & 1) != 0))
    {
      sub_2534D9B1C();
      sub_2534B5840();
      if ((v14 & 1) != 0 && v4 && v9 && (v5 != v8 || v4 != v9))
      {
        sub_253A3CB64();
        sub_25397F648();
      }
    }
  }
  sub_2535E2374();
}

uint64_t static Action.== infix(_:_:)()
{
  if ((sub_253A3D21C() & 1) == 0) {
    return 0;
  }
  uint64_t v3 = type metadata accessor for Action(0);
  sub_253A3BE60();
  if (!v6)
  {
    if (v4) {
      return 0;
    }
    goto LABEL_11;
  }
  if (!v4) {
    return 0;
  }
  sub_2535B3D0C(v5);
  BOOL v9 = v9 && v7 == v8;
  if (v9 || (sub_253B0A4C0(), uint64_t result = sub_25397F648(), (v11 & 1) != 0))
  {
LABEL_11:
    sub_253A3D5C8();
    if (!v9) {
      return 0;
    }
    sub_253A3C3B8(*(int *)(v3 + 28));
    sub_2534BCA70();
    if ((v12 & 1) == 0) {
      return 0;
    }
    sub_253A3BE60();
    if (v15)
    {
      if (!v13) {
        return 0;
      }
      sub_2535B3D0C(v14);
      if (!v9 || v16 != v17)
      {
        sub_253B0A4C0();
        uint64_t result = sub_25397F648();
        if ((v19 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v13)
    {
      return 0;
    }
    sub_253A3C160(*(int *)(v3 + 36));
    BOOL v22 = v9 && v20 == v21;
    if (v22 || (sub_253B0A4C0() & 1) != 0)
    {
      if (v1)
      {
        if (v0)
        {
          BOOL v23 = v3 == v2 && v1 == v0;
          if (v23 || (sub_25351C8D0() & 1) != 0) {
            return 1;
          }
        }
      }
      else if (!v0)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

void static ActionCancellation.== infix(_:_:)()
{
  sub_2534B3258();
  sub_253B059D0();
  sub_253465998();
  uint64_t v27 = v2;
  MEMORY[0x270FA5388](v3);
  sub_253465A3C();
  sub_253462A5C(&qword_269CDCD18);
  sub_253A3D7B8();
  MEMORY[0x270FA5388](v4);
  sub_2534B3294();
  uint64_t v5 = sub_253462A5C(&qword_269CDB460);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_2534B340C();
  MEMORY[0x270FA5388](v7);
  sub_2536D2D54();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  sub_253A3BCA0(v9, v10, v11, v12, v13, v14, v15, v16, v26);
  sub_253A3C88C();
  sub_253A3C210();
  sub_253A3D604();
  uint64_t v17 = sub_2534F88B8(v0);
  if (!v19)
  {
    sub_253A3D174(v17, v18, &qword_269CDB460);
    sub_2534F88B8(v1);
    if (!v19)
    {
      sub_25347FA84();
      v22();
      sub_2539E6F90((uint64_t)&unk_269CDCCF0);
      char v23 = sub_2536D34E0();
      uint64_t v24 = *(void (**)(void))(v27 + 8);
      sub_2534B3470();
      v24();
      sub_253A3C234();
      sub_253A3C470();
      sub_2534B3470();
      v24();
      sub_253A3D814();
      if (v23) {
        goto LABEL_11;
      }
LABEL_12:
      char v25 = 0;
      goto LABEL_13;
    }
    sub_253A3CC94();
    sub_253A3D048();
    uint64_t v20 = sub_253A3BA9C();
    v21(v20);
LABEL_9:
    sub_253472458(v0, &qword_269CDCD18);
    goto LABEL_12;
  }
  sub_253A3C234();
  sub_253A3C470();
  sub_2534F88B8(v1);
  if (!v19) {
    goto LABEL_9;
  }
  sub_253472458(v0, &qword_269CDB460);
LABEL_11:
  sub_253A3DF84();
  char v25 = _s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0();
LABEL_13:
  sub_253A3E580(v25);
  sub_253465A14();
}

void static ClientAction.== infix(_:_:)()
{
  if (sub_253A3D21C())
  {
    uint64_t v0 = (int *)type metadata accessor for ClientAction(0);
    sub_25397F578();
    BOOL v3 = v3 && v1 == v2;
    if (v3 || (sub_253B0A4C0() & 1) != 0)
    {
      sub_253A3C3B8(v0[6]);
      sub_2534BF50C();
      if (v4)
      {
        sub_253A3BE60();
        if (v7)
        {
          if (!v5) {
            return;
          }
          sub_2535B3D0C(v6);
          BOOL v10 = v3 && v8 == v9;
          if (!v10 && (sub_253B0A4C0() & 1) == 0) {
            return;
          }
        }
        else if (v5)
        {
          return;
        }
        sub_253A3BE60();
        if (v13)
        {
          if (!v11) {
            return;
          }
          sub_2535B3D0C(v12);
          BOOL v16 = v3 && v14 == v15;
          if (!v16 && (sub_253B0A4C0() & 1) == 0) {
            return;
          }
        }
        else if (v11)
        {
          return;
        }
        sub_253A3C3B8(v0[9]);
        sub_2534C08CC();
        if (v17)
        {
          sub_253A3C3B8(v0[10]);
          sub_2534C0FDC();
        }
      }
    }
  }
}

uint64_t static QueryStep.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_25398F198(a1, a2, MEMORY[0x263F4BF90], type metadata accessor for QueryStep, (uint64_t (*)(uint64_t))sub_2534B5014);
}

uint64_t static VariableStep.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_25398F198(a1, a2, MEMORY[0x263F4BF90], type metadata accessor for VariableStep, (uint64_t (*)(uint64_t))sub_2534B5294);
}

uint64_t sub_25398F198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(uint64_t))
{
  sub_2534DA0C4();
  if ((v6() & 1) == 0) {
    return 0;
  }
  uint64_t v7 = a4(0);
  uint64_t v8 = sub_253A3C3B8(*(int *)(v7 + 20));
  return a5(v8);
}

void static ExecutionStepResults.== infix(_:_:)()
{
}

void static Session.RecoverableError.== infix(_:_:)()
{
  sub_2535B3C98();
  sub_253A3BC4C(v8);
  BOOL v11 = v11 && v9 == v10;
  if (v11 || (sub_253B0A4C0() & 1) != 0)
  {
    BOOL v12 = v4 == v6 && v5 == v7;
    if (v12 || (sub_253A3BE14()) && (v0 != v2 || v1 != v3)) {
      sub_253A3E160();
    }
  }
  sub_25346CD04();
}

void static RequestContent.SystemPromptResolution.== infix(_:_:)()
{
  sub_2534B3258();
  sub_253A3C5E0();
  sub_253465998();
  uint64_t v29 = v2;
  MEMORY[0x270FA5388](v3);
  sub_253465A3C();
  sub_253462A5C(&qword_269CDDCC0);
  sub_253A3D7B8();
  MEMORY[0x270FA5388](v4);
  sub_2534B3294();
  uint64_t v5 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_2534B340C();
  MEMORY[0x270FA5388](v7);
  sub_2536D2D54();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  sub_253A3BCA0(v9, v10, v11, v12, v13, v14, v15, v16, v28);
  sub_253A3C88C();
  sub_253A3C210();
  sub_253A3D604();
  uint64_t v17 = sub_2534F88B8(v0);
  if (v19)
  {
    sub_253A3C234();
    sub_253A3C470();
    sub_2534F88B8(v1);
    if (v19)
    {
      sub_253472458(v0, (uint64_t *)&unk_26B248CB0);
      goto LABEL_11;
    }
LABEL_9:
    sub_253472458(v0, &qword_269CDDCC0);
LABEL_15:
    char v27 = 0;
    goto LABEL_16;
  }
  sub_253A3D174(v17, v18, (uint64_t *)&unk_26B248CB0);
  sub_2534F88B8(v1);
  if (v19)
  {
    sub_253A3CC94();
    sub_253A3D048();
    uint64_t v20 = sub_253A3BA9C();
    v21(v20);
    goto LABEL_9;
  }
  sub_25347FA84();
  v22();
  sub_2539E6F90((uint64_t)&qword_269CDCCE8);
  char v23 = sub_2536D34E0();
  uint64_t v24 = *(void (**)(void))(v29 + 8);
  sub_2534B3470();
  v24();
  sub_253A3C234();
  sub_253A3C470();
  sub_2534B3470();
  v24();
  sub_253A3D814();
  if ((v23 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_11:
  uint64_t v25 = type metadata accessor for RequestContent.SystemPromptResolution(0);
  if ((sub_253B055A0() & 1) == 0) {
    goto LABEL_15;
  }
  sub_253A3DF3C(*(int *)(v25 + 24));
  static RequestContent.SystemPromptResolution.UserAction.== infix(_:_:)();
  if ((v26 & 1) == 0 || (sub_253A3F804() & 1) == 0) {
    goto LABEL_15;
  }
  sub_253A3DF3C(*(int *)(v25 + 32));
  static RequestContent.SystemPromptResolution.ResolutionInput.== infix(_:_:)();
LABEL_16:
  sub_253A3E580(v27);
  sub_253465A14();
}

void static ActionStepResult.== infix(_:_:)()
{
  sub_2534B3258();
  sub_253A3C5E0();
  sub_253465998();
  uint64_t v36 = v2;
  MEMORY[0x270FA5388](v3);
  sub_253465A3C();
  sub_253462A5C(&qword_269CDDCC0);
  sub_253A3D7B8();
  MEMORY[0x270FA5388](v4);
  sub_2534B3294();
  uint64_t v5 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_2534B340C();
  MEMORY[0x270FA5388](v7);
  sub_2536D2D54();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  sub_253A3BCA0(v9, v10, v11, v12, v13, v14, v15, v16, v35);
  sub_253A3C88C();
  sub_253A3C210();
  sub_253A3D604();
  uint64_t v17 = sub_2534F88B8(v0);
  if (v19)
  {
    sub_253A3C234();
    sub_253A3C470();
    sub_2534F88B8(v1);
    if (v19)
    {
      sub_253472458(v0, (uint64_t *)&unk_26B248CB0);
      goto LABEL_11;
    }
LABEL_9:
    sub_253472458(v0, &qword_269CDDCC0);
    goto LABEL_22;
  }
  sub_253A3D174(v17, v18, (uint64_t *)&unk_26B248CB0);
  sub_2534F88B8(v1);
  if (v19)
  {
    sub_253A3CC94();
    sub_253A3D048();
    uint64_t v20 = sub_253579360();
    v21(v20);
    goto LABEL_9;
  }
  sub_25347FA84();
  v22();
  sub_2539E6F90((uint64_t)&qword_269CDCCE8);
  char v23 = sub_2536D34E0();
  uint64_t v24 = *(void (**)(void))(v36 + 8);
  sub_2534B3470();
  v24();
  sub_253A3C234();
  sub_253A3C470();
  sub_2534B3470();
  v24();
  sub_253A3D814();
  if ((v23 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_11:
  uint64_t v25 = type metadata accessor for ActionStepResult(0);
  sub_25397F578();
  if (v19) {
    BOOL v28 = v26 == v27;
  }
  else {
    BOOL v28 = 0;
  }
  if (v28 || (sub_253B0A4C0(), char v29 = sub_25397F648(), (v30 & 1) != 0))
  {
    sub_253A3DF3C(*(int *)(v25 + 24));
    static ActionResult.== infix(_:_:)();
    if (v31)
    {
      sub_25397F578();
      if (v19) {
        BOOL v34 = v32 == v33;
      }
      else {
        BOOL v34 = 0;
      }
      if (v34) {
        char v29 = 1;
      }
      else {
        char v29 = sub_253B0A4C0();
      }
      goto LABEL_23;
    }
LABEL_22:
    char v29 = 0;
  }
LABEL_23:
  sub_253A3E580(v29);
  sub_253465A14();
}

uint64_t static QueryStepResults.== infix(_:_:)(uint64_t a1)
{
  sub_253A3F8A0(a1);
  if ((sub_2534B99A8() & 1) == 0) {
    return 0;
  }
  Stepuint64_t Results = type metadata accessor for QueryStepResults(0);
  sub_253A3BFB0(StepResults);
  if ((_s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0() & 1) == 0) {
    return 0;
  }
  sub_2534F8774(*(int *)(StepResults + 24));
  return sub_253B055A0();
}

uint64_t static ActionResolverRequest.== infix(_:_:)()
{
  if (sub_253A3D21C())
  {
    type metadata accessor for ActionResolverRequest(0);
    sub_253A3EA24();
    sub_253A3C3B8(v4);
    sub_2534BFE70();
    if (v5)
    {
      uint64_t v6 = sub_253A3C3B8(v2[6]);
      sub_25357A6AC(v6, v7);
      if (v8)
      {
        sub_253A3C3B8(v2[7]);
        sub_2534C0500();
        if (v9)
        {
          sub_253A3D5C8();
          if (v12)
          {
            sub_253A3D5C8();
            if (v12)
            {
              sub_253A3D5C8();
              if (v12)
              {
                sub_253A3C160(v2[11]);
                BOOL v12 = v12 && v10 == v11;
                if (v12 || (sub_253B0A4C0() & 1) != 0)
                {
                  if (v1)
                  {
                    if (v0)
                    {
                      BOOL v13 = v2 == v3 && v1 == v0;
                      if (v13 || (sub_25351C8D0() & 1) != 0) {
                        return 1;
                      }
                    }
                  }
                  else if (!v0)
                  {
                    return 1;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return 0;
}

void static ResponseGenerationRequest.== infix(_:_:)()
{
}

uint64_t static ClientInitiatedClientAction.== infix(_:_:)(uint64_t a1)
{
  return sub_253990818(a1);
}

uint64_t static SafetyModeException.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v2)
    {
      sub_253A3E3D8(a1);
      BOOL v5 = v5 && v3 == v4;
      if (v5 || (sub_253B0A4C0() & 1) != 0) {
        return 1;
      }
    }
  }
  else if (!v2)
  {
    return 1;
  }
  return 0;
}

void static ContextRetrieved.== infix(_:_:)()
{
  sub_2534B9750();
  if (v0)
  {
    sub_2534ACF74();
    sub_2534B9750();
  }
}

void static ToolRetrievalResponse.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  float v4 = *(float *)(a1 + 32);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  float v7 = *(float *)(a2 + 32);
  BOOL v8 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v8 || (sub_253B0A4C0() & 1) != 0)
  {
    BOOL v9 = v2 == v5 && v3 == v6;
    if (v9 || (sub_253A3BE14()) && v4 == v7)
    {
      sub_2534D9718();
      sub_2534B9708();
      if (v10)
      {
        sub_2534ACF74();
        sub_2534BFA8C();
      }
    }
  }
}

void static EntitySpanMatchResult.== infix(_:_:)()
{
}

void static StatementResult.== infix(_:_:)()
{
  sub_2534B3258();
  sub_253A3C5E0();
  sub_253465998();
  uint64_t v47 = v2;
  MEMORY[0x270FA5388](v3);
  sub_253465A3C();
  sub_253462A5C(&qword_269CDDCC0);
  sub_253A3D7B8();
  MEMORY[0x270FA5388](v4);
  sub_2534B3294();
  uint64_t v5 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_2534B340C();
  MEMORY[0x270FA5388](v7);
  sub_2536D2D54();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  sub_253A3BCA0(v9, v10, v11, v12, v13, v14, v15, v16, v44);
  sub_253A3C88C();
  sub_253A3C210();
  sub_253A3D604();
  uint64_t v17 = sub_2534F88B8(v0);
  if (v19)
  {
    sub_253A3C234();
    sub_253A3C470();
    sub_2534F88B8(v1);
    if (v19)
    {
      sub_253472458(v0, (uint64_t *)&unk_26B248CB0);
      goto LABEL_11;
    }
LABEL_9:
    sub_253472458(v0, &qword_269CDDCC0);
    goto LABEL_33;
  }
  sub_253A3D174(v17, v18, (uint64_t *)&unk_26B248CB0);
  sub_2534F88B8(v1);
  if (v19)
  {
    sub_253A3CC94();
    sub_253A3D048();
    uint64_t v20 = sub_253A3BA9C();
    v21(v20);
    goto LABEL_9;
  }
  sub_25347FA84();
  v22();
  sub_2539E6F90((uint64_t)&qword_269CDCCE8);
  char v23 = sub_2536D34E0();
  uint64_t v24 = *(void (**)(void))(v47 + 8);
  sub_2534B3470();
  v24();
  sub_253A3C234();
  sub_253A3C470();
  sub_2534B3470();
  v24();
  sub_253A3D814();
  if ((v23 & 1) == 0) {
    goto LABEL_33;
  }
LABEL_11:
  uint64_t v25 = type metadata accessor for StatementResult(0);
  sub_253A3DF3C(*(int *)(v25 + 20));
  static StatementResultPayload.== infix(_:_:)();
  if ((v26 & 1) == 0 || (sub_253A3F804() & 1) == 0 || (sub_253A3F804() & 1) == 0 || (sub_253A3F804() & 1) == 0) {
    goto LABEL_33;
  }
  uint64_t v27 = *(int *)(v25 + 36);
  uint64_t v28 = *(void *)(v45 + v27);
  uint64_t v29 = *(void *)(v45 + v27 + 8);
  uint64_t v30 = *(void *)(v45 + v27 + 16);
  uint64_t v31 = *(void *)(v45 + v27 + 24);
  uint64_t v32 = (void *)(v46 + v27);
  uint64_t v33 = v32[1];
  uint64_t v35 = v32[2];
  uint64_t v34 = v32[3];
  if (!v29)
  {
    if (!v33) {
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  if (!v33)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_32:
    uint64_t v38 = sub_253A3F398();
    sub_2539EA1E0(v38, v39);
    uint64_t v40 = sub_2534D9B1C();
    sub_253961BAC(v40, v41);
    uint64_t v42 = sub_253A3F398();
    sub_253961BAC(v42, v43);
    goto LABEL_33;
  }
  BOOL v36 = v28 == *v32 && v29 == v33;
  if (v36 || (sub_253A3BE14()) && v31 && v34 && (v30 != v35 || v31 != v34))
  {
    sub_2534DA2E4();
    sub_25351C8D0();
  }
LABEL_33:
  sub_253465A14();
}

void static ExternalAgentTextQuery.== infix(_:_:)()
{
  sub_2534B3258();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = sub_253B055C0();
  sub_253465998();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  sub_25346CB04();
  uint64_t v12 = sub_253462A5C(&qword_269CDDCC0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v13);
  sub_2534B3294();
  uint64_t v14 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  sub_2534B340C();
  MEMORY[0x270FA5388](v16);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v17);
  sub_2534D9E98();
  uint64_t v42 = v5;
  BOOL v18 = *v7 == *v5 && v7[1] == v5[1];
  if (!v18 && (sub_253B0A4C0() & 1) == 0) {
    goto LABEL_28;
  }
  uint64_t v19 = type metadata accessor for ExternalAgentTextQuery(0);
  uint64_t v20 = sub_253A3E2D8(v19);
  sub_253961F60(v20, v2, (uint64_t *)&unk_26B248CB0);
  sub_253961F60((uint64_t)v42 + *(int *)(v19 + 20), v3, (uint64_t *)&unk_26B248CB0);
  uint64_t v21 = v0 + *(int *)(v12 + 48);
  uint64_t v22 = sub_2536D3880();
  sub_253961F60(v22, v23, (uint64_t *)&unk_26B248CB0);
  uint64_t v24 = sub_253A3E5D4();
  sub_253961F60(v24, v25, (uint64_t *)&unk_26B248CB0);
  uint64_t v26 = sub_2534F88B8(v0);
  if (v18)
  {
    sub_253A3C234();
    sub_253A3C470();
    sub_2534F88B8(v21);
    if (v18)
    {
      sub_253472458(v0, (uint64_t *)&unk_26B248CB0);
      goto LABEL_16;
    }
LABEL_14:
    sub_253472458(v0, &qword_269CDDCC0);
    goto LABEL_28;
  }
  sub_253A3D174(v26, v27, (uint64_t *)&unk_26B248CB0);
  sub_2534F88B8(v21);
  if (v28)
  {
    sub_253A3CC94();
    sub_253A3D048();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v8);
    goto LABEL_14;
  }
  sub_253A3DB5C();
  sub_25347FA84();
  v29();
  sub_2539E6F90((uint64_t)&qword_269CDCCE8);
  sub_25353CE6C();
  char v41 = sub_253B096B0();
  uint64_t v30 = *(void (**)(void))(v10 + 8);
  sub_25351C3E8();
  v30();
  sub_253A3CC94();
  sub_253A3D048();
  sub_253579360();
  sub_25351C3E8();
  v30();
  uint64_t v31 = sub_25351C5C0();
  sub_253472458(v31, v32);
  if ((v41 & 1) == 0) {
    goto LABEL_28;
  }
LABEL_16:
  uint64_t v33 = *(int *)(v19 + 24);
  uint64_t v35 = *(void *)((char *)v7 + v33);
  uint64_t v34 = *(void *)((char *)v7 + v33 + 8);
  BOOL v36 = *(void **)((char *)v7 + v33 + 16);
  uint64_t v37 = (void *)((char *)v42 + v33);
  uint64_t v38 = v37[1];
  uint64_t v39 = (void *)v37[2];
  if (!v34)
  {
    if (!v38) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (!v38)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_27:
    sub_253A3E700();
    sub_253A3E894();
    sub_253A3E6E4();
    goto LABEL_28;
  }
  BOOL v40 = v35 == *v37 && v34 == v38;
  if (v40 || (sub_253A3CD3C() & 1) != 0)
  {
    sub_2534B5C40(v36, v39);
    sub_253A3C570();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_253A3C570();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_28:
  sub_253465A14();
}

void static ExternalAgentSpeechQuery.== infix(_:_:)()
{
  sub_2534B3258();
  uint64_t v5 = sub_253A3C5E0();
  sub_253465998();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_253465A3C();
  uint64_t v9 = sub_253462A5C(&qword_269CDDCC0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v10);
  sub_2534B3294();
  uint64_t v11 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  sub_2534B340C();
  MEMORY[0x270FA5388](v13);
  sub_2535B45C8();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v29 - v15;
  sub_2534B9560();
  if ((v17 & 1) == 0) {
    goto LABEL_24;
  }
  uint64_t v30 = v7;
  uint64_t v18 = type metadata accessor for ExternalAgentSpeechQuery(0);
  uint64_t v19 = sub_253A3DB74(v18);
  sub_253961F60(v19, (uint64_t)v16, (uint64_t *)&unk_26B248CB0);
  sub_253A3DF14();
  sub_253A3E550();
  sub_253961F60(v4, v9, (uint64_t *)&unk_26B248CB0);
  uint64_t v20 = sub_2534F88B8((uint64_t)v2);
  if (v22)
  {
    sub_253A3DB38();
    sub_253A3C234();
    sub_2534F88B8(v9);
    if (v22)
    {
      sub_253472458((uint64_t)v2, (uint64_t *)&unk_26B248CB0);
      goto LABEL_12;
    }
LABEL_10:
    sub_253472458((uint64_t)v2, &qword_269CDDCC0);
    goto LABEL_24;
  }
  sub_253A3D174(v20, v21, (uint64_t *)&unk_26B248CB0);
  sub_2534F88B8(v9);
  if (v22)
  {
    sub_253A3E49C();
    sub_253A3CC94();
    uint64_t v23 = sub_253A3BA9C();
    v24(v23);
    goto LABEL_10;
  }
  uint64_t v25 = v30;
  sub_25347FA84();
  v26();
  sub_2539E6F90((uint64_t)&qword_269CDCCE8);
  uint64_t v1 = sub_2536D34E0();
  uint64_t v27 = *(void (**)(void))(v25 + 8);
  sub_2534DA4BC();
  v27();
  sub_253A3DB38();
  sub_253A3C234();
  sub_2534DA4BC();
  v27();
  sub_253A3D814();
  if ((v1 & 1) == 0) {
    goto LABEL_24;
  }
LABEL_12:
  sub_253A3D00C();
  if (!v5)
  {
    if (!v3) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (!v3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_23:
    sub_253A3E700();
    sub_253A3E894();
    sub_253A3E6E4();
    goto LABEL_24;
  }
  BOOL v28 = v2 == &unk_26B248CB0 && v5 == v3;
  if (v28 || (sub_253A3CD3C() & 1) != 0)
  {
    sub_2534B5C40((void *)v1, v0);
    sub_253A3C570();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_253A3C570();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_24:
  sub_253465A14();
}

void static ExternalAgentRequest.== infix(_:_:)()
{
  sub_2534B3258();
  uint64_t v5 = sub_253A3C5E0();
  sub_253465998();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_253465A3C();
  uint64_t v9 = sub_253462A5C(&qword_269CDDCC0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v10);
  sub_2534B3294();
  uint64_t v11 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  sub_2534B340C();
  MEMORY[0x270FA5388](v13);
  sub_2535B45C8();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v29 - v15;
  sub_25351C5CC();
  static RequestContent.== infix(_:_:)();
  if ((v17 & 1) == 0) {
    goto LABEL_24;
  }
  uint64_t v30 = v7;
  uint64_t v18 = type metadata accessor for ExternalAgentRequest(0);
  uint64_t v19 = sub_253A3DB74(v18);
  sub_253961F60(v19, (uint64_t)v16, (uint64_t *)&unk_26B248CB0);
  sub_253A3DF14();
  sub_253A3E550();
  sub_253961F60(v4, v9, (uint64_t *)&unk_26B248CB0);
  uint64_t v20 = sub_2534F88B8((uint64_t)v2);
  if (v22)
  {
    sub_253A3DB38();
    sub_253A3C234();
    sub_2534F88B8(v9);
    if (v22)
    {
      sub_253472458((uint64_t)v2, (uint64_t *)&unk_26B248CB0);
      goto LABEL_12;
    }
LABEL_10:
    sub_253472458((uint64_t)v2, &qword_269CDDCC0);
    goto LABEL_24;
  }
  sub_253A3D174(v20, v21, (uint64_t *)&unk_26B248CB0);
  sub_2534F88B8(v9);
  if (v22)
  {
    sub_253A3E49C();
    sub_253A3CC94();
    uint64_t v23 = sub_253A3BA9C();
    v24(v23);
    goto LABEL_10;
  }
  uint64_t v25 = v30;
  sub_25347FA84();
  v26();
  sub_2539E6F90((uint64_t)&qword_269CDCCE8);
  uint64_t v1 = sub_2536D34E0();
  uint64_t v27 = *(void (**)(void))(v25 + 8);
  sub_2534DA4BC();
  v27();
  sub_253A3DB38();
  sub_253A3C234();
  sub_2534DA4BC();
  v27();
  sub_253A3D814();
  if ((v1 & 1) == 0) {
    goto LABEL_24;
  }
LABEL_12:
  sub_253A3D00C();
  if (!v5)
  {
    if (!v3) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (!v3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_23:
    sub_253A3E700();
    sub_253A3E894();
    sub_253A3E6E4();
    goto LABEL_24;
  }
  BOOL v28 = v2 == &unk_26B248CB0 && v5 == v3;
  if (v28 || (sub_253A3CD3C() & 1) != 0)
  {
    sub_2534B5C40((void *)v1, v0);
    sub_253A3C570();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_253A3C570();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_24:
  sub_253465A14();
}

uint64_t static ExternalAgentOutcome.== infix(_:_:)()
{
  if ((sub_253A3D21C() & 1) == 0) {
    return 0;
  }
  uint64_t v0 = type metadata accessor for ExternalAgentOutcome(0);
  sub_253A3BFB0(v0);
  if ((sub_253B06840() & 1) == 0) {
    return 0;
  }
  uint64_t v1 = (void *)sub_253A3C3B8(*(int *)(v0 + 24));
  return sub_2534B5C40(v1, v2);
}

uint64_t static ExternalAgentRequestRewriteMetadata.== infix(_:_:)(uint64_t a1)
{
  return sub_253990818(a1);
}

uint64_t sub_253990818(uint64_t a1)
{
  uint64_t v1 = sub_253A3F0B8(a1);
  BOOL v4 = v1 == *v3 && v2 == v3[1];
  if (!v4 && (sub_253B0A4C0() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = sub_2534ACF74();
  return v6(v5);
}

uint64_t static ToolResolution.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_2539911B0(a1, a2, MEMORY[0x263F7FEC0], type metadata accessor for ToolResolution, MEMORY[0x263F4BF90]);
}

void static UndoRedoRequest.== infix(_:_:)()
{
  sub_2534B3258();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = (int *)sub_253B059D0();
  sub_253465998();
  uint64_t v59 = v9;
  MEMORY[0x270FA5388](v10);
  sub_2534D8F68(v11, v56);
  uint64_t v61 = sub_253462A5C(&qword_269CDCD18);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v12);
  sub_2534966B0();
  uint64_t v13 = sub_253462A5C(&qword_269CDB460);
  uint64_t v14 = sub_25346CB4C(v13);
  MEMORY[0x270FA5388](v14);
  sub_2534659D8();
  uint64_t v60 = v15;
  sub_2534B324C();
  MEMORY[0x270FA5388](v16);
  sub_2534B3318();
  uint64_t v62 = v17;
  sub_2534B324C();
  MEMORY[0x270FA5388](v18);
  sub_2534B35DC();
  uint64_t v63 = v19;
  sub_253483660();
  uint64_t v20 = sub_253B055C0();
  sub_253465998();
  uint64_t v64 = v21;
  MEMORY[0x270FA5388](v22);
  sub_2534AF2A0(v23, v57);
  uint64_t v24 = sub_253462A5C(&qword_269CDDCC0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v25);
  sub_2534835B0();
  uint64_t v26 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v27 = sub_25346CB4C(v26);
  MEMORY[0x270FA5388](v27);
  sub_2534659D8();
  uint64_t v65 = v28;
  sub_2534B324C();
  MEMORY[0x270FA5388](v29);
  sub_25351C99C();
  MEMORY[0x270FA5388](v30);
  sub_2534B347C();
  BOOL v31 = *v7 == *v5 && v7[1] == v5[1];
  if (!v31)
  {
    sub_253B0A4C0();
    sub_25397F648();
    if ((v32 & 1) == 0) {
      goto LABEL_28;
    }
  }
  type metadata accessor for UndoRedoRequest(0);
  sub_253A3EA24();
  sub_253961F60((uint64_t)v7 + v33, v1, (uint64_t *)&unk_26B248CB0);
  sub_253961F60((uint64_t)v5 + v8[5], v2, (uint64_t *)&unk_26B248CB0);
  uint64_t v34 = v0 + *(int *)(v24 + 48);
  uint64_t v35 = sub_25353CE6C();
  sub_253961F60(v35, v36, (uint64_t *)&unk_26B248CB0);
  sub_253961F60(v2, v34, (uint64_t *)&unk_26B248CB0);
  sub_2534F88B8(v0);
  if (!v31)
  {
    sub_253961F60(v0, v65, (uint64_t *)&unk_26B248CB0);
    sub_2534F88B8(v34);
    if (!v37)
    {
      sub_253A3DB68();
      sub_25347FA84();
      v44();
      sub_2539E6F90((uint64_t)&qword_269CDCCE8);
      char v58 = sub_253B096B0();
      uint64_t v45 = *(void (**)(void))(v64 + 8);
      sub_2536D44B0();
      sub_25351C3E8();
      v45();
      sub_253472458(v2, (uint64_t *)&unk_26B248CB0);
      sub_253472458(v1, (uint64_t *)&unk_26B248CB0);
      sub_2534D9A78();
      sub_25351C3E8();
      v45();
      uint64_t v46 = sub_2534D9AA0();
      sub_253472458(v46, v47);
      if ((v58 & 1) == 0) {
        goto LABEL_28;
      }
      goto LABEL_17;
    }
    uint64_t v38 = sub_2536D42A4();
    sub_253472458(v38, v39);
    sub_253A3BC88();
    uint64_t v40 = sub_253A3D55C();
    v41(v40, v20);
LABEL_14:
    uint64_t v42 = &qword_269CDDCC0;
    uint64_t v43 = v0;
LABEL_15:
    sub_253472458(v43, v42);
    goto LABEL_28;
  }
  sub_253472458(v2, (uint64_t *)&unk_26B248CB0);
  sub_253472458(v1, (uint64_t *)&unk_26B248CB0);
  sub_2534F88B8(v34);
  if (!v31) {
    goto LABEL_14;
  }
  sub_253472458(v0, (uint64_t *)&unk_26B248CB0);
LABEL_17:
  if (*((unsigned __int8 *)v7 + v8[6]) == *((unsigned __int8 *)v5 + v8[6])
    && (_s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0() & 1) != 0)
  {
    sub_253961F60((uint64_t)v7 + v8[8], v63, &qword_269CDB460);
    sub_253961F60((uint64_t)v5 + v8[8], v62, &qword_269CDB460);
    uint64_t v48 = v3 + *(int *)(v61 + 48);
    sub_253961F60(v63, v3, &qword_269CDB460);
    uint64_t v49 = sub_253A3F354();
    sub_253961F60(v49, v50, &qword_269CDB460);
    uint64_t v51 = sub_2536D54B0();
    sub_2534D8B48(v51, v52, (uint64_t)v8);
    if (v31)
    {
      sub_253A3F324();
      sub_253472458(v63, &qword_269CDB460);
      sub_2534D8B48(v48, 1, (uint64_t)v8);
      if (v31)
      {
        sub_253472458(v3, &qword_269CDB460);
        goto LABEL_28;
      }
    }
    else
    {
      sub_253961F60(v3, v60, &qword_269CDB460);
      sub_2534D8B48(v48, 1, (uint64_t)v8);
      if (!v53)
      {
        sub_25347FA84();
        v54();
        sub_2539E6F90((uint64_t)&unk_269CDCCF0);
        sub_253578D20();
        sub_253B096B0();
        uint64_t v55 = *(void (**)(void))(v59 + 8);
        sub_2536D3880();
        sub_2534D91A0();
        v55();
        sub_253A3F324();
        sub_253472458(v63, &qword_269CDB460);
        sub_2535B4148();
        sub_2534D91A0();
        v55();
        sub_253472458(v3, &qword_269CDB460);
        goto LABEL_28;
      }
      sub_253472458(v62, &qword_269CDB460);
      sub_253A3E49C();
      (*(void (**)(uint64_t, int *))(v59 + 8))(v60, v8);
    }
    uint64_t v42 = &qword_269CDCD18;
    uint64_t v43 = v3;
    goto LABEL_15;
  }
LABEL_28:
  sub_253465A14();
}

void static ClientUndoRedoRequest.== infix(_:_:)()
{
  sub_2534B3258();
  uint64_t v3 = v2;
  sub_2534DA6BC();
  sub_253B059D0();
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_25348366C();
  sub_253462A5C(&qword_269CDCD18);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  sub_2534835B0();
  uint64_t v6 = sub_253462A5C(&qword_269CDB460);
  uint64_t v7 = sub_25346CB4C(v6);
  MEMORY[0x270FA5388](v7);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v8);
  sub_25351C770();
  MEMORY[0x270FA5388](v9);
  sub_253A3BB6C();
  if (sub_253B055A0())
  {
    uint64_t v10 = sub_253A3DBFC();
    uint64_t v11 = type metadata accessor for ClientUndoRedoRequest(v10);
    if (*(unsigned __int8 *)(v1 + *(int *)(v11 + 20)) == *(unsigned __int8 *)(v3 + *(int *)(v11 + 20)))
    {
      uint64_t v12 = v11;
      if (_s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0())
      {
        sub_253A3DE00(v1 + *(int *)(v12 + 28));
        sub_253A3C488(*(int *)(v12 + 28));
        sub_253A3BACC();
        sub_253A3C4A4();
        uint64_t v13 = sub_2534F88B8(v0);
        if (!v15)
        {
          sub_253A3DF48(v13, v14, &qword_269CDB460);
          sub_2534F88B8(v3);
          if (!v15)
          {
            sub_25347FA84();
            v18();
            sub_2539E6F90((uint64_t)&unk_269CDCCF0);
            sub_2536D53CC();
            uint64_t v19 = *(void (**)(void))(v20 + 8);
            sub_2534D97B4();
            v19();
            sub_253A3BC88();
            sub_253A3BCE4();
            sub_2534D97B4();
            v19();
            sub_253A3CE14();
            goto LABEL_13;
          }
          sub_253A3BC88();
          sub_253A3BCE4();
          uint64_t v16 = sub_253A3BAB4();
          v17(v16);
LABEL_12:
          sub_253472458(v0, &qword_269CDCD18);
          goto LABEL_13;
        }
        sub_253A3BC88();
        sub_253A3BCE4();
        sub_2534F88B8(v3);
        if (!v15) {
          goto LABEL_12;
        }
        sub_253472458(v0, &qword_269CDB460);
      }
    }
  }
LABEL_13:
  sub_253465A14();
}

uint64_t static TypeConversionRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_2539911B0(a1, a2, MEMORY[0x263F804B8], type metadata accessor for TypeConversionRequest, MEMORY[0x263F80540]);
}

uint64_t sub_2539911B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(uint64_t))
{
  sub_2534DA0C4();
  if ((v7() & 1) == 0) {
    return 0;
  }
  uint64_t v8 = a4(0);
  uint64_t v9 = sub_253A3BFB0(v8);
  if ((a5(v9) & 1) == 0) {
    return 0;
  }
  sub_2534F8774(*(int *)(v8 + 24));
  return _s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0();
}

uint64_t static TypeConversionResult.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_2539911B0(a1, a2, MEMORY[0x263F804B8], type metadata accessor for TypeConversionResult, MEMORY[0x263F4BF90]);
}

void static QueryDecorationResult.== infix(_:_:)()
{
  sub_2534B3258();
  uint64_t v5 = v4;
  sub_2534D976C();
  sub_253B08270();
  sub_253465998();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_253465A3C();
  uint64_t v9 = sub_253462A5C(&qword_269CE56F8);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v10);
  sub_2534B3294();
  uint64_t v11 = sub_253462A5C(&qword_269CDBB30);
  uint64_t v12 = sub_25346CB4C(v11);
  MEMORY[0x270FA5388](v12);
  sub_2534B340C();
  MEMORY[0x270FA5388](v13);
  sub_2535B45C8();
  MEMORY[0x270FA5388](v14);
  sub_2534D9E98();
  sub_2534B57F8();
  if ((v15 & 1) == 0) {
    goto LABEL_16;
  }
  sub_2534B9750();
  if ((v16 & 1) == 0) {
    goto LABEL_16;
  }
  sub_2534B9750();
  if ((v17 & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v34 = v7;
  uint64_t DecorationResult = type metadata accessor for QueryDecorationResult(0);
  sub_253961F60(v0 + *(int *)(DecorationResult + 28), v2, &qword_269CDBB30);
  sub_253961F60(v5 + *(int *)(DecorationResult + 28), v3, &qword_269CDBB30);
  uint64_t v19 = v1 + *(int *)(v9 + 48);
  uint64_t v20 = sub_2536D3880();
  sub_253961F60(v20, v21, &qword_269CDBB30);
  uint64_t v22 = sub_2536D5500();
  sub_253961F60(v22, v23, &qword_269CDBB30);
  uint64_t v24 = sub_2534F88B8(v1);
  if (v26)
  {
    sub_253A3DB38();
    sub_253A3C470();
    sub_2534F88B8(v19);
    if (v26)
    {
      sub_253472458(v1, &qword_269CDBB30);
      goto LABEL_14;
    }
LABEL_12:
    sub_253472458(v1, &qword_269CE56F8);
LABEL_16:
    char v32 = 0;
    goto LABEL_17;
  }
  sub_253A3D174(v24, v25, &qword_269CDBB30);
  sub_2534F88B8(v19);
  if (v26)
  {
    sub_253A3E49C();
    sub_253A3D048();
    uint64_t v27 = sub_253A3BA9C();
    v28(v27);
    goto LABEL_12;
  }
  sub_253A3F110();
  sub_25347FA84();
  v29();
  sub_2539E6F90((uint64_t)&unk_269CE5700);
  char v33 = sub_2536D34E0();
  uint64_t v30 = *(void (**)(void))(v34 + 8);
  sub_2534F85D4();
  v30();
  sub_253A3DB38();
  sub_253A3C470();
  sub_253579360();
  sub_2534F85D4();
  v30();
  sub_253A3D814();
  if ((v33 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_14:
  sub_2534B97A4();
  if ((v31 & 1) == 0) {
    goto LABEL_16;
  }
  sub_2534B9750();
LABEL_17:
  sub_253A3E580(v32);
  sub_253465A14();
}

uint64_t static QueryDecorationPrePlannerResult.== infix(_:_:)()
{
  if (sub_253A3D21C())
  {
    uint64_t DecorationPrePlannerResult = type metadata accessor for QueryDecorationPrePlannerResult(0);
    sub_25397F578();
    BOOL v4 = v4 && v2 == v3;
    if (v4 || (sub_253B0A4C0(), char v5 = sub_25397F648(), (v6 & 1) != 0))
    {
      uint64_t v7 = *(int *)(DecorationPrePlannerResult + 24);
      char v8 = *(unsigned char *)(v0 + v7 + 8);
      uint64_t v11 = *(void *)(v0 + v7);
      char v12 = v8;
      sub_253A3E230();
      char v5 = static QueryDecorationPrePlannerResultPayload.== infix(_:_:)((uint64_t)&v11, (uint64_t)&v10);
    }
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_253991600(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 6775156 && a2 == 0xE300000000000000;
  if (v2 || (sub_253B0A4C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
    if (v6 || (sub_253B0A4C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x8000000253B12100)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v7 = sub_253B0A4C0();
      swift_bridgeObjectRelease();
      if (v7) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_253991738(char a1)
{
  if (!a1) {
    return 6775156;
  }
  if (a1 == 1) {
    return 0x65756C6176;
  }
  return 0xD000000000000010;
}

uint64_t sub_253991788(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x536E6F6973736573 && a2 == 0xEC00000074726174;
  if (v2 || (sub_253B0A4C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7265755174786574 && a2 == 0xE900000000000079;
    if (v6 || (sub_253B0A4C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x7551686365657073 && a2 == 0xEB00000000797265;
      if (v7 || (sub_253B0A4C0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x74736575716572 && a2 == 0xE700000000000000;
        if (v8 || (sub_253B0A4C0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x616572436E616C70 && a2 == 0xEB00000000646574;
          if (v9 || (sub_253B0A4C0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x72436E6F69746361 && a2 == 0xED00006465746165;
            if (v10 || (sub_253B0A4C0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x61436E6F69746361 && a2 == 0xEE0064656C65636ELL;
              if (v11 || (sub_253B0A4C0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else if (a1 == 0xD000000000000013 && a2 == 0x8000000253B12520 || (sub_253B0A4C0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                BOOL v12 = a1 == 0x4373656972657571 && a2 == 0xEE00646574616572;
                if (v12 || (sub_253B0A4C0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  BOOL v13 = a1 == 0x656C626169726176 && a2 == 0xEC00000074655373;
                  if (v13 || (sub_253B0A4C0() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 9;
                  }
                  else
                  {
                    BOOL v14 = a1 == 0x6578457370657473 && a2 == 0xED00006465747563;
                    if (v14 || (sub_253B0A4C0() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 10;
                    }
                    else if (a1 == 0xD000000000000010 && a2 == 0x8000000253B12550 || (sub_253B0A4C0() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 11;
                    }
                    else if (a1 == 0xD000000000000010 && a2 == 0x8000000253B0CF50 || (sub_253B0A4C0() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 12;
                    }
                    else if (a1 == 0xD000000000000010 && a2 == 0x8000000253B12570 || (sub_253B0A4C0() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 13;
                    }
                    else
                    {
                      BOOL v15 = a1 == 0x6C61636974697263 && a2 == 0xED0000726F727245;
                      if (v15 || (sub_253B0A4C0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 14;
                      }
                      else
                      {
                        BOOL v16 = a1 == 0x7543746E65696C63 && a2 == 0xEC0000006D6F7473;
                        if (v16 || (sub_253B0A4C0() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 15;
                        }
                        else
                        {
                          BOOL v17 = a1 == 0x616C50664F646E65 && a2 == 0xE90000000000006ELL;
                          if (v17 || (sub_253B0A4C0() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 16;
                          }
                          else if (a1 == 0xD000000000000010 && a2 == 0x8000000253B13A30 {
                                 || (sub_253B0A4C0() & 1) != 0)
                          }
                          {
                            swift_bridgeObjectRelease();
                            return 17;
                          }
                          else
                          {
                            BOOL v18 = a1 == 0x74616E696D726574 && a2 == 0xE900000000000065;
                            if (v18 || (sub_253B0A4C0() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 18;
                            }
                            else if (a1 == 0xD000000000000015 && a2 == 0x8000000253B13A50 {
                                   || (sub_253B0A4C0() & 1) != 0)
                            }
                            {
                              swift_bridgeObjectRelease();
                              return 19;
                            }
                            else if (a1 == 0xD000000000000014 && a2 == 0x8000000253B125A0 {
                                   || (sub_253B0A4C0() & 1) != 0)
                            }
                            {
                              swift_bridgeObjectRelease();
                              return 20;
                            }
                            else
                            {
                              BOOL v19 = a1 == 0x78456E6F69746361 && a2 == 0xEE00646574756365;
                              if (v19 || (sub_253B0A4C0() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 21;
                              }
                              else
                              {
                                BOOL v20 = a1 == 0x4573656972657571 && a2 == 0xEF64657475636578;
                                if (v20 || (sub_253B0A4C0() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 22;
                                }
                                else if (a1 == 0xD000000000000017 && a2 == 0x8000000253B125E0 {
                                       || (sub_253B0A4C0() & 1) != 0)
                                }
                                {
                                  swift_bridgeObjectRelease();
                                  return 23;
                                }
                                else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000253B12600 {
                                       || (sub_253B0A4C0() & 1) != 0)
                                }
                                {
                                  swift_bridgeObjectRelease();
                                  return 24;
                                }
                                else if (a1 == 0xD000000000000020 && a2 == 0x8000000253B13A70 {
                                       || (sub_253B0A4C0() & 1) != 0)
                                }
                                {
                                  swift_bridgeObjectRelease();
                                  return 25;
                                }
                                else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000253B12620 {
                                       || (sub_253B0A4C0() & 1) != 0)
                                }
                                {
                                  swift_bridgeObjectRelease();
                                  return 26;
                                }
                                else if (a1 == 0xD000000000000015 && a2 == 0x8000000253B12640 {
                                       || (sub_253B0A4C0() & 1) != 0)
                                }
                                {
                                  swift_bridgeObjectRelease();
                                  return 27;
                                }
                                else if (a1 == 0xD000000000000017 && a2 == 0x8000000253B12660 {
                                       || (sub_253B0A4C0() & 1) != 0)
                                }
                                {
                                  swift_bridgeObjectRelease();
                                  return 28;
                                }
                                else if (a1 == 0xD000000000000011 && a2 == 0x8000000253B12680 {
                                       || (sub_253B0A4C0() & 1) != 0)
                                }
                                {
                                  swift_bridgeObjectRelease();
                                  return 29;
                                }
                                else if (a1 == 0xD000000000000013 && a2 == 0x8000000253B126A0 {
                                       || (sub_253B0A4C0() & 1) != 0)
                                }
                                {
                                  swift_bridgeObjectRelease();
                                  return 30;
                                }
                                else if (a1 == 0xD000000000000010 && a2 == 0x8000000253B13AA0 {
                                       || (sub_253B0A4C0() & 1) != 0)
                                }
                                {
                                  swift_bridgeObjectRelease();
                                  return 31;
                                }
                                else
                                {
                                  BOOL v21 = a1 == 0x746552736C6F6F74 && a2 == 0xEE00646576656972;
                                  if (v21 || (sub_253B0A4C0() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 32;
                                  }
                                  else if (a1 == 0xD000000000000011 && a2 == 0x8000000253B126E0 {
                                         || (sub_253B0A4C0() & 1) != 0)
                                  }
                                  {
                                    swift_bridgeObjectRelease();
                                    return 33;
                                  }
                                  else if (a1 == 0xD000000000000017 && a2 == 0x8000000253B12720 {
                                         || (sub_253B0A4C0() & 1) != 0)
                                  }
                                  {
                                    swift_bridgeObjectRelease();
                                    return 34;
                                  }
                                  else if (a1 == 0xD000000000000012 && a2 == 0x8000000253B12740 {
                                         || (sub_253B0A4C0() & 1) != 0)
                                  }
                                  {
                                    swift_bridgeObjectRelease();
                                    return 35;
                                  }
                                  else if (a1 == 0xD000000000000016 && a2 == 0x8000000253B12760 {
                                         || (sub_253B0A4C0() & 1) != 0)
                                  }
                                  {
                                    swift_bridgeObjectRelease();
                                    return 36;
                                  }
                                  else if (a1 == 0xD000000000000018 && a2 == 0x8000000253B12780 {
                                         || (sub_253B0A4C0() & 1) != 0)
                                  }
                                  {
                                    swift_bridgeObjectRelease();
                                    return 37;
                                  }
                                  else if (a1 == 0xD000000000000014 && a2 == 0x8000000253B127A0 {
                                         || (sub_253B0A4C0() & 1) != 0)
                                  }
                                  {
                                    swift_bridgeObjectRelease();
                                    return 38;
                                  }
                                  else if (a1 == 0xD000000000000014 && a2 == 0x8000000253B127C0 {
                                         || (sub_253B0A4C0() & 1) != 0)
                                  }
                                  {
                                    swift_bridgeObjectRelease();
                                    return 39;
                                  }
                                  else if (a1 == 0xD000000000000023 && a2 == 0x8000000253B127E0 {
                                         || (sub_253B0A4C0() & 1) != 0)
                                  }
                                  {
                                    swift_bridgeObjectRelease();
                                    return 40;
                                  }
                                  else
                                  {
                                    BOOL v22 = a1 == 0x6F7365526C6F6F74 && a2 == 0xEE006E6F6974756CLL;
                                    if (v22 || (sub_253B0A4C0() & 1) != 0)
                                    {
                                      swift_bridgeObjectRelease();
                                      return 41;
                                    }
                                    else
                                    {
                                      BOOL v23 = a1 == 0x6F6465526F646E75 && a2 == 0xEF74736575716552;
                                      if (v23 || (sub_253B0A4C0() & 1) != 0)
                                      {
                                        swift_bridgeObjectRelease();
                                        return 42;
                                      }
                                      else if (a1 == 0xD000000000000015 && a2 == 0x8000000253B12830 {
                                             || (sub_253B0A4C0() & 1) != 0)
                                      }
                                      {
                                        swift_bridgeObjectRelease();
                                        return 43;
                                      }
                                      else if (a1 == 0xD000000000000015 && a2 == 0x8000000253B12850 {
                                             || (sub_253B0A4C0() & 1) != 0)
                                      }
                                      {
                                        swift_bridgeObjectRelease();
                                        return 44;
                                      }
                                      else if (a1 == 0xD000000000000014 && a2 == 0x8000000253B12870 {
                                             || (sub_253B0A4C0() & 1) != 0)
                                      }
                                      {
                                        swift_bridgeObjectRelease();
                                        return 45;
                                      }
                                      else if (a1 == 0xD000000000000015 && a2 == 0x8000000253B12890 {
                                             || (sub_253B0A4C0() & 1) != 0)
                                      }
                                      {
                                        swift_bridgeObjectRelease();
                                        return 46;
                                      }
                                      else if (a1 == 0xD000000000000010 && a2 == 0x8000000253B0C410 {
                                             || (sub_253B0A4C0() & 1) != 0)
                                      }
                                      {
                                        swift_bridgeObjectRelease();
                                        return 47;
                                      }
                                      else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000253B128B0)
                                      {
                                        swift_bridgeObjectRelease();
                                        return 48;
                                      }
                                      else
                                      {
                                        char v24 = sub_253B0A4C0();
                                        swift_bridgeObjectRelease();
                                        if (v24) {
                                          return 48;
                                        }
                                        else {
                                          return 49;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_253992AA8()
{
  return 49;
}

unint64_t sub_253992AB0(char a1)
{
  unint64_t result = 0x536E6F6973736573;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7265755174786574;
      break;
    case 2:
      unint64_t result = 0x7551686365657073;
      break;
    case 3:
      unint64_t result = 0x74736575716572;
      break;
    case 4:
      unint64_t result = 0x616572436E616C70;
      break;
    case 5:
      unint64_t result = 0x72436E6F69746361;
      break;
    case 6:
      unint64_t result = 0x61436E6F69746361;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0x4373656972657571;
      break;
    case 9:
      unint64_t result = 0x656C626169726176;
      break;
    case 10:
      unint64_t result = 0x6578457370657473;
      break;
    case 11:
    case 12:
    case 13:
    case 17:
    case 31:
    case 47:
      unint64_t result = 0xD000000000000010;
      break;
    case 14:
      unint64_t result = 0x6C61636974697263;
      break;
    case 15:
      unint64_t result = 0x7543746E65696C63;
      break;
    case 16:
      unint64_t result = 0x616C50664F646E65;
      break;
    case 18:
      unint64_t result = 0x74616E696D726574;
      break;
    case 19:
      unint64_t result = 0xD000000000000015;
      break;
    case 20:
      unint64_t result = 0xD000000000000014;
      break;
    case 21:
      unint64_t result = 0x78456E6F69746361;
      break;
    case 22:
      unint64_t result = 0x4573656972657571;
      break;
    case 23:
      unint64_t result = 0xD000000000000017;
      break;
    case 24:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 25:
      unint64_t result = 0xD000000000000020;
      break;
    case 26:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 27:
      unint64_t result = 0xD000000000000015;
      break;
    case 28:
      unint64_t result = 0xD000000000000017;
      break;
    case 29:
      unint64_t result = 0xD000000000000011;
      break;
    case 30:
      unint64_t result = 0xD000000000000013;
      break;
    case 32:
      unint64_t result = 0x746552736C6F6F74;
      break;
    case 33:
      unint64_t result = 0xD000000000000011;
      break;
    case 34:
      unint64_t result = 0xD000000000000017;
      break;
    case 35:
      unint64_t result = 0xD000000000000012;
      break;
    case 36:
      unint64_t result = 0xD000000000000016;
      break;
    case 37:
      unint64_t result = 0xD000000000000018;
      break;
    case 38:
      unint64_t result = 0xD000000000000014;
      break;
    case 39:
      unint64_t result = 0xD000000000000014;
      break;
    case 40:
      unint64_t result = 0xD000000000000023;
      break;
    case 41:
      unint64_t result = 0x6F7365526C6F6F74;
      break;
    case 42:
      unint64_t result = 0x6F6465526F646E75;
      break;
    case 43:
      unint64_t result = 0xD000000000000015;
      break;
    case 44:
      unint64_t result = 0xD000000000000015;
      break;
    case 45:
      unint64_t result = 0xD000000000000014;
      break;
    case 46:
      unint64_t result = 0xD000000000000015;
      break;
    case 48:
      unint64_t result = 0xD00000000000001FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2539930CC(uint64_t a1)
{
  unint64_t v2 = sub_2539EB2C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993108(uint64_t a1)
{
  unint64_t v2 = sub_2539EB2C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253993144(uint64_t a1)
{
  unint64_t v2 = sub_2539EB310();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993180(uint64_t a1)
{
  unint64_t v2 = sub_2539EB310();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539931BC(uint64_t a1)
{
  unint64_t v2 = sub_2539EADB8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539931F8(uint64_t a1)
{
  unint64_t v2 = sub_2539EADB8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253993234(uint64_t a1)
{
  unint64_t v2 = sub_2539EACD4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993270(uint64_t a1)
{
  unint64_t v2 = sub_2539EACD4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539932AC(uint64_t a1)
{
  unint64_t v2 = sub_2539EAD20();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539932E8(uint64_t a1)
{
  unint64_t v2 = sub_2539EAD20();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253993324(uint64_t a1)
{
  unint64_t v2 = sub_2539EB278();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993360(uint64_t a1)
{
  unint64_t v2 = sub_2539EB278();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25399339C()
{
  return sub_253991738(*v0);
}

uint64_t sub_2539933A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253991600(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2539933CC(uint64_t a1)
{
  unint64_t v2 = sub_2539EAF80();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993408(uint64_t a1)
{
  unint64_t v2 = sub_2539EAF80();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253993444(uint64_t a1)
{
  unint64_t v2 = sub_2539EB0B0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993480(uint64_t a1)
{
  unint64_t v2 = sub_2539EB0B0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539934BC(uint64_t a1)
{
  unint64_t v2 = sub_2539EABA4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539934F8(uint64_t a1)
{
  unint64_t v2 = sub_2539EABA4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253993534(uint64_t a1)
{
  unint64_t v2 = sub_2539EA438();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993570(uint64_t a1)
{
  unint64_t v2 = sub_2539EA438();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_2539935AC()
{
  return sub_253992AB0(*v0);
}

uint64_t sub_2539935B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253991788(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2539935DC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_253992AA8();
  *a1 = result;
  return result;
}

uint64_t sub_253993604(uint64_t a1)
{
  unint64_t v2 = sub_2539EA224();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993640(uint64_t a1)
{
  unint64_t v2 = sub_2539EA224();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25399367C(uint64_t a1)
{
  unint64_t v2 = sub_2539EAA74();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539936B8(uint64_t a1)
{
  unint64_t v2 = sub_2539EAA74();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539936F4(uint64_t a1)
{
  unint64_t v2 = sub_2539EAB0C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993730(uint64_t a1)
{
  unint64_t v2 = sub_2539EAB0C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25399376C(uint64_t a1)
{
  unint64_t v2 = sub_2539EA8AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539937A8(uint64_t a1)
{
  unint64_t v2 = sub_2539EA8AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539937E4(uint64_t a1)
{
  unint64_t v2 = sub_2539EA2BC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993820(uint64_t a1)
{
  unint64_t v2 = sub_2539EA2BC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25399385C(uint64_t a1)
{
  unint64_t v2 = sub_2539EAFCC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993898(uint64_t a1)
{
  unint64_t v2 = sub_2539EAFCC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539938D4(uint64_t a1)
{
  unint64_t v2 = sub_2539EAF34();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993910(uint64_t a1)
{
  unint64_t v2 = sub_2539EAF34();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25399394C(uint64_t a1)
{
  unint64_t v2 = sub_2539EA77C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993988(uint64_t a1)
{
  unint64_t v2 = sub_2539EA77C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539939C4(uint64_t a1)
{
  unint64_t v2 = sub_2539EB0FC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993A00(uint64_t a1)
{
  unint64_t v2 = sub_2539EB0FC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253993A3C(uint64_t a1)
{
  unint64_t v2 = sub_2539EA5B4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993A78(uint64_t a1)
{
  unint64_t v2 = sub_2539EA5B4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253993AB4(uint64_t a1)
{
  unint64_t v2 = sub_2539EA600();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993AF0(uint64_t a1)
{
  unint64_t v2 = sub_2539EA600();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253993B2C(uint64_t a1)
{
  unint64_t v2 = sub_2539EA51C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993B68(uint64_t a1)
{
  unint64_t v2 = sub_2539EA51C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253993BA4(uint64_t a1)
{
  unint64_t v2 = sub_2539EA64C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993BE0(uint64_t a1)
{
  unint64_t v2 = sub_2539EA64C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253993C1C(uint64_t a1)
{
  unint64_t v2 = sub_2539EA698();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993C58(uint64_t a1)
{
  unint64_t v2 = sub_2539EA698();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253993C94(uint64_t a1)
{
  unint64_t v2 = sub_2539EB22C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993CD0(uint64_t a1)
{
  unint64_t v2 = sub_2539EB22C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253993D0C(uint64_t a1)
{
  unint64_t v2 = sub_2539EAD6C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993D48(uint64_t a1)
{
  unint64_t v2 = sub_2539EAD6C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253993D84(uint64_t a1)
{
  unint64_t v2 = sub_2539EA270();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993DC0(uint64_t a1)
{
  unint64_t v2 = sub_2539EA270();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253993DFC(uint64_t a1)
{
  unint64_t v2 = sub_2539EA354();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993E38(uint64_t a1)
{
  unint64_t v2 = sub_2539EA354();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253993E74(uint64_t a1)
{
  unint64_t v2 = sub_2539EB018();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993EB0(uint64_t a1)
{
  unint64_t v2 = sub_2539EB018();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253993EEC(uint64_t a1)
{
  unint64_t v2 = sub_2539EB3F4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993F28(uint64_t a1)
{
  unint64_t v2 = sub_2539EB3F4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253993F64(uint64_t a1)
{
  unint64_t v2 = sub_2539EAC3C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253993FA0(uint64_t a1)
{
  unint64_t v2 = sub_2539EAC3C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253993FDC(uint64_t a1)
{
  unint64_t v2 = sub_2539EA944();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253994018(uint64_t a1)
{
  unint64_t v2 = sub_2539EA944();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253994054(uint64_t a1)
{
  unint64_t v2 = sub_2539EA9DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253994090(uint64_t a1)
{
  unint64_t v2 = sub_2539EA9DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539940CC(uint64_t a1)
{
  unint64_t v2 = sub_2539EB524();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253994108(uint64_t a1)
{
  unint64_t v2 = sub_2539EB524();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253994144(uint64_t a1)
{
  unint64_t v2 = sub_2539EAEE8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253994180(uint64_t a1)
{
  unint64_t v2 = sub_2539EAEE8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539941BC(uint64_t a1)
{
  unint64_t v2 = sub_2539EA6E4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539941F8(uint64_t a1)
{
  unint64_t v2 = sub_2539EA6E4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253994234(uint64_t a1)
{
  unint64_t v2 = sub_2539EB148();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253994270(uint64_t a1)
{
  unint64_t v2 = sub_2539EB148();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539942AC(uint64_t a1)
{
  unint64_t v2 = sub_2539EAE50();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539942E8(uint64_t a1)
{
  unint64_t v2 = sub_2539EAE50();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253994324(uint64_t a1)
{
  unint64_t v2 = sub_2539EAE04();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253994360(uint64_t a1)
{
  unint64_t v2 = sub_2539EAE04();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25399439C(uint64_t a1)
{
  unint64_t v2 = sub_2539EA730();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539943D8(uint64_t a1)
{
  unint64_t v2 = sub_2539EA730();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253994414(uint64_t a1)
{
  unint64_t v2 = sub_2539EAE9C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253994450(uint64_t a1)
{
  unint64_t v2 = sub_2539EAE9C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25399448C(uint64_t a1)
{
  unint64_t v2 = sub_2539EA4D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539944C8(uint64_t a1)
{
  unint64_t v2 = sub_2539EA4D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253994504(uint64_t a1)
{
  unint64_t v2 = sub_2539EA814();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253994540(uint64_t a1)
{
  unint64_t v2 = sub_2539EA814();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25399457C(uint64_t a1)
{
  unint64_t v2 = sub_2539EA3EC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539945B8(uint64_t a1)
{
  unint64_t v2 = sub_2539EA3EC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539945F4(uint64_t a1)
{
  unint64_t v2 = sub_2539EA3A0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253994630(uint64_t a1)
{
  unint64_t v2 = sub_2539EA3A0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25399466C(uint64_t a1)
{
  unint64_t v2 = sub_2539EA484();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539946A8(uint64_t a1)
{
  unint64_t v2 = sub_2539EA484();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539946E4(uint64_t a1)
{
  unint64_t v2 = sub_2539EB1E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253994720(uint64_t a1)
{
  unint64_t v2 = sub_2539EB1E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Session.Event.Payload.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_253547278();
  a19 = v24;
  a20 = v25;
  unint64_t v413 = v22;
  uint64_t v414 = v21;
  uint64_t v27 = v26;
  unint64_t v411 = sub_253462A5C(&qword_26B241280);
  sub_253465998();
  v392[45] = v28;
  MEMORY[0x270FA5388](v29);
  uint64_t v410 = (char *)v392 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_253483660();
  v408[3] = type metadata accessor for QueryDecorationPrePlannerResult(v31);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v32);
  sub_2534D9264(v33, v392[0]);
  v408[2] = sub_253462A5C(&qword_26B24A4A0);
  sub_253465998();
  v392[44] = v34;
  MEMORY[0x270FA5388](v35);
  v408[0] = (char *)v392 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v408[1] = sub_253462A5C(&qword_26B24A510);
  sub_253465998();
  v392[43] = v37;
  MEMORY[0x270FA5388](v38);
  v407[3] = (char *)v392 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_253483660();
  v407[0] = type metadata accessor for QueryDecorationResult(v40);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v41);
  sub_2534D8F5C((uint64_t)v392 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  v407[1] = sub_253462A5C(&qword_26B24A4F8);
  sub_253465998();
  v392[42] = v43;
  MEMORY[0x270FA5388](v44);
  uint64_t v46 = sub_2534F8208((uint64_t)v392 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  v406[0] = type metadata accessor for TypeConversionResult(v46);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v47);
  sub_2534D8F5C((uint64_t)v392 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  v406[1] = sub_253462A5C(&qword_26B24A520);
  sub_253465998();
  v392[41] = v49;
  MEMORY[0x270FA5388](v50);
  uint64_t v52 = sub_2534F8208((uint64_t)v392 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  v405[0] = type metadata accessor for TypeConversionRequest(v52);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v53);
  sub_2534D8F5C((uint64_t)v392 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  v405[1] = sub_253462A5C(&qword_26B24A500);
  sub_253465998();
  v392[40] = v55;
  MEMORY[0x270FA5388](v56);
  uint64_t v58 = sub_2534F8208((uint64_t)v392 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  v404[23] = type metadata accessor for ClientUndoRedoRequest(v58);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v59);
  sub_2534D8F5C((uint64_t)v392 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0));
  v404[24] = sub_253462A5C(&qword_26B24A488);
  sub_253465998();
  v392[39] = v61;
  MEMORY[0x270FA5388](v62);
  uint64_t v64 = sub_2534F8208((uint64_t)v392 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0));
  v404[19] = type metadata accessor for UndoRedoRequest(v64);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v65);
  sub_2534D8F5C((uint64_t)v392 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0));
  v404[20] = sub_253462A5C(&qword_26B24A470);
  sub_253465998();
  v392[38] = v67;
  MEMORY[0x270FA5388](v68);
  uint64_t v70 = sub_2534F8208((uint64_t)v392 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0));
  v404[16] = type metadata accessor for ToolResolution(v70);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v71);
  sub_2534D8F5C((uint64_t)v392 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0));
  v404[15] = sub_253462A5C(&qword_26B24A560);
  sub_253465998();
  v392[37] = v73;
  MEMORY[0x270FA5388](v74);
  sub_2534D8F5C((uint64_t)v392 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0));
  v404[13] = sub_253462A5C(&qword_26B24A4E0);
  sub_253465998();
  v392[36] = v76;
  MEMORY[0x270FA5388](v77);
  uint64_t v79 = sub_2534F8208((uint64_t)v392 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0));
  v404[9] = type metadata accessor for ExternalAgentOutcome(v79);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v80);
  sub_2534D8F5C((uint64_t)v392 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0));
  v404[10] = sub_253462A5C(&qword_26B24A4E8);
  sub_253465998();
  v392[35] = v82;
  MEMORY[0x270FA5388](v83);
  uint64_t v85 = sub_2534F8208((uint64_t)v392 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0));
  v404[5] = type metadata accessor for ExternalAgentRequest(v85);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v86);
  sub_2534D8F5C((uint64_t)v392 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0));
  v404[6] = sub_253462A5C(&qword_26B24A548);
  sub_253465998();
  v392[34] = v88;
  MEMORY[0x270FA5388](v89);
  uint64_t v91 = sub_2534F8208((uint64_t)v392 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0));
  v404[1] = type metadata accessor for ExternalAgentSpeechQuery(v91);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v92);
  sub_2534D8F5C((uint64_t)v392 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0));
  v404[2] = sub_253462A5C(&qword_26B24A528);
  sub_253465998();
  v392[33] = v94;
  MEMORY[0x270FA5388](v95);
  uint64_t v97 = sub_2534F8208((uint64_t)v392 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0));
  v403[6] = type metadata accessor for ExternalAgentTextQuery(v97);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v98);
  sub_2534D8F5C((uint64_t)v392 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0));
  v403[7] = sub_253462A5C(&qword_26B24A4C8);
  sub_253465998();
  v392[32] = v100;
  MEMORY[0x270FA5388](v101);
  uint64_t v103 = sub_2534F8208((uint64_t)v392 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0));
  v403[2] = type metadata accessor for StatementResult(v103);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v104);
  sub_2534D8F5C((uint64_t)v392 - ((v105 + 15) & 0xFFFFFFFFFFFFFFF0));
  v403[3] = sub_253462A5C(&qword_26B24A540);
  sub_253465998();
  v392[31] = v106;
  MEMORY[0x270FA5388](v107);
  sub_2534F8208((uint64_t)v392 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0));
  v403[1] = sub_253B06720();
  sub_253465998();
  v403[0] = v109;
  MEMORY[0x270FA5388](v110);
  sub_2534D8F5C((uint64_t)v392 - ((v111 + 15) & 0xFFFFFFFFFFFFFFF0));
  v402[1] = sub_253462A5C(&qword_26B24A4B8);
  sub_253465998();
  v392[30] = v112;
  MEMORY[0x270FA5388](v113);
  sub_2534D8F5C((uint64_t)v392 - ((v114 + 15) & 0xFFFFFFFFFFFFFFF0));
  v402[0] = sub_253462A5C(&qword_26B24A478);
  sub_253465998();
  v392[29] = v115;
  MEMORY[0x270FA5388](v116);
  sub_2534D8F5C((uint64_t)v392 - ((v117 + 15) & 0xFFFFFFFFFFFFFFF0));
  v401[1] = sub_253462A5C(&qword_26B24A498);
  sub_253465998();
  v392[28] = v118;
  MEMORY[0x270FA5388](v119);
  sub_2534D8F5C((uint64_t)v392 - ((v120 + 15) & 0xFFFFFFFFFFFFFFF0));
  v400[19] = sub_253462A5C(&qword_26B24A4D8);
  sub_253465998();
  v392[27] = v121;
  MEMORY[0x270FA5388](v122);
  sub_2534D8F5C((uint64_t)v392 - ((v123 + 15) & 0xFFFFFFFFFFFFFFF0));
  v400[17] = sub_253462A5C(&qword_26B24A4C0);
  sub_253465998();
  v392[26] = v124;
  MEMORY[0x270FA5388](v125);
  sub_2534D8F5C((uint64_t)v392 - ((v126 + 15) & 0xFFFFFFFFFFFFFFF0));
  v400[15] = sub_253462A5C(&qword_26B24A538);
  sub_253465998();
  v392[25] = v127;
  MEMORY[0x270FA5388](v128);
  sub_2534D8F5C((uint64_t)v392 - ((v129 + 15) & 0xFFFFFFFFFFFFFFF0));
  v400[13] = sub_253462A5C(&qword_26B24A508);
  sub_253465998();
  v392[24] = v130;
  MEMORY[0x270FA5388](v131);
  sub_2534D8F5C((uint64_t)v392 - ((v132 + 15) & 0xFFFFFFFFFFFFFFF0));
  v400[11] = sub_253462A5C(&qword_26B24A3E0);
  sub_253465998();
  v392[23] = v133;
  MEMORY[0x270FA5388](v134);
  sub_2534D8F5C((uint64_t)v392 - ((v135 + 15) & 0xFFFFFFFFFFFFFFF0));
  v400[9] = sub_253462A5C(&qword_26B24A558);
  sub_253465998();
  v392[22] = v136;
  MEMORY[0x270FA5388](v137);
  sub_25346CB04();
  sub_2534D8F5C(v138);
  v400[8] = sub_253462A5C(&qword_26B24A550);
  sub_253465998();
  v392[21] = v139;
  MEMORY[0x270FA5388](v140);
  sub_25346CB04();
  uint64_t v142 = sub_2534F8208(v141);
  v400[3] = type metadata accessor for ActionResolverRequest(v142);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v143);
  sub_2534D8F5C((uint64_t)v392 - ((v144 + 15) & 0xFFFFFFFFFFFFFFF0));
  v400[4] = sub_253462A5C(&qword_26B24A530);
  sub_253465998();
  v392[20] = v145;
  MEMORY[0x270FA5388](v146);
  sub_25346CB04();
  sub_2534F8208(v147);
  v400[2] = sub_253B05CF0();
  sub_253465998();
  v400[1] = v148;
  MEMORY[0x270FA5388](v149);
  sub_25346CB04();
  sub_2534D8F5C(v150);
  v399[11] = sub_253462A5C(&qword_26B24A480);
  sub_253465998();
  v392[19] = v151;
  MEMORY[0x270FA5388](v152);
  sub_25346CB04();
  uint64_t v154 = sub_2534F8208(v153);
  v399[7] = type metadata accessor for QueryStepResults(v154);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v155);
  sub_25346CB04();
  sub_2534D8F5C(v156);
  v399[8] = sub_253462A5C(&qword_26B24A460);
  sub_253465998();
  v392[18] = v157;
  MEMORY[0x270FA5388](v158);
  sub_25346CB04();
  uint64_t v160 = sub_2534F8208(v159);
  v399[3] = type metadata accessor for ActionStepResult(v160);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v161);
  sub_25346CB04();
  sub_2534D8F5C(v162);
  v399[4] = sub_253462A5C(&qword_26B24A4F0);
  sub_253465998();
  v392[17] = v163;
  MEMORY[0x270FA5388](v164);
  sub_25346CB04();
  uint64_t v166 = sub_2534F8208(v165);
  v398[3] = type metadata accessor for RequestContent.SystemPromptResolution(v166);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v167);
  sub_25346CB04();
  sub_2534D8F5C(v168);
  v399[0] = sub_253462A5C(&qword_26B24A518);
  sub_253465998();
  v392[16] = v169;
  MEMORY[0x270FA5388](v170);
  sub_25346CB04();
  sub_2534F8208(v171);
  v398[2] = sub_253B059F0();
  sub_253465998();
  v398[1] = v172;
  MEMORY[0x270FA5388](v173);
  sub_25346CB04();
  sub_2534D8F5C(v174);
  v397[0] = sub_253462A5C(&qword_26B24A410);
  sub_253465998();
  v396[3] = v175;
  MEMORY[0x270FA5388](v176);
  sub_25346CB04();
  sub_2534D8F5C(v177);
  v396[1] = sub_253462A5C(&qword_26B24A3F0);
  sub_253465998();
  v396[0] = v178;
  MEMORY[0x270FA5388](v179);
  sub_25346CB04();
  sub_2534D8F5C(v180);
  v395[2] = sub_253462A5C(&qword_26B24A408);
  sub_253465998();
  v395[1] = v181;
  MEMORY[0x270FA5388](v182);
  sub_25346CB04();
  sub_2534D8F5C(v183);
  v397[3] = sub_253462A5C(&qword_26B24A430);
  sub_253465998();
  v392[15] = v184;
  MEMORY[0x270FA5388](v185);
  sub_25346CB04();
  sub_2534D8F5C(v186);
  v395[0] = sub_253462A5C(&qword_26B24A448);
  sub_253465998();
  v392[14] = v187;
  MEMORY[0x270FA5388](v188);
  sub_25346CB04();
  sub_2534F8208(v189);
  v394[1] = type metadata accessor for SessionError();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v190);
  sub_25346CB04();
  sub_2534D8F5C(v191);
  v394[2] = sub_253462A5C(&qword_26B24A4B0);
  sub_253465998();
  v392[13] = v192;
  MEMORY[0x270FA5388](v193);
  sub_25346CB04();
  sub_2534D8F5C(v194);
  v393[5] = sub_253462A5C(&qword_26B24A490);
  sub_253465998();
  v392[12] = v195;
  MEMORY[0x270FA5388](v196);
  sub_25346CB04();
  sub_2534D8F5C(v197);
  v393[2] = sub_253462A5C(&qword_26B24A4A8);
  sub_253465998();
  v393[1] = v198;
  MEMORY[0x270FA5388](v199);
  sub_25346CB04();
  sub_2534D8F5C(v200);
  v393[3] = sub_253462A5C(&qword_26B24A450);
  sub_253465998();
  v392[11] = v201;
  MEMORY[0x270FA5388](v202);
  sub_25346CB04();
  sub_2534D8F5C(v203);
  v393[0] = sub_253462A5C(&qword_26B24A438);
  sub_253465998();
  v392[10] = v204;
  MEMORY[0x270FA5388](v205);
  sub_25346CB04();
  uint64_t v207 = sub_2534F8208(v206);
  v392[74] = type metadata accessor for VariableStep(v207);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v208);
  sub_25346CB04();
  sub_2534D8F5C(v209);
  v392[75] = sub_253462A5C(&qword_26B24A468);
  sub_253465998();
  v392[9] = v210;
  MEMORY[0x270FA5388](v211);
  sub_25346CB04();
  uint64_t v213 = sub_2534F8208(v212);
  v392[70] = type metadata accessor for QueryStep(v213);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v214);
  sub_25346CB04();
  sub_2534D8F5C(v215);
  v392[71] = sub_253462A5C(&qword_26B24A4D0);
  sub_253465998();
  v392[8] = v216;
  MEMORY[0x270FA5388](v217);
  sub_25346CB04();
  uint64_t v219 = sub_2534F8208(v218);
  v392[66] = type metadata accessor for ClientAction(v219);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v220);
  sub_25346CB04();
  sub_2534D8F5C(v221);
  v392[67] = sub_253462A5C(&qword_26B24A458);
  sub_253465998();
  v392[7] = v222;
  MEMORY[0x270FA5388](v223);
  sub_25346CB04();
  uint64_t v225 = sub_2534F8208(v224);
  v392[62] = type metadata accessor for ActionCancellation(v225);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v226);
  sub_25346CB04();
  sub_2534D8F5C(v227);
  v392[63] = sub_253462A5C(&qword_26B24A440);
  sub_253465998();
  v392[6] = v228;
  MEMORY[0x270FA5388](v229);
  sub_25346CB04();
  uint64_t v231 = sub_2534F8208(v230);
  v392[58] = type metadata accessor for Action(v231);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v232);
  sub_25346CB04();
  sub_2534D8F5C(v233);
  v392[59] = sub_253462A5C(&qword_26B24A420);
  sub_253465998();
  v392[5] = v234;
  MEMORY[0x270FA5388](v235);
  sub_25346CB04();
  sub_2534D8F5C(v236);
  v392[56] = sub_253462A5C(&qword_26B24A400);
  sub_253465998();
  v392[4] = v237;
  MEMORY[0x270FA5388](v238);
  sub_25346CB04();
  uint64_t v240 = sub_2534F8208(v239);
  v392[53] = type metadata accessor for Request(v240);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v241);
  sub_25346CB04();
  sub_2534D8F5C(v242);
  v392[52] = sub_253462A5C(&qword_26B24A428);
  sub_253465998();
  v392[3] = v243;
  MEMORY[0x270FA5388](v244);
  sub_25346CB04();
  sub_2534D8F5C(v245);
  v392[50] = sub_253462A5C(&qword_26B24A418);
  sub_253465998();
  v392[2] = v246;
  MEMORY[0x270FA5388](v247);
  sub_25346CB04();
  uint64_t v249 = sub_2534F8208(v248);
  v392[46] = type metadata accessor for TextQuery(v249);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v250);
  sub_25346CB04();
  sub_2534D8F5C(v251);
  v392[47] = sub_253462A5C(&qword_26B24A3E8);
  sub_253465998();
  v392[1] = v252;
  MEMORY[0x270FA5388](v253);
  uint64_t v254 = sub_25348360C();
  type metadata accessor for SessionStart(v254);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v255);
  uint64_t v256 = sub_2534D8CAC();
  type metadata accessor for Session.Event.Payload(v256);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v257);
  sub_25347FAAC();
  uint64_t v416 = sub_253462A5C(&qword_26B24A3F8);
  sub_253465998();
  uint64_t v412 = v258;
  MEMORY[0x270FA5388](v259);
  sub_2534835B0();
  sub_253A3BCFC(v27);
  sub_2539EA224();
  uint64_t v415 = v20;
  sub_253B0A680();
  sub_2539DF660(v414, v23);
  sub_2534D96CC();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_253A3BA18(v23, (uint64_t)v393);
      LOBYTE(v417) = 1;
      sub_2539EB4D8();
      sub_253A3B6FC();
      sub_2539E6F90((uint64_t)&unk_269CE59A8);
      sub_2534F84A8();
      sub_2534F84D0();
      sub_253A3B82C();
      uint64_t v265 = sub_253A3B62C();
      v266(v265);
      goto LABEL_57;
    case 2u:
      uint64_t v267 = *(void *)v23;
      char v268 = *(unsigned char *)(v23 + 8);
      unint64_t v270 = *(void *)(v23 + 16);
      uint64_t v269 = *(void *)(v23 + 24);
      LOBYTE(v417) = 2;
      sub_2539EB440();
      sub_253A3C04C();
      uint64_t v417 = v267;
      LOBYTE(v418) = v268;
      unint64_t v419 = v270;
      uint64_t v420 = v269;
      sub_2539EB48C();
      sub_2534F84D0();
      sub_253B0A440();
      sub_2534659CC();
      v271();
      uint64_t v272 = sub_253578D20();
      goto LABEL_46;
    case 3u:
      sub_253A3BA18(v23, (uint64_t)v394);
      LOBYTE(v417) = 3;
      sub_2539EB3F4();
      sub_253A3B6FC();
      sub_2539E6F90((uint64_t)&unk_269CE5988);
      sub_2534F84A8();
      sub_2534F84D0();
      sub_253A3B82C();
      uint64_t v275 = sub_253A3B62C();
      v276(v275);
      goto LABEL_57;
    case 4u:
      uint64_t v277 = *(void *)(v23 + 8);
      uint64_t v414 = *(void *)v23;
      uint64_t v278 = *(void *)(v23 + 24);
      unint64_t v411 = *(void *)(v23 + 16);
      uint64_t v279 = *(void *)(v23 + 32);
      uint64_t v280 = *(void *)(v23 + 40);
      uint64_t v281 = *(void *)(v23 + 48);
      char v282 = *(unsigned char *)(v23 + 56);
      LOBYTE(v417) = 4;
      sub_2539EB35C();
      sub_253B0A3A0();
      uint64_t v417 = v414;
      unint64_t v418 = v277;
      uint64_t v414 = v277;
      unint64_t v419 = v411;
      uint64_t v420 = v278;
      uint64_t v421 = v279;
      uint64_t v422 = v280;
      uint64_t v423 = v281;
      char v424 = v282;
      sub_2539EB3A8();
      sub_253B0A440();
      sub_2534659CC();
      v283();
      sub_2534F83C0();
      sub_2534659CC();
      v284();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_47;
    case 5u:
      sub_253A3BA18(v23, (uint64_t)v395);
      LOBYTE(v417) = 5;
      sub_2539EB310();
      sub_253A3B6FC();
      sub_2539E6F90((uint64_t)&qword_269CE4F18);
      sub_2534F84A8();
      sub_2534F84D0();
      sub_253A3B82C();
      uint64_t v285 = sub_253A3B62C();
      v286(v285);
      goto LABEL_57;
    case 6u:
      sub_253A3BA18(v23, (uint64_t)v396);
      LOBYTE(v417) = 6;
      sub_2539EB2C4();
      sub_253A3B6FC();
      sub_2539E6F90((uint64_t)&unk_269CE5960);
      sub_2534F84A8();
      sub_2534F84D0();
      sub_253A3B82C();
      uint64_t v287 = sub_253A3B62C();
      v288(v287);
      goto LABEL_57;
    case 7u:
      sub_253A3BA18(v23, (uint64_t)v397);
      LOBYTE(v417) = 7;
      sub_2539EB278();
      sub_253A3B6FC();
      sub_2539E6F90((uint64_t)&unk_269CE5950);
      sub_2534F84A8();
      sub_2534F84D0();
      sub_253A3B82C();
      uint64_t v289 = sub_253A3B62C();
      v290(v289);
      goto LABEL_57;
    case 8u:
      sub_253A3BA18(v23, (uint64_t)v398);
      LOBYTE(v417) = 8;
      sub_2539EB22C();
      sub_253A3B6FC();
      sub_2539E6F90((uint64_t)&unk_269CE5940);
      sub_2534F84A8();
      sub_2534F84D0();
      sub_253A3B82C();
      uint64_t v291 = sub_253A3B62C();
      v292(v291);
      goto LABEL_57;
    case 9u:
      sub_253A3BA18(v23, (uint64_t)v399);
      LOBYTE(v417) = 9;
      sub_2539EB1E0();
      sub_253A3B6FC();
      sub_2539E6F90((uint64_t)&unk_269CE5930);
      sub_2534F84A8();
      sub_2534F84D0();
      sub_253A3B82C();
      uint64_t v293 = sub_253A3B62C();
      v294(v293);
      goto LABEL_57;
    case 0xAu:
      uint64_t v295 = *(void *)v23;
      LOBYTE(v417) = 10;
      sub_2539EB148();
      sub_25351C318();
      uint64_t v417 = v295;
      sub_2539EB194();
      sub_253A3D5A8();
      goto LABEL_35;
    case 0xBu:
      LOBYTE(v417) = 12;
      sub_2539EB0B0();
      sub_253A3BD18();
      sub_25351C5C0();
      sub_253B0A3F0();
      swift_bridgeObjectRelease();
      sub_2534659CC();
      v296();
      uint64_t v263 = sub_2534D9A44();
      goto LABEL_59;
    case 0xCu:
      uint64_t v298 = *(void *)v23;
      uint64_t v297 = *(void *)(v23 + 8);
      unint64_t v299 = *(void *)(v23 + 16);
      uint64_t v300 = *(void *)(v23 + 24);
      uint64_t v302 = *(void *)(v23 + 32);
      uint64_t v301 = *(void *)(v23 + 40);
      LOBYTE(v417) = 13;
      sub_2539EB018();
      sub_253A3E39C();
      uint64_t v417 = v298;
      unint64_t v418 = v297;
      uint64_t v414 = v297;
      unint64_t v419 = v299;
      uint64_t v420 = v300;
      uint64_t v421 = v302;
      uint64_t v422 = v301;
      sub_2539EB064();
      sub_253B0A440();
      sub_2534659CC();
      v303();
      sub_2534659CC();
      v304();
      goto LABEL_33;
    case 0xDu:
      sub_253A3BA18(v23, (uint64_t)v400);
      LOBYTE(v417) = 14;
      sub_2539EAFCC();
      sub_253A3B6FC();
      sub_2539E6F90((uint64_t)&qword_269CDB938);
      sub_2534F84A8();
      sub_2534F84D0();
      sub_253A3B82C();
      uint64_t v305 = sub_253A3B62C();
      v306(v305);
      goto LABEL_57;
    case 0xEu:
      uint64_t v307 = *(void *)v23;
      unint64_t v308 = *(void *)(v23 + 8);
      uint64_t v414 = *(void *)(v23 + 16);
      unint64_t v309 = *(void *)(v23 + 24);
      uint64_t v409 = *(void *)(v23 + 32);
      uint64_t v410 = *(char **)(v23 + 40);
      unint64_t v411 = v309;
      LOBYTE(v417) = 15;
      sub_2539EAF80();
      sub_253962838();
      sub_253A3C2A8();
      uint64_t v417 = v307;
      unint64_t v418 = v308;
      char v425 = 0;
      sub_253487D38();
      sub_2534F84D0();
      sub_253A3B938();
      if (v22)
      {
        sub_253487D84(v414, v411);
        swift_bridgeObjectRelease();
        uint64_t v310 = sub_253A3B62C();
        v311(v310);
        sub_253A3E3FC();
        sub_2534659CC();
        v312();
        sub_253487D84(v307, v308);
      }
      else
      {
        unint64_t v413 = v308;
        uint64_t v417 = v414;
        unint64_t v418 = v411;
        char v425 = 1;
        sub_253B0A440();
        LOBYTE(v417) = 2;
        sub_253B0A3F0();
        uint64_t v386 = sub_2534D9840();
        sub_253487D84(v386, v387);
        uint64_t v388 = sub_2536D3880();
        sub_253487D84(v388, v389);
        swift_bridgeObjectRelease();
        uint64_t v390 = sub_253A3B62C();
        v391(v390);
        uint64_t v263 = sub_253A3DB50();
LABEL_59:
        v264(v263);
      }
LABEL_60:
      sub_2534F856C();
      sub_25354725C();
      return;
    case 0xFu:
      sub_253A3CF28();
      sub_2536D5500();
      sub_25347FA84();
      v313();
      LOBYTE(v417) = 19;
      sub_2539EAE50();
      sub_253A3B788();
      sub_2539E6F90((uint64_t)&unk_269CE58D0);
      sub_253A3E0D8();
      sub_253A3CC54();
      goto LABEL_38;
    case 0x10u:
      sub_253A3BA18(v23, (uint64_t)v401);
      LOBYTE(v417) = 20;
      sub_2539EAE04();
      sub_253A3B6FC();
      sub_2539E6F90((uint64_t)&unk_269CE58C0);
      sub_2534F84A8();
      sub_2534F84D0();
      sub_253A3B82C();
      uint64_t v314 = sub_253A3B62C();
      v315(v314);
      goto LABEL_57;
    case 0x11u:
      sub_253A3BA18(v23, (uint64_t)v402);
      LOBYTE(v417) = 21;
      sub_2539EADB8();
      sub_253A3B6FC();
      sub_2539E6F90((uint64_t)&unk_269CE58B0);
      sub_2534F84A8();
      sub_2534F84D0();
      sub_253A3B82C();
      uint64_t v316 = sub_253A3B62C();
      v317(v316);
      goto LABEL_57;
    case 0x12u:
      sub_253A3BA18(v23, (uint64_t)v403);
      LOBYTE(v417) = 22;
      sub_2539EAD6C();
      sub_253A3B6FC();
      sub_2539E6F90((uint64_t)&unk_269CE58A0);
      sub_2534F84A8();
      sub_2534F84D0();
      sub_253A3B82C();
      uint64_t v318 = sub_253A3B62C();
      v319(v318);
      goto LABEL_57;
    case 0x13u:
      sub_253A3CF28();
      sub_2536D5500();
      sub_25347FA84();
      v320();
      LOBYTE(v417) = 23;
      sub_2539EAD20();
      sub_253A3B788();
      sub_2539E6F90((uint64_t)&unk_269CE5890);
      sub_253A3E0D8();
      sub_253A3CC54();
      goto LABEL_38;
    case 0x14u:
      sub_253A3BA18(v23, (uint64_t)v404);
      LOBYTE(v417) = 24;
      sub_2539EACD4();
      sub_253A3B6FC();
      sub_2539E6F90((uint64_t)&unk_269CE5880);
      sub_2534F84A8();
      sub_2534F84D0();
      sub_253A3B82C();
      uint64_t v321 = sub_253A3B62C();
      v322(v321);
      goto LABEL_57;
    case 0x15u:
      uint64_t v323 = *(void *)v23;
      LOBYTE(v417) = 25;
      sub_2539EAC3C();
      sub_25351C318();
      uint64_t v417 = v323;
      sub_2539EAC88();
      sub_253A3D5A8();
      goto LABEL_35;
    case 0x16u:
      uint64_t v325 = *(void *)v23;
      unint64_t v324 = *(void *)(v23 + 8);
      unint64_t v326 = *(void *)(v23 + 16);
      LOBYTE(v417) = 26;
      sub_2539EABA4();
      uint64_t v327 = v416;
      sub_253A3BFC0();
      uint64_t v417 = v325;
      unint64_t v418 = v324;
      unint64_t v419 = v326;
      sub_2539EABF0();
      sub_253A3F360();
      goto LABEL_45;
    case 0x17u:
      uint64_t v329 = *(void *)v23;
      unint64_t v328 = *(void *)(v23 + 8);
      LOBYTE(v417) = 27;
      sub_2539EAB0C();
      sub_253A3BD18();
      uint64_t v417 = v329;
      unint64_t v418 = v328;
      sub_2539EAB58();
      sub_253A3D53C();
      goto LABEL_30;
    case 0x18u:
      uint64_t v331 = *(void *)v23;
      unint64_t v330 = *(void *)(v23 + 8);
      LOBYTE(v417) = 28;
      sub_2539EAA74();
      sub_253A3BD18();
      uint64_t v417 = v331;
      unint64_t v418 = v330;
      sub_2539EAAC0();
      sub_253A3D53C();
      goto LABEL_30;
    case 0x19u:
      LOBYTE(v417) = 29;
      sub_2539EA9DC();
      sub_253A3B6FC();
      sub_2539EAA28();
      sub_2534F84D0();
      sub_253A3B938();
      goto LABEL_55;
    case 0x1Au:
      uint64_t v333 = *(void *)v23;
      unint64_t v332 = *(void *)(v23 + 8);
      LOBYTE(v417) = 30;
      sub_2539EA944();
      sub_253A3BD18();
      uint64_t v417 = v333;
      unint64_t v418 = v332;
      sub_2539EA990();
      sub_253A3D53C();
LABEL_30:
      sub_2534659CC();
      v334();
      uint64_t v335 = sub_2534D9A44();
      goto LABEL_36;
    case 0x1Bu:
      uint64_t v337 = *(void *)v23;
      unint64_t v338 = *(void *)(v23 + 8);
      LOBYTE(v417) = 31;
      sub_2539EA8AC();
      sub_253578C34();
      sub_253A3BD18();
      uint64_t v417 = v337;
      unint64_t v418 = v338;
      sub_2539EA8F8();
      sub_253B0A440();
      sub_2534659CC();
      v339();
      uint64_t v272 = sub_2534D9A44();
      goto LABEL_46;
    case 0x1Cu:
      uint64_t v341 = *(void *)v23;
      uint64_t v340 = *(void *)(v23 + 8);
      unint64_t v342 = *(void *)(v23 + 16);
      uint64_t v343 = *(void *)(v23 + 24);
      int v344 = *(_DWORD *)(v23 + 32);
      uint64_t v345 = *(void *)(v23 + 40);
      uint64_t v346 = *(void *)(v23 + 48);
      LOBYTE(v417) = 32;
      sub_2539EA814();
      sub_253A3E39C();
      uint64_t v417 = v341;
      unint64_t v418 = v340;
      uint64_t v414 = v340;
      unint64_t v419 = v342;
      uint64_t v420 = v343;
      LODWORD(v421) = v344;
      uint64_t v422 = v345;
      uint64_t v423 = v346;
      sub_2539EA860();
      sub_253B0A440();
      sub_2534659CC();
      v347();
      sub_2534659CC();
      v348();
      swift_bridgeObjectRelease();
LABEL_33:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_47;
    case 0x1Du:
      uint64_t v349 = *(void *)v23;
      LOBYTE(v417) = 33;
      sub_2539EA77C();
      sub_25351C318();
      uint64_t v417 = v349;
      sub_2539EA7C8();
      sub_253A3D5A8();
LABEL_35:
      sub_2534659CC();
      v350();
      uint64_t v335 = sub_2534D9B10();
LABEL_36:
      v336(v335);
      goto LABEL_47;
    case 0x1Eu:
      sub_253A3CF28();
      sub_2536D5500();
      sub_25347FA84();
      v351();
      LOBYTE(v417) = 34;
      sub_2539EA730();
      sub_253A3B788();
      sub_2539E6F90((uint64_t)&qword_269CDBBA8);
      sub_253A3E0D8();
      sub_253A3CC54();
LABEL_38:
      sub_2534659CC();
      v352();
      sub_2534DA4BC();
      v353();
      goto LABEL_58;
    case 0x1Fu:
      sub_253A3BA18(v23, (uint64_t)v405);
      LOBYTE(v417) = 35;
      sub_2539EA6E4();
      sub_253A3B6FC();
      sub_2539E6F90((uint64_t)&qword_269CE4F20);
      sub_2534F84A8();
      sub_2534F84D0();
      sub_253A3B82C();
      uint64_t v354 = sub_253A3B62C();
      v355(v354);
      goto LABEL_57;
    case 0x20u:
      sub_253A3BA18(v23, (uint64_t)v406);
      LOBYTE(v417) = 36;
      sub_2539EA698();
      sub_253A3B6FC();
      sub_2539E6F90((uint64_t)&unk_269CE57D0);
      sub_2534F84A8();
      sub_2534F84D0();
      sub_253A3B82C();
      uint64_t v356 = sub_253A3B62C();
      v357(v356);
      goto LABEL_57;
    case 0x21u:
      sub_253A3BA18(v23, (uint64_t)v407);
      LOBYTE(v417) = 37;
      sub_2539EA64C();
      sub_253A3B6FC();
      sub_2539E6F90((uint64_t)&unk_269CE57C0);
      sub_2534F84A8();
      sub_2534F84D0();
      sub_253A3B82C();
      uint64_t v358 = sub_253A3B62C();
      v359(v358);
      goto LABEL_57;
    case 0x22u:
      sub_253A3BA18(v23, (uint64_t)v408);
      LOBYTE(v417) = 38;
      sub_2539EA600();
      sub_253A3B6FC();
      sub_2539E6F90((uint64_t)&unk_269CE57B0);
      sub_2534F84A8();
      sub_2534F84D0();
      sub_253A3B82C();
      uint64_t v360 = sub_253A3B62C();
      v361(v360);
      goto LABEL_57;
    case 0x23u:
      sub_253A3BA18(v23, (uint64_t)&v409);
      LOBYTE(v417) = 39;
      sub_2539EA5B4();
      sub_253A3B6FC();
      sub_2539E6F90((uint64_t)&unk_269CE57A0);
      sub_2534F84A8();
      sub_2534F84D0();
      sub_253A3B82C();
      uint64_t v362 = sub_253A3B62C();
      v363(v362);
      goto LABEL_57;
    case 0x24u:
      uint64_t v365 = *(void *)v23;
      unint64_t v364 = *(void *)(v23 + 8);
      unint64_t v366 = *(void *)(v23 + 16);
      LOBYTE(v417) = 40;
      sub_2539EA51C();
      uint64_t v327 = v416;
      sub_253A3BFC0();
      uint64_t v417 = v365;
      unint64_t v418 = v364;
      unint64_t v419 = v366;
      sub_2539EA568();
      sub_253A3F360();
LABEL_45:
      sub_2534659CC();
      v367();
      uint64_t v272 = sub_253A3E3FC();
      uint64_t v273 = v327;
LABEL_46:
      v274(v272, v273);
      swift_bridgeObjectRelease();
LABEL_47:
      swift_bridgeObjectRelease();
      goto LABEL_60;
    case 0x25u:
      sub_253A3BA18(v23, (uint64_t)&v415);
      LOBYTE(v417) = 41;
      sub_2539EA4D0();
      sub_253A3B6FC();
      sub_2539E6F90((uint64_t)&unk_269CE5780);
      sub_2534F84A8();
      sub_2534F84D0();
      sub_253A3B82C();
      uint64_t v368 = sub_253A3B62C();
      v369(v368);
      goto LABEL_57;
    case 0x26u:
      sub_253A3BA18(v23, (uint64_t)&v419);
      LOBYTE(v417) = 42;
      sub_2539EA484();
      sub_253A3B6FC();
      sub_2539E6F90((uint64_t)&unk_269CE5770);
      sub_2534F84A8();
      sub_2534F84D0();
      sub_253A3B82C();
      uint64_t v370 = sub_253A3B62C();
      v371(v370);
      goto LABEL_57;
    case 0x27u:
      sub_253A3BA18(v23, (uint64_t)&v423);
      LOBYTE(v417) = 43;
      sub_2539EA438();
      sub_253A3B6FC();
      sub_2539E6F90((uint64_t)&unk_269CE5760);
      sub_2534F84A8();
      sub_2534F84D0();
      sub_253A3B82C();
      uint64_t v372 = sub_253A3B62C();
      v373(v372);
      goto LABEL_57;
    case 0x28u:
      sub_253A3BA18(v23, (uint64_t)&a10);
      LOBYTE(v417) = 44;
      sub_2539EA3EC();
      sub_253A3B6FC();
      sub_2539E6F90((uint64_t)&unk_269CE5750);
      sub_2534F84A8();
      sub_2534F84D0();
      sub_253A3B82C();
      uint64_t v374 = sub_253A3B62C();
      v375(v374);
      goto LABEL_57;
    case 0x29u:
      sub_253A3BA18(v23, (uint64_t)&a14);
      LOBYTE(v417) = 45;
      sub_2539EA3A0();
      sub_253A3B6FC();
      sub_2539E6F90((uint64_t)&unk_269CE5740);
      sub_2534F84A8();
      sub_2534F84D0();
      sub_253A3B82C();
      uint64_t v376 = sub_253A3B62C();
      v377(v376);
      goto LABEL_57;
    case 0x2Au:
      sub_253A3BA18(v23, (uint64_t)&a18);
      LOBYTE(v417) = 46;
      sub_2539EA354();
      sub_253A3B748();
      sub_2539E6F90((uint64_t)&unk_269CE5730);
      sub_2534F84A8();
      sub_253A3B82C();
      uint64_t v378 = sub_253A3B62C();
      v379(v378);
      goto LABEL_57;
    case 0x2Bu:
      LOBYTE(v417) = 47;
      sub_2539EA2BC();
      sub_253A3B748();
      sub_2539EA308();
      sub_253A3B938();
LABEL_55:
      uint64_t v380 = sub_253A3B62C();
      v381(v380);
      goto LABEL_58;
    case 0x2Cu:
      sub_2539DF5B8(v23, v409);
      LOBYTE(v417) = 48;
      sub_2539EA270();
      sub_253A3B748();
      sub_2539E6F90((uint64_t)&unk_269CE5710);
      sub_2534F84A8();
      sub_253A3B938();
      uint64_t v382 = sub_253A3B62C();
      v383(v382);
LABEL_57:
      sub_2539DF610();
LABEL_58:
      uint64_t v263 = sub_25351C5C0();
      goto LABEL_59;
    case 0x2Du:
      LOBYTE(v417) = 11;
      sub_2539EB0FC();
      sub_253A3C1B8();
      sub_2534D8DA0();
      goto LABEL_65;
    case 0x2Eu:
      LOBYTE(v417) = 16;
      sub_2539EAF34();
      sub_253A3C1B8();
      sub_2534D8DA0();
      goto LABEL_65;
    case 0x2Fu:
      LOBYTE(v417) = 17;
      sub_2539EAEE8();
      sub_253A3C1B8();
      sub_2534D8DA0();
      goto LABEL_65;
    case 0x30u:
      LOBYTE(v417) = 18;
      sub_2539EAE9C();
      sub_253A3C1B8();
      sub_2534D8DA0();
LABEL_65:
      sub_2534659CC();
      v384();
      sub_2534659CC();
      v385();
      goto LABEL_60;
    default:
      uint64_t v260 = sub_253A3D03C();
      sub_2539DF5B8(v260, v261);
      LOBYTE(v417) = 0;
      sub_2539EB524();
      sub_253A3C04C();
      sub_2539E6F90((uint64_t)&unk_26B2411E0);
      sub_2534F84A8();
      sub_253A3B938();
      sub_2534659CC();
      v262();
      sub_2539DF610();
      uint64_t v263 = sub_2535B4148();
      goto LABEL_59;
  }
}

void Session.Event.Payload.init(from:)()
{
  sub_2534847F8();
  uint64_t v560 = v1;
  BOOL v8 = v7;
  uint64_t v550 = v9;
  uint64_t v548 = sub_253462A5C(&qword_269CE59B0);
  sub_253465998();
  uint64_t v551 = v10;
  MEMORY[0x270FA5388](v11);
  sub_2534D8F5C((uint64_t)v432 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v547 = sub_253462A5C(&qword_269CE59B8);
  sub_253465998();
  uint64_t v494 = v13;
  MEMORY[0x270FA5388](v14);
  sub_2534D8F5C((uint64_t)v432 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v546 = sub_253462A5C(&qword_269CE59C0);
  sub_253465998();
  uint64_t v493 = v16;
  MEMORY[0x270FA5388](v17);
  sub_2534D8F5C((uint64_t)v432 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v545 = sub_253462A5C(&qword_269CE59C8);
  sub_253465998();
  uint64_t v492 = v19;
  MEMORY[0x270FA5388](v20);
  sub_2534D8F5C((uint64_t)v432 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v544 = sub_253462A5C(&qword_269CE59D0);
  sub_253465998();
  uint64_t v491 = v22;
  MEMORY[0x270FA5388](v23);
  sub_2534D8F5C((uint64_t)v432 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v543 = sub_253462A5C(&qword_269CE59D8);
  sub_253465998();
  uint64_t v490 = v25;
  MEMORY[0x270FA5388](v26);
  sub_2534D8F5C((uint64_t)v432 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v542 = sub_253462A5C(&qword_269CE59E0);
  sub_253465998();
  uint64_t v489 = v28;
  MEMORY[0x270FA5388](v29);
  sub_2534D8F5C((uint64_t)v432 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v541 = sub_253462A5C(&qword_269CE59E8);
  sub_253465998();
  uint64_t v488 = v31;
  MEMORY[0x270FA5388](v32);
  sub_2534D8F5C((uint64_t)v432 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v540 = sub_253462A5C(&qword_269CE59F0);
  sub_253465998();
  uint64_t v487 = v34;
  MEMORY[0x270FA5388](v35);
  sub_2534D8F5C((uint64_t)v432 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v539 = sub_253462A5C(&qword_269CE59F8);
  sub_253465998();
  uint64_t v486 = v37;
  MEMORY[0x270FA5388](v38);
  sub_2534D8F5C((uint64_t)v432 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v538 = sub_253462A5C(&qword_269CE5A00);
  sub_253465998();
  uint64_t v485 = v40;
  MEMORY[0x270FA5388](v41);
  sub_2534D8F5C((uint64_t)v432 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v537 = sub_253462A5C(&qword_269CE5A08);
  sub_253465998();
  uint64_t v484 = v43;
  MEMORY[0x270FA5388](v44);
  sub_25346CB04();
  sub_2534D8F5C(v45);
  uint64_t v536 = sub_253462A5C(&qword_269CE5A10);
  sub_253465998();
  uint64_t v483 = v46;
  MEMORY[0x270FA5388](v47);
  sub_2534D8F5C((uint64_t)v432 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v535 = sub_253462A5C(&qword_269CE5A18);
  sub_253465998();
  uint64_t v482 = v49;
  MEMORY[0x270FA5388](v50);
  sub_2534D8F5C((uint64_t)v432 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v534 = sub_253462A5C(&qword_269CE5A20);
  sub_253465998();
  uint64_t v481 = v52;
  MEMORY[0x270FA5388](v53);
  sub_2534D8F5C((uint64_t)v432 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v533 = sub_253462A5C(&qword_269CE5A28);
  sub_253465998();
  uint64_t v480 = v55;
  MEMORY[0x270FA5388](v56);
  sub_2534D8F5C((uint64_t)v432 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v532 = sub_253462A5C(&qword_269CE5A30);
  sub_253465998();
  uint64_t v479 = v58;
  MEMORY[0x270FA5388](v59);
  sub_25346CB04();
  sub_2534D8F5C(v60);
  uint64_t v531 = sub_253462A5C(&qword_269CE5A38);
  sub_253465998();
  uint64_t v478 = v61;
  MEMORY[0x270FA5388](v62);
  sub_2534D8F5C((uint64_t)v432 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v530 = sub_253462A5C(&qword_269CE5A40);
  sub_253465998();
  uint64_t v477 = v64;
  MEMORY[0x270FA5388](v65);
  sub_2534D8F5C((uint64_t)v432 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v529 = sub_253462A5C(&qword_269CE5A48);
  sub_253465998();
  uint64_t v476 = v67;
  MEMORY[0x270FA5388](v68);
  sub_2534D8F5C((uint64_t)v432 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v528 = sub_253462A5C(&qword_269CE5A50);
  sub_253465998();
  uint64_t v475 = v70;
  MEMORY[0x270FA5388](v71);
  sub_25346CB04();
  sub_2534D8F5C(v72);
  uint64_t v527 = sub_253462A5C(&qword_269CE5A58);
  sub_253465998();
  uint64_t v474 = v73;
  MEMORY[0x270FA5388](v74);
  sub_2534D8F5C((uint64_t)v432 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v526 = sub_253462A5C(&qword_269CE5A60);
  sub_253465998();
  uint64_t v473 = v76;
  MEMORY[0x270FA5388](v77);
  sub_25346CB04();
  sub_2534D8F5C(v78);
  uint64_t v525 = sub_253462A5C(&qword_269CE5A68);
  sub_253465998();
  uint64_t v472 = v79;
  MEMORY[0x270FA5388](v80);
  sub_2534D8F5C((uint64_t)v432 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v524 = sub_253462A5C(&qword_269CE5A70);
  sub_253465998();
  uint64_t v471 = v82;
  MEMORY[0x270FA5388](v83);
  sub_2534D8F5C((uint64_t)v432 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v523 = sub_253462A5C(&qword_269CE5A78);
  sub_253465998();
  uint64_t v470 = v85;
  MEMORY[0x270FA5388](v86);
  sub_25346CB04();
  sub_2534D8F5C(v87);
  uint64_t v522 = sub_253462A5C(&qword_269CE5A80);
  sub_253465998();
  uint64_t v469 = v88;
  MEMORY[0x270FA5388](v89);
  sub_25346CB04();
  sub_2534D8F5C(v90);
  uint64_t v521 = sub_253462A5C(&qword_269CE5A88);
  sub_253465998();
  uint64_t v468 = v91;
  MEMORY[0x270FA5388](v92);
  sub_2534D8F5C((uint64_t)v432 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v520 = sub_253462A5C(&qword_269CE5A90);
  sub_253465998();
  uint64_t v467 = v94;
  MEMORY[0x270FA5388](v95);
  sub_2534D8F5C((uint64_t)v432 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v519 = sub_253462A5C(&qword_269CE5A98);
  sub_253465998();
  uint64_t v466 = v97;
  MEMORY[0x270FA5388](v98);
  sub_25346CB04();
  sub_2534D8F5C(v99);
  uint64_t v517 = sub_253462A5C(&qword_269CE5AA0);
  sub_253465998();
  uint64_t v516 = v100;
  MEMORY[0x270FA5388](v101);
  sub_2534D8F5C((uint64_t)v432 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v515 = sub_253462A5C(&qword_269CE5AA8);
  sub_253465998();
  uint64_t v514 = v103;
  MEMORY[0x270FA5388](v104);
  sub_2534D8F5C((uint64_t)v432 - ((v105 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v513 = sub_253462A5C(&qword_269CE5AB0);
  sub_253465998();
  uint64_t v512 = v106;
  MEMORY[0x270FA5388](v107);
  sub_25346CB04();
  sub_2534D8F5C(v108);
  uint64_t v518 = sub_253462A5C(&qword_269CE5AB8);
  sub_253465998();
  uint64_t v552 = v109;
  MEMORY[0x270FA5388](v110);
  sub_25346CB04();
  sub_2534D8F5C(v111);
  uint64_t v511 = sub_253462A5C(&qword_269CE5AC0);
  sub_253465998();
  uint64_t v465 = v112;
  MEMORY[0x270FA5388](v113);
  sub_25346CB04();
  sub_2534D8F5C(v114);
  uint64_t v510 = sub_253462A5C(&qword_269CE5AC8);
  sub_253465998();
  uint64_t v464 = v115;
  MEMORY[0x270FA5388](v116);
  sub_2534D8F5C((uint64_t)v432 - ((v117 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v509 = sub_253462A5C(&qword_269CE5AD0);
  sub_253465998();
  uint64_t v463 = v118;
  MEMORY[0x270FA5388](v119);
  sub_2534D8F5C((uint64_t)v432 - ((v120 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v507 = sub_253462A5C(&qword_269CE5AD8);
  sub_253465998();
  uint64_t v506 = v121;
  MEMORY[0x270FA5388](v122);
  sub_2534D8F5C((uint64_t)v432 - ((v123 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v508 = sub_253462A5C(&qword_269CE5AE0);
  sub_253465998();
  uint64_t v462 = v124;
  MEMORY[0x270FA5388](v125);
  sub_25346CB04();
  sub_2534D8F5C(v126);
  uint64_t v505 = sub_253462A5C(&qword_269CE5AE8);
  sub_253465998();
  uint64_t v461 = v127;
  MEMORY[0x270FA5388](v128);
  sub_2534D8F5C((uint64_t)v432 - ((v129 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v504 = sub_253462A5C(&qword_269CE5AF0);
  sub_253465998();
  uint64_t v460 = v130;
  MEMORY[0x270FA5388](v131);
  sub_2534D8F5C((uint64_t)v432 - ((v132 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v503 = sub_253462A5C(&qword_269CE5AF8);
  sub_253465998();
  uint64_t v459 = v133;
  MEMORY[0x270FA5388](v134);
  sub_2534D8F5C((uint64_t)v432 - ((v135 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v502 = sub_253462A5C(&qword_269CE5B00);
  sub_253465998();
  uint64_t v458 = v136;
  MEMORY[0x270FA5388](v137);
  sub_2534D8F5C((uint64_t)v432 - ((v138 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v501 = sub_253462A5C(&qword_269CE5B08);
  sub_253465998();
  uint64_t v457 = v139;
  MEMORY[0x270FA5388](v140);
  sub_2534D8F5C((uint64_t)v432 - ((v141 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v500 = sub_253462A5C(&qword_269CE5B10);
  sub_253465998();
  uint64_t v456 = v142;
  MEMORY[0x270FA5388](v143);
  sub_2534D8F5C((uint64_t)v432 - ((v144 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v499 = sub_253462A5C(&qword_269CE5B18);
  sub_253465998();
  uint64_t v455 = v145;
  MEMORY[0x270FA5388](v146);
  sub_2534D8F5C((uint64_t)v432 - ((v147 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v496 = sub_253462A5C(&qword_269CE5B20);
  sub_253465998();
  uint64_t v454 = v148;
  MEMORY[0x270FA5388](v149);
  sub_2534D8F5C((uint64_t)v432 - ((v150 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v498 = sub_253462A5C(&qword_269CE5B28);
  sub_253465998();
  uint64_t v453 = v151;
  MEMORY[0x270FA5388](v152);
  sub_2534D8F5C((uint64_t)v432 - ((v153 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v497 = sub_253462A5C(&qword_269CE5B30);
  sub_253465998();
  uint64_t v452 = v154;
  MEMORY[0x270FA5388](v155);
  sub_2534D9264(v156, v432[0]);
  uint64_t v558 = sub_253462A5C(&qword_269CE5B38);
  sub_253465998();
  uint64_t v554 = v157;
  MEMORY[0x270FA5388](v158);
  uint64_t v561 = (char *)v432 - ((v159 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v553 = type metadata accessor for Session.Event.Payload(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v160);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v161);
  uint64_t v556 = (char *)v432 - v162;
  sub_2534B324C();
  MEMORY[0x270FA5388](v163);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v164);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v165);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v166);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v167);
  sub_2534B3318();
  uint64_t v555 = v168;
  sub_2534B324C();
  MEMORY[0x270FA5388](v169);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v170);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v171);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v172);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v173);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v174);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v175);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v176);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v177);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v178);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v179);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v180);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v181);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v182);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v183);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v184);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v185);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v186);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v187);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v188);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v189);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v190);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v191);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v192);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v193);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v194);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v195);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v196);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v197);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v198);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v199);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v200);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v201);
  sub_2534B3318();
  sub_2534F823C();
  MEMORY[0x270FA5388](v202);
  sub_25351C99C();
  MEMORY[0x270FA5388](v203);
  sub_25351C3B4();
  MEMORY[0x270FA5388](v204);
  sub_253A3B8EC();
  MEMORY[0x270FA5388](v205);
  sub_2535B45C8();
  MEMORY[0x270FA5388](v206);
  sub_2534F8600();
  MEMORY[0x270FA5388](v207);
  sub_2534B347C();
  uint64_t v559 = v8;
  sub_253A3B978(v8);
  sub_2539EA224();
  uint64_t v208 = v560;
  sub_253B0A660();
  if (v208) {
    goto LABEL_7;
  }
  uint64_t v435 = v2;
  uint64_t v433 = v6;
  uint64_t v436 = v5;
  uint64_t v437 = v0;
  uint64_t v434 = v4;
  uint64_t v210 = v555;
  uint64_t v209 = v556;
  uint64_t v211 = v557;
  uint64_t v560 = v3;
  sub_253B0A390();
  sub_253A3EB04();
  if (!v212
    || (v432[2] = 0,
        uint64_t v213 = *(unsigned __int8 *)(v0 + 32),
        uint64_t v214 = sub_253A3CD80(),
        uint64_t v220 = sub_25347B78C(v214, v215, v216, v217, v218, v219),
        uint64_t v222 = v221,
        unint64_t v224 = v223,
        swift_bridgeObjectRelease(),
        v222 != v224 >> 1))
  {
    sub_253B0A090();
    sub_2534D969C();
    sub_253462A5C(&qword_269CDB688);
    sub_253A3E02C();
    sub_253B0A2D0();
    sub_2534F8464();
    sub_25347B88C();
    uint64_t v230 = sub_2534F859C();
    v231(v230);
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v232 = sub_253971C3C();
    v233(v232);
LABEL_7:
    uint64_t v234 = (uint64_t)v559;
    goto LABEL_8;
  }
  v432[1] = v220;
  uint64_t v225 = v552;
  switch(v213)
  {
    case 1:
      v562[0] = 1;
      sub_2539EB4D8();
      sub_253A3B76C();
      type metadata accessor for TextQuery(0);
      sub_2539E6F90((uint64_t)&unk_269CE5C70);
      uint64_t v235 = v436;
      sub_253B0A370();
      sub_253A3B878();
      sub_2534659CC();
      v397();
      sub_253A3B7D4();
      sub_2534B3470();
      v398();
      swift_storeEnumTagMultiPayload();
      uint64_t v399 = v235;
      break;
    case 2:
      v562[0] = 2;
      sub_2539EB440();
      sub_253578ED4();
      sub_253A3B76C();
      sub_2539EB9E4();
      sub_253A3CE98();
      sub_2534659CC();
      v400();
      sub_253A3B7D4();
      sub_2534D9220();
      v401();
      char v402 = v562[8];
      uint64_t v403 = v433;
      *uint64_t v433 = *(void *)v562;
      *((unsigned char *)v403 + 8) = v402;
      *((_OWORD *)v403 + 1) = *(_OWORD *)&v562[16];
      sub_253A3C000();
      goto LABEL_58;
    case 3:
      v562[0] = 3;
      sub_2539EB3F4();
      sub_253A3B648();
      type metadata accessor for Request(0);
      sub_2539E6F90((uint64_t)&unk_269CE5C60);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v236 = sub_253A3B62C();
      v237(v236);
      sub_253A3B7D4();
      uint64_t v238 = sub_253A3B698();
      v239(v238);
      sub_253A3B9D8();
      goto LABEL_59;
    case 4:
      v562[0] = 4;
      sub_2539EB35C();
      sub_253962838();
      sub_253A3B76C();
      sub_2539EB998();
      sub_253A3B884();
      sub_253A3B878();
      sub_2534659CC();
      v404();
      sub_253A3B7D4();
      sub_2534B3470();
      v405();
      uint64_t v406 = *(void *)&v562[16];
      char v407 = v564;
      uint64_t v403 = v434;
      _OWORD *v434 = *(_OWORD *)v562;
      v403[2] = v406;
      *(_OWORD *)(v403 + 3) = *(_OWORD *)&v562[24];
      *(_OWORD *)(v403 + 5) = v563;
      *((unsigned char *)v403 + 56) = v407;
      sub_253A3C000();
      goto LABEL_58;
    case 5:
      v562[0] = 5;
      sub_2539EB310();
      sub_253A3B648();
      type metadata accessor for Action(0);
      sub_2539E6F90((uint64_t)&qword_269CE4F40);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v240 = sub_253A3B62C();
      v241(v240);
      sub_253A3B7D4();
      uint64_t v242 = sub_253A3B698();
      v243(v242);
      sub_253A3B9D8();
      goto LABEL_59;
    case 6:
      v562[0] = 6;
      sub_2539EB2C4();
      sub_253A3B648();
      type metadata accessor for ActionCancellation(0);
      sub_2539E6F90((uint64_t)&unk_269CE5C50);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v244 = sub_253A3B62C();
      v245(v244);
      sub_253A3B7D4();
      uint64_t v246 = sub_253A3B698();
      v247(v246);
      sub_253A3B9D8();
      goto LABEL_59;
    case 7:
      v562[0] = 7;
      sub_2539EB278();
      sub_253A3B648();
      type metadata accessor for ClientAction(0);
      sub_2539E6F90((uint64_t)&unk_269CE5C48);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v248 = sub_253A3B62C();
      v249(v248);
      sub_253A3B7D4();
      uint64_t v250 = sub_253A3B698();
      v251(v250);
      sub_253A3B9D8();
      goto LABEL_59;
    case 8:
      v562[0] = 8;
      sub_2539EB22C();
      sub_253A3B648();
      type metadata accessor for QueryStep(0);
      sub_2539E6F90((uint64_t)&unk_269CE5C40);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v252 = sub_253A3B62C();
      v253(v252);
      sub_253A3B7D4();
      uint64_t v254 = sub_253A3B698();
      v255(v254);
      sub_253A3B9D8();
      goto LABEL_59;
    case 9:
      v562[0] = 9;
      sub_2539EB1E0();
      sub_253A3B648();
      type metadata accessor for VariableStep(0);
      sub_2539E6F90((uint64_t)&unk_269CE5C38);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v256 = sub_253A3B62C();
      v257(v256);
      sub_253A3B7D4();
      uint64_t v258 = sub_253A3B698();
      v259(v258);
      sub_253A3B9D8();
      goto LABEL_59;
    case 10:
      v562[0] = 10;
      sub_2539EB148();
      sub_253A3B648();
      sub_2539EB94C();
      sub_253A3B884();
      sub_253A3B878();
      uint64_t v260 = sub_253A3B62C();
      v261(v260);
      sub_253A3B7D4();
      uint64_t v262 = sub_253A3B698();
      v263(v262);
      uint64_t v403 = v439;
      void *v439 = *(void *)v562;
      sub_253A3C000();
      goto LABEL_58;
    case 11:
      v562[0] = 11;
      sub_2539EB0FC();
      sub_253A3B76C();
      sub_2534D8DA0();
      sub_2534659CC();
      v264();
      sub_253A3B7D4();
      sub_2534659CC();
      v265();
      sub_253A3D390();
      goto LABEL_57;
    case 12:
      v562[0] = 12;
      sub_2539EB0B0();
      uint64_t v266 = v549;
      sub_253A3B76C();
      sub_253B0A320();
      sub_253A3C064();
      sub_2534659CC();
      v416();
      sub_253A3B7D4();
      sub_2534D91AC();
      v417();
      uint64_t v209 = v440;
      *uint64_t v440 = v225;
      v209[1] = v266;
      goto LABEL_62;
    case 13:
      v562[0] = 13;
      sub_2539EB018();
      sub_253A3B648();
      sub_2539EB900();
      sub_253A3B884();
      sub_253A3B878();
      uint64_t v267 = sub_253A3B62C();
      v268(v267);
      sub_253A3B7D4();
      uint64_t v269 = sub_253A3B698();
      v270(v269);
      long long v271 = *(_OWORD *)&v562[16];
      uint64_t v272 = *(void *)&v562[32];
      uint64_t v273 = v563;
      uint64_t v403 = v441;
      *uint64_t v441 = *(_OWORD *)v562;
      *((_OWORD *)v403 + 1) = v271;
      v403[4] = v272;
      v403[5] = v273;
      sub_253A3C000();
      goto LABEL_58;
    case 14:
      v562[0] = 14;
      sub_2539EAFCC();
      sub_253A3B648();
      type metadata accessor for SessionError();
      sub_2539E6F90((uint64_t)&qword_269CDB930);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v274 = sub_253A3B62C();
      v275(v274);
      sub_253A3B7D4();
      uint64_t v276 = sub_253A3B698();
      v277(v276);
      sub_253A3B9D8();
      goto LABEL_59;
    case 15:
      v562[0] = 15;
      sub_2539EAF80();
      sub_253578ED4();
      sub_253A3B76C();
      LOBYTE(v565) = 0;
      sub_2539EB8B4();
      sub_253A3CE98();
      uint64_t v409 = *(void *)v562;
      uint64_t v408 = *(void *)&v562[8];
      sub_2534D9E60();
      sub_253A3E4FC();
      sub_253B0A370();
      uint64_t v424 = v565;
      uint64_t v557 = v566;
      sub_253A3E098();
      uint64_t v425 = sub_253B0A320();
      uint64_t v555 = v426;
      uint64_t v556 = (char *)v425;
      sub_2534659CC();
      v427();
      swift_unknownObjectRelease();
      sub_2534659CC();
      v428();
      uint64_t v429 = v438;
      void *v438 = v409;
      v429[1] = v408;
      uint64_t v430 = v557;
      v429[2] = v424;
      v429[3] = v430;
      uint64_t v431 = v555;
      v429[4] = v556;
      v429[5] = v431;
      swift_storeEnumTagMultiPayload();
      uint64_t v399 = (uint64_t)v429;
      break;
    case 16:
      v562[0] = 16;
      sub_2539EAF34();
      sub_253A3B76C();
      sub_2534D8DA0();
      sub_2534659CC();
      v278();
      sub_253A3B7D4();
      sub_2534659CC();
      v279();
      sub_253A3D390();
      goto LABEL_57;
    case 17:
      v562[0] = 17;
      sub_2539EAEE8();
      sub_253A3B76C();
      sub_2534D8DA0();
      sub_2534659CC();
      v280();
      sub_253A3B7D4();
      sub_2534659CC();
      v281();
      sub_253A3D390();
      goto LABEL_57;
    case 18:
      v562[0] = 18;
      sub_2539EAE9C();
      sub_253A3B76C();
      sub_2534D8DA0();
      sub_2534659CC();
      v395();
      sub_253A3B7D4();
      sub_2534659CC();
      v396();
      sub_253A3D390();
LABEL_57:
      swift_storeEnumTagMultiPayload();
      goto LABEL_61;
    case 19:
      v562[0] = 19;
      sub_2539EAE50();
      sub_253A3B648();
      sub_253B059F0();
      sub_2539E6F90((uint64_t)&unk_269CE5C18);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v282 = sub_253A3B62C();
      v283(v282);
      sub_253A3B7D4();
      uint64_t v284 = sub_253A3B698();
      v285(v284);
      sub_253A3B9D8();
      goto LABEL_59;
    case 20:
      v562[0] = 20;
      sub_2539EAE04();
      sub_253A3B648();
      type metadata accessor for RequestContent.SystemPromptResolution(0);
      sub_2539E6F90((uint64_t)&unk_269CE5C10);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v286 = sub_253A3B62C();
      v287(v286);
      sub_253A3B7D4();
      uint64_t v288 = sub_253A3B698();
      v289(v288);
      sub_253A3B9D8();
      goto LABEL_59;
    case 21:
      v562[0] = 21;
      sub_2539EADB8();
      sub_253A3B648();
      type metadata accessor for ActionStepResult(0);
      sub_2539E6F90((uint64_t)&unk_269CE5C08);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v290 = sub_253A3B62C();
      v291(v290);
      sub_253A3B7D4();
      uint64_t v292 = sub_253A3B698();
      v293(v292);
      sub_253A3B9D8();
      goto LABEL_59;
    case 22:
      v562[0] = 22;
      sub_2539EAD6C();
      sub_253A3B648();
      type metadata accessor for QueryStepResults(0);
      sub_2539E6F90((uint64_t)&unk_269CE5C00);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v294 = sub_253A3B62C();
      v295(v294);
      sub_253A3B7D4();
      uint64_t v296 = sub_253A3B698();
      v297(v296);
      sub_253A3B9D8();
      goto LABEL_59;
    case 23:
      v562[0] = 23;
      sub_2539EAD20();
      sub_253A3B648();
      sub_253B05CF0();
      sub_2539E6F90((uint64_t)&unk_269CE5BF8);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v298 = sub_253A3B62C();
      v299(v298);
      sub_253A3B7D4();
      uint64_t v300 = sub_253A3B698();
      v301(v300);
      sub_253A3B9D8();
      goto LABEL_59;
    case 24:
      v562[0] = 24;
      sub_2539EACD4();
      sub_253A3B648();
      type metadata accessor for ActionResolverRequest(0);
      sub_2539E6F90((uint64_t)&unk_269CE5BF0);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v302 = sub_253A3B62C();
      v303(v302);
      sub_253A3B7D4();
      uint64_t v304 = sub_253A3B698();
      v305(v304);
      sub_253A3B9D8();
      goto LABEL_59;
    case 25:
      v562[0] = 25;
      sub_2539EAC3C();
      sub_253A3B648();
      sub_2539EB868();
      sub_253A3B884();
      sub_253A3B878();
      uint64_t v306 = sub_253A3B62C();
      v307(v306);
      sub_253A3B7D4();
      uint64_t v308 = sub_253A3B698();
      v309(v308);
      uint64_t v403 = v442;
      *uint64_t v442 = *(void *)v562;
      sub_253A3C000();
      goto LABEL_58;
    case 26:
      v562[0] = 26;
      sub_2539EABA4();
      sub_253A3B648();
      sub_2539EB81C();
      sub_253A3B884();
      sub_253A3B878();
      uint64_t v310 = sub_253A3B62C();
      v311(v310);
      sub_253A3B7D4();
      uint64_t v312 = sub_253A3B698();
      v313(v312);
      uint64_t v403 = v443;
      *uint64_t v443 = *(void *)v562;
      *(_OWORD *)(v403 + 1) = *(_OWORD *)&v562[8];
      sub_253A3C000();
      goto LABEL_58;
    case 27:
      v562[0] = 27;
      sub_2539EAB0C();
      sub_253A3B648();
      sub_2539EB7D0();
      sub_253A3B884();
      sub_253A3B878();
      uint64_t v314 = sub_253A3B62C();
      v315(v314);
      sub_253A3B7D4();
      uint64_t v316 = sub_253A3B698();
      v317(v316);
      uint64_t v318 = *(void *)&v562[8];
      uint64_t v403 = v444;
      *uint64_t v444 = *(void *)v562;
      v403[1] = v318;
      sub_253A3C000();
      goto LABEL_58;
    case 28:
      v562[0] = 28;
      sub_2539EAA74();
      sub_253A3B648();
      sub_2539EB784();
      sub_253A3B884();
      sub_253A3B878();
      uint64_t v319 = sub_253A3B62C();
      v320(v319);
      sub_253A3B7D4();
      uint64_t v321 = sub_253A3B698();
      v322(v321);
      uint64_t v323 = *(void *)&v562[8];
      uint64_t v403 = v445;
      *uint64_t v445 = *(void *)v562;
      v403[1] = v323;
      sub_253A3C000();
      goto LABEL_58;
    case 29:
      v562[0] = 29;
      sub_2539EA9DC();
      sub_253A3B648();
      sub_2539EB738();
      sub_253A3B884();
      sub_253A3B878();
      uint64_t v324 = sub_253A3B62C();
      v325(v324);
      sub_253A3B7D4();
      uint64_t v326 = sub_253A3B698();
      v327(v326);
      uint64_t v403 = v446;
      sub_253A3C000();
      goto LABEL_58;
    case 30:
      v562[0] = 30;
      sub_2539EA944();
      sub_253A3B648();
      sub_2539EB6EC();
      sub_253A3B884();
      sub_253A3B878();
      uint64_t v328 = sub_253A3B62C();
      v329(v328);
      sub_253A3B7D4();
      uint64_t v330 = sub_253A3B698();
      v331(v330);
      uint64_t v403 = v447;
      *uint64_t v447 = *(_OWORD *)v562;
      sub_253A3C000();
      goto LABEL_58;
    case 31:
      v562[0] = 31;
      sub_2539EA8AC();
      sub_253A3B648();
      sub_2539EB6A0();
      sub_253A3B884();
      sub_253A3B878();
      uint64_t v332 = sub_253A3B62C();
      v333(v332);
      sub_253A3B7D4();
      uint64_t v334 = sub_253A3B698();
      v335(v334);
      uint64_t v403 = v448;
      _OWORD *v448 = *(_OWORD *)v562;
      sub_253A3C000();
      goto LABEL_58;
    case 32:
      v562[0] = 32;
      sub_2539EA814();
      sub_253A3B648();
      sub_2539EB654();
      sub_253A3B884();
      sub_253A3B878();
      uint64_t v336 = sub_253A3B62C();
      v337(v336);
      sub_253A3B7D4();
      uint64_t v338 = sub_253A3B698();
      v339(v338);
      uint64_t v340 = *(void *)&v562[16];
      uint64_t v341 = *(void *)&v562[24];
      int v342 = *(_DWORD *)&v562[32];
      uint64_t v403 = v450;
      *uint64_t v450 = *(_OWORD *)v562;
      v403[2] = v340;
      v403[3] = v341;
      *((_DWORD *)v403 + 8) = v342;
      *(_OWORD *)(v403 + 5) = v563;
      sub_253A3C000();
      goto LABEL_58;
    case 33:
      v562[0] = 33;
      sub_2539EA77C();
      sub_253A3B648();
      sub_2539EB608();
      sub_253A3B884();
      sub_253A3B878();
      uint64_t v343 = sub_253A3B62C();
      v344(v343);
      sub_253A3B7D4();
      uint64_t v345 = sub_253A3B698();
      v346(v345);
      uint64_t v403 = v449;
      void *v449 = *(void *)v562;
      sub_253A3C000();
      goto LABEL_58;
    case 34:
      v562[0] = 34;
      sub_2539EA730();
      sub_253A3B648();
      sub_253B06720();
      sub_2539E6F90((uint64_t)&qword_269CDBBB8);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v347 = sub_253A3B62C();
      v348(v347);
      sub_253A3B7D4();
      uint64_t v349 = sub_253A3B698();
      v350(v349);
      sub_253A3B9D8();
      goto LABEL_59;
    case 35:
      v562[0] = 35;
      sub_2539EA6E4();
      sub_253A3B648();
      type metadata accessor for StatementResult(0);
      sub_2539E6F90((uint64_t)&qword_269CE4F48);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v351 = sub_253A3B62C();
      v352(v351);
      sub_253A3B7D4();
      uint64_t v353 = sub_253A3B698();
      v354(v353);
      sub_253A3B9D8();
      goto LABEL_59;
    case 36:
      v562[0] = 36;
      sub_2539EA698();
      sub_253A3B648();
      type metadata accessor for ExternalAgentTextQuery(0);
      sub_2539E6F90((uint64_t)&unk_269CE5BA0);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v355 = sub_253A3B62C();
      v356(v355);
      sub_253A3B7D4();
      uint64_t v357 = sub_253A3B698();
      v358(v357);
      sub_253A3B9D8();
      goto LABEL_59;
    case 37:
      v562[0] = 37;
      sub_2539EA64C();
      sub_253A3B648();
      type metadata accessor for ExternalAgentSpeechQuery(0);
      sub_2539E6F90((uint64_t)&unk_269CE5B98);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v359 = sub_253A3B62C();
      v360(v359);
      sub_253A3B7D4();
      uint64_t v361 = sub_253A3B698();
      v362(v361);
      sub_253A3B9D8();
      goto LABEL_59;
    case 38:
      v562[0] = 38;
      sub_2539EA600();
      sub_253A3B648();
      type metadata accessor for ExternalAgentRequest(0);
      sub_2539E6F90((uint64_t)&unk_269CE5B90);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v363 = sub_253A3B62C();
      v364(v363);
      sub_253A3B7D4();
      uint64_t v365 = sub_253A3B698();
      v366(v365);
      sub_253A3B9D8();
      goto LABEL_59;
    case 39:
      v562[0] = 39;
      sub_2539EA5B4();
      sub_253A3B648();
      type metadata accessor for ExternalAgentOutcome(0);
      sub_2539E6F90((uint64_t)&unk_269CE5B88);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v367 = sub_253A3B62C();
      v368(v367);
      sub_253A3B7D4();
      uint64_t v369 = sub_253A3B698();
      v370(v369);
      sub_253A3B9D8();
      goto LABEL_59;
    case 40:
      v562[0] = 40;
      sub_2539EA51C();
      sub_253A3B648();
      sub_2539EB5BC();
      sub_253A3B884();
      sub_253A3B878();
      uint64_t v371 = sub_253A3B62C();
      v372(v371);
      sub_253A3B7D4();
      uint64_t v373 = sub_253A3B698();
      v374(v373);
      uint64_t v403 = v451;
      *uint64_t v451 = *(void *)v562;
      *(_OWORD *)(v403 + 1) = *(_OWORD *)&v562[8];
      sub_253A3C000();
LABEL_58:
      swift_storeEnumTagMultiPayload();
      uint64_t v399 = (uint64_t)v403;
      break;
    case 41:
      v562[0] = 41;
      sub_2539EA4D0();
      sub_253A3B648();
      type metadata accessor for ToolResolution(0);
      sub_2539E6F90((uint64_t)&unk_269CE5B78);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v375 = sub_253A3B62C();
      v376(v375);
      sub_253A3B7D4();
      uint64_t v377 = sub_253A3B698();
      v378(v377);
      sub_253A3B9D8();
      goto LABEL_59;
    case 42:
      v562[0] = 42;
      sub_2539EA484();
      sub_253A3B648();
      type metadata accessor for UndoRedoRequest(0);
      sub_2539E6F90((uint64_t)&unk_269CE5B70);
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v379 = sub_253A3B62C();
      v380(v379);
      sub_253A3B7D4();
      uint64_t v381 = sub_253A3B698();
      v382(v381);
      goto LABEL_63;
    case 43:
      v562[0] = 43;
      sub_2539EA438();
      sub_253A3B648();
      type metadata accessor for ClientUndoRedoRequest(0);
      sub_2539E6F90((uint64_t)&unk_269CE5B68);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v383 = sub_253A3B62C();
      v384(v383);
      sub_253A3B7D4();
      uint64_t v385 = sub_253A3B698();
      v386(v385);
      sub_253A3B9D8();
      goto LABEL_59;
    case 44:
      v562[0] = 44;
      sub_2539EA3EC();
      sub_253A3B648();
      type metadata accessor for TypeConversionRequest(0);
      sub_2539E6F90((uint64_t)&unk_269CE5B60);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v387 = sub_253A3B62C();
      v388(v387);
      sub_253A3B7D4();
      uint64_t v389 = sub_253A3B698();
      v390(v389);
      sub_253A3B9D8();
      goto LABEL_59;
    case 45:
      v562[0] = 45;
      sub_2539EA3A0();
      sub_253A3B648();
      type metadata accessor for TypeConversionResult(0);
      sub_2539E6F90((uint64_t)&unk_269CE5B58);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v391 = sub_253A3B62C();
      v392(v391);
      sub_253A3B7D4();
      uint64_t v393 = sub_253A3B698();
      v394(v393);
      sub_253A3B9D8();
      goto LABEL_59;
    case 46:
      v562[0] = 46;
      sub_2539EA354();
      sub_253A3B648();
      type metadata accessor for QueryDecorationResult(0);
      sub_2539E6F90((uint64_t)&unk_269CE5B50);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v410 = sub_253A3B62C();
      v411(v410);
      sub_253A3B7D4();
      uint64_t v412 = sub_253A3B698();
      v413(v412);
      sub_253A3B9D8();
      goto LABEL_59;
    case 47:
      v562[0] = 47;
      sub_2539EA2BC();
      sub_253962838();
      sub_253A3B76C();
      sub_2539EB570();
      sub_253A3B884();
      sub_253A3B878();
      uint64_t v418 = sub_253A3B62C();
      v419(v418);
      sub_253A3B7D4();
      sub_253A3D03C();
      sub_2534B3470();
      v420();
LABEL_62:
      swift_storeEnumTagMultiPayload();
      uint64_t v399 = (uint64_t)v209;
      break;
    case 48:
      v562[0] = 48;
      sub_2539EA270();
      sub_253A3B674();
      type metadata accessor for QueryDecorationPrePlannerResult(0);
      sub_2539E6F90((uint64_t)&unk_269CE5B40);
      uint64_t v210 = v495;
      sub_253B0A370();
      sub_253A3B878();
      sub_2534D91A0();
      v421();
      sub_253A3B7D4();
      uint64_t v422 = sub_253A3B698();
      v423(v422);
LABEL_63:
      swift_storeEnumTagMultiPayload();
      uint64_t v399 = v210;
      break;
    default:
      v562[0] = 0;
      sub_2539EB524();
      sub_253A3B674();
      type metadata accessor for SessionStart(0);
      sub_2539E6F90((uint64_t)&unk_269CE5C78);
      sub_253A3B81C();
      sub_253A3B724();
      sub_253A3B878();
      uint64_t v226 = sub_253A3B62C();
      v227(v226);
      sub_253A3B7D4();
      uint64_t v228 = sub_253A3B698();
      v229(v228);
      sub_253A3B9D8();
LABEL_59:
      swift_storeEnumTagMultiPayload();
      uint64_t v399 = v211;
      break;
  }
  unint64_t v224 = v560;
  sub_2539DF5B8(v399, v560);
LABEL_61:
  uint64_t v414 = (uint64_t)v559;
  sub_253A3F0EC();
  sub_2539DF5B8(v224, v415);
  uint64_t v234 = v414;
LABEL_8:
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v234);
  sub_2536D4C48();
  sub_2534847C8();
}

void sub_25399BD38()
{
}

#error "25399BD5C: call analysis failed (funcsize=6)"

#error "25399C058: call analysis failed (funcsize=255)"

uint64_t sub_25399C198(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_253B0A4C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064;
    if (v6 || (sub_253B0A4C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6576457972657571 && a2 == 0xEC0000006449746ELL;
      if (v7 || (sub_253B0A4C0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x64616F6C796170 && a2 == 0xE700000000000000;
        if (v8 || (sub_253B0A4C0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6552746E65696C63 && a2 == 0xEF64497473657571;
          if (v9 || (sub_253B0A4C0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x6553746E65696C63 && a2 == 0xEF64496E6F697373;
            if (v10 || (sub_253B0A4C0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0xD000000000000013 && a2 == 0x8000000253B12900 || (sub_253B0A4C0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              BOOL v11 = a1 == 0x7247746E65696C63 && a2 == 0xED0000644970756FLL;
              if (v11 || (sub_253B0A4C0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                BOOL v12 = a1 == 0x6E696F70656D6974 && a2 == 0xE900000000000074;
                if (v12 || (sub_253B0A4C0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  BOOL v13 = a1 == 0x7265646E6573 && a2 == 0xE600000000000000;
                  if (v13 || (sub_253B0A4C0() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 9;
                  }
                  else
                  {
                    BOOL v14 = a1 == 0x53676E6974736F70 && a2 == 0xEB000000006E6170;
                    if (v14 || (sub_253B0A4C0() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 10;
                    }
                    else if (a1 == 0x6574616974696E69 && a2 == 0xEE00736E61705364)
                    {
                      swift_bridgeObjectRelease();
                      return 11;
                    }
                    else
                    {
                      char v16 = sub_253B0A4C0();
                      swift_bridgeObjectRelease();
                      if (v16) {
                        return 11;
                      }
                      else {
                        return 12;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_25399C6F4()
{
  return 12;
}

unint64_t sub_25399C6FC(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x496E6F6973736573;
      break;
    case 2:
      unint64_t result = 0x6576457972657571;
      break;
    case 3:
      unint64_t result = 0x64616F6C796170;
      break;
    case 4:
      unint64_t result = 0x6552746E65696C63;
      break;
    case 5:
      unint64_t result = 0x6553746E65696C63;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0x7247746E65696C63;
      break;
    case 8:
      unint64_t result = 0x6E696F70656D6974;
      break;
    case 9:
      unint64_t result = 0x7265646E6573;
      break;
    case 10:
      unint64_t result = 0x53676E6974736F70;
      break;
    case 11:
      unint64_t result = 0x6574616974696E69;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25399C8B0()
{
  return sub_25399C6FC(*v0);
}

uint64_t sub_25399C8B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25399C198(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25399C8E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25399C6F4();
  *a1 = result;
  return result;
}

uint64_t sub_25399C908(uint64_t a1)
{
  unint64_t v2 = sub_2539EBA30();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25399C944(uint64_t a1)
{
  unint64_t v2 = sub_2539EBA30();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Session.Event.encode(to:)()
{
  sub_2534847F8();
  sub_253A3BD30();
  sub_253462A5C(&qword_26B241278);
  sub_253465998();
  MEMORY[0x270FA5388](v1);
  sub_25397F66C();
  sub_2539EBA30();
  sub_2534DA3BC();
  sub_253B055C0();
  sub_2539E6F90((uint64_t)&qword_26B248CA0);
  sub_25397F654();
  if (!v0)
  {
    unint64_t v2 = (int *)type metadata accessor for Session.Event(0);
    sub_253A3EEC8();
    sub_25397F654();
    sub_253A3C9CC();
    sub_253A3E060();
    type metadata accessor for Session.Event.Payload(0);
    sub_2539E6F90((uint64_t)&unk_26B24A2A8);
    sub_25397F654();
    sub_253A3C68C();
    sub_25397F5D0();
    sub_25397F7C0(v2[9]);
    sub_25397F5D0();
    sub_25397F7C0(v2[10]);
    sub_25397F5D0();
    sub_25397F7C0(v2[11]);
    sub_25397F738();
    type metadata accessor for Timepoint();
    sub_2539E6F90((uint64_t)&qword_26B241260);
    sub_25397F654();
    sub_2539788D8();
    sub_253A3C9CC();
    sub_253A3F6E4();
    sub_253978924();
    sub_253A3C9CC();
    sub_253462A5C(&qword_26B24A380);
    sub_2539EBA7C();
    sub_25397F654();
  }
  sub_2534D9A08();
  v3();
  sub_253578DEC();
  sub_2534847C8();
}

void Session.Event.init(from:)()
{
  sub_2534847F8();
  BOOL v4 = v3;
  type metadata accessor for Timepoint();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = sub_253A3C264(v6, v37);
  type metadata accessor for Session.Event.Payload(v7);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v8);
  sub_2534D9B90(v9, v38);
  uint64_t v10 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  sub_25397F55C();
  uint64_t v12 = sub_253B055C0();
  sub_253465998();
  MEMORY[0x270FA5388](v13);
  sub_253578D44();
  MEMORY[0x270FA5388](v14);
  sub_2534B35DC();
  sub_253462A5C(&qword_269CE5C80);
  sub_253465998();
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_2534D8CAC();
  uint64_t v17 = (int *)type metadata accessor for Session.Event(v16);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v18);
  sub_253A3C52C();
  uint64_t v45 = v2 + v19;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v2 + v19, 1, 1, v12);
  uint64_t v20 = (uint64_t *)(v2 + v17[11]);
  *uint64_t v20 = 0;
  v20[1] = 0;
  uint64_t v44 = v20;
  uint64_t v21 = (void *)(v2 + v17[13]);
  void *v21 = 0;
  v21[1] = 0;
  uint64_t v43 = v21;
  uint64_t v22 = v2 + v17[14];
  *(void *)uint64_t v22 = 0;
  *(unsigned char *)(v22 + 8) = 1;
  uint64_t v42 = (uint64_t)v4;
  sub_2534F8630(v4);
  sub_2539EBA30();
  sub_253A3E178();
  sub_253B0A660();
  if (v1)
  {
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v4);
    sub_253472458(v45, (uint64_t *)&unk_26B248CB0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2539E6F90((uint64_t)&qword_269CDBCC8);
    sub_253A3F44C();
    uint64_t v23 = sub_253579258();
    uint64_t v41 = v24;
    ((void (*)(uint64_t))v24)(v23);
    sub_253A3DA68();
    sub_253A3F44C();
    sub_253A3F548();
    v41();
    sub_253B0A310();
    sub_2539F0BE0(v0, v45, (uint64_t *)&unk_26B248CB0);
    sub_2539E6F90((uint64_t)&unk_269CE5C88);
    sub_253A3CA4C();
    sub_253B0A370();
    sub_2539DF5B8(v40, v17[7]);
    uint64_t v25 = sub_253A3D278(4);
    sub_253A3EF9C(v25, v26, v17[8]);
    uint64_t v27 = sub_253A3D278(5);
    sub_253A3EF9C(v27, v28, v17[9]);
    uint64_t v29 = sub_253A3D278(6);
    sub_253A3EF9C(v29, v30, v17[10]);
    uint64_t v31 = sub_253B0A2E0();
    uint64_t v33 = v32;
    swift_bridgeObjectRelease();
    *uint64_t v44 = v31;
    v44[1] = v33;
    LOBYTE(v46) = 8;
    sub_2539E6F90((uint64_t)&qword_269CE5370);
    sub_253A3CA4C();
    sub_253B0A370();
    sub_2539DF5B8(v39, v2 + v17[12]);
    sub_2539789C0();
    sub_253A3E4FC();
    sub_253B0A310();
    swift_bridgeObjectRelease();
    *uint64_t v43 = v46;
    v43[1] = v47;
    sub_253978A0C();
    sub_253A3E4FC();
    sub_253B0A310();
    *(void *)uint64_t v22 = v46;
    *(unsigned char *)(v22 + 8) = v47;
    sub_253462A5C(&qword_26B24A380);
    sub_2539EBA7C();
    sub_253A3EDDC();
    sub_253B0A370();
    sub_2534659CC();
    v34();
    *(void *)v17[15] = v46;
    uint64_t v35 = sub_253A3C000();
    sub_2539DF660(v35, v36);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v42);
    sub_2539DF610();
  }
  sub_2534F856C();
  sub_2534847C8();
}

void sub_25399D62C()
{
}

void sub_25399D644()
{
}

void Session.Plan.init(prompt:promptResponse:statements:overrideId:source:program:)()
{
  sub_2534B3258();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  sub_253A3B8FC();
  swift_bridgeObjectRelease();
  char v13 = *v6;
  *(void *)uint64_t v4 = v3;
  *(void *)(v4 + 8) = v2;
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v0;
  *(void *)(v4 + 32) = v12;
  *(void *)(v4 + 40) = v10;
  *(void *)(v4 + 48) = v8;
  *(unsigned char *)(v4 + 56) = v13;
  sub_253465A14();
}

void __swiftcall Session.Plan.init(prompt:promptResponse:statements:overrideId:)(IntelligenceFlowPlannerSupport::Session::Plan *__return_ptr retstr, Swift::String prompt, Swift::String promptResponse, Swift::OpaquePointer statements, Swift::String_optional overrideId)
{
  retstr->prompt = prompt;
  retstr->promptResponse = promptResponse;
  retstr->statements = statements;
  retstr->overrideId = overrideId;
  sub_253A3ECAC((uint64_t)retstr);
}

void __swiftcall Session.Plan.init(prompt:promptResponse:statements:)(IntelligenceFlowPlannerSupport::Session::Plan *__return_ptr retstr, Swift::String prompt, Swift::String promptResponse, Swift::OpaquePointer statements)
{
  retstr->prompt = prompt;
  retstr->promptResponse = promptResponse;
  retstr->overrideId.value._countAndFlagsBits = 0;
  retstr->overrideId.value._object = 0;
  retstr->statements = statements;
  sub_253A3ECAC((uint64_t)retstr);
}

void Session.Plan.init(prompt:promptResponse:statements:decompositionResult:decomposedQueries:program:expressions:tools:types:overrideId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  sub_25394599C();
  uint64_t v34 = v33;
  uint64_t v37 = v35;
  uint64_t v38 = v36;
  sub_253945FF4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2539EBAF4(*v34, v34[1], v34[2]);
  *(void *)uint64_t v32 = v31;
  *(void *)(v32 + 8) = v30;
  *(void *)(v32 + 16) = v29;
  *(void *)(v32 + 24) = v37;
  *(void *)(v32 + 32) = v38;
  *(void *)(v32 + 40) = a28;
  *(void *)(v32 + 48) = a29;
  *(unsigned char *)(v32 + 56) = 2;
  sub_2535268E0();
}

void Session.Plan.init(prompt:promptResponse:statements:decompositionResult:decomposedQueries:program:expressions:tools:types:)()
{
  sub_2535E2390();
  uint64_t v5 = v4;
  uint64_t v12 = v6;
  uint64_t v8 = v7;
  sub_253945FF4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = *v5;
  uint64_t v10 = v5[1];
  uint64_t v11 = v5[2];
  swift_bridgeObjectRelease();
  sub_2539EBAF4(v9, v10, v11);
  *(void *)uint64_t v3 = v2;
  *(void *)(v3 + 8) = v1;
  *(void *)(v3 + 16) = v0;
  *(void *)(v3 + 24) = v8;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 32) = v12;
  *(unsigned char *)(v3 + 56) = 2;
  sub_2535E2374();
}

void Session.Plan.init(decompositionResult:decomposedQueries:prompt:promptResponse:program:expressions:tools:types:)()
{
  sub_2534B3258();
  uint64_t v6 = v5;
  sub_253A3E218();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2539EBAF4(*v3, v3[1], v3[2]);
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = v1;
  uint64_t v7 = MEMORY[0x263F8EE78];
  *(void *)(v4 + 16) = v0;
  *(void *)(v4 + 24) = v6;
  *(void *)(v4 + 40) = 0;
  *(void *)(v4 + 48) = 0;
  *(void *)(v4 + 32) = v7;
  *(unsigned char *)(v4 + 56) = 2;
  sub_253465A14();
}

uint64_t sub_25399D8CC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000017 && a2 == 0x8000000253B12E90 || (sub_253B0A4C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x7265764F6E616C70 && a2 == 0xEC00000065646972;
    if (v5 || (sub_253B0A4C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E616C506C6C7566 && a2 == 0xEB0000000072656ELL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v7 = sub_253B0A4C0();
      swift_bridgeObjectRelease();
      if (v7) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_25399DA48(char a1)
{
  if (!a1) {
    return 0xD000000000000017;
  }
  if (a1 == 1) {
    return 0x7265764F6E616C70;
  }
  return 0x6E616C506C6C7566;
}

uint64_t sub_25399DAB4()
{
  return sub_25399DA48(*v0);
}

uint64_t sub_25399DABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25399D8CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25399DAE4(uint64_t a1)
{
  unint64_t v2 = sub_2539EBB38();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25399DB20(uint64_t a1)
{
  unint64_t v2 = sub_2539EBB38();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25399DB5C(uint64_t a1)
{
  unint64_t v2 = sub_2539EBB84();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25399DB98(uint64_t a1)
{
  unint64_t v2 = sub_2539EBB84();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25399DBD4(uint64_t a1)
{
  unint64_t v2 = sub_2539EBBD0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25399DC10(uint64_t a1)
{
  unint64_t v2 = sub_2539EBBD0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25399DC4C(uint64_t a1)
{
  unint64_t v2 = sub_2539EBC1C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25399DC88(uint64_t a1)
{
  unint64_t v2 = sub_2539EBC1C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Session.Plan.Source.encode(to:)()
{
  sub_2534847F8();
  sub_253A3E9C8();
  sub_253462A5C(&qword_269CE5C98);
  sub_253465998();
  MEMORY[0x270FA5388](v1);
  sub_2534AF2A0(v2, v17);
  sub_253462A5C(&qword_269CE5CA0);
  sub_253465998();
  MEMORY[0x270FA5388](v3);
  sub_2534B34A4();
  sub_253462A5C(&qword_269CE5CA8);
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_253465A3C();
  sub_253462A5C(&qword_269CE5CB0);
  sub_253465998();
  MEMORY[0x270FA5388](v5);
  int v6 = *v0;
  sub_253A3BED4();
  sub_2539EBB38();
  sub_253A3F148();
  if (v6)
  {
    if (v6 == 1)
    {
      sub_2539EBBD0();
      sub_253A3BD18();
      sub_2534D9AD0();
    }
    else
    {
      sub_2539EBB84();
      sub_253A3BD18();
      sub_2534D8E50();
    }
  }
  else
  {
    sub_2539EBC1C();
    sub_253A3BD18();
  }
  sub_2534659CC();
  v11(v7, v8, v9, v10);
  sub_2534DA4BC();
  v16(v12, v13, v14, v15);
  sub_253A3F5C8();
  sub_2534847C8();
}

void Session.Plan.Source.init(from:)()
{
  sub_2534847F8();
  uint64_t v43 = v0;
  uint64_t v2 = v1;
  uint64_t v41 = v3;
  sub_253462A5C(&qword_269CE5CD8);
  sub_253465998();
  uint64_t v39 = v4;
  uint64_t v40 = v5;
  MEMORY[0x270FA5388](v4);
  sub_2534D92D4(v6, v37[0]);
  sub_253462A5C(&qword_269CE5CE0);
  sub_253465998();
  v37[6] = v7;
  uint64_t v38 = v8;
  MEMORY[0x270FA5388](v7);
  sub_2534B3294();
  uint64_t v9 = (unsigned char *)sub_253462A5C(&qword_269CE5CE8);
  sub_253465998();
  v37[5] = v10;
  MEMORY[0x270FA5388](v11);
  sub_25346CC6C();
  sub_253462A5C(&qword_269CE5CF0);
  sub_253465998();
  uint64_t v42 = v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v2[4];
  sub_2534F8630(v2);
  sub_2539EBB38();
  sub_253A3E4B4();
  if (v0) {
    goto LABEL_8;
  }
  sub_253A3D9F0();
  sub_253A3E90C();
  if (!v17 || (uint64_t v18 = sub_253A3C8D0(), sub_25347B78C(v18, v19, v20, v21, v22, v23), sub_253A3F860(), v16))
  {
    sub_253B0A090();
    sub_2534D969C();
    uint64_t v28 = v27;
    sub_253462A5C(&qword_269CDB688);
    *uint64_t v28 = &type metadata for Session.Plan.Source;
    sub_253B0A2D0();
    sub_2534D8FF4();
    sub_25347B88C();
    sub_25346CCF8();
    v29();
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v30 = sub_25349C5B8();
    v31(v30);
    uint64_t v2 = v43;
LABEL_8:
    uint64_t v32 = (uint64_t)v2;
    goto LABEL_9;
  }
  char v24 = (char)v15;
  if (v15)
  {
    if (v15 == 1)
    {
      sub_2539EBBD0();
      sub_2534F8800();
      sub_253A3D4D4();
      sub_2534659CC();
      v25();
      swift_unknownObjectRelease();
      sub_2534B3470();
      v26();
    }
    else
    {
      LODWORD(v38) = v15;
      sub_2539EBB84();
      sub_2534F8800();
      sub_253A3D4D4();
      sub_2534659CC();
      v35();
      swift_unknownObjectRelease();
      sub_2534B3470();
      v36();
      char v24 = v38;
    }
  }
  else
  {
    sub_2539EBC1C();
    sub_2534F8800();
    sub_2534659CC();
    v33();
    swift_unknownObjectRelease();
    sub_2534659CC();
    v34();
    uint64_t v9 = v41;
  }
  unsigned char *v9 = v24;
  uint64_t v32 = (uint64_t)v43;
LABEL_9:
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v32);
  sub_2534F856C();
  sub_2534847C8();
}

void sub_25399E2EC()
{
}

void sub_25399E304()
{
}

uint64_t Session.Plan.DecompositionResult.prompt.getter()
{
  return sub_2534ACF74();
}

uint64_t static Session.Plan.DecompositionResult.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v2)
    {
      sub_253A3E3D8(a1);
      BOOL v5 = v5 && v3 == v4;
      if (v5 || (sub_253B0A4C0() & 1) != 0) {
        goto LABEL_8;
      }
    }
    return 0;
  }
  if (v2) {
    return 0;
  }
LABEL_8:
  uint64_t v6 = (void *)sub_2534ACF74();
  return sub_2534B5C40(v6, v7);
}

uint64_t sub_25399E3B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74706D6F7270 && a2 == 0xE600000000000000;
  if (v2 || (sub_253B0A4C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73656972657571 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_253B0A4C0();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25399E49C(char a1)
{
  if (a1) {
    return 0x73656972657571;
  }
  else {
    return 0x74706D6F7270;
  }
}

uint64_t sub_25399E4D0()
{
  return sub_25399E49C(*v0);
}

uint64_t sub_25399E4D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25399E3B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25399E500(uint64_t a1)
{
  unint64_t v2 = sub_2539EBC68();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25399E53C(uint64_t a1)
{
  unint64_t v2 = sub_2539EBC68();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Session.Plan.DecompositionResult.encode(to:)()
{
}

void Session.Plan.DecompositionResult.init(from:)()
{
  sub_2534847F8();
  sub_253A3C3A8();
  sub_253462A5C(&qword_269CE5D08);
  sub_253465998();
  MEMORY[0x270FA5388](v3);
  sub_2534F83CC();
  sub_2539EBC68();
  sub_2534F8738();
  if (v1)
  {
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v0);
  }
  else
  {
    uint64_t v4 = sub_253A3CCFC();
    uint64_t v6 = v5;
    sub_253462A5C(&qword_269CDC550);
    sub_25351C8C4();
    sub_2535443D4((uint64_t)&qword_269CDE0C0);
    sub_253A3F624();
    sub_253B0A370();
    sub_2534D9A08();
    v7();
    *unint64_t v2 = v4;
    v2[1] = v6;
    v2[2] = v8;
    swift_bridgeObjectRetain();
    sub_253A3C00C();
    swift_bridgeObjectRelease();
  }
  sub_253579494();
  sub_2534847C8();
}

void sub_25399E75C()
{
}

void sub_25399E774()
{
}

uint64_t Session.Plan.prompt.getter()
{
  return sub_2534ACF74();
}

uint64_t Session.Plan.promptResponse.getter()
{
  return sub_2534ACF74();
}

uint64_t Session.Plan.statements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Session.Plan.overrideId.getter()
{
  return sub_2534ACF74();
}

void Session.Plan.source.getter(unsigned char *a1@<X8>)
{
}

uint64_t Session.Plan.description.getter()
{
  sub_253B0A000();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_253A3ECF8();
  uint64_t v1 = type metadata accessor for ProgramStatement(v0);
  uint64_t v2 = swift_bridgeObjectRetain();
  MEMORY[0x25A268A80](v2, v1);
  sub_253B09860();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_253A3CE2C();
  swift_bridgeObjectRetain();
  sub_253A3F60C();
  swift_bridgeObjectRelease();
  sub_253A3CE2C();
  sub_253B09730();
  sub_253B09860();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_25399E934(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74706D6F7270 && a2 == 0xE600000000000000;
  if (v2 || (sub_253B0A4C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x655274706D6F7270 && a2 == 0xEE0065736E6F7073;
    if (v6 || (sub_253B0A4C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6E656D6574617473 && a2 == 0xEA00000000007374;
      if (v7 || (sub_253B0A4C0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x656469727265766FLL && a2 == 0xEA00000000006449;
        if (v8 || (sub_253B0A4C0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v10 = sub_253B0A4C0();
          swift_bridgeObjectRelease();
          if (v10) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

uint64_t sub_25399EB68(char a1)
{
  uint64_t result = 0x74706D6F7270;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x655274706D6F7270;
      break;
    case 2:
      uint64_t result = 0x6E656D6574617473;
      break;
    case 3:
      uint64_t result = 0x656469727265766FLL;
      break;
    case 4:
      uint64_t result = 0x656372756F73;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25399EC24()
{
  return sub_25399EB68(*v0);
}

uint64_t sub_25399EC2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25399E934(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25399EC54(uint64_t a1)
{
  unint64_t v2 = sub_2539EBCB4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25399EC90(uint64_t a1)
{
  unint64_t v2 = sub_2539EBCB4();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Session.Plan.encode(to:)()
{
  sub_2534847F8();
  unint64_t v2 = v1;
  sub_253462A5C(&qword_269CE5D10);
  sub_253465998();
  MEMORY[0x270FA5388](v3);
  sub_253A3D0C0();
  sub_2534D9A50(v2);
  sub_2539EBCB4();
  sub_253A3D7E4();
  sub_2534DA154();
  sub_253B0A3F0();
  if (!v0)
  {
    sub_25397F5D0();
    sub_253A3C6A0();
    sub_253462A5C(&qword_269CE5D20);
    sub_2539EBD00();
    sub_25397F654();
    sub_2534D9840();
    sub_25397F738();
    sub_2539EBDA4();
    sub_25397F654();
  }
  sub_2534D91A0();
  v4();
  sub_253578DEC();
  sub_2534847C8();
}

void Session.Plan.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, char a11, char a12)
{
  sub_2534847F8();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  sub_253462A5C(&qword_269CE5D40);
  sub_253465998();
  MEMORY[0x270FA5388](v17);
  sub_25347FAAC();
  sub_253A3B978(v14);
  sub_2539EBCB4();
  sub_253A3E264();
  sub_253B0A660();
  if (v12)
  {
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v14);
  }
  else
  {
    sub_253A3EE54();
    uint64_t v27 = sub_253B0A320();
    sub_25351C8C4();
    uint64_t v19 = v18;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_253B0A320();
    uint64_t v28 = v21;
    uint64_t v26 = v20;
    sub_253462A5C(&qword_269CE5D20);
    sub_253A3C6A0();
    sub_2539EBDF0();
    swift_bridgeObjectRetain();
    sub_253B0A370();
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_253B0A2E0();
    uint64_t v23 = v22;
    sub_2539EBE94();
    swift_bridgeObjectRetain();
    sub_253B0A370();
    sub_2534F85D4();
    v24();
    *(void *)uint64_t v16 = v27;
    *(void *)(v16 + 8) = v19;
    *(void *)(v16 + 16) = v26;
    *(void *)(v16 + 24) = v28;
    *(void *)(v16 + 32) = v29;
    *(void *)(v16 + 40) = v25;
    *(void *)(v16 + 48) = v23;
    *(unsigned char *)(v16 + 56) = a12;
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_253579494();
  sub_2534847C8();
}

void sub_25399F20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  Session.Plan.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SBYTE2(vars8), SHIBYTE(vars8));
}

void sub_25399F224()
{
}

void static Session.PlanGenerationError.== infix(_:_:)()
{
  sub_2535B3C98();
  sub_253A3BC4C(v8);
  BOOL v11 = v11 && v9 == v10;
  if (v11 || (sub_253B0A4C0() & 1) != 0)
  {
    BOOL v12 = v4 == v6 && v5 == v7;
    if (v12 || (sub_253A3BE14()) && (v0 != v2 || v1 != v3)) {
      sub_253A3E160();
    }
  }
  sub_25346CD04();
}

uint64_t sub_25399F2C8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x8000000253B119B0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_253B0A4C0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_25399F350()
{
  return 0xD000000000000013;
}

uint64_t sub_25399F370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25399F2C8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25399F39C(uint64_t a1)
{
  unint64_t v2 = sub_2539EBEE0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25399F3D8(uint64_t a1)
{
  unint64_t v2 = sub_2539EBEE0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25399F414(uint64_t a1)
{
  unint64_t v2 = sub_2539EBF2C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25399F450(uint64_t a1)
{
  unint64_t v2 = sub_2539EBF2C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Session.RecoverableError.encode(to:)()
{
  sub_2534847F8();
  uint64_t v1 = v0;
  sub_253462A5C(&qword_269CE5D60);
  sub_253465998();
  MEMORY[0x270FA5388](v2);
  sub_253465A3C();
  sub_253462A5C(&qword_269CE5D68);
  sub_253465998();
  MEMORY[0x270FA5388](v3);
  sub_253A3BEA4(v1);
  sub_2539EBEE0();
  sub_253A3D7C8();
  sub_2539EBF2C();
  sub_253A3BFC0();
  sub_253A3D9C8();
  sub_2539EBF78();
  sub_253A3DFB8();
  sub_2534D91AC();
  v4();
  sub_2534B3470();
  v5();
  sub_2534F8A10();
  sub_2534847C8();
}

void Session.RecoverableError.init(from:)()
{
  sub_2534847F8();
  uint64_t v2 = v1;
  sub_253462A5C(&qword_269CE5D88);
  sub_253465998();
  MEMORY[0x270FA5388](v3);
  sub_253465A3C();
  sub_253462A5C(&qword_269CE5D90);
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = v2[3];
  uint64_t v5 = v2[4];
  sub_2534D9A50(v2);
  sub_2539EBEE0();
  sub_253A3DADC();
  if (!v0)
  {
    unint64_t v20 = v6;
    if (*(void *)(sub_253A3F3E0() + 16)
      && (uint64_t v7 = sub_253A3DECC(), sub_25347B78C(v7, v8, v9, v10, v11, v12), sub_253A3F880(), v5 == v6 >> 1))
    {
      sub_2539EBF2C();
      sub_253A3E960();
      sub_2539EBFC4();
      sub_253A3E58C();
      sub_2534659CC();
      v18();
      swift_unknownObjectRelease();
      sub_2534659CC();
      v19();
      sub_253A3DFA0();
    }
    else
    {
      sub_253A3E13C();
      sub_2534D969C();
      uint64_t v14 = v13;
      sub_253462A5C(&qword_269CDB688);
      *uint64_t v14 = &type metadata for Session.RecoverableError;
      sub_253B0A2D0();
      sub_2534D8FF4();
      sub_25347B88C();
      sub_25346CCF8();
      v15();
      swift_willThrow();
      swift_unknownObjectRelease();
      uint64_t v16 = sub_253A3EBE4();
      v17(v16);
      unint64_t v6 = v20;
    }
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v6);
  sub_253A3C6AC();
  sub_2534847C8();
}

void sub_25399F8B8()
{
}

void sub_25399F8D0()
{
}

void static Session.PlanGenerationModelOutputError.== infix(_:_:)()
{
  sub_2535B3C98();
  sub_253A3BC4C(v8);
  BOOL v11 = v11 && v9 == v10;
  if (v11 || (sub_253B0A4C0(), sub_25397F648(), (v12))
    && (v4 == v6 ? (BOOL v13 = v5 == v7) : (BOOL v13 = 0),
        (v13 || (sub_253A3BE14(), sub_25397F648(), (v14 & 1) != 0)) && (v0 == v2 ? (BOOL v15 = v1 == v3) : (BOOL v15 = 0), !v15)))
  {
    sub_25346CD04();
    sub_253B0A4C0();
  }
  else
  {
    sub_25346CD04();
  }
}

uint64_t sub_25399F994(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x8000000253B11990)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_253B0A4C0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_25399FA1C()
{
  return 0xD000000000000010;
}

uint64_t sub_25399FA3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25399F994(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25399FA68(uint64_t a1)
{
  unint64_t v2 = sub_2539EC010();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25399FAA4(uint64_t a1)
{
  unint64_t v2 = sub_2539EC010();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25399FAE0(uint64_t a1)
{
  unint64_t v2 = sub_2539EC05C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25399FB1C(uint64_t a1)
{
  unint64_t v2 = sub_2539EC05C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Session.PlanGenerationError.encode(to:)()
{
  sub_2534847F8();
  uint64_t v1 = v0;
  sub_253462A5C(&qword_269CE5DA0);
  sub_253465998();
  MEMORY[0x270FA5388](v2);
  sub_253465A3C();
  sub_253462A5C(&qword_269CE5DA8);
  sub_253465998();
  MEMORY[0x270FA5388](v3);
  sub_253A3BEA4(v1);
  sub_2539EC010();
  sub_253A3D7C8();
  sub_2539EC05C();
  sub_253A3BFC0();
  sub_253A3D9C8();
  sub_2539EC0A8();
  sub_253A3DFB8();
  sub_2534D91AC();
  v4();
  sub_2534B3470();
  v5();
  sub_2534F8A10();
  sub_2534847C8();
}

void Session.PlanGenerationError.init(from:)()
{
  sub_2534847F8();
  uint64_t v2 = v1;
  sub_253462A5C(&qword_269CE5DC8);
  sub_253465998();
  MEMORY[0x270FA5388](v3);
  sub_253465A3C();
  sub_253462A5C(&qword_269CE5DD0);
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = v2[3];
  uint64_t v5 = v2[4];
  sub_2534D9A50(v2);
  sub_2539EC010();
  sub_253A3DADC();
  if (!v0)
  {
    unint64_t v20 = v6;
    if (*(void *)(sub_253A3F3E0() + 16)
      && (uint64_t v7 = sub_253A3DECC(), sub_25347B78C(v7, v8, v9, v10, v11, v12), sub_253A3F880(), v5 == v6 >> 1))
    {
      sub_2539EC05C();
      sub_253A3E960();
      sub_2539EC0F4();
      sub_253A3E58C();
      sub_2534659CC();
      v18();
      swift_unknownObjectRelease();
      sub_2534659CC();
      v19();
      sub_253A3DFA0();
    }
    else
    {
      sub_253A3E13C();
      sub_2534D969C();
      char v14 = v13;
      sub_253462A5C(&qword_269CDB688);
      *char v14 = &type metadata for Session.PlanGenerationError;
      sub_253B0A2D0();
      sub_2534D8FF4();
      sub_25347B88C();
      sub_25346CCF8();
      v15();
      swift_willThrow();
      swift_unknownObjectRelease();
      uint64_t v16 = sub_253A3EBE4();
      v17(v16);
      unint64_t v6 = v20;
    }
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v6);
  sub_253A3C6AC();
  sub_2534847C8();
}

void sub_25399FF84()
{
}

void sub_25399FF9C()
{
}

uint64_t Session.PlanGenerationModelOutputError.rawModelOutput.getter()
{
  return sub_2534ACF74();
}

uint64_t Session.PlanGenerationModelOutputError.rawModelOutput.setter()
{
  uint64_t result = sub_253A3BB84();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*Session.PlanGenerationModelOutputError.rawModelOutput.modify())()
{
  return nullsub_1;
}

uint64_t Session.PlanGenerationModelOutputError.prompt.getter()
{
  return sub_2534ACF74();
}

uint64_t Session.PlanGenerationModelOutputError.prompt.setter()
{
  uint64_t result = sub_253A3EBA4();
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v0;
  return result;
}

uint64_t (*Session.PlanGenerationModelOutputError.prompt.modify())()
{
  return nullsub_1;
}

uint64_t Session.PlanGenerationModelOutputError.errorDescription.getter()
{
  return sub_2534ACF74();
}

uint64_t Session.PlanGenerationModelOutputError.errorDescription.setter()
{
  sub_2535E24E8();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v0;
  return result;
}

uint64_t (*Session.PlanGenerationModelOutputError.errorDescription.modify())()
{
  return nullsub_1;
}

void __swiftcall Session.PlanGenerationModelOutputError.init(rawModelOutput:prompt:errorDescription:)(IntelligenceFlowPlannerSupport::Session::PlanGenerationModelOutputError *__return_ptr retstr, Swift::String rawModelOutput, Swift::String prompt, Swift::String errorDescription)
{
  retstr->rawModeluint64_t Output = rawModelOutput;
  retstr->prompt = prompt;
  retstr->errorDescription = errorDescription;
}

uint64_t sub_2539A0128(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C65646F4D776172 && a2 == 0xEE0074757074754FLL;
  if (v2 || (sub_253B0A4C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x74706D6F7270 && a2 == 0xE600000000000000;
    if (v6 || (sub_253B0A4C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x8000000253B11970)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v7 = sub_253B0A4C0();
      swift_bridgeObjectRelease();
      if (v7) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_2539A0294(char a1)
{
  if (!a1) {
    return 0x6C65646F4D776172;
  }
  if (a1 == 1) {
    return 0x74706D6F7270;
  }
  return 0xD000000000000010;
}

uint64_t sub_2539A02F8()
{
  return sub_2539A0294(*v0);
}

uint64_t sub_2539A0300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2539A0128(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2539A0328(uint64_t a1)
{
  unint64_t v2 = sub_2539EC140();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A0364(uint64_t a1)
{
  unint64_t v2 = sub_2539EC140();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Session.PlanGenerationModelOutputError.encode(to:)()
{
  sub_2534847F8();
  sub_253A3E9D8();
  sub_253462A5C(&qword_269CE5DE0);
  sub_253465998();
  MEMORY[0x270FA5388](v1);
  sub_253A3D0C0();
  sub_2534D9A50(v0);
  sub_2539EC140();
  sub_253A3D7E4();
  sub_2534DA154();
  sub_253B0A3F0();
  if (!v3)
  {
    sub_253A3EEDC();
    sub_253B0A3F0();
    sub_253578D2C();
    sub_253B0A3F0();
  }
  sub_2534B3470();
  v2();
  sub_253578DEC();
  sub_2534847C8();
}

void Session.PlanGenerationModelOutputError.init(from:)()
{
  sub_2534847F8();
  sub_253A3C3A8();
  sub_253462A5C(&qword_269CE5DF0);
  sub_253465998();
  MEMORY[0x270FA5388](v3);
  sub_2534966B0();
  sub_2534F8328(v0);
  sub_2539EC140();
  sub_253B0A660();
  if (v1)
  {
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v0);
  }
  else
  {
    uint64_t v4 = sub_253B0A320();
    uint64_t v6 = v5;
    uint64_t v17 = v4;
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_253B0A320();
    uint64_t v9 = v8;
    uint64_t v15 = v7;
    sub_253A3C6A0();
    swift_bridgeObjectRetain();
    uint64_t v16 = v9;
    uint64_t v10 = sub_253B0A320();
    uint64_t v12 = v11;
    uint64_t v13 = v10;
    sub_2534D9A08();
    v14();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *unint64_t v2 = v17;
    v2[1] = v6;
    v2[2] = v15;
    v2[3] = v16;
    v2[4] = v13;
    v2[5] = v12;
    sub_253A3C00C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_253579494();
  sub_2534847C8();
}

void sub_2539A06F4()
{
}

void sub_2539A070C()
{
}

uint64_t static SaltedLoggingIDScope.session(_:)()
{
  type metadata accessor for Session.Event(0);
  sub_253A3DAC0();
  if (v0) {
    swift_bridgeObjectRetain();
  }
  else {
    sub_253B05570();
  }
  sub_253B06CA0();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t vars8;

  uint64_t v0 = sub_2534F8A1C();
  type metadata accessor for Session.Transcript(v0);
  sub_253A3DAC0();
  if (v1) {
    swift_bridgeObjectRetain();
  }
  else {
    sub_253B05570();
  }
  sub_253B06CA0();
  return swift_bridgeObjectRelease();
}

uint64_t SessionStart.initialLocaleSettings.getter()
{
  return sub_2539DE358();
}

uint64_t SessionStart.initialLocaleSettings.setter()
{
  return sub_2539DE3D0();
}

uint64_t (*SessionStart.initialLocaleSettings.modify())()
{
  return nullsub_1;
}

uint64_t SessionStart.originatingDevice.getter()
{
  return sub_2539A9600();
}

uint64_t SessionStart.originatingDevice.setter()
{
  return sub_2539A9658();
}

uint64_t (*SessionStart.originatingDevice.modify())()
{
  uint64_t v0 = sub_2534D9690();
  type metadata accessor for SessionStart(v0);
  sub_2534F87A4();
  return nullsub_1;
}

void SessionStart.init(initialLocaleSettings:originatingDevice:)()
{
}

void sub_2539A0940()
{
  sub_2535B3C98();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = sub_253A3D4E4();
  uint64_t v10 = v1 + *(int *)(v9(v8) + 20);
  uint64_t v11 = v7(0);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v10, 1, 1, v11);
  v5(0);
  sub_25346CAF4();
  sub_2534D8E14();
  v12();
  sub_2539F0BE0(v0, v10, v3);
  sub_25346CD04();
}

void SessionStart.init(config:)()
{
  sub_2534B3258();
  uint64_t v5 = v4;
  uint64_t v45 = v6;
  uint64_t v43 = type metadata accessor for SessionStart(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v7);
  sub_2534D92D4(v8, v38[0]);
  uint64_t v9 = sub_253462A5C(&qword_26B248CE8);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  sub_2534B33AC();
  sub_253B05D70();
  sub_253465998();
  uint64_t v41 = v12;
  uint64_t v42 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v40 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253483660();
  uint64_t v14 = sub_253B05CB0();
  sub_253465998();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  sub_2535B38D8();
  MEMORY[0x270FA5388](v18);
  sub_2534D9E98();
  uint64_t v19 = sub_253462A5C(&qword_26B248CD0);
  uint64_t v20 = sub_25346CB4C(v19);
  MEMORY[0x270FA5388](v20);
  sub_2534659D8();
  uint64_t v39 = v21;
  sub_2534B324C();
  MEMORY[0x270FA5388](v22);
  sub_2534F8600();
  MEMORY[0x270FA5388](v23);
  sub_253A3B9E4();
  MEMORY[0x270FA5388](v24);
  sub_2535B3D6C();
  sub_253B06CF0();
  uint64_t v25 = 1;
  sub_2534D8B48(v0, 1, v14);
  if (!v26)
  {
    v38[2] = v5;
    sub_2536D3880();
    sub_2534AF234();
    v27();
    sub_253B05CA0();
    sub_2539E6F90((uint64_t)&unk_269CE56E8);
    sub_253579258();
    char v28 = sub_253B096B0();
    v38[1] = v16;
    uint64_t v29 = *(void (**)(void))(v16 + 8);
    sub_253579264();
    sub_2534D91A0();
    v29();
    sub_2534D91A0();
    v29();
    if (v28)
    {
      sub_2534D91A0();
      v29();
      uint64_t v25 = 1;
    }
    else
    {
      sub_2534D9B10();
      sub_2534D8E14();
      v30();
      uint64_t v25 = 0;
    }
  }
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v1, v25, 1, v14);
  sub_253961F14(v1, v3, &qword_26B248CD0);
  sub_253B06D00();
  sub_2534D8B48(v2, 1, v42);
  if (v26)
  {
    sub_253B05D60();
    sub_253472458(v2, &qword_26B248CE8);
  }
  else
  {
    uint64_t v31 = sub_253A3CBC4();
    v32(v31);
  }
  sub_253961F60(v3, v39, &qword_26B248CD0);
  uint64_t v33 = v44;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v44 + *(int *)(v43 + 20), 1, 1, v14);
  sub_253579334();
  sub_253A3F02C();
  v34();
  uint64_t v35 = sub_2534D9A78();
  sub_2539F0BE0(v35, v36, &qword_26B248CD0);
  sub_2539DF5B8(v33, v45);
  sub_253B06D10();
  sub_25346CAF4();
  sub_2534659CC();
  v37();
  sub_253472458(v3, &qword_26B248CD0);
  sub_253465A14();
}

uint64_t sub_2539A0DD8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x8000000253B12470 || (sub_253B0A4C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000253B12490)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_253B0A4C0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_2539A0EC4(char a1)
{
  if (a1) {
    return 0xD000000000000011;
  }
  else {
    return 0xD000000000000015;
  }
}

unint64_t sub_2539A0F00()
{
  return sub_2539A0EC4(*v0);
}

uint64_t sub_2539A0F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2539A0DD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2539A0F30(uint64_t a1)
{
  unint64_t v2 = sub_2539EC18C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A0F6C(uint64_t a1)
{
  unint64_t v2 = sub_2539EC18C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionStart.encode(to:)()
{
  sub_2535B45A0();
  sub_2534F8530();
  sub_253462A5C(&qword_26B24A3C8);
  sub_253465998();
  MEMORY[0x270FA5388](v1);
  sub_25397F66C();
  sub_2539EC18C();
  sub_2534DA3BC();
  sub_253A3DA44();
  sub_253B05D70();
  sub_2539E6F90((uint64_t)&unk_26B248CE0);
  sub_253A3B6D0();
  if (!v0)
  {
    type metadata accessor for SessionStart(0);
    sub_253A3B8BC();
    sub_253B05CB0();
    sub_2539E6F90((uint64_t)&unk_26B248CC8);
    sub_253A3BBB0();
  }
  uint64_t v2 = sub_2534F82A4();
  v3(v2);
  sub_2534F8864();
  sub_2535B4660();
}

void SessionStart.init(from:)()
{
  sub_2534847F8();
  sub_253A3E1D4(v3);
  uint64_t v4 = sub_253462A5C(&qword_26B248CD0);
  uint64_t v5 = sub_25346CB4C(v4);
  MEMORY[0x270FA5388](v5);
  sub_2534D8CAC();
  v19[4] = sub_253B05D70();
  sub_253465998();
  v19[2] = v6;
  MEMORY[0x270FA5388](v7);
  sub_253465A3C();
  v19[5] = sub_253462A5C(&qword_269CE5DF8);
  sub_253465998();
  v19[3] = v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_2534AF2D8();
  uint64_t v11 = type metadata accessor for SessionStart(v10);
  uint64_t v12 = sub_25346CB4C(v11);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v19 + *(int *)(v13 + 28) - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_253B05CB0();
  uint64_t v20 = v15;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 1, 1, v16);
  sub_2534F8630(v0);
  sub_2539EC18C();
  sub_253A3CC00();
  if (v1)
  {
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v0);
    sub_253472458((uint64_t)v20, &qword_26B248CD0);
  }
  else
  {
    sub_2539E6F90((uint64_t)&unk_269CE5E00);
    sub_253A3C0E4();
    sub_25347FA84();
    v17();
    sub_25351C8C4();
    sub_2539E6F90((uint64_t)&unk_269CE5E08);
    sub_253A3BF24();
    sub_2534659CC();
    v18();
    sub_2539F0BE0(v2, (uint64_t)v20, &qword_26B248CD0);
    sub_253A3F11C();
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v0);
    sub_2539DF610();
  }
  sub_2534F856C();
  sub_2534847C8();
}

void sub_2539A13DC()
{
}

void sub_2539A13F4()
{
}

uint64_t (*Request.content.modify())()
{
  return nullsub_1;
}

uint64_t Request.safetyMode.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Request(0) + 20));
}

uint64_t Request.safetyMode.setter(char a1)
{
  uint64_t result = type metadata accessor for Request(0);
  *(unsigned char *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*Request.safetyMode.modify())()
{
  return nullsub_1;
}

uint64_t Request.prescribedPlan.getter()
{
  return sub_2539A14E0();
}

uint64_t sub_2539A14E0()
{
  uint64_t v0 = sub_2535E2348();
  uint64_t v2 = v1(v0);
  return sub_253A3E364(*(int *)(v2 + 24));
}

uint64_t Request.prescribedPlan.setter()
{
  return sub_2539A1538();
}

uint64_t sub_2539A1538()
{
  uint64_t v0 = sub_2534D976C();
  v1(v0);
  uint64_t v2 = sub_253A3EFDC();
  return sub_2539F0BE0(v2, v3, v4);
}

uint64_t (*Request.prescribedPlan.modify())()
{
  return nullsub_1;
}

uint64_t Request.rewriteMetadataEventID.getter()
{
  return sub_2539A15D0();
}

uint64_t sub_2539A15D0()
{
  uint64_t v0 = sub_2535E2348();
  uint64_t v2 = v1(v0);
  return sub_253A3E364(*(int *)(v2 + 28));
}

uint64_t Request.rewriteMetadataEventID.setter(uint64_t a1)
{
  return sub_2539A1628(a1, (uint64_t)type metadata accessor for Request, (uint64_t *)&unk_26B248CB0);
}

uint64_t sub_2539A1628(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_2534D976C();
  v6(v5);
  sub_2535E2454();
  return sub_2539F0BE0(v3, v7, a3);
}

uint64_t (*Request.rewriteMetadataEventID.modify())()
{
  return nullsub_1;
}

uint64_t Request.rewriteMetadataInlined.getter()
{
  uint64_t v1 = sub_2534F8A1C();
  uint64_t v2 = type metadata accessor for Request(v1);
  uint64_t v3 = sub_253A3EDBC((uint64_t *)(v0 + *(int *)(v2 + 32)));
  return sub_25396DF48(v3, v4);
}

__n128 Request.rewriteMetadataInlined.setter()
{
  uint64_t v2 = sub_253A3F6D0();
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for Request(v2) + 32));
  sub_253961E88(*v3, v3[1]);
  __n128 result = v5;
  *(__n128 *)uint64_t v3 = v5;
  v3[2] = v0;
  return result;
}

uint64_t (*Request.rewriteMetadataInlined.modify())()
{
  return nullsub_1;
}

void Request.init(query:safetyMode:statementId:clientQueryId:)()
{
  sub_2534B3258();
  uint64_t v26 = v4;
  char v28 = v5;
  uint64_t v27 = v6;
  uint64_t v29 = v7;
  uint64_t v8 = type metadata accessor for Request(0);
  uint64_t v9 = (int *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  sub_25348366C();
  uint64_t v10 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  sub_25346CC6C();
  uint64_t v12 = sub_253462A5C(&qword_269CDBB20);
  uint64_t v13 = sub_25346CB4C(v12);
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_25349888C();
  type metadata accessor for RequestContent(v14);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v15);
  sub_2534966B0();
  swift_bridgeObjectRelease();
  type metadata accessor for RequestContent.TextContent(0);
  sub_253B059D0();
  sub_253486600();
  sub_2534ACF74();
  sub_2534AF234();
  v16();
  *uint64_t v2 = v26;
  v2[1] = v27;
  sub_2535B4148();
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = type metadata accessor for RequestPrescribedPlan(0);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v3, 1, 1, v17);
  sub_253B055C0();
  sub_253945180(v1);
  uint64_t v18 = sub_253A3CD60();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, v19, v20, v17);
  uint64_t v21 = v0 + v9[9];
  sub_253945180(v21);
  uint64_t v22 = (uint64_t *)(v0 + v9[10]);
  uint64_t *v22 = 0;
  v22[1] = 0;
  void v22[2] = 0;
  sub_2539DF5B8((uint64_t)v2, v0);
  *(unsigned char *)(v0 + v9[7]) = v28;
  uint64_t v23 = sub_2534F8958();
  sub_2539F0BE0(v23, v24, &qword_269CDBB20);
  sub_2539F0BE0(v1, v21, (uint64_t *)&unk_26B248CB0);
  sub_253961E88(*v22, v22[1]);
  uint64_t *v22 = 0;
  v22[1] = 0;
  void v22[2] = 0;
  sub_2539DF5B8(v0, v29);
  sub_2534D91A0();
  v25();
  sub_253465A14();
}

void Request.init(speechCandidates:safetyMode:clientQueryId:)()
{
  sub_2534B3258();
  char v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  sub_2534B3294();
  uint64_t v10 = sub_253462A5C(&qword_269CDBB20);
  uint64_t v11 = sub_25346CB4C(v10);
  MEMORY[0x270FA5388](v11);
  sub_253A3DC74();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v12);
  sub_25346CC6C();
  swift_bridgeObjectRelease();
  *uint64_t v1 = v5;
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = type metadata accessor for RequestPrescribedPlan(0);
  uint64_t v14 = sub_253A3D714();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v14, v15, v16, v13);
  uint64_t v17 = sub_253B055C0();
  uint64_t v18 = sub_253A3CD60();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, v19, v20, v17);
  uint64_t v21 = (int *)type metadata accessor for Request(0);
  uint64_t v22 = sub_253A3F84C();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v22, v23, v24, v25);
  uint64_t v26 = v7 + v21[7];
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v26, 1, 1, v17);
  uint64_t v27 = (uint64_t *)(v7 + v21[8]);
  uint64_t *v27 = 0;
  v27[1] = 0;
  v27[2] = 0;
  uint64_t v28 = sub_2536D42A4();
  sub_2539DF5B8(v28, v29);
  *(unsigned char *)(v7 + v21[5]) = v3;
  uint64_t v30 = sub_25353CE6C();
  sub_2539F0BE0(v30, v31, &qword_269CDBB20);
  sub_2539F0BE0(v0, v26, (uint64_t *)&unk_26B248CB0);
  sub_253961E88(*v27, v27[1]);
  uint64_t *v27 = 0;
  v27[1] = 0;
  v27[2] = 0;
  sub_253465A14();
}

void static RequestContent.== infix(_:_:)()
{
  sub_2534B3258();
  uint64_t v6 = sub_2539460B0();
  uint64_t v7 = type metadata accessor for RequestContent.SystemPromptResolution(v6);
  uint64_t v8 = sub_25346CB4C(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v24 = (uint64_t)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for RequestContent.TextContent(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v10);
  sub_253A3DD90();
  sub_25346CAF4();
  MEMORY[0x270FA5388](v11);
  sub_2534F882C();
  MEMORY[0x270FA5388](v12);
  sub_253A3D64C();
  MEMORY[0x270FA5388](v13);
  sub_2534D90F4();
  uint64_t v14 = sub_253462A5C(&qword_269CE5E10);
  uint64_t v15 = sub_25346CB4C(v14);
  MEMORY[0x270FA5388](v15);
  sub_2535E2544();
  uint64_t v17 = v0 + v16;
  sub_2539DF660(v5, v0);
  uint64_t v18 = sub_253A3E5D4();
  sub_2539DF660(v18, v19);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_253A3F834();
      if (sub_2539454C4() != 1) {
        goto LABEL_19;
      }
      uint64_t v20 = sub_253A3E5C8();
      sub_2539DF5B8(v20, v21);
      BOOL v22 = *v3 == *v1 && v3[1] == v1[1];
      if (v22 || (sub_253B0A4C0())
        && (_s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0() & 1) != 0)
      {
        sub_2539DF610();
        sub_2539DF610();
        goto LABEL_12;
      }
      sub_2539DF610();
      sub_2539DF610();
      sub_2539DF610();
      goto LABEL_21;
    case 2u:
      sub_2539DF660(v0, v2);
      if (sub_2539454C4() == 2)
      {
        sub_2534B9560();
        sub_253A3F6F0();
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
      swift_bridgeObjectRelease();
      goto LABEL_20;
    case 3u:
      sub_2539DF660(v0, v4);
      if (sub_2539454C4() == 3)
      {
        sub_2539DF5B8(v17, v24);
        sub_2536D3880();
        static RequestContent.SystemPromptResolution.== infix(_:_:)();
        sub_2539DF610();
        sub_2539DF610();
LABEL_12:
        sub_2539DF610();
      }
      else
      {
LABEL_19:
        sub_2539DF610();
LABEL_20:
        sub_253472458(v0, &qword_269CE5E10);
      }
LABEL_21:
      sub_2534D9090();
      sub_253465A14();
      return;
    default:
      if (!sub_2539454C4()) {
        goto LABEL_12;
      }
      goto LABEL_20;
  }
}

uint64_t sub_2539A1FD8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_253B0A4C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6F4D797465666173 && a2 == 0xEA00000000006564;
    if (v6 || (sub_253B0A4C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6269726373657270 && a2 == 0xEE006E616C506465;
      if (v7 || (sub_253B0A4C0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000016 && a2 == 0x8000000253B13AC0 || (sub_253B0A4C0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000016 && a2 == 0x8000000253B12410)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        char v8 = sub_253B0A4C0();
        swift_bridgeObjectRelease();
        if (v8) {
          return 4;
        }
        else {
          return 5;
        }
      }
    }
  }
}

unint64_t sub_2539A2214(char a1)
{
  unint64_t result = 0x746E65746E6F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F4D797465666173;
      break;
    case 2:
      unint64_t result = 0x6269726373657270;
      break;
    case 3:
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2539A22CC()
{
  return sub_2539A2214(*v0);
}

uint64_t sub_2539A22D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2539A1FD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2539A22FC(uint64_t a1)
{
  unint64_t v2 = sub_2539EC1D8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A2338(uint64_t a1)
{
  unint64_t v2 = sub_2539EC1D8();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Request.encode(to:)()
{
  sub_2535B45A0();
  sub_2534F8530();
  sub_253462A5C(&qword_269CE5E18);
  sub_253465998();
  MEMORY[0x270FA5388](v1);
  sub_25397F66C();
  sub_2539EC1D8();
  sub_2534DA3BC();
  type metadata accessor for RequestContent(0);
  sub_2539E6F90((uint64_t)&unk_269CE5E28);
  sub_2534DA628();
  if (!v0)
  {
    type metadata accessor for Request(0);
    sub_253A3D3D4();
    sub_253A3EEC8();
    sub_253B0A400();
    sub_253A3E0A4();
    type metadata accessor for RequestPrescribedPlan(0);
    sub_2539E6F90((uint64_t)&unk_269CE5E30);
    sub_253A3B994();
    sub_253A3E070();
    sub_253B055C0();
    sub_2539E6F90((uint64_t)&qword_26B248CA0);
    sub_253A3B994();
    sub_2539EA568();
    sub_253A3BCCC();
  }
  uint64_t v2 = sub_2534F82A4();
  v3(v2);
  sub_2534F8864();
  sub_2535B4660();
}

void Request.init(from:)()
{
  sub_2534847F8();
  char v3 = v2;
  uint64_t v28 = v4;
  uint64_t v5 = sub_253462A5C((uint64_t *)&unk_26B248CB0);
  uint64_t v6 = sub_25346CB4C(v5);
  MEMORY[0x270FA5388](v6);
  sub_2534D9BAC(v7, v25);
  uint64_t v8 = sub_253462A5C(&qword_269CDBB20);
  uint64_t v9 = sub_25346CB4C(v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = sub_2534AF260(v10, v26);
  type metadata accessor for RequestContent(v11);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v12);
  sub_2534AF2BC(v13, v27);
  sub_253462A5C(&qword_269CE5E38);
  sub_253465998();
  MEMORY[0x270FA5388](v14);
  uint64_t v15 = sub_25348360C();
  uint64_t v16 = (int *)type metadata accessor for Request(v15);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v17);
  sub_253A3C52C();
  type metadata accessor for RequestPrescribedPlan(0);
  uint64_t v18 = sub_253A3E424();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, v19, v20, v21);
  uint64_t v22 = v1 + v16[7];
  sub_253B055C0();
  sub_253A3CC78(v22);
  uint64_t v23 = (uint64_t *)(v1 + v16[8]);
  *uint64_t v23 = 0;
  v23[1] = 0;
  v23[2] = 0;
  sub_2534D9A50(v3);
  sub_2539EC1D8();
  sub_253A3D530();
  sub_253B0A660();
  if (v0)
  {
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v3);
    sub_253472458(v32, &qword_269CDBB20);
    sub_253472458(v22, (uint64_t *)&unk_26B248CB0);
    sub_253961E88(*v23, v23[1]);
  }
  else
  {
    sub_2539E6F90((uint64_t)&unk_269CE5E40);
    sub_253A3CA4C();
    sub_253B0A370();
    sub_2539DF5B8(v31, v1);
    sub_253A3DA68();
    *(unsigned char *)(v1 + v16[5]) = sub_253B0A330() & 1;
    sub_2539E6F90((uint64_t)&unk_269CE5E48);
    sub_253A3CA4C();
    sub_253A3EFA8();
    sub_253B0A310();
    sub_2539F0BE0(v30, v32, &qword_269CDBB20);
    LOBYTE(v33) = 3;
    sub_2539E6F90((uint64_t)&qword_269CDBCC8);
    sub_253A3CA4C();
    sub_253B0A310();
    sub_2539F0BE0(v29, v22, (uint64_t *)&unk_26B248CB0);
    sub_2539EB5BC();
    sub_253A3E4FC();
    sub_253B0A310();
    sub_2534D99FC();
    sub_2534B3470();
    v24();
    sub_253961E88(*v23, v23[1]);
    *(_OWORD *)uint64_t v23 = v33;
    v23[2] = v34;
    sub_2539DF660(v1, v28);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v3);
    sub_2539DF610();
  }
  sub_2536D4C48();
  sub_2534847C8();
}

void sub_2539A2A6C()
{
}

void sub_2539A2A84()
{
}

uint64_t static RequestContent.TextContent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_2539CCFC0(a1, a2, type metadata accessor for RequestContent.TextContent);
}

void static RequestContent.SpeechContent.== infix(_:_:)()
{
}

uint64_t sub_2539A2AC8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1886352499 && a2 == 0xE400000000000000;
  if (v2 || (sub_253B0A4C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1954047348 && a2 == 0xE400000000000000;
    if (v6 || (sub_253B0A4C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x686365657073 && a2 == 0xE600000000000000;
      if (v7 || (sub_253B0A4C0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x8000000253B12440)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v8 = sub_253B0A4C0();
        swift_bridgeObjectRelease();
        if (v8) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

unint64_t sub_2539A2C58(char a1)
{
  unint64_t result = 1886352499;
  switch(a1)
  {
    case 1:
      unint64_t result = 1954047348;
      break;
    case 2:
      unint64_t result = 0x686365657073;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2539A2CD8()
{
  return sub_2539A2C58(*v0);
}

uint64_t sub_2539A2CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2539A2AC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2539A2D08(uint64_t a1)
{
  unint64_t v2 = sub_2539EC224();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A2D44(uint64_t a1)
{
  unint64_t v2 = sub_2539EC224();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539A2D80(uint64_t a1)
{
  unint64_t v2 = sub_2539EC270();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A2DBC(uint64_t a1)
{
  unint64_t v2 = sub_2539EC270();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539A2DF8(uint64_t a1)
{
  unint64_t v2 = sub_2539EC2BC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A2E34(uint64_t a1)
{
  unint64_t v2 = sub_2539EC2BC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539A2E70(uint64_t a1)
{
  unint64_t v2 = sub_2539EC3A0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A2EAC(uint64_t a1)
{
  unint64_t v2 = sub_2539EC3A0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539A2EE8(uint64_t a1)
{
  unint64_t v2 = sub_2539EC354();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A2F24(uint64_t a1)
{
  unint64_t v2 = sub_2539EC354();
  return MEMORY[0x270FA00B8](a1, v2);
}

void RequestContent.encode(to:)()
{
  sub_2534847F8();
  uint64_t v37 = v1;
  uint64_t v38 = v0;
  uint64_t v5 = v4;
  sub_253462A5C(&qword_269CE5E50);
  sub_253465998();
  v34[11] = v7;
  v34[12] = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = sub_253547148(v8, v34[0]);
  v34[8] = type metadata accessor for RequestContent.SystemPromptResolution(v9);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v10);
  sub_253483644(v11, v34[0]);
  sub_253462A5C(&qword_269CE5E58);
  sub_253465998();
  v34[6] = v13;
  v34[7] = v12;
  MEMORY[0x270FA5388](v12);
  sub_2534D929C(v14, v34[0]);
  sub_253462A5C(&qword_269CE5E60);
  sub_253465998();
  v34[3] = v16;
  v34[4] = v15;
  MEMORY[0x270FA5388](v15);
  void v34[2] = (uint64_t)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34[1] = type metadata accessor for RequestContent.TextContent(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v18);
  sub_25346CC6C();
  sub_253462A5C(&qword_269CE5E68);
  sub_253465998();
  v34[0] = v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v21 = sub_25348360C();
  type metadata accessor for RequestContent(v21);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v22);
  sub_2534966B0();
  sub_253462A5C(&qword_269CE5E70);
  sub_253465998();
  uint64_t v35 = v24;
  uint64_t v36 = v23;
  MEMORY[0x270FA5388](v23);
  sub_253465A3C();
  sub_253472068(v5, v5[3]);
  sub_2539EC224();
  sub_253A3E544();
  sub_253B0A680();
  sub_2539DF660(v38, (uint64_t)v3);
  sub_2535B4148();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v31 = sub_253578D20();
      sub_2539DF5B8(v31, v32);
      sub_2539EC354();
      uint64_t v25 = v36;
      sub_2534D9208();
      sub_2539E6F90((uint64_t)&unk_269CE5EA0);
      sub_2534F84A8();
      sub_253A3E40C();
      sub_2534659CC();
      v33();
      goto LABEL_6;
    case 2u:
      uint64_t v27 = *v3;
      sub_2539EC2BC();
      sub_25351C318();
      uint64_t v39 = v27;
      sub_2539EC308();
      sub_253B0A440();
      sub_2534659CC();
      v28();
      sub_2534659CC();
      v29();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    case 3u:
      sub_2539DF5B8((uint64_t)v3, v34[9]);
      sub_2539EC270();
      uint64_t v25 = v36;
      sub_2534D9208();
      sub_2539E6F90((uint64_t)&unk_269CE58C0);
      sub_2534F84A8();
      sub_253A3E40C();
      sub_2534659CC();
      v30();
LABEL_6:
      sub_2539DF610();
      goto LABEL_7;
    default:
      sub_2539EC3A0();
      uint64_t v25 = v36;
      sub_2534D9208();
      sub_2539EC3EC();
      sub_253A3E40C();
      sub_2534659CC();
      v26();
LABEL_7:
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v2, v25);
LABEL_8:
      sub_2534F8A10();
      sub_2534847C8();
      return;
  }
}

void RequestContent.init(from:)()
{
  sub_2534847F8();
  sub_253A3F2B8();
  uint64_t v46 = v5;
  sub_253462A5C(&qword_269CE5EB8);
  sub_253465998();
  MEMORY[0x270FA5388](v6);
  sub_2534D8F84(v7, v42);
  sub_253462A5C(&qword_269CE5EC0);
  sub_253465998();
  MEMORY[0x270FA5388](v8);
  sub_2534D8F68(v9, v43);
  sub_253462A5C(&qword_269CE5EC8);
  sub_253465998();
  MEMORY[0x270FA5388](v10);
  sub_2534D9280(v11, v44);
  uint64_t v49 = (void *)sub_253462A5C(&qword_269CE5ED0);
  sub_253465998();
  MEMORY[0x270FA5388](v12);
  sub_2534AF2BC(v13, v45);
  sub_253462A5C(&qword_269CE5ED8);
  sub_253465998();
  uint64_t v48 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v15 = sub_2534B33AC();
  uint64_t v47 = type metadata accessor for RequestContent(v15);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v16);
  sub_2534D8CC8();
  MEMORY[0x270FA5388](v17);
  sub_2535B45C8();
  MEMORY[0x270FA5388](v18);
  sub_253A3B9E4();
  MEMORY[0x270FA5388](v19);
  sub_25351C99C();
  MEMORY[0x270FA5388](v20);
  sub_2535B3D6C();
  uint64_t v50 = (uint64_t)v0;
  sub_253472068(v0, v0[3]);
  sub_2539EC224();
  sub_253B0A660();
  if (!v51)
  {
    uint64_t v21 = sub_253B0A390();
    uint64_t v22 = *(void *)(v21 + 16);
    if (v22
      && (uint64_t v23 = *(unsigned __int8 *)(v21 + 32),
          sub_25347B78C(1, v22, v21, v21 + 32, 0, (2 * v22) | 1),
          uint64_t v25 = v24,
          unint64_t v27 = v26,
          swift_bridgeObjectRelease(),
          v25 == v27 >> 1))
    {
      switch(v23)
      {
        case 1:
          sub_2539EC354();
          sub_253A3C818();
          uint64_t v34 = type metadata accessor for RequestContent.TextContent(0);
          sub_2539E6F90((uint64_t)&unk_269CE5EE8);
          sub_253B0A370();
          sub_2534659CC();
          v35();
          swift_unknownObjectRelease();
          sub_2534659CC();
          v36();
          swift_storeEnumTagMultiPayload();
          uint64_t v37 = v2;
          break;
        case 2:
          sub_2539EC2BC();
          sub_253A3C818();
          sub_2539EC438();
          sub_253B0A370();
          sub_2534659CC();
          v38();
          swift_unknownObjectRelease();
          sub_2534B3470();
          v39();
          uint64_t v34 = (uint64_t)v4;
          *uint64_t v4 = v52;
          goto LABEL_11;
        case 3:
          sub_2539EC270();
          sub_253A3C818();
          uint64_t v34 = type metadata accessor for RequestContent.SystemPromptResolution(0);
          sub_2539E6F90((uint64_t)&unk_269CE5C10);
          sub_253B0A370();
          sub_2534659CC();
          v40();
          swift_unknownObjectRelease();
          sub_2534659CC();
          v41();
          swift_storeEnumTagMultiPayload();
          uint64_t v37 = v1;
          break;
        default:
          sub_2539EC3A0();
          sub_253A3C818();
          sub_2539EC484();
          sub_253B0A370();
          sub_2534659CC();
          v32();
          swift_unknownObjectRelease();
          sub_2534B3470();
          v33();
          uint64_t v34 = v3;
LABEL_11:
          swift_storeEnumTagMultiPayload();
          uint64_t v37 = v34;
          break;
      }
      sub_253A3F1D0(v37);
      sub_2539DF5B8(v34, v46);
    }
    else
    {
      sub_253B0A090();
      sub_2534D969C();
      sub_253A3F098();
      sub_253462A5C(&qword_269CDB688);
      sub_253A3ED24();
      *uint64_t v49 = v47;
      sub_253B0A2D0();
      sub_2534F8464();
      sub_25347B88C();
      uint64_t v28 = sub_2534F859C();
      v29(v28);
      swift_willThrow();
      swift_unknownObjectRelease();
      uint64_t v30 = sub_253A3D55C();
      v31(v30, v48);
    }
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v50);
  sub_253A3C6AC();
  sub_2534847C8();
}

void sub_2539A3CAC()
{
}

void sub_2539A3CC4()
{
}

uint64_t sub_2539A3CE0(uint64_t a1)
{
  unint64_t v2 = sub_2539EC4D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A3D1C(uint64_t a1)
{
  unint64_t v2 = sub_2539EC4D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

void RequestContent.StopContent.encode(to:)()
{
}

uint64_t RequestContent.StopContent.init(from:)(uint64_t a1)
{
  return sub_253A3F4B4(a1);
}

uint64_t sub_2539A3DB4(uint64_t a1)
{
  return RequestContent.StopContent.init(from:)(a1);
}

void sub_2539A3DCC()
{
}

uint64_t (*RequestContent.TextContent.text.modify())()
{
  return nullsub_1;
}

uint64_t RequestContent.TextContent.statementId.getter()
{
  return sub_2539A3E30();
}

uint64_t sub_2539A3E30()
{
  uint64_t v1 = sub_2535E2348();
  v2(v1);
  uint64_t v3 = sub_253A3D478();
  v0(v3);
  sub_25346CAF4();
  uint64_t v4 = sub_2534DA5AC();
  return v5(v4);
}

uint64_t sub_2539A3EA0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1954047348 && a2 == 0xE400000000000000;
  if (v2 || (sub_253B0A4C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_253B0A4C0();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2539A3F98(char a1)
{
  if (a1) {
    return 0x6E656D6574617473;
  }
  else {
    return 1954047348;
  }
}

uint64_t sub_2539A3FD0()
{
  return sub_2539A3F98(*v0);
}

uint64_t sub_2539A3FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2539A3EA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2539A4000(uint64_t a1)
{
  unint64_t v2 = sub_2539EC51C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A403C(uint64_t a1)
{
  unint64_t v2 = sub_2539EC51C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void RequestContent.TextContent.encode(to:)()
{
}

void RequestContent.TextContent.init(from:)()
{
  sub_2534847F8();
  v14[4] = sub_253A3ED70(v2);
  sub_253465998();
  v14[1] = v3;
  MEMORY[0x270FA5388](v4);
  sub_2534966B0();
  v14[5] = sub_253462A5C(&qword_269CE5F18);
  sub_253465998();
  v14[3] = v5;
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_2534D9B74();
  type metadata accessor for RequestContent.TextContent(v7);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (void *)((char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_253A3B978(v0);
  sub_2539EC51C();
  sub_253A3CAE4();
  if (v1)
  {
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v0);
  }
  else
  {
    uint64_t *v10 = sub_253A3D1A4();
    v10[1] = v11;
    sub_25351C8C4();
    sub_2539E6F90((uint64_t)&qword_269CDC068);
    sub_2534F8908();
    sub_2534D91A0();
    v12();
    sub_253A3CDA8();
    v13();
    sub_2539DF660((uint64_t)v10, v14[2]);
    _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0((uint64_t)v0);
    sub_2539DF610();
  }
  sub_2534F8590();
  sub_2534847C8();
}

void sub_2539A42E8()
{
}

void sub_2539A4300()
{
}

uint64_t (*RequestContent.SpeechContent.candidates.modify())()
{
  return nullsub_1;
}

uint64_t sub_2539A4340(uint64_t a1)
{
  unint64_t v2 = sub_2539EC568();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A437C(uint64_t a1)
{
  unint64_t v2 = sub_2539EC568();
  return MEMORY[0x270FA00B8](a1, v2);
}

void RequestContent.SpeechContent.encode(to:)()
{
  sub_2534847F8();
  sub_253A3D9E4();
  sub_253462A5C(&qword_269CE5F20);
  sub_253465998();
  MEMORY[0x270FA5388](v1);
  sub_2534F8328(v0);
  sub_2539EC568();
  sub_2534F82BC();
  sub_253462A5C(&qword_269CE5F30);
  sub_2539EC5B4();
  sub_253A3BA74();
  sub_2534F8390();
  v2();
  sub_2534F8A10();
  sub_2534847C8();
}

void RequestContent.SpeechContent.init(from:)()
{
  sub_2534847F8();
  sub_2534F881C();
  sub_253462A5C(&qword_269CE5F48);
  sub_253465998();
  MEMORY[0x270FA5388](v2);
  sub_2534F83CC();
  sub_2539EC568();
  sub_2534994B4();
  if (!v1)
  {
    sub_253462A5C(&qword_269CE5F30);
    sub_2539EC658();
    sub_2534F8410();
    sub_2534D9A08();
    v3();
    sub_253A3D888();
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v0);
  sub_2534F8590();
  sub_2534847C8();
}

void sub_2539A4580()
{
}

void sub_2539A4598()
{
}

uint64_t RequestContent.SystemPromptResolution.actionEventId.getter()
{
  uint64_t v0 = sub_2535E27CC();
  return sub_253961F60(v0, v1, (uint64_t *)&unk_26B248CB0);
}

uint64_t RequestContent.SystemPromptResolution.actionEventId.setter(uint64_t a1)
{
  return sub_2539F0BE0(a1, v1, (uint64_t *)&unk_26B248CB0);
}

uint64_t (*RequestContent.SystemPromptResolution.actionEventId.modify())()
{
  return nullsub_1;
}

uint64_t RequestContent.SystemPromptResolution.systemResponseEventId.getter()
{
  return sub_2539A3E30();
}

uint64_t RequestContent.SystemPromptResolution.systemResponseEventId.setter(uint64_t a1)
{
  return sub_2539A4674(a1, (uint64_t)type metadata accessor for RequestContent.SystemPromptResolution, MEMORY[0x263F07508]);
}

uint64_t sub_2539A4674(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = sub_2534D976C();
  v5(v4);
  uint64_t v6 = sub_253A3D478();
  a3(v6);
  sub_25346CAF4();
  uint64_t v7 = sub_2534DA2E4();
  return v8(v7);
}

uint64_t (*RequestContent.SystemPromptResolution.systemResponseEventId.modify())()
{
  return nullsub_1;
}

uint64_t RequestContent.SystemPromptResolution.userAction.getter()
{
  return sub_2539A4750();
}

uint64_t sub_2539A4750()
{
  uint64_t v2 = sub_2535E2348();
  uint64_t v4 = v3(v2);
  return sub_2539DF660(v0 + *(int *)(v4 + 24), v1);
}

uint64_t RequestContent.SystemPromptResolution.userAction.setter()
{
  return sub_2539A47C0();
}

uint64_t sub_2539A47C0()
{
  uint64_t v0 = sub_2534D976C();
  v1(v0);
  uint64_t v2 = sub_253A3EFDC();
  return sub_2539E7074(v2, v3);
}

uint64_t (*RequestContent.SystemPromptResolution.userAction.modify())()
{
  return nullsub_1;
}

uint64_t RequestContent.SystemPromptResolution.statementId.getter()
{
  return sub_2539C5638();
}

uint64_t RequestContent.SystemPromptResolution.statementId.setter()
{
  return sub_2539C56B8();
}

uint64_t (*RequestContent.SystemPromptResolution.statementId.modify())()
{
  return nullsub_1;
}

uint64_t RequestContent.SystemPromptResolution.input.getter()
{
  return sub_2539A48E4((void (*)(void))type metadata accessor for RequestContent.SystemPromptResolution, (uint64_t)type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput, (uint64_t (*)(void))sub_2539DF660);
}

uint64_t sub_2539A48E4(void (*a1)(void), uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t RequestContent.SystemPromptResolution.input.setter(uint64_t a1)
{
  return sub_2539A4978(a1, (void (*)(void))type metadata accessor for RequestContent.SystemPromptResolution, (uint64_t)type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput, (uint64_t (*)(uint64_t))sub_2539E7074);
}

uint64_t sub_2539A4978(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  return a4(a1);
}

uint64_t (*RequestContent.SystemPromptResolution.input.modify())()
{
  return nullsub_1;
}

uint64_t RequestContent.SystemPromptResolution.ResolutionInput.description.getter()
{
  type metadata accessor for RequestContent.TextContent(0);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = sub_25397F55C();
  type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(v3);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v4);
  sub_253465A3C();
  sub_2539DF660(v0, v1);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_253A3BC78();
      sub_253B09860();
      sub_253B0A170();
      swift_bridgeObjectRelease();
      sub_25351C9C4();
      break;
    case 2u:
    case 3u:
      return sub_2536D44B0();
    default:
      uint64_t v5 = sub_2535787F4();
      sub_2539DF5B8(v5, v6);
      sub_253A3BC78();
      sub_253B09860();
      sub_253B0A170();
      sub_25351C9C4();
      sub_2539DF610();
      break;
  }
  return sub_2536D44B0();
}

void static RequestContent.SystemPromptResolution.ResolutionInput.== infix(_:_:)()
{
  sub_2534B3258();
  uint64_t v4 = sub_253A3EF6C();
  type metadata accessor for RequestContent.TextContent(v4);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_2534B464C();
  type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(v6);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v7);
  sub_25351C738();
  MEMORY[0x270FA5388](v8);
  sub_2536D4170();
  uint64_t v9 = sub_253462A5C(&qword_269CE5F60);
  uint64_t v10 = sub_25346CB4C(v9);
  MEMORY[0x270FA5388](v10);
  sub_2535E2544();
  sub_2539DF660(v3, v0);
  sub_253A3E6B0();
  sub_2539DF660(v11, v12);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_253A3EB44();
      if (sub_253A3F380() != 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
      sub_2534B9560();
      sub_253A3F6F0();
      swift_bridgeObjectRelease();
      sub_2539DF610();
      goto LABEL_20;
    case 2u:
      if (sub_253A3F380() != 2) {
        goto LABEL_11;
      }
      goto LABEL_19;
    case 3u:
      if (sub_253A3F380() == 3) {
        goto LABEL_19;
      }
      goto LABEL_11;
    default:
      sub_2539DF660(v0, (uint64_t)v2);
      if (sub_253A3F380())
      {
        sub_2539DF610();
LABEL_11:
        sub_253472458(v0, &qword_269CE5F60);
      }
      else
      {
        uint64_t v13 = sub_2534D9A78();
        sub_2539DF5B8(v13, v14);
        BOOL v15 = *v2 == *v1 && v2[1] == v1[1];
        if (v15 || (sub_253B0A4C0())
          && (_s30IntelligenceFlowPlannerSupport14OpenExpressionV2eeoiySbAC_ACtFZ_0() & 1) != 0)
        {
          sub_2539DF610();
          sub_2539DF610();
LABEL_19:
          sub_2539DF610();
        }
        else
        {
          sub_2539DF610();
          sub_2539DF610();
          sub_2539DF610();
        }
      }
LABEL_20:
      sub_2534D9090();
      sub_253465A14();
      return;
  }
}

uint64_t sub_2539A4F38(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6863756F74 && a2 == 0xE500000000000000;
  if (v2 || (sub_253B0A4C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7473654764616568 && a2 == 0xEB00000000657275;
    if (v6 || (sub_253B0A4C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 1954047348 && a2 == 0xE400000000000000;
      if (v7 || (sub_253B0A4C0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x686365657073 && a2 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_253B0A4C0();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_2539A50E0(char a1)
{
  uint64_t result = 0x6863756F74;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x7473654764616568;
      break;
    case 2:
      uint64_t result = 1954047348;
      break;
    case 3:
      uint64_t result = 0x686365657073;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2539A516C()
{
  return sub_2539A50E0(*v0);
}

uint64_t sub_2539A5174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2539A4F38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2539A519C(uint64_t a1)
{
  unint64_t v2 = sub_2539EC6FC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A51D8(uint64_t a1)
{
  unint64_t v2 = sub_2539EC6FC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539A5214(uint64_t a1)
{
  unint64_t v2 = sub_2539EC7E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A5250(uint64_t a1)
{
  unint64_t v2 = sub_2539EC7E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539A528C(uint64_t a1)
{
  unint64_t v2 = sub_2539EC748();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A52C8(uint64_t a1)
{
  unint64_t v2 = sub_2539EC748();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539A5304(uint64_t a1)
{
  unint64_t v2 = sub_2539EC794();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A5340(uint64_t a1)
{
  unint64_t v2 = sub_2539EC794();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539A537C(uint64_t a1)
{
  unint64_t v2 = sub_2539EC82C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A53B8(uint64_t a1)
{
  unint64_t v2 = sub_2539EC82C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void RequestContent.SystemPromptResolution.ResolutionInput.encode(to:)()
{
  sub_2534847F8();
  uint64_t v33 = v0;
  uint64_t v4 = v3;
  sub_253462A5C(&qword_269CE5F68);
  sub_253465998();
  MEMORY[0x270FA5388](v5);
  sub_2534AF2BC(v6, v27);
  sub_253462A5C(&qword_269CE5F70);
  sub_253465998();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = sub_2534AF260(v8, v28);
  uint64_t v29 = type metadata accessor for RequestContent.TextContent(v9);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v10);
  sub_2534D92B8(v11, v29);
  sub_253462A5C(&qword_269CE5F78);
  sub_253465998();
  MEMORY[0x270FA5388](v12);
  sub_2534847E0();
  sub_253462A5C(&qword_269CE5F80);
  sub_253465998();
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_2534D8CAC();
  type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(v14);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v15);
  sub_2534B34A4();
  sub_253462A5C(&qword_269CE5F88);
  sub_253465998();
  uint64_t v31 = v17;
  uint64_t v32 = v16;
  MEMORY[0x270FA5388](v16);
  sub_2534966B0();
  sub_253A3BCFC(v4);
  sub_2539EC6FC();
  sub_253B0A680();
  sub_2539DF660(v33, v2);
  sub_2536D5500();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_2539EC748();
      sub_253A3C04C();
      sub_2539EC308();
      sub_253A3E40C();
      sub_2534659CC();
      v25();
      sub_2534659CC();
      v26();
      swift_bridgeObjectRelease();
      break;
    case 2u:
      sub_2539EC82C();
      sub_253A3C04C();
      sub_2534659CC();
      v20();
      uint64_t v21 = sub_2535B4148();
      goto LABEL_5;
    case 3u:
      sub_2539EC7E0();
      sub_253A3C04C();
      sub_2534659CC();
      v24();
      uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
      uint64_t v21 = v1;
      uint64_t v22 = v32;
LABEL_5:
      v23(v21, v22);
      break;
    default:
      sub_2539DF5B8(v2, v30);
      sub_2539EC794();
      sub_253A3C04C();
      sub_2539E6F90((uint64_t)&unk_269CE5EA0);
      sub_253B0A440();
      sub_2534659CC();
      v18();
      sub_2539DF610();
      sub_2534659CC();
      v19();
      break;
  }
  sub_2534F8A10();
  sub_2534847C8();
}

void RequestContent.SystemPromptResolution.ResolutionInput.init(from:)()
{
  sub_2534847F8();
  sub_253A3F2B8();
  sub_253462A5C(&qword_269CE5FB8);
  sub_253465998();
  MEMORY[0x270FA5388](v4);
  sub_253483644(v5, v49);
  sub_253462A5C(&qword_269CE5FC0);
  sub_253465998();
  MEMORY[0x270FA5388](v6);
  sub_253483628(v7, v50);
  sub_253462A5C(&qword_269CE5FC8);
  sub_253465998();
  MEMORY[0x270FA5388](v8);
  sub_2534D8F68(v9, v51);
  sub_253462A5C(&qword_269CE5FD0);
  sub_253465998();
  MEMORY[0x270FA5388](v10);
  sub_2534D9280(v11, v52);
  sub_253462A5C(&qword_269CE5FD8);
  sub_253465998();
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_25349888C();
  uint64_t v14 = type metadata accessor for RequestContent.SystemPromptResolution.ResolutionInput(v13);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v15);
  sub_253A3B8EC();
  MEMORY[0x270FA5388](v16);
  sub_253A3B9E4();
  MEMORY[0x270FA5388](v17);
  sub_2536D4170();
  uint64_t v54 = v0;
  sub_253A3B6B0();
  sub_2539EC6FC();
  sub_253B0A660();
  if (v55) {
    goto LABEL_12;
  }
  uint64_t v53 = v3;
  sub_253B0A390();
  sub_253A3E90C();
  if (!v18)
  {
    uint64_t v32 = v14;
    goto LABEL_7;
  }
  sub_253A3E9B8();
  uint64_t v20 = *(unsigned __int8 *)(v19 + 32);
  uint64_t v21 = sub_253A3CD70();
  uint64_t v27 = sub_25347B78C(v21, v22, v23, v24, v25, v26);
  uint64_t v29 = v28;
  unint64_t v31 = v30;
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)v27;
  uint64_t v32 = v14;
  if (v29 != v31 >> 1)
  {
LABEL_7:
    sub_253B0A090();
    sub_2534D969C();
    sub_253A3F098();
    sub_253462A5C(&qword_269CDB688);
    *uint64_t v1 = v32;
    sub_253B0A2D0();
    sub_2534F8464();
    sub_25347B88C();
    uint64_t v35 = sub_2534F859C();
    v36(v35);
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v37 = sub_253578EE0();
    v41(v37, v40);
    goto LABEL_12;
  }
  switch(v20)
  {
    case 1:
      sub_2539EC7E0();
      sub_253A3C7E4();
      sub_2534659CC();
      v38();
      swift_unknownObjectRelease();
      sub_2534659CC();
      v39();
      sub_253579264();
      goto LABEL_9;
    case 2:
      sub_2539EC794();
      sub_253A3C7E4();
      type metadata accessor for RequestContent.TextContent(0);
      sub_2539E6F90((uint64_t)&unk_269CE5EE8);
      sub_253B0A370();
      sub_2534659CC();
      v42();
      swift_unknownObjectRelease();
      sub_2534659CC();
      v43();
      uint64_t v44 = v2;
      sub_253579264();
      goto LABEL_13;
    case 3:
      sub_2539EC748();
      sub_253A3C7E4();
      sub_2539EC438();
      sub_253A3E020();
      sub_253B0A370();
      sub_2534659CC();
      v45();
      swift_unknownObjectRelease();
      sub_2534B3470();
      v46();
      uint64_t v44 = (uint64_t)v53;
      *uint64_t v53 = v56;
      sub_253579264();
LABEL_13:
      swift_storeEnumTagMultiPayload();
      sub_253A3F1D0(v44);
      break;
    default:
      sub_2539EC82C();
      sub_253A3C7E4();
      sub_2534659CC();
      v33();
      swift_unknownObjectRelease();
      sub_2534659CC();
      v34();
      sub_253579264();
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
  }
  uint64_t v47 = sub_253579258();
  sub_2539DF5B8(v47, v48);
LABEL_12:
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v54);
  sub_253A3C6AC();
  sub_2534847C8();
}

void sub_2539A5F44()
{
}

void sub_2539A5F5C()
{
}

uint64_t RequestContent.SystemPromptResolution.UserAction.description.getter()
{
  sub_253B09120();
  sub_253465998();
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = sub_25346CBDC();
  type metadata accessor for RequestContent.SystemPromptResolution.UserAction(v3);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v4);
  sub_253465A3C();
  sub_2539DF660(v0, v1);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_25347FA84();
      v5();
      sub_253A3BC78();
      sub_253B0A000();
      sub_253A3EC98();
      sub_253A3DE30();
      sub_253A3DEE8();
      sub_253B0A170();
      sub_25351C9C4();
      sub_25351C5CC();
      sub_2534D91A0();
      v6();
      return sub_2534D99FC();
    case 2u:
      sub_253A3BC78();
      sub_253B0A000();
      swift_bridgeObjectRelease();
      sub_253A3DE30();
      goto LABEL_7;
    case 3u:
    case 4u:
      sub_253A3BC78();
      sub_253B0A000();
      swift_bridgeObjectRelease();
      sub_253A3DE30();
      sub_253B0A480();
      goto LABEL_7;
    case 5u:
      sub_253A3BC78();
      sub_253B0A000();
      sub_253A3EC98();
      sub_253A3DEE8();
      sub_253982494();
      goto LABEL_9;
    case 6u:
    case 7u:
      return sub_2534D99FC();
    default:
      sub_253A3BC78();
      sub_253B0A000();
      swift_bridgeObjectRelease();
      sub_253A3F6C4();
LABEL_7:
      sub_253B09860();
      swift_bridgeObjectRelease();
LABEL_9:
      sub_25351C9C4();
      return sub_2534D99FC();
  }
}

void static RequestContent.SystemPromptResolution.UserAction.== infix(_:_:)()
{
  sub_2534B3258();
  uint64_t v26 = v6;
  uint64_t v27 = v7;
  sub_253B09120();
  sub_253465998();
  uint64_t v24 = v9;
  uint64_t v25 = v8;
  MEMORY[0x270FA5388](v8);
  v23[1] = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_253483660();
  type metadata accessor for RequestContent.SystemPromptResolution.UserAction(v11);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v12);
  sub_2536D2D54();
  MEMORY[0x270FA5388](v13);
  sub_253A3B8EC();
  MEMORY[0x270FA5388](v14);
  sub_253A3D64C();
  MEMORY[0x270FA5388](v15);
  sub_253A3B9E4();
  MEMORY[0x270FA5388](v16);
  sub_2535B45C8();
  MEMORY[0x270FA5388](v17);
  sub_2534B347C();
  uint64_t v18 = sub_253462A5C(&qword_269CE5FE0);
  uint64_t v19 = sub_25346CB4C(v18);
  MEMORY[0x270FA5388](v19);
  sub_253A3D758();
  sub_2539DF660(v26, v0);
  sub_2539DF660(v27, v2);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_253A3EB44();
      if (sub_253A3C390() == 1)
      {
        uint64_t v20 = v24;
        sub_253A3DB5C();
        sub_25353CE60();
        sub_25347FA84();
        v21();
        sub_253A3D518();
        sub_253B090F0();
        uint64_t v22 = *(void (**)(void))(v20 + 8);
        sub_25353CE60();
        sub_25351C3E8();
        v22();
        sub_2534F8958();
        sub_25351C3E8();
        v22();
        goto LABEL_17;
      }
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v5, v25);
      goto LABEL_19;
    case 2u:
      sub_253A3F834();
      if (sub_253A3C390() == 2) {
        goto LABEL_17;
      }
      goto LABEL_19;
    case 3u:
      sub_2539DF660(v0, v1);
      if (sub_253A3C390() == 3) {
        goto LABEL_17;
      }
      goto LABEL_19;
    case 4u:
      sub_253A3F81C();
      if (sub_253A3C390() == 4) {
        goto LABEL_17;
      }
      goto LABEL_19;
    case 5u:
      sub_2539DF660(v0, v4);
      if (sub_253A3C390() == 5) {
        goto LABEL_17;
      }
      goto LABEL_19;
    case 6u:
      if (sub_253A3C390() != 6) {
        goto LABEL_19;
      }
      goto LABEL_17;
    case 7u:
      if (sub_253A3C390() == 7) {
        goto LABEL_17;
      }
      goto LABEL_19;
    default:
      sub_2539DF660(v0, v3);
      if (sub_253A3C390()) {
LABEL_19:
      }
        sub_253472458(v0, &qword_269CE5FE0);
      else {
LABEL_17:
      }
        sub_2539DF610();
      sub_2534D9090();
      sub_253465A14();
      return;
  }
}

uint64_t sub_2539A66C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F436E6F69746361 && a2 == 0xEF64656D7269666ELL;
  if (v2 || (sub_253B0A4C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E55656369766564 && a2 == 0xEE0064656B636F6CLL;
    if (v6 || (sub_253B0A4C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000016 && a2 == 0x8000000253B11410 || (sub_253B0A4C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x8000000253B11430 || (sub_253B0A4C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000015 && a2 == 0x8000000253B11450 || (sub_253B0A4C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000253B11480 || (sub_253B0A4C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x8000000253B114A0 || (sub_253B0A4C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    else if (a1 == 0x61436E6F69746361 && a2 == 0xEE0064656C65636ELL)
    {
      swift_bridgeObjectRelease();
      return 7;
    }
    else
    {
      char v8 = sub_253B0A4C0();
      swift_bridgeObjectRelease();
      if (v8) {
        return 7;
      }
      else {
        return 8;
      }
    }
  }
}

uint64_t sub_2539A6A44()
{
  return 8;
}

unint64_t sub_2539A6A4C(char a1)
{
  unint64_t result = 0x6F436E6F69746361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E55656369766564;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0x61436E6F69746361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2539A6B84(uint64_t a1)
{
  unint64_t v2 = sub_2539EC8C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A6BC0(uint64_t a1)
{
  unint64_t v2 = sub_2539EC8C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539A6BFC(uint64_t a1)
{
  unint64_t v2 = sub_2539ECB70();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A6C38(uint64_t a1)
{
  unint64_t v2 = sub_2539ECB70();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_2539A6C74()
{
  return sub_2539A6A4C(*v0);
}

uint64_t sub_2539A6C7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2539A66C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2539A6CA4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2539A6A44();
  *a1 = result;
  return result;
}

uint64_t sub_2539A6CCC(uint64_t a1)
{
  unint64_t v2 = sub_2539EC878();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A6D08(uint64_t a1)
{
  unint64_t v2 = sub_2539EC878();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539A6D44(uint64_t a1)
{
  unint64_t v2 = sub_2539ECB24();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A6D80(uint64_t a1)
{
  unint64_t v2 = sub_2539ECB24();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539A6DBC(uint64_t a1)
{
  unint64_t v2 = sub_2539EC9F4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A6DF8(uint64_t a1)
{
  unint64_t v2 = sub_2539EC9F4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539A6E34(uint64_t a1)
{
  unint64_t v2 = sub_2539ECA8C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A6E70(uint64_t a1)
{
  unint64_t v2 = sub_2539ECA8C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539A6EAC(uint64_t a1)
{
  unint64_t v2 = sub_2539ECA40();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A6EE8(uint64_t a1)
{
  unint64_t v2 = sub_2539ECA40();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539A6F24(uint64_t a1)
{
  unint64_t v2 = sub_2539ECAD8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A6F60(uint64_t a1)
{
  unint64_t v2 = sub_2539ECAD8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2539A6F9C(uint64_t a1)
{
  unint64_t v2 = sub_2539EC95C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2539A6FD8(uint64_t a1)
{
  unint64_t v2 = sub_2539EC95C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void RequestContent.SystemPromptResolution.UserAction.encode(to:)()
{
  sub_2534847F8();
  uint64_t v49 = v0;
  uint64_t v4 = v3;
  sub_253462A5C(&qword_269CE5FE8);
  sub_253465998();
  v45[23] = v6;
  v45[24] = v5;
  MEMORY[0x270FA5388](v5);
  sub_2534D8F68(v7, v45[0]);
  sub_253462A5C(&qword_269CE5FF0);
  sub_253465998();
  v45[20] = v9;
  v45[21] = v8;
  MEMORY[0x270FA5388](v8);
  sub_2534D929C(v10, v45[0]);
  sub_253462A5C(&qword_269CE5FF8);
  sub_253465998();
  v45[17] = v12;
  v45[18] = v11;
  MEMORY[0x270FA5388](v11);
  sub_2534D9BAC(v13, v45[0]);
  sub_253462A5C(&qword_269CE6000);
  sub_253465998();
  v45[14] = v15;
  v45[15] = v14;
  MEMORY[0x270FA5388](v14);
  sub_2534D9BE4(v16, v45[0]);
  v45[10] = sub_253462A5C(&qword_269CE6008);
  sub_253465998();
  v45[9] = v17;
  MEMORY[0x270FA5388](v18);
  sub_2534D8F5C((uint64_t)v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_253462A5C(&qword_269CE6010);
  sub_253465998();
  v45[11] = v21;
  v45[12] = v20;
  MEMORY[0x270FA5388](v20);
  sub_2534F8208((uint64_t)v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v45[8] = sub_253B09120();
  sub_253465998();
  v45[7] = v23;
  MEMORY[0x270FA5388](v24);
  sub_2534D8F5C((uint64_t)v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v45[3] = sub_253462A5C(&qword_269CE6018);
  sub_253465998();
  v45[2] = v26;
  MEMORY[0x270FA5388](v27);
  sub_2534966B0();
  sub_253462A5C(&qword_269CE6020);
  sub_253465998();
  v45[1] = v28;
  MEMORY[0x270FA5388](v29);
  uint64_t v30 = sub_25397F55C();
  type metadata accessor for RequestContent.SystemPromptResolution.UserAction(v30);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v31);
  sub_25347FAAC();
  sub_253462A5C(&qword_269CE6028);
  sub_253465998();
  uint64_t v47 = v32;
  uint64_t v48 = v33;
  MEMORY[0x270FA5388](v32);
  sub_25346CC6C();
  sub_25397F800(v4);
  sub_2539EC878();
  uint64_t v46 = v1;
  sub_253A3E178();
  sub_253B0A680();
  sub_2539DF660(v49, v2);
  sub_253A3D030();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_253A3CF28();
      sub_2536D5500();
      sub_25347FA84();
      v37();
      sub_2539ECAD8();
      sub_253578C34();
      sub_25351C2D8();
      sub_2539E6F90((uint64_t)&qword_269CDBAB8);
      sub_253A3E0D8();
      sub_253B0A440();
      sub_2534659CC();
      v38();
      sub_2534DA4BC();
      v39();
      goto LABEL_10;
    case 2u:
      sub_2539ECA8C();
      sub_253962838();
      sub_25351C318();
      sub_253B0A400();
      goto LABEL_8;
    case 3u:
      sub_2539ECA40();
      sub_25351C318();
      sub_253B0A430();
      goto LABEL_8;
    case 4u:
      sub_2539EC9F4();
      sub_25351C318();
      sub_253B0A430();
      goto LABEL_8;
    case 5u:
      sub_2539EC95C();
      sub_25351C318();
      sub_2539EC9A8();
      sub_253B0A440();
LABEL_8:
      sub_2534659CC();
      v40();
      uint64_t v35 = sub_2534D9B10();
      goto LABEL_11;
    case 6u:
      sub_2539EC8C4();
      sub_25351C2D8();
      sub_2539EC910();
      sub_253B0A440();
      uint64_t v41 = sub_253A3F1FC();
      v42(v41);
LABEL_10:
      uint64_t v35 = sub_25351C5C0();
      goto LABEL_11;
    case 7u:
      sub_2539ECB24();
      sub_253B0A3A0();
      sub_253A3D55C();
      sub_2534659CC();
      v43();
      sub_2534659CC();
      v44();
      goto LABEL_12;
    default:
      char v50 = 0;
      sub_2539ECB70();
      sub_253A3BD18();
      sub_253B0A400();
      sub_2534659CC();
      v34();
      uint64_t v35 = sub_2534D9A44();
LABEL_11:
      v36(v35);
LABEL_12:
      sub_2534F8A10();
      sub_2534847C8();
      return;
  }
}

void RequestContent.SystemPromptResolution.UserAction.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12)
{
  sub_2534847F8();
  sub_253A3F2B8();
  uint64_t v123 = v17;
  sub_253462A5C(&qword_269CE6088);
  sub_253465998();
  uint64_t v120 = v19;
  uint64_t v121 = v18;
  MEMORY[0x270FA5388](v18);
  sub_2534AF2BC(v20, v102[0]);
  sub_253462A5C(&qword_269CE6090);
  sub_253465998();
  uint64_t v118 = v22;
  uint64_t v119 = v21;
  MEMORY[0x270FA5388](v21);
  sub_2534D929C(v23, v102[0]);
  uint64_t v117 = sub_253462A5C(&qword_269CE6098);
  sub_253465998();
  uint64_t v116 = v24;
  MEMORY[0x270FA5388](v25);
  sub_2534D9248(v26, v102[0]);
  uint64_t v115 = sub_253462A5C(&qword_269CE60A0);
  sub_253465998();
  uint64_t v122 = v27;
  MEMORY[0x270FA5388](v28);
  sub_2534D9BAC(v29, v102[0]);
  uint64_t v114 = sub_253462A5C(&qword_269CE60A8);
  sub_253465998();
  uint64_t v113 = v30;
  MEMORY[0x270FA5388](v31);
  sub_2534D92B8(v32, v102[0]);
  uint64_t v111 = sub_253462A5C(&qword_269CE60B0);
  sub_253465998();
  uint64_t v112 = v33;
  MEMORY[0x270FA5388](v34);
  sub_2534D8F84(v35, v102[0]);
  uint64_t v110 = sub_253462A5C(&qword_269CE60B8);
  sub_253465998();
  uint64_t v108 = v36;
  MEMORY[0x270FA5388](v37);
  sub_2534B33C8(v38, v102[0]);
  uint64_t v109 = sub_253462A5C(&qword_269CE60C0);
  sub_253465998();
  uint64_t v107 = v39;
  MEMORY[0x270FA5388](v40);
  sub_2534D9264(v41, v102[0]);
  sub_253462A5C(&qword_269CE60C8);
  sub_253465998();
  uint64_t v125 = v43;
  uint64_t v126 = v42;
  MEMORY[0x270FA5388](v42);
  uint64_t v44 = sub_2534D9B74();
  uint64_t v124 = type metadata accessor for RequestContent.SystemPromptResolution.UserAction(v44);
  sub_25346CAF4();
  MEMORY[0x270FA5388](v45);
  sub_2534659D8();
  sub_2534F823C();
  MEMORY[0x270FA5388](v46);
  sub_2534F823C();
  MEMORY[0x270FA5388](v47);
  sub_2534F823C();
  MEMORY[0x270FA5388](v48);
  sub_253A3B9E4();
  MEMORY[0x270FA5388](v49);
  sub_25351C770();
  MEMORY[0x270FA5388](v50);
  sub_2534F8600();
  MEMORY[0x270FA5388](v51);
  sub_2535B45C8();
  MEMORY[0x270FA5388](v52);
  uint64_t v54 = (char *)v102 - v53;
  uint64_t v128 = v12;
  sub_253A3B6B0();
  sub_2539EC878();
  sub_253A3E264();
  uint64_t v55 = v129;
  sub_253B0A660();
  if (!v55)
  {
    v102[1] = v16;
    v102[2] = v15;
    uint64_t v103 = v14;
    uint64_t v104 = v13;
    uint64_t v129 = v54;
    sub_253B0A390();
    sub_253A3EB04();
    if (v56
      && (v102[0] = 0,
          uint64_t v57 = v54[32],
          uint64_t v58 = sub_253A3CD80(),
          uint64_t v64 = sub_25347B78C(v58, v59, v60, v61, v62, v63),
          uint64_t v66 = v65,
          unint64_t v68 = v67,
          swift_bridgeObjectRelease(),
          v66 == v68 >> 1))
    {
      uint64_t v69 = v57;
      uint64_t v70 = v122;
      switch(v69)
      {
        case 1:
          sub_2539ECB24();
          sub_253A3BA30();
          sub_2534659CC();
          v73();
          swift_unknownObjectRelease();
          sub_2534659CC();
          v74();
          sub_253A3EB88();
          swift_storeEnumTagMultiPayload();
          goto LABEL_17;
        case 2:
          sub_2539ECAD8();
          sub_253A3BA30();
          uint64_t v127 = v64;
          sub_253B09120();
          sub_2539E6F90((uint64_t)&qword_269CDBAD0);
          sub_253578ED4();
          sub_253A3F168();
          uint64_t v82 = sub_253A3B62C();
          v83(v82);
          swift_unknownObjectRelease();
          sub_2534659CC();
          v84();
          swift_storeEnumTagMultiPayload();
          uint64_t v85 = v70;
          goto LABEL_16;
        case 3:
          sub_2539ECA8C();
          sub_253A3BA30();
          uint64_t v78 = sub_253B0A330();
          sub_2534659CC();
          v86();
          swift_unknownObjectRelease();
          sub_2534659CC();
          v87();
          sub_253A3D3A0(v78 & 1);
          goto LABEL_15;
        case 4:
          sub_2539ECA40();
          sub_253A3BA30();
          uint64_t v88 = sub_253B0A360();
          sub_2534D91AC();
          v89();
          swift_unknownObjectRelease();
          sub_2534659CC();
          v90();
          uint64_t v91 = (uint64_t)v103;
          *uint64_t v103 = v88;
          sub_253A3EB88();
          swift_storeEnumTagMultiPayload();
          sub_253A3F1D0(v91);
          goto LABEL_17;
        case 5:
          sub_2539EC9F4();
          sub_253A3BA30();
          uint64_t v92 = sub_253B0A360();
          sub_2534659CC();
          v93();
          swift_unknownObjectRelease();
          sub_2534659CC();
          v94();
          uint64_t v95 = v105;
          *uint64_t v105 = v92;
          swift_storeEnumTagMultiPayload();
          uint64_t v85 = (uint64_t)v95;
          goto LABEL_16;
        case 6:
          sub_2539EC95C();
          sub_253A3BA30();
          sub_2539ECC08();
          sub_253A3EE84();
          sub_253B0A370();
          uint64_t v75 = v125;
          sub_2534659CC();
          v96();
          swift_unknownObjectRelease();
          uint64_t v78 = v75 + 8;
          sub_2534B3470();
          v97();
          sub_253A3D3A0(a12);
          goto LABEL_15;
        case 7:
          sub_2539EC8C4();
          sub_253A3BA30();
          sub_2539ECBBC();
          sub_253B0A370();
          sub_2534659CC();
          v98();
          swift_unknownObjectRelease();
          sub_2534B3470();
          v99();
          uint64_t v78 = v106;
          sub_253A3EB88();
          goto LABEL_15;
        default:
          char v130 = 0;
          sub_2539ECB70();
          sub_253A3BA30();
          uint64_t v78 = sub_253B0A330();
          uint64_t v79 = sub_253A3B62C();
          v80(v79);
          swift_unknownObjectRelease();
          sub_2534659CC();
          v81();
          sub_253A3D3A0(v78 & 1);
LABEL_15:
          swift_storeEnumTagMultiPayload();
          uint64_t v85 = v78;
LABEL_16:
          sub_253A3F1D0(v85);
LABEL_17:
          uint64_t v100 = sub_253579270();
          sub_2539DF5B8(v100, v101);
          break;
      }
    }
    else
    {
      sub_253B0A090();
      sub_2534D969C();
      sub_253462A5C(&qword_269CDB688);
      sub_253A3E02C();
      sub_253B0A2D0();
      sub_2534F8464();
      sub_25347B88C();
      uint64_t v71 = sub_2534F859C();
      v72(v71);
      swift_willThrow();
      swift_unknownObjectRelease();
      uint64_t v76 = sub_253A3F224();
      v77(v76);
    }
  }
  _s30IntelligenceFlowPlannerSupport26AnySessionInjectionContextVwxx_0(v128);
  sub_2534F8590();
  sub_2534847C8();
}