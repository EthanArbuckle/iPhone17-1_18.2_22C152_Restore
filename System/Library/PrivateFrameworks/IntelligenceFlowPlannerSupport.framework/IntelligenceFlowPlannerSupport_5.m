_OWORD *initializeWithTake for TranscriptProtoPayloadEnum(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _DWORD *v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  long long v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  _DWORD *v31;
  _DWORD *v32;
  uint64_t v33;
  uint64_t v34;
  long long v35;
  uint64_t v36;
  uint64_t v37;
  _DWORD *v38;
  _DWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t Step;
  uint64_t v43;
  _DWORD *v44;
  _DWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  long long v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  long long v58;
  uint64_t v59;
  unsigned char *v60;
  unsigned char *v61;
  uint64_t v62;
  uint64_t v63;
  int *StepResults;
  uint64_t v65;
  _DWORD *v66;
  _DWORD *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  long long v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  int *v102;
  uint64_t v103;
  void *v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  long long v108;
  int *v109;
  uint64_t v110;
  void *v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  long long v115;
  uint64_t v116;
  void *v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _DWORD *v124;
  _DWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _DWORD *v135;
  _DWORD *v136;
  uint64_t v137;
  uint64_t v138;
  int *v139;
  uint64_t v140;
  _DWORD *v141;
  _DWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  long long v149;
  uint64_t DecorationResult;
  uint64_t v151;
  _OWORD *v152;
  _OWORD *v153;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v155;
  uint64_t v156;
  _DWORD *v157;
  _DWORD *v158;
  uint64_t v159;
  uint64_t v160;
  long long v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  _OWORD *v167;
  _OWORD *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  _OWORD *v186;
  _OWORD *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  _DWORD *v216;
  _DWORD *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  _DWORD *v226;
  _DWORD *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  void *v244;
  void *v245;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v247;
  uint64_t v248;
  _DWORD *v249;
  _DWORD *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  _DWORD *v258;
  _DWORD *v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  _DWORD *v266;
  _DWORD *v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  char *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  _DWORD *v275;
  _DWORD *v276;
  uint64_t v277;
  long long v278;
  uint64_t v279;
  char *v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  char *v284;
  char *v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  char *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  _DWORD *v294;
  _DWORD *v295;
  uint64_t v296;
  uint64_t v297;
  long long v298;
  uint64_t v299;
  char *v300;
  char *v301;
  uint64_t v302;
  uint64_t v303;
  char *v304;
  char *v305;
  uint64_t v306;
  uint64_t v307;
  char *v308;
  char *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  char *v313;
  char *v314;
  uint64_t v315;
  uint64_t v316;
  char *v317;
  char *v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  char *v323;
  char *v324;
  uint64_t v325;
  uint64_t v326;
  _DWORD *v327;
  _DWORD *v328;
  uint64_t v329;
  char *v330;
  char *v331;
  uint64_t v332;
  uint64_t v333;
  char *v334;
  char *v335;
  uint64_t v336;
  uint64_t v337;
  char *v338;
  char *v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  char *v344;
  char *v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v350;
  uint64_t v351;
  char *v352;
  char *v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  _DWORD *v357;
  uint64_t v358;
  uint64_t v359;
  long long v360;
  uint64_t v361;
  char *v362;
  char *v363;
  uint64_t v364;
  uint64_t v365;
  char *v366;
  char *v367;
  uint64_t v368;
  uint64_t v369;
  char *v370;
  char *v371;
  uint64_t v372;
  int v373;
  uint64_t v374;
  uint64_t v375;
  char *v376;
  char *v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  _DWORD *v384;
  _DWORD *v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  char *v389;
  uint64_t v390;
  uint64_t v391;
  char *v392;
  char *v393;
  uint64_t v394;
  uint64_t v395;
  char *v396;
  char *v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  char *v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  void *v412;
  char *v413;
  void *v414;
  char *v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  char *v419;
  char *v420;
  uint64_t v421;
  long long v422;
  uint64_t v423;
  unsigned char *v424;
  uint64_t v425;
  uint64_t v426;
  int *v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  unsigned char *v432;
  unsigned char *v433;
  uint64_t v434;
  uint64_t v435;
  unsigned char *v436;
  unsigned char *v437;
  uint64_t v438;
  uint64_t v439;
  _DWORD *v440;
  _DWORD *v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  char *v445;
  char *v446;
  uint64_t v447;
  uint64_t v448;
  void *v449;
  void *v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  int v455;
  uint64_t v456;
  uint64_t v457;
  _DWORD *v458;
  uint64_t v459;
  uint64_t v460;
  char *v461;
  char *v462;
  uint64_t v463;
  uint64_t v464;
  char *v465;
  char *v466;
  uint64_t v467;
  long long v468;
  int *v469;
  uint64_t v470;
  unsigned char *v471;
  unsigned char *v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  char *v477;
  char *v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  char *v484;
  uint64_t v485;
  uint64_t v486;
  char *v487;
  uint64_t v488;
  uint64_t v489;
  char *v490;
  char *v491;
  uint64_t v492;
  uint64_t v493;
  char *v494;
  char *v495;
  uint64_t v496;
  uint64_t v497;
  char *v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  char *v502;
  char *v503;
  uint64_t v504;
  uint64_t v505;
  char *v506;
  char *v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  char *v515;
  char *v516;
  uint64_t v517;
  uint64_t v518;
  char *v519;
  char *v520;
  uint64_t v521;
  char *v522;
  char *v523;
  uint64_t v524;
  uint64_t v525;
  char *v526;
  char *v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  unsigned char *v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  char *v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  char *v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  char *v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  char *v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  int v571;
  uint64_t v572;
  int v573;
  uint64_t v574;
  uint64_t v575;
  _OWORD *v576;
  _OWORD *v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  _OWORD *v581;
  _OWORD *v582;
  uint64_t v583;
  uint64_t v584;
  unsigned char *v585;
  unsigned char *v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  void *v593;
  uint64_t v594;
  uint64_t v595;
  char *v596;
  char *v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  void *v601;
  uint64_t v602;
  uint64_t v603;
  char *v604;
  char *v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  _OWORD *v610;
  uint64_t v611;
  uint64_t v612;
  char *v613;
  char *v614;
  uint64_t v615;
  uint64_t v616;
  unsigned char *v617;
  unsigned char *v618;
  int v619;
  uint64_t v620;
  char *v621;
  char *v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  int *v628;
  int v629;
  uint64_t v630;
  char *v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  long long v635;
  uint64_t v636;
  char *v637;
  uint64_t v638;
  uint64_t v639;
  _OWORD *v640;
  _OWORD *v641;
  uint64_t v642;
  uint64_t v643;
  long long v644;
  uint64_t v645;
  char *v646;
  uint64_t v647;
  uint64_t v648;
  _OWORD *v649;
  _OWORD *v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  _OWORD *v658;
  _OWORD *v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  int v664;
  uint64_t v665;
  char *v666;
  char *v667;
  uint64_t v668;
  uint64_t v669;
  _OWORD *v670;
  uint64_t v671;
  uint64_t v672;
  unsigned char *v673;
  unsigned char *v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t v679;
  unsigned char *v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  long long v686;
  uint64_t v687;
  char *v688;
  char *v689;
  uint64_t v690;
  uint64_t v691;
  _OWORD *v692;
  _OWORD *v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  uint64_t v703;
  _DWORD *v704;
  _DWORD *v705;
  uint64_t v706;
  uint64_t v707;
  char *v708;
  uint64_t v709;
  uint64_t v710;
  void *v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  uint64_t v716;
  int EnumCaseMultiPayload;
  const void *v718;
  uint64_t v719;
  _DWORD *v720;
  _DWORD *v721;
  uint64_t v722;
  uint64_t v723;
  char *v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  unsigned char *v731;
  unsigned char *v732;
  uint64_t v733;
  uint64_t v734;
  _DWORD *v735;
  _DWORD *v736;
  uint64_t v737;
  uint64_t v738;
  uint64_t v739;
  char *v740;
  char *v741;
  uint64_t v742;
  uint64_t v743;
  void *v744;
  void *v745;
  uint64_t v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  int v750;
  uint64_t v751;
  uint64_t v752;
  _DWORD *v753;
  uint64_t v754;
  uint64_t v755;
  char *v756;
  char *v757;
  uint64_t v758;
  uint64_t v759;
  uint64_t v760;
  uint64_t v761;
  uint64_t v762;
  char *v763;
  char *v764;
  uint64_t v765;
  uint64_t v766;
  uint64_t v767;
  uint64_t v768;
  char *v769;
  uint64_t v770;
  uint64_t v771;
  uint64_t v772;
  unsigned char *v773;
  uint64_t v774;
  uint64_t v775;
  unsigned char *v776;
  uint64_t v777;
  uint64_t v778;
  unsigned char *v779;
  uint64_t v780;
  unsigned char *v781;
  uint64_t v782;
  uint64_t v783;
  unsigned char *v784;
  uint64_t v785;
  uint64_t v786;
  long long v787;
  uint64_t v788;
  uint64_t v789;
  uint64_t v790;
  char *v791;
  char *v792;
  uint64_t v793;
  char *v794;
  char *v795;
  uint64_t v796;
  uint64_t v797;
  unsigned char *v798;
  uint64_t v799;
  uint64_t v800;
  unsigned char *v801;
  uint64_t v802;
  unsigned char *v803;
  uint64_t v804;
  uint64_t v805;
  long long v806;
  uint64_t v807;
  uint64_t v808;
  uint64_t v809;
  char *v810;
  uint64_t v811;
  long long v812;
  uint64_t v813;
  uint64_t v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  char *v818;
  uint64_t v819;
  long long v820;
  uint64_t v821;
  char *v822;
  uint64_t v823;
  uint64_t v824;
  uint64_t v825;
  uint64_t v826;
  uint64_t v827;
  uint64_t v828;
  uint64_t v829;
  char *v830;
  uint64_t v831;
  uint64_t v832;
  char *v833;
  uint64_t v834;
  uint64_t v835;
  char *v836;
  uint64_t v837;
  char *v838;
  char *v839;
  uint64_t v840;
  uint64_t v841;
  char *v842;
  char *v843;
  uint64_t v844;
  uint64_t v845;
  _OWORD *v846;
  _OWORD *v847;
  uint64_t v848;
  uint64_t v849;
  uint64_t v850;
  uint64_t v851;
  uint64_t v852;
  uint64_t v853;
  uint64_t v854;
  uint64_t v855;
  uint64_t v856;
  uint64_t v857;
  uint64_t v858;
  uint64_t v859;
  char *v860;
  char *v861;
  char *v862;
  uint64_t v863;
  uint64_t v864;
  char *v865;
  char *v866;
  uint64_t v867;
  uint64_t v868;
  void *v869;
  void *v870;
  uint64_t v871;
  uint64_t v872;
  uint64_t v873;
  char *v874;
  char *v875;
  uint64_t v876;
  uint64_t v877;
  char *v878;
  char *v879;
  uint64_t v880;
  uint64_t v881;
  uint64_t v882;
  uint64_t v883;
  char *v884;
  char *v885;
  uint64_t v886;
  uint64_t v887;
  char *v888;
  char *v889;
  uint64_t v890;
  uint64_t v891;
  char *v892;
  char *v893;
  uint64_t v894;
  uint64_t v895;
  char *v896;
  char *v897;
  uint64_t v898;
  uint64_t v899;
  uint64_t v900;
  uint64_t v901;
  uint64_t v902;
  uint64_t v903;
  char *v904;
  char *v905;
  uint64_t v906;
  int v907;
  uint64_t v908;
  char *v909;
  uint64_t v910;
  int v911;
  uint64_t v912;
  uint64_t v913;
  long long v914;
  uint64_t v915;
  uint64_t v916;
  uint64_t v917;
  void *v918;
  char *v919;
  char *v920;
  uint64_t v921;
  char *v922;
  uint64_t v923;
  uint64_t v924;
  char *v925;
  char *v926;
  uint64_t v927;
  unsigned char *v928;
  uint64_t v929;
  uint64_t v930;
  unsigned char *v931;
  uint64_t v932;
  uint64_t v933;
  unsigned char *v934;
  unsigned char *v935;
  uint64_t v936;
  uint64_t v937;
  uint64_t v938;
  char *v939;
  void *v940;
  char *v941;
  uint64_t v942;
  char *v943;
  uint64_t v944;
  void *v945;
  void *v946;
  int *v947;
  uint64_t v948;
  uint64_t v949;
  _OWORD *v950;
  _OWORD *v951;
  uint64_t v952;
  uint64_t v953;
  long long v954;
  long long v955;
  uint64_t v956;
  char *v957;
  char *v958;
  uint64_t v959;
  uint64_t v960;
  _OWORD *v961;
  _OWORD *v962;
  uint64_t v963;
  uint64_t v964;
  uint64_t v965;
  unsigned char *v966;
  uint64_t v967;
  uint64_t v968;
  unsigned char *v969;
  uint64_t v970;
  uint64_t v971;
  char *v972;
  char *v973;
  uint64_t v974;
  uint64_t v975;
  char *v976;
  _OWORD *v977;
  uint64_t v978;
  uint64_t v979;
  uint64_t v980;
  uint64_t v981;
  _OWORD *v982;
  long long v983;
  uint64_t v984;
  uint64_t v985;
  long long v986;
  char *v987;
  char *v988;
  uint64_t v989;
  uint64_t v990;
  char *v991;
  char *v992;
  uint64_t v993;
  uint64_t v994;
  char *v995;
  char *v996;
  uint64_t v997;
  uint64_t v998;
  char *v999;
  char *v1000;
  uint64_t v1001;
  uint64_t v1002;
  _DWORD *v1003;
  _DWORD *v1004;
  uint64_t v1005;
  uint64_t v1006;
  uint64_t v1007;
  char *v1008;
  char *v1009;
  uint64_t v1010;
  uint64_t v1011;
  _DWORD *v1012;
  _DWORD *v1013;
  uint64_t v1014;
  uint64_t v1015;
  char *v1016;
  char *v1017;
  uint64_t v1018;
  uint64_t v1019;
  _DWORD *v1020;
  _DWORD *v1021;
  uint64_t v1022;
  uint64_t v1023;
  char *v1024;
  char *v1025;
  uint64_t v1026;
  uint64_t v1027;
  _OWORD *v1028;
  _OWORD *v1029;
  uint64_t v1030;
  uint64_t v1031;
  long long v1032;
  uint64_t v1033;
  char *v1034;
  char *v1035;
  uint64_t v1036;
  uint64_t v1037;
  char *v1038;
  char *v1039;
  uint64_t v1040;
  long long v1041;
  uint64_t v1042;
  uint64_t v1043;
  uint64_t v1044;
  uint64_t v1045;
  uint64_t v1046;
  char *v1047;
  char *v1048;
  uint64_t v1049;
  int v1050;
  uint64_t v1051;
  unsigned char *v1052;
  uint64_t v1053;
  uint64_t v1054;
  uint64_t v1055;
  uint64_t v1056;
  uint64_t v1057;
  uint64_t v1058;
  uint64_t v1059;
  uint64_t v1060;
  uint64_t v1061;
  char *v1062;
  uint64_t v1063;
  uint64_t v1064;
  char *v1065;
  char *v1066;
  uint64_t v1067;
  char *v1068;
  char *v1069;
  uint64_t v1070;
  uint64_t v1071;
  char *v1072;
  char *v1073;
  uint64_t v1074;
  uint64_t v1075;
  void *v1076;
  void *v1077;
  int *v1078;
  uint64_t v1079;
  uint64_t v1080;
  _OWORD *v1081;
  _OWORD *v1082;
  uint64_t v1083;
  uint64_t v1084;
  uint64_t v1085;
  uint64_t v1086;
  uint64_t v1087;
  uint64_t v1088;
  uint64_t v1089;
  char *v1090;
  uint64_t v1091;
  char *v1092;
  uint64_t v1093;
  char *v1094;
  char *v1095;
  uint64_t v1096;
  uint64_t v1097;
  _OWORD *v1098;
  _OWORD *v1099;
  uint64_t v1100;
  uint64_t v1101;
  uint64_t v1102;
  uint64_t v1103;
  uint64_t v1104;
  uint64_t v1105;
  char *v1106;
  uint64_t v1107;
  char *v1108;
  uint64_t v1109;
  char *v1110;
  char *v1111;
  uint64_t v1112;
  uint64_t v1113;
  unsigned char *v1114;
  unsigned char *v1115;
  uint64_t v1116;
  uint64_t v1117;
  uint64_t v1118;
  unsigned char *v1119;
  unsigned char *v1120;
  uint64_t v1121;
  uint64_t v1122;
  _OWORD *v1123;
  _OWORD *v1124;
  uint64_t v1125;
  uint64_t v1126;
  uint64_t v1127;
  uint64_t v1128;
  uint64_t v1129;
  uint64_t v1130;
  long long v1131;
  uint64_t v1132;
  uint64_t v1133;
  char *v1134;
  char *v1135;
  uint64_t v1136;
  uint64_t v1137;
  char *v1138;
  char *v1139;
  uint64_t v1140;
  uint64_t v1141;
  _DWORD *v1142;
  _DWORD *v1143;
  uint64_t v1144;
  uint64_t v1145;
  uint64_t v1146;
  char *v1147;
  char *v1148;
  uint64_t v1149;
  uint64_t v1150;
  char *v1151;
  char *v1152;
  uint64_t v1153;
  uint64_t v1154;
  uint64_t v1155;
  uint64_t v1156;
  uint64_t v1157;
  uint64_t v1158;
  char *v1159;
  uint64_t v1160;
  char *v1161;
  char *v1162;
  uint64_t v1163;
  uint64_t v1164;
  char *v1165;
  char *v1166;
  uint64_t v1167;
  uint64_t v1168;
  char *v1169;
  char *v1170;
  uint64_t v1171;
  uint64_t v1173;
  uint64_t v1174;
  uint64_t v1175;
  char *v1176;
  uint64_t v1177;
  uint64_t v1178;
  char *v1179;
  unsigned char *v1180;
  uint64_t v1181;
  uint64_t v1182;
  char *v1183;
  unsigned char *v1184;
  uint64_t v1185;
  uint64_t v1186;
  unsigned char *v1187;
  unsigned char *v1188;
  unsigned char *v1189;
  uint64_t v1190;
  unsigned char *v1191;
  uint64_t v1192;
  uint64_t v1193;
  char *v1194;
  uint64_t v1195;
  char *v1196;
  int *v1197;
  unsigned char *v1198;
  unsigned char *v1199;
  void *v1200;
  unsigned char *v1201;
  unsigned char *v1202;
  unsigned char *v1203;
  char *v1204;
  char *v1205;
  char *v1206;
  char *v1207;
  unsigned char *v1208;
  unsigned char *v1209;
  char *v1210;
  char *v1211;
  int *v1212;
  void *v1213;
  void *v1214;
  void *v1215;
  void *v1216;
  _OWORD *v1217;
  int *v1218;
  char *v1219;
  char *v1220;
  void *v1221;
  char *v1222;
  char *v1223;
  int *v1224;
  void *v1225;
  char *v1226;
  unsigned char *v1227;
  unsigned char *v1228;
  int *v1229;
  void *v1230;
  int *v1231;
  void *v1232;
  int *v1233;
  char *v1234;
  char *v1235;
  char *v1236;
  char *v1237;
  char *v1238;
  unsigned char *v1239;
  _OWORD *v1240;
  int *v1241;
  char *v1242;
  int *v1243;
  int *v1244;
  int *v1245;
  char *v1246;
  char *v1247;
  int *v1248;
  void *v1249;
  unsigned char *v1250;
  void *v1251;
  void *v1252;
  _DWORD *v1253;
  char *v1254;
  char *v1255;
  char *v1256;
  void *v1257;
  char *v1258;
  char *v1259;
  char *v1260;
  char *v1261;
  char *v1262;
  int *__src;
  int *__srca;
  char *__srcb;
  void *__srcc;
  unsigned char *__srcd;
  char *__srcr;
  unsigned char *__srce;
  char *__srcf;
  char *__srcg;
  unsigned char *__srch;
  int *__srci;
  int *__srcj;
  int *__srck;
  void *__srcl;
  _OWORD *__srcm;
  unsigned char *__srcs;
  char *__srct;
  void *__srcn;
  int *__srco;
  int *__srcp;
  unsigned char *__srcu;
  char *__srcv;
  void *__srcw;
  char *__srcx;
  char *__srcy;
  char *__srcz;
  void *__srcba;
  char *__srcbb;
  char *__srcbc;
  void *__srcq;
  char *__srcbd;
  char *__srcbe;
  char *__srcbf;
  void *__srcbg;
  void *__srcbh;
  char *__srcbi;
  char *__srcbj;
  char *__srcbk;
  char *__srcbl;
  unsigned char *__srcbm;
  _DWORD *__dst;
  int *__dsta;
  void *__dstb;
  int *__dstc;
  int *__dstd;
  unsigned char *__dste;
  char *__dstf;
  char *__dstg;
  char *__dstl;
  int *__dsth;
  unsigned char *__dstm;
  void *__dsti;
  char *__dstn;
  unsigned char *__dsto;
  char *__dstp;
  char *__dstq;
  void *__dstj;
  int *__dstk;
  char *__dstr;
  char *__dsts;
  int *v1323;
  int *v1324;
  char *v1325;
  _DWORD *v1326;
  char *v1327;
  int *v1328;
  int *v1329;
  int *v1330;
  unsigned char *v1331;
  int *v1332;
  char *v1333;
  char *v1334;
  int *v1335;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = type metadata accessor for TranscriptProtoLocaleSettings(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
      {
        v7 = sub_253462A5C(&qword_26B2497A0);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        v161 = a2[1];
        *a1 = *a2;
        a1[1] = v161;
        a1[2] = a2[2];
        v162 = *(int *)(v6 + 28);
        v163 = (char *)a1 + v162;
        v164 = (char *)a2 + v162;
        v165 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 32))(v163, v164, v165);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      }
      Step = type metadata accessor for TranscriptProtoSessionStart(0);
      v166 = *(int *)(Step + 20);
      v167 = (_OWORD *)((char *)a1 + v166);
      v168 = (_OWORD *)((char *)a2 + v166);
      v169 = type metadata accessor for TranscriptProtoDeviceDetails(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v168, 1, v169))
      {
        v170 = sub_253462A5C(&qword_26B249680);
        memcpy(v167, v168, *(void *)(*(void *)(v170 - 8) + 64));
      }
      else
      {
        *v167 = *v168;
        v293 = *(int *)(v169 + 20);
        v294 = (_DWORD *)((char *)v167 + v293);
        v295 = (_DWORD *)((char *)v168 + v293);
        v296 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v295, 1, v296))
        {
          v297 = sub_253462A5C(&qword_269CE2510);
          memcpy(v294, v295, *(void *)(*(void *)(v297 - 8) + 64));
        }
        else
        {
          *v294 = *v295;
          v388 = *(int *)(v296 + 20);
          v1325 = (char *)v294 + v388;
          v389 = (char *)v295 + v388;
          v390 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v390 - 8) + 32))(v1325, v389, v390);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v294, 0, 1, v296);
        }
        v391 = *(int *)(v169 + 24);
        v392 = (char *)v167 + v391;
        v393 = (char *)v168 + v391;
        v394 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v394 - 8) + 32))(v392, v393, v394);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v167, 0, 1, v169);
      }
      goto LABEL_172;
    case 1u:
      *a1 = *a2;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      v8 = (int *)type metadata accessor for TranscriptProtoTextQuery(0);
      v9 = v8[6];
      v10 = (_DWORD *)((char *)a1 + v9);
      v11 = (_DWORD *)((char *)a2 + v9);
      v12 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
      {
        v13 = sub_253462A5C(&qword_26B249528);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        *v10 = *v11;
        *(_OWORD *)(v10 + 2) = *(_OWORD *)(v11 + 2);
        v171 = *(int *)(v12 + 24);
        v172 = (char *)v10 + v171;
        v173 = (char *)v11 + v171;
        v174 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 32))(v172, v173, v174);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
      }
      *(_OWORD *)((char *)a1 + v8[7]) = *(_OWORD *)((char *)a2 + v8[7]);
      v175 = v8[8];
      v176 = (char *)a1 + v175;
      v177 = (char *)a2 + v175;
      v178 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 32))(v176, v177, v178);
      goto LABEL_650;
    case 2u:
      *(void *)a1 = *(void *)a2;
      *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
      a1[1] = a2[1];
      v14 = *(int *)(type metadata accessor for TranscriptProtoSpeechQuery(0) + 28);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      goto LABEL_650;
    case 3u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      v18 = (int *)type metadata accessor for TranscriptProtoRequest(0);
      v19 = v18[5];
      v20 = (_OWORD *)((char *)a1 + v19);
      v21 = (_OWORD *)((char *)a2 + v19);
      v22 = type metadata accessor for TranscriptProtoRequestContent(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v22))
      {
        v23 = sub_253462A5C(&qword_269CE1AF0);
        memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
LABEL_467:
        v845 = v18[6];
        v846 = (_OWORD *)((char *)a1 + v845);
        v847 = (_OWORD *)((char *)a2 + v845);
        v848 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v847, 1, v848))
        {
          v849 = sub_253462A5C(&qword_269CE1AE0);
          memcpy(v846, v847, *(void *)(*(void *)(v849 - 8) + 64));
        }
        else
        {
          v850 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v847, 1, v850))
          {
            v851 = sub_253462A5C(&qword_269CE1B50);
            memcpy(v846, v847, *(void *)(*(void *)(v851 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                *v846 = *v847;
                v853 = type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0);
                goto LABEL_481;
              case 2u:
                *v846 = *v847;
                *((unsigned char *)v846 + 16) = *((unsigned char *)v847 + 16);
                v854 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
                goto LABEL_484;
              case 3u:
                *v846 = *v847;
                *((unsigned char *)v846 + 16) = *((unsigned char *)v847 + 16);
                v854 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
                goto LABEL_484;
              case 4u:
                *v846 = *v847;
                *((unsigned char *)v846 + 16) = *((unsigned char *)v847 + 16);
                v854 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
                goto LABEL_484;
              case 5u:
                *v846 = *v847;
                *((unsigned char *)v846 + 16) = *((unsigned char *)v847 + 16);
                v854 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
                goto LABEL_484;
              case 6u:
                v855 = type metadata accessor for TranscriptProtoStatementID(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v847, 1, v855))
                {
                  v856 = sub_253462A5C(&qword_26B249528);
                  memcpy(v846, v847, *(void *)(*(void *)(v856 - 8) + 64));
                }
                else
                {
                  *(_DWORD *)v846 = *(_DWORD *)v847;
                  *(_OWORD *)((char *)v846 + 8) = *(_OWORD *)((char *)v847 + 8);
                  v857 = *(int *)(v855 + 24);
                  __dstp = (char *)v847 + v857;
                  v1333 = (char *)v846 + v857;
                  v858 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v858 - 8) + 32))(v1333, __dstp, v858);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v846, 0, 1, v855);
                }
                v854 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
                v859 = *(int *)(v854 + 20);
                v860 = (char *)v846 + v859;
                v861 = (char *)v847 + v859;
                *(void *)v860 = *(void *)v861;
                v860[8] = v861[8];
LABEL_484:
                v852 = *(int *)(v854 + 24);
                break;
              case 7u:
                *(void *)v846 = *(void *)v847;
                *((unsigned char *)v846 + 8) = *((unsigned char *)v847 + 8);
                v853 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0);
LABEL_481:
                v852 = *(int *)(v853 + 20);
                break;
              default:
                *v846 = *v847;
                *((_WORD *)v846 + 8) = *((_WORD *)v847 + 8);
                v852 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
                break;
            }
            v862 = (char *)v846 + v852;
            v1334 = (char *)v847 + v852;
            v863 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v863 - 8) + 32))(v862, v1334, v863);
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v846, 0, 1, v850);
          }
          v864 = *(int *)(v848 + 20);
          v865 = (char *)v846 + v864;
          v866 = (char *)v847 + v864;
          v867 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v867 - 8) + 32))(v865, v866, v867);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v846, 0, 1, v848);
        }
        *(_OWORD *)((char *)a1 + v18[7]) = *(_OWORD *)((char *)a2 + v18[7]);
        v868 = v18[8];
        v869 = (void *)((char *)a1 + v868);
        v870 = (void *)((char *)a2 + v868);
        v871 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v870, 1, v871))
        {
          v872 = sub_253462A5C(&qword_269CE1AD0);
          memcpy(v869, v870, *(void *)(*(void *)(v872 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v869 = *(_OWORD *)v870;
          v869[2] = v870[2];
          v873 = *(int *)(v871 + 24);
          v874 = (char *)v869 + v873;
          v875 = (char *)v870 + v873;
          v876 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v876 - 8) + 32))(v874, v875, v876);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v869, 0, 1, v871);
        }
        goto LABEL_490;
      }
      v179 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v179))
      {
        v180 = sub_253462A5C(&qword_269CE1B00);
        memcpy(v20, v21, *(void *)(*(void *)(v180 - 8) + 64));
LABEL_466:
        v841 = *(int *)(v22 + 20);
        v842 = (char *)v20 + v841;
        v843 = (char *)v21 + v841;
        v844 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v844 - 8) + 32))(v842, v843, v844);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, v22);
        goto LABEL_467;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)v20 = *(void *)v21;
          v418 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          v419 = (char *)v20 + v418;
          v420 = (char *)v21 + v418;
          v421 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v421 - 8) + 32))(v419, v420, v421);
          goto LABEL_465;
        case 2u:
          v422 = v21[1];
          *v20 = *v21;
          v20[1] = v422;
          __dstc = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
          v423 = __dstc[6];
          v1228 = (char *)v20 + v423;
          v424 = (char *)v21 + v423;
          v425 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
          __srcd = v424;
          v426 = (uint64_t)v424;
          v427 = (int *)v425;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v426, 1, v425))
          {
            v428 = sub_253462A5C(&qword_269CE2140);
            memcpy(v1228, __srcd, *(void *)(*(void *)(v428 - 8) + 64));
            goto LABEL_385;
          }
          v1212 = v427;
          v509 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__srcd, 1, v509))
          {
            v510 = sub_253462A5C(&qword_269CE2200);
            v511 = (uint64_t)v1228;
            memcpy(v1228, __srcd, *(void *)(*(void *)(v510 - 8) + 64));
LABEL_384:
            v701 = v1212[5];
            v1251 = (void *)(v511 + v701);
            __srcs = &__srcd[v701];
            v702 = sub_253B07160();
            (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v702 - 8) + 32))(v1251, __srcs, v702);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v511, 0, 1, (uint64_t)v1212);
LABEL_385:
            v703 = __dstc[7];
            v704 = (_DWORD *)((char *)v20 + v703);
            v705 = (_DWORD *)((char *)v21 + v703);
            v1233 = (int *)type metadata accessor for TranscriptProtoStatementID(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v705, 1, (uint64_t)v1233))
            {
              v706 = sub_253462A5C(&qword_26B249528);
              memcpy(v704, v705, *(void *)(*(void *)(v706 - 8) + 64));
            }
            else
            {
              *v704 = *v705;
              *(_OWORD *)(v704 + 2) = *(_OWORD *)(v705 + 2);
              v707 = v1233[6];
              __srct = (char *)v704 + v707;
              v708 = (char *)v705 + v707;
              v709 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v709 - 8) + 32))(__srct, v708, v709);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v704, 0, 1, (uint64_t)v1233);
            }
            v710 = __dstc[8];
            __srcn = (void *)((char *)v20 + v710);
            v711 = (void *)((char *)v21 + v710);
            v712 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v711, 1, v712))
            {
              v713 = sub_253462A5C(&qword_269CE2130);
              memcpy(__srcn, v711, *(void *)(*(void *)(v713 - 8) + 64));
LABEL_463:
              v500 = __dstc[9];
              goto LABEL_464;
            }
            v1218 = (int *)v712;
            v714 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v711, 1, v714))
            {
              v715 = sub_253462A5C(&qword_269CE2150);
              v716 = (uint64_t)__srcn;
              memcpy(__srcn, v711, *(void *)(*(void *)(v715 - 8) + 64));
LABEL_462:
              v835 = v1218[5];
              __srcba = (void *)(v716 + v835);
              v836 = (char *)v711 + v835;
              v837 = sub_253B07160();
              (*(void (**)(void *, char *, uint64_t))(*(void *)(v837 - 8) + 32))(__srcba, v836, v837);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v716, 0, 1, (uint64_t)v1218);
              goto LABEL_463;
            }
            v1252 = (void *)v179;
            v1192 = v714;
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            v718 = v711;
            v1200 = v711;
            if (EnumCaseMultiPayload == 1)
            {
              v716 = (uint64_t)__srcn;
              *__srcn = *v711;
              v723 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
              v724 = (char *)__srcn + v723;
              v1234 = (char *)v711 + v723;
              v725 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v725 - 8) + 32))(v724, v1234, v725);
              v726 = v1192;
            }
            else
            {
              if (EnumCaseMultiPayload)
              {
                v726 = v714;
                v716 = (uint64_t)__srcn;
                memcpy(__srcn, v718, *(void *)(*(void *)(v1192 - 8) + 64));
LABEL_461:
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v716, 0, 1, v726);
                v179 = (uint64_t)v1252;
                v711 = v1200;
                goto LABEL_462;
              }
              *(_OWORD *)__srcn = *(_OWORD *)v711;
              v1185 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
              v719 = *(int *)(v1185 + 20);
              v720 = (_DWORD *)((char *)__srcn + v719);
              v721 = (_DWORD *)((char *)v711 + v719);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v718 + v719, 1, (uint64_t)v1233))
              {
                v722 = sub_253462A5C(&qword_26B249528);
                memcpy(v720, v721, *(void *)(*(void *)(v722 - 8) + 64));
              }
              else
              {
                *v720 = *v721;
                *(_OWORD *)(v720 + 2) = *(_OWORD *)(v721 + 2);
                v829 = v1233[6];
                v1183 = (char *)v720 + v829;
                v830 = (char *)v721 + v829;
                v831 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v831 - 8) + 32))(v1183, v830, v831);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v720, 0, 1, (uint64_t)v1233);
              }
              v832 = *(int *)(v1185 + 24);
              v716 = (uint64_t)__srcn;
              v833 = (char *)__srcn + v832;
              v1237 = (char *)v1200 + v832;
              v834 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v834 - 8) + 32))(v833, v1237, v834);
              v726 = v1192;
            }
            swift_storeEnumTagMultiPayload();
            goto LABEL_461;
          }
          v571 = swift_getEnumCaseMultiPayload();
          switch(v571)
          {
            case 6:
              v698 = sub_253B07160();
              v511 = (uint64_t)v1228;
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v698 - 8) + 32))(v1228, __srcd, v698);
              break;
            case 5:
              *v1228 = *__srcd;
              v699 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                            + 20);
              v1191 = &__srcd[v699];
              v1199 = &v1228[v699];
              v700 = sub_253B07160();
              v511 = (uint64_t)v1228;
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v700 - 8) + 32))(v1199, v1191, v700);
              break;
            case 1:
              v572 = sub_253B08E50();
              v511 = (uint64_t)v1228;
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v572 - 8) + 32))(v1228, __srcd, v572);
              break;
            default:
              v511 = (uint64_t)v1228;
              memcpy(v1228, __srcd, *(void *)(*(void *)(v509 - 8) + 64));
              goto LABEL_383;
          }
          swift_storeEnumTagMultiPayload();
LABEL_383:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v511, 0, 1, v509);
          goto LABEL_384;
        case 3u:
          v429 = sub_253B07160();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v429 - 8) + 32))(v20, v21, v429);
          goto LABEL_465;
        default:
          *v20 = *v21;
          v355 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          v356 = *(int *)(v355 + 20);
          __src = (int *)v355;
          __dst = (_DWORD *)((char *)v20 + v356);
          v357 = (_DWORD *)((char *)v21 + v356);
          v358 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v357, 1, v358))
          {
            v359 = sub_253462A5C(&qword_26B249528);
            memcpy(__dst, v357, *(void *)(*(void *)(v359 - 8) + 64));
          }
          else
          {
            *__dst = *v357;
            *(_OWORD *)(__dst + 2) = *(_OWORD *)(v357 + 2);
            v497 = *(int *)(v358 + 24);
            v1242 = (char *)__dst + v497;
            v498 = (char *)v357 + v497;
            v499 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v499 - 8) + 32))(v1242, v498, v499);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v358);
          }
          v500 = __src[6];
LABEL_464:
          v838 = (char *)v20 + v500;
          v839 = (char *)v21 + v500;
          v840 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v840 - 8) + 32))(v838, v839, v840);
LABEL_465:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, v179);
          goto LABEL_466;
      }
    case 4u:
      v24 = a2[1];
      *a1 = *a2;
      a1[1] = v24;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
      v25 = *(int *)(type metadata accessor for TranscriptProtoPlan(0) + 36);
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      goto LABEL_650;
    case 5u:
      *a1 = *a2;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      *((void *)a1 + 3) = *((void *)a2 + 3);
      v29 = (int *)type metadata accessor for TranscriptProtoAction(0);
      v30 = v29[7];
      v31 = (_DWORD *)((char *)a1 + v30);
      v32 = (_DWORD *)((char *)a2 + v30);
      v33 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v32, 1, v33))
      {
        v34 = sub_253462A5C(&qword_26B249528);
        memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        *v31 = *v32;
        *(_OWORD *)(v31 + 2) = *(_OWORD *)(v32 + 2);
        v181 = *(int *)(v33 + 24);
        v182 = (char *)v31 + v181;
        v183 = (char *)v32 + v181;
        v184 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 32))(v182, v183, v184);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v31, 0, 1, v33);
      }
      *(_OWORD *)((char *)a1 + v29[8]) = *(_OWORD *)((char *)a2 + v29[8]);
      *(_OWORD *)((char *)a1 + v29[9]) = *(_OWORD *)((char *)a2 + v29[9]);
      *(_OWORD *)((char *)a1 + v29[10]) = *(_OWORD *)((char *)a2 + v29[10]);
      v185 = v29[11];
      v186 = (_OWORD *)((char *)a1 + v185);
      v187 = (_OWORD *)((char *)a2 + v185);
      v188 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v187, 1, v188)) {
        goto LABEL_75;
      }
      goto LABEL_125;
    case 6u:
      v35 = a2[1];
      *a1 = *a2;
      a1[1] = v35;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
      v36 = type metadata accessor for TranscriptProtoClientAction(0);
      v37 = *(int *)(v36 + 40);
      v38 = (_DWORD *)((char *)a1 + v37);
      v39 = (_DWORD *)((char *)a2 + v37);
      v40 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v39, 1, v40))
      {
        v41 = sub_253462A5C(&qword_26B249528);
        memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        *v38 = *v39;
        *(_OWORD *)(v38 + 2) = *(_OWORD *)(v39 + 2);
        v190 = *(int *)(v40 + 24);
        v191 = (char *)v38 + v190;
        v192 = (char *)v39 + v190;
        v193 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 32))(v191, v192, v193);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v38, 0, 1, v40);
      }
      v194 = *(int *)(v36 + 44);
      v195 = (char *)a1 + v194;
      v196 = (char *)a2 + v194;
      v197 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 32))(v195, v196, v197);
      goto LABEL_650;
    case 7u:
      *(void *)a1 = *(void *)a2;
      Step = type metadata accessor for TranscriptProtoQueryStep(0);
      v43 = *(int *)(Step + 20);
      v44 = (_DWORD *)((char *)a1 + v43);
      v45 = (_DWORD *)((char *)a2 + v43);
      v46 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v45, 1, v46)) {
        goto LABEL_15;
      }
      goto LABEL_78;
    case 8u:
      *(void *)a1 = *(void *)a2;
      Step = type metadata accessor for TranscriptProtoVariableStep(0);
      v48 = *(int *)(Step + 20);
      v44 = (_DWORD *)((char *)a1 + v48);
      v45 = (_DWORD *)((char *)a2 + v48);
      v46 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v45, 1, v46))
      {
LABEL_15:
        v47 = sub_253462A5C(&qword_26B249528);
        memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
LABEL_78:
        *v44 = *v45;
        *(_OWORD *)(v44 + 2) = *(_OWORD *)(v45 + 2);
        v198 = *(int *)(v46 + 24);
        v199 = (char *)v44 + v198;
        v200 = (char *)v45 + v198;
        v201 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v201 - 8) + 32))(v199, v200, v201);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v44, 0, 1, v46);
      }
LABEL_172:
      v395 = *(int *)(Step + 24);
      v396 = (char *)a1 + v395;
      v397 = (char *)a2 + v395;
      v398 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v398 - 8) + 32))(v396, v397, v398);
      goto LABEL_650;
    case 0xAu:
      v49 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v49))
      {
        v50 = sub_253462A5C(&qword_269CE1D40);
        memcpy(a1, a2, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            v405 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v405))
            {
              v406 = sub_253462A5C(&qword_269CE1D58);
              memcpy(a1, a2, *(void *)(*(void *)(v406 - 8) + 64));
            }
            else
            {
              swift_getEnumCaseMultiPayload();
              *a1 = *a2;
              *((void *)a1 + 2) = *((void *)a2 + 2);
              v476 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
              v477 = (char *)a1 + v476;
              v478 = (char *)a2 + v476;
              v479 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v479 - 8) + 32))(v477, v478, v479);
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v405);
            }
            v480 = type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
            goto LABEL_246;
          case 2u:
            v407 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v407))
            {
              v408 = sub_253462A5C(&qword_269CE1D88);
              memcpy(a1, a2, *(void *)(*(void *)(v408 - 8) + 64));
            }
            else
            {
              v481 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v481))
              {
                memcpy(a1, a2, *(void *)(*(void *)(v407 - 8) + 64));
              }
              else
              {
                *a1 = *a2;
                *((void *)a1 + 2) = *((void *)a2 + 2);
                v514 = *(int *)(v481 + 24);
                v515 = (char *)a1 + v514;
                v516 = (char *)a2 + v514;
                v517 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v517 - 8) + 32))(v515, v516, v517);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v481);
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v407);
            }
            v480 = type metadata accessor for TranscriptProtoPlannerError(0);
            goto LABEL_246;
          case 3u:
            v409 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v409))
            {
              v410 = sub_253462A5C(&qword_269CE1D70);
              memcpy(a1, a2, *(void *)(*(void *)(v410 - 8) + 64));
            }
            else
            {
              v482 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v482))
              {
                memcpy(a1, a2, *(void *)(*(void *)(v409 - 8) + 64));
              }
              else
              {
                *a1 = *a2;
                *((void *)a1 + 2) = *((void *)a2 + 2);
                v518 = *(int *)(v482 + 24);
                v519 = (char *)a1 + v518;
                v520 = (char *)a2 + v518;
                v521 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v521 - 8) + 32))(v519, v520, v521);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v482);
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v409);
            }
            v480 = type metadata accessor for TranscriptProtoExecutorError(0);
LABEL_246:
            v202 = *(int *)(v480 + 20);
            break;
          default:
            *a1 = *a2;
            *((void *)a1 + 2) = *((void *)a2 + 2);
            v202 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
            break;
        }
        v522 = (char *)a1 + v202;
        v523 = (char *)a2 + v202;
        v524 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v524 - 8) + 32))(v522, v523, v524);
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v49);
      }
      v525 = *(int *)(type metadata accessor for TranscriptProtoSessionError(0) + 20);
      v526 = (char *)a1 + v525;
      v527 = (char *)a2 + v525;
      v528 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v528 - 8) + 32))(v526, v527, v528);
      goto LABEL_650;
    case 0xBu:
      v51 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v51))
      {
        v52 = sub_253462A5C(&qword_269CE1ED8);
        memcpy(a1, a2, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        v203 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v203))
        {
          v204 = sub_253462A5C(&qword_269CE1EF0);
          memcpy(a1, a2, *(void *)(*(void *)(v204 - 8) + 64));
        }
        else
        {
          v360 = a2[1];
          *a1 = *a2;
          a1[1] = v360;
          a1[2] = a2[2];
          v361 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
          v362 = (char *)a1 + v361;
          v363 = (char *)a2 + v361;
          v364 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v364 - 8) + 32))(v362, v363, v364);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v203);
        }
        v365 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
        v366 = (char *)a1 + v365;
        v367 = (char *)a2 + v365;
        v368 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v368 - 8) + 32))(v366, v367, v368);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v51);
      }
      v369 = *(int *)(type metadata accessor for TranscriptProtoRecoverableError(0) + 20);
      v370 = (char *)a1 + v369;
      v371 = (char *)a2 + v369;
      v372 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v372 - 8) + 32))(v370, v371, v372);
      goto LABEL_650;
    case 0xCu:
      v53 = a2[1];
      *a1 = *a2;
      a1[1] = v53;
      a1[2] = a2[2];
      v54 = *(int *)(type metadata accessor for TranscriptProtoClientCustom(0) + 28);
      v55 = (char *)a1 + v54;
      v56 = (char *)a2 + v54;
      v57 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
      goto LABEL_650;
    case 0xDu:
      v58 = a2[1];
      *a1 = *a2;
      a1[1] = v58;
      v18 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
      v59 = v18[6];
      v60 = (char *)a1 + v59;
      v61 = (char *)a2 + v59;
      v62 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v61, 1, v62))
      {
        v63 = sub_253462A5C(&qword_269CE2140);
        memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
        goto LABEL_198;
      }
      v205 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v61, 1, v205))
      {
        v206 = sub_253462A5C(&qword_269CE2200);
        memcpy(v60, v61, *(void *)(*(void *)(v206 - 8) + 64));
        goto LABEL_197;
      }
      v373 = swift_getEnumCaseMultiPayload();
      switch(v373)
      {
        case 6:
          v430 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v430 - 8) + 32))(v60, v61, v430);
          goto LABEL_194;
        case 5:
          *v60 = *v61;
          v431 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          v432 = &v60[v431];
          v433 = &v61[v431];
          v434 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v434 - 8) + 32))(v432, v433, v434);
          goto LABEL_194;
        case 1:
          v374 = sub_253B08E50();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v374 - 8) + 32))(v60, v61, v374);
LABEL_194:
          swift_storeEnumTagMultiPayload();
          goto LABEL_196;
      }
      memcpy(v60, v61, *(void *)(*(void *)(v205 - 8) + 64));
LABEL_196:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v60, 0, 1, v205);
LABEL_197:
      v435 = *(int *)(v62 + 20);
      v436 = &v60[v435];
      v437 = &v61[v435];
      v438 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v438 - 8) + 32))(v436, v437, v438);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v60, 0, 1, v62);
LABEL_198:
      v439 = v18[7];
      v440 = (_DWORD *)((char *)a1 + v439);
      v441 = (_DWORD *)((char *)a2 + v439);
      v442 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v441, 1, v442))
      {
        v443 = sub_253462A5C(&qword_26B249528);
        memcpy(v440, v441, *(void *)(*(void *)(v443 - 8) + 64));
      }
      else
      {
        *v440 = *v441;
        *(_OWORD *)(v440 + 2) = *(_OWORD *)(v441 + 2);
        v444 = *(int *)(v442 + 24);
        v445 = (char *)v440 + v444;
        v446 = (char *)v441 + v444;
        v447 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v447 - 8) + 32))(v445, v446, v447);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v440, 0, 1, v442);
      }
      v448 = v18[8];
      v449 = (void *)((char *)a1 + v448);
      v450 = (void *)((char *)a2 + v448);
      v451 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v450, 1, v451))
      {
        v452 = sub_253462A5C(&qword_269CE2130);
        memcpy(v449, v450, *(void *)(*(void *)(v452 - 8) + 64));
        goto LABEL_490;
      }
      v453 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v450, 1, v453))
      {
        v454 = sub_253462A5C(&qword_269CE2150);
        memcpy(v449, v450, *(void *)(*(void *)(v454 - 8) + 64));
        goto LABEL_231;
      }
      v455 = swift_getEnumCaseMultiPayload();
      if (v455 == 1)
      {
        *v449 = *v450;
        v460 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        v461 = (char *)v449 + v460;
        v462 = (char *)v450 + v460;
        v463 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v463 - 8) + 32))(v461, v462, v463);
      }
      else
      {
        if (v455)
        {
          memcpy(v449, v450, *(void *)(*(void *)(v453 - 8) + 64));
          goto LABEL_230;
        }
        *(_OWORD *)v449 = *(_OWORD *)v450;
        v456 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        v457 = *(int *)(v456 + 20);
        __dstd = (int *)v456;
        v1326 = (_DWORD *)((char *)v449 + v457);
        v458 = (_DWORD *)((char *)v450 + v457);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v450 + v457, 1, v442))
        {
          v459 = sub_253462A5C(&qword_26B249528);
          memcpy(v1326, v458, *(void *)(*(void *)(v459 - 8) + 64));
        }
        else
        {
          *v1326 = *v458;
          *(_OWORD *)(v1326 + 2) = *(_OWORD *)(v458 + 2);
          v486 = *(int *)(v442 + 24);
          __srcr = (char *)v1326 + v486;
          v487 = (char *)v458 + v486;
          v488 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v488 - 8) + 32))(__srcr, v487, v488);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1326, 0, 1, v442);
        }
        v489 = __dstd[6];
        v490 = (char *)v449 + v489;
        v491 = (char *)v450 + v489;
        v492 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v492 - 8) + 32))(v490, v491, v492);
      }
      swift_storeEnumTagMultiPayload();
LABEL_230:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v449, 0, 1, v453);
LABEL_231:
      v493 = *(int *)(v451 + 20);
      v494 = (char *)v449 + v493;
      v495 = (char *)v450 + v493;
      v496 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v496 - 8) + 32))(v494, v495, v496);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v449, 0, 1, v451);
LABEL_490:
      v877 = v18[9];
      v878 = (char *)a1 + v877;
      v879 = (char *)a2 + v877;
      v880 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v880 - 8) + 32))(v878, v879, v880);
LABEL_650:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0xEu:
    case 0x10u:
    case 0x13u:
    case 0x14u:
    case 0x15u:
    case 0x29u:
      v78 = sub_253B07160();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v78 - 8) + 32))(a1, a2, v78);
      goto LABEL_650;
    case 0xFu:
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
      StepResults = (int *)type metadata accessor for TranscriptProtoQueryStepResults(0);
      v65 = StepResults[6];
      v66 = (_DWORD *)((char *)a1 + v65);
      v67 = (_DWORD *)((char *)a2 + v65);
      v68 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v67, 1, v68)) {
        goto LABEL_142;
      }
      goto LABEL_86;
    case 0x11u:
      *a1 = *a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
      *(_WORD *)((char *)a1 + 25) = *(_WORD *)((char *)a2 + 25);
      v29 = (int *)type metadata accessor for TranscriptProtoActionResolverRequest(0);
      v69 = v29[9];
      v70 = (void *)((char *)a1 + v69);
      v71 = (void *)((char *)a2 + v69);
      v72 = type metadata accessor for TranscriptProtoParameterSet(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v71, 1, v72))
      {
        v73 = sub_253462A5C(&qword_26B2495B8);
        memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        *v70 = *v71;
        v211 = *(int *)(v72 + 20);
        v212 = (char *)v70 + v211;
        v213 = (char *)v71 + v211;
        v214 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 32))(v212, v213, v214);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v70, 0, 1, v72);
      }
      v215 = v29[10];
      v216 = (_DWORD *)((char *)a1 + v215);
      v217 = (_DWORD *)((char *)a2 + v215);
      v218 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v217, 1, v218))
      {
        v219 = sub_253462A5C(&qword_26B249528);
        memcpy(v216, v217, *(void *)(*(void *)(v219 - 8) + 64));
      }
      else
      {
        *v216 = *v217;
        *(_OWORD *)(v216 + 2) = *(_OWORD *)(v217 + 2);
        v307 = *(int *)(v218 + 24);
        v308 = (char *)v216 + v307;
        v309 = (char *)v217 + v307;
        v310 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v310 - 8) + 32))(v308, v309, v310);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v216, 0, 1, v218);
      }
      v311 = v29[11];
      v186 = (_OWORD *)((char *)a1 + v311);
      v187 = (_OWORD *)((char *)a2 + v311);
      v188 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v187, 1, v188))
      {
LABEL_75:
        v189 = sub_253462A5C(&qword_269CE0448);
        memcpy(v186, v187, *(void *)(*(void *)(v189 - 8) + 64));
      }
      else
      {
LABEL_125:
        v298 = v187[1];
        *v186 = *v187;
        v186[1] = v298;
        v299 = *(int *)(v188 + 24);
        v300 = (char *)v186 + v299;
        v301 = (char *)v187 + v299;
        v302 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v302 - 8) + 32))(v300, v301, v302);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v186, 0, 1, v188);
      }
      v303 = v29[12];
      v304 = (char *)a1 + v303;
      v305 = (char *)a2 + v303;
      v306 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v306 - 8) + 32))(v304, v305, v306);
      goto LABEL_650;
    case 0x12u:
      *a1 = *a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      v74 = *(int *)(type metadata accessor for TranscriptProtoClientInitiatedClientAction(0) + 24);
      v75 = (char *)a1 + v74;
      v76 = (char *)a2 + v74;
      v77 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 32))(v75, v76, v77);
      goto LABEL_650;
    case 0x16u:
      *a1 = *a2;
      v79 = *(int *)(type metadata accessor for TranscriptProtoSafetyModeException(0) + 20);
      v80 = (char *)a1 + v79;
      v81 = (char *)a2 + v79;
      v82 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v80, v81, v82);
      goto LABEL_650;
    case 0x17u:
      *(void *)a1 = *(void *)a2;
      v83 = *(int *)(type metadata accessor for TranscriptProtoResponseGenerationRequest(0) + 20);
      v84 = (char *)a1 + v83;
      v85 = (char *)a2 + v83;
      v86 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 32))(v84, v85, v86);
      goto LABEL_650;
    case 0x18u:
      *(void *)a1 = *(void *)a2;
      v87 = *(int *)(type metadata accessor for TranscriptProtoEntitySpanMatchResult(0) + 20);
      v88 = (char *)a1 + v87;
      v89 = (char *)a2 + v87;
      v90 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 32))(v88, v89, v90);
      goto LABEL_650;
    case 0x19u:
      *a1 = *a2;
      v91 = *(int *)(type metadata accessor for TranscriptProtoContextRetrieved(0) + 24);
      v92 = (char *)a1 + v91;
      v93 = (char *)a2 + v91;
      v94 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 32))(v92, v93, v94);
      goto LABEL_650;
    case 0x1Au:
      v95 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v95))
      {
        v96 = sub_253462A5C(&qword_26B249528);
        memcpy(a1, a2, *(void *)(*(void *)(v96 - 8) + 64));
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
        v220 = *(int *)(v95 + 24);
        v221 = (char *)a1 + v220;
        v222 = (char *)a2 + v220;
        v223 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v223 - 8) + 32))(v221, v222, v223);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v95);
      }
      v224 = type metadata accessor for TranscriptProtoActionCancellation(0);
      v225 = *(int *)(v224 + 20);
      v226 = (_DWORD *)((char *)a1 + v225);
      v227 = (_DWORD *)((char *)a2 + v225);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v225, 1, v95))
      {
        v228 = sub_253462A5C(&qword_26B249528);
        memcpy(v226, v227, *(void *)(*(void *)(v228 - 8) + 64));
      }
      else
      {
        *v226 = *v227;
        *(_OWORD *)(v226 + 2) = *(_OWORD *)(v227 + 2);
        v312 = *(int *)(v95 + 24);
        v313 = (char *)v226 + v312;
        v314 = (char *)v227 + v312;
        v315 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v315 - 8) + 32))(v313, v314, v315);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v226, 0, 1, v95);
      }
      v316 = *(int *)(v224 + 24);
      v317 = (char *)a1 + v316;
      v318 = (char *)a2 + v316;
      v319 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v319 - 8) + 32))(v317, v318, v319);
      goto LABEL_650;
    case 0x1Bu:
      v97 = a2[1];
      *a1 = *a2;
      a1[1] = v97;
      *((_DWORD *)a1 + 8) = *((_DWORD *)a2 + 8);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      v98 = *(int *)(type metadata accessor for TranscriptProtoToolRetrievalResponse(0) + 36);
      v99 = (char *)a1 + v98;
      v100 = (char *)a2 + v98;
      v101 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v99, v100, v101);
      goto LABEL_650;
    case 0x1Cu:
      *a1 = *a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      v102 = (int *)type metadata accessor for TranscriptProtoSystemResponse(0);
      v103 = v102[7];
      v104 = (void *)((char *)a1 + v103);
      v105 = (void *)((char *)a2 + v103);
      v106 = type metadata accessor for TranscriptProtoStatementOutcome(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v105, 1, v106))
      {
        v107 = sub_253462A5C(&qword_269CE0388);
        memcpy(v104, v105, *(void *)(*(void *)(v107 - 8) + 64));
LABEL_590:
        v1075 = v102[8];
        v1076 = (void *)((char *)a1 + v1075);
        v1077 = (void *)((char *)a2 + v1075);
        v1078 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1077, 1, (uint64_t)v1078))
        {
          v1079 = sub_253462A5C(&qword_269CE24C8);
          memcpy(v1076, v1077, *(void *)(*(void *)(v1079 - 8) + 64));
        }
        else
        {
          v1335 = v102;
          *v1076 = *v1077;
          *((unsigned char *)v1076 + 8) = *((unsigned char *)v1077 + 8);
          v1076[2] = v1077[2];
          v1080 = v1078[7];
          v1081 = (_OWORD *)((char *)v1076 + v1080);
          v1082 = (_OWORD *)((char *)v1077 + v1080);
          v1083 = type metadata accessor for TranscriptProtoDialogType(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1082, 1, v1083))
          {
            v1084 = sub_253462A5C(&qword_269CE2010);
            memcpy(v1081, v1082, *(void *)(*(void *)(v1084 - 8) + 64));
          }
          else
          {
            v1085 = type metadata accessor for TranscriptProtoDialogFormat(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1082, 1, v1085))
            {
              v1086 = sub_253462A5C(&qword_269CE2050);
              memcpy(v1081, v1082, *(void *)(*(void *)(v1086 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  *v1081 = *v1082;
                  v1088 = type metadata accessor for TranscriptProtoSonicText(0);
                  goto LABEL_602;
                case 2u:
                  *v1081 = *v1082;
                  v1088 = type metadata accessor for TranscriptProtoGeneratedText(0);
                  goto LABEL_602;
                case 3u:
                case 4u:
                  v1087 = sub_253B07160();
                  (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v1087 - 8) + 32))(v1081, v1082, v1087);
                  goto LABEL_603;
                case 5u:
                  *v1081 = *v1082;
                  v1088 = type metadata accessor for TranscriptProtoCATDialog(0);
                  goto LABEL_602;
                default:
                  *v1081 = *v1082;
                  v1088 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_602:
                  v1089 = *(int *)(v1088 + 20);
                  __srcbg = (void *)v1085;
                  v1090 = (char *)v1081 + v1089;
                  v1259 = (char *)v1082 + v1089;
                  v1091 = sub_253B07160();
                  v1092 = v1090;
                  v1085 = (uint64_t)__srcbg;
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v1091 - 8) + 32))(v1092, v1259, v1091);
LABEL_603:
                  swift_storeEnumTagMultiPayload();
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1081, 0, 1, v1085);
                  break;
              }
            }
            v1093 = *(int *)(v1083 + 20);
            v1094 = (char *)v1081 + v1093;
            v1095 = (char *)v1082 + v1093;
            v1096 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1096 - 8) + 32))(v1094, v1095, v1096);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1081, 0, 1, v1083);
          }
          v1097 = v1078[8];
          v1098 = (_OWORD *)((char *)v1076 + v1097);
          v1099 = (_OWORD *)((char *)v1077 + v1097);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1077 + v1097, 1, v1083))
          {
            v1100 = sub_253462A5C(&qword_269CE2010);
            memcpy(v1098, v1099, *(void *)(*(void *)(v1100 - 8) + 64));
          }
          else
          {
            v1101 = type metadata accessor for TranscriptProtoDialogFormat(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1099, 1, v1101))
            {
              v1102 = sub_253462A5C(&qword_269CE2050);
              memcpy(v1098, v1099, *(void *)(*(void *)(v1102 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  *v1098 = *v1099;
                  v1104 = type metadata accessor for TranscriptProtoSonicText(0);
                  goto LABEL_615;
                case 2u:
                  *v1098 = *v1099;
                  v1104 = type metadata accessor for TranscriptProtoGeneratedText(0);
                  goto LABEL_615;
                case 3u:
                case 4u:
                  v1103 = sub_253B07160();
                  (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v1103 - 8) + 32))(v1098, v1099, v1103);
                  goto LABEL_616;
                case 5u:
                  *v1098 = *v1099;
                  v1104 = type metadata accessor for TranscriptProtoCATDialog(0);
                  goto LABEL_615;
                default:
                  *v1098 = *v1099;
                  v1104 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_615:
                  v1105 = *(int *)(v1104 + 20);
                  __srcbh = (void *)v1101;
                  v1106 = (char *)v1098 + v1105;
                  v1260 = (char *)v1099 + v1105;
                  v1107 = sub_253B07160();
                  v1108 = v1106;
                  v1101 = (uint64_t)__srcbh;
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v1107 - 8) + 32))(v1108, v1260, v1107);
LABEL_616:
                  swift_storeEnumTagMultiPayload();
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1098, 0, 1, v1101);
                  break;
              }
            }
            v1109 = *(int *)(v1083 + 20);
            v1110 = (char *)v1098 + v1109;
            v1111 = (char *)v1099 + v1109;
            v1112 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1112 - 8) + 32))(v1110, v1111, v1112);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1098, 0, 1, v1083);
          }
          v1113 = v1078[9];
          v1114 = (char *)v1076 + v1113;
          v1115 = (char *)v1077 + v1113;
          v1116 = type metadata accessor for TranscriptProtoVisualOutputOptions(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1115, 1, v1116))
          {
            v1117 = sub_253462A5C(&qword_269CE2000);
            memcpy(v1114, v1115, *(void *)(*(void *)(v1117 - 8) + 64));
          }
          else
          {
            *v1114 = *v1115;
            v1118 = *(int *)(v1116 + 20);
            v1119 = &v1114[v1118];
            v1120 = &v1115[v1118];
            v1121 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v1121 - 8) + 32))(v1119, v1120, v1121);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1114, 0, 1, v1116);
          }
          v1122 = v1078[10];
          v1123 = (_OWORD *)((char *)v1076 + v1122);
          v1124 = (_OWORD *)((char *)v1077 + v1122);
          v1125 = type metadata accessor for TranscriptProtoVisualOutput(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1124, 1, v1125))
          {
            v1126 = sub_253462A5C(&qword_269CE1FF0);
            memcpy(v1123, v1124, *(void *)(*(void *)(v1126 - 8) + 64));
          }
          else
          {
            v1127 = type metadata accessor for TranscriptProtoVisualOutputType(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1124, 1, v1127))
            {
              v1128 = sub_253462A5C(&qword_269CDCC18);
              memcpy(v1123, v1124, *(void *)(*(void *)(v1128 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  *v1123 = *v1124;
                  v1129 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
                  goto LABEL_629;
                case 2u:
                  *v1123 = *v1124;
                  v1129 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
                  goto LABEL_629;
                case 3u:
                  v1131 = v1124[1];
                  *v1123 = *v1124;
                  v1123[1] = v1131;
                  v1130 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
                  goto LABEL_631;
                default:
                  *v1123 = *v1124;
                  v1129 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_629:
                  v1130 = *(int *)(v1129 + 20);
LABEL_631:
                  v1261 = (char *)v1124 + v1130;
                  __srcbi = (char *)v1123 + v1130;
                  v1132 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v1132 - 8) + 32))(__srcbi, v1261, v1132);
                  swift_storeEnumTagMultiPayload();
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1123, 0, 1, v1127);
                  break;
              }
            }
            v1133 = *(int *)(v1125 + 20);
            v1134 = (char *)v1123 + v1133;
            v1135 = (char *)v1124 + v1133;
            v1136 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1136 - 8) + 32))(v1134, v1135, v1136);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1123, 0, 1, v1125);
          }
          *(_OWORD *)((char *)v1076 + v1078[11]) = *(_OWORD *)((char *)v1077 + v1078[11]);
          v1137 = v1078[12];
          v1138 = (char *)v1076 + v1137;
          v1139 = (char *)v1077 + v1137;
          v1140 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1140 - 8) + 32))(v1138, v1139, v1140);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1076, 0, 1, (uint64_t)v1078);
          v102 = v1335;
        }
        v1141 = v102[9];
        v1142 = (_DWORD *)((char *)a1 + v1141);
        v1143 = (_DWORD *)((char *)a2 + v1141);
        v1144 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1143, 1, v1144))
        {
          v1145 = sub_253462A5C(&qword_26B249528);
          memcpy(v1142, v1143, *(void *)(*(void *)(v1145 - 8) + 64));
        }
        else
        {
          *v1142 = *v1143;
          *(_OWORD *)(v1142 + 2) = *(_OWORD *)(v1143 + 2);
          v1146 = *(int *)(v1144 + 24);
          v1147 = (char *)v1142 + v1146;
          v1148 = (char *)v1143 + v1146;
          v1149 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v1147, v1148, v1149);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1142, 0, 1, v1144);
        }
        *(_OWORD *)((char *)a1 + v102[10]) = *(_OWORD *)((char *)a2 + v102[10]);
        v1150 = v102[11];
        v1151 = (char *)a1 + v1150;
        v1152 = (char *)a2 + v1150;
        v1153 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v1153 - 8) + 32))(v1151, v1152, v1153);
        goto LABEL_650;
      }
      v229 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v105, 1, v229))
      {
        v230 = sub_253462A5C(&qword_269CE04B0);
        memcpy(v104, v105, *(void *)(*(void *)(v230 - 8) + 64));
LABEL_589:
        v1071 = *(int *)(v106 + 20);
        v1072 = (char *)v104 + v1071;
        v1073 = (char *)v105 + v1071;
        v1074 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v1074 - 8) + 32))(v1072, v1073, v1074);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v104, 0, 1, v106);
        goto LABEL_590;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          v1324 = v102;
          *v104 = *v105;
          v529 = type metadata accessor for TranscriptProtoActionConfirmation(0);
          v530 = *(int *)(v529 + 20);
          __srce = (char *)v104 + v530;
          v531 = (char *)v105 + v530;
          v1243 = (int *)type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v531, 1, (uint64_t)v1243))
          {
            v532 = sub_253462A5C(&qword_269CE0480);
            memcpy(__srce, v531, *(void *)(*(void *)(v532 - 8) + 64));
          }
          else
          {
            v1230 = (void *)v529;
            v1213 = (void *)type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v531, 1, (uint64_t)v1213))
            {
              v616 = sub_253462A5C(&qword_269CE0478);
              v617 = __srce;
              memcpy(__srce, v531, *(void *)(*(void *)(v616 - 8) + 64));
              v618 = v531;
            }
            else
            {
              *(_OWORD *)__srce = *(_OWORD *)v531;
              __srce[16] = v531[16];
              v1189 = v531;
              v1197 = (int *)type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
              v672 = v1197[6];
              v673 = &__srce[v672];
              v674 = &v531[v672];
              v675 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v674, 1, v675))
              {
                v676 = sub_253462A5C(&qword_269CE0470);
                memcpy(v673, v674, *(void *)(*(void *)(v676 - 8) + 64));
              }
              else
              {
                *v673 = *v674;
                v775 = *(int *)(v675 + 20);
                v1187 = &v673[v775];
                v776 = &v674[v775];
                v777 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v777 - 8) + 32))(v1187, v776, v777);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v673, 0, 1, v675);
              }
              v778 = v1197[7];
              v1202 = &__srce[v778];
              v779 = &v1189[v778];
              v780 = sub_253B07160();
              v781 = v779;
              v617 = __srce;
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v780 - 8) + 32))(v1202, v781, v780);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__srce, 0, 1, (uint64_t)v1213);
              v618 = v1189;
            }
            v782 = v1243[5];
            v783 = (uint64_t)v617;
            v784 = &v617[v782];
            __srcu = &v618[v782];
            v785 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v785 - 8) + 32))(v784, __srcu, v785);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v783, 0, 1, (uint64_t)v1243);
            v529 = (uint64_t)v1230;
          }
          v786 = *(int *)(v529 + 24);
          goto LABEL_587;
        case 2u:
          *(_OWORD *)v104 = *(_OWORD *)v105;
          v533 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
          goto LABEL_437;
        case 3u:
          v1328 = v102;
          *(_OWORD *)v104 = *(_OWORD *)v105;
          v104[2] = v105[2];
          *((unsigned char *)v104 + 24) = *((unsigned char *)v105 + 24);
          v534 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
          goto LABEL_255;
        case 4u:
          *(_OWORD *)v104 = *(_OWORD *)v105;
          v535 = v105[3];
          v104[2] = v105[2];
          v104[3] = v535;
          *((unsigned char *)v104 + 32) = *((unsigned char *)v105 + 32);
          v536 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
          goto LABEL_438;
        case 5u:
          v1328 = v102;
          *(_OWORD *)v104 = *(_OWORD *)v105;
          *((unsigned char *)v104 + 16) = *((unsigned char *)v105 + 16);
          v534 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_255:
          v537 = v534;
          v538 = *(int *)(v534 + 24);
          __srcf = (char *)v104 + v538;
          v539 = (char *)v105 + v538;
          v540 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v539, 1, v540))
          {
            v541 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(__srcf, v539, *(void *)(*(void *)(v541 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v540 - 8) + 32))(__srcf, v539, v540);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__srcf, 0, 1, v540);
          }
          v102 = v1328;
          v536 = *(int *)(v537 + 28);
          goto LABEL_438;
        case 6u:
          v1329 = v102;
          *(_OWORD *)v104 = *(_OWORD *)v105;
          v542 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
          v543 = *(int *)(v542 + 20);
          __srcg = (char *)v104 + v543;
          v544 = (char *)v105 + v543;
          v545 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v544, 1, v545))
          {
            v546 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(__srcg, v544, *(void *)(*(void *)(v546 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v545 - 8) + 32))(__srcg, v544, v545);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__srcg, 0, 1, v545);
          }
          v102 = v1329;
          v536 = *(int *)(v542 + 24);
          goto LABEL_438;
        case 7u:
          v1324 = v102;
          v547 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v105, 1, v547))
          {
            v548 = sub_253462A5C(&qword_269CE0498);
            memcpy(v104, v105, *(void *)(*(void *)(v548 - 8) + 64));
            goto LABEL_586;
          }
          v619 = swift_getEnumCaseMultiPayload();
          if (v619 != 2)
          {
            if (v619 == 1)
            {
              *(unsigned char *)v104 = *(unsigned char *)v105;
              v762 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
              v763 = (char *)v104 + v762;
              v764 = (char *)v105 + v762;
              v765 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v765 - 8) + 32))(v763, v764, v765);
            }
            else
            {
              if (v619)
              {
                memcpy(v104, v105, *(void *)(*(void *)(v547 - 8) + 64));
                goto LABEL_585;
              }
              *(unsigned char *)v104 = *(unsigned char *)v105;
              v620 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
              v621 = (char *)v104 + v620;
              v622 = (char *)v105 + v620;
              v623 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v623 - 8) + 32))(v621, v622, v623);
            }
LABEL_584:
            swift_storeEnumTagMultiPayload();
LABEL_585:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v104, 0, 1, v547);
LABEL_586:
            v786 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
LABEL_587:
            v1068 = (char *)v104 + v786;
            v1069 = (char *)v105 + v786;
            v1070 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1070 - 8) + 32))(v1068, v1069, v1070);
            v102 = v1324;
LABEL_588:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v104, 0, 1, v229);
            goto LABEL_589;
          }
          v760 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v105, 1, v760))
          {
            v761 = sub_253462A5C(&qword_269CE0490);
            memcpy(v104, v105, *(void *)(*(void *)(v761 - 8) + 64));
LABEL_583:
            v1064 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
            v1065 = (char *)v104 + v1064;
            v1066 = (char *)v105 + v1064;
            v1067 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1067 - 8) + 32))(v1065, v1066, v1067);
            goto LABEL_584;
          }
          v907 = swift_getEnumCaseMultiPayload();
          if (v907 == 1)
          {
            v1054 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v105, 1, v1054))
            {
              v1055 = sub_253462A5C(&qword_269CE0488);
              memcpy(v104, v105, *(void *)(*(void *)(v1055 - 8) + 64));
            }
            else
            {
              *(unsigned char *)v104 = *(unsigned char *)v105;
              v1059 = *(int *)(v1054 + 20);
              v1258 = (char *)v105 + v1059;
              __srcbe = (char *)v104 + v1059;
              v1060 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1060 - 8) + 32))(__srcbe, v1258, v1060);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v104, 0, 1, v1054);
            }
            v1061 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
            __srcbf = (char *)v104 + v1061;
            v1062 = (char *)v105 + v1061;
            v1063 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1063 - 8) + 32))(__srcbf, v1062, v1063);
          }
          else
          {
            if (v907)
            {
              memcpy(v104, v105, *(void *)(*(void *)(v760 - 8) + 64));
LABEL_582:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v104, 0, 1, v760);
              goto LABEL_583;
            }
            *(_OWORD *)v104 = *(_OWORD *)v105;
            v908 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
            __srcbb = (char *)v104 + v908;
            v909 = (char *)v105 + v908;
            v910 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v910 - 8) + 32))(__srcbb, v909, v910);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_582;
        case 8u:
          *v104 = *v105;
          *(_OWORD *)(v104 + 1) = *(_OWORD *)(v105 + 1);
          v536 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
          goto LABEL_438;
        case 9u:
          v549 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v105, 1, v549))
          {
            v550 = sub_253462A5C(&qword_269CE04A8);
            memcpy(v104, v105, *(void *)(*(void *)(v550 - 8) + 64));
          }
          else
          {
            v1330 = v102;
            v624 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v105, 1, v624))
            {
              v625 = sub_253462A5C(&qword_269CE04A0);
              memcpy(v104, v105, *(void *)(*(void *)(v625 - 8) + 64));
            }
            else
            {
              v677 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v105, 16, v677))
              {
                memcpy(v104, v105, *(void *)(*(void *)(v624 - 8) + 64));
              }
              else
              {
                v787 = *((_OWORD *)v105 + 1);
                *(_OWORD *)v104 = *(_OWORD *)v105;
                *((_OWORD *)v104 + 1) = v787;
                v104[4] = v105[4];
                v788 = *(int *)(v677 + 28);
                v1254 = (char *)v105 + v788;
                __srcv = (char *)v104 + v788;
                v789 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v789 - 8) + 32))(__srcv, v1254, v789);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v104, 0, 16, v677);
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v104, 0, 1, v624);
            }
            v790 = *(int *)(v549 + 20);
            v791 = (char *)v104 + v790;
            v792 = (char *)v105 + v790;
            v793 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v793 - 8) + 32))(v791, v792, v793);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v104, 0, 1, v549);
            v102 = v1330;
          }
          v533 = type metadata accessor for TranscriptProtoActionFailure(0);
          goto LABEL_437;
        case 0xAu:
          *v104 = *v105;
          v533 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
LABEL_437:
          v536 = *(int *)(v533 + 20);
LABEL_438:
          v794 = (char *)v104 + v536;
          v795 = (char *)v105 + v536;
          v796 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v796 - 8) + 32))(v794, v795, v796);
          goto LABEL_588;
        default:
          v1324 = v102;
          *(unsigned char *)v104 = *(unsigned char *)v105;
          *(_WORD *)((char *)v104 + 1) = *(_WORD *)((char *)v105 + 1);
          __srca = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
          v375 = __srca[7];
          v376 = (char *)v104 + v375;
          v377 = (char *)v105 + v375;
          v378 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v377, 1, v378))
          {
            v379 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v376, v377, *(void *)(*(void *)(v379 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v378 - 8) + 32))(v376, v377, v378);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v376, 0, 1, v378);
          }
          v575 = __srca[8];
          v576 = (_OWORD *)((char *)v104 + v575);
          v577 = (_OWORD *)((char *)v105 + v575);
          v578 = type metadata accessor for TranscriptProtoUndoContext(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v577, 1, v578))
          {
            v579 = sub_253462A5C(&qword_269CE0450);
            memcpy(v576, v577, *(void *)(*(void *)(v579 - 8) + 64));
          }
          else
          {
            v635 = v577[1];
            *v576 = *v577;
            v576[1] = v635;
            v576[2] = v577[2];
            v636 = *(int *)(v578 + 28);
            v1246 = (char *)v576 + v636;
            v637 = (char *)v577 + v636;
            v638 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v638 - 8) + 32))(v1246, v637, v638);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v576, 0, 1, v578);
          }
          v639 = __srca[9];
          v640 = (_OWORD *)((char *)v104 + v639);
          v641 = (_OWORD *)((char *)v105 + v639);
          v642 = type metadata accessor for TranscriptProtoFollowUpAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v641, 1, v642))
          {
            v643 = sub_253462A5C(&qword_269CE0468);
            memcpy(v640, v641, *(void *)(*(void *)(v643 - 8) + 64));
          }
          else
          {
            v1231 = (int *)v642;
            v652 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
            v1249 = v640;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v641, 1, v652))
            {
              v653 = sub_253462A5C(&qword_269CE0460);
              memcpy(v640, v641, *(void *)(*(void *)(v653 - 8) + 64));
            }
            else
            {
              v1216 = (void *)type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v641, 1, (uint64_t)v1216))
              {
                v684 = sub_253462A5C(&qword_269CE0458);
                memcpy(v640, v641, *(void *)(*(void *)(v684 - 8) + 64));
              }
              else
              {
                v812 = v641[1];
                *v640 = *v641;
                v640[1] = v812;
                *((void *)v640 + 4) = *((void *)v641 + 4);
                v813 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                              + 28);
                v1194 = (char *)v641 + v813;
                v1204 = (char *)v640 + v813;
                v814 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v814 - 8) + 32))(v1204, v1194, v814);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v640, 0, 1, (uint64_t)v1216);
              }
              v815 = *(int *)(v652 + 20);
              v1205 = (char *)v641 + v815;
              v1219 = (char *)v640 + v815;
              v816 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v816 - 8) + 32))(v1219, v1205, v816);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v640, 0, 1, v652);
            }
            v817 = v1231[5];
            v1220 = (char *)v640 + v817;
            v818 = (char *)v641 + v817;
            v819 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v819 - 8) + 32))(v1220, v818, v819);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1249, 0, 1, (uint64_t)v1231);
          }
          *(_OWORD *)((char *)v104 + __srca[10]) = *(_OWORD *)((char *)v105 + __srca[10]);
          v786 = __srca[11];
          goto LABEL_587;
      }
    case 0x1Du:
      v108 = a2[1];
      *a1 = *a2;
      a1[1] = v108;
      v109 = (int *)type metadata accessor for TranscriptProtoStatementResult(0);
      v110 = v109[6];
      v111 = (void *)((char *)a1 + v110);
      v112 = (void *)((char *)a2 + v110);
      v113 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v112, 1, v113))
      {
        v114 = sub_253462A5C(&qword_269CE1C80);
        memcpy(v111, v112, *(void *)(*(void *)(v114 - 8) + 64));
LABEL_550:
        v1002 = v109[7];
        v1003 = (_DWORD *)((char *)a1 + v1002);
        v1004 = (_DWORD *)((char *)a2 + v1002);
        v1005 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1004, 1, v1005))
        {
          v1006 = sub_253462A5C(&qword_26B249528);
          memcpy(v1003, v1004, *(void *)(*(void *)(v1006 - 8) + 64));
        }
        else
        {
          *v1003 = *v1004;
          *(_OWORD *)(v1003 + 2) = *(_OWORD *)(v1004 + 2);
          v1007 = *(int *)(v1005 + 24);
          v1008 = (char *)v1003 + v1007;
          v1009 = (char *)v1004 + v1007;
          v1010 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1010 - 8) + 32))(v1008, v1009, v1010);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1003, 0, 1, v1005);
        }
        v1011 = v109[8];
        v1012 = (_DWORD *)((char *)a1 + v1011);
        v1013 = (_DWORD *)((char *)a2 + v1011);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v1011, 1, v1005))
        {
          v1014 = sub_253462A5C(&qword_26B249528);
          memcpy(v1012, v1013, *(void *)(*(void *)(v1014 - 8) + 64));
        }
        else
        {
          *v1012 = *v1013;
          *(_OWORD *)(v1012 + 2) = *(_OWORD *)(v1013 + 2);
          v1015 = *(int *)(v1005 + 24);
          v1016 = (char *)v1012 + v1015;
          v1017 = (char *)v1013 + v1015;
          v1018 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1018 - 8) + 32))(v1016, v1017, v1018);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1012, 0, 1, v1005);
        }
        v1019 = v109[9];
        v1020 = (_DWORD *)((char *)a1 + v1019);
        v1021 = (_DWORD *)((char *)a2 + v1019);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v1019, 1, v1005))
        {
          v1022 = sub_253462A5C(&qword_26B249528);
          memcpy(v1020, v1021, *(void *)(*(void *)(v1022 - 8) + 64));
        }
        else
        {
          *v1020 = *v1021;
          *(_OWORD *)(v1020 + 2) = *(_OWORD *)(v1021 + 2);
          v1023 = *(int *)(v1005 + 24);
          v1024 = (char *)v1020 + v1023;
          v1025 = (char *)v1021 + v1023;
          v1026 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1026 - 8) + 32))(v1024, v1025, v1026);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1020, 0, 1, v1005);
        }
        v1027 = v109[10];
        v1028 = (_OWORD *)((char *)a1 + v1027);
        v1029 = (_OWORD *)((char *)a2 + v1027);
        v1030 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1029, 1, v1030))
        {
          v1031 = sub_253462A5C(&qword_269CE0448);
          memcpy(v1028, v1029, *(void *)(*(void *)(v1031 - 8) + 64));
        }
        else
        {
          v1032 = v1029[1];
          *v1028 = *v1029;
          v1028[1] = v1032;
          v1033 = *(int *)(v1030 + 24);
          v1034 = (char *)v1028 + v1033;
          v1035 = (char *)v1029 + v1033;
          v1036 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1036 - 8) + 32))(v1034, v1035, v1036);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1028, 0, 1, v1030);
        }
        v1037 = v109[11];
        v1038 = (char *)a1 + v1037;
        v1039 = (char *)a2 + v1037;
        v1040 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v1040 - 8) + 32))(v1038, v1039, v1040);
        goto LABEL_650;
      }
      v231 = type metadata accessor for TranscriptProtoStatementOutcome(0);
      v1323 = v109;
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v112, 1, v231))
      {
        v232 = sub_253462A5C(&qword_269CE0388);
        memcpy(v111, v112, *(void *)(*(void *)(v232 - 8) + 64));
LABEL_525:
        v944 = *(int *)(v113 + 20);
        v945 = (void *)((char *)v111 + v944);
        v946 = (void *)((char *)v112 + v944);
        v947 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v946, 1, (uint64_t)v947))
        {
          v948 = sub_253462A5C(&qword_269CE0378);
          memcpy(v945, v946, *(void *)(*(void *)(v948 - 8) + 64));
        }
        else
        {
          v1257 = v112;
          __srcq = v111;
          __dstj = (void *)v113;
          *v945 = *v946;
          v949 = v947[5];
          v950 = (_OWORD *)((char *)v945 + v949);
          v951 = (_OWORD *)((char *)v946 + v949);
          v952 = type metadata accessor for TranscriptProtoResponseDialog(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v951, 1, v952))
          {
            v953 = sub_253462A5C(&qword_269CE04B8);
            memcpy(v950, v951, *(void *)(*(void *)(v953 - 8) + 64));
          }
          else
          {
            v954 = v951[1];
            *v950 = *v951;
            v950[1] = v954;
            v955 = v951[3];
            v950[2] = v951[2];
            v950[3] = v955;
            v956 = *(int *)(v952 + 32);
            v957 = (char *)v950 + v956;
            v958 = (char *)v951 + v956;
            v959 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v959 - 8) + 32))(v957, v958, v959);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v950, 0, 1, v952);
          }
          v960 = v947[6];
          v961 = (_OWORD *)((char *)v945 + v960);
          v962 = (_OWORD *)((char *)v946 + v960);
          v963 = type metadata accessor for TranscriptProtoResponseVisual(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v962, 1, v963))
          {
            v964 = sub_253462A5C(&qword_269CE04C8);
            memcpy(v961, v962, *(void *)(*(void *)(v964 - 8) + 64));
          }
          else
          {
            *v961 = *v962;
            v965 = *(int *)(v963 + 24);
            v1239 = (char *)v961 + v965;
            v966 = (char *)v962 + v965;
            v1224 = (int *)type metadata accessor for TranscriptProtoResponseVisualOptions(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v966, 1, (uint64_t)v1224))
            {
              v967 = sub_253462A5C(&qword_269CE04C0);
              memcpy(v1239, v966, *(void *)(*(void *)(v967 - 8) + 64));
            }
            else
            {
              *v1239 = *v966;
              v968 = v1224[5];
              v1209 = &v1239[v968];
              v969 = &v966[v968];
              v970 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v970 - 8) + 32))(v1209, v969, v970);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1239, 0, 1, (uint64_t)v1224);
            }
            v971 = *(int *)(v963 + 28);
            v972 = (char *)v961 + v971;
            v973 = (char *)v962 + v971;
            v974 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v974 - 8) + 32))(v972, v973, v974);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v961, 0, 1, v963);
          }
          *(_OWORD *)((char *)v945 + v947[7]) = *(_OWORD *)((char *)v946 + v947[7]);
          *(_OWORD *)((char *)v945 + v947[8]) = *(_OWORD *)((char *)v946 + v947[8]);
          *((unsigned char *)v945 + v947[9]) = *((unsigned char *)v946 + v947[9]);
          *((unsigned char *)v945 + v947[10]) = *((unsigned char *)v946 + v947[10]);
          v975 = v947[11];
          v976 = (char *)v945 + v975;
          v977 = (_OWORD *)((char *)v946 + v975);
          v978 = type metadata accessor for TranscriptProtoUIType(0);
          v113 = (uint64_t)__dstj;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v977, 1, v978))
          {
            v979 = sub_253462A5C(&qword_269CE04D0);
            memcpy(v976, v977, *(void *)(*(void *)(v979 - 8) + 64));
          }
          else
          {
            v1240 = v976;
            v980 = type metadata accessor for TranscriptProtoUitype(0);
            v1225 = (void *)v978;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v977, 1, v980))
            {
              v981 = sub_253462A5C(&qword_269CDCC08);
              memcpy(v1240, v977, *(void *)(*(void *)(v981 - 8) + 64));
            }
            else
            {
              v1195 = v980;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  v982 = v977;
                  *v1240 = *v977;
                  v985 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
                  goto LABEL_545;
                case 2u:
                  v982 = v977;
                  v986 = v977[1];
                  *v1240 = *v977;
                  v1240[1] = v986;
                  v984 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
                  break;
                case 3u:
                  v982 = v977;
                  *v1240 = *v977;
                  v985 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_545:
                  v984 = *(int *)(v985 + 20);
                  break;
                default:
                  v982 = v977;
                  v983 = v977[1];
                  *v1240 = *v977;
                  v1240[1] = v983;
                  v1240[2] = v977[2];
                  v984 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
                  break;
              }
              v987 = (char *)v1240 + v984;
              v988 = (char *)v982 + v984;
              v989 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v989 - 8) + 32))(v987, v988, v989);
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1240, 0, 1, v1195);
              v113 = (uint64_t)__dstj;
              v978 = (uint64_t)v1225;
            }
            v990 = *(int *)(v978 + 20);
            v991 = (char *)v1240 + v990;
            v992 = (char *)v977 + v990;
            v993 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v993 - 8) + 32))(v991, v992, v993);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1240, 0, 1, (uint64_t)v1225);
          }
          v994 = v947[12];
          v995 = (char *)v945 + v994;
          v996 = (char *)v946 + v994;
          v997 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v997 - 8) + 32))(v995, v996, v997);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v945, 0, 1, (uint64_t)v947);
          v112 = v1257;
          v111 = __srcq;
        }
        v998 = *(int *)(v113 + 24);
        v999 = (char *)v111 + v998;
        v1000 = (char *)v112 + v998;
        v1001 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v1001 - 8) + 32))(v999, v1000, v1001);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v111, 0, 1, v113);
        v109 = v1323;
        goto LABEL_550;
      }
      v380 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v112, 1, v380))
      {
        v381 = sub_253462A5C(&qword_269CE04B0);
        memcpy(v111, v112, *(void *)(*(void *)(v381 - 8) + 64));
LABEL_524:
        v938 = *(int *)(v231 + 20);
        v939 = (char *)v111 + v938;
        v940 = v112;
        v941 = (char *)v112 + v938;
        v942 = sub_253B07160();
        v943 = v941;
        v112 = v940;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v942 - 8) + 32))(v939, v943, v942);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v111, 0, 1, v231);
        goto LABEL_525;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          __dstb = (void *)v113;
          *v111 = *v112;
          v1245 = (int *)type metadata accessor for TranscriptProtoActionConfirmation(0);
          __srcl = v111;
          v584 = v1245[5];
          v585 = (char *)v111 + v584;
          v414 = v112;
          v586 = (char *)v112 + v584;
          v587 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v586, 1, v587))
          {
            v588 = sub_253462A5C(&qword_269CE0480);
            memcpy(v585, v586, *(void *)(*(void *)(v588 - 8) + 64));
          }
          else
          {
            v1215 = (void *)type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v586, 1, (uint64_t)v1215))
            {
              v662 = sub_253462A5C(&qword_269CE0478);
              memcpy(v585, v586, *(void *)(*(void *)(v662 - 8) + 64));
            }
            else
            {
              *(_OWORD *)v585 = *(_OWORD *)v586;
              v585[16] = v586[16];
              v771 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
              v772 = *(int *)(v771 + 24);
              v1193 = v771;
              v1201 = &v585[v772];
              v773 = &v586[v772];
              v1186 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v773, 1, v1186))
              {
                v774 = sub_253462A5C(&qword_269CE0470);
                memcpy(v1201, v773, *(void *)(*(void *)(v774 - 8) + 64));
              }
              else
              {
                *v1201 = *v773;
                v927 = *(int *)(v1186 + 20);
                v1184 = &v1201[v927];
                v928 = &v773[v927];
                v929 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v929 - 8) + 32))(v1184, v928, v929);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1201, 0, 1, v1186);
              }
              v930 = *(int *)(v1193 + 28);
              v931 = &v585[v930];
              v1208 = &v586[v930];
              v932 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v932 - 8) + 32))(v931, v1208, v932);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v585, 0, 1, (uint64_t)v1215);
            }
            v933 = *(int *)(v587 + 20);
            v934 = &v585[v933];
            v935 = &v586[v933];
            v936 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v936 - 8) + 32))(v934, v935, v936);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v585, 0, 1, v587);
          }
          v656 = v1245[6];
          goto LABEL_520;
        case 2u:
          *(_OWORD *)v111 = *(_OWORD *)v112;
          v589 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
          goto LABEL_315;
        case 3u:
          __dstb = (void *)v113;
          *(_OWORD *)v111 = *(_OWORD *)v112;
          v111[2] = v112[2];
          *((unsigned char *)v111 + 24) = *((unsigned char *)v112 + 24);
          v590 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
          goto LABEL_305;
        case 4u:
          *(_OWORD *)v111 = *(_OWORD *)v112;
          v591 = v112[3];
          v111[2] = v112[2];
          v111[3] = v591;
          *((unsigned char *)v111 + 32) = *((unsigned char *)v112 + 32);
          v592 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
          goto LABEL_316;
        case 5u:
          __dstb = (void *)v113;
          *(_OWORD *)v111 = *(_OWORD *)v112;
          *((unsigned char *)v111 + 16) = *((unsigned char *)v112 + 16);
          v590 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_305:
          v593 = v112;
          v594 = v590;
          v595 = *(int *)(v590 + 24);
          __srcl = v111;
          v596 = (char *)v111 + v595;
          v414 = v593;
          v597 = (char *)v593 + v595;
          v598 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v597, 1, v598))
          {
            v599 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v596, v597, *(void *)(*(void *)(v599 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v598 - 8) + 32))(v596, v597, v598);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v596, 0, 1, v598);
          }
          v656 = *(int *)(v594 + 28);
          goto LABEL_520;
        case 6u:
          __dstb = (void *)v113;
          *(_OWORD *)v111 = *(_OWORD *)v112;
          v600 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
          v601 = v112;
          v602 = v600;
          v603 = *(int *)(v600 + 20);
          __srcl = v111;
          v604 = (char *)v111 + v603;
          v414 = v601;
          v605 = (char *)v601 + v603;
          v606 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v605, 1, v606))
          {
            v607 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v604, v605, *(void *)(*(void *)(v607 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v606 - 8) + 32))(v604, v605, v606);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v604, 0, 1, v606);
          }
          v656 = *(int *)(v602 + 24);
LABEL_520:
          v111 = __srcl;
          goto LABEL_521;
        case 7u:
          __dstb = (void *)v113;
          v608 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v112, 1, v608))
          {
            v609 = sub_253462A5C(&qword_269CE0498);
            memcpy(v111, v112, *(void *)(*(void *)(v609 - 8) + 64));
            goto LABEL_659;
          }
          v1250 = v112;
          v663 = v608;
          v664 = swift_getEnumCaseMultiPayload();
          if (v664 != 2)
          {
            if (v664 == 1)
            {
              *(unsigned char *)v111 = *(unsigned char *)v112;
              v903 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
              v904 = (char *)v111 + v903;
              v905 = (char *)v112 + v903;
              v906 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v906 - 8) + 32))(v904, v905, v906);
            }
            else
            {
              if (v664)
              {
                memcpy(v111, v112, *(void *)(*(void *)(v608 - 8) + 64));
                goto LABEL_658;
              }
              *(unsigned char *)v111 = *(unsigned char *)v112;
              v665 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
              v666 = (char *)v111 + v665;
              v667 = (char *)v112 + v665;
              v668 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v668 - 8) + 32))(v666, v667, v668);
            }
LABEL_657:
            swift_storeEnumTagMultiPayload();
LABEL_658:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v111, 0, 1, v663);
            v112 = v1250;
LABEL_659:
            v1182 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
            v925 = (char *)v111 + v1182;
            v414 = v112;
            v926 = (char *)v112 + v1182;
LABEL_522:
            v937 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v937 - 8) + 32))(v925, v926, v937);
            v113 = (uint64_t)__dstb;
LABEL_523:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v111, 0, 1, v380);
            v112 = v414;
            goto LABEL_524;
          }
          v901 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1250, 1, v901))
          {
            v902 = sub_253462A5C(&qword_269CE0490);
            memcpy(v111, v1250, *(void *)(*(void *)(v902 - 8) + 64));
LABEL_656:
            v1178 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
            v1179 = (char *)v111 + v1178;
            v1180 = &v1250[v1178];
            v1181 = sub_253B07160();
            (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v1181 - 8) + 32))(v1179, v1180, v1181);
            goto LABEL_657;
          }
          v1050 = swift_getEnumCaseMultiPayload();
          if (v1050 == 1)
          {
            v1057 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1250, 1, v1057))
            {
              v1058 = sub_253462A5C(&qword_269CE0488);
              memcpy(v111, v1250, *(void *)(*(void *)(v1058 - 8) + 64));
            }
            else
            {
              *(unsigned char *)v111 = *v1250;
              v1173 = *(int *)(v1057 + 20);
              __srcbl = (char *)v111 + v1173;
              v1227 = &v1250[v1173];
              v1174 = sub_253B07160();
              (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v1174 - 8) + 32))(__srcbl, v1227, v1174);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v111, 0, 1, v1057);
            }
            v1175 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
            v1176 = (char *)v111 + v1175;
            __srcbm = &v1250[v1175];
            v1177 = sub_253B07160();
            (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v1177 - 8) + 32))(v1176, __srcbm, v1177);
          }
          else
          {
            if (v1050)
            {
              memcpy(v111, v1250, *(void *)(*(void *)(v901 - 8) + 64));
LABEL_655:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v111, 0, 1, v901);
              goto LABEL_656;
            }
            *(_OWORD *)v111 = *(_OWORD *)v1250;
            v1051 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
            __srcbd = (char *)v111 + v1051;
            v1052 = &v1250[v1051];
            v1053 = sub_253B07160();
            (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v1053 - 8) + 32))(__srcbd, v1052, v1053);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_655;
        case 8u:
          *v111 = *v112;
          *(_OWORD *)(v111 + 1) = *(_OWORD *)(v112 + 1);
          v592 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
          goto LABEL_316;
        case 9u:
          __dstb = (void *)v113;
          v610 = v112;
          v611 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v610, 1, v611))
          {
            v612 = sub_253462A5C(&qword_269CE04A8);
            memcpy(v111, v610, *(void *)(*(void *)(v612 - 8) + 64));
          }
          else
          {
            v669 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
            v670 = v610;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v610, 1, v669))
            {
              v671 = sub_253462A5C(&qword_269CE04A0);
              memcpy(v111, v610, *(void *)(*(void *)(v671 - 8) + 64));
            }
            else
            {
              __srcp = (int *)type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v610, 16, (uint64_t)__srcp))
              {
                memcpy(v111, v610, *(void *)(*(void *)(v669 - 8) + 64));
              }
              else
              {
                v914 = v610[1];
                *(_OWORD *)v111 = *v610;
                *((_OWORD *)v111 + 1) = v914;
                v111[4] = *((void *)v610 + 4);
                v915 = __srcp[7];
                v1256 = (char *)v111 + v915;
                v1223 = (char *)v610 + v915;
                v916 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v916 - 8) + 32))(v1256, v1223, v916);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v111, 0, 16, (uint64_t)__srcp);
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v111, 0, 1, v669);
            }
            v917 = *(int *)(v611 + 20);
            v918 = v111;
            v919 = (char *)v111 + v917;
            v920 = (char *)v670 + v917;
            v921 = sub_253B07160();
            v922 = v920;
            v111 = v918;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v921 - 8) + 32))(v919, v922, v921);
            v923 = (uint64_t)v918;
            v610 = v670;
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v923, 0, 1, v611);
          }
          v924 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
          v925 = (char *)v111 + v924;
          v414 = v610;
          v926 = (char *)v610 + v924;
          goto LABEL_522;
        case 0xAu:
          *v111 = *v112;
          v589 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
LABEL_315:
          v592 = *(int *)(v589 + 20);
LABEL_316:
          v613 = (char *)v111 + v592;
          v414 = v112;
          v614 = (char *)v112 + v592;
          v615 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v615 - 8) + 32))(v613, v614, v615);
          goto LABEL_523;
        default:
          __dstb = (void *)v113;
          *(unsigned char *)v111 = *(unsigned char *)v112;
          *(_WORD *)((char *)v111 + 1) = *(_WORD *)((char *)v112 + 1);
          v1241 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
          __srcc = v111;
          v411 = v1241[7];
          v412 = v112;
          v413 = (char *)v111 + v411;
          v414 = v412;
          v415 = (char *)v412 + v411;
          v416 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v415, 1, v416))
          {
            v417 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v413, v415, *(void *)(*(void *)(v417 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v416 - 8) + 32))(v413, v415, v416);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v413, 0, 1, v416);
          }
          v657 = v1241[8];
          v658 = (_OWORD *)((char *)__srcc + v657);
          v659 = (_OWORD *)((char *)v414 + v657);
          v660 = type metadata accessor for TranscriptProtoUndoContext(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v659, 1, v660))
          {
            v661 = sub_253462A5C(&qword_269CE0450);
            memcpy(v658, v659, *(void *)(*(void *)(v661 - 8) + 64));
          }
          else
          {
            v686 = v659[1];
            *v658 = *v659;
            v658[1] = v686;
            v658[2] = v659[2];
            v687 = *(int *)(v660 + 28);
            v688 = (char *)v658 + v687;
            v689 = (char *)v659 + v687;
            v690 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v690 - 8) + 32))(v688, v689, v690);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v658, 0, 1, v660);
          }
          v691 = v1241[9];
          v692 = (_OWORD *)((char *)__srcc + v691);
          v693 = (_OWORD *)((char *)v414 + v691);
          v694 = type metadata accessor for TranscriptProtoFollowUpAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v693, 1, v694))
          {
            v695 = sub_253462A5C(&qword_269CE0468);
            memcpy(v692, v693, *(void *)(*(void *)(v695 - 8) + 64));
          }
          else
          {
            v696 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v693, 1, v696))
            {
              v697 = sub_253462A5C(&qword_269CE0460);
              memcpy(v692, v693, *(void *)(*(void *)(v697 - 8) + 64));
            }
            else
            {
              v1221 = (void *)type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v693, 1, (uint64_t)v1221))
              {
                v828 = sub_253462A5C(&qword_269CE0458);
                memcpy(v692, v693, *(void *)(*(void *)(v828 - 8) + 64));
              }
              else
              {
                v1041 = v693[1];
                *v692 = *v693;
                v692[1] = v1041;
                *((void *)v692 + 4) = *((void *)v693 + 4);
                v1042 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                               + 28);
                v1196 = (char *)v693 + v1042;
                v1210 = (char *)v692 + v1042;
                v1043 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1043 - 8) + 32))(v1210, v1196, v1043);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v692, 0, 1, (uint64_t)v1221);
              }
              v1044 = *(int *)(v696 + 20);
              v1211 = (char *)v693 + v1044;
              v1226 = (char *)v692 + v1044;
              v1045 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1045 - 8) + 32))(v1226, v1211, v1045);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v692, 0, 1, v696);
            }
            v1046 = *(int *)(v694 + 20);
            v1047 = (char *)v692 + v1046;
            v1048 = (char *)v693 + v1046;
            v1049 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1049 - 8) + 32))(v1047, v1048, v1049);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v692, 0, 1, v694);
          }
          v111 = __srcc;
          *(_OWORD *)((char *)__srcc + v1241[10]) = *(_OWORD *)((char *)v414 + v1241[10]);
          v656 = v1241[11];
LABEL_521:
          v925 = (char *)v111 + v656;
          v926 = (char *)v414 + v656;
          goto LABEL_522;
      }
    case 0x1Eu:
      v115 = a2[1];
      *a1 = *a2;
      a1[1] = v115;
      StepResults = (int *)type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
      v116 = StepResults[6];
      v117 = (void *)((char *)a1 + v116);
      v118 = (void *)((char *)a2 + v116);
      v119 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v118, 1, v119)) {
        goto LABEL_500;
      }
      goto LABEL_97;
    case 0x1Fu:
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
      StepResults = (int *)type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
      v120 = StepResults[6];
      v117 = (void *)((char *)a1 + v120);
      v118 = (void *)((char *)a2 + v120);
      v119 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v118, 1, v119)) {
        goto LABEL_500;
      }
      goto LABEL_97;
    case 0x20u:
      v121 = type metadata accessor for TranscriptProtoRequestContent(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v121))
      {
        v122 = sub_253462A5C(&qword_269CE1AF0);
        memcpy(a1, a2, *(void *)(*(void *)(v122 - 8) + 64));
        goto LABEL_499;
      }
      v237 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v237))
      {
        v238 = sub_253462A5C(&qword_269CE1B00);
        memcpy(a1, a2, *(void *)(*(void *)(v238 - 8) + 64));
        goto LABEL_498;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)a1 = *(void *)a2;
          v464 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          v465 = (char *)a1 + v464;
          v466 = (char *)a2 + v464;
          v467 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v467 - 8) + 32))(v465, v466, v467);
          goto LABEL_497;
        case 2u:
          v468 = a2[1];
          *a1 = *a2;
          a1[1] = v468;
          v469 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
          v470 = v469[6];
          v471 = (char *)a1 + v470;
          v472 = (char *)a2 + v470;
          v473 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v472, 1, v473))
          {
            v474 = sub_253462A5C(&qword_269CE2140);
            memcpy(v471, v472, *(void *)(*(void *)(v474 - 8) + 64));
            goto LABEL_404;
          }
          v512 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v472, 1, v512))
          {
            v513 = sub_253462A5C(&qword_269CE2200);
            memcpy(v471, v472, *(void *)(*(void *)(v513 - 8) + 64));
LABEL_403:
            v730 = *(int *)(v473 + 20);
            v731 = &v471[v730];
            v732 = &v472[v730];
            v733 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v733 - 8) + 32))(v731, v732, v733);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v471, 0, 1, v473);
LABEL_404:
            v734 = v469[7];
            v735 = (_DWORD *)((char *)a1 + v734);
            v736 = (_DWORD *)((char *)a2 + v734);
            v737 = type metadata accessor for TranscriptProtoStatementID(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v736, 1, v737))
            {
              v738 = sub_253462A5C(&qword_26B249528);
              memcpy(v735, v736, *(void *)(*(void *)(v738 - 8) + 64));
            }
            else
            {
              *v735 = *v736;
              *(_OWORD *)(v735 + 2) = *(_OWORD *)(v736 + 2);
              v739 = *(int *)(v737 + 24);
              v740 = (char *)v735 + v739;
              v741 = (char *)v736 + v739;
              v742 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v742 - 8) + 32))(v740, v741, v742);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v735, 0, 1, v737);
            }
            v743 = v469[8];
            v744 = (void *)((char *)a1 + v743);
            v745 = (void *)((char *)a2 + v743);
            v746 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v745, 1, v746))
            {
              v747 = sub_253462A5C(&qword_269CE2130);
              memcpy(v744, v745, *(void *)(*(void *)(v747 - 8) + 64));
              goto LABEL_496;
            }
            v1332 = v469;
            v748 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v745, 1, v748))
            {
              v749 = sub_253462A5C(&qword_269CE2150);
              memcpy(v744, v745, *(void *)(*(void *)(v749 - 8) + 64));
LABEL_495:
              v887 = *(int *)(v746 + 20);
              v888 = (char *)v744 + v887;
              v889 = (char *)v745 + v887;
              v890 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v890 - 8) + 32))(v888, v889, v890);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v744, 0, 1, v746);
              v469 = v1332;
LABEL_496:
              v891 = v469[9];
              v892 = (char *)a1 + v891;
              v893 = (char *)a2 + v891;
              v894 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v894 - 8) + 32))(v892, v893, v894);
LABEL_497:
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v237);
LABEL_498:
              v895 = *(int *)(v121 + 20);
              v896 = (char *)a1 + v895;
              v897 = (char *)a2 + v895;
              v898 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v898 - 8) + 32))(v896, v897, v898);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v121);
LABEL_499:
              StepResults = (int *)type metadata accessor for TranscriptProtoExternalAgentRequest(0);
              *(_OWORD *)((char *)a1 + StepResults[5]) = *(_OWORD *)((char *)a2 + StepResults[5]);
              v899 = StepResults[6];
              v117 = (void *)((char *)a1 + v899);
              v118 = (void *)((char *)a2 + v899);
              v119 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v118, 1, v119))
              {
LABEL_500:
                v900 = sub_253462A5C(&qword_269CE1AD0);
                memcpy(v117, v118, *(void *)(*(void *)(v900 - 8) + 64));
              }
              else
              {
LABEL_97:
                *(_OWORD *)v117 = *(_OWORD *)v118;
                v117[2] = v118[2];
                v233 = *(int *)(v119 + 24);
                v234 = (char *)v117 + v233;
                v235 = (char *)v118 + v233;
                v236 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v236 - 8) + 32))(v234, v235, v236);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v117, 0, 1, v119);
              }
LABEL_649:
              v1168 = StepResults[7];
              v1169 = (char *)a1 + v1168;
              v1170 = (char *)a2 + v1168;
              v1171 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1171 - 8) + 32))(v1169, v1170, v1171);
              goto LABEL_650;
            }
            __dsti = (void *)v748;
            v750 = swift_getEnumCaseMultiPayload();
            if (v750 == 1)
            {
              *v744 = *v745;
              v755 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
              v756 = (char *)v744 + v755;
              v757 = (char *)v745 + v755;
              v758 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v758 - 8) + 32))(v756, v757, v758);
              v759 = (uint64_t)__dsti;
            }
            else
            {
              if (v750)
              {
                v759 = v748;
                memcpy(v744, v745, *(void *)(*(void *)(v748 - 8) + 64));
LABEL_494:
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v744, 0, 1, v759);
                goto LABEL_495;
              }
              *(_OWORD *)v744 = *(_OWORD *)v745;
              v751 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
              v752 = *(int *)(v751 + 20);
              v1253 = (_DWORD *)((char *)v744 + v752);
              __srco = (int *)v751;
              v753 = (_DWORD *)((char *)v745 + v752);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v745 + v752, 1, v737))
              {
                v754 = sub_253462A5C(&qword_26B249528);
                memcpy(v1253, v753, *(void *)(*(void *)(v754 - 8) + 64));
              }
              else
              {
                *v1253 = *v753;
                *(_OWORD *)(v1253 + 2) = *(_OWORD *)(v753 + 2);
                v881 = *(int *)(v737 + 24);
                v1222 = (char *)v753 + v881;
                v1238 = (char *)v1253 + v881;
                v882 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v882 - 8) + 32))(v1238, v1222, v882);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1253, 0, 1, v737);
              }
              v883 = __srco[6];
              v884 = (char *)v744 + v883;
              v885 = (char *)v745 + v883;
              v886 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v886 - 8) + 32))(v884, v885, v886);
              v759 = (uint64_t)__dsti;
            }
            swift_storeEnumTagMultiPayload();
            goto LABEL_494;
          }
          v573 = swift_getEnumCaseMultiPayload();
          switch(v573)
          {
            case 6:
              v727 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v727 - 8) + 32))(v471, v472, v727);
              break;
            case 5:
              *v471 = *v472;
              v728 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                            + 20);
              __dstm = &v472[v728];
              v1331 = &v471[v728];
              v729 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v729 - 8) + 32))(v1331, __dstm, v729);
              break;
            case 1:
              v574 = sub_253B08E50();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v574 - 8) + 32))(v471, v472, v574);
              break;
            default:
              memcpy(v471, v472, *(void *)(*(void *)(v512 - 8) + 64));
              goto LABEL_402;
          }
          swift_storeEnumTagMultiPayload();
LABEL_402:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v471, 0, 1, v512);
          goto LABEL_403;
        case 3u:
          v475 = sub_253B07160();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v475 - 8) + 32))(a1, a2, v475);
          goto LABEL_497;
        default:
          *a1 = *a2;
          v382 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          v383 = *(int *)(v382 + 20);
          v384 = (_DWORD *)((char *)a1 + v383);
          v385 = (_DWORD *)((char *)a2 + v383);
          v386 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v385, 1, v386))
          {
            v387 = sub_253462A5C(&qword_26B249528);
            memcpy(v384, v385, *(void *)(*(void *)(v387 - 8) + 64));
          }
          else
          {
            *v384 = *v385;
            *(_OWORD *)(v384 + 2) = *(_OWORD *)(v385 + 2);
            v501 = *(int *)(v386 + 24);
            v502 = (char *)v384 + v501;
            v503 = (char *)v385 + v501;
            v504 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v504 - 8) + 32))(v502, v503, v504);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v384, 0, 1, v386);
          }
          v505 = *(int *)(v382 + 24);
          v506 = (char *)a1 + v505;
          v507 = (char *)a2 + v505;
          v508 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v508 - 8) + 32))(v506, v507, v508);
          goto LABEL_497;
      }
    case 0x21u:
      *(void *)a1 = *(void *)a2;
      StepResults = (int *)type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
      v123 = StepResults[5];
      v124 = (_DWORD *)((char *)a1 + v123);
      v125 = (_DWORD *)((char *)a2 + v123);
      v126 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v125, 1, v126))
      {
        v127 = sub_253462A5C(&qword_26B249528);
        memcpy(v124, v125, *(void *)(*(void *)(v127 - 8) + 64));
      }
      else
      {
        *v124 = *v125;
        *(_OWORD *)(v124 + 2) = *(_OWORD *)(v125 + 2);
        v239 = *(int *)(v126 + 24);
        v240 = (char *)v124 + v239;
        v241 = (char *)v125 + v239;
        v242 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v242 - 8) + 32))(v240, v241, v242);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v124, 0, 1, v126);
      }
      v243 = StepResults[6];
      v244 = (void *)((char *)a1 + v243);
      v245 = (void *)((char *)a2 + v243);
      DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoStatementOutcome(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v245, 1, DecorationPrePlannerResultPayload))
      {
        v247 = sub_253462A5C(&qword_269CE0388);
        memcpy(v244, v245, *(void *)(*(void *)(v247 - 8) + 64));
        goto LABEL_649;
      }
      v320 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v245, 1, v320))
      {
        v321 = sub_253462A5C(&qword_269CE04B0);
        memcpy(v244, v245, *(void *)(*(void *)(v321 - 8) + 64));
LABEL_648:
        v1164 = *(int *)(DecorationPrePlannerResultPayload + 20);
        v1165 = (char *)v244 + v1164;
        v1166 = (char *)v245 + v1164;
        v1167 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v1167 - 8) + 32))(v1165, v1166, v1167);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v244, 0, 1, DecorationPrePlannerResultPayload);
        goto LABEL_649;
      }
      break;
    case 0x22u:
      *a1 = *a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      v128 = *(int *)(type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0) + 24);
      v129 = (char *)a1 + v128;
      v130 = (char *)a2 + v128;
      v131 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 32))(v129, v130, v131);
      goto LABEL_650;
    case 0x23u:
      v132 = sub_253B08F30();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v132))
      {
        v133 = sub_253462A5C(&qword_269CDFA70);
        memcpy(a1, a2, *(void *)(*(void *)(v133 - 8) + 64));
      }
      else
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v132 - 8) + 32))(a1, a2, v132);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v132);
      }
      StepResults = (int *)type metadata accessor for TranscriptProtoToolResolution(0);
      v248 = StepResults[5];
      v249 = (_DWORD *)((char *)a1 + v248);
      v250 = (_DWORD *)((char *)a2 + v248);
      v251 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v250, 1, v251))
      {
        v252 = sub_253462A5C(&qword_26B249528);
        memcpy(v249, v250, *(void *)(*(void *)(v252 - 8) + 64));
      }
      else
      {
        *v249 = *v250;
        *(_OWORD *)(v249 + 2) = *(_OWORD *)(v250 + 2);
        v322 = *(int *)(v251 + 24);
        v323 = (char *)v249 + v322;
        v324 = (char *)v250 + v322;
        v325 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v325 - 8) + 32))(v323, v324, v325);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v249, 0, 1, v251);
      }
      v326 = StepResults[6];
      v327 = (_DWORD *)((char *)a1 + v326);
      v328 = (_DWORD *)((char *)a2 + v326);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v326, 1, v251))goto LABEL_145; {
      goto LABEL_149;
      }
    case 0x24u:
      *a1 = *a2;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      v18 = (int *)type metadata accessor for TranscriptProtoUndoRedoRequest(0);
      v134 = v18[7];
      v135 = (_DWORD *)((char *)a1 + v134);
      v136 = (_DWORD *)((char *)a2 + v134);
      v137 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v136, 1, v137))
      {
        v138 = sub_253462A5C(&qword_26B249528);
        memcpy(v135, v136, *(void *)(*(void *)(v138 - 8) + 64));
      }
      else
      {
        *v135 = *v136;
        *(_OWORD *)(v135 + 2) = *(_OWORD *)(v136 + 2);
        v253 = *(int *)(v137 + 24);
        v254 = (char *)v135 + v253;
        v255 = (char *)v136 + v253;
        v256 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v256 - 8) + 32))(v254, v255, v256);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v135, 0, 1, v137);
      }
      v257 = v18[8];
      v258 = (_DWORD *)((char *)a1 + v257);
      v259 = (_DWORD *)((char *)a2 + v257);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v257, 1, v137))
      {
        v260 = sub_253462A5C(&qword_26B249528);
        memcpy(v258, v259, *(void *)(*(void *)(v260 - 8) + 64));
      }
      else
      {
        *v258 = *v259;
        *(_OWORD *)(v258 + 2) = *(_OWORD *)(v259 + 2);
        v329 = *(int *)(v137 + 24);
        v330 = (char *)v258 + v329;
        v331 = (char *)v259 + v329;
        v332 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v332 - 8) + 32))(v330, v331, v332);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v258, 0, 1, v137);
      }
      goto LABEL_490;
    case 0x25u:
      *a1 = *a2;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      v139 = (int *)type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
      v140 = v139[6];
      v141 = (_DWORD *)((char *)a1 + v140);
      v142 = (_DWORD *)((char *)a2 + v140);
      v143 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v142, 1, v143))
      {
        v144 = sub_253462A5C(&qword_26B249528);
        memcpy(v141, v142, *(void *)(*(void *)(v144 - 8) + 64));
      }
      else
      {
        *v141 = *v142;
        *(_OWORD *)(v141 + 2) = *(_OWORD *)(v142 + 2);
        v261 = *(int *)(v143 + 24);
        v262 = (char *)v141 + v261;
        v263 = (char *)v142 + v261;
        v264 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v264 - 8) + 32))(v262, v263, v264);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v141, 0, 1, v143);
      }
      v265 = v139[7];
      v266 = (_DWORD *)((char *)a1 + v265);
      v267 = (_DWORD *)((char *)a2 + v265);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v265, 1, v143))
      {
        v268 = sub_253462A5C(&qword_26B249528);
        memcpy(v266, v267, *(void *)(*(void *)(v268 - 8) + 64));
      }
      else
      {
        *v266 = *v267;
        *(_OWORD *)(v266 + 2) = *(_OWORD *)(v267 + 2);
        v333 = *(int *)(v143 + 24);
        v334 = (char *)v266 + v333;
        v335 = (char *)v267 + v333;
        v336 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v336 - 8) + 32))(v334, v335, v336);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v266, 0, 1, v143);
      }
      v337 = v139[8];
      v338 = (char *)a1 + v337;
      v339 = (char *)a2 + v337;
      v340 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v340 - 8) + 32))(v338, v339, v340);
      goto LABEL_650;
    case 0x26u:
      v145 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v145))
      {
        v146 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(a1, a2, *(void *)(*(void *)(v146 - 8) + 64));
      }
      else
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v145 - 8) + 32))(a1, a2, v145);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v145);
      }
      StepResults = (int *)type metadata accessor for TranscriptProtoTypeConversionRequest(0);
      v269 = StepResults[5];
      v270 = (char *)a1 + v269;
      v271 = (char *)a2 + v269;
      v272 = sub_253B08E60();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v271, 1, v272))
      {
        v273 = sub_253462A5C(&qword_269CDFA30);
        memcpy(v270, v271, *(void *)(*(void *)(v273 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v272 - 8) + 32))(v270, v271, v272);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v270, 0, 1, v272);
      }
      v341 = StepResults[6];
      v66 = (_DWORD *)((char *)a1 + v341);
      v67 = (_DWORD *)((char *)a2 + v341);
      v68 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v67, 1, v68))
      {
LABEL_142:
        v342 = sub_253462A5C(&qword_26B249528);
        memcpy(v66, v67, *(void *)(*(void *)(v342 - 8) + 64));
      }
      else
      {
LABEL_86:
        *v66 = *v67;
        *(_OWORD *)(v66 + 2) = *(_OWORD *)(v67 + 2);
        v207 = *(int *)(v68 + 24);
        v208 = (char *)v66 + v207;
        v209 = (char *)v67 + v207;
        v210 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v210 - 8) + 32))(v208, v209, v210);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v66, 0, 1, v68);
      }
      goto LABEL_649;
    case 0x27u:
      v147 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v147))
      {
        v148 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(a1, a2, *(void *)(*(void *)(v148 - 8) + 64));
      }
      else
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v147 - 8) + 32))(a1, a2, v147);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v147);
      }
      StepResults = (int *)type metadata accessor for TranscriptProtoTypeConversionResult(0);
      v274 = StepResults[5];
      v275 = (_DWORD *)((char *)a1 + v274);
      v276 = (_DWORD *)((char *)a2 + v274);
      v251 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v276, 1, v251))
      {
        v277 = sub_253462A5C(&qword_26B249528);
        memcpy(v275, v276, *(void *)(*(void *)(v277 - 8) + 64));
      }
      else
      {
        *v275 = *v276;
        *(_OWORD *)(v275 + 2) = *(_OWORD *)(v276 + 2);
        v343 = *(int *)(v251 + 24);
        v344 = (char *)v275 + v343;
        v345 = (char *)v276 + v343;
        v346 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v346 - 8) + 32))(v344, v345, v346);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v275, 0, 1, v251);
      }
      v347 = StepResults[6];
      v327 = (_DWORD *)((char *)a1 + v347);
      v328 = (_DWORD *)((char *)a2 + v347);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v347, 1, v251))
      {
LABEL_145:
        v348 = sub_253462A5C(&qword_26B249528);
        memcpy(v327, v328, *(void *)(*(void *)(v348 - 8) + 64));
      }
      else
      {
LABEL_149:
        *v327 = *v328;
        *(_OWORD *)(v327 + 2) = *(_OWORD *)(v328 + 2);
        v351 = *(int *)(v251 + 24);
        v352 = (char *)v327 + v351;
        v353 = (char *)v328 + v351;
        v354 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v354 - 8) + 32))(v352, v353, v354);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v327, 0, 1, v251);
      }
      goto LABEL_649;
    case 0x28u:
      v149 = a2[1];
      *a1 = *a2;
      a1[1] = v149;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      DecorationResult = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
      v151 = *(int *)(DecorationResult + 36);
      v152 = (_OWORD *)((char *)a1 + v151);
      v153 = (_OWORD *)((char *)a2 + v151);
      DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v153, 1, DecorationToolRetrievalResponse))
      {
        v155 = sub_253462A5C(&qword_269CDFA00);
        memcpy(v152, v153, *(void *)(*(void *)(v155 - 8) + 64));
      }
      else
      {
        v278 = v153[1];
        *v152 = *v153;
        v152[1] = v278;
        *((_DWORD *)v152 + 8) = *((_DWORD *)v153 + 8);
        *(_OWORD *)((char *)v152 + 40) = *(_OWORD *)((char *)v153 + 40);
        v279 = *(int *)(DecorationToolRetrievalResponse + 36);
        v280 = (char *)v152 + v279;
        v281 = (char *)v153 + v279;
        v282 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v282 - 8) + 32))(v280, v281, v282);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v152, 0, 1, DecorationToolRetrievalResponse);
      }
      v283 = *(int *)(DecorationResult + 40);
      v284 = (char *)a1 + v283;
      v285 = (char *)a2 + v283;
      v286 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v286 - 8) + 32))(v284, v285, v286);
      goto LABEL_650;
    case 0x2Au:
      *a1 = *a2;
      StepResults = (int *)type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
      v156 = StepResults[5];
      v157 = (_DWORD *)((char *)a1 + v156);
      v158 = (_DWORD *)((char *)a2 + v156);
      v159 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v158, 1, v159))
      {
        v160 = sub_253462A5C(&qword_26B249528);
        memcpy(v157, v158, *(void *)(*(void *)(v160 - 8) + 64));
      }
      else
      {
        *v157 = *v158;
        *(_OWORD *)(v157 + 2) = *(_OWORD *)(v158 + 2);
        v287 = *(int *)(v159 + 24);
        v288 = (char *)v157 + v287;
        v289 = (char *)v158 + v287;
        v290 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v290 - 8) + 32))(v288, v289, v290);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v157, 0, 1, v159);
      }
      v291 = StepResults[6];
      v244 = (void *)((char *)a1 + v291);
      v245 = (void *)((char *)a2 + v291);
      DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v245, 1, DecorationPrePlannerResultPayload))
      {
        v292 = sub_253462A5C(&qword_269CE2560);
        memcpy(v244, v245, *(void *)(*(void *)(v292 - 8) + 64));
        goto LABEL_649;
      }
      DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v245, 1, DecorationPrePlannerPayloadEnum))
      {
        v350 = sub_253462A5C(&qword_269CE25A0);
        memcpy(v244, v245, *(void *)(*(void *)(v350 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *v244 = *v245;
            DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
            break;
          case 2u:
            *v244 = *v245;
            DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
            break;
          case 3u:
            *v244 = *v245;
            DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
            break;
          case 4u:
            *v244 = *v245;
            DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
            break;
          case 5u:
            *v244 = *v245;
            DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
            break;
          default:
            *v244 = *v245;
            DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
            break;
        }
        v483 = *(int *)(DecorationPrePlannerResultPayloadRepeatedTypedValueVariant + 20);
        v484 = (char *)v244 + v483;
        v1327 = (char *)v245 + v483;
        v485 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v485 - 8) + 32))(v484, v1327, v485);
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v244, 0, 1, DecorationPrePlannerPayloadEnum);
      }
      goto LABEL_648;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *v244 = *v245;
      v551 = type metadata accessor for TranscriptProtoActionConfirmation(0);
      v552 = *(int *)(v551 + 20);
      v1244 = (int *)v551;
      __srch = (char *)v244 + v552;
      __dste = (char *)v245 + v552;
      v1229 = (int *)type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__dste, 1, (uint64_t)v1229))
      {
        v553 = sub_253462A5C(&qword_269CE0480);
        memcpy(__srch, __dste, *(void *)(*(void *)(v553 - 8) + 64));
      }
      else
      {
        v1214 = (void *)type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__dste, 1, (uint64_t)v1214))
        {
          v626 = sub_253462A5C(&qword_269CE0478);
          v627 = (uint64_t)__srch;
          memcpy(__srch, __dste, *(void *)(*(void *)(v626 - 8) + 64));
        }
        else
        {
          *(_OWORD *)__srch = *(_OWORD *)__dste;
          __srch[16] = __dste[16];
          v678 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
          v679 = *(int *)(v678 + 24);
          v1190 = v678;
          v1198 = &__srch[v679];
          v680 = &__dste[v679];
          v681 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v680, 1, v681))
          {
            v682 = sub_253462A5C(&qword_269CE0470);
            memcpy(v1198, v680, *(void *)(*(void *)(v682 - 8) + 64));
          }
          else
          {
            *v1198 = *v680;
            v797 = *(int *)(v681 + 20);
            v1188 = &v1198[v797];
            v798 = &v680[v797];
            v799 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v799 - 8) + 32))(v1188, v798, v799);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1198, 0, 1, v681);
          }
          v800 = *(int *)(v1190 + 28);
          v801 = &__srch[v800];
          v1203 = &__dste[v800];
          v802 = sub_253B07160();
          v803 = v801;
          v627 = (uint64_t)__srch;
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v802 - 8) + 32))(v803, v1203, v802);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__srch, 0, 1, (uint64_t)v1214);
        }
        v804 = v1229[5];
        __srcw = (void *)(v627 + v804);
        __dsto = &__dste[v804];
        v805 = sub_253B07160();
        (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v805 - 8) + 32))(__srcw, __dsto, v805);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v627, 0, 1, (uint64_t)v1229);
      }
      v628 = v1244;
      goto LABEL_443;
    case 2u:
      *(_OWORD *)v244 = *(_OWORD *)v245;
      v554 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
      goto LABEL_646;
    case 3u:
      *(_OWORD *)v244 = *(_OWORD *)v245;
      v244[2] = v245[2];
      *((unsigned char *)v244 + 24) = *((unsigned char *)v245 + 24);
      v555 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
      goto LABEL_271;
    case 4u:
      *(_OWORD *)v244 = *(_OWORD *)v245;
      v556 = v245[3];
      v244[2] = v245[2];
      v244[3] = v556;
      *((unsigned char *)v244 + 32) = *((unsigned char *)v245 + 32);
      v557 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
      goto LABEL_647;
    case 5u:
      *(_OWORD *)v244 = *(_OWORD *)v245;
      *((unsigned char *)v244 + 16) = *((unsigned char *)v245 + 16);
      v555 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_271:
      v558 = *(int *)(v555 + 24);
      __srci = (int *)v555;
      __dstf = (char *)v244 + v558;
      v559 = (char *)v245 + v558;
      v560 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v559, 1, v560))
      {
        v561 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(__dstf, v559, *(void *)(*(void *)(v561 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v560 - 8) + 32))(__dstf, v559, v560);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstf, 0, 1, v560);
      }
      v557 = __srci[7];
      goto LABEL_647;
    case 6u:
      *(_OWORD *)v244 = *(_OWORD *)v245;
      v562 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
      v563 = *(int *)(v562 + 20);
      __srcj = (int *)v562;
      __dstg = (char *)v244 + v563;
      v564 = (char *)v245 + v563;
      v565 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v564, 1, v565))
      {
        v566 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(__dstg, v564, *(void *)(*(void *)(v566 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v565 - 8) + 32))(__dstg, v564, v565);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstg, 0, 1, v565);
      }
      v628 = __srcj;
LABEL_443:
      v557 = v628[6];
      goto LABEL_647;
    case 7u:
      v567 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v245, 1, v567))
      {
        v568 = sub_253462A5C(&qword_269CE0498);
        memcpy(v244, v245, *(void *)(*(void *)(v568 - 8) + 64));
        goto LABEL_645;
      }
      v629 = swift_getEnumCaseMultiPayload();
      if (v629 != 2)
      {
        if (v629 == 1)
        {
          *(unsigned char *)v244 = *(unsigned char *)v245;
          v768 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
          v769 = (char *)v244 + v768;
          __dstn = (char *)v245 + v768;
          v770 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v770 - 8) + 32))(v769, __dstn, v770);
        }
        else
        {
          if (v629)
          {
            memcpy(v244, v245, *(void *)(*(void *)(v567 - 8) + 64));
            goto LABEL_644;
          }
          *(unsigned char *)v244 = *(unsigned char *)v245;
          v630 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
          v631 = (char *)v244 + v630;
          __dstl = (char *)v245 + v630;
          v632 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v632 - 8) + 32))(v631, __dstl, v632);
        }
LABEL_643:
        swift_storeEnumTagMultiPayload();
LABEL_644:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v244, 0, 1, v567);
LABEL_645:
        v554 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_646:
        v557 = *(int *)(v554 + 20);
LABEL_647:
        v1161 = (char *)v244 + v557;
        v1162 = (char *)v245 + v557;
        v1163 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v1163 - 8) + 32))(v1161, v1162, v1163);
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v244, 0, 1, v320);
        goto LABEL_648;
      }
      v766 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v245, 1, v766))
      {
        v767 = sub_253462A5C(&qword_269CE0490);
        memcpy(v244, v245, *(void *)(*(void *)(v767 - 8) + 64));
LABEL_642:
        v1158 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
        v1159 = (char *)v244 + v1158;
        __dsts = (char *)v245 + v1158;
        v1160 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v1160 - 8) + 32))(v1159, __dsts, v1160);
        goto LABEL_643;
      }
      v911 = swift_getEnumCaseMultiPayload();
      if (v911 == 1)
      {
        __dstk = (int *)type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v245, 1, (uint64_t)__dstk))
        {
          v1056 = sub_253462A5C(&qword_269CE0488);
          memcpy(v244, v245, *(void *)(*(void *)(v1056 - 8) + 64));
        }
        else
        {
          *(unsigned char *)v244 = *(unsigned char *)v245;
          v1154 = __dstk[5];
          v1262 = (char *)v245 + v1154;
          __srcbj = (char *)v244 + v1154;
          v1155 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1155 - 8) + 32))(__srcbj, v1262, v1155);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v244, 0, 1, (uint64_t)__dstk);
        }
        v1156 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
        __srcbk = (char *)v245 + v1156;
        __dstr = (char *)v244 + v1156;
        v1157 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v1157 - 8) + 32))(__dstr, __srcbk, v1157);
      }
      else
      {
        if (v911)
        {
          memcpy(v244, v245, *(void *)(*(void *)(v766 - 8) + 64));
LABEL_641:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v244, 0, 1, v766);
          goto LABEL_642;
        }
        *(_OWORD *)v244 = *(_OWORD *)v245;
        v912 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
        __srcbc = (char *)v245 + v912;
        __dstq = (char *)v244 + v912;
        v913 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v913 - 8) + 32))(__dstq, __srcbc, v913);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_641;
    case 8u:
      *v244 = *v245;
      *(_OWORD *)(v244 + 1) = *(_OWORD *)(v245 + 1);
      v557 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
      goto LABEL_647;
    case 9u:
      v569 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v245, 1, v569))
      {
        v570 = sub_253462A5C(&qword_269CE04A8);
        memcpy(v244, v245, *(void *)(*(void *)(v570 - 8) + 64));
      }
      else
      {
        __dsth = (int *)v569;
        v633 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v245, 1, v633))
        {
          v634 = sub_253462A5C(&qword_269CE04A0);
          memcpy(v244, v245, *(void *)(*(void *)(v634 - 8) + 64));
        }
        else
        {
          v683 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v245, 16, v683))
          {
            memcpy(v244, v245, *(void *)(*(void *)(v633 - 8) + 64));
          }
          else
          {
            v806 = *((_OWORD *)v245 + 1);
            *(_OWORD *)v244 = *(_OWORD *)v245;
            *((_OWORD *)v244 + 1) = v806;
            v244[4] = v245[4];
            v807 = *(int *)(v683 + 28);
            v1255 = (char *)v245 + v807;
            __srcx = (char *)v244 + v807;
            v808 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v808 - 8) + 32))(__srcx, v1255, v808);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v244, 0, 16, v683);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v244, 0, 1, v633);
        }
        v809 = __dsth[5];
        __srcy = (char *)v244 + v809;
        v810 = (char *)v245 + v809;
        v811 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v811 - 8) + 32))(__srcy, v810, v811);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v244, 0, 1, (uint64_t)__dsth);
      }
      v554 = type metadata accessor for TranscriptProtoActionFailure(0);
      goto LABEL_646;
    case 0xAu:
      *v244 = *v245;
      v554 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
      goto LABEL_646;
    default:
      *(unsigned char *)v244 = *(unsigned char *)v245;
      *(_WORD *)((char *)v244 + 1) = *(_WORD *)((char *)v245 + 1);
      v399 = type metadata accessor for TranscriptProtoActionSuccess(0);
      v400 = *(int *)(v399 + 28);
      __srcb = (char *)v244 + v400;
      __dsta = (int *)v399;
      v401 = (char *)v245 + v400;
      v402 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v401, 1, v402))
      {
        v403 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(__srcb, v401, *(void *)(*(void *)(v403 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v402 - 8) + 32))(__srcb, v401, v402);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__srcb, 0, 1, v402);
      }
      v580 = __dsta[8];
      v581 = (_OWORD *)((char *)v244 + v580);
      v582 = (_OWORD *)((char *)v245 + v580);
      __srck = (int *)type metadata accessor for TranscriptProtoUndoContext(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v582, 1, (uint64_t)__srck))
      {
        v583 = sub_253462A5C(&qword_269CE0450);
        memcpy(v581, v582, *(void *)(*(void *)(v583 - 8) + 64));
      }
      else
      {
        v644 = v582[1];
        *v581 = *v582;
        v581[1] = v644;
        v581[2] = v582[2];
        v645 = __srck[7];
        v1247 = (char *)v581 + v645;
        v646 = (char *)v582 + v645;
        v647 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v647 - 8) + 32))(v1247, v646, v647);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v581, 0, 1, (uint64_t)__srck);
      }
      v648 = __dsta[9];
      v649 = (_OWORD *)((char *)v244 + v648);
      v650 = (_OWORD *)((char *)v245 + v648);
      v1248 = (int *)type metadata accessor for TranscriptProtoFollowUpAction(0);
      __srcm = v650;
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v650, 1, (uint64_t)v1248))
      {
        v651 = sub_253462A5C(&qword_269CE0468);
        memcpy(v649, v650, *(void *)(*(void *)(v651 - 8) + 64));
      }
      else
      {
        v654 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__srcm, 1, v654))
        {
          v655 = sub_253462A5C(&qword_269CE0460);
          memcpy(v649, __srcm, *(void *)(*(void *)(v655 - 8) + 64));
        }
        else
        {
          v1217 = v649;
          v1232 = (void *)type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__srcm, 1, (uint64_t)v1232))
          {
            v685 = sub_253462A5C(&qword_269CE0458);
            memcpy(v649, __srcm, *(void *)(*(void *)(v685 - 8) + 64));
          }
          else
          {
            v820 = __srcm[1];
            *v649 = *__srcm;
            v649[1] = v820;
            *((void *)v649 + 4) = *((void *)__srcm + 4);
            v821 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
            v1206 = (char *)v649 + v821;
            v822 = (char *)__srcm + v821;
            v823 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v823 - 8) + 32))(v1206, v822, v823);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1217, 0, 1, (uint64_t)v1232);
          }
          v824 = *(int *)(v654 + 20);
          v649 = v1217;
          v1235 = (char *)v1217 + v824;
          v1207 = (char *)__srcm + v824;
          v825 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v825 - 8) + 32))(v1235, v1207, v825);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1217, 0, 1, v654);
        }
        v826 = v1248[5];
        v1236 = (char *)v649 + v826;
        __srcz = (char *)__srcm + v826;
        v827 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v827 - 8) + 32))(v1236, __srcz, v827);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v649, 0, 1, (uint64_t)v1248);
      }
      *(_OWORD *)((char *)v244 + __dsta[10]) = *(_OWORD *)((char *)v245 + __dsta[10]);
      v557 = __dsta[11];
      goto LABEL_647;
  }
}

_OWORD *assignWithTake for TranscriptProtoPayloadEnum(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for TranscriptProtoLocaleSettings(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
        {
          uint64_t v7 = sub_253462A5C(&qword_26B2497A0);
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        }
        else
        {
          long long v161 = a2[1];
          *a1 = *a2;
          a1[1] = v161;
          a1[2] = a2[2];
          uint64_t v162 = *(int *)(v6 + 28);
          v163 = (char *)a1 + v162;
          v164 = (char *)a2 + v162;
          uint64_t v165 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 32))(v163, v164, v165);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
        }
        uint64_t Step = type metadata accessor for TranscriptProtoSessionStart(0);
        uint64_t v166 = *(int *)(Step + 20);
        v167 = (_OWORD *)((char *)a1 + v166);
        v168 = (_OWORD *)((char *)a2 + v166);
        uint64_t v169 = type metadata accessor for TranscriptProtoDeviceDetails(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v168, 1, v169))
        {
          uint64_t v170 = sub_253462A5C(&qword_26B249680);
          memcpy(v167, v168, *(void *)(*(void *)(v170 - 8) + 64));
        }
        else
        {
          _OWORD *v167 = *v168;
          uint64_t v293 = *(int *)(v169 + 20);
          v294 = (_DWORD *)((char *)v167 + v293);
          v295 = (_DWORD *)((char *)v168 + v293);
          uint64_t v296 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v295, 1, v296))
          {
            uint64_t v297 = sub_253462A5C(&qword_269CE2510);
            memcpy(v294, v295, *(void *)(*(void *)(v297 - 8) + 64));
          }
          else
          {
            _DWORD *v294 = *v295;
            uint64_t v388 = *(int *)(v296 + 20);
            v1318 = (char *)v294 + v388;
            v389 = (char *)v295 + v388;
            uint64_t v390 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v390 - 8) + 32))(v1318, v389, v390);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v294, 0, 1, v296);
          }
          uint64_t v391 = *(int *)(v169 + 24);
          v392 = (char *)v167 + v391;
          v393 = (char *)v168 + v391;
          uint64_t v394 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v394 - 8) + 32))(v392, v393, v394);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v167, 0, 1, v169);
        }
        goto LABEL_173;
      case 1u:
        *a1 = *a2;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        v8 = (int *)type metadata accessor for TranscriptProtoTextQuery(0);
        uint64_t v9 = v8[6];
        v10 = (_DWORD *)((char *)a1 + v9);
        v11 = (_DWORD *)((char *)a2 + v9);
        uint64_t v12 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
        {
          uint64_t v13 = sub_253462A5C(&qword_26B249528);
          memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          _DWORD *v10 = *v11;
          *(_OWORD *)(v10 + 2) = *(_OWORD *)(v11 + 2);
          uint64_t v171 = *(int *)(v12 + 24);
          v172 = (char *)v10 + v171;
          v173 = (char *)v11 + v171;
          uint64_t v174 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 32))(v172, v173, v174);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
        }
        *(_OWORD *)((char *)a1 + v8[7]) = *(_OWORD *)((char *)a2 + v8[7]);
        uint64_t v175 = v8[8];
        v176 = (char *)a1 + v175;
        v177 = (char *)a2 + v175;
        uint64_t v178 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 32))(v176, v177, v178);
        goto LABEL_660;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        a1[1] = a2[1];
        uint64_t v14 = *(int *)(type metadata accessor for TranscriptProtoSpeechQuery(0) + 28);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        uint64_t v17 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
        goto LABEL_660;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        v18 = (int *)type metadata accessor for TranscriptProtoRequest(0);
        uint64_t v19 = v18[5];
        v20 = (_OWORD *)((char *)a1 + v19);
        v21 = (_OWORD *)((char *)a2 + v19);
        uint64_t v22 = type metadata accessor for TranscriptProtoRequestContent(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v22))
        {
          uint64_t v23 = sub_253462A5C(&qword_269CE1AF0);
          memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
LABEL_469:
          uint64_t v845 = v18[6];
          v846 = (_OWORD *)((char *)a1 + v845);
          v847 = (_OWORD *)((char *)a2 + v845);
          uint64_t v848 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v847, 1, v848))
          {
            uint64_t v849 = sub_253462A5C(&qword_269CE1AE0);
            memcpy(v846, v847, *(void *)(*(void *)(v849 - 8) + 64));
          }
          else
          {
            uint64_t v850 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v847, 1, v850))
            {
              uint64_t v851 = sub_253462A5C(&qword_269CE1B50);
              memcpy(v846, v847, *(void *)(*(void *)(v851 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  _OWORD *v846 = *v847;
                  uint64_t v853 = type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0);
                  goto LABEL_483;
                case 2u:
                  _OWORD *v846 = *v847;
                  *((unsigned char *)v846 + 16) = *((unsigned char *)v847 + 16);
                  uint64_t v854 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
                  goto LABEL_486;
                case 3u:
                  _OWORD *v846 = *v847;
                  *((unsigned char *)v846 + 16) = *((unsigned char *)v847 + 16);
                  uint64_t v854 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
                  goto LABEL_486;
                case 4u:
                  _OWORD *v846 = *v847;
                  *((unsigned char *)v846 + 16) = *((unsigned char *)v847 + 16);
                  uint64_t v854 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
                  goto LABEL_486;
                case 5u:
                  _OWORD *v846 = *v847;
                  *((unsigned char *)v846 + 16) = *((unsigned char *)v847 + 16);
                  uint64_t v854 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
                  goto LABEL_486;
                case 6u:
                  uint64_t v855 = type metadata accessor for TranscriptProtoStatementID(0);
                  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v847, 1, v855))
                  {
                    uint64_t v856 = sub_253462A5C(&qword_26B249528);
                    memcpy(v846, v847, *(void *)(*(void *)(v856 - 8) + 64));
                  }
                  else
                  {
                    *(_DWORD *)v846 = *(_DWORD *)v847;
                    *(_OWORD *)((char *)v846 + 8) = *(_OWORD *)((char *)v847 + 8);
                    uint64_t v857 = *(int *)(v855 + 24);
                    __dstp = (char *)v847 + v857;
                    v1324 = (char *)v846 + v857;
                    uint64_t v858 = sub_253B07160();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v858 - 8) + 32))(v1324, __dstp, v858);
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v846, 0, 1, v855);
                  }
                  uint64_t v854 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
                  uint64_t v859 = *(int *)(v854 + 20);
                  v860 = (char *)v846 + v859;
                  v861 = (char *)v847 + v859;
                  *(void *)v860 = *(void *)v861;
                  v860[8] = v861[8];
LABEL_486:
                  uint64_t v852 = *(int *)(v854 + 24);
                  break;
                case 7u:
                  *(void *)v846 = *(void *)v847;
                  *((unsigned char *)v846 + 8) = *((unsigned char *)v847 + 8);
                  uint64_t v853 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0);
LABEL_483:
                  uint64_t v852 = *(int *)(v853 + 20);
                  break;
                default:
                  _OWORD *v846 = *v847;
                  *((_WORD *)v846 + 8) = *((_WORD *)v847 + 8);
                  uint64_t v852 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
                  break;
              }
              v862 = (char *)v846 + v852;
              v1325 = (char *)v847 + v852;
              uint64_t v863 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v863 - 8) + 32))(v862, v1325, v863);
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v846, 0, 1, v850);
            }
            uint64_t v864 = *(int *)(v848 + 20);
            v865 = (char *)v846 + v864;
            v866 = (char *)v847 + v864;
            uint64_t v867 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v867 - 8) + 32))(v865, v866, v867);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v846, 0, 1, v848);
          }
          *(_OWORD *)((char *)a1 + v18[7]) = *(_OWORD *)((char *)a2 + v18[7]);
          uint64_t v868 = v18[8];
          v869 = (void *)((char *)a1 + v868);
          v870 = (void *)((char *)a2 + v868);
          uint64_t v871 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v870, 1, v871))
          {
            uint64_t v872 = sub_253462A5C(&qword_269CE1AD0);
            memcpy(v869, v870, *(void *)(*(void *)(v872 - 8) + 64));
          }
          else
          {
            *(_OWORD *)v869 = *(_OWORD *)v870;
            v869[2] = v870[2];
            uint64_t v873 = *(int *)(v871 + 24);
            v874 = (char *)v869 + v873;
            v875 = (char *)v870 + v873;
            uint64_t v876 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v876 - 8) + 32))(v874, v875, v876);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v869, 0, 1, v871);
          }
          goto LABEL_492;
        }
        uint64_t v179 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v179))
        {
          uint64_t v180 = sub_253462A5C(&qword_269CE1B00);
          memcpy(v20, v21, *(void *)(*(void *)(v180 - 8) + 64));
LABEL_468:
          uint64_t v841 = *(int *)(v22 + 20);
          v842 = (char *)v20 + v841;
          v843 = (char *)v21 + v841;
          uint64_t v844 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v844 - 8) + 32))(v842, v843, v844);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, v22);
          goto LABEL_469;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *(void *)v20 = *(void *)v21;
            uint64_t v418 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
            v419 = (char *)v20 + v418;
            v420 = (char *)v21 + v418;
            uint64_t v421 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v421 - 8) + 32))(v419, v420, v421);
            goto LABEL_467;
          case 2u:
            long long v422 = v21[1];
            _OWORD *v20 = *v21;
            v20[1] = v422;
            __dstc = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
            uint64_t v423 = __dstc[6];
            v1225 = (char *)v20 + v423;
            v424 = (char *)v21 + v423;
            uint64_t v425 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
            __srcd = v424;
            uint64_t v426 = (uint64_t)v424;
            uint64_t v427 = v425;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v426, 1, v425))
            {
              uint64_t v428 = sub_253462A5C(&qword_269CE2140);
              memcpy(v1225, __srcd, *(void *)(*(void *)(v428 - 8) + 64));
              goto LABEL_387;
            }
            uint64_t v1208 = v427;
            uint64_t v509 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__srcd, 1, v509))
            {
              uint64_t v510 = sub_253462A5C(&qword_269CE2200);
              uint64_t v511 = (uint64_t)v1225;
              memcpy(v1225, __srcd, *(void *)(*(void *)(v510 - 8) + 64));
LABEL_386:
              uint64_t v700 = *(int *)(v1208 + 20);
              v1246 = (void *)(v511 + v700);
              __srcq = &__srcd[v700];
              uint64_t v701 = sub_253B07160();
              (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v701 - 8) + 32))(v1246, __srcq, v701);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v511, 0, 1, v1208);
LABEL_387:
              uint64_t v702 = __dstc[7];
              v703 = (_DWORD *)((char *)v20 + v702);
              v704 = (_DWORD *)((char *)v21 + v702);
              v1230 = (int *)type metadata accessor for TranscriptProtoStatementID(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v704, 1, (uint64_t)v1230))
              {
                uint64_t v705 = sub_253462A5C(&qword_26B249528);
                memcpy(v703, v704, *(void *)(*(void *)(v705 - 8) + 64));
              }
              else
              {
                _DWORD *v703 = *v704;
                *(_OWORD *)(v703 + 2) = *(_OWORD *)(v704 + 2);
                uint64_t v706 = v1230[6];
                __srcr = (char *)v703 + v706;
                v707 = (char *)v704 + v706;
                uint64_t v708 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v708 - 8) + 32))(__srcr, v707, v708);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v703, 0, 1, (uint64_t)v1230);
              }
              uint64_t v709 = __dstc[8];
              __srcm = (void *)((char *)v20 + v709);
              v710 = (void *)((char *)v21 + v709);
              uint64_t v711 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v710, 1, v711))
              {
                uint64_t v712 = sub_253462A5C(&qword_269CE2130);
                memcpy(__srcm, v710, *(void *)(*(void *)(v712 - 8) + 64));
LABEL_465:
                uint64_t v500 = __dstc[9];
                goto LABEL_466;
              }
              uint64_t v1213 = v711;
              uint64_t v713 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v710, 1, v713))
              {
                uint64_t v714 = sub_253462A5C(&qword_269CE2150);
                uint64_t v715 = (uint64_t)__srcm;
                memcpy(__srcm, v710, *(void *)(*(void *)(v714 - 8) + 64));
LABEL_464:
                uint64_t v835 = *(int *)(v1213 + 20);
                __srcy = (void *)(v715 + v835);
                v836 = (char *)v710 + v835;
                uint64_t v837 = sub_253B07160();
                (*(void (**)(void *, char *, uint64_t))(*(void *)(v837 - 8) + 32))(__srcy, v836, v837);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v715, 0, 1, v1213);
                goto LABEL_465;
              }
              v1247 = (void *)v179;
              uint64_t v1190 = v713;
              v1199 = v710;
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              if (EnumCaseMultiPayload == 1)
              {
                void *__srcm = *v710;
                uint64_t v721 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                v722 = (char *)__srcm + v721;
                v723 = (char *)v710 + v721;
                uint64_t v724 = sub_253B07160();
                v725 = v722;
                uint64_t v715 = (uint64_t)__srcm;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v724 - 8) + 32))(v725, v723, v724);
                uint64_t v726 = v1190;
              }
              else
              {
                if (EnumCaseMultiPayload)
                {
                  uint64_t v726 = v713;
                  uint64_t v715 = (uint64_t)__srcm;
                  memcpy(__srcm, v710, *(void *)(*(void *)(v1190 - 8) + 64));
LABEL_463:
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v715, 0, 1, v726);
                  uint64_t v179 = (uint64_t)v1247;
                  v710 = v1199;
                  goto LABEL_464;
                }
                *(_OWORD *)__srcm = *(_OWORD *)v710;
                uint64_t v1183 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                uint64_t v717 = *(int *)(v1183 + 20);
                v718 = (_DWORD *)((char *)__srcm + v717);
                v719 = (_DWORD *)((char *)v710 + v717);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1199 + v717, 1, (uint64_t)v1230))
                {
                  uint64_t v720 = sub_253462A5C(&qword_26B249528);
                  memcpy(v718, v719, *(void *)(*(void *)(v720 - 8) + 64));
                }
                else
                {
                  _DWORD *v718 = *v719;
                  *(_OWORD *)(v718 + 2) = *(_OWORD *)(v719 + 2);
                  uint64_t v829 = v1230[6];
                  v1181 = (char *)v718 + v829;
                  v830 = (char *)v719 + v829;
                  uint64_t v831 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v831 - 8) + 32))(v1181, v830, v831);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v718, 0, 1, (uint64_t)v1230);
                }
                uint64_t v832 = *(int *)(v1183 + 24);
                uint64_t v715 = (uint64_t)__srcm;
                v833 = (char *)__srcm + v832;
                v1233 = (char *)v1199 + v832;
                uint64_t v834 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v834 - 8) + 32))(v833, v1233, v834);
                uint64_t v726 = v1190;
              }
              swift_storeEnumTagMultiPayload();
              goto LABEL_463;
            }
            int v572 = swift_getEnumCaseMultiPayload();
            switch(v572)
            {
              case 6:
                uint64_t v697 = sub_253B07160();
                uint64_t v511 = (uint64_t)v1225;
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v697 - 8) + 32))(v1225, __srcd, v697);
                break;
              case 5:
                unsigned char *v1225 = *__srcd;
                uint64_t v698 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                              + 20);
                v1189 = &__srcd[v698];
                v1198 = &v1225[v698];
                uint64_t v699 = sub_253B07160();
                uint64_t v511 = (uint64_t)v1225;
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v699 - 8) + 32))(v1198, v1189, v699);
                break;
              case 1:
                uint64_t v573 = sub_253B08E50();
                uint64_t v511 = (uint64_t)v1225;
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v573 - 8) + 32))(v1225, __srcd, v573);
                break;
              default:
                uint64_t v511 = (uint64_t)v1225;
                memcpy(v1225, __srcd, *(void *)(*(void *)(v509 - 8) + 64));
                goto LABEL_385;
            }
            swift_storeEnumTagMultiPayload();
LABEL_385:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v511, 0, 1, v509);
            goto LABEL_386;
          case 3u:
            uint64_t v429 = sub_253B07160();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v429 - 8) + 32))(v20, v21, v429);
            goto LABEL_467;
          default:
            _OWORD *v20 = *v21;
            uint64_t v355 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
            uint64_t v356 = *(int *)(v355 + 20);
            __src = (int *)v355;
            __dst = (_DWORD *)((char *)v20 + v356);
            v357 = (_DWORD *)((char *)v21 + v356);
            uint64_t v358 = type metadata accessor for TranscriptProtoStatementID(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v357, 1, v358))
            {
              uint64_t v359 = sub_253462A5C(&qword_26B249528);
              memcpy(__dst, v357, *(void *)(*(void *)(v359 - 8) + 64));
            }
            else
            {
              _DWORD *__dst = *v357;
              *(_OWORD *)(__dst + 2) = *(_OWORD *)(v357 + 2);
              uint64_t v497 = *(int *)(v358 + 24);
              v1238 = (char *)__dst + v497;
              v498 = (char *)v357 + v497;
              uint64_t v499 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v499 - 8) + 32))(v1238, v498, v499);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v358);
            }
            uint64_t v500 = __src[6];
LABEL_466:
            v838 = (char *)v20 + v500;
            v839 = (char *)v21 + v500;
            uint64_t v840 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v840 - 8) + 32))(v838, v839, v840);
LABEL_467:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, v179);
            goto LABEL_468;
        }
      case 4u:
        long long v24 = a2[1];
        *a1 = *a2;
        a1[1] = v24;
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
        uint64_t v25 = *(int *)(type metadata accessor for TranscriptProtoPlan(0) + 36);
        v26 = (char *)a1 + v25;
        v27 = (char *)a2 + v25;
        uint64_t v28 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
        goto LABEL_660;
      case 5u:
        *a1 = *a2;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        v29 = (int *)type metadata accessor for TranscriptProtoAction(0);
        uint64_t v30 = v29[7];
        v31 = (_DWORD *)((char *)a1 + v30);
        v32 = (_DWORD *)((char *)a2 + v30);
        uint64_t v33 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v32, 1, v33))
        {
          uint64_t v34 = sub_253462A5C(&qword_26B249528);
          memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          _DWORD *v31 = *v32;
          *(_OWORD *)(v31 + 2) = *(_OWORD *)(v32 + 2);
          uint64_t v181 = *(int *)(v33 + 24);
          v182 = (char *)v31 + v181;
          v183 = (char *)v32 + v181;
          uint64_t v184 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 32))(v182, v183, v184);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v31, 0, 1, v33);
        }
        *(_OWORD *)((char *)a1 + v29[8]) = *(_OWORD *)((char *)a2 + v29[8]);
        *(_OWORD *)((char *)a1 + v29[9]) = *(_OWORD *)((char *)a2 + v29[9]);
        *(_OWORD *)((char *)a1 + v29[10]) = *(_OWORD *)((char *)a2 + v29[10]);
        uint64_t v185 = v29[11];
        v186 = (_OWORD *)((char *)a1 + v185);
        v187 = (_OWORD *)((char *)a2 + v185);
        uint64_t v188 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v187, 1, v188)) {
          goto LABEL_76;
        }
        goto LABEL_126;
      case 6u:
        long long v35 = a2[1];
        *a1 = *a2;
        a1[1] = v35;
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
        uint64_t v36 = type metadata accessor for TranscriptProtoClientAction(0);
        uint64_t v37 = *(int *)(v36 + 40);
        v38 = (_DWORD *)((char *)a1 + v37);
        v39 = (_DWORD *)((char *)a2 + v37);
        uint64_t v40 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v39, 1, v40))
        {
          uint64_t v41 = sub_253462A5C(&qword_26B249528);
          memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          _DWORD *v38 = *v39;
          *(_OWORD *)(v38 + 2) = *(_OWORD *)(v39 + 2);
          uint64_t v190 = *(int *)(v40 + 24);
          v191 = (char *)v38 + v190;
          v192 = (char *)v39 + v190;
          uint64_t v193 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 32))(v191, v192, v193);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v38, 0, 1, v40);
        }
        uint64_t v194 = *(int *)(v36 + 44);
        v195 = (char *)a1 + v194;
        v196 = (char *)a2 + v194;
        uint64_t v197 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 32))(v195, v196, v197);
        goto LABEL_660;
      case 7u:
        *(void *)a1 = *(void *)a2;
        uint64_t Step = type metadata accessor for TranscriptProtoQueryStep(0);
        uint64_t v43 = *(int *)(Step + 20);
        v44 = (_DWORD *)((char *)a1 + v43);
        v45 = (_DWORD *)((char *)a2 + v43);
        uint64_t v46 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v45, 1, v46)) {
          goto LABEL_16;
        }
        goto LABEL_79;
      case 8u:
        *(void *)a1 = *(void *)a2;
        uint64_t Step = type metadata accessor for TranscriptProtoVariableStep(0);
        uint64_t v48 = *(int *)(Step + 20);
        v44 = (_DWORD *)((char *)a1 + v48);
        v45 = (_DWORD *)((char *)a2 + v48);
        uint64_t v46 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v45, 1, v46))
        {
LABEL_16:
          uint64_t v47 = sub_253462A5C(&qword_26B249528);
          memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
LABEL_79:
          _DWORD *v44 = *v45;
          *(_OWORD *)(v44 + 2) = *(_OWORD *)(v45 + 2);
          uint64_t v198 = *(int *)(v46 + 24);
          v199 = (char *)v44 + v198;
          v200 = (char *)v45 + v198;
          uint64_t v201 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v201 - 8) + 32))(v199, v200, v201);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v44, 0, 1, v46);
        }
LABEL_173:
        uint64_t v395 = *(int *)(Step + 24);
        v396 = (char *)a1 + v395;
        v397 = (char *)a2 + v395;
        uint64_t v398 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v398 - 8) + 32))(v396, v397, v398);
        goto LABEL_660;
      case 0xAu:
        uint64_t v49 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v49))
        {
          uint64_t v50 = sub_253462A5C(&qword_269CE1D40);
          memcpy(a1, a2, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v405 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v405))
              {
                uint64_t v406 = sub_253462A5C(&qword_269CE1D58);
                memcpy(a1, a2, *(void *)(*(void *)(v406 - 8) + 64));
              }
              else
              {
                swift_getEnumCaseMultiPayload();
                *a1 = *a2;
                *((void *)a1 + 2) = *((void *)a2 + 2);
                uint64_t v476 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
                v477 = (char *)a1 + v476;
                v478 = (char *)a2 + v476;
                uint64_t v479 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v479 - 8) + 32))(v477, v478, v479);
                swift_storeEnumTagMultiPayload();
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v405);
              }
              uint64_t v480 = type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
              goto LABEL_247;
            case 2u:
              uint64_t v407 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v407))
              {
                uint64_t v408 = sub_253462A5C(&qword_269CE1D88);
                memcpy(a1, a2, *(void *)(*(void *)(v408 - 8) + 64));
              }
              else
              {
                uint64_t v481 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v481))
                {
                  memcpy(a1, a2, *(void *)(*(void *)(v407 - 8) + 64));
                }
                else
                {
                  *a1 = *a2;
                  *((void *)a1 + 2) = *((void *)a2 + 2);
                  uint64_t v514 = *(int *)(v481 + 24);
                  v515 = (char *)a1 + v514;
                  v516 = (char *)a2 + v514;
                  uint64_t v517 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v517 - 8) + 32))(v515, v516, v517);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v481);
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v407);
              }
              uint64_t v480 = type metadata accessor for TranscriptProtoPlannerError(0);
              goto LABEL_247;
            case 3u:
              uint64_t v409 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v409))
              {
                uint64_t v410 = sub_253462A5C(&qword_269CE1D70);
                memcpy(a1, a2, *(void *)(*(void *)(v410 - 8) + 64));
              }
              else
              {
                uint64_t v482 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v482))
                {
                  memcpy(a1, a2, *(void *)(*(void *)(v409 - 8) + 64));
                }
                else
                {
                  *a1 = *a2;
                  *((void *)a1 + 2) = *((void *)a2 + 2);
                  uint64_t v518 = *(int *)(v482 + 24);
                  v519 = (char *)a1 + v518;
                  v520 = (char *)a2 + v518;
                  uint64_t v521 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v521 - 8) + 32))(v519, v520, v521);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v482);
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v409);
              }
              uint64_t v480 = type metadata accessor for TranscriptProtoExecutorError(0);
LABEL_247:
              uint64_t v202 = *(int *)(v480 + 20);
              break;
            default:
              *a1 = *a2;
              *((void *)a1 + 2) = *((void *)a2 + 2);
              uint64_t v202 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
              break;
          }
          v522 = (char *)a1 + v202;
          v523 = (char *)a2 + v202;
          uint64_t v524 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v524 - 8) + 32))(v522, v523, v524);
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v49);
        }
        uint64_t v525 = *(int *)(type metadata accessor for TranscriptProtoSessionError(0) + 20);
        v526 = (char *)a1 + v525;
        v527 = (char *)a2 + v525;
        uint64_t v528 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v528 - 8) + 32))(v526, v527, v528);
        goto LABEL_660;
      case 0xBu:
        uint64_t v51 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v51))
        {
          uint64_t v52 = sub_253462A5C(&qword_269CE1ED8);
          memcpy(a1, a2, *(void *)(*(void *)(v52 - 8) + 64));
        }
        else
        {
          uint64_t v203 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v203))
          {
            uint64_t v204 = sub_253462A5C(&qword_269CE1EF0);
            memcpy(a1, a2, *(void *)(*(void *)(v204 - 8) + 64));
          }
          else
          {
            long long v360 = a2[1];
            *a1 = *a2;
            a1[1] = v360;
            a1[2] = a2[2];
            uint64_t v361 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
            v362 = (char *)a1 + v361;
            v363 = (char *)a2 + v361;
            uint64_t v364 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v364 - 8) + 32))(v362, v363, v364);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v203);
          }
          uint64_t v365 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
          v366 = (char *)a1 + v365;
          v367 = (char *)a2 + v365;
          uint64_t v368 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v368 - 8) + 32))(v366, v367, v368);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v51);
        }
        uint64_t v369 = *(int *)(type metadata accessor for TranscriptProtoRecoverableError(0) + 20);
        v370 = (char *)a1 + v369;
        v371 = (char *)a2 + v369;
        uint64_t v372 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v372 - 8) + 32))(v370, v371, v372);
        goto LABEL_660;
      case 0xCu:
        long long v53 = a2[1];
        *a1 = *a2;
        a1[1] = v53;
        a1[2] = a2[2];
        uint64_t v54 = *(int *)(type metadata accessor for TranscriptProtoClientCustom(0) + 28);
        v55 = (char *)a1 + v54;
        v56 = (char *)a2 + v54;
        uint64_t v57 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
        goto LABEL_660;
      case 0xDu:
        long long v58 = a2[1];
        *a1 = *a2;
        a1[1] = v58;
        v18 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        uint64_t v59 = v18[6];
        v60 = (char *)a1 + v59;
        v61 = (char *)a2 + v59;
        uint64_t v62 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v61, 1, v62))
        {
          uint64_t v63 = sub_253462A5C(&qword_269CE2140);
          memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
          goto LABEL_199;
        }
        uint64_t v205 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v61, 1, v205))
        {
          uint64_t v206 = sub_253462A5C(&qword_269CE2200);
          memcpy(v60, v61, *(void *)(*(void *)(v206 - 8) + 64));
          goto LABEL_198;
        }
        int v373 = swift_getEnumCaseMultiPayload();
        switch(v373)
        {
          case 6:
            uint64_t v430 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v430 - 8) + 32))(v60, v61, v430);
            goto LABEL_195;
          case 5:
            unsigned char *v60 = *v61;
            uint64_t v431 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                          + 20);
            v432 = &v60[v431];
            v433 = &v61[v431];
            uint64_t v434 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v434 - 8) + 32))(v432, v433, v434);
            goto LABEL_195;
          case 1:
            uint64_t v374 = sub_253B08E50();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v374 - 8) + 32))(v60, v61, v374);
LABEL_195:
            swift_storeEnumTagMultiPayload();
            goto LABEL_197;
        }
        memcpy(v60, v61, *(void *)(*(void *)(v205 - 8) + 64));
LABEL_197:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v60, 0, 1, v205);
LABEL_198:
        uint64_t v435 = *(int *)(v62 + 20);
        v436 = &v60[v435];
        v437 = &v61[v435];
        uint64_t v438 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v438 - 8) + 32))(v436, v437, v438);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v60, 0, 1, v62);
LABEL_199:
        uint64_t v439 = v18[7];
        v440 = (_DWORD *)((char *)a1 + v439);
        v441 = (_DWORD *)((char *)a2 + v439);
        uint64_t v442 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v441, 1, v442))
        {
          uint64_t v443 = sub_253462A5C(&qword_26B249528);
          memcpy(v440, v441, *(void *)(*(void *)(v443 - 8) + 64));
        }
        else
        {
          _DWORD *v440 = *v441;
          *(_OWORD *)(v440 + 2) = *(_OWORD *)(v441 + 2);
          uint64_t v444 = *(int *)(v442 + 24);
          v445 = (char *)v440 + v444;
          v446 = (char *)v441 + v444;
          uint64_t v447 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v447 - 8) + 32))(v445, v446, v447);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v440, 0, 1, v442);
        }
        uint64_t v448 = v18[8];
        v449 = (void *)((char *)a1 + v448);
        v450 = (void *)((char *)a2 + v448);
        uint64_t v451 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v450, 1, v451))
        {
          uint64_t v452 = sub_253462A5C(&qword_269CE2130);
          memcpy(v449, v450, *(void *)(*(void *)(v452 - 8) + 64));
LABEL_492:
          uint64_t v877 = v18[9];
          v878 = (char *)a1 + v877;
          v879 = (char *)a2 + v877;
          uint64_t v880 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v880 - 8) + 32))(v878, v879, v880);
LABEL_660:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        uint64_t v453 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v450, 1, v453))
        {
          uint64_t v454 = sub_253462A5C(&qword_269CE2150);
          memcpy(v449, v450, *(void *)(*(void *)(v454 - 8) + 64));
LABEL_232:
          uint64_t v493 = *(int *)(v451 + 20);
          v494 = (char *)v449 + v493;
          v495 = (char *)v450 + v493;
          uint64_t v496 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v496 - 8) + 32))(v494, v495, v496);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v449, 0, 1, v451);
          goto LABEL_492;
        }
        int v455 = swift_getEnumCaseMultiPayload();
        if (v455 == 1)
        {
          void *v449 = *v450;
          uint64_t v460 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          v461 = (char *)v449 + v460;
          v462 = (char *)v450 + v460;
          uint64_t v463 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v463 - 8) + 32))(v461, v462, v463);
        }
        else
        {
          if (v455)
          {
            memcpy(v449, v450, *(void *)(*(void *)(v453 - 8) + 64));
LABEL_231:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v449, 0, 1, v453);
            goto LABEL_232;
          }
          *(_OWORD *)v449 = *(_OWORD *)v450;
          uint64_t v456 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          uint64_t v457 = *(int *)(v456 + 20);
          __dstd = (int *)v456;
          v1319 = (_DWORD *)((char *)v449 + v457);
          v458 = (_DWORD *)((char *)v450 + v457);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v450 + v457, 1, v442))
          {
            uint64_t v459 = sub_253462A5C(&qword_26B249528);
            memcpy(v1319, v458, *(void *)(*(void *)(v459 - 8) + 64));
          }
          else
          {
            _DWORD *v1319 = *v458;
            *(_OWORD *)(v1319 + 2) = *(_OWORD *)(v458 + 2);
            uint64_t v486 = *(int *)(v442 + 24);
            __srcp = (char *)v1319 + v486;
            v487 = (char *)v458 + v486;
            uint64_t v488 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v488 - 8) + 32))(__srcp, v487, v488);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1319, 0, 1, v442);
          }
          uint64_t v489 = __dstd[6];
          v490 = (char *)v449 + v489;
          v491 = (char *)v450 + v489;
          uint64_t v492 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v492 - 8) + 32))(v490, v491, v492);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_231;
      case 0xEu:
      case 0x10u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
      case 0x29u:
        uint64_t v78 = sub_253B07160();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v78 - 8) + 32))(a1, a2, v78);
        goto LABEL_660;
      case 0xFu:
        *(void *)a1 = *(void *)a2;
        *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
        StepResults = (int *)type metadata accessor for TranscriptProtoQueryStepResults(0);
        uint64_t v65 = StepResults[6];
        v66 = (_DWORD *)((char *)a1 + v65);
        v67 = (_DWORD *)((char *)a2 + v65);
        uint64_t v68 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v67, 1, v68)) {
          goto LABEL_143;
        }
        goto LABEL_87;
      case 0x11u:
        *a1 = *a2;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        *(_WORD *)((char *)a1 + 25) = *(_WORD *)((char *)a2 + 25);
        v29 = (int *)type metadata accessor for TranscriptProtoActionResolverRequest(0);
        uint64_t v69 = v29[9];
        v70 = (void *)((char *)a1 + v69);
        v71 = (void *)((char *)a2 + v69);
        uint64_t v72 = type metadata accessor for TranscriptProtoParameterSet(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v71, 1, v72))
        {
          uint64_t v73 = sub_253462A5C(&qword_26B2495B8);
          memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
        }
        else
        {
          void *v70 = *v71;
          uint64_t v211 = *(int *)(v72 + 20);
          v212 = (char *)v70 + v211;
          v213 = (char *)v71 + v211;
          uint64_t v214 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 32))(v212, v213, v214);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v70, 0, 1, v72);
        }
        uint64_t v215 = v29[10];
        v216 = (_DWORD *)((char *)a1 + v215);
        v217 = (_DWORD *)((char *)a2 + v215);
        uint64_t v218 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v217, 1, v218))
        {
          uint64_t v219 = sub_253462A5C(&qword_26B249528);
          memcpy(v216, v217, *(void *)(*(void *)(v219 - 8) + 64));
        }
        else
        {
          _DWORD *v216 = *v217;
          *(_OWORD *)(v216 + 2) = *(_OWORD *)(v217 + 2);
          uint64_t v307 = *(int *)(v218 + 24);
          v308 = (char *)v216 + v307;
          v309 = (char *)v217 + v307;
          uint64_t v310 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v310 - 8) + 32))(v308, v309, v310);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v216, 0, 1, v218);
        }
        uint64_t v311 = v29[11];
        v186 = (_OWORD *)((char *)a1 + v311);
        v187 = (_OWORD *)((char *)a2 + v311);
        uint64_t v188 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v187, 1, v188))
        {
LABEL_76:
          uint64_t v189 = sub_253462A5C(&qword_269CE0448);
          memcpy(v186, v187, *(void *)(*(void *)(v189 - 8) + 64));
        }
        else
        {
LABEL_126:
          long long v298 = v187[1];
          _OWORD *v186 = *v187;
          v186[1] = v298;
          uint64_t v299 = *(int *)(v188 + 24);
          v300 = (char *)v186 + v299;
          v301 = (char *)v187 + v299;
          uint64_t v302 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v302 - 8) + 32))(v300, v301, v302);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v186, 0, 1, v188);
        }
        uint64_t v303 = v29[12];
        v304 = (char *)a1 + v303;
        v305 = (char *)a2 + v303;
        uint64_t v306 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v306 - 8) + 32))(v304, v305, v306);
        goto LABEL_660;
      case 0x12u:
        *a1 = *a2;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        uint64_t v74 = *(int *)(type metadata accessor for TranscriptProtoClientInitiatedClientAction(0) + 24);
        v75 = (char *)a1 + v74;
        v76 = (char *)a2 + v74;
        uint64_t v77 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 32))(v75, v76, v77);
        goto LABEL_660;
      case 0x16u:
        *a1 = *a2;
        uint64_t v79 = *(int *)(type metadata accessor for TranscriptProtoSafetyModeException(0) + 20);
        v80 = (char *)a1 + v79;
        v81 = (char *)a2 + v79;
        uint64_t v82 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v80, v81, v82);
        goto LABEL_660;
      case 0x17u:
        *(void *)a1 = *(void *)a2;
        uint64_t v83 = *(int *)(type metadata accessor for TranscriptProtoResponseGenerationRequest(0) + 20);
        v84 = (char *)a1 + v83;
        v85 = (char *)a2 + v83;
        uint64_t v86 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 32))(v84, v85, v86);
        goto LABEL_660;
      case 0x18u:
        *(void *)a1 = *(void *)a2;
        uint64_t v87 = *(int *)(type metadata accessor for TranscriptProtoEntitySpanMatchResult(0) + 20);
        v88 = (char *)a1 + v87;
        v89 = (char *)a2 + v87;
        uint64_t v90 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 32))(v88, v89, v90);
        goto LABEL_660;
      case 0x19u:
        *a1 = *a2;
        uint64_t v91 = *(int *)(type metadata accessor for TranscriptProtoContextRetrieved(0) + 24);
        v92 = (char *)a1 + v91;
        v93 = (char *)a2 + v91;
        uint64_t v94 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 32))(v92, v93, v94);
        goto LABEL_660;
      case 0x1Au:
        uint64_t v95 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v95))
        {
          uint64_t v96 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v96 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
          uint64_t v220 = *(int *)(v95 + 24);
          v221 = (char *)a1 + v220;
          v222 = (char *)a2 + v220;
          uint64_t v223 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v223 - 8) + 32))(v221, v222, v223);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v95);
        }
        uint64_t v224 = type metadata accessor for TranscriptProtoActionCancellation(0);
        uint64_t v225 = *(int *)(v224 + 20);
        v226 = (_DWORD *)((char *)a1 + v225);
        v227 = (_DWORD *)((char *)a2 + v225);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v225, 1, v95))
        {
          uint64_t v228 = sub_253462A5C(&qword_26B249528);
          memcpy(v226, v227, *(void *)(*(void *)(v228 - 8) + 64));
        }
        else
        {
          _DWORD *v226 = *v227;
          *(_OWORD *)(v226 + 2) = *(_OWORD *)(v227 + 2);
          uint64_t v312 = *(int *)(v95 + 24);
          v313 = (char *)v226 + v312;
          v314 = (char *)v227 + v312;
          uint64_t v315 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v315 - 8) + 32))(v313, v314, v315);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v226, 0, 1, v95);
        }
        uint64_t v316 = *(int *)(v224 + 24);
        v317 = (char *)a1 + v316;
        v318 = (char *)a2 + v316;
        uint64_t v319 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v319 - 8) + 32))(v317, v318, v319);
        goto LABEL_660;
      case 0x1Bu:
        long long v97 = a2[1];
        *a1 = *a2;
        a1[1] = v97;
        *((_DWORD *)a1 + 8) = *((_DWORD *)a2 + 8);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        uint64_t v98 = *(int *)(type metadata accessor for TranscriptProtoToolRetrievalResponse(0) + 36);
        v99 = (char *)a1 + v98;
        v100 = (char *)a2 + v98;
        uint64_t v101 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v99, v100, v101);
        goto LABEL_660;
      case 0x1Cu:
        *a1 = *a2;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        v102 = (int *)type metadata accessor for TranscriptProtoSystemResponse(0);
        uint64_t v103 = v102[7];
        v104 = (void *)((char *)a1 + v103);
        v105 = (void *)((char *)a2 + v103);
        uint64_t v106 = type metadata accessor for TranscriptProtoStatementOutcome(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v105, 1, v106))
        {
          uint64_t v107 = sub_253462A5C(&qword_269CE0388);
          memcpy(v104, v105, *(void *)(*(void *)(v107 - 8) + 64));
LABEL_549:
          uint64_t v970 = v102[8];
          v971 = (void *)((char *)a1 + v970);
          v972 = (void *)((char *)a2 + v970);
          v973 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v972, 1, (uint64_t)v973))
          {
            uint64_t v974 = sub_253462A5C(&qword_269CE24C8);
            memcpy(v971, v972, *(void *)(*(void *)(v974 - 8) + 64));
          }
          else
          {
            v1326 = v102;
            void *v971 = *v972;
            *((unsigned char *)v971 + 8) = *((unsigned char *)v972 + 8);
            v971[2] = v972[2];
            uint64_t v975 = v973[7];
            v976 = (_OWORD *)((char *)v971 + v975);
            v977 = (_OWORD *)((char *)v972 + v975);
            uint64_t v978 = type metadata accessor for TranscriptProtoDialogType(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v977, 1, v978))
            {
              uint64_t v979 = sub_253462A5C(&qword_269CE2010);
              memcpy(v976, v977, *(void *)(*(void *)(v979 - 8) + 64));
            }
            else
            {
              uint64_t v980 = type metadata accessor for TranscriptProtoDialogFormat(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v977, 1, v980))
              {
                uint64_t v981 = sub_253462A5C(&qword_269CE2050);
                memcpy(v976, v977, *(void *)(*(void *)(v981 - 8) + 64));
              }
              else
              {
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 1u:
                    _OWORD *v976 = *v977;
                    uint64_t v983 = type metadata accessor for TranscriptProtoSonicText(0);
                    goto LABEL_561;
                  case 2u:
                    _OWORD *v976 = *v977;
                    uint64_t v983 = type metadata accessor for TranscriptProtoGeneratedText(0);
                    goto LABEL_561;
                  case 3u:
                  case 4u:
                    uint64_t v982 = sub_253B07160();
                    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v982 - 8) + 32))(v976, v977, v982);
                    goto LABEL_562;
                  case 5u:
                    _OWORD *v976 = *v977;
                    uint64_t v983 = type metadata accessor for TranscriptProtoCATDialog(0);
                    goto LABEL_561;
                  default:
                    _OWORD *v976 = *v977;
                    uint64_t v983 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_561:
                    uint64_t v984 = *(int *)(v983 + 20);
                    __srcbd = (void *)v980;
                    v985 = (char *)v976 + v984;
                    v1254 = (char *)v977 + v984;
                    uint64_t v986 = sub_253B07160();
                    v987 = v985;
                    uint64_t v980 = (uint64_t)__srcbd;
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v986 - 8) + 32))(v987, v1254, v986);
LABEL_562:
                    swift_storeEnumTagMultiPayload();
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v976, 0, 1, v980);
                    break;
                }
              }
              uint64_t v988 = *(int *)(v978 + 20);
              v989 = (char *)v976 + v988;
              v990 = (char *)v977 + v988;
              uint64_t v991 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v991 - 8) + 32))(v989, v990, v991);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v976, 0, 1, v978);
            }
            uint64_t v992 = v973[8];
            v993 = (_OWORD *)((char *)v971 + v992);
            v994 = (_OWORD *)((char *)v972 + v992);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v972 + v992, 1, v978))
            {
              uint64_t v995 = sub_253462A5C(&qword_269CE2010);
              memcpy(v993, v994, *(void *)(*(void *)(v995 - 8) + 64));
            }
            else
            {
              uint64_t v996 = type metadata accessor for TranscriptProtoDialogFormat(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v994, 1, v996))
              {
                uint64_t v997 = sub_253462A5C(&qword_269CE2050);
                memcpy(v993, v994, *(void *)(*(void *)(v997 - 8) + 64));
              }
              else
              {
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 1u:
                    _OWORD *v993 = *v994;
                    uint64_t v999 = type metadata accessor for TranscriptProtoSonicText(0);
                    goto LABEL_574;
                  case 2u:
                    _OWORD *v993 = *v994;
                    uint64_t v999 = type metadata accessor for TranscriptProtoGeneratedText(0);
                    goto LABEL_574;
                  case 3u:
                  case 4u:
                    uint64_t v998 = sub_253B07160();
                    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v998 - 8) + 32))(v993, v994, v998);
                    goto LABEL_575;
                  case 5u:
                    _OWORD *v993 = *v994;
                    uint64_t v999 = type metadata accessor for TranscriptProtoCATDialog(0);
                    goto LABEL_574;
                  default:
                    _OWORD *v993 = *v994;
                    uint64_t v999 = type metadata accessor for TranscriptProtoStaticText(0);
LABEL_574:
                    uint64_t v1000 = *(int *)(v999 + 20);
                    __srcbe = (void *)v996;
                    v1001 = (char *)v993 + v1000;
                    v1255 = (char *)v994 + v1000;
                    uint64_t v1002 = sub_253B07160();
                    v1003 = v1001;
                    uint64_t v996 = (uint64_t)__srcbe;
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v1002 - 8) + 32))(v1003, v1255, v1002);
LABEL_575:
                    swift_storeEnumTagMultiPayload();
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v993, 0, 1, v996);
                    break;
                }
              }
              uint64_t v1004 = *(int *)(v978 + 20);
              v1005 = (char *)v993 + v1004;
              v1006 = (char *)v994 + v1004;
              uint64_t v1007 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1007 - 8) + 32))(v1005, v1006, v1007);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v993, 0, 1, v978);
            }
            uint64_t v1008 = v973[9];
            v1009 = (char *)v971 + v1008;
            v1010 = (char *)v972 + v1008;
            uint64_t v1011 = type metadata accessor for TranscriptProtoVisualOutputOptions(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1010, 1, v1011))
            {
              uint64_t v1012 = sub_253462A5C(&qword_269CE2000);
              memcpy(v1009, v1010, *(void *)(*(void *)(v1012 - 8) + 64));
            }
            else
            {
              unsigned char *v1009 = *v1010;
              uint64_t v1013 = *(int *)(v1011 + 20);
              v1014 = &v1009[v1013];
              v1015 = &v1010[v1013];
              uint64_t v1016 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v1016 - 8) + 32))(v1014, v1015, v1016);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1009, 0, 1, v1011);
            }
            uint64_t v1017 = v973[10];
            v1018 = (_OWORD *)((char *)v971 + v1017);
            v1019 = (_OWORD *)((char *)v972 + v1017);
            uint64_t v1020 = type metadata accessor for TranscriptProtoVisualOutput(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1019, 1, v1020))
            {
              uint64_t v1021 = sub_253462A5C(&qword_269CE1FF0);
              memcpy(v1018, v1019, *(void *)(*(void *)(v1021 - 8) + 64));
            }
            else
            {
              uint64_t v1022 = type metadata accessor for TranscriptProtoVisualOutputType(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1019, 1, v1022))
              {
                uint64_t v1023 = sub_253462A5C(&qword_269CDCC18);
                memcpy(v1018, v1019, *(void *)(*(void *)(v1023 - 8) + 64));
              }
              else
              {
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 1u:
                    _OWORD *v1018 = *v1019;
                    uint64_t v1024 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
                    goto LABEL_588;
                  case 2u:
                    _OWORD *v1018 = *v1019;
                    uint64_t v1024 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
                    goto LABEL_588;
                  case 3u:
                    long long v1026 = v1019[1];
                    _OWORD *v1018 = *v1019;
                    v1018[1] = v1026;
                    uint64_t v1025 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
                    goto LABEL_590;
                  default:
                    _OWORD *v1018 = *v1019;
                    uint64_t v1024 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
LABEL_588:
                    uint64_t v1025 = *(int *)(v1024 + 20);
LABEL_590:
                    v1256 = (char *)v1019 + v1025;
                    __srcbf = (char *)v1018 + v1025;
                    uint64_t v1027 = sub_253B07160();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v1027 - 8) + 32))(__srcbf, v1256, v1027);
                    swift_storeEnumTagMultiPayload();
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1018, 0, 1, v1022);
                    break;
                }
              }
              uint64_t v1028 = *(int *)(v1020 + 20);
              v1029 = (char *)v1018 + v1028;
              v1030 = (char *)v1019 + v1028;
              uint64_t v1031 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1031 - 8) + 32))(v1029, v1030, v1031);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1018, 0, 1, v1020);
            }
            *(_OWORD *)((char *)v971 + v973[11]) = *(_OWORD *)((char *)v972 + v973[11]);
            uint64_t v1032 = v973[12];
            v1033 = (char *)v971 + v1032;
            v1034 = (char *)v972 + v1032;
            uint64_t v1035 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1035 - 8) + 32))(v1033, v1034, v1035);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v971, 0, 1, (uint64_t)v973);
            v102 = v1326;
          }
          uint64_t v1036 = v102[9];
          v1037 = (_DWORD *)((char *)a1 + v1036);
          v1038 = (_DWORD *)((char *)a2 + v1036);
          uint64_t v1039 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1038, 1, v1039))
          {
            uint64_t v1040 = sub_253462A5C(&qword_26B249528);
            memcpy(v1037, v1038, *(void *)(*(void *)(v1040 - 8) + 64));
          }
          else
          {
            _DWORD *v1037 = *v1038;
            *(_OWORD *)(v1037 + 2) = *(_OWORD *)(v1038 + 2);
            uint64_t v1041 = *(int *)(v1039 + 24);
            v1042 = (char *)v1037 + v1041;
            v1043 = (char *)v1038 + v1041;
            uint64_t v1044 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1044 - 8) + 32))(v1042, v1043, v1044);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1037, 0, 1, v1039);
          }
          *(_OWORD *)((char *)a1 + v102[10]) = *(_OWORD *)((char *)a2 + v102[10]);
          uint64_t v1045 = v102[11];
          v1046 = (char *)a1 + v1045;
          v1047 = (char *)a2 + v1045;
          uint64_t v1048 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1048 - 8) + 32))(v1046, v1047, v1048);
          goto LABEL_660;
        }
        uint64_t v229 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v105, 1, v229))
        {
          uint64_t v230 = sub_253462A5C(&qword_269CE04B0);
          memcpy(v104, v105, *(void *)(*(void *)(v230 - 8) + 64));
LABEL_548:
          uint64_t v966 = *(int *)(v106 + 20);
          v967 = (char *)v104 + v966;
          v968 = (char *)v105 + v966;
          uint64_t v969 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v969 - 8) + 32))(v967, v968, v969);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v104, 0, 1, v106);
          goto LABEL_549;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            v1317 = v102;
            void *v104 = *v105;
            uint64_t v529 = type metadata accessor for TranscriptProtoActionConfirmation(0);
            uint64_t v530 = *(int *)(v529 + 20);
            __srce = (char *)v104 + v530;
            v531 = (char *)v105 + v530;
            v1239 = (int *)type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v531, 1, (uint64_t)v1239))
            {
              uint64_t v532 = sub_253462A5C(&qword_269CE0480);
              memcpy(__srce, v531, *(void *)(*(void *)(v532 - 8) + 64));
            }
            else
            {
              uint64_t v1209 = v529;
              v1196 = (void *)type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
              v1227 = v531;
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v531, 1, (uint64_t)v1196))
              {
                uint64_t v618 = sub_253462A5C(&qword_269CE0478);
                v619 = __srce;
                memcpy(__srce, v531, *(void *)(*(void *)(v618 - 8) + 64));
              }
              else
              {
                *(_OWORD *)__srce = *(_OWORD *)v531;
                __srce[16] = v531[16];
                uint64_t v1187 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
                uint64_t v671 = *(int *)(v1187 + 24);
                v672 = &__srce[v671];
                v673 = &v531[v671];
                uint64_t v674 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v673, 1, v674))
                {
                  uint64_t v675 = sub_253462A5C(&qword_269CE0470);
                  memcpy(v672, v673, *(void *)(*(void *)(v675 - 8) + 64));
                }
                else
                {
                  unsigned char *v672 = *v673;
                  uint64_t v776 = *(int *)(v674 + 20);
                  v1185 = &v672[v776];
                  v777 = &v673[v776];
                  uint64_t v778 = sub_253B07160();
                  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v778 - 8) + 32))(v1185, v777, v778);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v672, 0, 1, v674);
                }
                uint64_t v779 = *(int *)(v1187 + 28);
                v780 = &__srce[v779];
                v781 = &v1227[v779];
                uint64_t v782 = sub_253B07160();
                v783 = v781;
                v619 = __srce;
                (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v782 - 8) + 32))(v780, v783, v782);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__srce, 0, 1, (uint64_t)v1196);
              }
              uint64_t v784 = v1239[5];
              uint64_t v785 = (uint64_t)v619;
              v786 = &v619[v784];
              __srcs = &v1227[v784];
              uint64_t v787 = sub_253B07160();
              (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v787 - 8) + 32))(v786, __srcs, v787);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v785, 0, 1, (uint64_t)v1239);
              uint64_t v529 = v1209;
            }
            uint64_t v571 = *(int *)(v529 + 24);
            goto LABEL_546;
          case 2u:
            *(_OWORD *)v104 = *(_OWORD *)v105;
            uint64_t v533 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
            goto LABEL_439;
          case 3u:
            v1317 = v102;
            *(_OWORD *)v104 = *(_OWORD *)v105;
            v104[2] = v105[2];
            *((unsigned char *)v104 + 24) = *((unsigned char *)v105 + 24);
            uint64_t v534 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
            goto LABEL_256;
          case 4u:
            *(_OWORD *)v104 = *(_OWORD *)v105;
            uint64_t v535 = v105[3];
            v104[2] = v105[2];
            v104[3] = v535;
            *((unsigned char *)v104 + 32) = *((unsigned char *)v105 + 32);
            uint64_t v536 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
            goto LABEL_440;
          case 5u:
            v1317 = v102;
            *(_OWORD *)v104 = *(_OWORD *)v105;
            *((unsigned char *)v104 + 16) = *((unsigned char *)v105 + 16);
            uint64_t v534 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_256:
            uint64_t v537 = v534;
            uint64_t v538 = *(int *)(v534 + 24);
            __srcf = (char *)v104 + v538;
            v539 = (char *)v105 + v538;
            uint64_t v540 = sub_253B08E50();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v539, 1, v540))
            {
              uint64_t v541 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(__srcf, v539, *(void *)(*(void *)(v541 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v540 - 8) + 32))(__srcf, v539, v540);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__srcf, 0, 1, v540);
            }
            uint64_t v571 = *(int *)(v537 + 28);
            goto LABEL_546;
          case 6u:
            v1317 = v102;
            *(_OWORD *)v104 = *(_OWORD *)v105;
            uint64_t v542 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
            uint64_t v543 = *(int *)(v542 + 20);
            __srcg = (char *)v104 + v543;
            v544 = (char *)v105 + v543;
            uint64_t v545 = sub_253B08E50();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v544, 1, v545))
            {
              uint64_t v546 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(__srcg, v544, *(void *)(*(void *)(v546 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v545 - 8) + 32))(__srcg, v544, v545);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__srcg, 0, 1, v545);
            }
            uint64_t v571 = *(int *)(v542 + 24);
            goto LABEL_546;
          case 7u:
            v1317 = v102;
            uint64_t v547 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v105, 1, v547))
            {
              uint64_t v548 = sub_253462A5C(&qword_269CE0498);
              memcpy(v104, v105, *(void *)(*(void *)(v548 - 8) + 64));
              goto LABEL_545;
            }
            int v620 = swift_getEnumCaseMultiPayload();
            if (v620 != 2)
            {
              if (v620 == 1)
              {
                *(unsigned char *)v104 = *(unsigned char *)v105;
                uint64_t v762 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
                v763 = (char *)v104 + v762;
                v764 = (char *)v105 + v762;
                uint64_t v765 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v765 - 8) + 32))(v763, v764, v765);
              }
              else
              {
                if (v620)
                {
                  memcpy(v104, v105, *(void *)(*(void *)(v547 - 8) + 64));
                  goto LABEL_544;
                }
                *(unsigned char *)v104 = *(unsigned char *)v105;
                uint64_t v621 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
                v622 = (char *)v104 + v621;
                v623 = (char *)v105 + v621;
                uint64_t v624 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v624 - 8) + 32))(v622, v623, v624);
              }
LABEL_543:
              swift_storeEnumTagMultiPayload();
LABEL_544:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v104, 0, 1, v547);
LABEL_545:
              uint64_t v571 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
LABEL_546:
              v963 = (char *)v104 + v571;
              v964 = (char *)v105 + v571;
              uint64_t v965 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v965 - 8) + 32))(v963, v964, v965);
              v102 = v1317;
LABEL_547:
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v104, 0, 1, v229);
              goto LABEL_548;
            }
            uint64_t v760 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v105, 1, v760))
            {
              uint64_t v761 = sub_253462A5C(&qword_269CE0490);
              memcpy(v104, v105, *(void *)(*(void *)(v761 - 8) + 64));
LABEL_542:
              uint64_t v959 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
              v960 = (char *)v104 + v959;
              v961 = (char *)v105 + v959;
              uint64_t v962 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v962 - 8) + 32))(v960, v961, v962);
              goto LABEL_543;
            }
            int v907 = swift_getEnumCaseMultiPayload();
            if (v907 == 1)
            {
              uint64_t v949 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v105, 1, v949))
              {
                uint64_t v950 = sub_253462A5C(&qword_269CE0488);
                memcpy(v104, v105, *(void *)(*(void *)(v950 - 8) + 64));
              }
              else
              {
                *(unsigned char *)v104 = *(unsigned char *)v105;
                uint64_t v954 = *(int *)(v949 + 20);
                v1253 = (char *)v105 + v954;
                __srcbb = (char *)v104 + v954;
                uint64_t v955 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v955 - 8) + 32))(__srcbb, v1253, v955);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v104, 0, 1, v949);
              }
              uint64_t v956 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
              __srcbc = (char *)v104 + v956;
              v957 = (char *)v105 + v956;
              uint64_t v958 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v958 - 8) + 32))(__srcbc, v957, v958);
            }
            else
            {
              if (v907)
              {
                memcpy(v104, v105, *(void *)(*(void *)(v760 - 8) + 64));
LABEL_541:
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v104, 0, 1, v760);
                goto LABEL_542;
              }
              *(_OWORD *)v104 = *(_OWORD *)v105;
              uint64_t v908 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
              __srcz = (char *)v104 + v908;
              v909 = (char *)v105 + v908;
              uint64_t v910 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v910 - 8) + 32))(__srcz, v909, v910);
            }
            swift_storeEnumTagMultiPayload();
            goto LABEL_541;
          case 8u:
            void *v104 = *v105;
            *(_OWORD *)(v104 + 1) = *(_OWORD *)(v105 + 1);
            uint64_t v536 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
            goto LABEL_440;
          case 9u:
            uint64_t v549 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v105, 1, v549))
            {
              uint64_t v550 = sub_253462A5C(&qword_269CE04A8);
              memcpy(v104, v105, *(void *)(*(void *)(v550 - 8) + 64));
            }
            else
            {
              v1321 = v102;
              uint64_t v625 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v105, 1, v625))
              {
                uint64_t v626 = sub_253462A5C(&qword_269CE04A0);
                memcpy(v104, v105, *(void *)(*(void *)(v626 - 8) + 64));
              }
              else
              {
                uint64_t v676 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v105, 16, v676))
                {
                  memcpy(v104, v105, *(void *)(*(void *)(v625 - 8) + 64));
                }
                else
                {
                  long long v788 = *((_OWORD *)v105 + 1);
                  *(_OWORD *)v104 = *(_OWORD *)v105;
                  *((_OWORD *)v104 + 1) = v788;
                  v104[4] = v105[4];
                  uint64_t v789 = *(int *)(v676 + 28);
                  v1249 = (char *)v105 + v789;
                  __srct = (char *)v104 + v789;
                  uint64_t v790 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v790 - 8) + 32))(__srct, v1249, v790);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v104, 0, 16, v676);
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v104, 0, 1, v625);
              }
              uint64_t v791 = *(int *)(v549 + 20);
              v792 = (char *)v104 + v791;
              v793 = (char *)v105 + v791;
              uint64_t v794 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v794 - 8) + 32))(v792, v793, v794);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v104, 0, 1, v549);
              v102 = v1321;
            }
            uint64_t v533 = type metadata accessor for TranscriptProtoActionFailure(0);
            goto LABEL_439;
          case 0xAu:
            void *v104 = *v105;
            uint64_t v533 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
LABEL_439:
            uint64_t v536 = *(int *)(v533 + 20);
LABEL_440:
            v795 = (char *)v104 + v536;
            v796 = (char *)v105 + v536;
            uint64_t v797 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v797 - 8) + 32))(v795, v796, v797);
            goto LABEL_547;
          default:
            v1317 = v102;
            *(unsigned char *)v104 = *(unsigned char *)v105;
            *(_WORD *)((char *)v104 + 1) = *(_WORD *)((char *)v105 + 1);
            __srca = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
            uint64_t v375 = __srca[7];
            v376 = (char *)v104 + v375;
            v377 = (char *)v105 + v375;
            uint64_t v378 = sub_253B08E50();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v377, 1, v378))
            {
              uint64_t v379 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v376, v377, *(void *)(*(void *)(v379 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v378 - 8) + 32))(v376, v377, v378);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v376, 0, 1, v378);
            }
            uint64_t v576 = __srca[8];
            v577 = (_OWORD *)((char *)v104 + v576);
            v578 = (_OWORD *)((char *)v105 + v576);
            uint64_t v579 = type metadata accessor for TranscriptProtoUndoContext(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v578, 1, v579))
            {
              uint64_t v580 = sub_253462A5C(&qword_269CE0450);
              memcpy(v577, v578, *(void *)(*(void *)(v580 - 8) + 64));
            }
            else
            {
              long long v636 = v578[1];
              _OWORD *v577 = *v578;
              v577[1] = v636;
              v577[2] = v578[2];
              uint64_t v637 = *(int *)(v579 + 28);
              v1242 = (char *)v577 + v637;
              v638 = (char *)v578 + v637;
              uint64_t v639 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v639 - 8) + 32))(v1242, v638, v639);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v577, 0, 1, v579);
            }
            uint64_t v640 = __srca[9];
            v641 = (_OWORD *)((char *)v104 + v640);
            v642 = (_OWORD *)((char *)v105 + v640);
            v1243 = (int *)type metadata accessor for TranscriptProtoFollowUpAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v642, 1, (uint64_t)v1243))
            {
              uint64_t v643 = sub_253462A5C(&qword_269CE0468);
              memcpy(v641, v642, *(void *)(*(void *)(v643 - 8) + 64));
            }
            else
            {
              uint64_t v652 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
              v1228 = v641;
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v642, 1, v652))
              {
                uint64_t v653 = sub_253462A5C(&qword_269CE0460);
                memcpy(v641, v642, *(void *)(*(void *)(v653 - 8) + 64));
              }
              else
              {
                uint64_t v1212 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v642, 1, v1212))
                {
                  uint64_t v683 = sub_253462A5C(&qword_269CE0458);
                  memcpy(v641, v642, *(void *)(*(void *)(v683 - 8) + 64));
                }
                else
                {
                  long long v813 = v642[1];
                  _OWORD *v641 = *v642;
                  v641[1] = v813;
                  *((void *)v641 + 4) = *((void *)v642 + 4);
                  uint64_t v814 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                                + 28);
                  v1192 = (char *)v642 + v814;
                  v1202 = (char *)v641 + v814;
                  uint64_t v815 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v815 - 8) + 32))(v1202, v1192, v815);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v641, 0, 1, v1212);
                }
                uint64_t v816 = *(int *)(v652 + 20);
                v1203 = (char *)v642 + v816;
                v1214 = (char *)v641 + v816;
                uint64_t v817 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v817 - 8) + 32))(v1214, v1203, v817);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v641, 0, 1, v652);
              }
              uint64_t v818 = v1243[5];
              v1215 = (char *)v641 + v818;
              v819 = (char *)v642 + v818;
              uint64_t v820 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v820 - 8) + 32))(v1215, v819, v820);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1228, 0, 1, (uint64_t)v1243);
            }
            *(_OWORD *)((char *)v104 + __srca[10]) = *(_OWORD *)((char *)v105 + __srca[10]);
            uint64_t v571 = __srca[11];
            goto LABEL_546;
        }
      case 0x1Du:
        long long v108 = a2[1];
        *a1 = *a2;
        a1[1] = v108;
        v109 = (int *)type metadata accessor for TranscriptProtoStatementResult(0);
        uint64_t v110 = v109[6];
        v111 = (void *)((char *)a1 + v110);
        v112 = (void *)((char *)a2 + v110);
        uint64_t v113 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v112, 1, v113))
        {
          uint64_t v114 = sub_253462A5C(&qword_269CE1C80);
          memcpy(v111, v112, *(void *)(*(void *)(v114 - 8) + 64));
LABEL_647:
          uint64_t v1141 = v109[7];
          v1142 = (_DWORD *)((char *)a1 + v1141);
          v1143 = (_DWORD *)((char *)a2 + v1141);
          uint64_t v1144 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1143, 1, v1144))
          {
            uint64_t v1145 = sub_253462A5C(&qword_26B249528);
            memcpy(v1142, v1143, *(void *)(*(void *)(v1145 - 8) + 64));
          }
          else
          {
            _DWORD *v1142 = *v1143;
            *(_OWORD *)(v1142 + 2) = *(_OWORD *)(v1143 + 2);
            uint64_t v1146 = *(int *)(v1144 + 24);
            v1147 = (char *)v1142 + v1146;
            v1148 = (char *)v1143 + v1146;
            uint64_t v1149 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v1147, v1148, v1149);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1142, 0, 1, v1144);
          }
          uint64_t v1150 = v109[8];
          v1151 = (_DWORD *)((char *)a1 + v1150);
          v1152 = (_DWORD *)((char *)a2 + v1150);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v1150, 1, v1144))
          {
            uint64_t v1153 = sub_253462A5C(&qword_26B249528);
            memcpy(v1151, v1152, *(void *)(*(void *)(v1153 - 8) + 64));
          }
          else
          {
            _DWORD *v1151 = *v1152;
            *(_OWORD *)(v1151 + 2) = *(_OWORD *)(v1152 + 2);
            uint64_t v1154 = *(int *)(v1144 + 24);
            v1155 = (char *)v1151 + v1154;
            v1156 = (char *)v1152 + v1154;
            uint64_t v1157 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1157 - 8) + 32))(v1155, v1156, v1157);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1151, 0, 1, v1144);
          }
          uint64_t v1158 = v109[9];
          v1159 = (_DWORD *)((char *)a1 + v1158);
          v1160 = (_DWORD *)((char *)a2 + v1158);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v1158, 1, v1144))
          {
            uint64_t v1161 = sub_253462A5C(&qword_26B249528);
            memcpy(v1159, v1160, *(void *)(*(void *)(v1161 - 8) + 64));
          }
          else
          {
            _DWORD *v1159 = *v1160;
            *(_OWORD *)(v1159 + 2) = *(_OWORD *)(v1160 + 2);
            uint64_t v1162 = *(int *)(v1144 + 24);
            v1163 = (char *)v1159 + v1162;
            v1164 = (char *)v1160 + v1162;
            uint64_t v1165 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1165 - 8) + 32))(v1163, v1164, v1165);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1159, 0, 1, v1144);
          }
          uint64_t v1166 = v109[10];
          v1167 = (_OWORD *)((char *)a1 + v1166);
          v1168 = (_OWORD *)((char *)a2 + v1166);
          uint64_t v1169 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1168, 1, v1169))
          {
            uint64_t v1170 = sub_253462A5C(&qword_269CE0448);
            memcpy(v1167, v1168, *(void *)(*(void *)(v1170 - 8) + 64));
          }
          else
          {
            long long v1171 = v1168[1];
            _OWORD *v1167 = *v1168;
            v1167[1] = v1171;
            uint64_t v1172 = *(int *)(v1169 + 24);
            v1173 = (char *)v1167 + v1172;
            v1174 = (char *)v1168 + v1172;
            uint64_t v1175 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1175 - 8) + 32))(v1173, v1174, v1175);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1167, 0, 1, v1169);
          }
          uint64_t v1176 = v109[11];
          v1177 = (char *)a1 + v1176;
          v1178 = (char *)a2 + v1176;
          uint64_t v1179 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1179 - 8) + 32))(v1177, v1178, v1179);
          goto LABEL_660;
        }
        uint64_t v231 = type metadata accessor for TranscriptProtoStatementOutcome(0);
        v1316 = v109;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v112, 1, v231))
        {
          uint64_t v232 = sub_253462A5C(&qword_269CE0388);
          memcpy(v111, v112, *(void *)(*(void *)(v232 - 8) + 64));
LABEL_622:
          uint64_t v1083 = *(int *)(v113 + 20);
          v1084 = (void *)((char *)v111 + v1083);
          v1085 = (void *)((char *)v112 + v1083);
          v1086 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1085, 1, (uint64_t)v1086))
          {
            uint64_t v1087 = sub_253462A5C(&qword_269CE0378);
            memcpy(v1084, v1085, *(void *)(*(void *)(v1087 - 8) + 64));
          }
          else
          {
            __srco = (void *)v113;
            __dstk = v112;
            v1260 = v111;
            void *v1084 = *v1085;
            uint64_t v1088 = v1086[5];
            v1089 = (_OWORD *)((char *)v1084 + v1088);
            v1090 = (_OWORD *)((char *)v1085 + v1088);
            uint64_t v1091 = type metadata accessor for TranscriptProtoResponseDialog(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1090, 1, v1091))
            {
              uint64_t v1092 = sub_253462A5C(&qword_269CE04B8);
              memcpy(v1089, v1090, *(void *)(*(void *)(v1092 - 8) + 64));
            }
            else
            {
              long long v1093 = v1090[1];
              _OWORD *v1089 = *v1090;
              v1089[1] = v1093;
              long long v1094 = v1090[3];
              v1089[2] = v1090[2];
              v1089[3] = v1094;
              uint64_t v1095 = *(int *)(v1091 + 32);
              v1096 = (char *)v1089 + v1095;
              v1097 = (char *)v1090 + v1095;
              uint64_t v1098 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1098 - 8) + 32))(v1096, v1097, v1098);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1089, 0, 1, v1091);
            }
            uint64_t v1099 = v1086[6];
            v1100 = (_OWORD *)((char *)v1084 + v1099);
            v1101 = (_OWORD *)((char *)v1085 + v1099);
            uint64_t v1102 = type metadata accessor for TranscriptProtoResponseVisual(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1101, 1, v1102))
            {
              uint64_t v1103 = sub_253462A5C(&qword_269CE04C8);
              memcpy(v1100, v1101, *(void *)(*(void *)(v1103 - 8) + 64));
            }
            else
            {
              _OWORD *v1100 = *v1101;
              uint64_t v1104 = *(int *)(v1102 + 24);
              v1235 = (char *)v1100 + v1104;
              v1105 = (char *)v1101 + v1104;
              uint64_t v1223 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1105, 1, v1223))
              {
                uint64_t v1106 = sub_253462A5C(&qword_269CE04C0);
                memcpy(v1235, v1105, *(void *)(*(void *)(v1106 - 8) + 64));
              }
              else
              {
                unsigned char *v1235 = *v1105;
                uint64_t v1107 = *(int *)(v1223 + 20);
                v1207 = &v1235[v1107];
                v1108 = &v1105[v1107];
                uint64_t v1109 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v1109 - 8) + 32))(v1207, v1108, v1109);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1235, 0, 1, v1223);
              }
              uint64_t v1110 = *(int *)(v1102 + 28);
              v1111 = (char *)v1100 + v1110;
              v1112 = (char *)v1101 + v1110;
              uint64_t v1113 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1113 - 8) + 32))(v1111, v1112, v1113);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1100, 0, 1, v1102);
            }
            *(_OWORD *)((char *)v1084 + v1086[7]) = *(_OWORD *)((char *)v1085 + v1086[7]);
            *(_OWORD *)((char *)v1084 + v1086[8]) = *(_OWORD *)((char *)v1085 + v1086[8]);
            *((unsigned char *)v1084 + v1086[9]) = *((unsigned char *)v1085 + v1086[9]);
            *((unsigned char *)v1084 + v1086[10]) = *((unsigned char *)v1085 + v1086[10]);
            uint64_t v1114 = v1086[11];
            v1115 = (char *)v1084 + v1114;
            v1116 = (_OWORD *)((char *)v1085 + v1114);
            uint64_t v1117 = type metadata accessor for TranscriptProtoUIType(0);
            uint64_t v113 = (uint64_t)__srco;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1116, 1, v1117))
            {
              uint64_t v1118 = sub_253462A5C(&qword_269CE04D0);
              memcpy(v1115, v1116, *(void *)(*(void *)(v1118 - 8) + 64));
            }
            else
            {
              v1236 = v1115;
              uint64_t v1119 = type metadata accessor for TranscriptProtoUitype(0);
              uint64_t v1224 = v1117;
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1116, 1, v1119))
              {
                uint64_t v1120 = sub_253462A5C(&qword_269CDCC08);
                memcpy(v1236, v1116, *(void *)(*(void *)(v1120 - 8) + 64));
              }
              else
              {
                uint64_t v1195 = v1119;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 1u:
                    v1121 = v1116;
                    _OWORD *v1236 = *v1116;
                    uint64_t v1124 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
                    goto LABEL_642;
                  case 2u:
                    v1121 = v1116;
                    long long v1125 = v1116[1];
                    _OWORD *v1236 = *v1116;
                    v1236[1] = v1125;
                    uint64_t v1123 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
                    break;
                  case 3u:
                    v1121 = v1116;
                    _OWORD *v1236 = *v1116;
                    uint64_t v1124 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_642:
                    uint64_t v1123 = *(int *)(v1124 + 20);
                    break;
                  default:
                    v1121 = v1116;
                    long long v1122 = v1116[1];
                    _OWORD *v1236 = *v1116;
                    v1236[1] = v1122;
                    v1236[2] = v1116[2];
                    uint64_t v1123 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
                    break;
                }
                v1126 = (char *)v1236 + v1123;
                v1127 = (char *)v1121 + v1123;
                uint64_t v1128 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1128 - 8) + 32))(v1126, v1127, v1128);
                swift_storeEnumTagMultiPayload();
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1236, 0, 1, v1195);
                uint64_t v113 = (uint64_t)__srco;
                uint64_t v1117 = v1224;
              }
              uint64_t v1129 = *(int *)(v1117 + 20);
              v1130 = (char *)v1236 + v1129;
              v1131 = (char *)v1116 + v1129;
              uint64_t v1132 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1132 - 8) + 32))(v1130, v1131, v1132);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1236, 0, 1, v1224);
            }
            uint64_t v1133 = v1086[12];
            v1134 = (char *)v1084 + v1133;
            v1135 = (char *)v1085 + v1133;
            uint64_t v1136 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1136 - 8) + 32))(v1134, v1135, v1136);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1084, 0, 1, (uint64_t)v1086);
            v111 = v1260;
            v112 = __dstk;
          }
          uint64_t v1137 = *(int *)(v113 + 24);
          v1138 = (char *)v111 + v1137;
          v1139 = (char *)v112 + v1137;
          uint64_t v1140 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1140 - 8) + 32))(v1138, v1139, v1140);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v111, 0, 1, v113);
          v109 = v1316;
          goto LABEL_647;
        }
        uint64_t v380 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v112, 1, v380))
        {
          uint64_t v381 = sub_253462A5C(&qword_269CE04B0);
          memcpy(v111, v112, *(void *)(*(void *)(v381 - 8) + 64));
LABEL_621:
          uint64_t v1077 = *(int *)(v231 + 20);
          v1078 = (char *)v111 + v1077;
          v1079 = v112;
          v1080 = (char *)v112 + v1077;
          uint64_t v1081 = sub_253B07160();
          v1082 = v1080;
          v112 = v1079;
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1081 - 8) + 32))(v1078, v1082, v1081);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v111, 0, 1, v231);
          goto LABEL_622;
        }
        __dstb = v112;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            __srcc = (void *)v113;
            void *v111 = *v112;
            v1241 = (int *)type metadata accessor for TranscriptProtoActionConfirmation(0);
            uint64_t v585 = v1241[5];
            v586 = v111;
            v587 = (char *)v111 + v585;
            v588 = (char *)v112 + v585;
            uint64_t v589 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v588, 1, v589))
            {
              uint64_t v590 = sub_253462A5C(&qword_269CE0480);
              memcpy(v587, v588, *(void *)(*(void *)(v590 - 8) + 64));
            }
            else
            {
              uint64_t v1211 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v588, 1, v1211))
              {
                uint64_t v662 = sub_253462A5C(&qword_269CE0478);
                memcpy(v587, v588, *(void *)(*(void *)(v662 - 8) + 64));
              }
              else
              {
                *(_OWORD *)v587 = *(_OWORD *)v588;
                v587[16] = v588[16];
                uint64_t v772 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
                uint64_t v773 = *(int *)(v772 + 24);
                uint64_t v1191 = v772;
                v1200 = &v587[v773];
                v774 = &v588[v773];
                uint64_t v1184 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v774, 1, v1184))
                {
                  uint64_t v775 = sub_253462A5C(&qword_269CE0470);
                  memcpy(v1200, v774, *(void *)(*(void *)(v775 - 8) + 64));
                }
                else
                {
                  unsigned char *v1200 = *v774;
                  uint64_t v925 = *(int *)(v1184 + 20);
                  v1182 = &v1200[v925];
                  v926 = &v774[v925];
                  uint64_t v927 = sub_253B07160();
                  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v927 - 8) + 32))(v1182, v926, v927);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1200, 0, 1, v1184);
                }
                uint64_t v928 = *(int *)(v1191 + 28);
                v929 = &v587[v928];
                v1204 = &v588[v928];
                uint64_t v930 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v930 - 8) + 32))(v929, v1204, v930);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v587, 0, 1, v1211);
              }
              uint64_t v931 = *(int *)(v589 + 20);
              v932 = &v587[v931];
              v933 = &v588[v931];
              uint64_t v934 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v934 - 8) + 32))(v932, v933, v934);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v587, 0, 1, v589);
            }
            uint64_t v656 = v1241[6];
            v111 = v586;
            v663 = (char *)v586 + v656;
            goto LABEL_617;
          case 2u:
            *(_OWORD *)v111 = *(_OWORD *)v112;
            uint64_t v591 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
            goto LABEL_316;
          case 3u:
            __srcc = (void *)v113;
            *(_OWORD *)v111 = *(_OWORD *)v112;
            v111[2] = v112[2];
            *((unsigned char *)v111 + 24) = *((unsigned char *)v112 + 24);
            uint64_t v592 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
            goto LABEL_306;
          case 4u:
            *(_OWORD *)v111 = *(_OWORD *)v112;
            uint64_t v593 = v112[3];
            v111[2] = v112[2];
            v111[3] = v593;
            *((unsigned char *)v111 + 32) = *((unsigned char *)v112 + 32);
            uint64_t v594 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
            goto LABEL_317;
          case 5u:
            __srcc = (void *)v113;
            *(_OWORD *)v111 = *(_OWORD *)v112;
            *((unsigned char *)v111 + 16) = *((unsigned char *)v112 + 16);
            uint64_t v592 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_306:
            v595 = v112;
            uint64_t v596 = v592;
            uint64_t v597 = *(int *)(v592 + 24);
            v598 = v111;
            v599 = (char *)v111 + v597;
            v600 = (char *)v595 + v597;
            uint64_t v601 = sub_253B08E50();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v600, 1, v601))
            {
              uint64_t v602 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v599, v600, *(void *)(*(void *)(v602 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v601 - 8) + 32))(v599, v600, v601);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v599, 0, 1, v601);
            }
            uint64_t v656 = *(int *)(v596 + 28);
            goto LABEL_357;
          case 6u:
            __srcc = (void *)v113;
            *(_OWORD *)v111 = *(_OWORD *)v112;
            uint64_t v603 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
            v604 = v112;
            uint64_t v605 = v603;
            uint64_t v606 = *(int *)(v603 + 20);
            v598 = v111;
            v607 = (char *)v111 + v606;
            v608 = (char *)v604 + v606;
            uint64_t v609 = sub_253B08E50();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v608, 1, v609))
            {
              uint64_t v610 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v607, v608, *(void *)(*(void *)(v610 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v609 - 8) + 32))(v607, v608, v609);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v607, 0, 1, v609);
            }
            uint64_t v656 = *(int *)(v605 + 24);
LABEL_357:
            v111 = v598;
            v663 = (char *)v598 + v656;
            goto LABEL_617;
          case 7u:
            __srcc = (void *)v113;
            uint64_t v611 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v112, 1, v611))
            {
              uint64_t v612 = sub_253462A5C(&qword_269CE0498);
              memcpy(v111, v112, *(void *)(*(void *)(v612 - 8) + 64));
              goto LABEL_616;
            }
            int v664 = swift_getEnumCaseMultiPayload();
            if (v664 != 2)
            {
              if (v664 == 1)
              {
                *(unsigned char *)v111 = *(unsigned char *)v112;
                uint64_t v903 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
                v904 = (char *)v111 + v903;
                v905 = (char *)v112 + v903;
                uint64_t v906 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v906 - 8) + 32))(v904, v905, v906);
              }
              else
              {
                if (v664)
                {
                  memcpy(v111, v112, *(void *)(*(void *)(v611 - 8) + 64));
                  goto LABEL_615;
                }
                *(unsigned char *)v111 = *(unsigned char *)v112;
                uint64_t v665 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
                v666 = (char *)v111 + v665;
                v667 = (char *)v112 + v665;
                uint64_t v668 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v668 - 8) + 32))(v666, v667, v668);
              }
LABEL_614:
              swift_storeEnumTagMultiPayload();
LABEL_615:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v111, 0, 1, v611);
LABEL_616:
              uint64_t v656 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
              v663 = (char *)v111 + v656;
LABEL_617:
              v944 = __dstb;
LABEL_618:
              v924 = &v944[v656];
LABEL_619:
              uint64_t v1076 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1076 - 8) + 32))(v663, v924, v1076);
              uint64_t v113 = (uint64_t)__srcc;
LABEL_620:
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v111, 0, 1, v380);
              v112 = __dstb;
              goto LABEL_621;
            }
            uint64_t v901 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__dstb, 1, v901))
            {
              uint64_t v902 = sub_253462A5C(&qword_269CE0490);
              memcpy(v111, __dstb, *(void *)(*(void *)(v902 - 8) + 64));
LABEL_613:
              uint64_t v1072 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
              v1073 = (char *)v111 + v1072;
              v1074 = &__dstb[v1072];
              uint64_t v1075 = sub_253B07160();
              (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v1075 - 8) + 32))(v1073, v1074, v1075);
              goto LABEL_614;
            }
            int v945 = swift_getEnumCaseMultiPayload();
            if (v945 == 1)
            {
              uint64_t v952 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__dstb, 1, v952))
              {
                uint64_t v953 = sub_253462A5C(&qword_269CE0488);
                memcpy(v111, __dstb, *(void *)(*(void *)(v953 - 8) + 64));
              }
              else
              {
                *(unsigned char *)v111 = *__dstb;
                uint64_t v1067 = *(int *)(v952 + 20);
                v1258 = (char *)v111 + v1067;
                v1222 = &__dstb[v1067];
                uint64_t v1068 = sub_253B07160();
                (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v1068 - 8) + 32))(v1258, v1222, v1068);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v111, 0, 1, v952);
              }
              uint64_t v1069 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
              v1070 = (char *)v111 + v1069;
              v1259 = &__dstb[v1069];
              uint64_t v1071 = sub_253B07160();
              (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v1071 - 8) + 32))(v1070, v1259, v1071);
            }
            else
            {
              if (v945)
              {
                memcpy(v111, __dstb, *(void *)(*(void *)(v901 - 8) + 64));
LABEL_612:
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v111, 0, 1, v901);
                goto LABEL_613;
              }
              *(_OWORD *)v111 = *(_OWORD *)__dstb;
              uint64_t v946 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
              v1252 = (char *)v111 + v946;
              v947 = &__dstb[v946];
              uint64_t v948 = sub_253B07160();
              (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v948 - 8) + 32))(v1252, v947, v948);
            }
            swift_storeEnumTagMultiPayload();
            goto LABEL_612;
          case 8u:
            void *v111 = *v112;
            *(_OWORD *)(v111 + 1) = *(_OWORD *)(v112 + 1);
            uint64_t v594 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
            goto LABEL_317;
          case 9u:
            __srcc = (void *)v113;
            uint64_t v613 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v112, 1, v613))
            {
              uint64_t v614 = sub_253462A5C(&qword_269CE04A8);
              memcpy(v111, v112, *(void *)(*(void *)(v614 - 8) + 64));
            }
            else
            {
              uint64_t v669 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v112, 1, v669))
              {
                uint64_t v670 = sub_253462A5C(&qword_269CE04A0);
                memcpy(v111, v112, *(void *)(*(void *)(v670 - 8) + 64));
              }
              else
              {
                uint64_t v771 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__dstb, 16, v771))
                {
                  memcpy(v111, __dstb, *(void *)(*(void *)(v669 - 8) + 64));
                }
                else
                {
                  long long v914 = *((_OWORD *)__dstb + 1);
                  *(_OWORD *)v111 = *(_OWORD *)__dstb;
                  *((_OWORD *)v111 + 1) = v914;
                  v111[4] = *((void *)__dstb + 4);
                  uint64_t v915 = *(int *)(v771 + 28);
                  v1251 = (char *)v111 + v915;
                  v1220 = &__dstb[v915];
                  uint64_t v916 = sub_253B07160();
                  (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v916 - 8) + 32))(v1251, v1220, v916);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v111, 0, 16, v771);
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v111, 0, 1, v669);
              }
              uint64_t v917 = *(int *)(v613 + 20);
              uint64_t v918 = (uint64_t)v111;
              v919 = (char *)v111 + v917;
              v112 = __dstb;
              v920 = &__dstb[v917];
              uint64_t v921 = sub_253B07160();
              v922 = v920;
              v111 = (void *)v918;
              (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v921 - 8) + 32))(v919, v922, v921);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v918, 0, 1, v613);
            }
            uint64_t v923 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
            v663 = (char *)v111 + v923;
            v924 = (char *)v112 + v923;
            goto LABEL_619;
          case 0xAu:
            void *v111 = *v112;
            uint64_t v591 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
LABEL_316:
            uint64_t v594 = *(int *)(v591 + 20);
LABEL_317:
            v615 = (char *)v111 + v594;
            v616 = (char *)v112 + v594;
            uint64_t v617 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v617 - 8) + 32))(v615, v616, v617);
            goto LABEL_620;
          default:
            __srcc = (void *)v113;
            *(unsigned char *)v111 = *(unsigned char *)v112;
            *(_WORD *)((char *)v111 + 1) = *(_WORD *)((char *)v112 + 1);
            v411 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
            uint64_t v412 = v411[7];
            v1237 = v111;
            v413 = v112;
            v414 = (char *)v111 + v412;
            v415 = (char *)v413 + v412;
            uint64_t v416 = sub_253B08E50();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v415, 1, v416))
            {
              uint64_t v417 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v414, v415, *(void *)(*(void *)(v417 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v416 - 8) + 32))(v414, v415, v416);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v414, 0, 1, v416);
            }
            uint64_t v657 = v411[8];
            v658 = (_OWORD *)((char *)v1237 + v657);
            v659 = &__dstb[v657];
            uint64_t v660 = type metadata accessor for TranscriptProtoUndoContext(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v659, 1, v660))
            {
              uint64_t v661 = sub_253462A5C(&qword_269CE0450);
              memcpy(v658, v659, *(void *)(*(void *)(v661 - 8) + 64));
            }
            else
            {
              long long v685 = v659[1];
              _OWORD *v658 = *v659;
              v658[1] = v685;
              v658[2] = v659[2];
              uint64_t v686 = *(int *)(v660 + 28);
              v687 = (char *)v658 + v686;
              v688 = (char *)v659 + v686;
              uint64_t v689 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v689 - 8) + 32))(v687, v688, v689);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v658, 0, 1, v660);
            }
            uint64_t v690 = v411[9];
            v691 = (_OWORD *)((char *)v1237 + v690);
            v692 = &__dstb[v690];
            uint64_t v693 = type metadata accessor for TranscriptProtoFollowUpAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v692, 1, v693))
            {
              uint64_t v694 = sub_253462A5C(&qword_269CE0468);
              memcpy(v691, v692, *(void *)(*(void *)(v694 - 8) + 64));
            }
            else
            {
              uint64_t v695 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v692, 1, v695))
              {
                uint64_t v696 = sub_253462A5C(&qword_269CE0460);
                memcpy(v691, v692, *(void *)(*(void *)(v696 - 8) + 64));
              }
              else
              {
                uint64_t v1218 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v692, 1, v1218))
                {
                  uint64_t v828 = sub_253462A5C(&qword_269CE0458);
                  memcpy(v691, v692, *(void *)(*(void *)(v828 - 8) + 64));
                }
                else
                {
                  long long v935 = v692[1];
                  _OWORD *v691 = *v692;
                  v691[1] = v935;
                  *((void *)v691 + 4) = *((void *)v692 + 4);
                  uint64_t v936 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                                + 28);
                  v1194 = (char *)v692 + v936;
                  v1205 = (char *)v691 + v936;
                  uint64_t v937 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v937 - 8) + 32))(v1205, v1194, v937);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v691, 0, 1, v1218);
                }
                uint64_t v938 = *(int *)(v695 + 20);
                v1206 = (char *)v692 + v938;
                v1221 = (char *)v691 + v938;
                uint64_t v939 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v939 - 8) + 32))(v1221, v1206, v939);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v691, 0, 1, v695);
              }
              uint64_t v940 = *(int *)(v693 + 20);
              v941 = (char *)v691 + v940;
              v942 = (char *)v692 + v940;
              uint64_t v943 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v943 - 8) + 32))(v941, v942, v943);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v691, 0, 1, v693);
            }
            v944 = __dstb;
            v111 = v1237;
            *(_OWORD *)((char *)v1237 + v411[10]) = *(_OWORD *)&__dstb[v411[10]];
            uint64_t v656 = v411[11];
            v663 = (char *)v1237 + v656;
            goto LABEL_618;
        }
      case 0x1Eu:
        long long v115 = a2[1];
        *a1 = *a2;
        a1[1] = v115;
        StepResults = (int *)type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
        uint64_t v116 = StepResults[6];
        v117 = (void *)((char *)a1 + v116);
        v118 = (void *)((char *)a2 + v116);
        uint64_t v119 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v118, 1, v119)) {
          goto LABEL_502;
        }
        goto LABEL_98;
      case 0x1Fu:
        *(void *)a1 = *(void *)a2;
        *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
        StepResults = (int *)type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
        uint64_t v120 = StepResults[6];
        v117 = (void *)((char *)a1 + v120);
        v118 = (void *)((char *)a2 + v120);
        uint64_t v119 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v118, 1, v119)) {
          goto LABEL_502;
        }
        goto LABEL_98;
      case 0x20u:
        uint64_t v121 = type metadata accessor for TranscriptProtoRequestContent(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v121))
        {
          uint64_t v122 = sub_253462A5C(&qword_269CE1AF0);
          memcpy(a1, a2, *(void *)(*(void *)(v122 - 8) + 64));
          goto LABEL_501;
        }
        uint64_t v237 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v237))
        {
          uint64_t v238 = sub_253462A5C(&qword_269CE1B00);
          memcpy(a1, a2, *(void *)(*(void *)(v238 - 8) + 64));
          goto LABEL_500;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *(void *)a1 = *(void *)a2;
            uint64_t v464 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
            v465 = (char *)a1 + v464;
            v466 = (char *)a2 + v464;
            uint64_t v467 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v467 - 8) + 32))(v465, v466, v467);
            goto LABEL_499;
          case 2u:
            long long v468 = a2[1];
            *a1 = *a2;
            a1[1] = v468;
            v469 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
            uint64_t v470 = v469[6];
            v471 = (char *)a1 + v470;
            v472 = (char *)a2 + v470;
            uint64_t v473 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v472, 1, v473))
            {
              uint64_t v474 = sub_253462A5C(&qword_269CE2140);
              memcpy(v471, v472, *(void *)(*(void *)(v474 - 8) + 64));
              goto LABEL_406;
            }
            uint64_t v512 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v472, 1, v512))
            {
              uint64_t v513 = sub_253462A5C(&qword_269CE2200);
              memcpy(v471, v472, *(void *)(*(void *)(v513 - 8) + 64));
LABEL_405:
              uint64_t v730 = *(int *)(v473 + 20);
              v731 = &v471[v730];
              v732 = &v472[v730];
              uint64_t v733 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v733 - 8) + 32))(v731, v732, v733);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v471, 0, 1, v473);
LABEL_406:
              uint64_t v734 = v469[7];
              v735 = (_DWORD *)((char *)a1 + v734);
              v736 = (_DWORD *)((char *)a2 + v734);
              uint64_t v737 = type metadata accessor for TranscriptProtoStatementID(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v736, 1, v737))
              {
                uint64_t v738 = sub_253462A5C(&qword_26B249528);
                memcpy(v735, v736, *(void *)(*(void *)(v738 - 8) + 64));
              }
              else
              {
                _DWORD *v735 = *v736;
                *(_OWORD *)(v735 + 2) = *(_OWORD *)(v736 + 2);
                uint64_t v739 = *(int *)(v737 + 24);
                v740 = (char *)v735 + v739;
                v741 = (char *)v736 + v739;
                uint64_t v742 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v742 - 8) + 32))(v740, v741, v742);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v735, 0, 1, v737);
              }
              uint64_t v743 = v469[8];
              v744 = (void *)((char *)a1 + v743);
              v745 = (void *)((char *)a2 + v743);
              uint64_t v746 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v745, 1, v746))
              {
                uint64_t v747 = sub_253462A5C(&qword_269CE2130);
                memcpy(v744, v745, *(void *)(*(void *)(v747 - 8) + 64));
                goto LABEL_498;
              }
              v1323 = v469;
              uint64_t v748 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v745, 1, v748))
              {
                uint64_t v749 = sub_253462A5C(&qword_269CE2150);
                memcpy(v744, v745, *(void *)(*(void *)(v749 - 8) + 64));
LABEL_497:
                uint64_t v887 = *(int *)(v746 + 20);
                v888 = (char *)v744 + v887;
                v889 = (char *)v745 + v887;
                uint64_t v890 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v890 - 8) + 32))(v888, v889, v890);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v744, 0, 1, v746);
                v469 = v1323;
LABEL_498:
                uint64_t v891 = v469[9];
                v892 = (char *)a1 + v891;
                v893 = (char *)a2 + v891;
                uint64_t v894 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v894 - 8) + 32))(v892, v893, v894);
LABEL_499:
                swift_storeEnumTagMultiPayload();
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v237);
LABEL_500:
                uint64_t v895 = *(int *)(v121 + 20);
                v896 = (char *)a1 + v895;
                v897 = (char *)a2 + v895;
                uint64_t v898 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v898 - 8) + 32))(v896, v897, v898);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v121);
LABEL_501:
                StepResults = (int *)type metadata accessor for TranscriptProtoExternalAgentRequest(0);
                *(_OWORD *)((char *)a1 + StepResults[5]) = *(_OWORD *)((char *)a2 + StepResults[5]);
                uint64_t v899 = StepResults[6];
                v117 = (void *)((char *)a1 + v899);
                v118 = (void *)((char *)a2 + v899);
                uint64_t v119 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v118, 1, v119))
                {
LABEL_502:
                  uint64_t v900 = sub_253462A5C(&qword_269CE1AD0);
                  memcpy(v117, v118, *(void *)(*(void *)(v900 - 8) + 64));
                }
                else
                {
LABEL_98:
                  *(_OWORD *)v117 = *(_OWORD *)v118;
                  v117[2] = v118[2];
                  uint64_t v233 = *(int *)(v119 + 24);
                  v234 = (char *)v117 + v233;
                  v235 = (char *)v118 + v233;
                  uint64_t v236 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v236 - 8) + 32))(v234, v235, v236);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v117, 0, 1, v119);
                }
                goto LABEL_608;
              }
              __dsti = (void *)v748;
              int v750 = swift_getEnumCaseMultiPayload();
              if (v750 == 1)
              {
                void *v744 = *v745;
                uint64_t v755 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                v756 = (char *)v744 + v755;
                v757 = (char *)v745 + v755;
                uint64_t v758 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v758 - 8) + 32))(v756, v757, v758);
                uint64_t v759 = (uint64_t)__dsti;
              }
              else
              {
                if (v750)
                {
                  uint64_t v759 = v748;
                  memcpy(v744, v745, *(void *)(*(void *)(v748 - 8) + 64));
LABEL_496:
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v744, 0, 1, v759);
                  goto LABEL_497;
                }
                *(_OWORD *)v744 = *(_OWORD *)v745;
                uint64_t v751 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                uint64_t v752 = *(int *)(v751 + 20);
                v1248 = (_DWORD *)((char *)v744 + v752);
                __srcn = (int *)v751;
                v753 = (_DWORD *)((char *)v745 + v752);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v745 + v752, 1, v737))
                {
                  uint64_t v754 = sub_253462A5C(&qword_26B249528);
                  memcpy(v1248, v753, *(void *)(*(void *)(v754 - 8) + 64));
                }
                else
                {
                  _DWORD *v1248 = *v753;
                  *(_OWORD *)(v1248 + 2) = *(_OWORD *)(v753 + 2);
                  uint64_t v881 = *(int *)(v737 + 24);
                  v1219 = (char *)v753 + v881;
                  v1234 = (char *)v1248 + v881;
                  uint64_t v882 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v882 - 8) + 32))(v1234, v1219, v882);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1248, 0, 1, v737);
                }
                uint64_t v883 = __srcn[6];
                v884 = (char *)v744 + v883;
                v885 = (char *)v745 + v883;
                uint64_t v886 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v886 - 8) + 32))(v884, v885, v886);
                uint64_t v759 = (uint64_t)__dsti;
              }
              swift_storeEnumTagMultiPayload();
              goto LABEL_496;
            }
            int v574 = swift_getEnumCaseMultiPayload();
            switch(v574)
            {
              case 6:
                uint64_t v727 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v727 - 8) + 32))(v471, v472, v727);
                break;
              case 5:
                unsigned char *v471 = *v472;
                uint64_t v728 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                              + 20);
                __dstm = &v472[v728];
                v1322 = &v471[v728];
                uint64_t v729 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v729 - 8) + 32))(v1322, __dstm, v729);
                break;
              case 1:
                uint64_t v575 = sub_253B08E50();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v575 - 8) + 32))(v471, v472, v575);
                break;
              default:
                memcpy(v471, v472, *(void *)(*(void *)(v512 - 8) + 64));
                goto LABEL_404;
            }
            swift_storeEnumTagMultiPayload();
LABEL_404:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v471, 0, 1, v512);
            goto LABEL_405;
          case 3u:
            uint64_t v475 = sub_253B07160();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v475 - 8) + 32))(a1, a2, v475);
            goto LABEL_499;
          default:
            *a1 = *a2;
            uint64_t v382 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
            uint64_t v383 = *(int *)(v382 + 20);
            v384 = (_DWORD *)((char *)a1 + v383);
            v385 = (_DWORD *)((char *)a2 + v383);
            uint64_t v386 = type metadata accessor for TranscriptProtoStatementID(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v385, 1, v386))
            {
              uint64_t v387 = sub_253462A5C(&qword_26B249528);
              memcpy(v384, v385, *(void *)(*(void *)(v387 - 8) + 64));
            }
            else
            {
              _DWORD *v384 = *v385;
              *(_OWORD *)(v384 + 2) = *(_OWORD *)(v385 + 2);
              uint64_t v501 = *(int *)(v386 + 24);
              v502 = (char *)v384 + v501;
              v503 = (char *)v385 + v501;
              uint64_t v504 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v504 - 8) + 32))(v502, v503, v504);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v384, 0, 1, v386);
            }
            uint64_t v505 = *(int *)(v382 + 24);
            v506 = (char *)a1 + v505;
            v507 = (char *)a2 + v505;
            uint64_t v508 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v508 - 8) + 32))(v506, v507, v508);
            goto LABEL_499;
        }
      case 0x21u:
        *(void *)a1 = *(void *)a2;
        StepResults = (int *)type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
        uint64_t v123 = StepResults[5];
        v124 = (_DWORD *)((char *)a1 + v123);
        v125 = (_DWORD *)((char *)a2 + v123);
        uint64_t v126 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v125, 1, v126))
        {
          uint64_t v127 = sub_253462A5C(&qword_26B249528);
          memcpy(v124, v125, *(void *)(*(void *)(v127 - 8) + 64));
        }
        else
        {
          _DWORD *v124 = *v125;
          *(_OWORD *)(v124 + 2) = *(_OWORD *)(v125 + 2);
          uint64_t v239 = *(int *)(v126 + 24);
          v240 = (char *)v124 + v239;
          v241 = (char *)v125 + v239;
          uint64_t v242 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v242 - 8) + 32))(v240, v241, v242);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v124, 0, 1, v126);
        }
        uint64_t v243 = StepResults[6];
        v244 = (void *)((char *)a1 + v243);
        v245 = (void *)((char *)a2 + v243);
        uint64_t DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoStatementOutcome(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v245, 1, DecorationPrePlannerResultPayload))
        {
          uint64_t v247 = sub_253462A5C(&qword_269CE0388);
          memcpy(v244, v245, *(void *)(*(void *)(v247 - 8) + 64));
LABEL_608:
          uint64_t v1063 = StepResults[7];
          v1064 = (char *)a1 + v1063;
          v1065 = (char *)a2 + v1063;
          uint64_t v1066 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1066 - 8) + 32))(v1064, v1065, v1066);
          goto LABEL_660;
        }
        uint64_t v320 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v245, 1, v320))
        {
          uint64_t v321 = sub_253462A5C(&qword_269CE04B0);
          memcpy(v244, v245, *(void *)(*(void *)(v321 - 8) + 64));
LABEL_607:
          uint64_t v1059 = *(int *)(DecorationPrePlannerResultPayload + 20);
          v1060 = (char *)v244 + v1059;
          v1061 = (char *)v245 + v1059;
          uint64_t v1062 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1062 - 8) + 32))(v1060, v1061, v1062);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v244, 0, 1, DecorationPrePlannerResultPayload);
          goto LABEL_608;
        }
        break;
      case 0x22u:
        *a1 = *a2;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        uint64_t v128 = *(int *)(type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0) + 24);
        v129 = (char *)a1 + v128;
        v130 = (char *)a2 + v128;
        uint64_t v131 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 32))(v129, v130, v131);
        goto LABEL_660;
      case 0x23u:
        uint64_t v132 = sub_253B08F30();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v132))
        {
          uint64_t v133 = sub_253462A5C(&qword_269CDFA70);
          memcpy(a1, a2, *(void *)(*(void *)(v133 - 8) + 64));
        }
        else
        {
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v132 - 8) + 32))(a1, a2, v132);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v132);
        }
        StepResults = (int *)type metadata accessor for TranscriptProtoToolResolution(0);
        uint64_t v248 = StepResults[5];
        v249 = (_DWORD *)((char *)a1 + v248);
        v250 = (_DWORD *)((char *)a2 + v248);
        uint64_t v251 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v250, 1, v251))
        {
          uint64_t v252 = sub_253462A5C(&qword_26B249528);
          memcpy(v249, v250, *(void *)(*(void *)(v252 - 8) + 64));
        }
        else
        {
          _DWORD *v249 = *v250;
          *(_OWORD *)(v249 + 2) = *(_OWORD *)(v250 + 2);
          uint64_t v322 = *(int *)(v251 + 24);
          v323 = (char *)v249 + v322;
          v324 = (char *)v250 + v322;
          uint64_t v325 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v325 - 8) + 32))(v323, v324, v325);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v249, 0, 1, v251);
        }
        uint64_t v326 = StepResults[6];
        v327 = (_DWORD *)((char *)a1 + v326);
        v328 = (_DWORD *)((char *)a2 + v326);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v326, 1, v251))goto LABEL_146; {
        goto LABEL_150;
        }
      case 0x24u:
        *a1 = *a2;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        v18 = (int *)type metadata accessor for TranscriptProtoUndoRedoRequest(0);
        uint64_t v134 = v18[7];
        v135 = (_DWORD *)((char *)a1 + v134);
        v136 = (_DWORD *)((char *)a2 + v134);
        uint64_t v137 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v136, 1, v137))
        {
          uint64_t v138 = sub_253462A5C(&qword_26B249528);
          memcpy(v135, v136, *(void *)(*(void *)(v138 - 8) + 64));
        }
        else
        {
          _DWORD *v135 = *v136;
          *(_OWORD *)(v135 + 2) = *(_OWORD *)(v136 + 2);
          uint64_t v253 = *(int *)(v137 + 24);
          v254 = (char *)v135 + v253;
          v255 = (char *)v136 + v253;
          uint64_t v256 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v256 - 8) + 32))(v254, v255, v256);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v135, 0, 1, v137);
        }
        uint64_t v257 = v18[8];
        v258 = (_DWORD *)((char *)a1 + v257);
        v259 = (_DWORD *)((char *)a2 + v257);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v257, 1, v137))
        {
          uint64_t v260 = sub_253462A5C(&qword_26B249528);
          memcpy(v258, v259, *(void *)(*(void *)(v260 - 8) + 64));
        }
        else
        {
          _DWORD *v258 = *v259;
          *(_OWORD *)(v258 + 2) = *(_OWORD *)(v259 + 2);
          uint64_t v329 = *(int *)(v137 + 24);
          v330 = (char *)v258 + v329;
          v331 = (char *)v259 + v329;
          uint64_t v332 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v332 - 8) + 32))(v330, v331, v332);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v258, 0, 1, v137);
        }
        goto LABEL_492;
      case 0x25u:
        *a1 = *a2;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        v139 = (int *)type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
        uint64_t v140 = v139[6];
        v141 = (_DWORD *)((char *)a1 + v140);
        v142 = (_DWORD *)((char *)a2 + v140);
        uint64_t v143 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v142, 1, v143))
        {
          uint64_t v144 = sub_253462A5C(&qword_26B249528);
          memcpy(v141, v142, *(void *)(*(void *)(v144 - 8) + 64));
        }
        else
        {
          _DWORD *v141 = *v142;
          *(_OWORD *)(v141 + 2) = *(_OWORD *)(v142 + 2);
          uint64_t v261 = *(int *)(v143 + 24);
          v262 = (char *)v141 + v261;
          v263 = (char *)v142 + v261;
          uint64_t v264 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v264 - 8) + 32))(v262, v263, v264);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v141, 0, 1, v143);
        }
        uint64_t v265 = v139[7];
        v266 = (_DWORD *)((char *)a1 + v265);
        v267 = (_DWORD *)((char *)a2 + v265);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v265, 1, v143))
        {
          uint64_t v268 = sub_253462A5C(&qword_26B249528);
          memcpy(v266, v267, *(void *)(*(void *)(v268 - 8) + 64));
        }
        else
        {
          _DWORD *v266 = *v267;
          *(_OWORD *)(v266 + 2) = *(_OWORD *)(v267 + 2);
          uint64_t v333 = *(int *)(v143 + 24);
          v334 = (char *)v266 + v333;
          v335 = (char *)v267 + v333;
          uint64_t v336 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v336 - 8) + 32))(v334, v335, v336);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v266, 0, 1, v143);
        }
        uint64_t v337 = v139[8];
        v338 = (char *)a1 + v337;
        v339 = (char *)a2 + v337;
        uint64_t v340 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v340 - 8) + 32))(v338, v339, v340);
        goto LABEL_660;
      case 0x26u:
        uint64_t v145 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v145))
        {
          uint64_t v146 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(a1, a2, *(void *)(*(void *)(v146 - 8) + 64));
        }
        else
        {
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v145 - 8) + 32))(a1, a2, v145);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v145);
        }
        StepResults = (int *)type metadata accessor for TranscriptProtoTypeConversionRequest(0);
        uint64_t v269 = StepResults[5];
        v270 = (char *)a1 + v269;
        v271 = (char *)a2 + v269;
        uint64_t v272 = sub_253B08E60();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v271, 1, v272))
        {
          uint64_t v273 = sub_253462A5C(&qword_269CDFA30);
          memcpy(v270, v271, *(void *)(*(void *)(v273 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v272 - 8) + 32))(v270, v271, v272);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v270, 0, 1, v272);
        }
        uint64_t v341 = StepResults[6];
        v66 = (_DWORD *)((char *)a1 + v341);
        v67 = (_DWORD *)((char *)a2 + v341);
        uint64_t v68 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v67, 1, v68))
        {
LABEL_143:
          uint64_t v342 = sub_253462A5C(&qword_26B249528);
          memcpy(v66, v67, *(void *)(*(void *)(v342 - 8) + 64));
        }
        else
        {
LABEL_87:
          _DWORD *v66 = *v67;
          *(_OWORD *)(v66 + 2) = *(_OWORD *)(v67 + 2);
          uint64_t v207 = *(int *)(v68 + 24);
          v208 = (char *)v66 + v207;
          v209 = (char *)v67 + v207;
          uint64_t v210 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v210 - 8) + 32))(v208, v209, v210);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v66, 0, 1, v68);
        }
        goto LABEL_608;
      case 0x27u:
        uint64_t v147 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v147))
        {
          uint64_t v148 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(a1, a2, *(void *)(*(void *)(v148 - 8) + 64));
        }
        else
        {
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v147 - 8) + 32))(a1, a2, v147);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v147);
        }
        StepResults = (int *)type metadata accessor for TranscriptProtoTypeConversionResult(0);
        uint64_t v274 = StepResults[5];
        v275 = (_DWORD *)((char *)a1 + v274);
        v276 = (_DWORD *)((char *)a2 + v274);
        uint64_t v251 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v276, 1, v251))
        {
          uint64_t v277 = sub_253462A5C(&qword_26B249528);
          memcpy(v275, v276, *(void *)(*(void *)(v277 - 8) + 64));
        }
        else
        {
          _DWORD *v275 = *v276;
          *(_OWORD *)(v275 + 2) = *(_OWORD *)(v276 + 2);
          uint64_t v343 = *(int *)(v251 + 24);
          v344 = (char *)v275 + v343;
          v345 = (char *)v276 + v343;
          uint64_t v346 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v346 - 8) + 32))(v344, v345, v346);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v275, 0, 1, v251);
        }
        uint64_t v347 = StepResults[6];
        v327 = (_DWORD *)((char *)a1 + v347);
        v328 = (_DWORD *)((char *)a2 + v347);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v347, 1, v251))
        {
LABEL_146:
          uint64_t v348 = sub_253462A5C(&qword_26B249528);
          memcpy(v327, v328, *(void *)(*(void *)(v348 - 8) + 64));
        }
        else
        {
LABEL_150:
          _DWORD *v327 = *v328;
          *(_OWORD *)(v327 + 2) = *(_OWORD *)(v328 + 2);
          uint64_t v351 = *(int *)(v251 + 24);
          v352 = (char *)v327 + v351;
          v353 = (char *)v328 + v351;
          uint64_t v354 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v354 - 8) + 32))(v352, v353, v354);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v327, 0, 1, v251);
        }
        goto LABEL_608;
      case 0x28u:
        long long v149 = a2[1];
        *a1 = *a2;
        a1[1] = v149;
        *((void *)a1 + 4) = *((void *)a2 + 4);
        uint64_t DecorationResult = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
        uint64_t v151 = *(int *)(DecorationResult + 36);
        v152 = (_OWORD *)((char *)a1 + v151);
        v153 = (_OWORD *)((char *)a2 + v151);
        uint64_t DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v153, 1, DecorationToolRetrievalResponse))
        {
          uint64_t v155 = sub_253462A5C(&qword_269CDFA00);
          memcpy(v152, v153, *(void *)(*(void *)(v155 - 8) + 64));
        }
        else
        {
          long long v278 = v153[1];
          _OWORD *v152 = *v153;
          v152[1] = v278;
          *((_DWORD *)v152 + 8) = *((_DWORD *)v153 + 8);
          *(_OWORD *)((char *)v152 + 40) = *(_OWORD *)((char *)v153 + 40);
          uint64_t v279 = *(int *)(DecorationToolRetrievalResponse + 36);
          v280 = (char *)v152 + v279;
          v281 = (char *)v153 + v279;
          uint64_t v282 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v282 - 8) + 32))(v280, v281, v282);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v152, 0, 1, DecorationToolRetrievalResponse);
        }
        uint64_t v283 = *(int *)(DecorationResult + 40);
        v284 = (char *)a1 + v283;
        v285 = (char *)a2 + v283;
        uint64_t v286 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v286 - 8) + 32))(v284, v285, v286);
        goto LABEL_660;
      case 0x2Au:
        *a1 = *a2;
        StepResults = (int *)type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
        uint64_t v156 = StepResults[5];
        v157 = (_DWORD *)((char *)a1 + v156);
        v158 = (_DWORD *)((char *)a2 + v156);
        uint64_t v159 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v158, 1, v159))
        {
          uint64_t v160 = sub_253462A5C(&qword_26B249528);
          memcpy(v157, v158, *(void *)(*(void *)(v160 - 8) + 64));
        }
        else
        {
          _DWORD *v157 = *v158;
          *(_OWORD *)(v157 + 2) = *(_OWORD *)(v158 + 2);
          uint64_t v287 = *(int *)(v159 + 24);
          v288 = (char *)v157 + v287;
          v289 = (char *)v158 + v287;
          uint64_t v290 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v290 - 8) + 32))(v288, v289, v290);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v157, 0, 1, v159);
        }
        uint64_t v291 = StepResults[6];
        v244 = (void *)((char *)a1 + v291);
        v245 = (void *)((char *)a2 + v291);
        uint64_t DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v245, 1, DecorationPrePlannerResultPayload))
        {
          uint64_t v292 = sub_253462A5C(&qword_269CE2560);
          memcpy(v244, v245, *(void *)(*(void *)(v292 - 8) + 64));
          goto LABEL_608;
        }
        uint64_t DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v245, 1, DecorationPrePlannerPayloadEnum))
        {
          uint64_t v350 = sub_253462A5C(&qword_269CE25A0);
          memcpy(v244, v245, *(void *)(*(void *)(v350 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              void *v244 = *v245;
              uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
              break;
            case 2u:
              void *v244 = *v245;
              uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
              break;
            case 3u:
              void *v244 = *v245;
              uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
              break;
            case 4u:
              void *v244 = *v245;
              uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
              break;
            case 5u:
              void *v244 = *v245;
              uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
              break;
            default:
              void *v244 = *v245;
              uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
              break;
          }
          uint64_t v483 = *(int *)(DecorationPrePlannerResultPayloadRepeatedTypedValueVariant + 20);
          v484 = (char *)v244 + v483;
          v1320 = (char *)v245 + v483;
          uint64_t v485 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v485 - 8) + 32))(v484, v1320, v485);
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v244, 0, 1, DecorationPrePlannerPayloadEnum);
        }
        goto LABEL_607;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        void *v244 = *v245;
        uint64_t v551 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v552 = *(int *)(v551 + 20);
        v1240 = (int *)v551;
        __srch = (char *)v244 + v552;
        __dste = (char *)v245 + v552;
        v1226 = (int *)type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__dste, 1, (uint64_t)v1226))
        {
          uint64_t v553 = sub_253462A5C(&qword_269CE0480);
          memcpy(__srch, __dste, *(void *)(*(void *)(v553 - 8) + 64));
        }
        else
        {
          uint64_t v1210 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__dste, 1, v1210))
          {
            uint64_t v627 = sub_253462A5C(&qword_269CE0478);
            uint64_t v628 = (uint64_t)__srch;
            memcpy(__srch, __dste, *(void *)(*(void *)(v627 - 8) + 64));
          }
          else
          {
            *(_OWORD *)__srch = *(_OWORD *)__dste;
            __srch[16] = __dste[16];
            uint64_t v677 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v678 = *(int *)(v677 + 24);
            uint64_t v1188 = v677;
            v1197 = &__srch[v678];
            v679 = &__dste[v678];
            uint64_t v680 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v679, 1, v680))
            {
              uint64_t v681 = sub_253462A5C(&qword_269CE0470);
              memcpy(v1197, v679, *(void *)(*(void *)(v681 - 8) + 64));
            }
            else
            {
              unsigned char *v1197 = *v679;
              uint64_t v798 = *(int *)(v680 + 20);
              v1186 = &v1197[v798];
              v799 = &v679[v798];
              uint64_t v800 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v800 - 8) + 32))(v1186, v799, v800);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1197, 0, 1, v680);
            }
            uint64_t v801 = *(int *)(v1188 + 28);
            v802 = &__srch[v801];
            v1201 = &__dste[v801];
            uint64_t v803 = sub_253B07160();
            v804 = v802;
            uint64_t v628 = (uint64_t)__srch;
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v803 - 8) + 32))(v804, v1201, v803);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__srch, 0, 1, v1210);
          }
          uint64_t v805 = v1226[5];
          __srcu = (void *)(v628 + v805);
          __dsto = &__dste[v805];
          uint64_t v806 = sub_253B07160();
          (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v806 - 8) + 32))(__srcu, __dsto, v806);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v628, 0, 1, (uint64_t)v1226);
        }
        v629 = v1240;
        goto LABEL_445;
      case 2u:
        *(_OWORD *)v244 = *(_OWORD *)v245;
        uint64_t v554 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_605;
      case 3u:
        *(_OWORD *)v244 = *(_OWORD *)v245;
        v244[2] = v245[2];
        *((unsigned char *)v244 + 24) = *((unsigned char *)v245 + 24);
        uint64_t v555 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_272;
      case 4u:
        *(_OWORD *)v244 = *(_OWORD *)v245;
        uint64_t v556 = v245[3];
        v244[2] = v245[2];
        v244[3] = v556;
        *((unsigned char *)v244 + 32) = *((unsigned char *)v245 + 32);
        uint64_t v557 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_606;
      case 5u:
        *(_OWORD *)v244 = *(_OWORD *)v245;
        *((unsigned char *)v244 + 16) = *((unsigned char *)v245 + 16);
        uint64_t v555 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_272:
        uint64_t v558 = *(int *)(v555 + 24);
        __srci = (int *)v555;
        __dstf = (char *)v244 + v558;
        v559 = (char *)v245 + v558;
        uint64_t v560 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v559, 1, v560))
        {
          uint64_t v561 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(__dstf, v559, *(void *)(*(void *)(v561 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v560 - 8) + 32))(__dstf, v559, v560);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstf, 0, 1, v560);
        }
        uint64_t v557 = __srci[7];
        goto LABEL_606;
      case 6u:
        *(_OWORD *)v244 = *(_OWORD *)v245;
        uint64_t v562 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v563 = *(int *)(v562 + 20);
        __srcj = (int *)v562;
        __dstg = (char *)v244 + v563;
        v564 = (char *)v245 + v563;
        uint64_t v565 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v564, 1, v565))
        {
          uint64_t v566 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(__dstg, v564, *(void *)(*(void *)(v566 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v565 - 8) + 32))(__dstg, v564, v565);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstg, 0, 1, v565);
        }
        v629 = __srcj;
LABEL_445:
        uint64_t v557 = v629[6];
        goto LABEL_606;
      case 7u:
        uint64_t v567 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v245, 1, v567))
        {
          uint64_t v568 = sub_253462A5C(&qword_269CE0498);
          memcpy(v244, v245, *(void *)(*(void *)(v568 - 8) + 64));
          goto LABEL_604;
        }
        int v630 = swift_getEnumCaseMultiPayload();
        if (v630 != 2)
        {
          if (v630 == 1)
          {
            *(unsigned char *)v244 = *(unsigned char *)v245;
            uint64_t v768 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            v769 = (char *)v244 + v768;
            __dstn = (char *)v245 + v768;
            uint64_t v770 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v770 - 8) + 32))(v769, __dstn, v770);
          }
          else
          {
            if (v630)
            {
              memcpy(v244, v245, *(void *)(*(void *)(v567 - 8) + 64));
              goto LABEL_603;
            }
            *(unsigned char *)v244 = *(unsigned char *)v245;
            uint64_t v631 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            v632 = (char *)v244 + v631;
            __dstl = (char *)v245 + v631;
            uint64_t v633 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v633 - 8) + 32))(v632, __dstl, v633);
          }
LABEL_602:
          swift_storeEnumTagMultiPayload();
LABEL_603:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v244, 0, 1, v567);
LABEL_604:
          uint64_t v554 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_605:
          uint64_t v557 = *(int *)(v554 + 20);
LABEL_606:
          v1056 = (char *)v244 + v557;
          v1057 = (char *)v245 + v557;
          uint64_t v1058 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1058 - 8) + 32))(v1056, v1057, v1058);
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v244, 0, 1, v320);
          goto LABEL_607;
        }
        uint64_t v766 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v245, 1, v766))
        {
          uint64_t v767 = sub_253462A5C(&qword_269CE0490);
          memcpy(v244, v245, *(void *)(*(void *)(v767 - 8) + 64));
LABEL_601:
          uint64_t v1053 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          v1054 = (char *)v244 + v1053;
          __dsts = (char *)v245 + v1053;
          uint64_t v1055 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1055 - 8) + 32))(v1054, __dsts, v1055);
          goto LABEL_602;
        }
        int v911 = swift_getEnumCaseMultiPayload();
        if (v911 == 1)
        {
          __dstj = (int *)type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v245, 1, (uint64_t)__dstj))
          {
            uint64_t v951 = sub_253462A5C(&qword_269CE0488);
            memcpy(v244, v245, *(void *)(*(void *)(v951 - 8) + 64));
          }
          else
          {
            *(unsigned char *)v244 = *(unsigned char *)v245;
            uint64_t v1049 = __dstj[5];
            v1257 = (char *)v245 + v1049;
            __srcbg = (char *)v244 + v1049;
            uint64_t v1050 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1050 - 8) + 32))(__srcbg, v1257, v1050);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v244, 0, 1, (uint64_t)__dstj);
          }
          uint64_t v1051 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          __srcbh = (char *)v245 + v1051;
          __dstr = (char *)v244 + v1051;
          uint64_t v1052 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1052 - 8) + 32))(__dstr, __srcbh, v1052);
        }
        else
        {
          if (v911)
          {
            memcpy(v244, v245, *(void *)(*(void *)(v766 - 8) + 64));
LABEL_600:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v244, 0, 1, v766);
            goto LABEL_601;
          }
          *(_OWORD *)v244 = *(_OWORD *)v245;
          uint64_t v912 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          __srcba = (char *)v245 + v912;
          __dstq = (char *)v244 + v912;
          uint64_t v913 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v913 - 8) + 32))(__dstq, __srcba, v913);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_600;
      case 8u:
        void *v244 = *v245;
        *(_OWORD *)(v244 + 1) = *(_OWORD *)(v245 + 1);
        uint64_t v557 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        goto LABEL_606;
      case 9u:
        uint64_t v569 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v245, 1, v569))
        {
          uint64_t v570 = sub_253462A5C(&qword_269CE04A8);
          memcpy(v244, v245, *(void *)(*(void *)(v570 - 8) + 64));
        }
        else
        {
          __dsth = (int *)v569;
          uint64_t v634 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v245, 1, v634))
          {
            uint64_t v635 = sub_253462A5C(&qword_269CE04A0);
            memcpy(v244, v245, *(void *)(*(void *)(v635 - 8) + 64));
          }
          else
          {
            uint64_t v682 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v245, 16, v682))
            {
              memcpy(v244, v245, *(void *)(*(void *)(v634 - 8) + 64));
            }
            else
            {
              long long v807 = *((_OWORD *)v245 + 1);
              *(_OWORD *)v244 = *(_OWORD *)v245;
              *((_OWORD *)v244 + 1) = v807;
              v244[4] = v245[4];
              uint64_t v808 = *(int *)(v682 + 28);
              v1250 = (char *)v245 + v808;
              __srcv = (char *)v244 + v808;
              uint64_t v809 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v809 - 8) + 32))(__srcv, v1250, v809);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v244, 0, 16, v682);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v244, 0, 1, v634);
          }
          uint64_t v810 = __dsth[5];
          __srcw = (char *)v244 + v810;
          v811 = (char *)v245 + v810;
          uint64_t v812 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v812 - 8) + 32))(__srcw, v811, v812);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v244, 0, 1, (uint64_t)__dsth);
        }
        uint64_t v554 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_605;
      case 0xAu:
        void *v244 = *v245;
        uint64_t v554 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
        goto LABEL_605;
      default:
        *(unsigned char *)v244 = *(unsigned char *)v245;
        *(_WORD *)((char *)v244 + 1) = *(_WORD *)((char *)v245 + 1);
        uint64_t v399 = type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v400 = *(int *)(v399 + 28);
        __srcb = (char *)v244 + v400;
        __dsta = (int *)v399;
        v401 = (char *)v245 + v400;
        uint64_t v402 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v401, 1, v402))
        {
          uint64_t v403 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(__srcb, v401, *(void *)(*(void *)(v403 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v402 - 8) + 32))(__srcb, v401, v402);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__srcb, 0, 1, v402);
        }
        uint64_t v581 = __dsta[8];
        v582 = (_OWORD *)((char *)v244 + v581);
        v583 = (_OWORD *)((char *)v245 + v581);
        __srck = (int *)type metadata accessor for TranscriptProtoUndoContext(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v583, 1, (uint64_t)__srck))
        {
          uint64_t v584 = sub_253462A5C(&qword_269CE0450);
          memcpy(v582, v583, *(void *)(*(void *)(v584 - 8) + 64));
        }
        else
        {
          long long v644 = v583[1];
          _OWORD *v582 = *v583;
          v582[1] = v644;
          v582[2] = v583[2];
          uint64_t v645 = __srck[7];
          v1244 = (char *)v582 + v645;
          v646 = (char *)v583 + v645;
          uint64_t v647 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v647 - 8) + 32))(v1244, v646, v647);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v582, 0, 1, (uint64_t)__srck);
        }
        uint64_t v648 = __dsta[9];
        v649 = (_OWORD *)((char *)v244 + v648);
        v650 = (_OWORD *)((char *)v245 + v648);
        v1245 = (int *)type metadata accessor for TranscriptProtoFollowUpAction(0);
        __srcl = v650;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v650, 1, (uint64_t)v1245))
        {
          uint64_t v651 = sub_253462A5C(&qword_269CE0468);
          memcpy(v649, v650, *(void *)(*(void *)(v651 - 8) + 64));
        }
        else
        {
          uint64_t v654 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__srcl, 1, v654))
          {
            uint64_t v655 = sub_253462A5C(&qword_269CE0460);
            memcpy(v649, __srcl, *(void *)(*(void *)(v655 - 8) + 64));
          }
          else
          {
            v1229 = (void *)type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__srcl, 1, (uint64_t)v1229))
            {
              uint64_t v684 = sub_253462A5C(&qword_269CE0458);
              memcpy(v649, __srcl, *(void *)(*(void *)(v684 - 8) + 64));
            }
            else
            {
              long long v821 = __srcl[1];
              _OWORD *v649 = *__srcl;
              v649[1] = v821;
              *((void *)v649 + 4) = *((void *)__srcl + 4);
              uint64_t v822 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              v1216 = (char *)v649 + v822;
              v1193 = (char *)__srcl + v822;
              uint64_t v823 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v823 - 8) + 32))(v1216, v1193, v823);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v649, 0, 1, (uint64_t)v1229);
            }
            uint64_t v824 = *(int *)(v654 + 20);
            v1231 = (char *)v649 + v824;
            v1217 = (char *)__srcl + v824;
            uint64_t v825 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v825 - 8) + 32))(v1231, v1217, v825);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v649, 0, 1, v654);
          }
          uint64_t v826 = v1245[5];
          v1232 = (char *)v649 + v826;
          __srcx = (char *)__srcl + v826;
          uint64_t v827 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v827 - 8) + 32))(v1232, __srcx, v827);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v649, 0, 1, (uint64_t)v1245);
        }
        *(_OWORD *)((char *)v244 + __dsta[10]) = *(_OWORD *)((char *)v245 + __dsta[10]);
        uint64_t v557 = __dsta[11];
        goto LABEL_606;
    }
  }
  return a1;
}

uint64_t sub_2537E7C58()
{
  uint64_t result = type metadata accessor for TranscriptProtoSessionStart(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TranscriptProtoTextQuery(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for TranscriptProtoSpeechQuery(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for TranscriptProtoRequest(319);
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for TranscriptProtoPlan(319);
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for TranscriptProtoAction(319);
            if (v6 <= 0x3F)
            {
              uint64_t result = type metadata accessor for TranscriptProtoClientAction(319);
              if (v7 <= 0x3F)
              {
                uint64_t result = type metadata accessor for TranscriptProtoQueryStep(319);
                if (v8 <= 0x3F)
                {
                  uint64_t result = type metadata accessor for TranscriptProtoVariableStep(319);
                  if (v9 <= 0x3F)
                  {
                    uint64_t result = type metadata accessor for TranscriptProtoSessionError(319);
                    if (v10 <= 0x3F)
                    {
                      uint64_t result = type metadata accessor for TranscriptProtoRecoverableError(319);
                      if (v11 <= 0x3F)
                      {
                        uint64_t result = type metadata accessor for TranscriptProtoClientCustom(319);
                        if (v12 <= 0x3F)
                        {
                          uint64_t result = type metadata accessor for TranscriptProtoSystemPromptResolution(319);
                          if (v13 <= 0x3F)
                          {
                            uint64_t result = sub_253B07160();
                            if (v14 <= 0x3F)
                            {
                              uint64_t result = type metadata accessor for TranscriptProtoQueryStepResults(319);
                              if (v15 <= 0x3F)
                              {
                                uint64_t result = type metadata accessor for TranscriptProtoActionResolverRequest(319);
                                if (v16 <= 0x3F)
                                {
                                  uint64_t result = type metadata accessor for TranscriptProtoClientInitiatedClientAction(319);
                                  if (v17 <= 0x3F)
                                  {
                                    uint64_t result = type metadata accessor for TranscriptProtoSafetyModeException(319);
                                    if (v18 <= 0x3F)
                                    {
                                      uint64_t result = type metadata accessor for TranscriptProtoResponseGenerationRequest(319);
                                      if (v19 <= 0x3F)
                                      {
                                        uint64_t result = type metadata accessor for TranscriptProtoEntitySpanMatchResult(319);
                                        if (v20 <= 0x3F)
                                        {
                                          uint64_t result = type metadata accessor for TranscriptProtoContextRetrieved(319);
                                          if (v21 <= 0x3F)
                                          {
                                            uint64_t result = type metadata accessor for TranscriptProtoActionCancellation(319);
                                            if (v22 <= 0x3F)
                                            {
                                              uint64_t result = type metadata accessor for TranscriptProtoToolRetrievalResponse(319);
                                              if (v23 <= 0x3F)
                                              {
                                                uint64_t result = type metadata accessor for TranscriptProtoSystemResponse(319);
                                                if (v24 <= 0x3F)
                                                {
                                                  uint64_t result = type metadata accessor for TranscriptProtoStatementResult(319);
                                                  if (v25 <= 0x3F)
                                                  {
                                                    uint64_t result = type metadata accessor for TranscriptProtoExternalAgentTextQuery(319);
                                                    if (v26 <= 0x3F)
                                                    {
                                                      uint64_t result = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(319);
                                                      if (v27 <= 0x3F)
                                                      {
                                                        uint64_t result = type metadata accessor for TranscriptProtoExternalAgentRequest(319);
                                                        if (v28 <= 0x3F)
                                                        {
                                                          uint64_t result = type metadata accessor for TranscriptProtoExternalAgentOutcome(319);
                                                          if (v29 <= 0x3F)
                                                          {
                                                            uint64_t result = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(319);
                                                            if (v30 <= 0x3F)
                                                            {
                                                              uint64_t result = type metadata accessor for TranscriptProtoToolResolution(319);
                                                              if (v31 <= 0x3F)
                                                              {
                                                                uint64_t result = type metadata accessor for TranscriptProtoUndoRedoRequest(319);
                                                                if (v32 <= 0x3F)
                                                                {
                                                                  uint64_t result = type metadata accessor for TranscriptProtoClientUndoRedoRequest(319);
                                                                  if (v33 <= 0x3F)
                                                                  {
                                                                    uint64_t result = type metadata accessor for TranscriptProtoTypeConversionRequest(319);
                                                                    if (v34 <= 0x3F)
                                                                    {
                                                                      uint64_t result = type metadata accessor for TranscriptProtoTypeConversionResult(319);
                                                                      if (v35 <= 0x3F)
                                                                      {
                                                                        uint64_t result = type metadata accessor for TranscriptProtoQueryDecorationResult(319);
                                                                        if (v36 <= 0x3F)
                                                                        {
                                                                          uint64_t result = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(319);
                                                                          if (v37 <= 0x3F)
                                                                          {
                                                                            swift_initEnumMetadataMultiPayload();
                                                                            return 0;
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoTranscript(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 28);
    unint64_t v8 = (char *)a1 + v7;
    unint64_t v9 = (char *)a2 + v7;
    a1[4] = a2[4];
    uint64_t v10 = sub_253B07160();
    unint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for TranscriptProtoTranscript(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_253B07160();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for TranscriptProtoTranscript(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  unint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B07160();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

void *assignWithCopy for TranscriptProtoTranscript(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  unint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoTranscript(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for TranscriptProtoTranscript(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[4];
  a1[3] = a2[3];
  a1[4] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoTranscript(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2537E89DC);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoTranscript(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2537E89F4);
}

uint64_t sub_2537E89F8()
{
  return sub_253942B08();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoTimepoint(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_253B07100();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_26B248D00);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(a3 + 32);
    unint64_t v15 = (char *)v4 + v14;
    unint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoTimepoint(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_253B07100();
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_253B07160();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  return v8(v6, v7);
}

uint64_t initializeWithCopy for TranscriptProtoTimepoint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_253B07100();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_26B248D00);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

void *assignWithCopy for TranscriptProtoTimepoint(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B07100();
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_253462A5C(&qword_26B248D00);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = (char *)a1 + v14;
  unint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoTimepoint(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_253B07100();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_26B248D00);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoTimepoint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_253B07100();
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_253462A5C(&qword_26B248D00);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoTimepoint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2537E92BC);
}

uint64_t sub_2537E92BC()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*(void *)(v1 + 24));
  }
  sub_2535E2460();
  sub_253462A5C(&qword_26B248D00);
  sub_2535782A8();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    sub_2535E256C();
  }
  else
  {
    sub_253B07160();
    sub_2535E27E4();
  }
  uint64_t v6 = sub_2535E22C8(v5);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, v7, v8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoTimepoint(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2537E9360);
}

void sub_2537E9360()
{
  sub_2535E2244();
  if (v3)
  {
    *(void *)(v1 + 24) = (v0 - 1);
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_26B248D00);
    sub_2535782A8();
    if (*(_DWORD *)(v4 + 84) == v2)
    {
      sub_2535E26E4();
    }
    else
    {
      sub_253B07160();
      sub_2535E2830();
    }
    uint64_t v6 = sub_2535E2234(v5);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v6, v7, v8, v9);
  }
}

void sub_2537E93F0()
{
  sub_253760A08(319, &qword_26B248D08, MEMORY[0x263F502F0]);
  if (v0 <= 0x3F)
  {
    sub_253B07160();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoSessionStart(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoLocaleSettings(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_26B2497A0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      uint64_t v12 = a2[5];
      a1[4] = a2[4];
      a1[5] = v12;
      uint64_t v13 = *(int *)(v7 + 28);
      uint64_t v40 = (char *)a2 + v13;
      uint64_t v41 = (char *)a1 + v13;
      uint64_t v14 = sub_253B07160();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15(v41, v40, v14);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v16 = *(int *)(a3 + 20);
    uint64_t v17 = (uint64_t *)((char *)a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = type metadata accessor for TranscriptProtoDeviceDetails(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
    {
      uint64_t v20 = sub_253462A5C(&qword_26B249680);
      memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      uint64_t v21 = v18[1];
      *uint64_t v17 = *v18;
      v17[1] = v21;
      uint64_t v22 = *(int *)(v19 + 20);
      unint64_t v23 = (_DWORD *)((char *)v17 + v22);
      unint64_t v24 = (_DWORD *)((char *)v18 + v22);
      uint64_t v25 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
      {
        uint64_t v26 = sub_253462A5C(&qword_269CE2510);
        memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        *unint64_t v23 = *v24;
        uint64_t v27 = *(int *)(v25 + 20);
        unint64_t v28 = (char *)v23 + v27;
        unint64_t v29 = (char *)v24 + v27;
        uint64_t v30 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v25);
      }
      uint64_t v31 = *(int *)(v19 + 24);
      unint64_t v32 = (char *)v17 + v31;
      unint64_t v33 = (char *)v18 + v31;
      uint64_t v34 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
    }
    uint64_t v35 = *(int *)(a3 + 24);
    unint64_t v36 = (char *)a1 + v35;
    unint64_t v37 = (char *)a2 + v35;
    uint64_t v38 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoSessionStart(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoLocaleSettings(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = a1 + *(int *)(v4 + 28);
    uint64_t v6 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = type metadata accessor for TranscriptProtoDeviceDetails(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v7 + *(int *)(v8 + 20);
    uint64_t v10 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, 1, v10))
    {
      uint64_t v11 = v9 + *(int *)(v10 + 20);
      uint64_t v12 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    }
    uint64_t v13 = v7 + *(int *)(v8 + 24);
    uint64_t v14 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  uint64_t v15 = a1 + *(int *)(a2 + 24);
  uint64_t v16 = sub_253B07160();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
  return v17(v15, v16);
}

void *initializeWithCopy for TranscriptProtoSessionStart(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoLocaleSettings(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_26B2497A0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    uint64_t v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    uint64_t v10 = a2[5];
    a1[4] = a2[4];
    a1[5] = v10;
    uint64_t v11 = *(int *)(v6 + 28);
    v39 = (char *)a2 + v11;
    uint64_t v40 = (char *)a1 + v11;
    uint64_t v12 = sub_253B07160();
    uint64_t v13 = a3;
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v40, v39, v12);
    a3 = v13;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = type metadata accessor for TranscriptProtoDeviceDetails(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18))
  {
    uint64_t v19 = sub_253462A5C(&qword_26B249680);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v20 = v17[1];
    void *v16 = *v17;
    v16[1] = v20;
    uint64_t v21 = *(int *)(v18 + 20);
    uint64_t v22 = (_DWORD *)((char *)v16 + v21);
    unint64_t v23 = (_DWORD *)((char *)v17 + v21);
    uint64_t v24 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, v24))
    {
      uint64_t v25 = sub_253462A5C(&qword_269CE2510);
      memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      *uint64_t v22 = *v23;
      uint64_t v26 = *(int *)(v24 + 20);
      uint64_t v27 = (char *)v22 + v26;
      unint64_t v28 = (char *)v23 + v26;
      uint64_t v29 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v22, 0, 1, v24);
    }
    uint64_t v30 = *(int *)(v18 + 24);
    uint64_t v31 = (char *)v16 + v30;
    unint64_t v32 = (char *)v17 + v30;
    uint64_t v33 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v18);
  }
  uint64_t v34 = *(int *)(a3 + 24);
  uint64_t v35 = (char *)a1 + v34;
  unint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  return a1;
}

void *assignWithCopy for TranscriptProtoSessionStart(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoLocaleSettings(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      uint64_t v9 = *(int *)(v6 + 28);
      uint64_t v62 = (char *)a2 + v9;
      uint64_t v63 = (char *)a1 + v9;
      uint64_t v10 = sub_253B07160();
      uint64_t v11 = a3;
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12(v63, v62, v10);
      a3 = v11;
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v13 = sub_253462A5C(&qword_26B2497A0);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = *(int *)(v6 + 28);
  uint64_t v27 = (char *)a1 + v26;
  unint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 24))(v27, v28, v29);
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = type metadata accessor for TranscriptProtoDeviceDetails(0);
  int v18 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v17);
  int v19 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v17);
  if (!v18)
  {
    if (v19)
    {
      sub_2536FA73C();
      goto LABEL_13;
    }
    void *v15 = *v16;
    v15[1] = v16[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v30 = *(int *)(v17 + 20);
    uint64_t v31 = (_DWORD *)((char *)v15 + v30);
    unint64_t v32 = (_DWORD *)((char *)v16 + v30);
    uint64_t v33 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
    int v34 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v31, 1, v33);
    int v35 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v32, 1, v33);
    if (v34)
    {
      if (!v35)
      {
        _DWORD *v31 = *v32;
        uint64_t v36 = *(int *)(v33 + 20);
        uint64_t v37 = (char *)v31 + v36;
        uint64_t v38 = (char *)v32 + v36;
        uint64_t v39 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v31, 0, 1, v33);
LABEL_23:
        uint64_t v49 = *(int *)(v17 + 24);
        uint64_t v50 = (char *)v15 + v49;
        uint64_t v51 = (char *)v16 + v49;
        uint64_t v52 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 24))(v50, v51, v52);
        goto LABEL_24;
      }
    }
    else
    {
      if (!v35)
      {
        _DWORD *v31 = *v32;
        uint64_t v58 = *(int *)(v33 + 20);
        uint64_t v59 = (char *)v31 + v58;
        v60 = (char *)v32 + v58;
        uint64_t v61 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 24))(v59, v60, v61);
        goto LABEL_23;
      }
      sub_2536FA73C();
    }
    uint64_t v48 = sub_253462A5C(&qword_269CE2510);
    memcpy(v31, v32, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_23;
  }
  if (v19)
  {
LABEL_13:
    uint64_t v25 = sub_253462A5C(&qword_26B249680);
    memcpy(v15, v16, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_24;
  }
  void *v15 = *v16;
  v15[1] = v16[1];
  uint64_t v20 = *(int *)(v17 + 20);
  uint64_t v21 = (_DWORD *)((char *)v15 + v20);
  uint64_t v22 = (_DWORD *)((char *)v16 + v20);
  uint64_t v23 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v23))
  {
    uint64_t v24 = sub_253462A5C(&qword_269CE2510);
    memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    _DWORD *v21 = *v22;
    uint64_t v40 = *(int *)(v23 + 20);
    uint64_t v41 = (char *)v21 + v40;
    v42 = (char *)v22 + v40;
    uint64_t v43 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v21, 0, 1, v23);
  }
  uint64_t v44 = *(int *)(v17 + 24);
  v45 = (char *)v15 + v44;
  uint64_t v46 = (char *)v16 + v44;
  uint64_t v47 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v17);
LABEL_24:
  uint64_t v53 = *(int *)(a3 + 24);
  uint64_t v54 = (char *)a1 + v53;
  v55 = (char *)a2 + v53;
  uint64_t v56 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 24))(v54, v55, v56);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoSessionStart(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoLocaleSettings(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_26B2497A0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    long long v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    a1[2] = a2[2];
    uint64_t v9 = *(int *)(v6 + 28);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (_OWORD *)((char *)a1 + v13);
  uint64_t v15 = (_OWORD *)((char *)a2 + v13);
  uint64_t v16 = type metadata accessor for TranscriptProtoDeviceDetails(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = sub_253462A5C(&qword_26B249680);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *uint64_t v14 = *v15;
    uint64_t v18 = *(int *)(v16 + 20);
    int v19 = (_DWORD *)((char *)v14 + v18);
    uint64_t v20 = (_DWORD *)((char *)v15 + v18);
    uint64_t v21 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21))
    {
      uint64_t v22 = sub_253462A5C(&qword_269CE2510);
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      *int v19 = *v20;
      uint64_t v23 = *(int *)(v21 + 20);
      uint64_t v24 = (char *)v19 + v23;
      uint64_t v25 = (char *)v20 + v23;
      uint64_t v26 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v21);
    }
    uint64_t v27 = *(int *)(v16 + 24);
    unint64_t v28 = (char *)v14 + v27;
    uint64_t v29 = (char *)v15 + v27;
    uint64_t v30 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v14, 0, 1, v16);
  }
  uint64_t v31 = *(int *)(a3 + 24);
  unint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

void *assignWithTake for TranscriptProtoSessionStart(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoLocaleSettings(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      long long v9 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v9;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      uint64_t v10 = *(int *)(v6 + 28);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v14 = sub_253462A5C(&qword_26B2497A0);
    memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v27 = a2[1];
  *a1 = *a2;
  a1[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = a2[3];
  a1[2] = a2[2];
  a1[3] = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = a2[5];
  a1[4] = a2[4];
  a1[5] = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = *(int *)(v6 + 28);
  uint64_t v31 = (char *)a1 + v30;
  unint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = type metadata accessor for TranscriptProtoDeviceDetails(0);
  int v19 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v18);
  int v20 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18);
  if (!v19)
  {
    if (v20)
    {
      sub_2536FA73C();
      goto LABEL_13;
    }
    uint64_t v34 = v17[1];
    void *v16 = *v17;
    v16[1] = v34;
    swift_bridgeObjectRelease();
    uint64_t v35 = *(int *)(v18 + 20);
    uint64_t v36 = (_DWORD *)((char *)v16 + v35);
    uint64_t v37 = (_DWORD *)((char *)v17 + v35);
    uint64_t v38 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
    int v39 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v36, 1, v38);
    int v40 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v37, 1, v38);
    if (v39)
    {
      if (!v40)
      {
        *uint64_t v36 = *v37;
        uint64_t v41 = *(int *)(v38 + 20);
        v42 = (char *)v36 + v41;
        uint64_t v43 = (char *)v37 + v41;
        uint64_t v44 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v36, 0, 1, v38);
LABEL_23:
        uint64_t v54 = *(int *)(v18 + 24);
        v55 = (char *)v16 + v54;
        uint64_t v56 = (char *)v17 + v54;
        uint64_t v57 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 40))(v55, v56, v57);
        goto LABEL_24;
      }
    }
    else
    {
      if (!v40)
      {
        *uint64_t v36 = *v37;
        uint64_t v63 = *(int *)(v38 + 20);
        v64 = (char *)v36 + v63;
        uint64_t v65 = (char *)v37 + v63;
        uint64_t v66 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 40))(v64, v65, v66);
        goto LABEL_23;
      }
      sub_2536FA73C();
    }
    uint64_t v53 = sub_253462A5C(&qword_269CE2510);
    memcpy(v36, v37, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_23;
  }
  if (v20)
  {
LABEL_13:
    uint64_t v26 = sub_253462A5C(&qword_26B249680);
    memcpy(v16, v17, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_24;
  }
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  uint64_t v21 = *(int *)(v18 + 20);
  uint64_t v22 = (_DWORD *)((char *)v16 + v21);
  uint64_t v23 = (_DWORD *)((char *)v17 + v21);
  uint64_t v24 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, v24))
  {
    uint64_t v25 = sub_253462A5C(&qword_269CE2510);
    memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    *uint64_t v22 = *v23;
    uint64_t v45 = *(int *)(v24 + 20);
    uint64_t v46 = (char *)v22 + v45;
    uint64_t v47 = (char *)v23 + v45;
    uint64_t v48 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v22, 0, 1, v24);
  }
  uint64_t v49 = *(int *)(v18 + 24);
  uint64_t v50 = (char *)v16 + v49;
  uint64_t v51 = (char *)v17 + v49;
  uint64_t v52 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v18);
LABEL_24:
  uint64_t v58 = *(int *)(a3 + 24);
  uint64_t v59 = (char *)a1 + v58;
  v60 = (char *)a2 + v58;
  uint64_t v61 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 40))(v59, v60, v61);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSessionStart(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2537EAB68);
}

uint64_t sub_2537EAB68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2538A7E84(a1, a2, a3, &qword_26B2497A0, &qword_26B249680);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSessionStart(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2537EAB90);
}

uint64_t sub_2537EAB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2538A7F3C(a1, a2, a3, a4, &qword_26B2497A0, &qword_26B249680);
}

void sub_2537EABA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoRequest(unsigned char *a1, void *a2, int *a3)
{
  char v3 = a2;
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  *a1 = *(unsigned char *)a2;
  uint64_t v7 = a3[5];
  int v8 = &a1[v7];
  long long v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoRequestContent(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v13 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v13))
    {
      uint64_t v14 = sub_253462A5C(&qword_269CE1B00);
      memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
      goto LABEL_47;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        void *v8 = *v9;
        uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        __dstc = (char *)v9 + v21;
        uint64_t v181 = (char *)v8 + v21;
        uint64_t v184 = v13;
        uint64_t v22 = sub_253B07160();
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v24 = v22;
        uint64_t v13 = v184;
        v23(v181, __dstc, v24);
        goto LABEL_46;
      case 2u:
        uint64_t v185 = v13;
        uint64_t v25 = v9[1];
        void *v8 = *v9;
        v8[1] = v25;
        uint64_t v26 = v9[3];
        v8[2] = v9[2];
        v8[3] = v26;
        uint64_t v182 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        uint64_t v27 = *(int *)(v182 + 24);
        uint64_t v28 = (char *)v8 + v27;
        uint64_t v29 = (char *)v9 + v27;
        uint64_t v30 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v30))
        {
          uint64_t v31 = sub_253462A5C(&qword_269CE2140);
          memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
          goto LABEL_28;
        }
        uint64_t v40 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        __dsta = (void *)v30;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v40))
        {
          uint64_t v41 = sub_253462A5C(&qword_269CE2200);
          memcpy(v28, v29, *(void *)(*(void *)(v41 - 8) + 64));
LABEL_27:
          uint64_t v51 = *(int *)(v30 + 20);
          uint64_t v52 = &v28[v51];
          uint64_t v53 = &v29[v51];
          uint64_t v54 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v28, 0, 1, (uint64_t)__dsta);
LABEL_28:
          uint64_t v55 = v182;
          uint64_t v56 = *(int *)(v182 + 28);
          uint64_t v57 = (void *)((char *)v8 + v56);
          uint64_t v58 = (void *)((char *)v9 + v56);
          uint64_t v59 = type metadata accessor for TranscriptProtoStatementID(0);
          __dstb = (int *)v59;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v58, 1, v59))
          {
            uint64_t v60 = sub_253462A5C(&qword_26B249528);
            memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
          }
          else
          {
            *(_DWORD *)uint64_t v57 = *(_DWORD *)v58;
            uint64_t v61 = v58[2];
            v57[1] = v58[1];
            v57[2] = v61;
            uint64_t v62 = *(int *)(v59 + 24);
            uint64_t v169 = (char *)v58 + v62;
            v172 = (char *)v57 + v62;
            uint64_t v63 = sub_253B07160();
            uint64_t v166 = *(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16);
            swift_bridgeObjectRetain();
            v166(v172, v169, v63);
            uint64_t v55 = v182;
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v57, 0, 1, v59);
          }
          uint64_t v64 = *(int *)(v55 + 32);
          uint64_t v65 = (char *)v8 + v64;
          uint64_t v66 = (void *)((char *)v9 + v64);
          uint64_t v67 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v66, 1, v67))
          {
            uint64_t v68 = sub_253462A5C(&qword_269CE2130);
            memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
          }
          else
          {
            v173 = v65;
            uint64_t v69 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v66, 1, v69))
            {
              uint64_t v70 = sub_253462A5C(&qword_269CE2150);
              uint64_t v71 = (uint64_t)v173;
              memcpy(v173, v66, *(void *)(*(void *)(v70 - 8) + 64));
              uint64_t v72 = v66;
            }
            else
            {
              uint64_t v167 = v69;
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              if (EnumCaseMultiPayload == 1)
              {
                void *v173 = *v66;
                uint64_t v79 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                __dstd = (char *)v173 + v79;
                uint64_t v165 = (char *)v66 + v79;
                uint64_t v80 = sub_253B07160();
                uint64_t v162 = *(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v81 = v80;
                uint64_t v71 = (uint64_t)v173;
                v162(__dstd, v165, v81);
                uint64_t v82 = v167;
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                uint64_t v71 = (uint64_t)v173;
                if (EnumCaseMultiPayload)
                {
                  uint64_t v82 = v167;
                  memcpy(v173, v66, *(void *)(*(void *)(v167 - 8) + 64));
                }
                else
                {
                  uint64_t v164 = v67;
                  uint64_t v74 = v66[1];
                  void *v173 = *v66;
                  v173[1] = v74;
                  uint64_t v75 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                  uint64_t v76 = *(int *)(v75 + 20);
                  long long v161 = (void *)((char *)v173 + v76);
                  uint64_t v77 = (void *)((char *)v66 + v76);
                  swift_bridgeObjectRetain();
                  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v77, 1, (uint64_t)__dstb))
                  {
                    uint64_t v78 = sub_253462A5C(&qword_26B249528);
                    memcpy(v161, v77, *(void *)(*(void *)(v78 - 8) + 64));
                  }
                  else
                  {
                    *(_DWORD *)long long v161 = *(_DWORD *)v77;
                    uint64_t v83 = v77[2];
                    v161[1] = v77[1];
                    v161[2] = v83;
                    uint64_t v84 = __dstb[6];
                    uint64_t v159 = (char *)v77 + v84;
                    uint64_t v160 = (char *)v161 + v84;
                    uint64_t v85 = sub_253B07160();
                    v158 = *(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v158(v160, v159, v85);
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v161, 0, 1, (uint64_t)__dstb);
                  }
                  uint64_t v86 = *(int *)(v75 + 24);
                  uint64_t v87 = (char *)v173 + v86;
                  v88 = (char *)v66 + v86;
                  uint64_t v89 = sub_253B07160();
                  uint64_t v90 = v88;
                  uint64_t v71 = (uint64_t)v173;
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16))(v87, v90, v89);
                  uint64_t v82 = v167;
                  swift_storeEnumTagMultiPayload();
                  uint64_t v67 = v164;
                }
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v71, 0, 1, v82);
              uint64_t v72 = v66;
            }
            uint64_t v91 = *(int *)(v67 + 20);
            uint64_t v92 = v71 + v91;
            uint64_t v93 = v67;
            uint64_t v94 = v71;
            uint64_t v95 = (char *)v72 + v91;
            uint64_t v96 = sub_253B07160();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v96 - 8) + 16))(v92, v95, v96);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v94, 0, 1, v93);
            uint64_t v55 = v182;
          }
          uint64_t v97 = *(int *)(v55 + 36);
          uint64_t v98 = (char *)v8 + v97;
          v99 = (char *)v9 + v97;
          uint64_t v100 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
          uint64_t v13 = v185;
LABEL_46:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v13);
LABEL_47:
          uint64_t v101 = *(int *)(v10 + 20);
          v102 = (char *)v8 + v101;
          uint64_t v103 = (char *)v9 + v101;
          uint64_t v104 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16))(v102, v103, v104);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
          goto LABEL_48;
        }
        int v42 = swift_getEnumCaseMultiPayload();
        switch(v42)
        {
          case 6:
            uint64_t v44 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v44 - 8) + 16))(v28, v29, v44);
            break;
          case 5:
            *uint64_t v28 = *v29;
            uint64_t v45 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                         + 20);
            uint64_t v46 = &v28[v45];
            uint64_t v171 = (void *)v40;
            uint64_t v47 = &v29[v45];
            uint64_t v48 = sub_253B07160();
            uint64_t v49 = v46;
            uint64_t v50 = v47;
            uint64_t v40 = (uint64_t)v171;
            uint64_t v30 = (uint64_t)__dsta;
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v48 - 8) + 16))(v49, v50, v48);
            break;
          case 1:
            uint64_t v43 = sub_253B08E50();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v43 - 8) + 16))(v28, v29, v43);
            break;
          default:
            memcpy(v28, v29, *(void *)(*(void *)(v40 - 8) + 64));
            goto LABEL_26;
        }
        swift_storeEnumTagMultiPayload();
LABEL_26:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v28, 0, 1, v40);
        goto LABEL_27;
      case 3u:
        uint64_t v32 = sub_253B07160();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v8, v9, v32);
        goto LABEL_46;
      default:
        uint64_t v15 = v9[1];
        void *v8 = *v9;
        v8[1] = v15;
        uint64_t v16 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v17 = *(int *)(v16 + 20);
        __dst = (void *)((char *)v8 + v17);
        uint64_t v180 = v16;
        uint64_t v18 = (void *)((char *)v9 + v17);
        uint64_t v19 = type metadata accessor for TranscriptProtoStatementID(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
        {
          uint64_t v20 = sub_253462A5C(&qword_26B249528);
          memcpy(__dst, v18, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          *(_DWORD *)__dst = *(_DWORD *)v18;
          uint64_t v33 = v18[2];
          __dst[1] = v18[1];
          __dst[2] = v33;
          uint64_t v34 = *(int *)(v19 + 24);
          v168 = (char *)v18 + v34;
          uint64_t v170 = (char *)__dst + v34;
          uint64_t v35 = sub_253B07160();
          v163 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
          swift_bridgeObjectRetain();
          v163(v170, v168, v35);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v19);
        }
        uint64_t v36 = *(int *)(v180 + 24);
        uint64_t v37 = (char *)v8 + v36;
        uint64_t v38 = (char *)v9 + v36;
        uint64_t v39 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
        goto LABEL_46;
    }
  }
  uint64_t v11 = sub_253462A5C(&qword_269CE1AF0);
  memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_48:
  uint64_t v105 = a3[6];
  uint64_t v106 = (void *)((char *)v4 + v105);
  uint64_t v107 = (void *)((char *)v3 + v105);
  uint64_t v108 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v107, 1, v108))
  {
    uint64_t v109 = sub_253462A5C(&qword_269CE1AE0);
    memcpy(v106, v107, *(void *)(*(void *)(v109 - 8) + 64));
  }
  else
  {
    uint64_t v110 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v107, 1, v110))
    {
      uint64_t v111 = sub_253462A5C(&qword_269CE1B50);
      memcpy(v106, v107, *(void *)(*(void *)(v111 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v114 = v107[1];
          *uint64_t v106 = *v107;
          v106[1] = v114;
          uint64_t v113 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0)
                        + 20);
          goto LABEL_60;
        case 2u:
          uint64_t v115 = v107[1];
          *uint64_t v106 = *v107;
          v106[1] = v115;
          *((unsigned char *)v106 + 16) = *((unsigned char *)v107 + 16);
          uint64_t v116 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
          goto LABEL_59;
        case 3u:
          uint64_t v117 = v107[1];
          *uint64_t v106 = *v107;
          v106[1] = v117;
          *((unsigned char *)v106 + 16) = *((unsigned char *)v107 + 16);
          uint64_t v116 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
          goto LABEL_59;
        case 4u:
          uint64_t v118 = v107[1];
          *uint64_t v106 = *v107;
          v106[1] = v118;
          *((unsigned char *)v106 + 16) = *((unsigned char *)v107 + 16);
          uint64_t v116 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
          goto LABEL_59;
        case 5u:
          uint64_t v119 = v107[1];
          *uint64_t v106 = *v107;
          v106[1] = v119;
          *((unsigned char *)v106 + 16) = *((unsigned char *)v107 + 16);
          uint64_t v116 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
LABEL_59:
          uint64_t v113 = *(int *)(v116 + 24);
          goto LABEL_60;
        case 6u:
          uint64_t v121 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v107, 1, v121))
          {
            uint64_t v122 = sub_253462A5C(&qword_26B249528);
            memcpy(v106, v107, *(void *)(*(void *)(v122 - 8) + 64));
          }
          else
          {
            *(_DWORD *)uint64_t v106 = *(_DWORD *)v107;
            uint64_t v124 = v107[2];
            v106[1] = v107[1];
            v106[2] = v124;
            uint64_t v125 = *(int *)(v121 + 24);
            uint64_t v190 = (char *)v106 + v125;
            v187 = (char *)v107 + v125;
            uint64_t v126 = sub_253B07160();
            __dste = *(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 16);
            swift_bridgeObjectRetain();
            __dste(v190, v187, v126);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v106, 0, 1, v121);
          }
          uint64_t v127 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
          uint64_t v128 = *(int *)(v127 + 20);
          v129 = (char *)v106 + v128;
          v130 = (char *)v107 + v128;
          *(void *)v129 = *(void *)v130;
          v129[8] = v130[8];
          uint64_t v123 = *(int *)(v127 + 24);
          goto LABEL_66;
        case 7u:
          *uint64_t v106 = *v107;
          *((unsigned char *)v106 + 8) = *((unsigned char *)v107 + 8);
          uint64_t v123 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0)
                        + 20);
LABEL_66:
          uint64_t v131 = (char *)v106 + v123;
          uint64_t v132 = (char *)v107 + v123;
          uint64_t v133 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16))(v131, v132, v133);
          break;
        default:
          uint64_t v112 = v107[1];
          *uint64_t v106 = *v107;
          v106[1] = v112;
          *((_WORD *)v106 + 8) = *((_WORD *)v107 + 8);
          uint64_t v113 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
LABEL_60:
          uint64_t v189 = (char *)v106 + v113;
          v186 = (char *)v107 + v113;
          uint64_t v120 = sub_253B07160();
          v183 = *(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16);
          swift_bridgeObjectRetain();
          v183(v189, v186, v120);
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v106, 0, 1, v110);
    }
    uint64_t v134 = *(int *)(v108 + 20);
    v135 = (char *)v106 + v134;
    v136 = (char *)v107 + v134;
    uint64_t v137 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16))(v135, v136, v137);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v106, 0, 1, v108);
  }
  uint64_t v138 = a3[7];
  uint64_t v139 = a3[8];
  uint64_t v140 = (void *)((char *)v4 + v138);
  v141 = (void *)((char *)v3 + v138);
  uint64_t v142 = v141[1];
  *uint64_t v140 = *v141;
  v140[1] = v142;
  uint64_t v143 = (void *)((char *)v4 + v139);
  uint64_t v144 = (void *)((char *)v3 + v139);
  uint64_t v145 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v144, 1, v145))
  {
    uint64_t v146 = sub_253462A5C(&qword_269CE1AD0);
    memcpy(v143, v144, *(void *)(*(void *)(v146 - 8) + 64));
  }
  else
  {
    uint64_t v147 = v144[1];
    *uint64_t v143 = *v144;
    v143[1] = v147;
    v143[2] = v144[2];
    uint64_t v148 = *(int *)(v145 + 24);
    v191 = (char *)v143 + v148;
    uint64_t v188 = (char *)v144 + v148;
    uint64_t v149 = sub_253B07160();
    v150 = v4;
    uint64_t v151 = v3;
    v152 = *(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v152(v191, v188, v149);
    char v3 = v151;
    uint64_t v4 = v150;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v143, 0, 1, v145);
  }
  uint64_t v153 = a3[9];
  v154 = (char *)v4 + v153;
  uint64_t v155 = (char *)v3 + v153;
  uint64_t v156 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 16))(v154, v155, v156);
  return v4;
}

uint64_t destroy for TranscriptProtoRequest(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for TranscriptProtoRequestContent(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    uint64_t v6 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          uint64_t v7 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          uint64_t v8 = v4 + *(int *)(v7 + 20);
          uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v9))
          {
            swift_bridgeObjectRelease();
            uint64_t v10 = v8 + *(int *)(v9 + 24);
            uint64_t v11 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
          }
          uint64_t v12 = *(int *)(v7 + 24);
          goto LABEL_32;
        case 1u:
          swift_bridgeObjectRelease();
          uint64_t v12 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          goto LABEL_32;
        case 2u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v13 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
          uint64_t v14 = v4 + v13[6];
          uint64_t v15 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v14, 1, v15)) {
            goto LABEL_19;
          }
          uint64_t v16 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v14, 1, v16)) {
            goto LABEL_18;
          }
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 6)
          {
            uint64_t v18 = sub_253B07160();
LABEL_16:
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v14, v18);
            goto LABEL_18;
          }
          if (EnumCaseMultiPayload != 5)
          {
            if (EnumCaseMultiPayload != 1) {
              goto LABEL_18;
            }
            uint64_t v18 = sub_253B08E50();
            goto LABEL_16;
          }
          uint64_t v20 = v14
              + *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          uint64_t v21 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
LABEL_18:
          uint64_t v22 = v14 + *(int *)(v15 + 20);
          uint64_t v23 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
LABEL_19:
          uint64_t v24 = v4 + v13[7];
          uint64_t v25 = type metadata accessor for TranscriptProtoStatementID(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v24, 1, v25))
          {
            swift_bridgeObjectRelease();
            uint64_t v26 = v24 + *(int *)(v25 + 24);
            uint64_t v27 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
          }
          uint64_t v28 = v4 + v13[8];
          uint64_t v29 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v28, 1, v29)) {
            goto LABEL_31;
          }
          uint64_t v30 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v28, 1, v30)) {
            goto LABEL_30;
          }
          int v31 = swift_getEnumCaseMultiPayload();
          if (v31 == 1)
          {
            swift_bridgeObjectRelease();
            uint64_t v36 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          }
          else
          {
            if (v31) {
              goto LABEL_30;
            }
            swift_bridgeObjectRelease();
            uint64_t v32 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
            uint64_t v33 = v28 + *(int *)(v32 + 20);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v33, 1, v25))
            {
              swift_bridgeObjectRelease();
              uint64_t v34 = v33 + *(int *)(v25 + 24);
              uint64_t v35 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
            }
            uint64_t v36 = *(int *)(v32 + 24);
          }
          uint64_t v37 = v28 + v36;
          uint64_t v38 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
LABEL_30:
          uint64_t v39 = v28 + *(int *)(v29 + 20);
          uint64_t v40 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
LABEL_31:
          uint64_t v12 = v13[9];
LABEL_32:
          uint64_t v41 = v4 + v12;
          uint64_t v42 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
          break;
        case 3u:
          uint64_t v19 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v4, v19);
          break;
        default:
          break;
      }
    }
    uint64_t v43 = v4 + *(int *)(v5 + 20);
    uint64_t v44 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v43, v44);
  }
  uint64_t v45 = a1 + a2[6];
  uint64_t v46 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v45, 1, v46))
  {
    uint64_t v47 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v45, 1, v47))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          uint64_t v48 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
          goto LABEL_49;
        case 1u:
          swift_bridgeObjectRelease();
          uint64_t v49 = type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0);
          goto LABEL_48;
        case 2u:
          swift_bridgeObjectRelease();
          uint64_t v50 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
          goto LABEL_46;
        case 3u:
          swift_bridgeObjectRelease();
          uint64_t v50 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
          goto LABEL_46;
        case 4u:
          swift_bridgeObjectRelease();
          uint64_t v50 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
          goto LABEL_46;
        case 5u:
          swift_bridgeObjectRelease();
          uint64_t v50 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
          goto LABEL_46;
        case 6u:
          uint64_t v51 = type metadata accessor for TranscriptProtoStatementID(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v45, 1, v51))
          {
            swift_bridgeObjectRelease();
            uint64_t v52 = v45 + *(int *)(v51 + 24);
            uint64_t v53 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v52, v53);
          }
          uint64_t v50 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
LABEL_46:
          uint64_t v48 = *(int *)(v50 + 24);
          goto LABEL_49;
        case 7u:
          uint64_t v49 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0);
LABEL_48:
          uint64_t v48 = *(int *)(v49 + 20);
LABEL_49:
          uint64_t v54 = v45 + v48;
          uint64_t v55 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8))(v54, v55);
          break;
        default:
          break;
      }
    }
    uint64_t v56 = v45 + *(int *)(v46 + 20);
    uint64_t v57 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 8))(v56, v57);
  }
  swift_bridgeObjectRelease();
  uint64_t v58 = a1 + a2[8];
  uint64_t v59 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v58, 1, v59))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v60 = v58 + *(int *)(v59 + 24);
    uint64_t v61 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v60, v61);
  }
  uint64_t v62 = a1 + a2[9];
  uint64_t v63 = sub_253B07160();
  uint64_t v64 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8);
  return v64(v62, v63);
}

unsigned char *initializeWithCopy for TranscriptProtoRequest(unsigned char *a1, unsigned char *a2, int *a3)
{
  char v3 = a3;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TranscriptProtoRequestContent(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE1AF0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_46;
  }
  uint64_t v11 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v11))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v7 = *v8;
        uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        __dstc = (char *)v8 + v19;
        uint64_t v178 = (char *)v7 + v19;
        uint64_t v181 = v11;
        uint64_t v20 = sub_253B07160();
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v22 = v20;
        uint64_t v11 = v181;
        v21(v178, __dstc, v22);
        goto LABEL_44;
      case 2u:
        uint64_t v182 = v11;
        uint64_t v23 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v23;
        uint64_t v24 = v8[3];
        v7[2] = v8[2];
        v7[3] = v24;
        uint64_t v179 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        uint64_t v25 = *(int *)(v179 + 24);
        uint64_t v26 = (char *)v7 + v25;
        uint64_t v27 = (char *)v8 + v25;
        uint64_t v28 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v28))
        {
          uint64_t v29 = sub_253462A5C(&qword_269CE2140);
          memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
LABEL_26:
          uint64_t v53 = v179;
          uint64_t v54 = *(int *)(v179 + 28);
          uint64_t v55 = (void *)((char *)v7 + v54);
          uint64_t v56 = (void *)((char *)v8 + v54);
          uint64_t v57 = type metadata accessor for TranscriptProtoStatementID(0);
          __dstb = (int *)v57;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v56, 1, v57))
          {
            uint64_t v58 = sub_253462A5C(&qword_26B249528);
            memcpy(v55, v56, *(void *)(*(void *)(v58 - 8) + 64));
          }
          else
          {
            *(_DWORD *)uint64_t v55 = *(_DWORD *)v56;
            uint64_t v59 = v56[2];
            v55[1] = v56[1];
            v55[2] = v59;
            uint64_t v60 = *(int *)(v57 + 24);
            uint64_t v166 = (char *)v56 + v60;
            uint64_t v169 = (char *)v55 + v60;
            uint64_t v61 = sub_253B07160();
            v163 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
            swift_bridgeObjectRetain();
            v163(v169, v166, v61);
            uint64_t v53 = v179;
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v55, 0, 1, v57);
          }
          uint64_t v62 = *(int *)(v53 + 32);
          uint64_t v63 = (char *)v7 + v62;
          uint64_t v64 = (void *)((char *)v8 + v62);
          uint64_t v65 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v64, 1, v65))
          {
            uint64_t v66 = sub_253462A5C(&qword_269CE2130);
            memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
          }
          else
          {
            uint64_t v170 = v63;
            uint64_t v67 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v64, 1, v67))
            {
              uint64_t v68 = sub_253462A5C(&qword_269CE2150);
              uint64_t v69 = (uint64_t)v170;
              memcpy(v170, v64, *(void *)(*(void *)(v68 - 8) + 64));
              uint64_t v70 = v64;
            }
            else
            {
              uint64_t v164 = v67;
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              if (EnumCaseMultiPayload == 1)
              {
                *uint64_t v170 = *v64;
                uint64_t v77 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                __dstd = (char *)v170 + v77;
                uint64_t v162 = (char *)v64 + v77;
                uint64_t v78 = sub_253B07160();
                uint64_t v159 = *(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v79 = v78;
                uint64_t v69 = (uint64_t)v170;
                v159(__dstd, v162, v79);
                uint64_t v80 = v164;
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                uint64_t v69 = (uint64_t)v170;
                if (EnumCaseMultiPayload)
                {
                  uint64_t v80 = v164;
                  memcpy(v170, v64, *(void *)(*(void *)(v164 - 8) + 64));
                }
                else
                {
                  uint64_t v161 = v65;
                  uint64_t v72 = v64[1];
                  *uint64_t v170 = *v64;
                  v170[1] = v72;
                  uint64_t v73 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                  uint64_t v74 = *(int *)(v73 + 20);
                  v158 = (void *)((char *)v170 + v74);
                  uint64_t v75 = (void *)((char *)v64 + v74);
                  swift_bridgeObjectRetain();
                  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v75, 1, (uint64_t)__dstb))
                  {
                    uint64_t v76 = sub_253462A5C(&qword_26B249528);
                    memcpy(v158, v75, *(void *)(*(void *)(v76 - 8) + 64));
                  }
                  else
                  {
                    *(_DWORD *)v158 = *(_DWORD *)v75;
                    uint64_t v81 = v75[2];
                    v158[1] = v75[1];
                    v158[2] = v81;
                    uint64_t v82 = __dstb[6];
                    uint64_t v156 = (char *)v75 + v82;
                    v157 = (char *)v158 + v82;
                    uint64_t v83 = sub_253B07160();
                    uint64_t v155 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v155(v157, v156, v83);
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v158, 0, 1, (uint64_t)__dstb);
                  }
                  uint64_t v84 = *(int *)(v73 + 24);
                  uint64_t v85 = (char *)v170 + v84;
                  uint64_t v86 = (char *)v64 + v84;
                  uint64_t v87 = sub_253B07160();
                  v88 = v86;
                  uint64_t v69 = (uint64_t)v170;
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v88, v87);
                  uint64_t v80 = v164;
                  swift_storeEnumTagMultiPayload();
                  uint64_t v65 = v161;
                }
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v69, 0, 1, v80);
              uint64_t v70 = v64;
            }
            uint64_t v89 = *(int *)(v65 + 20);
            uint64_t v90 = v69 + v89;
            uint64_t v91 = v65;
            uint64_t v92 = v69;
            uint64_t v93 = (char *)v70 + v89;
            uint64_t v94 = sub_253B07160();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v94 - 8) + 16))(v90, v93, v94);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v92, 0, 1, v91);
            uint64_t v53 = v179;
          }
          uint64_t v95 = *(int *)(v53 + 36);
          uint64_t v96 = (char *)v7 + v95;
          uint64_t v97 = (char *)v8 + v95;
          uint64_t v98 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16))(v96, v97, v98);
          uint64_t v11 = v182;
LABEL_44:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v11);
          goto LABEL_45;
        }
        uint64_t v38 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        __dsta = (void *)v28;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v38))
        {
          uint64_t v39 = sub_253462A5C(&qword_269CE2200);
          memcpy(v26, v27, *(void *)(*(void *)(v39 - 8) + 64));
LABEL_25:
          uint64_t v49 = *(int *)(v28 + 20);
          uint64_t v50 = &v26[v49];
          uint64_t v51 = &v27[v49];
          uint64_t v52 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, (uint64_t)__dsta);
          goto LABEL_26;
        }
        int v40 = swift_getEnumCaseMultiPayload();
        switch(v40)
        {
          case 6:
            uint64_t v42 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v42 - 8) + 16))(v26, v27, v42);
            break;
          case 5:
            unsigned char *v26 = *v27;
            uint64_t v43 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                         + 20);
            uint64_t v44 = &v26[v43];
            v168 = (void *)v38;
            uint64_t v45 = &v27[v43];
            uint64_t v46 = sub_253B07160();
            uint64_t v47 = v44;
            uint64_t v48 = v45;
            uint64_t v38 = (uint64_t)v168;
            uint64_t v28 = (uint64_t)__dsta;
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v46 - 8) + 16))(v47, v48, v46);
            break;
          case 1:
            uint64_t v41 = sub_253B08E50();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v41 - 8) + 16))(v26, v27, v41);
            break;
          default:
            memcpy(v26, v27, *(void *)(*(void *)(v38 - 8) + 64));
            goto LABEL_24;
        }
        swift_storeEnumTagMultiPayload();
LABEL_24:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v38);
        goto LABEL_25;
      case 3u:
        uint64_t v30 = sub_253B07160();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v7, v8, v30);
        goto LABEL_44;
      default:
        uint64_t v13 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v13;
        uint64_t v14 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v15 = *(int *)(v14 + 20);
        __dst = (void *)((char *)v7 + v15);
        uint64_t v177 = v14;
        uint64_t v16 = (void *)((char *)v8 + v15);
        uint64_t v17 = type metadata accessor for TranscriptProtoStatementID(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v17))
        {
          uint64_t v18 = sub_253462A5C(&qword_26B249528);
          memcpy(__dst, v16, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          *(_DWORD *)__dst = *(_DWORD *)v16;
          uint64_t v31 = v16[2];
          __dst[1] = v16[1];
          __dst[2] = v31;
          uint64_t v32 = *(int *)(v17 + 24);
          uint64_t v165 = (char *)v16 + v32;
          uint64_t v167 = (char *)__dst + v32;
          uint64_t v33 = sub_253B07160();
          uint64_t v160 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
          swift_bridgeObjectRetain();
          v160(v167, v165, v33);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v17);
        }
        uint64_t v34 = *(int *)(v177 + 24);
        uint64_t v35 = (char *)v7 + v34;
        uint64_t v36 = (char *)v8 + v34;
        uint64_t v37 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
        goto LABEL_44;
    }
  }
  uint64_t v12 = sub_253462A5C(&qword_269CE1B00);
  memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_45:
  uint64_t v99 = *(int *)(v9 + 20);
  uint64_t v100 = (char *)v7 + v99;
  uint64_t v101 = (char *)v8 + v99;
  uint64_t v102 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16))(v100, v101, v102);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_46:
  uint64_t v103 = v3[6];
  uint64_t v104 = &a1[v103];
  uint64_t v105 = &a2[v103];
  uint64_t v106 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v105, 1, v106))
  {
    uint64_t v107 = sub_253462A5C(&qword_269CE1AE0);
    memcpy(v104, v105, *(void *)(*(void *)(v107 - 8) + 64));
  }
  else
  {
    uint64_t v108 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v105, 1, v108))
    {
      uint64_t v109 = sub_253462A5C(&qword_269CE1B50);
      memcpy(v104, v105, *(void *)(*(void *)(v109 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v112 = v105[1];
          void *v104 = *v105;
          v104[1] = v112;
          uint64_t v111 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0)
                        + 20);
          goto LABEL_58;
        case 2u:
          uint64_t v113 = v105[1];
          void *v104 = *v105;
          v104[1] = v113;
          *((unsigned char *)v104 + 16) = *((unsigned char *)v105 + 16);
          uint64_t v114 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
          goto LABEL_57;
        case 3u:
          uint64_t v115 = v105[1];
          void *v104 = *v105;
          v104[1] = v115;
          *((unsigned char *)v104 + 16) = *((unsigned char *)v105 + 16);
          uint64_t v114 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
          goto LABEL_57;
        case 4u:
          uint64_t v116 = v105[1];
          void *v104 = *v105;
          v104[1] = v116;
          *((unsigned char *)v104 + 16) = *((unsigned char *)v105 + 16);
          uint64_t v114 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
          goto LABEL_57;
        case 5u:
          uint64_t v117 = v105[1];
          void *v104 = *v105;
          v104[1] = v117;
          *((unsigned char *)v104 + 16) = *((unsigned char *)v105 + 16);
          uint64_t v114 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
LABEL_57:
          uint64_t v111 = *(int *)(v114 + 24);
          goto LABEL_58;
        case 6u:
          uint64_t v119 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v105, 1, v119))
          {
            uint64_t v120 = sub_253462A5C(&qword_26B249528);
            memcpy(v104, v105, *(void *)(*(void *)(v120 - 8) + 64));
          }
          else
          {
            *(_DWORD *)uint64_t v104 = *(_DWORD *)v105;
            uint64_t v122 = v105[2];
            v104[1] = v105[1];
            v104[2] = v122;
            uint64_t v123 = *(int *)(v119 + 24);
            v187 = (char *)v104 + v123;
            uint64_t v184 = (char *)v105 + v123;
            uint64_t v124 = sub_253B07160();
            __dste = *(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16);
            swift_bridgeObjectRetain();
            __dste(v187, v184, v124);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v104, 0, 1, v119);
          }
          uint64_t v125 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
          uint64_t v126 = *(int *)(v125 + 20);
          uint64_t v127 = (char *)v104 + v126;
          uint64_t v128 = (char *)v105 + v126;
          *(void *)uint64_t v127 = *(void *)v128;
          v127[8] = v128[8];
          uint64_t v121 = *(int *)(v125 + 24);
          goto LABEL_64;
        case 7u:
          void *v104 = *v105;
          *((unsigned char *)v104 + 8) = *((unsigned char *)v105 + 8);
          uint64_t v121 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0)
                        + 20);
LABEL_64:
          v129 = (char *)v104 + v121;
          v130 = (char *)v105 + v121;
          uint64_t v131 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16))(v129, v130, v131);
          break;
        default:
          uint64_t v110 = v105[1];
          void *v104 = *v105;
          v104[1] = v110;
          *((_WORD *)v104 + 8) = *((_WORD *)v105 + 8);
          uint64_t v111 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
LABEL_58:
          v186 = (char *)v104 + v111;
          v183 = (char *)v105 + v111;
          uint64_t v118 = sub_253B07160();
          uint64_t v180 = *(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16);
          swift_bridgeObjectRetain();
          v180(v186, v183, v118);
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v104, 0, 1, v108);
    }
    uint64_t v132 = *(int *)(v106 + 20);
    uint64_t v133 = (char *)v104 + v132;
    uint64_t v134 = (char *)v105 + v132;
    uint64_t v135 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 16))(v133, v134, v135);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v104, 0, 1, v106);
  }
  uint64_t v136 = v3[7];
  uint64_t v137 = v3[8];
  uint64_t v138 = &a1[v136];
  uint64_t v139 = &a2[v136];
  uint64_t v140 = v139[1];
  *uint64_t v138 = *v139;
  v138[1] = v140;
  v141 = &a1[v137];
  uint64_t v142 = &a2[v137];
  uint64_t v143 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v142, 1, v143))
  {
    uint64_t v144 = sub_253462A5C(&qword_269CE1AD0);
    memcpy(v141, v142, *(void *)(*(void *)(v144 - 8) + 64));
  }
  else
  {
    uint64_t v145 = v142[1];
    void *v141 = *v142;
    v141[1] = v145;
    v141[2] = v142[2];
    uint64_t v146 = *(int *)(v143 + 24);
    uint64_t v188 = (char *)v141 + v146;
    uint64_t v185 = (char *)v142 + v146;
    uint64_t v147 = sub_253B07160();
    uint64_t v148 = v3;
    uint64_t v149 = *(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v149(v188, v185, v147);
    char v3 = v148;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v141, 0, 1, v143);
  }
  uint64_t v150 = v3[9];
  uint64_t v151 = &a1[v150];
  v152 = &a2[v150];
  uint64_t v153 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v153 - 8) + 16))(v151, v152, v153);
  return a1;
}

unsigned char *assignWithCopy for TranscriptProtoRequest(unsigned char *a1, unsigned char *a2, int *a3)
{
  char v3 = a3;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TranscriptProtoRequestContent(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      uint64_t v12 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v12))
      {
        uint64_t v13 = sub_253462A5C(&qword_269CE1B00);
        memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
        goto LABEL_84;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *uint64_t v7 = *v8;
          uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          __dsth = (char *)v8 + v29;
          uint64_t v431 = (char *)v7 + v29;
          uint64_t v449 = v12;
          uint64_t v30 = sub_253B07160();
          uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v32 = v30;
          uint64_t v12 = v449;
          v31(v431, __dsth, v32);
          goto LABEL_83;
        case 2u:
          uint64_t v450 = v12;
          *uint64_t v7 = *v8;
          v7[1] = v8[1];
          v7[2] = v8[2];
          v7[3] = v8[3];
          v432 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
          uint64_t v33 = v432[6];
          uint64_t v34 = (char *)v7 + v33;
          uint64_t v35 = (char *)v8 + v33;
          uint64_t v36 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v35, 1, v36))
          {
            uint64_t v37 = sub_253462A5C(&qword_269CE2140);
            memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
            goto LABEL_61;
          }
          uint64_t v60 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
          __dstb = (void *)v36;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v35, 1, v60))
          {
            uint64_t v61 = sub_253462A5C(&qword_269CE2200);
            memcpy(v34, v35, *(void *)(*(void *)(v61 - 8) + 64));
LABEL_60:
            uint64_t v99 = *(int *)(v36 + 20);
            uint64_t v100 = &v34[v99];
            uint64_t v101 = &v35[v99];
            uint64_t v102 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v102 - 8) + 16))(v100, v101, v102);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v34, 0, 1, (uint64_t)__dstb);
LABEL_61:
            uint64_t v103 = v432;
            uint64_t v104 = v432[7];
            uint64_t v105 = (void *)((char *)v7 + v104);
            uint64_t v106 = (void *)((char *)v8 + v104);
            uint64_t v107 = type metadata accessor for TranscriptProtoStatementID(0);
            __dstd = (int *)v107;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v106, 1, v107))
            {
              uint64_t v108 = sub_253462A5C(&qword_26B249528);
              memcpy(v105, v106, *(void *)(*(void *)(v108 - 8) + 64));
            }
            else
            {
              *(_DWORD *)uint64_t v105 = *(_DWORD *)v106;
              v105[1] = v106[1];
              v105[2] = v106[2];
              uint64_t v109 = *(int *)(v107 + 24);
              v397 = (char *)v106 + v109;
              uint64_t v405 = (char *)v105 + v109;
              uint64_t v110 = sub_253B07160();
              uint64_t v390 = *(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16);
              swift_bridgeObjectRetain();
              v390(v405, v397, v110);
              uint64_t v103 = v432;
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v105, 0, 1, v107);
            }
            uint64_t v111 = v103[8];
            uint64_t v112 = (char *)v7 + v111;
            uint64_t v113 = (void *)((char *)v8 + v111);
            uint64_t v114 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v113, 1, v114))
            {
              uint64_t v115 = sub_253462A5C(&qword_269CE2130);
              memcpy(v112, v113, *(void *)(*(void *)(v115 - 8) + 64));
            }
            else
            {
              uint64_t v406 = v112;
              uint64_t v116 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v113, 1, v116))
              {
                uint64_t v117 = sub_253462A5C(&qword_269CE2150);
                uint64_t v118 = (uint64_t)v406;
                memcpy(v406, v113, *(void *)(*(void *)(v117 - 8) + 64));
                uint64_t v119 = v113;
              }
              else
              {
                uint64_t v391 = v116;
                int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                if (EnumCaseMultiPayload == 1)
                {
                  *uint64_t v406 = *v113;
                  uint64_t v125 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                  __dstk = (char *)v406 + v125;
                  uint64_t v383 = (char *)v113 + v125;
                  uint64_t v126 = sub_253B07160();
                  uint64_t v375 = *(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v127 = v126;
                  uint64_t v118 = (uint64_t)v406;
                  v375(__dstk, v383, v127);
                  uint64_t v128 = v391;
                  swift_storeEnumTagMultiPayload();
                }
                else
                {
                  uint64_t v118 = (uint64_t)v406;
                  if (EnumCaseMultiPayload)
                  {
                    uint64_t v128 = v391;
                    memcpy(v406, v113, *(void *)(*(void *)(v391 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v382 = v114;
                    *uint64_t v406 = *v113;
                    v406[1] = v113[1];
                    uint64_t v121 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                    uint64_t v122 = *(int *)(v121 + 20);
                    uint64_t v374 = (void *)((char *)v406 + v122);
                    uint64_t v123 = (void *)((char *)v113 + v122);
                    swift_bridgeObjectRetain();
                    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v123, 1, (uint64_t)__dstd))
                    {
                      uint64_t v124 = sub_253462A5C(&qword_26B249528);
                      memcpy(v374, v123, *(void *)(*(void *)(v124 - 8) + 64));
                    }
                    else
                    {
                      *(_DWORD *)uint64_t v374 = *(_DWORD *)v123;
                      v374[1] = v123[1];
                      v374[2] = v123[2];
                      uint64_t v132 = __dstd[6];
                      uint64_t v369 = (char *)v123 + v132;
                      v371 = (char *)v374 + v132;
                      uint64_t v133 = sub_253B07160();
                      v366 = *(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v366(v371, v369, v133);
                      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v374, 0, 1, (uint64_t)__dstd);
                    }
                    uint64_t v134 = *(int *)(v121 + 24);
                    uint64_t v135 = (char *)v406 + v134;
                    uint64_t v136 = (char *)v113 + v134;
                    uint64_t v137 = sub_253B07160();
                    uint64_t v138 = v136;
                    uint64_t v118 = (uint64_t)v406;
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16))(v135, v138, v137);
                    uint64_t v128 = v391;
                    swift_storeEnumTagMultiPayload();
                    uint64_t v114 = v382;
                  }
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v118, 0, 1, v128);
                uint64_t v119 = v113;
              }
              uint64_t v139 = *(int *)(v114 + 20);
              uint64_t v140 = v118 + v139;
              uint64_t v141 = v114;
              uint64_t v142 = v118;
              uint64_t v143 = (char *)v119 + v139;
              uint64_t v144 = sub_253B07160();
              (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v144 - 8) + 16))(v140, v143, v144);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v142, 0, 1, v141);
              uint64_t v103 = v432;
            }
            uint64_t v145 = v103[9];
            uint64_t v146 = (char *)v7 + v145;
            uint64_t v147 = (char *)v8 + v145;
            uint64_t v148 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16))(v146, v147, v148);
            uint64_t v12 = v450;
LABEL_83:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v12);
LABEL_84:
            uint64_t v149 = *(int *)(v9 + 20);
            uint64_t v150 = (char *)v7 + v149;
            uint64_t v151 = (char *)v8 + v149;
            uint64_t v152 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 16))(v150, v151, v152);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
            goto LABEL_136;
          }
          int v79 = swift_getEnumCaseMultiPayload();
          switch(v79)
          {
            case 6:
              uint64_t v92 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v92 - 8) + 16))(v34, v35, v92);
              break;
            case 5:
              *uint64_t v34 = *v35;
              uint64_t v93 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                           + 20);
              uint64_t v94 = &v34[v93];
              v404 = (void *)v60;
              uint64_t v95 = &v35[v93];
              uint64_t v96 = sub_253B07160();
              uint64_t v97 = v94;
              uint64_t v98 = v95;
              uint64_t v60 = (uint64_t)v404;
              uint64_t v36 = (uint64_t)__dstb;
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v96 - 8) + 16))(v97, v98, v96);
              break;
            case 1:
              uint64_t v80 = sub_253B08E50();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v80 - 8) + 16))(v34, v35, v80);
              break;
            default:
              memcpy(v34, v35, *(void *)(*(void *)(v60 - 8) + 64));
              goto LABEL_59;
          }
          swift_storeEnumTagMultiPayload();
LABEL_59:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v34, 0, 1, v60);
          goto LABEL_60;
        case 3u:
          uint64_t v38 = sub_253B07160();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v38 - 8) + 16))(v7, v8, v38);
          goto LABEL_83;
        default:
          *uint64_t v7 = *v8;
          v7[1] = v8[1];
          uint64_t v23 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          uint64_t v24 = *(int *)(v23 + 20);
          __dsta = (void *)((char *)v7 + v24);
          uint64_t v430 = (int *)v23;
          uint64_t v25 = (void *)((char *)v8 + v24);
          uint64_t v26 = type metadata accessor for TranscriptProtoStatementID(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v26))
          {
            uint64_t v27 = sub_253462A5C(&qword_26B249528);
            memcpy(__dsta, v25, *(void *)(*(void *)(v27 - 8) + 64));
          }
          else
          {
            *(_DWORD *)__dsta = *(_DWORD *)v25;
            __dsta[1] = v25[1];
            __dsta[2] = v25[2];
            uint64_t v54 = *(int *)(v26 + 24);
            uint64_t v395 = (char *)v25 + v54;
            v401 = (char *)__dsta + v54;
            uint64_t v55 = sub_253B07160();
            uint64_t v380 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
            swift_bridgeObjectRetain();
            v380(v401, v395, v55);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v26);
          }
          uint64_t v56 = v430[6];
          uint64_t v57 = (char *)v7 + v56;
          uint64_t v58 = (char *)v8 + v56;
          uint64_t v59 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
          goto LABEL_83;
      }
    }
LABEL_7:
    uint64_t v14 = sub_253462A5C(&qword_269CE1AF0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_136;
  }
  if (v11)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  uint64_t v15 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v15);
  int v17 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *uint64_t v7 = *v8;
          uint64_t v44 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          __dsti = (char *)v8 + v44;
          uint64_t v434 = (char *)v7 + v44;
          uint64_t v466 = v15;
          uint64_t v45 = sub_253B07160();
          uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v47 = v45;
          uint64_t v15 = v466;
          v46(v434, __dsti, v47);
          goto LABEL_109;
        case 2u:
          uint64_t v467 = v15;
          *uint64_t v7 = *v8;
          v7[1] = v8[1];
          v7[2] = v8[2];
          v7[3] = v8[3];
          uint64_t v435 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
          uint64_t v48 = v435[6];
          uint64_t v49 = (char *)v7 + v48;
          uint64_t v50 = (char *)v8 + v48;
          uint64_t v51 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v50, 1, v51))
          {
            uint64_t v52 = sub_253462A5C(&qword_269CE2140);
            memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
LABEL_91:
            uint64_t v164 = v435;
            uint64_t v165 = v435[7];
            uint64_t v166 = (void *)((char *)v7 + v165);
            uint64_t v167 = (void *)((char *)v8 + v165);
            uint64_t v168 = type metadata accessor for TranscriptProtoStatementID(0);
            __dstf = (int *)v168;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v167, 1, v168))
            {
              uint64_t v169 = sub_253462A5C(&qword_26B249528);
              memcpy(v166, v167, *(void *)(*(void *)(v169 - 8) + 64));
            }
            else
            {
              *(_DWORD *)uint64_t v166 = *(_DWORD *)v167;
              v166[1] = v167[1];
              v166[2] = v167[2];
              uint64_t v170 = *(int *)(v168 + 24);
              uint64_t v398 = (char *)v167 + v170;
              uint64_t v409 = (char *)v166 + v170;
              uint64_t v171 = sub_253B07160();
              v392 = *(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 16);
              swift_bridgeObjectRetain();
              v392(v409, v398, v171);
              uint64_t v164 = v435;
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v166, 0, 1, v168);
            }
            uint64_t v172 = v164[8];
            v173 = (char *)v7 + v172;
            uint64_t v174 = (void *)((char *)v8 + v172);
            uint64_t v175 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v174, 1, v175))
            {
              uint64_t v176 = sub_253462A5C(&qword_269CE2130);
              memcpy(v173, v174, *(void *)(*(void *)(v176 - 8) + 64));
            }
            else
            {
              uint64_t v410 = v173;
              uint64_t v177 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v174, 1, v177))
              {
                uint64_t v178 = sub_253462A5C(&qword_269CE2150);
                uint64_t v179 = (uint64_t)v410;
                memcpy(v410, v174, *(void *)(*(void *)(v178 - 8) + 64));
                uint64_t v180 = v174;
              }
              else
              {
                uint64_t v393 = v177;
                int v181 = swift_getEnumCaseMultiPayload();
                if (v181 == 1)
                {
                  *uint64_t v410 = *v174;
                  uint64_t v186 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                  __dstl = (char *)v410 + v186;
                  v385 = (char *)v174 + v186;
                  uint64_t v187 = sub_253B07160();
                  v377 = *(void (**)(char *, char *, uint64_t))(*(void *)(v187 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v188 = v187;
                  uint64_t v179 = (uint64_t)v410;
                  v377(__dstl, v385, v188);
                  uint64_t v189 = v393;
                  swift_storeEnumTagMultiPayload();
                }
                else
                {
                  uint64_t v179 = (uint64_t)v410;
                  if (v181)
                  {
                    uint64_t v189 = v393;
                    memcpy(v410, v174, *(void *)(*(void *)(v393 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v384 = v175;
                    *uint64_t v410 = *v174;
                    v410[1] = v174[1];
                    uint64_t v182 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                    uint64_t v183 = *(int *)(v182 + 20);
                    v376 = (void *)((char *)v410 + v183);
                    uint64_t v184 = (void *)((char *)v174 + v183);
                    swift_bridgeObjectRetain();
                    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v184, 1, (uint64_t)__dstf))
                    {
                      uint64_t v185 = sub_253462A5C(&qword_26B249528);
                      memcpy(v376, v184, *(void *)(*(void *)(v185 - 8) + 64));
                    }
                    else
                    {
                      *(_DWORD *)v376 = *(_DWORD *)v184;
                      v376[1] = v184[1];
                      v376[2] = v184[2];
                      uint64_t v190 = __dstf[6];
                      v370 = (char *)v184 + v190;
                      uint64_t v372 = (char *)v376 + v190;
                      uint64_t v191 = sub_253B07160();
                      v367 = *(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v367(v372, v370, v191);
                      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v376, 0, 1, (uint64_t)__dstf);
                    }
                    uint64_t v192 = *(int *)(v182 + 24);
                    uint64_t v193 = (char *)v410 + v192;
                    uint64_t v194 = (char *)v174 + v192;
                    uint64_t v195 = sub_253B07160();
                    v196 = v194;
                    uint64_t v179 = (uint64_t)v410;
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 16))(v193, v196, v195);
                    uint64_t v189 = v393;
                    swift_storeEnumTagMultiPayload();
                    uint64_t v175 = v384;
                  }
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v179, 0, 1, v189);
                uint64_t v180 = v174;
              }
              uint64_t v197 = *(int *)(v175 + 20);
              uint64_t v198 = v179 + v197;
              uint64_t v199 = v175;
              uint64_t v200 = v179;
              uint64_t v201 = (char *)v180 + v197;
              uint64_t v202 = sub_253B07160();
              (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v202 - 8) + 16))(v198, v201, v202);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v200, 0, 1, v199);
              uint64_t v164 = v435;
            }
            uint64_t v203 = v164[9];
            uint64_t v204 = (char *)v7 + v203;
            uint64_t v205 = (char *)v8 + v203;
            uint64_t v206 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v206 - 8) + 16))(v204, v205, v206);
            uint64_t v15 = v467;
LABEL_109:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v15);
            goto LABEL_135;
          }
          uint64_t v77 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
          __dstc = (void *)v51;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v50, 1, v77))
          {
            uint64_t v78 = sub_253462A5C(&qword_269CE2200);
            memcpy(v49, v50, *(void *)(*(void *)(v78 - 8) + 64));
LABEL_90:
            uint64_t v160 = *(int *)(v51 + 20);
            uint64_t v161 = &v49[v160];
            uint64_t v162 = &v50[v160];
            uint64_t v163 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v163 - 8) + 16))(v161, v162, v163);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v49, 0, 1, (uint64_t)__dstc);
            goto LABEL_91;
          }
          int v90 = swift_getEnumCaseMultiPayload();
          switch(v90)
          {
            case 6:
              uint64_t v153 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v153 - 8) + 16))(v49, v50, v153);
              break;
            case 5:
              *uint64_t v49 = *v50;
              uint64_t v154 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                            + 20);
              uint64_t v155 = &v49[v154];
              uint64_t v408 = (void *)v77;
              uint64_t v156 = &v50[v154];
              uint64_t v157 = sub_253B07160();
              v158 = v155;
              uint64_t v159 = v156;
              uint64_t v77 = (uint64_t)v408;
              uint64_t v51 = (uint64_t)__dstc;
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v157 - 8) + 16))(v158, v159, v157);
              break;
            case 1:
              uint64_t v91 = sub_253B08E50();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v91 - 8) + 16))(v49, v50, v91);
              break;
            default:
              memcpy(v49, v50, *(void *)(*(void *)(v77 - 8) + 64));
              goto LABEL_89;
          }
          swift_storeEnumTagMultiPayload();
LABEL_89:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v49, 0, 1, v77);
          goto LABEL_90;
        case 3u:
          uint64_t v53 = sub_253B07160();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16))(v7, v8, v53);
          goto LABEL_109;
        default:
          *uint64_t v7 = *v8;
          v7[1] = v8[1];
          uint64_t v18 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          uint64_t v19 = *(int *)(v18 + 20);
          __dst = (void *)((char *)v7 + v19);
          uint64_t v429 = (int *)v18;
          uint64_t v20 = (void *)((char *)v8 + v19);
          uint64_t v21 = type metadata accessor for TranscriptProtoStatementID(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21))
          {
            uint64_t v22 = sub_253462A5C(&qword_26B249528);
            memcpy(__dst, v20, *(void *)(*(void *)(v22 - 8) + 64));
          }
          else
          {
            *(_DWORD *)__dst = *(_DWORD *)v20;
            __dst[1] = v20[1];
            __dst[2] = v20[2];
            uint64_t v62 = *(int *)(v21 + 24);
            v396 = (char *)v20 + v62;
            uint64_t v402 = (char *)__dst + v62;
            uint64_t v63 = sub_253B07160();
            uint64_t v381 = *(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16);
            swift_bridgeObjectRetain();
            v381(v402, v396, v63);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v21);
          }
          uint64_t v64 = v429[6];
          uint64_t v65 = (char *)v7 + v64;
          uint64_t v66 = (char *)v8 + v64;
          uint64_t v67 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
          goto LABEL_109;
      }
    }
    goto LABEL_18;
  }
  if (!v17)
  {
    if (a1 == a2) {
      goto LABEL_135;
    }
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v7 = *v8;
        uint64_t v68 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        v436 = (char *)v8 + v68;
        uint64_t v452 = (char *)v7 + v68;
        uint64_t v69 = sub_253B07160();
        uint64_t v70 = *(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16);
        swift_bridgeObjectRetain();
        v70(v452, v436, v69);
        goto LABEL_134;
      case 2u:
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        v7[3] = v8[3];
        uint64_t v453 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        uint64_t v71 = *(int *)(v453 + 24);
        long long v468 = (char *)v7 + v71;
        uint64_t v72 = (char *)v8 + v71;
        uint64_t v73 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        swift_bridgeObjectRetain();
        uint64_t v74 = v72;
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v72, 1, v73))
        {
          uint64_t v75 = sub_253462A5C(&qword_269CE2140);
          memcpy(v468, v72, *(void *)(*(void *)(v75 - 8) + 64));
LABEL_116:
          uint64_t v217 = v453;
          uint64_t v218 = *(int *)(v453 + 28);
          uint64_t v438 = (void *)((char *)v7 + v218);
          uint64_t v219 = (void *)((char *)v8 + v218);
          uint64_t v220 = type metadata accessor for TranscriptProtoStatementID(0);
          v411 = (int *)v220;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v219, 1, v220))
          {
            uint64_t v221 = sub_253462A5C(&qword_26B249528);
            memcpy(v438, v219, *(void *)(*(void *)(v221 - 8) + 64));
          }
          else
          {
            *(_DWORD *)uint64_t v438 = *(_DWORD *)v219;
            v438[1] = v219[1];
            v438[2] = v219[2];
            uint64_t v222 = *(int *)(v220 + 24);
            __dstm = (char *)v438 + v222;
            uint64_t v399 = (char *)v219 + v222;
            uint64_t v223 = sub_253B07160();
            uint64_t v386 = *(void (**)(char *, char *, uint64_t))(*(void *)(v223 - 8) + 16);
            swift_bridgeObjectRetain();
            v386(__dstm, v399, v223);
            uint64_t v217 = v453;
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v438, 0, 1, v220);
          }
          uint64_t v224 = *(int *)(v217 + 32);
          uint64_t v439 = (void *)((char *)v7 + v224);
          uint64_t v225 = (void *)((char *)v8 + v224);
          uint64_t v226 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v225, 1, v226))
          {
            uint64_t v227 = sub_253462A5C(&qword_269CE2130);
            memcpy(v439, v225, *(void *)(*(void *)(v227 - 8) + 64));
          }
          else
          {
            __dstg = (int *)v226;
            uint64_t v228 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v225, 1, v228))
            {
              uint64_t v229 = sub_253462A5C(&qword_269CE2150);
              uint64_t v230 = (uint64_t)v439;
              memcpy(v439, v225, *(void *)(*(void *)(v229 - 8) + 64));
            }
            else
            {
              uint64_t v394 = v228;
              uint64_t v400 = v225;
              int v231 = swift_getEnumCaseMultiPayload();
              uint64_t v230 = (uint64_t)v439;
              if (v231 == 1)
              {
                *uint64_t v439 = *v225;
                uint64_t v236 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                uint64_t v412 = (char *)v439 + v236;
                uint64_t v388 = (char *)v225 + v236;
                uint64_t v237 = sub_253B07160();
                uint64_t v378 = *(void (**)(char *, char *, uint64_t))(*(void *)(v237 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v238 = v237;
                uint64_t v230 = (uint64_t)v439;
                v378(v412, v388, v238);
                swift_storeEnumTagMultiPayload();
              }
              else if (v231)
              {
                memcpy(v439, v225, *(void *)(*(void *)(v228 - 8) + 64));
              }
              else
              {
                *uint64_t v439 = *v225;
                v439[1] = v225[1];
                uint64_t v387 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                uint64_t v232 = *(int *)(v387 + 20);
                uint64_t v233 = (void *)((char *)v439 + v232);
                v234 = (void *)((char *)v225 + v232);
                swift_bridgeObjectRetain();
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v234, 1, (uint64_t)v411))
                {
                  uint64_t v235 = sub_253462A5C(&qword_26B249528);
                  memcpy(v233, v234, *(void *)(*(void *)(v235 - 8) + 64));
                }
                else
                {
                  *(_DWORD *)uint64_t v233 = *(_DWORD *)v234;
                  v233[1] = v234[1];
                  v233[2] = v234[2];
                  uint64_t v239 = v411[6];
                  int v373 = (char *)v234 + v239;
                  uint64_t v379 = (char *)v233 + v239;
                  uint64_t v240 = sub_253B07160();
                  uint64_t v368 = *(void (**)(char *, char *, uint64_t))(*(void *)(v240 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v368(v379, v373, v240);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v233, 0, 1, (uint64_t)v411);
                }
                uint64_t v241 = *(int *)(v387 + 24);
                uint64_t v242 = (char *)v439 + v241;
                uint64_t v243 = (char *)v400 + v241;
                uint64_t v244 = sub_253B07160();
                v245 = v242;
                uint64_t v230 = (uint64_t)v439;
                uint64_t v225 = v400;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v244 - 8) + 16))(v245, v243, v244);
                uint64_t v228 = v394;
                swift_storeEnumTagMultiPayload();
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v230, 0, 1, v228);
            }
            uint64_t v246 = __dstg[5];
            uint64_t v247 = v230 + v246;
            uint64_t v248 = (char *)v225 + v246;
            uint64_t v249 = sub_253B07160();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v249 - 8) + 16))(v247, v248, v249);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v230, 0, 1, (uint64_t)__dstg);
            uint64_t v217 = v453;
          }
          uint64_t v250 = *(int *)(v217 + 36);
          uint64_t v251 = (char *)v7 + v250;
          uint64_t v252 = (char *)v8 + v250;
          uint64_t v253 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v253 - 8) + 16))(v251, v252, v253);
LABEL_134:
          swift_storeEnumTagMultiPayload();
          goto LABEL_135;
        }
        uint64_t v87 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        v437 = (void *)v73;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v74, 1, v87))
        {
          uint64_t v88 = sub_253462A5C(&qword_269CE2200);
          uint64_t v89 = (uint64_t)v468;
          memcpy(v468, v74, *(void *)(*(void *)(v88 - 8) + 64));
LABEL_115:
          uint64_t v214 = *(int *)(v73 + 20);
          uint64_t v469 = v89 + v214;
          uint64_t v215 = &v74[v214];
          uint64_t v216 = sub_253B07160();
          (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v216 - 8) + 16))(v469, v215, v216);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v89, 0, 1, (uint64_t)v437);
          goto LABEL_116;
        }
        uint64_t v407 = (void *)v87;
        int v129 = swift_getEnumCaseMultiPayload();
        __dste = v74;
        if (v129 == 6)
        {
          uint64_t v207 = sub_253B07160();
          uint64_t v89 = (uint64_t)v468;
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v207 - 8) + 16))(v468, v74, v207);
          uint64_t v131 = (uint64_t)v407;
        }
        else if (v129 == 5)
        {
          uint64_t v89 = (uint64_t)v468;
          *long long v468 = *v74;
          uint64_t v208 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          v209 = v74;
          uint64_t v210 = &v468[v208];
          uint64_t v211 = &v209[v208];
          uint64_t v212 = sub_253B07160();
          v213 = v211;
          uint64_t v73 = (uint64_t)v437;
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v212 - 8) + 16))(v210, v213, v212);
          uint64_t v131 = (uint64_t)v407;
        }
        else
        {
          uint64_t v89 = (uint64_t)v468;
          if (v129 != 1)
          {
            uint64_t v131 = (uint64_t)v407;
            memcpy(v468, __dste, *(void *)(*(v407 - 1) + 64));
            goto LABEL_114;
          }
          uint64_t v130 = sub_253B08E50();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v130 - 8) + 16))(v468, v74, v130);
          uint64_t v131 = (uint64_t)v407;
        }
        swift_storeEnumTagMultiPayload();
LABEL_114:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v89, 0, 1, v131);
        uint64_t v74 = __dste;
        goto LABEL_115;
      case 3u:
        uint64_t v76 = sub_253B07160();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v76 - 8) + 16))(v7, v8, v76);
        goto LABEL_134;
      default:
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        uint64_t v39 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v40 = *(int *)(v39 + 20);
        v433 = (void *)((char *)v7 + v40);
        uint64_t v451 = v39;
        uint64_t v41 = (void *)((char *)v8 + v40);
        uint64_t v42 = type metadata accessor for TranscriptProtoStatementID(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v41, 1, v42))
        {
          uint64_t v43 = sub_253462A5C(&qword_26B249528);
          memcpy(v433, v41, *(void *)(*(void *)(v43 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v433 = *(_DWORD *)v41;
          v433[1] = v41[1];
          v433[2] = v41[2];
          uint64_t v81 = *(int *)(v42 + 24);
          uint64_t v403 = (char *)v41 + v81;
          __dstj = (char *)v433 + v81;
          uint64_t v82 = sub_253B07160();
          v389 = *(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16);
          swift_bridgeObjectRetain();
          v389(__dstj, v403, v82);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v433, 0, 1, v42);
        }
        uint64_t v83 = *(int *)(v451 + 24);
        uint64_t v84 = (char *)v7 + v83;
        uint64_t v85 = (char *)v8 + v83;
        uint64_t v86 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v84, v85, v86);
        goto LABEL_134;
    }
  }
  sub_2536FA73C();
LABEL_18:
  uint64_t v28 = sub_253462A5C(&qword_269CE1B00);
  memcpy(v7, v8, *(void *)(*(void *)(v28 - 8) + 64));
LABEL_135:
  uint64_t v254 = *(int *)(v9 + 20);
  v255 = (char *)v7 + v254;
  uint64_t v256 = (char *)v8 + v254;
  uint64_t v257 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v257 - 8) + 24))(v255, v256, v257);
LABEL_136:
  uint64_t v258 = v3[6];
  uint64_t v259 = (uint64_t)&a1[v258];
  uint64_t v260 = (uint64_t)&a2[v258];
  uint64_t v261 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
  int v262 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v259, 1, v261);
  int v263 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v260, 1, v261);
  if (!v262)
  {
    if (v263)
    {
      sub_2536FA73C();
      goto LABEL_142;
    }
    uint64_t v267 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
    int v268 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v259, 1, v267);
    int v269 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v260, 1, v267);
    if (v268)
    {
      if (!v269)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *(void *)uint64_t v259 = *(void *)v260;
            *(void *)(v259 + 8) = *(void *)(v260 + 8);
            uint64_t v270 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0)
                          + 20);
            goto LABEL_171;
          case 2u:
            *(void *)uint64_t v259 = *(void *)v260;
            *(void *)(v259 + 8) = *(void *)(v260 + 8);
            *(unsigned char *)(v259 + 16) = *(unsigned char *)(v260 + 16);
            uint64_t v281 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
            goto LABEL_170;
          case 3u:
            *(void *)uint64_t v259 = *(void *)v260;
            *(void *)(v259 + 8) = *(void *)(v260 + 8);
            *(unsigned char *)(v259 + 16) = *(unsigned char *)(v260 + 16);
            uint64_t v281 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
            goto LABEL_170;
          case 4u:
            *(void *)uint64_t v259 = *(void *)v260;
            *(void *)(v259 + 8) = *(void *)(v260 + 8);
            *(unsigned char *)(v259 + 16) = *(unsigned char *)(v260 + 16);
            uint64_t v281 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
            goto LABEL_170;
          case 5u:
            *(void *)uint64_t v259 = *(void *)v260;
            *(void *)(v259 + 8) = *(void *)(v260 + 8);
            *(unsigned char *)(v259 + 16) = *(unsigned char *)(v260 + 16);
            uint64_t v281 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
LABEL_170:
            uint64_t v270 = *(int *)(v281 + 24);
            goto LABEL_171;
          case 6u:
            uint64_t v283 = type metadata accessor for TranscriptProtoStatementID(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v260, 1, v283))
            {
              uint64_t v284 = sub_253462A5C(&qword_26B249528);
              memcpy((void *)v259, (const void *)v260, *(void *)(*(void *)(v284 - 8) + 64));
            }
            else
            {
              *(_DWORD *)uint64_t v259 = *(_DWORD *)v260;
              *(void *)(v259 + 8) = *(void *)(v260 + 8);
              *(void *)(v259 + 16) = *(void *)(v260 + 16);
              uint64_t v318 = *(int *)(v283 + 24);
              uint64_t v479 = v259 + v318;
              uint64_t v463 = v260 + v318;
              uint64_t v319 = sub_253B07160();
              __dsto = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v319 - 8) + 16);
              swift_bridgeObjectRetain();
              __dsto(v479, v463, v319);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v259, 0, 1, v283);
            }
            uint64_t v320 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
            uint64_t v321 = *(int *)(v320 + 20);
            uint64_t v322 = v259 + v321;
            uint64_t v323 = v260 + v321;
            char v324 = *(unsigned char *)(v323 + 8);
            *(void *)uint64_t v322 = *(void *)v323;
            *(unsigned char *)(v322 + 8) = v324;
            uint64_t v286 = *(int *)(v320 + 24);
            goto LABEL_190;
          case 7u:
            uint64_t v285 = *(void *)v260;
            *(unsigned char *)(v259 + 8) = *(unsigned char *)(v260 + 8);
            *(void *)uint64_t v259 = v285;
            uint64_t v286 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0)
                          + 20);
LABEL_190:
            uint64_t v325 = v259 + v286;
            uint64_t v326 = v260 + v286;
            uint64_t v327 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v327 - 8) + 16))(v325, v326, v327);
            break;
          default:
            *(void *)uint64_t v259 = *(void *)v260;
            *(void *)(v259 + 8) = *(void *)(v260 + 8);
            *(unsigned char *)(v259 + 16) = *(unsigned char *)(v260 + 16);
            *(unsigned char *)(v259 + 17) = *(unsigned char *)(v260 + 17);
            uint64_t v270 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
LABEL_171:
            uint64_t v472 = v259 + v270;
            uint64_t v456 = v260 + v270;
            uint64_t v282 = sub_253B07160();
            uint64_t v442 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v282 - 8) + 16);
            swift_bridgeObjectRetain();
            v442(v472, v456, v282);
            break;
        }
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v259, 0, 1, v267);
        goto LABEL_195;
      }
    }
    else
    {
      if (!v269)
      {
        if (a1 != a2)
        {
          sub_2536FA73C();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *(void *)uint64_t v259 = *(void *)v260;
              *(void *)(v259 + 8) = *(void *)(v260 + 8);
              uint64_t v301 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0)
                            + 20);
              uint64_t v474 = v259 + v301;
              uint64_t v458 = v260 + v301;
              uint64_t v302 = sub_253B07160();
              uint64_t v443 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v302 - 8) + 16);
              swift_bridgeObjectRetain();
              v443(v474, v458, v302);
              break;
            case 2u:
              *(void *)uint64_t v259 = *(void *)v260;
              *(void *)(v259 + 8) = *(void *)(v260 + 8);
              *(unsigned char *)(v259 + 16) = *(unsigned char *)(v260 + 16);
              uint64_t v303 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0) + 24);
              uint64_t v475 = v259 + v303;
              uint64_t v459 = v260 + v303;
              uint64_t v304 = sub_253B07160();
              uint64_t v444 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v304 - 8) + 16);
              swift_bridgeObjectRetain();
              v444(v475, v459, v304);
              break;
            case 3u:
              *(void *)uint64_t v259 = *(void *)v260;
              *(void *)(v259 + 8) = *(void *)(v260 + 8);
              *(unsigned char *)(v259 + 16) = *(unsigned char *)(v260 + 16);
              uint64_t v305 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0) + 24);
              uint64_t v476 = v259 + v305;
              uint64_t v460 = v260 + v305;
              uint64_t v306 = sub_253B07160();
              v445 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v306 - 8) + 16);
              swift_bridgeObjectRetain();
              v445(v476, v460, v306);
              break;
            case 4u:
              *(void *)uint64_t v259 = *(void *)v260;
              *(void *)(v259 + 8) = *(void *)(v260 + 8);
              *(unsigned char *)(v259 + 16) = *(unsigned char *)(v260 + 16);
              uint64_t v307 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0) + 24);
              uint64_t v477 = v259 + v307;
              uint64_t v461 = v260 + v307;
              uint64_t v308 = sub_253B07160();
              v446 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v308 - 8) + 16);
              swift_bridgeObjectRetain();
              v446(v477, v461, v308);
              break;
            case 5u:
              *(void *)uint64_t v259 = *(void *)v260;
              *(void *)(v259 + 8) = *(void *)(v260 + 8);
              *(unsigned char *)(v259 + 16) = *(unsigned char *)(v260 + 16);
              uint64_t v309 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0) + 24);
              uint64_t v478 = v259 + v309;
              uint64_t v462 = v260 + v309;
              uint64_t v310 = sub_253B07160();
              uint64_t v447 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v310 - 8) + 16);
              swift_bridgeObjectRetain();
              v447(v478, v462, v310);
              break;
            case 6u:
              uint64_t v311 = type metadata accessor for TranscriptProtoStatementID(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v260, 1, v311))
              {
                uint64_t v312 = sub_253462A5C(&qword_26B249528);
                memcpy((void *)v259, (const void *)v260, *(void *)(*(void *)(v312 - 8) + 64));
              }
              else
              {
                *(_DWORD *)uint64_t v259 = *(_DWORD *)v260;
                *(void *)(v259 + 8) = *(void *)(v260 + 8);
                *(void *)(v259 + 16) = *(void *)(v260 + 16);
                uint64_t v328 = *(int *)(v311 + 24);
                uint64_t v480 = v259 + v328;
                uint64_t v464 = v260 + v328;
                uint64_t v329 = sub_253B07160();
                uint64_t v448 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v329 - 8) + 16);
                swift_bridgeObjectRetain();
                v448(v480, v464, v329);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v259, 0, 1, v311);
              }
              uint64_t v330 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
              uint64_t v331 = *(int *)(v330 + 20);
              uint64_t v332 = v259 + v331;
              uint64_t v333 = v260 + v331;
              char v334 = *(unsigned char *)(v333 + 8);
              *(void *)uint64_t v332 = *(void *)v333;
              *(unsigned char *)(v332 + 8) = v334;
              uint64_t v335 = *(int *)(v330 + 24);
              uint64_t v336 = v259 + v335;
              uint64_t v337 = v260 + v335;
              uint64_t v338 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v338 - 8) + 16))(v336, v337, v338);
              break;
            case 7u:
              uint64_t v313 = *(void *)v260;
              *(unsigned char *)(v259 + 8) = *(unsigned char *)(v260 + 8);
              *(void *)uint64_t v259 = v313;
              uint64_t v314 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0)
                            + 20);
              uint64_t v315 = v259 + v314;
              uint64_t v316 = v260 + v314;
              uint64_t v317 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v317 - 8) + 16))(v315, v316, v317);
              break;
            default:
              *(void *)uint64_t v259 = *(void *)v260;
              *(void *)(v259 + 8) = *(void *)(v260 + 8);
              *(unsigned char *)(v259 + 16) = *(unsigned char *)(v260 + 16);
              *(unsigned char *)(v259 + 17) = *(unsigned char *)(v260 + 17);
              uint64_t v273 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
              uint64_t v470 = v259 + v273;
              uint64_t v454 = v260 + v273;
              uint64_t v274 = sub_253B07160();
              v440 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v274 - 8) + 16);
              swift_bridgeObjectRetain();
              v440(v470, v454, v274);
              break;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_195;
      }
      sub_2536FA73C();
    }
    uint64_t v272 = sub_253462A5C(&qword_269CE1B50);
    memcpy((void *)v259, (const void *)v260, *(void *)(*(void *)(v272 - 8) + 64));
LABEL_195:
    uint64_t v339 = *(int *)(v261 + 20);
    uint64_t v340 = v259 + v339;
    uint64_t v341 = v260 + v339;
    uint64_t v342 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v342 - 8) + 24))(v340, v341, v342);
    goto LABEL_196;
  }
  if (v263)
  {
LABEL_142:
    uint64_t v266 = sub_253462A5C(&qword_269CE1AE0);
    memcpy((void *)v259, (const void *)v260, *(void *)(*(void *)(v266 - 8) + 64));
    goto LABEL_196;
  }
  uint64_t v264 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v260, 1, v264))
  {
    uint64_t v265 = sub_253462A5C(&qword_269CE1B50);
    memcpy((void *)v259, (const void *)v260, *(void *)(*(void *)(v265 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)uint64_t v259 = *(void *)v260;
        *(void *)(v259 + 8) = *(void *)(v260 + 8);
        uint64_t v271 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0)
                      + 20);
        goto LABEL_161;
      case 2u:
        *(void *)uint64_t v259 = *(void *)v260;
        *(void *)(v259 + 8) = *(void *)(v260 + 8);
        *(unsigned char *)(v259 + 16) = *(unsigned char *)(v260 + 16);
        uint64_t v275 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
        goto LABEL_160;
      case 3u:
        *(void *)uint64_t v259 = *(void *)v260;
        *(void *)(v259 + 8) = *(void *)(v260 + 8);
        *(unsigned char *)(v259 + 16) = *(unsigned char *)(v260 + 16);
        uint64_t v275 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
        goto LABEL_160;
      case 4u:
        *(void *)uint64_t v259 = *(void *)v260;
        *(void *)(v259 + 8) = *(void *)(v260 + 8);
        *(unsigned char *)(v259 + 16) = *(unsigned char *)(v260 + 16);
        uint64_t v275 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
        goto LABEL_160;
      case 5u:
        *(void *)uint64_t v259 = *(void *)v260;
        *(void *)(v259 + 8) = *(void *)(v260 + 8);
        *(unsigned char *)(v259 + 16) = *(unsigned char *)(v260 + 16);
        uint64_t v275 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
LABEL_160:
        uint64_t v271 = *(int *)(v275 + 24);
        goto LABEL_161;
      case 6u:
        uint64_t v277 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v260, 1, v277))
        {
          uint64_t v278 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)v259, (const void *)v260, *(void *)(*(void *)(v278 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v259 = *(_DWORD *)v260;
          *(void *)(v259 + 8) = *(void *)(v260 + 8);
          *(void *)(v259 + 16) = *(void *)(v260 + 16);
          uint64_t v287 = *(int *)(v277 + 24);
          uint64_t v473 = v259 + v287;
          uint64_t v457 = v260 + v287;
          uint64_t v288 = sub_253B07160();
          __dstn = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v288 - 8) + 16);
          swift_bridgeObjectRetain();
          __dstn(v473, v457, v288);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v259, 0, 1, v277);
        }
        uint64_t v289 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
        uint64_t v290 = *(int *)(v289 + 20);
        uint64_t v291 = v259 + v290;
        uint64_t v292 = v260 + v290;
        char v293 = *(unsigned char *)(v292 + 8);
        *(void *)uint64_t v291 = *(void *)v292;
        *(unsigned char *)(v291 + 8) = v293;
        uint64_t v280 = *(int *)(v289 + 24);
        goto LABEL_177;
      case 7u:
        uint64_t v279 = *(void *)v260;
        *(unsigned char *)(v259 + 8) = *(unsigned char *)(v260 + 8);
        *(void *)uint64_t v259 = v279;
        uint64_t v280 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0)
                      + 20);
LABEL_177:
        uint64_t v294 = v259 + v280;
        uint64_t v295 = v260 + v280;
        uint64_t v296 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v296 - 8) + 16))(v294, v295, v296);
        break;
      default:
        *(void *)uint64_t v259 = *(void *)v260;
        *(void *)(v259 + 8) = *(void *)(v260 + 8);
        *(unsigned char *)(v259 + 16) = *(unsigned char *)(v260 + 16);
        *(unsigned char *)(v259 + 17) = *(unsigned char *)(v260 + 17);
        uint64_t v271 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
LABEL_161:
        uint64_t v471 = v259 + v271;
        uint64_t v455 = v260 + v271;
        uint64_t v276 = sub_253B07160();
        v441 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v276 - 8) + 16);
        swift_bridgeObjectRetain();
        v441(v471, v455, v276);
        break;
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v259, 0, 1, v264);
  }
  uint64_t v297 = *(int *)(v261 + 20);
  uint64_t v298 = v259 + v297;
  uint64_t v299 = v260 + v297;
  uint64_t v300 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v300 - 8) + 16))(v298, v299, v300);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v259, 0, 1, v261);
LABEL_196:
  uint64_t v343 = v3[7];
  v344 = &a1[v343];
  v345 = &a2[v343];
  void *v344 = *v345;
  v344[1] = v345[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v346 = v3[8];
  uint64_t v347 = &a1[v346];
  uint64_t v348 = &a2[v346];
  uint64_t v349 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  int v350 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v347, 1, v349);
  int v351 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v348, 1, v349);
  if (!v350)
  {
    if (!v351)
    {
      *uint64_t v347 = *v348;
      v347[1] = v348[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v347[2] = v348[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v362 = *(int *)(v349 + 24);
      v363 = (char *)v347 + v362;
      uint64_t v364 = (char *)v348 + v362;
      uint64_t v365 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v365 - 8) + 24))(v363, v364, v365);
      goto LABEL_202;
    }
    sub_2536FA73C();
    goto LABEL_201;
  }
  if (v351)
  {
LABEL_201:
    uint64_t v356 = sub_253462A5C(&qword_269CE1AD0);
    memcpy(v347, v348, *(void *)(*(void *)(v356 - 8) + 64));
    goto LABEL_202;
  }
  *uint64_t v347 = *v348;
  v347[1] = v348[1];
  v347[2] = v348[2];
  uint64_t v352 = *(int *)(v349 + 24);
  uint64_t v481 = (char *)v347 + v352;
  v465 = (char *)v348 + v352;
  uint64_t v353 = sub_253B07160();
  uint64_t v354 = v3;
  uint64_t v355 = *(void (**)(char *, char *, uint64_t))(*(void *)(v353 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v355(v481, v465, v353);
  char v3 = v354;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v347, 0, 1, v349);
LABEL_202:
  uint64_t v357 = v3[9];
  uint64_t v358 = &a1[v357];
  uint64_t v359 = &a2[v357];
  uint64_t v360 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v360 - 8) + 24))(v358, v359, v360);
  return a1;
}

unsigned char *initializeWithTake for TranscriptProtoRequest(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TranscriptProtoRequestContent(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE1AF0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_48;
  }
  uint64_t v11 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v11))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)uint64_t v7 = *(void *)v8;
        uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        uint64_t v19 = (char *)v7 + v18;
        uint64_t v20 = (char *)v8 + v18;
        uint64_t v21 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
        goto LABEL_46;
      case 2u:
        long long v22 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v22;
        v158 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        uint64_t v23 = v158[6];
        uint64_t v24 = (char *)v7 + v23;
        uint64_t v25 = (char *)v8 + v23;
        uint64_t v26 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v26))
        {
          uint64_t v27 = sub_253462A5C(&qword_269CE2140);
          memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
LABEL_28:
          uint64_t v55 = v158[7];
          uint64_t v154 = (_DWORD *)((char *)v7 + v55);
          uint64_t v56 = (_DWORD *)((char *)v8 + v55);
          uint64_t v57 = type metadata accessor for TranscriptProtoStatementID(0);
          uint64_t v156 = v11;
          uint64_t v148 = v57;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v56, 1, v57))
          {
            uint64_t v58 = sub_253462A5C(&qword_26B249528);
            memcpy(v154, v56, *(void *)(*(void *)(v58 - 8) + 64));
          }
          else
          {
            _DWORD *v154 = *v56;
            *(_OWORD *)(v154 + 2) = *(_OWORD *)(v56 + 2);
            uint64_t v59 = *(int *)(v57 + 24);
            uint64_t v60 = (char *)v154 + v59;
            uint64_t v61 = (char *)v56 + v59;
            uint64_t v62 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v154, 0, 1, v57);
          }
          uint64_t v63 = v158;
          uint64_t v64 = v158[8];
          uint64_t v155 = (void *)((char *)v7 + v64);
          uint64_t v65 = (void *)((char *)v8 + v64);
          uint64_t v66 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v65, 1, v66))
          {
            uint64_t v67 = sub_253462A5C(&qword_269CE2130);
            memcpy(v155, v65, *(void *)(*(void *)(v67 - 8) + 64));
          }
          else
          {
            __dsta = (int *)v66;
            uint64_t v68 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v65, 1, v68))
            {
              uint64_t v69 = sub_253462A5C(&qword_269CE2150);
              uint64_t v70 = (uint64_t)v155;
              memcpy(v155, v65, *(void *)(*(void *)(v69 - 8) + 64));
            }
            else
            {
              uint64_t v145 = v68;
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              uint64_t v70 = (uint64_t)v155;
              if (EnumCaseMultiPayload == 1)
              {
                *uint64_t v155 = *v65;
                uint64_t v76 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                uint64_t v77 = (char *)v155 + v76;
                uint64_t v78 = (char *)v65 + v76;
                uint64_t v79 = sub_253B07160();
                uint64_t v80 = v77;
                uint64_t v70 = (uint64_t)v155;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v80, v78, v79);
                uint64_t v81 = v145;
                swift_storeEnumTagMultiPayload();
              }
              else if (EnumCaseMultiPayload)
              {
                uint64_t v81 = v145;
                memcpy(v155, v65, *(void *)(*(void *)(v145 - 8) + 64));
              }
              else
              {
                *(_OWORD *)uint64_t v155 = *(_OWORD *)v65;
                uint64_t v72 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                uint64_t v73 = *(int *)(v72 + 20);
                uint64_t v143 = (_DWORD *)((char *)v155 + v73);
                uint64_t v74 = (_DWORD *)((char *)v65 + v73);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v65 + v73, 1, v148))
                {
                  uint64_t v75 = sub_253462A5C(&qword_26B249528);
                  memcpy(v143, v74, *(void *)(*(void *)(v75 - 8) + 64));
                }
                else
                {
                  *uint64_t v143 = *v74;
                  *(_OWORD *)(v143 + 2) = *(_OWORD *)(v74 + 2);
                  uint64_t v82 = *(int *)(v148 + 24);
                  uint64_t v142 = v72;
                  uint64_t v83 = (char *)v143 + v82;
                  uint64_t v84 = (char *)v74 + v82;
                  uint64_t v85 = sub_253B07160();
                  uint64_t v86 = v83;
                  uint64_t v72 = v142;
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 32))(v86, v84, v85);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v143, 0, 1, v148);
                }
                uint64_t v87 = *(int *)(v72 + 24);
                uint64_t v88 = (char *)v155 + v87;
                uint64_t v89 = (char *)v65 + v87;
                uint64_t v90 = sub_253B07160();
                uint64_t v91 = v88;
                uint64_t v70 = (uint64_t)v155;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 32))(v91, v89, v90);
                uint64_t v81 = v145;
                swift_storeEnumTagMultiPayload();
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v70, 0, 1, v81);
            }
            uint64_t v92 = __dsta[5];
            uint64_t v159 = v70 + v92;
            uint64_t v93 = (char *)v65 + v92;
            uint64_t v94 = sub_253B07160();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v94 - 8) + 32))(v159, v93, v94);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v70, 0, 1, (uint64_t)__dsta);
            uint64_t v63 = v158;
          }
          uint64_t v95 = v63[9];
          uint64_t v96 = (char *)v7 + v95;
          uint64_t v97 = (char *)v8 + v95;
          uint64_t v98 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 32))(v96, v97, v98);
          uint64_t v11 = v156;
LABEL_46:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v11);
          goto LABEL_47;
        }
        __dst = v24;
        uint64_t v153 = (int *)v26;
        uint64_t v36 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        uint64_t v37 = v25;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v36))
        {
          uint64_t v38 = sub_253462A5C(&qword_269CE2200);
          uint64_t v39 = (uint64_t)__dst;
          memcpy(__dst, v37, *(void *)(*(void *)(v38 - 8) + 64));
LABEL_27:
          uint64_t v52 = v153[5];
          __dstb = (void *)(v39 + v52);
          uint64_t v53 = &v37[v52];
          uint64_t v54 = sub_253B07160();
          (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v54 - 8) + 32))(__dstb, v53, v54);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v39, 0, 1, (uint64_t)v153);
          goto LABEL_28;
        }
        int v40 = swift_getEnumCaseMultiPayload();
        uint64_t v41 = v36;
        uint64_t v147 = v37;
        switch(v40)
        {
          case 6:
            uint64_t v44 = sub_253B07160();
            uint64_t v43 = (uint64_t)__dst;
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v44 - 8) + 32))(__dst, v37, v44);
            break;
          case 5:
            uint64_t v146 = v36;
            uint64_t v45 = v37;
            uint64_t v43 = (uint64_t)__dst;
            unsigned char *__dst = *v37;
            uint64_t v46 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                         + 20);
            uint64_t v47 = &__dst[v46];
            uint64_t v144 = &v45[v46];
            uint64_t v48 = sub_253B07160();
            uint64_t v49 = v47;
            uint64_t v50 = v146;
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v48 - 8) + 32))(v49, v144, v48);
            swift_storeEnumTagMultiPayload();
LABEL_26:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v43, 0, 1, v50);
            uint64_t v39 = v43;
            uint64_t v37 = v147;
            goto LABEL_27;
          case 1:
            uint64_t v42 = sub_253B08E50();
            uint64_t v43 = (uint64_t)__dst;
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v42 - 8) + 32))(__dst, v37, v42);
            break;
          default:
            size_t v51 = *(void *)(*(void *)(v36 - 8) + 64);
            uint64_t v43 = (uint64_t)__dst;
            memcpy(__dst, v37, v51);
            goto LABEL_25;
        }
        swift_storeEnumTagMultiPayload();
LABEL_25:
        uint64_t v50 = v41;
        goto LABEL_26;
      case 3u:
        uint64_t v28 = sub_253B07160();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v28 - 8) + 32))(v7, v8, v28);
        goto LABEL_46;
      default:
        *uint64_t v7 = *v8;
        uint64_t v157 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v13 = *(int *)(v157 + 20);
        uint64_t v14 = (_DWORD *)((char *)v7 + v13);
        uint64_t v15 = (_DWORD *)((char *)v8 + v13);
        uint64_t v16 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16))
        {
          uint64_t v17 = sub_253462A5C(&qword_26B249528);
          memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          *uint64_t v14 = *v15;
          *(_OWORD *)(v14 + 2) = *(_OWORD *)(v15 + 2);
          uint64_t v29 = *(int *)(v16 + 24);
          uint64_t v152 = (char *)v14 + v29;
          uint64_t v30 = (char *)v15 + v29;
          uint64_t v31 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v152, v30, v31);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v14, 0, 1, v16);
        }
        uint64_t v32 = *(int *)(v157 + 24);
        uint64_t v33 = (char *)v7 + v32;
        uint64_t v34 = (char *)v8 + v32;
        uint64_t v35 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
        goto LABEL_46;
    }
  }
  uint64_t v12 = sub_253462A5C(&qword_269CE1B00);
  memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_47:
  uint64_t v99 = *(int *)(v9 + 20);
  uint64_t v100 = (char *)v7 + v99;
  uint64_t v101 = (char *)v8 + v99;
  uint64_t v102 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v100, v101, v102);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_48:
  uint64_t v103 = a3[6];
  uint64_t v104 = &a1[v103];
  uint64_t v105 = &a2[v103];
  uint64_t v106 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v105, 1, v106))
  {
    uint64_t v107 = sub_253462A5C(&qword_269CE1AE0);
    memcpy(v104, v105, *(void *)(*(void *)(v107 - 8) + 64));
  }
  else
  {
    uint64_t v108 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v105, 1, v108))
    {
      uint64_t v109 = sub_253462A5C(&qword_269CE1B50);
      memcpy(v104, v105, *(void *)(*(void *)(v109 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          _OWORD *v104 = *v105;
          uint64_t v111 = type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0);
          goto LABEL_62;
        case 2u:
          _OWORD *v104 = *v105;
          *((unsigned char *)v104 + 16) = *((unsigned char *)v105 + 16);
          uint64_t v112 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
          goto LABEL_65;
        case 3u:
          _OWORD *v104 = *v105;
          *((unsigned char *)v104 + 16) = *((unsigned char *)v105 + 16);
          uint64_t v112 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
          goto LABEL_65;
        case 4u:
          _OWORD *v104 = *v105;
          *((unsigned char *)v104 + 16) = *((unsigned char *)v105 + 16);
          uint64_t v112 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
          goto LABEL_65;
        case 5u:
          _OWORD *v104 = *v105;
          *((unsigned char *)v104 + 16) = *((unsigned char *)v105 + 16);
          uint64_t v112 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
          goto LABEL_65;
        case 6u:
          uint64_t v113 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v105, 1, v113))
          {
            uint64_t v114 = sub_253462A5C(&qword_26B249528);
            memcpy(v104, v105, *(void *)(*(void *)(v114 - 8) + 64));
          }
          else
          {
            *(_DWORD *)uint64_t v104 = *(_DWORD *)v105;
            *(_OWORD *)((char *)v104 + 8) = *(_OWORD *)((char *)v105 + 8);
            uint64_t v115 = *(int *)(v113 + 24);
            uint64_t v116 = (char *)v104 + v115;
            uint64_t v160 = (char *)v105 + v115;
            uint64_t v117 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 32))(v116, v160, v117);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v104, 0, 1, v113);
          }
          uint64_t v112 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
          uint64_t v118 = *(int *)(v112 + 20);
          uint64_t v119 = (char *)v104 + v118;
          uint64_t v120 = (char *)v105 + v118;
          *(void *)uint64_t v119 = *(void *)v120;
          v119[8] = v120[8];
LABEL_65:
          uint64_t v110 = *(int *)(v112 + 24);
          break;
        case 7u:
          *(void *)uint64_t v104 = *(void *)v105;
          *((unsigned char *)v104 + 8) = *((unsigned char *)v105 + 8);
          uint64_t v111 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0);
LABEL_62:
          uint64_t v110 = *(int *)(v111 + 20);
          break;
        default:
          _OWORD *v104 = *v105;
          *((_WORD *)v104 + 8) = *((_WORD *)v105 + 8);
          uint64_t v110 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
          break;
      }
      uint64_t v121 = (char *)v104 + v110;
      uint64_t v122 = (char *)v105 + v110;
      uint64_t v123 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 32))(v121, v122, v123);
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v104, 0, 1, v108);
    }
    uint64_t v124 = *(int *)(v106 + 20);
    uint64_t v125 = (char *)v104 + v124;
    uint64_t v126 = (char *)v105 + v124;
    uint64_t v127 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 32))(v125, v126, v127);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v104, 0, 1, v106);
  }
  uint64_t v128 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  int v129 = &a1[v128];
  uint64_t v130 = &a2[v128];
  uint64_t v131 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v130, 1, v131))
  {
    uint64_t v132 = sub_253462A5C(&qword_269CE1AD0);
    memcpy(v129, v130, *(void *)(*(void *)(v132 - 8) + 64));
  }
  else
  {
    *(_OWORD *)int v129 = *(_OWORD *)v130;
    v129[2] = v130[2];
    uint64_t v133 = *(int *)(v131 + 24);
    uint64_t v134 = (char *)v129 + v133;
    uint64_t v135 = (char *)v130 + v133;
    uint64_t v136 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 32))(v134, v135, v136);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v129, 0, 1, v131);
  }
  uint64_t v137 = a3[9];
  uint64_t v138 = &a1[v137];
  uint64_t v139 = &a2[v137];
  uint64_t v140 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v140 - 8) + 32))(v138, v139, v140);
  return a1;
}

unsigned char *assignWithTake for TranscriptProtoRequest(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TranscriptProtoRequestContent(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      uint64_t v12 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v12))
      {
        uint64_t v13 = sub_253462A5C(&qword_269CE1B00);
        memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
        goto LABEL_87;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)uint64_t v7 = *(void *)v8;
          uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          uint64_t v30 = (char *)v7 + v29;
          uint64_t v31 = (char *)v8 + v29;
          uint64_t v32 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
          goto LABEL_86;
        case 2u:
          long long v33 = v8[1];
          *uint64_t v7 = *v8;
          v7[1] = v33;
          uint64_t v434 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
          uint64_t v34 = v434[6];
          uint64_t v35 = (char *)v7 + v34;
          uint64_t v36 = (char *)v8 + v34;
          uint64_t v37 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v36, 1, v37))
          {
            uint64_t v38 = sub_253462A5C(&qword_269CE2140);
            memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
            goto LABEL_64;
          }
          __dst = v35;
          v419 = (int *)v37;
          uint64_t v63 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
          uint64_t v64 = v36;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v36, 1, v63))
          {
            uint64_t v65 = sub_253462A5C(&qword_269CE2200);
            uint64_t v66 = (uint64_t)__dst;
            memcpy(__dst, v64, *(void *)(*(void *)(v65 - 8) + 64));
LABEL_63:
            uint64_t v115 = v419[5];
            __dstd = (void *)(v66 + v115);
            uint64_t v116 = &v64[v115];
            uint64_t v117 = sub_253B07160();
            (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v117 - 8) + 32))(__dstd, v116, v117);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v66, 0, 1, (uint64_t)v419);
LABEL_64:
            uint64_t v118 = v434[7];
            long long v422 = (_DWORD *)((char *)v7 + v118);
            uint64_t v119 = (_DWORD *)((char *)v8 + v118);
            uint64_t v120 = type metadata accessor for TranscriptProtoStatementID(0);
            uint64_t v430 = v12;
            uint64_t v406 = v120;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v119, 1, v120))
            {
              uint64_t v121 = sub_253462A5C(&qword_26B249528);
              memcpy(v422, v119, *(void *)(*(void *)(v121 - 8) + 64));
            }
            else
            {
              *long long v422 = *v119;
              *(_OWORD *)(v422 + 2) = *(_OWORD *)(v119 + 2);
              uint64_t v122 = *(int *)(v120 + 24);
              uint64_t v123 = (char *)v422 + v122;
              uint64_t v124 = (char *)v119 + v122;
              uint64_t v125 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 32))(v123, v124, v125);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v422, 0, 1, v120);
            }
            uint64_t v126 = v434;
            uint64_t v127 = v434[8];
            uint64_t v423 = (void *)((char *)v7 + v127);
            uint64_t v128 = (void *)((char *)v8 + v127);
            uint64_t v129 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v128, 1, v129))
            {
              uint64_t v130 = sub_253462A5C(&qword_269CE2130);
              memcpy(v423, v128, *(void *)(*(void *)(v130 - 8) + 64));
            }
            else
            {
              __dstb = (int *)v129;
              uint64_t v131 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v128, 1, v131))
              {
                uint64_t v132 = sub_253462A5C(&qword_269CE2150);
                uint64_t v133 = (uint64_t)v423;
                memcpy(v423, v128, *(void *)(*(void *)(v132 - 8) + 64));
              }
              else
              {
                uint64_t v398 = v131;
                int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                uint64_t v133 = (uint64_t)v423;
                if (EnumCaseMultiPayload == 1)
                {
                  *uint64_t v423 = *v128;
                  uint64_t v139 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                  uint64_t v140 = (char *)v423 + v139;
                  uint64_t v141 = (char *)v128 + v139;
                  uint64_t v142 = sub_253B07160();
                  uint64_t v143 = v140;
                  uint64_t v133 = (uint64_t)v423;
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v143, v141, v142);
                  uint64_t v144 = v398;
                  swift_storeEnumTagMultiPayload();
                }
                else if (EnumCaseMultiPayload)
                {
                  uint64_t v144 = v398;
                  memcpy(v423, v128, *(void *)(*(void *)(v398 - 8) + 64));
                }
                else
                {
                  *(_OWORD *)uint64_t v423 = *(_OWORD *)v128;
                  uint64_t v135 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                  uint64_t v136 = *(int *)(v135 + 20);
                  __src = (_DWORD *)((char *)v423 + v136);
                  uint64_t v137 = (_DWORD *)((char *)v128 + v136);
                  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v128 + v136, 1, v406))
                  {
                    uint64_t v138 = sub_253462A5C(&qword_26B249528);
                    memcpy(__src, v137, *(void *)(*(void *)(v138 - 8) + 64));
                  }
                  else
                  {
                    _DWORD *__src = *v137;
                    *(_OWORD *)(__src + 2) = *(_OWORD *)(v137 + 2);
                    uint64_t v147 = *(int *)(v406 + 24);
                    uint64_t v390 = v135;
                    uint64_t v148 = (char *)__src + v147;
                    uint64_t v149 = (char *)v137 + v147;
                    uint64_t v150 = sub_253B07160();
                    uint64_t v151 = v148;
                    uint64_t v135 = v390;
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 32))(v151, v149, v150);
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__src, 0, 1, v406);
                  }
                  uint64_t v152 = *(int *)(v135 + 24);
                  uint64_t v153 = (char *)v423 + v152;
                  uint64_t v154 = (char *)v128 + v152;
                  uint64_t v155 = sub_253B07160();
                  uint64_t v156 = v153;
                  uint64_t v133 = (uint64_t)v423;
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 32))(v156, v154, v155);
                  uint64_t v144 = v398;
                  swift_storeEnumTagMultiPayload();
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v133, 0, 1, v144);
              }
              uint64_t v157 = __dstb[5];
              uint64_t v443 = v133 + v157;
              v158 = (char *)v128 + v157;
              uint64_t v159 = sub_253B07160();
              (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v159 - 8) + 32))(v443, v158, v159);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v133, 0, 1, (uint64_t)__dstb);
              uint64_t v126 = v434;
            }
            uint64_t v160 = v126[9];
            uint64_t v161 = (char *)v7 + v160;
            uint64_t v162 = (char *)v8 + v160;
            uint64_t v163 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 32))(v161, v162, v163);
            uint64_t v12 = v430;
LABEL_86:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v12);
LABEL_87:
            uint64_t v164 = *(int *)(v9 + 20);
            uint64_t v165 = (char *)v7 + v164;
            uint64_t v166 = (char *)v8 + v164;
            uint64_t v167 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 32))(v165, v166, v167);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
            goto LABEL_141;
          }
          int v89 = swift_getEnumCaseMultiPayload();
          uint64_t v90 = v63;
          v404 = v64;
          switch(v89)
          {
            case 6:
              uint64_t v107 = sub_253B07160();
              uint64_t v92 = (uint64_t)__dst;
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v107 - 8) + 32))(__dst, v64, v107);
              break;
            case 5:
              uint64_t v402 = v63;
              uint64_t v108 = v64;
              uint64_t v92 = (uint64_t)__dst;
              unsigned char *__dst = *v64;
              uint64_t v109 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                            + 20);
              uint64_t v110 = &__dst[v109];
              v397 = &v108[v109];
              uint64_t v111 = sub_253B07160();
              uint64_t v112 = v110;
              uint64_t v113 = v402;
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v111 - 8) + 32))(v112, v397, v111);
              swift_storeEnumTagMultiPayload();
LABEL_62:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v92, 0, 1, v113);
              uint64_t v66 = v92;
              uint64_t v64 = v404;
              goto LABEL_63;
            case 1:
              uint64_t v91 = sub_253B08E50();
              uint64_t v92 = (uint64_t)__dst;
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v91 - 8) + 32))(__dst, v64, v91);
              break;
            default:
              size_t v114 = *(void *)(*(void *)(v63 - 8) + 64);
              uint64_t v92 = (uint64_t)__dst;
              memcpy(__dst, v64, v114);
              goto LABEL_61;
          }
          swift_storeEnumTagMultiPayload();
LABEL_61:
          uint64_t v113 = v90;
          goto LABEL_62;
        case 3u:
          uint64_t v39 = sub_253B07160();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v39 - 8) + 32))(v7, v8, v39);
          goto LABEL_86;
        default:
          *uint64_t v7 = *v8;
          v433 = (int *)type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          uint64_t v23 = v433[5];
          uint64_t v24 = (_DWORD *)((char *)v7 + v23);
          uint64_t v25 = (_DWORD *)((char *)v8 + v23);
          uint64_t v26 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v26))
          {
            uint64_t v27 = sub_253462A5C(&qword_26B249528);
            memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
          }
          else
          {
            *uint64_t v24 = *v25;
            *(_OWORD *)(v24 + 2) = *(_OWORD *)(v25 + 2);
            uint64_t v56 = *(int *)(v26 + 24);
            uint64_t v418 = (char *)v24 + v56;
            uint64_t v57 = (char *)v25 + v56;
            uint64_t v58 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v418, v57, v58);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v26);
          }
          uint64_t v59 = v433[6];
          uint64_t v60 = (char *)v7 + v59;
          uint64_t v61 = (char *)v8 + v59;
          uint64_t v62 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
          goto LABEL_86;
      }
    }
LABEL_7:
    uint64_t v14 = sub_253462A5C(&qword_269CE1AF0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_141;
  }
  if (v11)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  uint64_t v15 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v15);
  int v17 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)uint64_t v7 = *(void *)v8;
          uint64_t v45 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          uint64_t v46 = (char *)v7 + v45;
          uint64_t v47 = (char *)v8 + v45;
          uint64_t v48 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
          goto LABEL_113;
        case 2u:
          long long v49 = v8[1];
          *uint64_t v7 = *v8;
          v7[1] = v49;
          uint64_t v435 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
          uint64_t v50 = v435[6];
          size_t v51 = (char *)v7 + v50;
          uint64_t v52 = (char *)v8 + v50;
          uint64_t v53 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v53))
          {
            uint64_t v54 = sub_253462A5C(&qword_269CE2140);
            memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
LABEL_95:
            uint64_t v179 = v435[7];
            uint64_t v425 = (_DWORD *)((char *)v7 + v179);
            uint64_t v180 = (_DWORD *)((char *)v8 + v179);
            uint64_t v181 = type metadata accessor for TranscriptProtoStatementID(0);
            uint64_t v431 = v15;
            uint64_t v407 = v181;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v180, 1, v181))
            {
              uint64_t v182 = sub_253462A5C(&qword_26B249528);
              memcpy(v425, v180, *(void *)(*(void *)(v182 - 8) + 64));
            }
            else
            {
              *uint64_t v425 = *v180;
              *(_OWORD *)(v425 + 2) = *(_OWORD *)(v180 + 2);
              uint64_t v183 = *(int *)(v181 + 24);
              uint64_t v184 = (char *)v425 + v183;
              uint64_t v185 = (char *)v180 + v183;
              uint64_t v186 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v186 - 8) + 32))(v184, v185, v186);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v425, 0, 1, v181);
            }
            uint64_t v187 = v435;
            uint64_t v188 = v435[8];
            uint64_t v426 = (void *)((char *)v7 + v188);
            uint64_t v189 = (void *)((char *)v8 + v188);
            uint64_t v190 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v189, 1, v190))
            {
              uint64_t v191 = sub_253462A5C(&qword_269CE2130);
              memcpy(v426, v189, *(void *)(*(void *)(v191 - 8) + 64));
            }
            else
            {
              __dstc = (int *)v190;
              uint64_t v192 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v189, 1, v192))
              {
                uint64_t v193 = sub_253462A5C(&qword_269CE2150);
                uint64_t v194 = (uint64_t)v426;
                memcpy(v426, v189, *(void *)(*(void *)(v193 - 8) + 64));
              }
              else
              {
                uint64_t v400 = v192;
                int v195 = swift_getEnumCaseMultiPayload();
                uint64_t v194 = (uint64_t)v426;
                if (v195 == 1)
                {
                  *uint64_t v426 = *v189;
                  uint64_t v200 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                  uint64_t v201 = (char *)v426 + v200;
                  uint64_t v202 = (char *)v189 + v200;
                  uint64_t v203 = sub_253B07160();
                  uint64_t v204 = v201;
                  uint64_t v194 = (uint64_t)v426;
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v203 - 8) + 32))(v204, v202, v203);
                  uint64_t v205 = v400;
                  swift_storeEnumTagMultiPayload();
                }
                else if (v195)
                {
                  uint64_t v205 = v400;
                  memcpy(v426, v189, *(void *)(*(void *)(v400 - 8) + 64));
                }
                else
                {
                  *(_OWORD *)uint64_t v426 = *(_OWORD *)v189;
                  uint64_t v196 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                  uint64_t v197 = *(int *)(v196 + 20);
                  __srca = (_DWORD *)((char *)v426 + v197);
                  uint64_t v198 = (_DWORD *)((char *)v189 + v197);
                  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v189 + v197, 1, v407))
                  {
                    uint64_t v199 = sub_253462A5C(&qword_26B249528);
                    memcpy(__srca, v198, *(void *)(*(void *)(v199 - 8) + 64));
                  }
                  else
                  {
                    _DWORD *__srca = *v198;
                    *(_OWORD *)(__srca + 2) = *(_OWORD *)(v198 + 2);
                    uint64_t v206 = *(int *)(v407 + 24);
                    uint64_t v391 = v196;
                    uint64_t v207 = (char *)__srca + v206;
                    uint64_t v208 = (char *)v198 + v206;
                    uint64_t v209 = sub_253B07160();
                    uint64_t v210 = v207;
                    uint64_t v196 = v391;
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v209 - 8) + 32))(v210, v208, v209);
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__srca, 0, 1, v407);
                  }
                  uint64_t v211 = *(int *)(v196 + 24);
                  uint64_t v212 = (char *)v426 + v211;
                  v213 = (char *)v189 + v211;
                  uint64_t v214 = sub_253B07160();
                  uint64_t v215 = v212;
                  uint64_t v194 = (uint64_t)v426;
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 32))(v215, v213, v214);
                  uint64_t v205 = v400;
                  swift_storeEnumTagMultiPayload();
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v194, 0, 1, v205);
              }
              uint64_t v216 = __dstc[5];
              uint64_t v444 = v194 + v216;
              uint64_t v217 = (char *)v189 + v216;
              uint64_t v218 = sub_253B07160();
              (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v218 - 8) + 32))(v444, v217, v218);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v194, 0, 1, (uint64_t)__dstc);
              uint64_t v187 = v435;
            }
            uint64_t v219 = v187[9];
            uint64_t v220 = (char *)v7 + v219;
            uint64_t v221 = (char *)v8 + v219;
            uint64_t v222 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v222 - 8) + 32))(v220, v221, v222);
            uint64_t v15 = v431;
LABEL_113:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v15);
            goto LABEL_140;
          }
          __dsta = v51;
          uint64_t v421 = (int *)v53;
          uint64_t v85 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
          uint64_t v86 = v52;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v85))
          {
            uint64_t v87 = sub_253462A5C(&qword_269CE2200);
            uint64_t v88 = (uint64_t)__dsta;
            memcpy(__dsta, v86, *(void *)(*(void *)(v87 - 8) + 64));
LABEL_94:
            uint64_t v176 = v421[5];
            __dste = (void *)(v88 + v176);
            uint64_t v177 = &v86[v176];
            uint64_t v178 = sub_253B07160();
            (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v178 - 8) + 32))(__dste, v177, v178);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v88, 0, 1, (uint64_t)v421);
            goto LABEL_95;
          }
          int v103 = swift_getEnumCaseMultiPayload();
          uint64_t v104 = v85;
          uint64_t v405 = v86;
          switch(v103)
          {
            case 6:
              uint64_t v168 = sub_253B07160();
              uint64_t v106 = (uint64_t)__dsta;
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v168 - 8) + 32))(__dsta, v86, v168);
              break;
            case 5:
              uint64_t v403 = v85;
              uint64_t v169 = v86;
              uint64_t v106 = (uint64_t)__dsta;
              unsigned char *__dsta = *v86;
              uint64_t v170 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                            + 20);
              uint64_t v171 = &__dsta[v170];
              uint64_t v399 = &v169[v170];
              uint64_t v172 = sub_253B07160();
              v173 = v171;
              uint64_t v174 = v403;
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v172 - 8) + 32))(v173, v399, v172);
              swift_storeEnumTagMultiPayload();
LABEL_93:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v106, 0, 1, v174);
              uint64_t v88 = v106;
              uint64_t v86 = v405;
              goto LABEL_94;
            case 1:
              uint64_t v105 = sub_253B08E50();
              uint64_t v106 = (uint64_t)__dsta;
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v105 - 8) + 32))(__dsta, v86, v105);
              break;
            default:
              size_t v175 = *(void *)(*(void *)(v85 - 8) + 64);
              uint64_t v106 = (uint64_t)__dsta;
              memcpy(__dsta, v86, v175);
              goto LABEL_92;
          }
          swift_storeEnumTagMultiPayload();
LABEL_92:
          uint64_t v174 = v104;
          goto LABEL_93;
        case 3u:
          uint64_t v55 = sub_253B07160();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v55 - 8) + 32))(v7, v8, v55);
          goto LABEL_113;
        default:
          *uint64_t v7 = *v8;
          v432 = (int *)type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          uint64_t v18 = v432[5];
          uint64_t v19 = (_DWORD *)((char *)v7 + v18);
          uint64_t v20 = (_DWORD *)((char *)v8 + v18);
          uint64_t v21 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21))
          {
            uint64_t v22 = sub_253462A5C(&qword_26B249528);
            memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
          }
          else
          {
            *uint64_t v19 = *v20;
            *(_OWORD *)(v19 + 2) = *(_OWORD *)(v20 + 2);
            uint64_t v67 = *(int *)(v21 + 24);
            v420 = (char *)v19 + v67;
            uint64_t v68 = (char *)v20 + v67;
            uint64_t v69 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v420, v68, v69);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v21);
          }
          uint64_t v70 = v432[6];
          uint64_t v71 = (char *)v7 + v70;
          uint64_t v72 = (char *)v8 + v70;
          uint64_t v73 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v71, v72, v73);
          goto LABEL_113;
      }
    }
    goto LABEL_18;
  }
  if (!v17)
  {
    if (a1 == a2) {
      goto LABEL_140;
    }
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)uint64_t v7 = *(void *)v8;
        uint64_t v74 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        uint64_t v75 = (char *)v7 + v74;
        uint64_t v76 = (char *)v8 + v74;
        uint64_t v77 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 32))(v75, v76, v77);
        goto LABEL_139;
      case 2u:
        long long v78 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v78;
        uint64_t v442 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        uint64_t v79 = *(int *)(v442 + 24);
        uint64_t v80 = (char *)v7 + v79;
        uint64_t v81 = (char *)v8 + v79;
        uint64_t v82 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v81, 1, v82))
        {
          uint64_t v83 = sub_253462A5C(&qword_269CE2140);
          memcpy(v80, v81, *(void *)(*(void *)(v83 - 8) + 64));
          goto LABEL_120;
        }
        v437 = v80;
        uint64_t v100 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v81, 1, v100))
        {
          uint64_t v101 = sub_253462A5C(&qword_269CE2200);
          uint64_t v102 = (uint64_t)v437;
          memcpy(v437, v81, *(void *)(*(void *)(v101 - 8) + 64));
LABEL_119:
          uint64_t v226 = *(int *)(v82 + 20);
          uint64_t v438 = (void *)v82;
          uint64_t v227 = v102 + v226;
          uint64_t v228 = &v81[v226];
          uint64_t v229 = sub_253B07160();
          (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v229 - 8) + 32))(v227, v228, v229);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v102, 0, 1, (uint64_t)v438);
LABEL_120:
          uint64_t v230 = v442;
          uint64_t v231 = *(int *)(v442 + 28);
          uint64_t v439 = (_DWORD *)((char *)v7 + v231);
          uint64_t v232 = (_DWORD *)((char *)v8 + v231);
          uint64_t v233 = type metadata accessor for TranscriptProtoStatementID(0);
          uint64_t v427 = (int *)v233;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v232, 1, v233))
          {
            uint64_t v234 = sub_253462A5C(&qword_26B249528);
            memcpy(v439, v232, *(void *)(*(void *)(v234 - 8) + 64));
          }
          else
          {
            *uint64_t v439 = *v232;
            *(_OWORD *)(v439 + 2) = *(_OWORD *)(v232 + 2);
            uint64_t v235 = *(int *)(v233 + 24);
            uint64_t v236 = (char *)v439 + v235;
            uint64_t v237 = (char *)v232 + v235;
            uint64_t v238 = sub_253B07160();
            uint64_t v239 = v236;
            uint64_t v230 = v442;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v238 - 8) + 32))(v239, v237, v238);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v439, 0, 1, v233);
          }
          uint64_t v240 = *(int *)(v230 + 32);
          v440 = (void *)((char *)v7 + v240);
          uint64_t v241 = (void *)((char *)v8 + v240);
          uint64_t v242 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v241, 1, v242))
          {
            uint64_t v243 = sub_253462A5C(&qword_269CE2130);
            memcpy(v440, v241, *(void *)(*(void *)(v243 - 8) + 64));
LABEL_138:
            uint64_t v265 = *(int *)(v230 + 36);
            uint64_t v266 = (char *)v7 + v265;
            uint64_t v267 = (char *)v8 + v265;
            uint64_t v268 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v268 - 8) + 32))(v266, v267, v268);
LABEL_139:
            swift_storeEnumTagMultiPayload();
            goto LABEL_140;
          }
          uint64_t v244 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v241, 1, v244))
          {
            uint64_t v245 = sub_253462A5C(&qword_269CE2150);
            uint64_t v246 = (uint64_t)v440;
            memcpy(v440, v241, *(void *)(*(void *)(v245 - 8) + 64));
LABEL_137:
            __dstg = (void *)v242;
            uint64_t v261 = *(int *)(v242 + 20);
            uint64_t v262 = v246 + v261;
            int v263 = (char *)v241 + v261;
            uint64_t v264 = sub_253B07160();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v264 - 8) + 32))(v262, v263, v264);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v246, 0, 1, (uint64_t)__dstg);
            uint64_t v230 = v442;
            goto LABEL_138;
          }
          uint64_t v409 = v244;
          int v247 = swift_getEnumCaseMultiPayload();
          uint64_t v246 = (uint64_t)v440;
          if (v247 == 1)
          {
            void *v440 = *v241;
            uint64_t v251 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
            uint64_t v252 = (char *)v440 + v251;
            uint64_t v428 = (char *)v241 + v251;
            uint64_t v253 = sub_253B07160();
            uint64_t v254 = v252;
            uint64_t v246 = (uint64_t)v440;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v253 - 8) + 32))(v254, v428, v253);
          }
          else
          {
            if (v247)
            {
              memcpy(v440, v241, *(void *)(*(void *)(v409 - 8) + 64));
LABEL_136:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v246, 0, 1, v409);
              goto LABEL_137;
            }
            *(_OWORD *)v440 = *(_OWORD *)v241;
            uint64_t v401 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
            uint64_t v248 = *(int *)(v401 + 20);
            uint64_t v249 = (_DWORD *)((char *)v440 + v248);
            __srcb = (_DWORD *)((char *)v241 + v248);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v241 + v248, 1, (uint64_t)v427))
            {
              uint64_t v250 = sub_253462A5C(&qword_26B249528);
              memcpy(v249, __srcb, *(void *)(*(void *)(v250 - 8) + 64));
            }
            else
            {
              _DWORD *v249 = *__srcb;
              *(_OWORD *)(v249 + 2) = *(_OWORD *)(__srcb + 2);
              uint64_t v255 = v427[6];
              v392 = (char *)v249 + v255;
              __srcc = (char *)__srcb + v255;
              uint64_t v256 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v256 - 8) + 32))(v392, __srcc, v256);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v249, 0, 1, (uint64_t)v427);
            }
            uint64_t v257 = *(int *)(v401 + 24);
            uint64_t v258 = (char *)v440 + v257;
            uint64_t v429 = (char *)v241 + v257;
            uint64_t v259 = sub_253B07160();
            uint64_t v260 = v258;
            uint64_t v246 = (uint64_t)v440;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v259 - 8) + 32))(v260, v429, v259);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_136;
        }
        v424 = (void *)v100;
        int v145 = swift_getEnumCaseMultiPayload();
        if (v145 == 6)
        {
          uint64_t v223 = sub_253B07160();
          uint64_t v102 = (uint64_t)v437;
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v223 - 8) + 32))(v437, v81, v223);
        }
        else if (v145 == 5)
        {
          uint64_t v102 = (uint64_t)v437;
          unsigned char *v437 = *v81;
          uint64_t v224 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          uint64_t v408 = &v81[v224];
          __dstf = &v437[v224];
          uint64_t v225 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v225 - 8) + 32))(__dstf, v408, v225);
        }
        else
        {
          uint64_t v102 = (uint64_t)v437;
          if (v145 != 1)
          {
            memcpy(v437, v81, *(void *)(*(v424 - 1) + 64));
            goto LABEL_118;
          }
          uint64_t v146 = sub_253B08E50();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v146 - 8) + 32))(v437, v81, v146);
        }
        swift_storeEnumTagMultiPayload();
LABEL_118:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v102, 0, 1, (uint64_t)v424);
        goto LABEL_119;
      case 3u:
        uint64_t v84 = sub_253B07160();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v84 - 8) + 32))(v7, v8, v84);
        goto LABEL_139;
      default:
        *uint64_t v7 = *v8;
        uint64_t v441 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v40 = *(int *)(v441 + 20);
        uint64_t v41 = (_DWORD *)((char *)v7 + v40);
        uint64_t v42 = (_DWORD *)((char *)v8 + v40);
        uint64_t v43 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v42, 1, v43))
        {
          uint64_t v44 = sub_253462A5C(&qword_26B249528);
          memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          *uint64_t v41 = *v42;
          *(_OWORD *)(v41 + 2) = *(_OWORD *)(v42 + 2);
          uint64_t v93 = *(int *)(v43 + 24);
          v436 = (char *)v41 + v93;
          uint64_t v94 = (char *)v42 + v93;
          uint64_t v95 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 32))(v436, v94, v95);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v41, 0, 1, v43);
        }
        uint64_t v96 = *(int *)(v441 + 24);
        uint64_t v97 = (char *)v7 + v96;
        uint64_t v98 = (char *)v8 + v96;
        uint64_t v99 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(v97, v98, v99);
        goto LABEL_139;
    }
  }
  sub_2536FA73C();
LABEL_18:
  uint64_t v28 = sub_253462A5C(&qword_269CE1B00);
  memcpy(v7, v8, *(void *)(*(void *)(v28 - 8) + 64));
LABEL_140:
  uint64_t v269 = *(int *)(v9 + 20);
  uint64_t v270 = (char *)v7 + v269;
  uint64_t v271 = (char *)v8 + v269;
  uint64_t v272 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v272 - 8) + 40))(v270, v271, v272);
LABEL_141:
  uint64_t v273 = a3[6];
  uint64_t v274 = (uint64_t)&a1[v273];
  uint64_t v275 = (uint64_t)&a2[v273];
  uint64_t v276 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
  int v277 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v274, 1, v276);
  int v278 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v275, 1, v276);
  if (!v277)
  {
    if (v278)
    {
      sub_2536FA73C();
      goto LABEL_147;
    }
    uint64_t v282 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
    int v283 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v274, 1, v282);
    int v284 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v275, 1, v282);
    if (v283)
    {
      if (!v284)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *(_OWORD *)uint64_t v274 = *(_OWORD *)v275;
            uint64_t v296 = type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0);
            goto LABEL_177;
          case 2u:
            *(_OWORD *)uint64_t v274 = *(_OWORD *)v275;
            *(unsigned char *)(v274 + 16) = *(unsigned char *)(v275 + 16);
            uint64_t v297 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
            goto LABEL_193;
          case 3u:
            *(_OWORD *)uint64_t v274 = *(_OWORD *)v275;
            *(unsigned char *)(v274 + 16) = *(unsigned char *)(v275 + 16);
            uint64_t v297 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
            goto LABEL_193;
          case 4u:
            *(_OWORD *)uint64_t v274 = *(_OWORD *)v275;
            *(unsigned char *)(v274 + 16) = *(unsigned char *)(v275 + 16);
            uint64_t v297 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
            goto LABEL_193;
          case 5u:
            *(_OWORD *)uint64_t v274 = *(_OWORD *)v275;
            *(unsigned char *)(v274 + 16) = *(unsigned char *)(v275 + 16);
            uint64_t v297 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
            goto LABEL_193;
          case 6u:
            uint64_t v298 = type metadata accessor for TranscriptProtoStatementID(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v275, 1, v298))
            {
              uint64_t v299 = sub_253462A5C(&qword_26B249528);
              memcpy((void *)v274, (const void *)v275, *(void *)(*(void *)(v299 - 8) + 64));
            }
            else
            {
              *(_DWORD *)uint64_t v274 = *(_DWORD *)v275;
              *(_OWORD *)(v274 + 8) = *(_OWORD *)(v275 + 8);
              uint64_t v339 = *(int *)(v298 + 24);
              uint64_t v340 = v274 + v339;
              uint64_t v446 = v275 + v339;
              uint64_t v341 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v341 - 8) + 32))(v340, v446, v341);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v274, 0, 1, v298);
            }
            uint64_t v297 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
            uint64_t v342 = *(int *)(v297 + 20);
            uint64_t v343 = v274 + v342;
            uint64_t v344 = v275 + v342;
            *(void *)uint64_t v343 = *(void *)v344;
            *(unsigned char *)(v343 + 8) = *(unsigned char *)(v344 + 8);
LABEL_193:
            uint64_t v285 = *(int *)(v297 + 24);
            break;
          case 7u:
            *(void *)uint64_t v274 = *(void *)v275;
            *(unsigned char *)(v274 + 8) = *(unsigned char *)(v275 + 8);
            uint64_t v296 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0);
LABEL_177:
            uint64_t v285 = *(int *)(v296 + 20);
            break;
          default:
            *(_OWORD *)uint64_t v274 = *(_OWORD *)v275;
            *(_WORD *)(v274 + 16) = *(_WORD *)(v275 + 16);
            uint64_t v285 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
            break;
        }
        uint64_t v345 = v274 + v285;
        uint64_t v346 = v275 + v285;
        uint64_t v347 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v347 - 8) + 32))(v345, v346, v347);
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v274, 0, 1, v282);
        goto LABEL_198;
      }
    }
    else
    {
      if (!v284)
      {
        if (a1 != a2)
        {
          sub_2536FA73C();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *(_OWORD *)uint64_t v274 = *(_OWORD *)v275;
              uint64_t v313 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0)
                            + 20);
              uint64_t v314 = v274 + v313;
              uint64_t v315 = v275 + v313;
              uint64_t v316 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v316 - 8) + 32))(v314, v315, v316);
              break;
            case 2u:
              *(_OWORD *)uint64_t v274 = *(_OWORD *)v275;
              *(unsigned char *)(v274 + 16) = *(unsigned char *)(v275 + 16);
              uint64_t v317 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0) + 24);
              uint64_t v318 = v274 + v317;
              uint64_t v319 = v275 + v317;
              uint64_t v320 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v320 - 8) + 32))(v318, v319, v320);
              break;
            case 3u:
              *(_OWORD *)uint64_t v274 = *(_OWORD *)v275;
              *(unsigned char *)(v274 + 16) = *(unsigned char *)(v275 + 16);
              uint64_t v321 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0) + 24);
              uint64_t v322 = v274 + v321;
              uint64_t v323 = v275 + v321;
              uint64_t v324 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v324 - 8) + 32))(v322, v323, v324);
              break;
            case 4u:
              *(_OWORD *)uint64_t v274 = *(_OWORD *)v275;
              *(unsigned char *)(v274 + 16) = *(unsigned char *)(v275 + 16);
              uint64_t v325 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0) + 24);
              uint64_t v326 = v274 + v325;
              uint64_t v327 = v275 + v325;
              uint64_t v328 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v328 - 8) + 32))(v326, v327, v328);
              break;
            case 5u:
              *(_OWORD *)uint64_t v274 = *(_OWORD *)v275;
              *(unsigned char *)(v274 + 16) = *(unsigned char *)(v275 + 16);
              uint64_t v329 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0) + 24);
              uint64_t v330 = v274 + v329;
              uint64_t v331 = v275 + v329;
              uint64_t v332 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v332 - 8) + 32))(v330, v331, v332);
              break;
            case 6u:
              uint64_t v333 = type metadata accessor for TranscriptProtoStatementID(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v275, 1, v333))
              {
                uint64_t v334 = sub_253462A5C(&qword_26B249528);
                memcpy((void *)v274, (const void *)v275, *(void *)(*(void *)(v334 - 8) + 64));
              }
              else
              {
                *(_DWORD *)uint64_t v274 = *(_DWORD *)v275;
                *(_OWORD *)(v274 + 8) = *(_OWORD *)(v275 + 8);
                uint64_t v348 = *(int *)(v333 + 24);
                uint64_t v349 = v274 + v348;
                uint64_t v350 = v275 + v348;
                uint64_t v351 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v351 - 8) + 32))(v349, v350, v351);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v274, 0, 1, v333);
              }
              uint64_t v352 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
              uint64_t v353 = *(int *)(v352 + 20);
              uint64_t v354 = v274 + v353;
              uint64_t v355 = v275 + v353;
              *(void *)uint64_t v354 = *(void *)v355;
              *(unsigned char *)(v354 + 8) = *(unsigned char *)(v355 + 8);
              uint64_t v356 = *(int *)(v352 + 24);
              uint64_t v357 = v274 + v356;
              uint64_t v358 = v275 + v356;
              uint64_t v359 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v359 - 8) + 32))(v357, v358, v359);
              break;
            case 7u:
              *(void *)uint64_t v274 = *(void *)v275;
              *(unsigned char *)(v274 + 8) = *(unsigned char *)(v275 + 8);
              uint64_t v335 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0)
                            + 20);
              uint64_t v336 = v274 + v335;
              uint64_t v337 = v275 + v335;
              uint64_t v338 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v338 - 8) + 32))(v336, v337, v338);
              break;
            default:
              *(_OWORD *)uint64_t v274 = *(_OWORD *)v275;
              *(_WORD *)(v274 + 16) = *(_WORD *)(v275 + 16);
              uint64_t v288 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
              uint64_t v289 = v274 + v288;
              uint64_t v290 = v275 + v288;
              uint64_t v291 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v291 - 8) + 32))(v289, v290, v291);
              break;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_198;
      }
      sub_2536FA73C();
    }
    uint64_t v287 = sub_253462A5C(&qword_269CE1B50);
    memcpy((void *)v274, (const void *)v275, *(void *)(*(void *)(v287 - 8) + 64));
LABEL_198:
    uint64_t v360 = *(int *)(v276 + 20);
    uint64_t v361 = v274 + v360;
    uint64_t v362 = v275 + v360;
    uint64_t v363 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v363 - 8) + 40))(v361, v362, v363);
    goto LABEL_199;
  }
  if (v278)
  {
LABEL_147:
    uint64_t v281 = sub_253462A5C(&qword_269CE1AE0);
    memcpy((void *)v274, (const void *)v275, *(void *)(*(void *)(v281 - 8) + 64));
    goto LABEL_199;
  }
  uint64_t v279 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v275, 1, v279))
  {
    uint64_t v280 = sub_253462A5C(&qword_269CE1B50);
    memcpy((void *)v274, (const void *)v275, *(void *)(*(void *)(v280 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(_OWORD *)uint64_t v274 = *(_OWORD *)v275;
        uint64_t v292 = type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0);
        goto LABEL_168;
      case 2u:
        *(_OWORD *)uint64_t v274 = *(_OWORD *)v275;
        *(unsigned char *)(v274 + 16) = *(unsigned char *)(v275 + 16);
        uint64_t v293 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
        goto LABEL_180;
      case 3u:
        *(_OWORD *)uint64_t v274 = *(_OWORD *)v275;
        *(unsigned char *)(v274 + 16) = *(unsigned char *)(v275 + 16);
        uint64_t v293 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
        goto LABEL_180;
      case 4u:
        *(_OWORD *)uint64_t v274 = *(_OWORD *)v275;
        *(unsigned char *)(v274 + 16) = *(unsigned char *)(v275 + 16);
        uint64_t v293 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
        goto LABEL_180;
      case 5u:
        *(_OWORD *)uint64_t v274 = *(_OWORD *)v275;
        *(unsigned char *)(v274 + 16) = *(unsigned char *)(v275 + 16);
        uint64_t v293 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
        goto LABEL_180;
      case 6u:
        uint64_t v294 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v275, 1, v294))
        {
          uint64_t v295 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)v274, (const void *)v275, *(void *)(*(void *)(v295 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v274 = *(_DWORD *)v275;
          *(_OWORD *)(v274 + 8) = *(_OWORD *)(v275 + 8);
          uint64_t v300 = *(int *)(v294 + 24);
          uint64_t v301 = v274 + v300;
          uint64_t v445 = v275 + v300;
          uint64_t v302 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v302 - 8) + 32))(v301, v445, v302);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v274, 0, 1, v294);
        }
        uint64_t v293 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
        uint64_t v303 = *(int *)(v293 + 20);
        uint64_t v304 = v274 + v303;
        uint64_t v305 = v275 + v303;
        *(void *)uint64_t v304 = *(void *)v305;
        *(unsigned char *)(v304 + 8) = *(unsigned char *)(v305 + 8);
LABEL_180:
        uint64_t v286 = *(int *)(v293 + 24);
        break;
      case 7u:
        *(void *)uint64_t v274 = *(void *)v275;
        *(unsigned char *)(v274 + 8) = *(unsigned char *)(v275 + 8);
        uint64_t v292 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0);
LABEL_168:
        uint64_t v286 = *(int *)(v292 + 20);
        break;
      default:
        *(_OWORD *)uint64_t v274 = *(_OWORD *)v275;
        *(_WORD *)(v274 + 16) = *(_WORD *)(v275 + 16);
        uint64_t v286 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
        break;
    }
    uint64_t v306 = v274 + v286;
    uint64_t v307 = v275 + v286;
    uint64_t v308 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v308 - 8) + 32))(v306, v307, v308);
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v274, 0, 1, v279);
  }
  uint64_t v309 = *(int *)(v276 + 20);
  uint64_t v310 = v274 + v309;
  uint64_t v311 = v275 + v309;
  uint64_t v312 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v312 - 8) + 32))(v310, v311, v312);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v274, 0, 1, v276);
LABEL_199:
  uint64_t v364 = a3[7];
  uint64_t v365 = &a1[v364];
  v366 = (uint64_t *)&a2[v364];
  uint64_t v368 = *v366;
  uint64_t v367 = v366[1];
  *uint64_t v365 = v368;
  v365[1] = v367;
  swift_bridgeObjectRelease();
  uint64_t v369 = a3[8];
  v370 = &a1[v369];
  v371 = &a2[v369];
  uint64_t v372 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  int v373 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v370, 1, v372);
  int v374 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v371, 1, v372);
  if (!v373)
  {
    if (!v374)
    {
      uint64_t v385 = v371[1];
      void *v370 = *v371;
      v370[1] = v385;
      swift_bridgeObjectRelease();
      v370[2] = v371[2];
      swift_bridgeObjectRelease();
      uint64_t v386 = *(int *)(v372 + 24);
      uint64_t v387 = (char *)v370 + v386;
      uint64_t v388 = (char *)v371 + v386;
      uint64_t v389 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v389 - 8) + 40))(v387, v388, v389);
      goto LABEL_205;
    }
    sub_2536FA73C();
    goto LABEL_204;
  }
  if (v374)
  {
LABEL_204:
    uint64_t v379 = sub_253462A5C(&qword_269CE1AD0);
    memcpy(v370, v371, *(void *)(*(void *)(v379 - 8) + 64));
    goto LABEL_205;
  }
  *(_OWORD *)v370 = *(_OWORD *)v371;
  v370[2] = v371[2];
  uint64_t v375 = *(int *)(v372 + 24);
  v376 = (char *)v370 + v375;
  v377 = (char *)v371 + v375;
  uint64_t v378 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v378 - 8) + 32))(v376, v377, v378);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v370, 0, 1, v372);
LABEL_205:
  uint64_t v380 = a3[9];
  uint64_t v381 = &a1[v380];
  uint64_t v382 = &a2[v380];
  uint64_t v383 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v383 - 8) + 40))(v381, v382, v383);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2537F4254);
}

uint64_t sub_2537F4254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2534DA0C4();
  sub_253462A5C(&qword_269CE1AF0);
  sub_2535782A8();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    sub_2535E263C();
  }
  else
  {
    sub_253462A5C(&qword_269CE1AE0);
    sub_2535782A8();
    if (*(_DWORD *)(v8 + 84) == v3)
    {
      sub_2535E2560();
    }
    else
    {
      sub_253945F98();
      if (v9) {
        return sub_2535E2258(*(void *)(v4 + *(int *)(a3 + 28) + 8));
      }
      sub_253462A5C(&qword_269CE1AD0);
      sub_2535782A8();
      if (*(_DWORD *)(v11 + 84) == v3)
      {
        sub_2535E27E4();
      }
      else
      {
        sub_253B07160();
        sub_253945148();
      }
    }
  }
  uint64_t v12 = sub_2535E22C8(v7);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v12, v13, v14);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2537F4354);
}

void sub_2537F4354(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_2534DA0C4();
  sub_253462A5C(&qword_269CE1AF0);
  sub_2535782A8();
  if (*(_DWORD *)(v6 + 84) == a3)
  {
    sub_2535E272C();
  }
  else
  {
    sub_253462A5C(&qword_269CE1AE0);
    sub_2535782A8();
    if (*(_DWORD *)(v8 + 84) == a3)
    {
      sub_2535E26D8();
    }
    else
    {
      sub_253945FA4();
      if (v9)
      {
        sub_253945524(*(int *)(a4 + 28));
        return;
      }
      sub_253462A5C(&qword_269CE1AD0);
      sub_2535782A8();
      if (*(_DWORD *)(v10 + 84) == a3)
      {
        sub_2535E2830();
      }
      else
      {
        sub_253B07160();
        sub_25394519C();
      }
    }
  }
  uint64_t v11 = sub_2535E2234(v7);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v11, v12, v13, v14);
}

void sub_2537F443C()
{
  sub_253760A08(319, &qword_26B2497E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestContent);
  if (v0 <= 0x3F)
  {
    sub_253760A08(319, &qword_26B249B70, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlan);
    if (v1 <= 0x3F)
    {
      sub_253760A08(319, &qword_26B249E20, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
      if (v2 <= 0x3F)
      {
        sub_253B07160();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoRequestContent(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE1B00);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      goto LABEL_46;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v17 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        uint64_t v18 = (char *)a1 + v17;
        uint64_t v19 = (char *)a2 + v17;
        uint64_t v20 = sub_253B07160();
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v18, v19, v20);
        goto LABEL_45;
      case 2u:
        uint64_t v22 = a2[1];
        *a1 = *a2;
        a1[1] = v22;
        uint64_t v23 = a2[3];
        a1[2] = a2[2];
        a1[3] = v23;
        uint64_t v24 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        uint64_t v25 = v24[6];
        uint64_t v26 = (char *)a1 + v25;
        uint64_t v27 = (char *)a2 + v25;
        uint64_t v28 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v28))
        {
          uint64_t v29 = sub_253462A5C(&qword_269CE2140);
          memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
          goto LABEL_26;
        }
        uint64_t v38 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v38))
        {
          uint64_t v39 = sub_253462A5C(&qword_269CE2200);
          memcpy(v26, v27, *(void *)(*(void *)(v39 - 8) + 64));
LABEL_25:
          uint64_t v46 = *(int *)(v28 + 20);
          uint64_t v47 = &v26[v46];
          uint64_t v48 = &v27[v46];
          uint64_t v49 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v28);
LABEL_26:
          uint64_t v50 = v24[7];
          size_t v51 = (void *)((char *)a1 + v50);
          uint64_t v52 = (void *)((char *)a2 + v50);
          uint64_t v53 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v53))
          {
            uint64_t v54 = sub_253462A5C(&qword_26B249528);
            memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
          }
          else
          {
            *(_DWORD *)size_t v51 = *(_DWORD *)v52;
            uint64_t v55 = v52[2];
            v51[1] = v52[1];
            v51[2] = v55;
            uint64_t v56 = *(int *)(v53 + 24);
            __dstb = (char *)v52 + v56;
            uint64_t v106 = (char *)v51 + v56;
            uint64_t v110 = v24;
            uint64_t v57 = sub_253B07160();
            uint64_t v58 = v53;
            uint64_t v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v60 = v57;
            uint64_t v24 = v110;
            v59(v106, __dstb, v60);
            uint64_t v53 = v58;
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v51, 0, 1, v58);
          }
          uint64_t v61 = v24[8];
          uint64_t v62 = (void *)((char *)a1 + v61);
          uint64_t v63 = (void *)((char *)a2 + v61);
          uint64_t v64 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v63, 1, v64))
          {
            uint64_t v65 = sub_253462A5C(&qword_269CE2130);
            memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
            goto LABEL_44;
          }
          uint64_t v66 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
          uint64_t v111 = v24;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v63, 1, v66))
          {
            uint64_t v67 = sub_253462A5C(&qword_269CE2150);
            memcpy(v62, v63, *(void *)(*(void *)(v67 - 8) + 64));
LABEL_43:
            uint64_t v82 = *(int *)(v64 + 20);
            uint64_t v83 = (char *)v62 + v82;
            uint64_t v84 = (char *)v63 + v82;
            uint64_t v85 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16))(v83, v84, v85);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v62, 0, 1, v64);
            uint64_t v24 = v111;
LABEL_44:
            uint64_t v86 = v24[9];
            uint64_t v87 = (char *)a1 + v86;
            uint64_t v88 = (char *)a2 + v86;
            uint64_t v89 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16))(v87, v88, v89);
LABEL_45:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
LABEL_46:
            uint64_t v90 = *(int *)(a3 + 20);
            uint64_t v91 = (char *)a1 + v90;
            uint64_t v92 = (char *)a2 + v90;
            uint64_t v93 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16))(v91, v92, v93);
            return a1;
          }
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            *uint64_t v62 = *v63;
            uint64_t v74 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
            __dstc = (char *)v63 + v74;
            uint64_t v108 = (char *)v62 + v74;
            uint64_t v75 = sub_253B07160();
            uint64_t v98 = *(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16);
            swift_bridgeObjectRetain();
            v98(v108, __dstc, v75);
          }
          else
          {
            if (EnumCaseMultiPayload)
            {
              memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64));
LABEL_42:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v62, 0, 1, v66);
              goto LABEL_43;
            }
            uint64_t v69 = v63[1];
            *uint64_t v62 = *v63;
            v62[1] = v69;
            uint64_t v70 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
            uint64_t v71 = *(int *)(v70 + 20);
            __dst = (void *)((char *)v62 + v71);
            uint64_t v107 = v70;
            uint64_t v72 = (void *)((char *)v63 + v71);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v72, 1, v53))
            {
              uint64_t v73 = sub_253462A5C(&qword_26B249528);
              memcpy(__dst, v72, *(void *)(*(void *)(v73 - 8) + 64));
            }
            else
            {
              *(_DWORD *)__dst = *(_DWORD *)v72;
              uint64_t v76 = v72[2];
              __dst[1] = v72[1];
              __dst[2] = v76;
              uint64_t v77 = *(int *)(v53 + 24);
              uint64_t v97 = (char *)v72 + v77;
              uint64_t v99 = (char *)__dst + v77;
              uint64_t v96 = sub_253B07160();
              uint64_t v95 = *(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16);
              swift_bridgeObjectRetain();
              v95(v99, v97, v96);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v53);
            }
            uint64_t v78 = *(int *)(v107 + 24);
            uint64_t v79 = (char *)v62 + v78;
            uint64_t v80 = (char *)v63 + v78;
            uint64_t v81 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v79, v80, v81);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_42;
        }
        int v40 = swift_getEnumCaseMultiPayload();
        switch(v40)
        {
          case 6:
            uint64_t v42 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v42 - 8) + 16))(v26, v27, v42);
            break;
          case 5:
            unsigned char *v26 = *v27;
            uint64_t v43 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                         + 20);
            uint64_t v44 = &v26[v43];
            uint64_t v105 = &v27[v43];
            uint64_t v45 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v45 - 8) + 16))(v44, v105, v45);
            break;
          case 1:
            uint64_t v41 = sub_253B08E50();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v41 - 8) + 16))(v26, v27, v41);
            break;
          default:
            memcpy(v26, v27, *(void *)(*(void *)(v38 - 8) + 64));
            goto LABEL_24;
        }
        swift_storeEnumTagMultiPayload();
LABEL_24:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v38);
        goto LABEL_25;
      case 3u:
        uint64_t v30 = sub_253B07160();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
        goto LABEL_45;
      default:
        uint64_t v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        uint64_t v11 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v12 = *(int *)(v11 + 20);
        uint64_t v13 = (void *)((char *)a1 + v12);
        uint64_t v14 = (void *)((char *)a2 + v12);
        uint64_t v15 = type metadata accessor for TranscriptProtoStatementID(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v15))
        {
          uint64_t v16 = sub_253462A5C(&qword_26B249528);
          memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
          uint64_t v31 = v14[2];
          v13[1] = v14[1];
          v13[2] = v31;
          uint64_t v32 = *(int *)(v15 + 24);
          uint64_t v104 = (char *)v14 + v32;
          uint64_t v109 = (char *)v13 + v32;
          uint64_t v33 = sub_253B07160();
          __dsta = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
          swift_bridgeObjectRetain();
          __dsta(v109, v104, v33);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v13, 0, 1, v15);
        }
        uint64_t v34 = *(int *)(v11 + 24);
        uint64_t v35 = (char *)a1 + v34;
        uint64_t v36 = (char *)a2 + v34;
        uint64_t v37 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
        goto LABEL_45;
    }
  }
  uint64_t v9 = *a2;
  *a1 = *a2;
  a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for TranscriptProtoRequestContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        uint64_t v5 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v6 = a1 + *(int *)(v5 + 20);
        uint64_t v7 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, 1, v7))
        {
          swift_bridgeObjectRelease();
          uint64_t v8 = v6 + *(int *)(v7 + 24);
          uint64_t v9 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
        }
        uint64_t v10 = *(int *)(v5 + 24);
        goto LABEL_31;
      case 1u:
        swift_bridgeObjectRelease();
        uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        goto LABEL_31;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v11 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        uint64_t v12 = a1 + v11[6];
        uint64_t v13 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v12, 1, v13)) {
          goto LABEL_18;
        }
        uint64_t v14 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v12, 1, v14)) {
          goto LABEL_17;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 6)
        {
          uint64_t v16 = sub_253B07160();
LABEL_15:
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v12, v16);
          goto LABEL_17;
        }
        if (EnumCaseMultiPayload != 5)
        {
          if (EnumCaseMultiPayload != 1) {
            goto LABEL_17;
          }
          uint64_t v16 = sub_253B08E50();
          goto LABEL_15;
        }
        uint64_t v18 = v12
            + *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        uint64_t v19 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
LABEL_17:
        uint64_t v20 = v12 + *(int *)(v13 + 20);
        uint64_t v21 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
LABEL_18:
        uint64_t v22 = a1 + v11[7];
        uint64_t v23 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v22, 1, v23))
        {
          swift_bridgeObjectRelease();
          uint64_t v24 = v22 + *(int *)(v23 + 24);
          uint64_t v25 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
        }
        uint64_t v26 = a1 + v11[8];
        uint64_t v27 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v26, 1, v27)) {
          goto LABEL_30;
        }
        uint64_t v28 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v26, 1, v28)) {
          goto LABEL_29;
        }
        int v29 = swift_getEnumCaseMultiPayload();
        if (v29 == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v34 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        }
        else
        {
          if (v29) {
            goto LABEL_29;
          }
          swift_bridgeObjectRelease();
          uint64_t v30 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          uint64_t v31 = v26 + *(int *)(v30 + 20);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v31, 1, v23))
          {
            swift_bridgeObjectRelease();
            uint64_t v32 = v31 + *(int *)(v23 + 24);
            uint64_t v33 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
          }
          uint64_t v34 = *(int *)(v30 + 24);
        }
        uint64_t v35 = v26 + v34;
        uint64_t v36 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
LABEL_29:
        uint64_t v37 = v26 + *(int *)(v27 + 20);
        uint64_t v38 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
LABEL_30:
        uint64_t v10 = v11[9];
LABEL_31:
        uint64_t v39 = a1 + v10;
        uint64_t v40 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
        break;
      case 3u:
        uint64_t v17 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a1, v17);
        break;
      default:
        break;
    }
  }
  uint64_t v41 = a1 + *(int *)(a2 + 20);
  uint64_t v42 = sub_253B07160();
  uint64_t v43 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8);
  return v43(v41, v42);
}

void *initializeWithCopy for TranscriptProtoRequestContent(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_253B07160();
        uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        goto LABEL_43;
      case 2u:
        uint64_t v20 = a2[1];
        *a1 = *a2;
        a1[1] = v20;
        uint64_t v21 = a2[3];
        a1[2] = a2[2];
        a1[3] = v21;
        uint64_t v22 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        uint64_t v23 = v22[6];
        uint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v26))
        {
          uint64_t v27 = sub_253462A5C(&qword_269CE2140);
          memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
          goto LABEL_24;
        }
        uint64_t v36 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v36))
        {
          uint64_t v37 = sub_253462A5C(&qword_269CE2200);
          memcpy(v24, v25, *(void *)(*(void *)(v37 - 8) + 64));
LABEL_23:
          uint64_t v44 = *(int *)(v26 + 20);
          uint64_t v45 = &v24[v44];
          uint64_t v46 = &v25[v44];
          uint64_t v47 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v26);
LABEL_24:
          uint64_t v48 = v22[7];
          uint64_t v49 = (void *)((char *)a1 + v48);
          uint64_t v50 = (void *)((char *)a2 + v48);
          uint64_t v51 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v50, 1, v51))
          {
            uint64_t v52 = sub_253462A5C(&qword_26B249528);
            memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
          }
          else
          {
            *(_DWORD *)uint64_t v49 = *(_DWORD *)v50;
            uint64_t v53 = v50[2];
            v49[1] = v50[1];
            v49[2] = v53;
            uint64_t v54 = *(int *)(v51 + 24);
            __dstb = (char *)v50 + v54;
            uint64_t v104 = (char *)v49 + v54;
            uint64_t v108 = v22;
            uint64_t v55 = sub_253B07160();
            uint64_t v56 = v51;
            uint64_t v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v58 = v55;
            uint64_t v22 = v108;
            v57(v104, __dstb, v58);
            uint64_t v51 = v56;
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v49, 0, 1, v56);
          }
          uint64_t v59 = v22[8];
          uint64_t v60 = (void *)((char *)a1 + v59);
          uint64_t v61 = (void *)((char *)a2 + v59);
          uint64_t v62 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v61, 1, v62))
          {
            uint64_t v63 = sub_253462A5C(&qword_269CE2130);
            memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
LABEL_42:
            uint64_t v84 = v22[9];
            uint64_t v85 = (char *)a1 + v84;
            uint64_t v86 = (char *)a2 + v84;
            uint64_t v87 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
LABEL_43:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
            goto LABEL_44;
          }
          uint64_t v64 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
          uint64_t v109 = v22;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v61, 1, v64))
          {
            uint64_t v65 = sub_253462A5C(&qword_269CE2150);
            memcpy(v60, v61, *(void *)(*(void *)(v65 - 8) + 64));
LABEL_41:
            uint64_t v80 = *(int *)(v62 + 20);
            uint64_t v81 = (char *)v60 + v80;
            uint64_t v82 = (char *)v61 + v80;
            uint64_t v83 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v60, 0, 1, v62);
            uint64_t v22 = v109;
            goto LABEL_42;
          }
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            void *v60 = *v61;
            uint64_t v72 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
            __dstc = (char *)v61 + v72;
            uint64_t v106 = (char *)v60 + v72;
            uint64_t v73 = sub_253B07160();
            uint64_t v96 = *(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16);
            swift_bridgeObjectRetain();
            v96(v106, __dstc, v73);
          }
          else
          {
            if (EnumCaseMultiPayload)
            {
              memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
LABEL_40:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v60, 0, 1, v64);
              goto LABEL_41;
            }
            uint64_t v67 = v61[1];
            void *v60 = *v61;
            v60[1] = v67;
            uint64_t v68 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
            uint64_t v69 = *(int *)(v68 + 20);
            __dst = (void *)((char *)v60 + v69);
            uint64_t v105 = v68;
            uint64_t v70 = (void *)((char *)v61 + v69);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v70, 1, v51))
            {
              uint64_t v71 = sub_253462A5C(&qword_26B249528);
              memcpy(__dst, v70, *(void *)(*(void *)(v71 - 8) + 64));
            }
            else
            {
              *(_DWORD *)__dst = *(_DWORD *)v70;
              uint64_t v74 = v70[2];
              __dst[1] = v70[1];
              __dst[2] = v74;
              uint64_t v75 = *(int *)(v51 + 24);
              uint64_t v95 = (char *)v70 + v75;
              uint64_t v97 = (char *)__dst + v75;
              uint64_t v94 = sub_253B07160();
              uint64_t v93 = *(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 16);
              swift_bridgeObjectRetain();
              v93(v97, v95, v94);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v51);
            }
            uint64_t v76 = *(int *)(v105 + 24);
            uint64_t v77 = (char *)v60 + v76;
            uint64_t v78 = (char *)v61 + v76;
            uint64_t v79 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v77, v78, v79);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_40;
        }
        int v38 = swift_getEnumCaseMultiPayload();
        switch(v38)
        {
          case 6:
            uint64_t v40 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v40 - 8) + 16))(v24, v25, v40);
            break;
          case 5:
            *uint64_t v24 = *v25;
            uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                         + 20);
            uint64_t v42 = &v24[v41];
            int v103 = &v25[v41];
            uint64_t v43 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v43 - 8) + 16))(v42, v103, v43);
            break;
          case 1:
            uint64_t v39 = sub_253B08E50();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v39 - 8) + 16))(v24, v25, v39);
            break;
          default:
            memcpy(v24, v25, *(void *)(*(void *)(v36 - 8) + 64));
            goto LABEL_22;
        }
        swift_storeEnumTagMultiPayload();
LABEL_22:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v36);
        goto LABEL_23;
      case 3u:
        uint64_t v28 = sub_253B07160();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
        goto LABEL_43;
      default:
        uint64_t v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        uint64_t v9 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v10 = *(int *)(v9 + 20);
        uint64_t v11 = (void *)((char *)a1 + v10);
        uint64_t v12 = (void *)((char *)a2 + v10);
        uint64_t v13 = type metadata accessor for TranscriptProtoStatementID(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13))
        {
          uint64_t v14 = sub_253462A5C(&qword_26B249528);
          memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
          uint64_t v29 = v12[2];
          v11[1] = v12[1];
          v11[2] = v29;
          uint64_t v30 = *(int *)(v13 + 24);
          uint64_t v102 = (char *)v12 + v30;
          uint64_t v107 = (char *)v11 + v30;
          uint64_t v31 = sub_253B07160();
          __dsta = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
          swift_bridgeObjectRetain();
          __dsta(v107, v102, v31);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v11, 0, 1, v13);
        }
        uint64_t v32 = *(int *)(v9 + 24);
        uint64_t v33 = (char *)a1 + v32;
        uint64_t v34 = (char *)a2 + v32;
        uint64_t v35 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
        goto LABEL_43;
    }
  }
  uint64_t v7 = sub_253462A5C(&qword_269CE1B00);
  memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_44:
  uint64_t v88 = *(int *)(a3 + 20);
  uint64_t v89 = (char *)a1 + v88;
  uint64_t v90 = (char *)a2 + v88;
  uint64_t v91 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16))(v89, v90, v91);
  return a1;
}

void *assignWithCopy for TranscriptProtoRequestContent(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *a1 = *a2;
          uint64_t v22 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          uint64_t v23 = (char *)a1 + v22;
          uint64_t v24 = (char *)a2 + v22;
          uint64_t v25 = sub_253B07160();
          uint64_t v26 = a3;
          uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
          swift_bridgeObjectRetain();
          v27(v23, v24, v25);
          a3 = v26;
          goto LABEL_62;
        case 2u:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          a1[3] = a2[3];
          uint64_t v28 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
          uint64_t v29 = v28[6];
          uint64_t v30 = (char *)a1 + v29;
          uint64_t v31 = (char *)a2 + v29;
          uint64_t v32 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v31, 1, v32))
          {
            uint64_t v33 = sub_253462A5C(&qword_269CE2140);
            memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
            goto LABEL_43;
          }
          uint64_t v53 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v31, 1, v53))
          {
            uint64_t v54 = sub_253462A5C(&qword_269CE2200);
            memcpy(v30, v31, *(void *)(*(void *)(v54 - 8) + 64));
LABEL_42:
            uint64_t v71 = *(int *)(v32 + 20);
            uint64_t v72 = &v30[v71];
            uint64_t v73 = &v31[v71];
            uint64_t v74 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v74 - 8) + 16))(v72, v73, v74);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v30, 0, 1, v32);
LABEL_43:
            uint64_t v75 = v28[7];
            uint64_t v76 = (void *)((char *)a1 + v75);
            uint64_t v77 = (void *)((char *)a2 + v75);
            uint64_t v78 = type metadata accessor for TranscriptProtoStatementID(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v77, 1, v78))
            {
              uint64_t v79 = sub_253462A5C(&qword_26B249528);
              memcpy(v76, v77, *(void *)(*(void *)(v79 - 8) + 64));
            }
            else
            {
              *(_DWORD *)uint64_t v76 = *(_DWORD *)v77;
              v76[1] = v77[1];
              v76[2] = v77[2];
              uint64_t v80 = *(int *)(v78 + 24);
              uint64_t v176 = (char *)v77 + v80;
              uint64_t v185 = (char *)v76 + v80;
              uint64_t v193 = v28;
              uint64_t v81 = sub_253B07160();
              uint64_t v82 = a3;
              uint64_t v83 = *(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16);
              swift_bridgeObjectRetain();
              uint64_t v84 = v81;
              uint64_t v28 = v193;
              v83(v185, v176, v84);
              a3 = v82;
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v76, 0, 1, v78);
            }
            uint64_t v85 = v28[8];
            uint64_t v86 = (void *)((char *)a1 + v85);
            uint64_t v87 = (void *)((char *)a2 + v85);
            uint64_t v88 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v87, 1, v88))
            {
              uint64_t v89 = sub_253462A5C(&qword_269CE2130);
              memcpy(v86, v87, *(void *)(*(void *)(v89 - 8) + 64));
LABEL_61:
              uint64_t v109 = v28[9];
              uint64_t v110 = (char *)a1 + v109;
              uint64_t v111 = (char *)a2 + v109;
              uint64_t v112 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16))(v110, v111, v112);
LABEL_62:
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
              goto LABEL_89;
            }
            uint64_t v90 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
            uint64_t v194 = v28;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v87, 1, v90))
            {
              uint64_t v91 = sub_253462A5C(&qword_269CE2150);
              memcpy(v86, v87, *(void *)(*(void *)(v91 - 8) + 64));
LABEL_60:
              uint64_t v105 = *(int *)(v88 + 20);
              uint64_t v106 = (char *)v86 + v105;
              uint64_t v107 = (char *)v87 + v105;
              uint64_t v108 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16))(v106, v107, v108);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v86, 0, 1, v88);
              uint64_t v28 = v194;
              goto LABEL_61;
            }
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 1)
            {
              *uint64_t v86 = *v87;
              uint64_t v97 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
              __dsta = (char *)v87 + v97;
              uint64_t v178 = (char *)v86 + v97;
              uint64_t v98 = sub_253B07160();
              uint64_t v167 = *(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16);
              swift_bridgeObjectRetain();
              v167(v178, __dsta, v98);
            }
            else
            {
              if (EnumCaseMultiPayload)
              {
                memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64));
LABEL_59:
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v86, 0, 1, v90);
                goto LABEL_60;
              }
              *uint64_t v86 = *v87;
              v86[1] = v87[1];
              uint64_t v93 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
              uint64_t v94 = *(int *)(v93 + 20);
              __dst = (void *)((char *)v86 + v94);
              uint64_t v177 = (int *)v93;
              uint64_t v95 = (void *)((char *)v87 + v94);
              swift_bridgeObjectRetain();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v95, 1, v78))
              {
                uint64_t v96 = sub_253462A5C(&qword_26B249528);
                memcpy(__dst, v95, *(void *)(*(void *)(v96 - 8) + 64));
              }
              else
              {
                *(_DWORD *)__dst = *(_DWORD *)v95;
                __dst[1] = v95[1];
                __dst[2] = v95[2];
                uint64_t v99 = *(int *)(v78 + 24);
                uint64_t v166 = (char *)v95 + v99;
                uint64_t v168 = (char *)__dst + v99;
                uint64_t v163 = sub_253B07160();
                uint64_t v186 = a3;
                uint64_t v100 = *(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 16);
                swift_bridgeObjectRetain();
                v100(v168, v166, v163);
                a3 = v186;
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v78);
              }
              uint64_t v101 = v177[6];
              uint64_t v102 = (char *)v86 + v101;
              int v103 = (char *)v87 + v101;
              uint64_t v104 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16))(v102, v103, v104);
            }
            swift_storeEnumTagMultiPayload();
            goto LABEL_59;
          }
          int v63 = swift_getEnumCaseMultiPayload();
          switch(v63)
          {
            case 6:
              uint64_t v67 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v67 - 8) + 16))(v30, v31, v67);
              break;
            case 5:
              *uint64_t v30 = *v31;
              uint64_t v68 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                           + 20);
              uint64_t v69 = &v30[v68];
              uint64_t v184 = &v31[v68];
              uint64_t v70 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v70 - 8) + 16))(v69, v184, v70);
              break;
            case 1:
              uint64_t v64 = sub_253B08E50();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v64 - 8) + 16))(v30, v31, v64);
              break;
            default:
              memcpy(v30, v31, *(void *)(*(void *)(v53 - 8) + 64));
              goto LABEL_41;
          }
          swift_storeEnumTagMultiPayload();
LABEL_41:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v30, 0, 1, v53);
          goto LABEL_42;
        case 3u:
          uint64_t v34 = sub_253B07160();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(a1, a2, v34);
          goto LABEL_62;
        default:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v9 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          uint64_t v10 = *(int *)(v9 + 20);
          uint64_t v11 = (void *)((char *)a1 + v10);
          uint64_t v12 = (void *)((char *)a2 + v10);
          uint64_t v13 = type metadata accessor for TranscriptProtoStatementID(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13))
          {
            uint64_t v14 = sub_253462A5C(&qword_26B249528);
            memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
          }
          else
          {
            *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
            v11[1] = v12[1];
            v11[2] = v12[2];
            uint64_t v35 = *(int *)(v13 + 24);
            uint64_t v182 = (char *)v12 + v35;
            uint64_t v191 = (char *)v11 + v35;
            uint64_t v36 = sub_253B07160();
            uint64_t v174 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
            swift_bridgeObjectRetain();
            v174(v191, v182, v36);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v11, 0, 1, v13);
          }
          uint64_t v37 = *(int *)(v9 + 24);
          int v38 = (char *)a1 + v37;
          uint64_t v39 = (char *)a2 + v37;
          uint64_t v40 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
          goto LABEL_62;
      }
    }
    goto LABEL_8;
  }
  if (!v8)
  {
    if (a1 == a2) {
      goto LABEL_89;
    }
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        uint64_t v42 = (char *)a1 + v41;
        uint64_t v43 = (char *)a2 + v41;
        uint64_t v44 = sub_253B07160();
        uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
        swift_bridgeObjectRetain();
        v45(v42, v43, v44);
        goto LABEL_88;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        uint64_t v46 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        uint64_t v47 = v46[6];
        uint64_t v48 = (char *)a1 + v47;
        uint64_t v49 = (char *)a2 + v47;
        uint64_t v50 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v49, 1, v50))
        {
          uint64_t v51 = sub_253462A5C(&qword_269CE2140);
          memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
          goto LABEL_69;
        }
        uint64_t v61 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v49, 1, v61))
        {
          uint64_t v62 = sub_253462A5C(&qword_269CE2200);
          memcpy(v48, v49, *(void *)(*(void *)(v62 - 8) + 64));
LABEL_68:
          uint64_t v117 = *(int *)(v50 + 20);
          uint64_t v118 = &v48[v117];
          uint64_t v119 = &v49[v117];
          uint64_t v120 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v120 - 8) + 16))(v118, v119, v120);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v48, 0, 1, v50);
LABEL_69:
          uint64_t v121 = v46[7];
          uint64_t v122 = (void *)((char *)a1 + v121);
          uint64_t v123 = (void *)((char *)a2 + v121);
          uint64_t v124 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v123, 1, v124))
          {
            uint64_t v125 = sub_253462A5C(&qword_26B249528);
            memcpy(v122, v123, *(void *)(*(void *)(v125 - 8) + 64));
          }
          else
          {
            *(_DWORD *)uint64_t v122 = *(_DWORD *)v123;
            v122[1] = v123[1];
            v122[2] = v123[2];
            uint64_t v126 = *(int *)(v124 + 24);
            uint64_t v179 = (char *)v123 + v126;
            uint64_t v188 = (char *)v122 + v126;
            int v195 = v46;
            uint64_t v127 = sub_253B07160();
            uint64_t v128 = v124;
            uint64_t v129 = *(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v130 = v127;
            uint64_t v46 = v195;
            v129(v188, v179, v130);
            uint64_t v124 = v128;
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v122, 0, 1, v128);
          }
          uint64_t v131 = v46[8];
          uint64_t v132 = (void *)((char *)a1 + v131);
          uint64_t v133 = (void *)((char *)a2 + v131);
          uint64_t v134 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v133, 1, v134))
          {
            uint64_t v135 = sub_253462A5C(&qword_269CE2130);
            memcpy(v132, v133, *(void *)(*(void *)(v135 - 8) + 64));
LABEL_87:
            uint64_t v154 = v46[9];
            uint64_t v155 = (char *)a1 + v154;
            uint64_t v156 = (char *)a2 + v154;
            uint64_t v157 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 16))(v155, v156, v157);
LABEL_88:
            swift_storeEnumTagMultiPayload();
            goto LABEL_89;
          }
          uint64_t v136 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
          uint64_t v196 = v46;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v133, 1, v136))
          {
            uint64_t v137 = sub_253462A5C(&qword_269CE2150);
            memcpy(v132, v133, *(void *)(*(void *)(v137 - 8) + 64));
LABEL_86:
            uint64_t v150 = *(int *)(v134 + 20);
            uint64_t v151 = (char *)v132 + v150;
            uint64_t v152 = (char *)v133 + v150;
            uint64_t v153 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 16))(v151, v152, v153);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v132, 0, 1, v134);
            uint64_t v46 = v196;
            goto LABEL_87;
          }
          int v138 = swift_getEnumCaseMultiPayload();
          if (v138 == 1)
          {
            *uint64_t v132 = *v133;
            uint64_t v143 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
            uint64_t v181 = (char *)v133 + v143;
            uint64_t v190 = (char *)v132 + v143;
            uint64_t v144 = sub_253B07160();
            __dstb = *(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 16);
            swift_bridgeObjectRetain();
            __dstb(v190, v181, v144);
          }
          else
          {
            if (v138)
            {
              memcpy(v132, v133, *(void *)(*(void *)(v136 - 8) + 64));
LABEL_85:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v132, 0, 1, v136);
              goto LABEL_86;
            }
            *uint64_t v132 = *v133;
            v132[1] = v133[1];
            uint64_t v139 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
            uint64_t v140 = *(int *)(v139 + 20);
            uint64_t v180 = (void *)((char *)v132 + v140);
            uint64_t v189 = v139;
            uint64_t v141 = (void *)((char *)v133 + v140);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v141, 1, v124))
            {
              uint64_t v142 = sub_253462A5C(&qword_26B249528);
              memcpy(v180, v141, *(void *)(*(void *)(v142 - 8) + 64));
            }
            else
            {
              *(_DWORD *)uint64_t v180 = *(_DWORD *)v141;
              v180[1] = v141[1];
              v180[2] = v141[2];
              uint64_t v145 = *(int *)(v124 + 24);
              uint64_t v169 = (char *)v141 + v145;
              __dstc = (char *)v180 + v145;
              uint64_t v165 = sub_253B07160();
              uint64_t v164 = *(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 16);
              swift_bridgeObjectRetain();
              v164(__dstc, v169, v165);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v180, 0, 1, v124);
            }
            uint64_t v146 = *(int *)(v189 + 24);
            uint64_t v147 = (char *)v132 + v146;
            uint64_t v148 = (char *)v133 + v146;
            uint64_t v149 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16))(v147, v148, v149);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_85;
        }
        int v65 = swift_getEnumCaseMultiPayload();
        switch(v65)
        {
          case 6:
            uint64_t v113 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v113 - 8) + 16))(v48, v49, v113);
            break;
          case 5:
            *uint64_t v48 = *v49;
            uint64_t v114 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                          + 20);
            uint64_t v115 = &v48[v114];
            uint64_t v187 = &v49[v114];
            uint64_t v116 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v116 - 8) + 16))(v115, v187, v116);
            break;
          case 1:
            uint64_t v66 = sub_253B08E50();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v66 - 8) + 16))(v48, v49, v66);
            break;
          default:
            memcpy(v48, v49, *(void *)(*(void *)(v61 - 8) + 64));
            goto LABEL_67;
        }
        swift_storeEnumTagMultiPayload();
LABEL_67:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v48, 0, 1, v61);
        goto LABEL_68;
      case 3u:
        uint64_t v52 = sub_253B07160();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v52 - 8) + 16))(a1, a2, v52);
        goto LABEL_88;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v16 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v17 = *(int *)(v16 + 20);
        uint64_t v18 = (void *)((char *)a1 + v17);
        uint64_t v19 = (void *)((char *)a2 + v17);
        uint64_t v20 = type metadata accessor for TranscriptProtoStatementID(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
        {
          uint64_t v21 = sub_253462A5C(&qword_26B249528);
          memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
          v18[1] = v19[1];
          v18[2] = v19[2];
          uint64_t v55 = *(int *)(v20 + 24);
          uint64_t v183 = (char *)v19 + v55;
          uint64_t v192 = (char *)v18 + v55;
          uint64_t v56 = sub_253B07160();
          size_t v175 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16);
          swift_bridgeObjectRetain();
          v175(v192, v183, v56);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
        }
        uint64_t v57 = *(int *)(v16 + 24);
        uint64_t v58 = (char *)a1 + v57;
        uint64_t v59 = (char *)a2 + v57;
        uint64_t v60 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
        goto LABEL_88;
    }
  }
  sub_2536FA73C();
LABEL_8:
  uint64_t v15 = sub_253462A5C(&qword_269CE1B00);
  memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
LABEL_89:
  uint64_t v158 = *(int *)(a3 + 20);
  uint64_t v159 = (char *)a1 + v158;
  uint64_t v160 = (char *)a2 + v158;
  uint64_t v161 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 24))(v159, v160, v161);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoRequestContent(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        uint64_t v14 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
        goto LABEL_43;
      case 2u:
        long long v18 = a2[1];
        *a1 = *a2;
        a1[1] = v18;
        uint64_t v19 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        uint64_t v20 = v19[6];
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        uint64_t v23 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v23))
        {
          uint64_t v24 = sub_253462A5C(&qword_269CE2140);
          memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
          goto LABEL_24;
        }
        uint64_t v34 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v34))
        {
          uint64_t v35 = sub_253462A5C(&qword_269CE2200);
          memcpy(v21, v22, *(void *)(*(void *)(v35 - 8) + 64));
LABEL_23:
          uint64_t v42 = *(int *)(v23 + 20);
          uint64_t v43 = &v21[v42];
          uint64_t v44 = &v22[v42];
          uint64_t v45 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v21, 0, 1, v23);
LABEL_24:
          uint64_t v46 = v19[7];
          uint64_t v47 = (_DWORD *)((char *)a1 + v46);
          uint64_t v48 = (_DWORD *)((char *)a2 + v46);
          uint64_t v49 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v48, 1, v49))
          {
            uint64_t v50 = sub_253462A5C(&qword_26B249528);
            memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
          }
          else
          {
            *uint64_t v47 = *v48;
            *(_OWORD *)(v47 + 2) = *(_OWORD *)(v48 + 2);
            uint64_t v51 = *(int *)(v49 + 24);
            uint64_t v52 = (char *)v47 + v51;
            uint64_t v53 = (char *)v48 + v51;
            uint64_t v54 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v47, 0, 1, v49);
          }
          uint64_t v55 = v19[8];
          uint64_t v56 = (void *)((char *)a1 + v55);
          uint64_t v57 = (void *)((char *)a2 + v55);
          uint64_t v58 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v57, 1, v58))
          {
            uint64_t v59 = sub_253462A5C(&qword_269CE2130);
            memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
LABEL_42:
            uint64_t v78 = v19[9];
            uint64_t v79 = (char *)a1 + v78;
            uint64_t v80 = (char *)a2 + v78;
            uint64_t v81 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 32))(v79, v80, v81);
LABEL_43:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
            goto LABEL_44;
          }
          uint64_t v60 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v57, 1, v60))
          {
            uint64_t v61 = sub_253462A5C(&qword_269CE2150);
            memcpy(v56, v57, *(void *)(*(void *)(v61 - 8) + 64));
LABEL_41:
            uint64_t v74 = *(int *)(v58 + 20);
            uint64_t v75 = (char *)v56 + v74;
            uint64_t v76 = (char *)v57 + v74;
            uint64_t v77 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 32))(v75, v76, v77);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v56, 0, 1, v58);
            goto LABEL_42;
          }
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            void *v56 = *v57;
            uint64_t v66 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
            uint64_t v67 = (char *)v56 + v66;
            __dstb = (char *)v57 + v66;
            uint64_t v68 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v67, __dstb, v68);
          }
          else
          {
            if (EnumCaseMultiPayload)
            {
              memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
LABEL_40:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v56, 0, 1, v60);
              goto LABEL_41;
            }
            *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
            uint64_t v63 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
            uint64_t v64 = *(int *)(v63 + 20);
            uint64_t v90 = v63;
            __dst = (_DWORD *)((char *)v56 + v64);
            __src = (_DWORD *)((char *)v57 + v64);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v57 + v64, 1, v49))
            {
              uint64_t v65 = sub_253462A5C(&qword_26B249528);
              memcpy(__dst, __src, *(void *)(*(void *)(v65 - 8) + 64));
            }
            else
            {
              _DWORD *__dst = *__src;
              *(_OWORD *)(__dst + 2) = *(_OWORD *)(__src + 2);
              uint64_t v69 = *(int *)(v49 + 24);
              uint64_t v87 = (char *)__dst + v69;
              __srca = (char *)__src + v69;
              uint64_t v70 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v87, __srca, v70);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v49);
            }
            uint64_t v71 = *(int *)(v90 + 24);
            uint64_t v72 = (char *)v56 + v71;
            __dstc = (char *)v57 + v71;
            uint64_t v73 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v72, __dstc, v73);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_40;
        }
        int v36 = swift_getEnumCaseMultiPayload();
        switch(v36)
        {
          case 6:
            uint64_t v38 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v38 - 8) + 32))(v21, v22, v38);
            break;
          case 5:
            unsigned char *v21 = *v22;
            uint64_t v39 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                         + 20);
            uint64_t v40 = &v21[v39];
            __dsta = &v22[v39];
            uint64_t v41 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v41 - 8) + 32))(v40, __dsta, v41);
            break;
          case 1:
            uint64_t v37 = sub_253B08E50();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v37 - 8) + 32))(v21, v22, v37);
            break;
          default:
            memcpy(v21, v22, *(void *)(*(void *)(v34 - 8) + 64));
            goto LABEL_22;
        }
        swift_storeEnumTagMultiPayload();
LABEL_22:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v21, 0, 1, v34);
        goto LABEL_23;
      case 3u:
        uint64_t v25 = sub_253B07160();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v25 - 8) + 32))(a1, a2, v25);
        goto LABEL_43;
      default:
        *a1 = *a2;
        uint64_t v8 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v9 = *(int *)(v8 + 20);
        uint64_t v10 = (_DWORD *)((char *)a1 + v9);
        uint64_t v11 = (_DWORD *)((char *)a2 + v9);
        uint64_t v12 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
        {
          uint64_t v13 = sub_253462A5C(&qword_26B249528);
          memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          _DWORD *v10 = *v11;
          *(_OWORD *)(v10 + 2) = *(_OWORD *)(v11 + 2);
          uint64_t v26 = *(int *)(v12 + 24);
          uint64_t v27 = (char *)v10 + v26;
          uint64_t v28 = (char *)v11 + v26;
          uint64_t v29 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
        }
        uint64_t v30 = *(int *)(v8 + 24);
        uint64_t v31 = (char *)a1 + v30;
        uint64_t v32 = (char *)a2 + v30;
        uint64_t v33 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
        goto LABEL_43;
    }
  }
  uint64_t v7 = sub_253462A5C(&qword_269CE1B00);
  memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_44:
  uint64_t v82 = *(int *)(a3 + 20);
  uint64_t v83 = (char *)a1 + v82;
  uint64_t v84 = (char *)a2 + v82;
  uint64_t v85 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 32))(v83, v84, v85);
  return a1;
}

_OWORD *assignWithTake for TranscriptProtoRequestContent(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)a1 = *(void *)a2;
          uint64_t v22 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          uint64_t v23 = (char *)a1 + v22;
          uint64_t v24 = (char *)a2 + v22;
          uint64_t v25 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
          goto LABEL_62;
        case 2u:
          long long v26 = a2[1];
          *a1 = *a2;
          a1[1] = v26;
          uint64_t v27 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
          uint64_t v28 = v27[6];
          uint64_t v29 = (char *)a1 + v28;
          uint64_t v30 = (char *)a2 + v28;
          uint64_t v31 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v30, 1, v31))
          {
            uint64_t v32 = sub_253462A5C(&qword_269CE2140);
            memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
            goto LABEL_43;
          }
          uint64_t v54 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v30, 1, v54))
          {
            uint64_t v55 = sub_253462A5C(&qword_269CE2200);
            memcpy(v29, v30, *(void *)(*(void *)(v55 - 8) + 64));
LABEL_42:
            uint64_t v74 = *(int *)(v31 + 20);
            uint64_t v75 = &v29[v74];
            uint64_t v76 = &v30[v74];
            uint64_t v77 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v77 - 8) + 32))(v75, v76, v77);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v29, 0, 1, v31);
LABEL_43:
            uint64_t v78 = v27[7];
            uint64_t v79 = (_DWORD *)((char *)a1 + v78);
            uint64_t v80 = (_DWORD *)((char *)a2 + v78);
            uint64_t v81 = type metadata accessor for TranscriptProtoStatementID(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v80, 1, v81))
            {
              uint64_t v82 = sub_253462A5C(&qword_26B249528);
              memcpy(v79, v80, *(void *)(*(void *)(v82 - 8) + 64));
            }
            else
            {
              *uint64_t v79 = *v80;
              *(_OWORD *)(v79 + 2) = *(_OWORD *)(v80 + 2);
              uint64_t v83 = *(int *)(v81 + 24);
              uint64_t v84 = (char *)v79 + v83;
              uint64_t v85 = (char *)v80 + v83;
              uint64_t v86 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 32))(v84, v85, v86);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v79, 0, 1, v81);
            }
            uint64_t v87 = v27[8];
            uint64_t v88 = (void *)((char *)a1 + v87);
            uint64_t v89 = (void *)((char *)a2 + v87);
            uint64_t v90 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v89, 1, v90))
            {
              uint64_t v91 = sub_253462A5C(&qword_269CE2130);
              memcpy(v88, v89, *(void *)(*(void *)(v91 - 8) + 64));
LABEL_61:
              uint64_t v110 = v27[9];
              uint64_t v111 = (char *)a1 + v110;
              uint64_t v112 = (char *)a2 + v110;
              uint64_t v113 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 32))(v111, v112, v113);
LABEL_62:
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
              goto LABEL_89;
            }
            uint64_t v92 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v89, 1, v92))
            {
              uint64_t v93 = sub_253462A5C(&qword_269CE2150);
              memcpy(v88, v89, *(void *)(*(void *)(v93 - 8) + 64));
LABEL_60:
              uint64_t v106 = *(int *)(v90 + 20);
              uint64_t v107 = (char *)v88 + v106;
              uint64_t v108 = (char *)v89 + v106;
              uint64_t v109 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 32))(v107, v108, v109);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v88, 0, 1, v90);
              goto LABEL_61;
            }
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 1)
            {
              void *v88 = *v89;
              uint64_t v98 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
              uint64_t v99 = (char *)v88 + v98;
              __dstc = (char *)v89 + v98;
              uint64_t v100 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v99, __dstc, v100);
            }
            else
            {
              if (EnumCaseMultiPayload)
              {
                memcpy(v88, v89, *(void *)(*(void *)(v92 - 8) + 64));
LABEL_59:
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v88, 0, 1, v92);
                goto LABEL_60;
              }
              *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
              uint64_t v95 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
              uint64_t v96 = *(int *)(v95 + 20);
              uint64_t v169 = v95;
              __dst = (_DWORD *)((char *)v88 + v96);
              __src = (_DWORD *)((char *)v89 + v96);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v89 + v96, 1, v81))
              {
                uint64_t v97 = sub_253462A5C(&qword_26B249528);
                memcpy(__dst, __src, *(void *)(*(void *)(v97 - 8) + 64));
              }
              else
              {
                _DWORD *__dst = *__src;
                *(_OWORD *)(__dst + 2) = *(_OWORD *)(__src + 2);
                uint64_t v101 = *(int *)(v81 + 24);
                uint64_t v163 = (char *)__dst + v101;
                __srcb = (char *)__src + v101;
                uint64_t v102 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v163, __srcb, v102);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v81);
              }
              uint64_t v103 = *(int *)(v169 + 24);
              uint64_t v104 = (char *)v88 + v103;
              __dstd = (char *)v89 + v103;
              uint64_t v105 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 32))(v104, __dstd, v105);
            }
            swift_storeEnumTagMultiPayload();
            goto LABEL_59;
          }
          int v66 = swift_getEnumCaseMultiPayload();
          switch(v66)
          {
            case 6:
              uint64_t v70 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v70 - 8) + 32))(v29, v30, v70);
              break;
            case 5:
              unsigned char *v29 = *v30;
              uint64_t v71 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                           + 20);
              uint64_t v72 = &v29[v71];
              __dstb = &v30[v71];
              uint64_t v73 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v73 - 8) + 32))(v72, __dstb, v73);
              break;
            case 1:
              uint64_t v67 = sub_253B08E50();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v67 - 8) + 32))(v29, v30, v67);
              break;
            default:
              memcpy(v29, v30, *(void *)(*(void *)(v54 - 8) + 64));
              goto LABEL_41;
          }
          swift_storeEnumTagMultiPayload();
LABEL_41:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v29, 0, 1, v54);
          goto LABEL_42;
        case 3u:
          uint64_t v33 = sub_253B07160();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v33 - 8) + 32))(a1, a2, v33);
          goto LABEL_62;
        default:
          *a1 = *a2;
          uint64_t v9 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          uint64_t v10 = *(int *)(v9 + 20);
          uint64_t v11 = (_DWORD *)((char *)a1 + v10);
          uint64_t v12 = (_DWORD *)((char *)a2 + v10);
          uint64_t v13 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13))
          {
            uint64_t v14 = sub_253462A5C(&qword_26B249528);
            memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
          }
          else
          {
            _DWORD *v11 = *v12;
            *(_OWORD *)(v11 + 2) = *(_OWORD *)(v12 + 2);
            uint64_t v34 = *(int *)(v13 + 24);
            uint64_t v35 = (char *)v11 + v34;
            int v36 = (char *)v12 + v34;
            uint64_t v37 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v11, 0, 1, v13);
          }
          uint64_t v38 = *(int *)(v9 + 24);
          uint64_t v39 = (char *)a1 + v38;
          uint64_t v40 = (char *)a2 + v38;
          uint64_t v41 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
          goto LABEL_62;
      }
    }
    goto LABEL_8;
  }
  if (!v8)
  {
    if (a1 == a2) {
      goto LABEL_89;
    }
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        uint64_t v42 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        uint64_t v43 = (char *)a1 + v42;
        uint64_t v44 = (char *)a2 + v42;
        uint64_t v45 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
        goto LABEL_88;
      case 2u:
        long long v46 = a2[1];
        *a1 = *a2;
        a1[1] = v46;
        uint64_t v47 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        uint64_t v48 = v47[6];
        uint64_t v49 = (char *)a1 + v48;
        uint64_t v50 = (char *)a2 + v48;
        uint64_t v51 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v50, 1, v51))
        {
          uint64_t v52 = sub_253462A5C(&qword_269CE2140);
          memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
          goto LABEL_69;
        }
        uint64_t v64 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v50, 1, v64))
        {
          uint64_t v65 = sub_253462A5C(&qword_269CE2200);
          memcpy(v49, v50, *(void *)(*(void *)(v65 - 8) + 64));
LABEL_68:
          uint64_t v118 = *(int *)(v51 + 20);
          uint64_t v119 = &v49[v118];
          uint64_t v120 = &v50[v118];
          uint64_t v121 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v121 - 8) + 32))(v119, v120, v121);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v49, 0, 1, v51);
LABEL_69:
          uint64_t v122 = v47[7];
          uint64_t v123 = (_DWORD *)((char *)a1 + v122);
          uint64_t v124 = (_DWORD *)((char *)a2 + v122);
          uint64_t v125 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v124, 1, v125))
          {
            uint64_t v126 = sub_253462A5C(&qword_26B249528);
            memcpy(v123, v124, *(void *)(*(void *)(v126 - 8) + 64));
          }
          else
          {
            *uint64_t v123 = *v124;
            *(_OWORD *)(v123 + 2) = *(_OWORD *)(v124 + 2);
            uint64_t v127 = *(int *)(v125 + 24);
            uint64_t v128 = (char *)v123 + v127;
            uint64_t v129 = (char *)v124 + v127;
            uint64_t v130 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 32))(v128, v129, v130);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v123, 0, 1, v125);
          }
          uint64_t v131 = v47[8];
          uint64_t v132 = (void *)((char *)a1 + v131);
          uint64_t v133 = (void *)((char *)a2 + v131);
          uint64_t v134 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v133, 1, v134))
          {
            uint64_t v135 = sub_253462A5C(&qword_269CE2130);
            memcpy(v132, v133, *(void *)(*(void *)(v135 - 8) + 64));
LABEL_87:
            uint64_t v154 = v47[9];
            uint64_t v155 = (char *)a1 + v154;
            uint64_t v156 = (char *)a2 + v154;
            uint64_t v157 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 32))(v155, v156, v157);
LABEL_88:
            swift_storeEnumTagMultiPayload();
            goto LABEL_89;
          }
          uint64_t v136 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v133, 1, v136))
          {
            uint64_t v137 = sub_253462A5C(&qword_269CE2150);
            memcpy(v132, v133, *(void *)(*(void *)(v137 - 8) + 64));
LABEL_86:
            uint64_t v150 = *(int *)(v134 + 20);
            uint64_t v151 = (char *)v132 + v150;
            uint64_t v152 = (char *)v133 + v150;
            uint64_t v153 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 32))(v151, v152, v153);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v132, 0, 1, v134);
            goto LABEL_87;
          }
          int v138 = swift_getEnumCaseMultiPayload();
          if (v138 == 1)
          {
            *uint64_t v132 = *v133;
            uint64_t v142 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
            uint64_t v143 = (char *)v132 + v142;
            __dstf = (char *)v133 + v142;
            uint64_t v144 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 32))(v143, __dstf, v144);
          }
          else
          {
            if (v138)
            {
              memcpy(v132, v133, *(void *)(*(void *)(v136 - 8) + 64));
LABEL_85:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v132, 0, 1, v136);
              goto LABEL_86;
            }
            *(_OWORD *)uint64_t v132 = *(_OWORD *)v133;
            uint64_t v139 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
            uint64_t v140 = *(int *)(v139 + 20);
            uint64_t v170 = v139;
            __dsta = (_DWORD *)((char *)v132 + v140);
            __srca = (_DWORD *)((char *)v133 + v140);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v133 + v140, 1, v125))
            {
              uint64_t v141 = sub_253462A5C(&qword_26B249528);
              memcpy(__dsta, __srca, *(void *)(*(void *)(v141 - 8) + 64));
            }
            else
            {
              _DWORD *__dsta = *__srca;
              *(_OWORD *)(__dsta + 2) = *(_OWORD *)(__srca + 2);
              uint64_t v145 = *(int *)(v125 + 24);
              uint64_t v164 = (char *)__dsta + v145;
              __srcc = (char *)__srca + v145;
              uint64_t v146 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 32))(v164, __srcc, v146);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v125);
            }
            uint64_t v147 = *(int *)(v170 + 24);
            uint64_t v148 = (char *)v132 + v147;
            __dstg = (char *)v133 + v147;
            uint64_t v149 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 32))(v148, __dstg, v149);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_85;
        }
        int v68 = swift_getEnumCaseMultiPayload();
        switch(v68)
        {
          case 6:
            uint64_t v114 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v114 - 8) + 32))(v49, v50, v114);
            break;
          case 5:
            *uint64_t v49 = *v50;
            uint64_t v115 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                          + 20);
            uint64_t v116 = &v49[v115];
            __dste = &v50[v115];
            uint64_t v117 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v117 - 8) + 32))(v116, __dste, v117);
            break;
          case 1:
            uint64_t v69 = sub_253B08E50();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v69 - 8) + 32))(v49, v50, v69);
            break;
          default:
            memcpy(v49, v50, *(void *)(*(void *)(v64 - 8) + 64));
            goto LABEL_67;
        }
        swift_storeEnumTagMultiPayload();
LABEL_67:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v49, 0, 1, v64);
        goto LABEL_68;
      case 3u:
        uint64_t v53 = sub_253B07160();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v53 - 8) + 32))(a1, a2, v53);
        goto LABEL_88;
      default:
        *a1 = *a2;
        uint64_t v16 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v17 = *(int *)(v16 + 20);
        long long v18 = (_DWORD *)((char *)a1 + v17);
        uint64_t v19 = (_DWORD *)((char *)a2 + v17);
        uint64_t v20 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
        {
          uint64_t v21 = sub_253462A5C(&qword_26B249528);
          memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          _DWORD *v18 = *v19;
          *(_OWORD *)(v18 + 2) = *(_OWORD *)(v19 + 2);
          uint64_t v56 = *(int *)(v20 + 24);
          uint64_t v57 = (char *)v18 + v56;
          uint64_t v58 = (char *)v19 + v56;
          uint64_t v59 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
        }
        uint64_t v60 = *(int *)(v16 + 24);
        uint64_t v61 = (char *)a1 + v60;
        uint64_t v62 = (char *)a2 + v60;
        uint64_t v63 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
        goto LABEL_88;
    }
  }
  sub_2536FA73C();
LABEL_8:
  uint64_t v15 = sub_253462A5C(&qword_269CE1B00);
  memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
LABEL_89:
  uint64_t v158 = *(int *)(a3 + 20);
  uint64_t v159 = (char *)a1 + v158;
  uint64_t v160 = (char *)a2 + v158;
  uint64_t v161 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 40))(v159, v160, v161);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequestContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2537F9188);
}

uint64_t sub_2537F9188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE1B00);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequestContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2537F91A8);
}

uint64_t sub_2537F91A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE1B00);
}

void sub_2537F91B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoRequestContentEnum(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v14 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_253B07160();
        long long v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
        swift_bridgeObjectRetain();
        v18(v15, v16, v17);
        goto LABEL_43;
      case 2u:
        uint64_t v19 = a2[1];
        *a1 = *a2;
        a1[1] = v19;
        uint64_t v20 = a2[3];
        a1[2] = a2[2];
        a1[3] = v20;
        uint64_t v21 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        uint64_t v22 = v21[6];
        uint64_t v23 = (char *)a1 + v22;
        uint64_t v24 = (char *)a2 + v22;
        uint64_t v25 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
        {
          uint64_t v26 = sub_253462A5C(&qword_269CE2140);
          memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
          goto LABEL_24;
        }
        uint64_t v36 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v36))
        {
          uint64_t v37 = sub_253462A5C(&qword_269CE2200);
          memcpy(v23, v24, *(void *)(*(void *)(v37 - 8) + 64));
LABEL_23:
          uint64_t v45 = *(int *)(v25 + 20);
          long long v46 = &v23[v45];
          uint64_t v47 = &v24[v45];
          uint64_t v48 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v25);
LABEL_24:
          uint64_t v49 = v21[7];
          uint64_t v50 = (void *)((char *)a1 + v49);
          uint64_t v51 = (void *)((char *)a2 + v49);
          uint64_t v52 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v51, 1, v52))
          {
            uint64_t v53 = sub_253462A5C(&qword_26B249528);
            memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
          }
          else
          {
            *(_DWORD *)uint64_t v50 = *(_DWORD *)v51;
            uint64_t v54 = v51[2];
            v50[1] = v51[1];
            v50[2] = v54;
            uint64_t v55 = *(int *)(v52 + 24);
            __dstb = (char *)v51 + v55;
            uint64_t v101 = (char *)v50 + v55;
            uint64_t v56 = sub_253B07160();
            uint64_t v57 = v21;
            uint64_t v58 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16);
            swift_bridgeObjectRetain();
            v58(v101, __dstb, v56);
            uint64_t v21 = v57;
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v50, 0, 1, v52);
          }
          uint64_t v59 = v21[8];
          uint64_t v60 = (void *)((char *)a1 + v59);
          uint64_t v61 = (void *)((char *)a2 + v59);
          uint64_t v62 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v61, 1, v62))
          {
            uint64_t v63 = sub_253462A5C(&qword_269CE2130);
            memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
LABEL_42:
            uint64_t v85 = v21[9];
            uint64_t v86 = (char *)a1 + v85;
            uint64_t v87 = (char *)a2 + v85;
            uint64_t v88 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v86, v87, v88);
LABEL_43:
            swift_storeEnumTagMultiPayload();
            return a1;
          }
          uint64_t v64 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v61, 1, v64))
          {
            uint64_t v65 = sub_253462A5C(&qword_269CE2150);
            memcpy(v60, v61, *(void *)(*(void *)(v65 - 8) + 64));
LABEL_41:
            uint64_t v81 = *(int *)(v62 + 20);
            uint64_t v82 = (char *)v60 + v81;
            uint64_t v83 = (char *)v61 + v81;
            uint64_t v84 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16))(v82, v83, v84);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v60, 0, 1, v62);
            goto LABEL_42;
          }
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            void *v60 = *v61;
            uint64_t v72 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
            uint64_t v95 = (char *)v61 + v72;
            __dstc = (char *)v60 + v72;
            uint64_t v73 = sub_253B07160();
            uint64_t v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16);
            swift_bridgeObjectRetain();
            v92(__dstc, v95, v73);
          }
          else
          {
            if (EnumCaseMultiPayload)
            {
              memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
LABEL_40:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v60, 0, 1, v64);
              goto LABEL_41;
            }
            uint64_t v67 = v61[1];
            void *v60 = *v61;
            v60[1] = v67;
            uint64_t v68 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
            uint64_t v69 = *(int *)(v68 + 20);
            uint64_t v94 = v68;
            __dst = (void *)((char *)v60 + v69);
            uint64_t v70 = (void *)((char *)v61 + v69);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v70, 1, v52))
            {
              uint64_t v71 = sub_253462A5C(&qword_26B249528);
              memcpy(__dst, v70, *(void *)(*(void *)(v71 - 8) + 64));
            }
            else
            {
              *(_DWORD *)__dst = *(_DWORD *)v70;
              uint64_t v74 = v70[2];
              __dst[1] = v70[1];
              __dst[2] = v74;
              uint64_t v75 = *(int *)(v52 + 24);
              uint64_t v91 = (char *)v70 + v75;
              uint64_t v93 = (char *)__dst + v75;
              uint64_t v90 = sub_253B07160();
              uint64_t v102 = v21;
              uint64_t v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16);
              swift_bridgeObjectRetain();
              v76(v93, v91, v90);
              uint64_t v21 = v102;
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v52);
            }
            uint64_t v77 = *(int *)(v94 + 24);
            uint64_t v78 = (char *)v60 + v77;
            uint64_t v79 = (char *)v61 + v77;
            uint64_t v80 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v78, v79, v80);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_40;
        }
        int v38 = swift_getEnumCaseMultiPayload();
        switch(v38)
        {
          case 6:
            uint64_t v40 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v40 - 8) + 16))(v23, v24, v40);
            break;
          case 5:
            *uint64_t v23 = *v24;
            uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                         + 20);
            uint64_t v42 = &v23[v41];
            uint64_t v43 = &v24[v41];
            uint64_t v44 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
            break;
          case 1:
            uint64_t v39 = sub_253B08E50();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v39 - 8) + 16))(v23, v24, v39);
            break;
          default:
            memcpy(v23, v24, *(void *)(*(void *)(v36 - 8) + 64));
            goto LABEL_22;
        }
        swift_storeEnumTagMultiPayload();
LABEL_22:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v36);
        goto LABEL_23;
      case 3u:
        uint64_t v27 = sub_253B07160();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
        goto LABEL_43;
      default:
        uint64_t v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        uint64_t v7 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v8 = *(int *)(v7 + 20);
        uint64_t v9 = (void *)((char *)a1 + v8);
        uint64_t v10 = (void *)((char *)a2 + v8);
        uint64_t v11 = type metadata accessor for TranscriptProtoStatementID(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
        {
          uint64_t v12 = sub_253462A5C(&qword_26B249528);
          memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
          uint64_t v28 = v10[2];
          v9[1] = v10[1];
          v9[2] = v28;
          uint64_t v29 = *(int *)(v11 + 24);
          __dsta = (char *)v10 + v29;
          uint64_t v100 = (char *)v9 + v29;
          uint64_t v30 = sub_253B07160();
          uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
          swift_bridgeObjectRetain();
          v31(v100, __dsta, v30);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
        }
        uint64_t v32 = *(int *)(v7 + 24);
        uint64_t v33 = (char *)a1 + v32;
        uint64_t v34 = (char *)a2 + v32;
        uint64_t v35 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
        goto LABEL_43;
    }
  }
  uint64_t v13 = *a2;
  *a1 = *a2;
  a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for TranscriptProtoRequestContentEnum(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      uint64_t v4 = a1 + *(int *)(v3 + 20);
      uint64_t v5 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = v4 + *(int *)(v5 + 24);
        uint64_t v7 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      }
      uint64_t v8 = *(int *)(v3 + 24);
      goto LABEL_29;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      goto LABEL_29;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
      uint64_t v10 = a1 + v9[6];
      uint64_t v11 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, 1, v11)) {
        goto LABEL_16;
      }
      uint64_t v12 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, 1, v12)) {
        goto LABEL_15;
      }
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 6)
      {
        uint64_t v14 = sub_253B07160();
LABEL_13:
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v10, v14);
        goto LABEL_15;
      }
      if (EnumCaseMultiPayload != 5)
      {
        if (EnumCaseMultiPayload != 1) {
          goto LABEL_15;
        }
        uint64_t v14 = sub_253B08E50();
        goto LABEL_13;
      }
      uint64_t v15 = v10
          + *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
      uint64_t v16 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
LABEL_15:
      uint64_t v17 = v10 + *(int *)(v11 + 20);
      uint64_t v18 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
LABEL_16:
      uint64_t v19 = a1 + v9[7];
      uint64_t v20 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v20))
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = v19 + *(int *)(v20 + 24);
        uint64_t v22 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
      }
      uint64_t v23 = a1 + v9[8];
      uint64_t v24 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v23, 1, v24)) {
        goto LABEL_28;
      }
      uint64_t v25 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v23, 1, v25)) {
        goto LABEL_27;
      }
      int v26 = swift_getEnumCaseMultiPayload();
      if (v26 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v31 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      }
      else
      {
        if (v26) {
          goto LABEL_27;
        }
        swift_bridgeObjectRelease();
        uint64_t v27 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v28 = v23 + *(int *)(v27 + 20);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v28, 1, v20))
        {
          swift_bridgeObjectRelease();
          uint64_t v29 = v28 + *(int *)(v20 + 24);
          uint64_t v30 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
        }
        uint64_t v31 = *(int *)(v27 + 24);
      }
      uint64_t v32 = v23 + v31;
      uint64_t v33 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
LABEL_27:
      uint64_t v34 = v23 + *(int *)(v24 + 20);
      uint64_t v35 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
LABEL_28:
      uint64_t v8 = v9[9];
LABEL_29:
      a1 += v8;
LABEL_30:
      uint64_t v36 = sub_253B07160();
      uint64_t v37 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8);
      return v37(a1, v36);
    case 3:
      goto LABEL_30;
    default:
      return result;
  }
}

void *initializeWithCopy for TranscriptProtoRequestContentEnum(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *a1 = *a2;
      uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_253B07160();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      goto LABEL_40;
    case 2u:
      uint64_t v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      uint64_t v17 = a2[3];
      a1[2] = a2[2];
      a1[3] = v17;
      uint64_t v18 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
      uint64_t v19 = v18[6];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v22))
      {
        uint64_t v23 = sub_253462A5C(&qword_269CE2140);
        memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
        goto LABEL_22;
      }
      uint64_t v33 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v33))
      {
        uint64_t v34 = sub_253462A5C(&qword_269CE2200);
        memcpy(v20, v21, *(void *)(*(void *)(v34 - 8) + 64));
        goto LABEL_21;
      }
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 6:
          uint64_t v37 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v37 - 8) + 16))(v20, v21, v37);
          goto LABEL_18;
        case 5:
          unsigned char *v20 = *v21;
          uint64_t v38 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          uint64_t v39 = &v20[v38];
          uint64_t v40 = &v21[v38];
          uint64_t v41 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
          goto LABEL_18;
        case 1:
          uint64_t v36 = sub_253B08E50();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v36 - 8) + 16))(v20, v21, v36);
LABEL_18:
          swift_storeEnumTagMultiPayload();
          goto LABEL_20;
      }
      memcpy(v20, v21, *(void *)(*(void *)(v33 - 8) + 64));
LABEL_20:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, v33);
LABEL_21:
      uint64_t v42 = *(int *)(v22 + 20);
      uint64_t v43 = &v20[v42];
      uint64_t v44 = &v21[v42];
      uint64_t v45 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, v22);
LABEL_22:
      uint64_t v46 = v18[7];
      uint64_t v47 = (void *)((char *)a1 + v46);
      uint64_t v48 = (void *)((char *)a2 + v46);
      uint64_t v49 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v48, 1, v49))
      {
        uint64_t v50 = sub_253462A5C(&qword_26B249528);
        memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
        uint64_t v51 = v48[2];
        v47[1] = v48[1];
        v47[2] = v51;
        uint64_t v52 = *(int *)(v49 + 24);
        __dstb = (char *)v48 + v52;
        uint64_t v97 = (char *)v47 + v52;
        uint64_t v53 = sub_253B07160();
        uint64_t v54 = v49;
        uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16);
        swift_bridgeObjectRetain();
        v55(v97, __dstb, v53);
        uint64_t v49 = v54;
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v47, 0, 1, v54);
      }
      uint64_t v56 = v18[8];
      uint64_t v57 = (void *)((char *)a1 + v56);
      uint64_t v58 = (void *)((char *)a2 + v56);
      uint64_t v59 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v58, 1, v59))
      {
        uint64_t v60 = sub_253462A5C(&qword_269CE2130);
        memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        uint64_t v61 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v58, 1, v61))
        {
          uint64_t v62 = sub_253462A5C(&qword_269CE2150);
          memcpy(v57, v58, *(void *)(*(void *)(v62 - 8) + 64));
        }
        else
        {
          int v63 = swift_getEnumCaseMultiPayload();
          if (v63 == 1)
          {
            *uint64_t v57 = *v58;
            uint64_t v69 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
            uint64_t v91 = (char *)v58 + v69;
            __dstc = (char *)v57 + v69;
            uint64_t v70 = sub_253B07160();
            uint64_t v89 = *(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16);
            swift_bridgeObjectRetain();
            v89(__dstc, v91, v70);
            swift_storeEnumTagMultiPayload();
          }
          else if (v63)
          {
            memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
          }
          else
          {
            uint64_t v64 = v58[1];
            *uint64_t v57 = *v58;
            v57[1] = v64;
            uint64_t v65 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
            uint64_t v66 = *(int *)(v65 + 20);
            __dst = (void *)((char *)v57 + v66);
            uint64_t v67 = (void *)((char *)v58 + v66);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v67, 1, v49))
            {
              uint64_t v68 = sub_253462A5C(&qword_26B249528);
              memcpy(__dst, v67, *(void *)(*(void *)(v68 - 8) + 64));
            }
            else
            {
              *(_DWORD *)__dst = *(_DWORD *)v67;
              uint64_t v71 = v67[2];
              __dst[1] = v67[1];
              __dst[2] = v71;
              uint64_t v72 = *(int *)(v49 + 24);
              uint64_t v88 = (char *)v67 + v72;
              uint64_t v90 = (char *)__dst + v72;
              uint64_t v87 = sub_253B07160();
              uint64_t v86 = *(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16);
              swift_bridgeObjectRetain();
              v86(v90, v88, v87);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v49);
            }
            uint64_t v73 = *(int *)(v65 + 24);
            uint64_t v74 = (char *)v57 + v73;
            uint64_t v75 = (char *)v58 + v73;
            uint64_t v76 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
            swift_storeEnumTagMultiPayload();
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v57, 0, 1, v61);
        }
        uint64_t v77 = *(int *)(v59 + 20);
        uint64_t v78 = (char *)v57 + v77;
        uint64_t v79 = (char *)v58 + v77;
        uint64_t v80 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v78, v79, v80);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v57, 0, 1, v59);
      }
      uint64_t v81 = v18[9];
      uint64_t v82 = (char *)a1 + v81;
      uint64_t v83 = (char *)a2 + v81;
      uint64_t v84 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16))(v82, v83, v84);
LABEL_40:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 3u:
      uint64_t v24 = sub_253B07160();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
      goto LABEL_40;
    default:
      uint64_t v4 = a2[1];
      *a1 = *a2;
      a1[1] = v4;
      uint64_t v5 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      uint64_t v6 = *(int *)(v5 + 20);
      uint64_t v7 = (void *)((char *)a1 + v6);
      uint64_t v8 = (void *)((char *)a2 + v6);
      uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
      {
        uint64_t v10 = sub_253462A5C(&qword_26B249528);
        memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
        uint64_t v25 = v8[2];
        v7[1] = v8[1];
        v7[2] = v25;
        uint64_t v26 = *(int *)(v9 + 24);
        __dsta = (char *)v8 + v26;
        uint64_t v96 = (char *)v7 + v26;
        uint64_t v27 = sub_253B07160();
        uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v28(v96, __dsta, v27);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      }
      uint64_t v29 = *(int *)(v5 + 24);
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)a2 + v29;
      uint64_t v32 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      goto LABEL_40;
  }
}

void *assignWithCopy for TranscriptProtoRequestContentEnum(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = sub_253B07160();
        uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        v14(v11, v12, v13);
        goto LABEL_41;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        uint64_t v15 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        uint64_t v16 = v15[6];
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
        {
          uint64_t v20 = sub_253462A5C(&qword_269CE2140);
          memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
LABEL_23:
          uint64_t v42 = v15[7];
          uint64_t v43 = (void *)((char *)a1 + v42);
          uint64_t v44 = (void *)((char *)a2 + v42);
          uint64_t v45 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v44, 1, v45))
          {
            uint64_t v46 = sub_253462A5C(&qword_26B249528);
            memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
          }
          else
          {
            *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
            v43[1] = v44[1];
            v43[2] = v44[2];
            uint64_t v47 = *(int *)(v45 + 24);
            __dstb = (char *)v44 + v47;
            uint64_t v90 = (char *)v43 + v47;
            uint64_t v48 = sub_253B07160();
            uint64_t v49 = v45;
            uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16);
            swift_bridgeObjectRetain();
            v50(v90, __dstb, v48);
            uint64_t v45 = v49;
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v43, 0, 1, v49);
          }
          uint64_t v51 = v15[8];
          uint64_t v52 = (void *)((char *)a1 + v51);
          uint64_t v53 = (void *)((char *)a2 + v51);
          uint64_t v54 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v53, 1, v54))
          {
            uint64_t v55 = sub_253462A5C(&qword_269CE2130);
            memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
          }
          else
          {
            uint64_t v56 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v53, 1, v56))
            {
              uint64_t v57 = sub_253462A5C(&qword_269CE2150);
              memcpy(v52, v53, *(void *)(*(void *)(v57 - 8) + 64));
            }
            else
            {
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              if (EnumCaseMultiPayload == 1)
              {
                *uint64_t v52 = *v53;
                uint64_t v63 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                uint64_t v84 = (char *)v53 + v63;
                __dstc = (char *)v52 + v63;
                uint64_t v64 = sub_253B07160();
                uint64_t v82 = *(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16);
                swift_bridgeObjectRetain();
                v82(__dstc, v84, v64);
                swift_storeEnumTagMultiPayload();
              }
              else if (EnumCaseMultiPayload)
              {
                memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
              }
              else
              {
                *uint64_t v52 = *v53;
                v52[1] = v53[1];
                uint64_t v59 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                uint64_t v60 = *(int *)(v59 + 20);
                __dst = (void *)((char *)v52 + v60);
                uint64_t v61 = (void *)((char *)v53 + v60);
                swift_bridgeObjectRetain();
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v61, 1, v45))
                {
                  uint64_t v62 = sub_253462A5C(&qword_26B249528);
                  memcpy(__dst, v61, *(void *)(*(void *)(v62 - 8) + 64));
                }
                else
                {
                  *(_DWORD *)__dst = *(_DWORD *)v61;
                  __dst[1] = v61[1];
                  __dst[2] = v61[2];
                  uint64_t v65 = *(int *)(v45 + 24);
                  uint64_t v81 = (char *)v61 + v65;
                  uint64_t v83 = (char *)__dst + v65;
                  uint64_t v80 = sub_253B07160();
                  uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v79(v83, v81, v80);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v45);
                }
                uint64_t v66 = *(int *)(v59 + 24);
                uint64_t v67 = (char *)v52 + v66;
                uint64_t v68 = (char *)v53 + v66;
                uint64_t v69 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
                swift_storeEnumTagMultiPayload();
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v52, 0, 1, v56);
            }
            uint64_t v70 = *(int *)(v54 + 20);
            uint64_t v71 = (char *)v52 + v70;
            uint64_t v72 = (char *)v53 + v70;
            uint64_t v73 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v52, 0, 1, v54);
          }
          uint64_t v74 = v15[9];
          uint64_t v75 = (char *)a1 + v74;
          uint64_t v76 = (char *)a2 + v74;
          uint64_t v77 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v75, v76, v77);
LABEL_41:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        uint64_t v29 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v29))
        {
          uint64_t v30 = sub_253462A5C(&qword_269CE2200);
          memcpy(v17, v18, *(void *)(*(void *)(v30 - 8) + 64));
LABEL_22:
          uint64_t v38 = *(int *)(v19 + 20);
          uint64_t v39 = &v17[v38];
          uint64_t v40 = &v18[v38];
          uint64_t v41 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
          goto LABEL_23;
        }
        int v31 = swift_getEnumCaseMultiPayload();
        switch(v31)
        {
          case 6:
            uint64_t v33 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 16))(v17, v18, v33);
            break;
          case 5:
            *uint64_t v17 = *v18;
            uint64_t v34 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                         + 20);
            uint64_t v35 = &v17[v34];
            uint64_t v36 = &v18[v34];
            uint64_t v37 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
            break;
          case 1:
            uint64_t v32 = sub_253B08E50();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v32 - 8) + 16))(v17, v18, v32);
            break;
          default:
            memcpy(v17, v18, *(void *)(*(void *)(v29 - 8) + 64));
            goto LABEL_21;
        }
        swift_storeEnumTagMultiPayload();
LABEL_21:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v29);
        goto LABEL_22;
      case 3u:
        uint64_t v21 = sub_253B07160();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        goto LABEL_41;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v4 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v5 = *(int *)(v4 + 20);
        uint64_t v6 = (void *)((char *)a1 + v5);
        uint64_t v7 = (void *)((char *)a2 + v5);
        uint64_t v8 = type metadata accessor for TranscriptProtoStatementID(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v8))
        {
          uint64_t v9 = sub_253462A5C(&qword_26B249528);
          memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v6 = *(_DWORD *)v7;
          v6[1] = v7[1];
          v6[2] = v7[2];
          uint64_t v22 = *(int *)(v8 + 24);
          __dsta = (char *)v7 + v22;
          uint64_t v89 = (char *)v6 + v22;
          uint64_t v23 = sub_253B07160();
          uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
          swift_bridgeObjectRetain();
          v24(v89, __dsta, v23);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v6, 0, 1, v8);
        }
        uint64_t v25 = *(int *)(v4 + 24);
        uint64_t v26 = (char *)a1 + v25;
        uint64_t v27 = (char *)a2 + v25;
        uint64_t v28 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
        goto LABEL_41;
    }
  }
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoRequestContentEnum(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(void *)a1 = *(void *)a2;
      uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      uint64_t v11 = a1 + v10;
      uint64_t v12 = a2 + v10;
      uint64_t v13 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      goto LABEL_41;
    case 2u:
      long long v14 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v14;
      uint64_t v15 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
      uint64_t v16 = v15[6];
      uint64_t v17 = (unsigned char *)(a1 + v16);
      uint64_t v18 = (unsigned char *)(a2 + v16);
      uint64_t v19 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
      {
        uint64_t v20 = sub_253462A5C(&qword_269CE2140);
        memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
        goto LABEL_22;
      }
      uint64_t v30 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v30))
      {
        uint64_t v31 = sub_253462A5C(&qword_269CE2200);
        memcpy(v17, v18, *(void *)(*(void *)(v31 - 8) + 64));
LABEL_21:
        uint64_t v39 = *(int *)(v19 + 20);
        uint64_t v40 = &v17[v39];
        uint64_t v41 = &v18[v39];
        uint64_t v42 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
LABEL_22:
        uint64_t v43 = v15[7];
        uint64_t v44 = (_DWORD *)(a1 + v43);
        uint64_t v45 = (_DWORD *)(a2 + v43);
        uint64_t v46 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v45, 1, v46))
        {
          uint64_t v47 = sub_253462A5C(&qword_26B249528);
          memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          _DWORD *v44 = *v45;
          *(_OWORD *)(v44 + 2) = *(_OWORD *)(v45 + 2);
          uint64_t v48 = *(int *)(v46 + 24);
          uint64_t v49 = (char *)v44 + v48;
          uint64_t v50 = (char *)v45 + v48;
          uint64_t v51 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v44, 0, 1, v46);
        }
        uint64_t v52 = v15[8];
        uint64_t v53 = (void *)(a1 + v52);
        uint64_t v54 = (void *)(a2 + v52);
        uint64_t v55 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54, 1, v55))
        {
          uint64_t v56 = sub_253462A5C(&qword_269CE2130);
          memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
LABEL_40:
          uint64_t v79 = v15[9];
          uint64_t v80 = a1 + v79;
          uint64_t v81 = a2 + v79;
          uint64_t v82 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 32))(v80, v81, v82);
          goto LABEL_41;
        }
        uint64_t v57 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54, 1, v57))
        {
          uint64_t v58 = sub_253462A5C(&qword_269CE2150);
          memcpy(v53, v54, *(void *)(*(void *)(v58 - 8) + 64));
LABEL_39:
          uint64_t v75 = *(int *)(v55 + 20);
          uint64_t v76 = (char *)v53 + v75;
          uint64_t v77 = (char *)v54 + v75;
          uint64_t v78 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v53, 0, 1, v55);
          goto LABEL_40;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          *uint64_t v53 = *v54;
          uint64_t v64 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          uint64_t v65 = (char *)v53 + v64;
          uint64_t v66 = (char *)v54 + v64;
          uint64_t v67 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v65, v66, v67);
        }
        else
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
LABEL_38:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v53, 0, 1, v57);
            goto LABEL_39;
          }
          *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
          uint64_t v60 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          uint64_t v61 = *(int *)(v60 + 20);
          uint64_t v85 = v60;
          __dst = (_DWORD *)((char *)v53 + v61);
          uint64_t v62 = (_DWORD *)((char *)v54 + v61);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54 + v61, 1, v46))
          {
            uint64_t v63 = sub_253462A5C(&qword_26B249528);
            memcpy(__dst, v62, *(void *)(*(void *)(v63 - 8) + 64));
          }
          else
          {
            _DWORD *__dst = *v62;
            *(_OWORD *)(__dst + 2) = *(_OWORD *)(v62 + 2);
            uint64_t v68 = *(int *)(v46 + 24);
            uint64_t v84 = (char *)__dst + v68;
            uint64_t v69 = (char *)v62 + v68;
            uint64_t v70 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v84, v69, v70);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v46);
          }
          uint64_t v71 = *(int *)(v85 + 24);
          uint64_t v72 = (char *)v53 + v71;
          uint64_t v73 = (char *)v54 + v71;
          uint64_t v74 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_38;
      }
      int v32 = swift_getEnumCaseMultiPayload();
      switch(v32)
      {
        case 6:
          uint64_t v34 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v34 - 8) + 32))(v17, v18, v34);
          break;
        case 5:
          *uint64_t v17 = *v18;
          uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          uint64_t v36 = &v17[v35];
          uint64_t v37 = &v18[v35];
          uint64_t v38 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
          break;
        case 1:
          uint64_t v33 = sub_253B08E50();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 32))(v17, v18, v33);
          break;
        default:
          memcpy(v17, v18, *(void *)(*(void *)(v30 - 8) + 64));
          goto LABEL_20;
      }
      swift_storeEnumTagMultiPayload();
LABEL_20:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v30);
      goto LABEL_21;
    case 3u:
      uint64_t v21 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
      goto LABEL_41;
    default:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v4 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      uint64_t v5 = *(int *)(v4 + 20);
      uint64_t v6 = (_DWORD *)(a1 + v5);
      uint64_t v7 = (_DWORD *)(a2 + v5);
      uint64_t v8 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v8))
      {
        uint64_t v9 = sub_253462A5C(&qword_26B249528);
        memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        *uint64_t v6 = *v7;
        *(_OWORD *)(v6 + 2) = *(_OWORD *)(v7 + 2);
        uint64_t v22 = *(int *)(v8 + 24);
        uint64_t v23 = (char *)v6 + v22;
        uint64_t v24 = (char *)v7 + v22;
        uint64_t v25 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v6, 0, 1, v8);
      }
      uint64_t v26 = *(int *)(v4 + 24);
      uint64_t v27 = a1 + v26;
      uint64_t v28 = a2 + v26;
      uint64_t v29 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
LABEL_41:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

uint64_t assignWithTake for TranscriptProtoRequestContentEnum(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        uint64_t v11 = a1 + v10;
        uint64_t v12 = a2 + v10;
        uint64_t v13 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
        goto LABEL_42;
      case 2u:
        long long v14 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v14;
        uint64_t v15 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        uint64_t v16 = v15[6];
        uint64_t v17 = (unsigned char *)(a1 + v16);
        uint64_t v18 = (unsigned char *)(a2 + v16);
        uint64_t v19 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
        {
          uint64_t v20 = sub_253462A5C(&qword_269CE2140);
          memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
          goto LABEL_23;
        }
        uint64_t v30 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v30))
        {
          uint64_t v31 = sub_253462A5C(&qword_269CE2200);
          memcpy(v17, v18, *(void *)(*(void *)(v31 - 8) + 64));
LABEL_22:
          uint64_t v39 = *(int *)(v19 + 20);
          uint64_t v40 = &v17[v39];
          uint64_t v41 = &v18[v39];
          uint64_t v42 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
LABEL_23:
          uint64_t v43 = v15[7];
          uint64_t v44 = (_DWORD *)(a1 + v43);
          uint64_t v45 = (_DWORD *)(a2 + v43);
          uint64_t v46 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v45, 1, v46))
          {
            uint64_t v47 = sub_253462A5C(&qword_26B249528);
            memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
          }
          else
          {
            _DWORD *v44 = *v45;
            *(_OWORD *)(v44 + 2) = *(_OWORD *)(v45 + 2);
            uint64_t v48 = *(int *)(v46 + 24);
            uint64_t v49 = (char *)v44 + v48;
            uint64_t v50 = (char *)v45 + v48;
            uint64_t v51 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v44, 0, 1, v46);
          }
          uint64_t v52 = v15[8];
          uint64_t v53 = (void *)(a1 + v52);
          uint64_t v54 = (void *)(a2 + v52);
          uint64_t v55 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54, 1, v55))
          {
            uint64_t v56 = sub_253462A5C(&qword_269CE2130);
            memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
LABEL_41:
            uint64_t v79 = v15[9];
            uint64_t v80 = a1 + v79;
            uint64_t v81 = a2 + v79;
            uint64_t v82 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 32))(v80, v81, v82);
LABEL_42:
            swift_storeEnumTagMultiPayload();
            return a1;
          }
          uint64_t v57 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54, 1, v57))
          {
            uint64_t v58 = sub_253462A5C(&qword_269CE2150);
            memcpy(v53, v54, *(void *)(*(void *)(v58 - 8) + 64));
LABEL_40:
            uint64_t v75 = *(int *)(v55 + 20);
            uint64_t v76 = (char *)v53 + v75;
            uint64_t v77 = (char *)v54 + v75;
            uint64_t v78 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v53, 0, 1, v55);
            goto LABEL_41;
          }
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            *uint64_t v53 = *v54;
            uint64_t v64 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
            uint64_t v65 = (char *)v53 + v64;
            uint64_t v66 = (char *)v54 + v64;
            uint64_t v67 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v65, v66, v67);
          }
          else
          {
            if (EnumCaseMultiPayload)
            {
              memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
LABEL_39:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v53, 0, 1, v57);
              goto LABEL_40;
            }
            *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
            uint64_t v60 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
            uint64_t v61 = *(int *)(v60 + 20);
            uint64_t v85 = v60;
            __dst = (_DWORD *)((char *)v53 + v61);
            uint64_t v62 = (_DWORD *)((char *)v54 + v61);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54 + v61, 1, v46))
            {
              uint64_t v63 = sub_253462A5C(&qword_26B249528);
              memcpy(__dst, v62, *(void *)(*(void *)(v63 - 8) + 64));
            }
            else
            {
              _DWORD *__dst = *v62;
              *(_OWORD *)(__dst + 2) = *(_OWORD *)(v62 + 2);
              uint64_t v68 = *(int *)(v46 + 24);
              uint64_t v84 = (char *)__dst + v68;
              uint64_t v69 = (char *)v62 + v68;
              uint64_t v70 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v84, v69, v70);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v46);
            }
            uint64_t v71 = *(int *)(v85 + 24);
            uint64_t v72 = (char *)v53 + v71;
            uint64_t v73 = (char *)v54 + v71;
            uint64_t v74 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_39;
        }
        int v32 = swift_getEnumCaseMultiPayload();
        switch(v32)
        {
          case 6:
            uint64_t v34 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v34 - 8) + 32))(v17, v18, v34);
            break;
          case 5:
            *uint64_t v17 = *v18;
            uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                         + 20);
            uint64_t v36 = &v17[v35];
            uint64_t v37 = &v18[v35];
            uint64_t v38 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
            break;
          case 1:
            uint64_t v33 = sub_253B08E50();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 32))(v17, v18, v33);
            break;
          default:
            memcpy(v17, v18, *(void *)(*(void *)(v30 - 8) + 64));
            goto LABEL_21;
        }
        swift_storeEnumTagMultiPayload();
LABEL_21:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v30);
        goto LABEL_22;
      case 3u:
        uint64_t v21 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
        goto LABEL_42;
      default:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v4 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v5 = *(int *)(v4 + 20);
        uint64_t v6 = (_DWORD *)(a1 + v5);
        uint64_t v7 = (_DWORD *)(a2 + v5);
        uint64_t v8 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v8))
        {
          uint64_t v9 = sub_253462A5C(&qword_26B249528);
          memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
        }
        else
        {
          *uint64_t v6 = *v7;
          *(_OWORD *)(v6 + 2) = *(_OWORD *)(v7 + 2);
          uint64_t v22 = *(int *)(v8 + 24);
          uint64_t v23 = (char *)v6 + v22;
          uint64_t v24 = (char *)v7 + v22;
          uint64_t v25 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v6, 0, 1, v8);
        }
        uint64_t v26 = *(int *)(v4 + 24);
        uint64_t v27 = a1 + v26;
        uint64_t v28 = a2 + v26;
        uint64_t v29 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
        goto LABEL_42;
    }
  }
  return a1;
}

uint64_t sub_2537FC6D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2538506D8(a1, a2, a3, (uint64_t)type metadata accessor for TranscriptProtoRequestContentTextContent, type metadata accessor for TranscriptProtoRequestContentSpeechContent, type metadata accessor for TranscriptProtoSystemPromptResolution, MEMORY[0x263F50560]);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequestContentStopContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2537FC758);
}

uint64_t sub_2537FC758(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253B07160();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequestContentStopContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2537FC7B4);
}

uint64_t sub_2537FC7B4()
{
  sub_253B07160();
  sub_2535E228C();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v0, v1, v2, v3);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequestContentTextContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2537FC82C);
}

uint64_t sub_2537FC82C()
{
  return sub_25393618C();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequestContentTextContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2537FC84C);
}

void sub_2537FC84C()
{
}

void sub_2537FC858(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequestContentSpeechContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2537FC8AC);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequestContentSpeechContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2537FC8C4);
}

uint64_t sub_2537FC8C8()
{
  return sub_25393E9BC();
}

void _s30IntelligenceFlowPlannerSupport37TranscriptProtoSpeechRequestCandidateVwCP_0()
{
  sub_2535E2390();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_2535782A8();
  if ((*(_DWORD *)(v5 + 80) & 0x20000) != 0)
  {
    sub_2539442C0(*v1);
  }
  else
  {
    uint64_t v6 = v1[1];
    *uint64_t v3 = *v1;
    v3[1] = v6;
    uint64_t v7 = *(int *)(v4 + 20);
    uint64_t v8 = (uint64_t)v3 + v7;
    uint64_t v9 = (uint64_t)v1 + v7;
    type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    if (sub_253944A84(v9))
    {
      uint64_t v10 = sub_253462A5C(&qword_26B249528);
      uint64_t v11 = sub_25346CB4C(v10);
      sub_25394573C(v11, v13, *(void *)(v12 + 64));
    }
    else
    {
      sub_253944624();
      sub_25346CAF4();
      uint64_t v15 = *(void (**)(uint64_t))(v14 + 16);
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_253944658();
      v15(v16);
      sub_2539446A0(v8);
    }
    sub_25394426C();
    sub_25346CAF4();
    uint64_t v17 = sub_25354710C();
    v18(v17);
  }
  sub_2535E2374();
}

uint64_t _s30IntelligenceFlowPlannerSupport37TranscriptProtoSpeechRequestCandidateVwxx_0()
{
  sub_253945B3C();
  uint64_t v2 = v0 + *(int *)(v1 + 20);
  type metadata accessor for TranscriptProtoStatementID(0);
  if (!sub_2539443F0(v2))
  {
    swift_bridgeObjectRelease();
    sub_253945244();
    sub_25346CAF4();
    uint64_t v3 = sub_253945338();
    v4(v3);
  }
  sub_253944B84();
  sub_25346CAF4();
  uint64_t v5 = sub_2539446BC();
  return v6(v5);
}

void _s30IntelligenceFlowPlannerSupport37TranscriptProtoSpeechRequestCandidateVwcp_0()
{
  sub_2535E2390();
  sub_253945C08(v2, v3);
  sub_253944D28();
  if (sub_253944A84(v1))
  {
    uint64_t v4 = sub_253462A5C(&qword_26B249528);
    uint64_t v5 = sub_25346CB4C(v4);
    sub_25394573C(v5, v7, *(void *)(v6 + 64));
  }
  else
  {
    sub_253944624();
    sub_25346CAF4();
    uint64_t v9 = *(void (**)(uint64_t))(v8 + 16);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_253944658();
    v9(v10);
    sub_2539446A0(v0);
  }
  sub_25394426C();
  sub_25346CAF4();
  sub_2534B3428();
  v11();
  sub_2535E2374();
}

void _s30IntelligenceFlowPlannerSupport37TranscriptProtoSpeechRequestCandidateVwca_0()
{
  sub_2535E2390();
  sub_253944DE8(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = type metadata accessor for TranscriptProtoStatementID(0);
  int v4 = sub_2539442E4(v3);
  if (!v0)
  {
    if (!v4)
    {
      sub_2539453E0();
      swift_bridgeObjectRelease();
      sub_253944ECC();
      sub_25346CAF4();
      sub_253944540();
      v13();
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v4)
  {
LABEL_6:
    uint64_t v8 = sub_253462A5C(&qword_26B249528);
    uint64_t v9 = sub_25346CB4C(v8);
    sub_253944A48(v9, v11, *(void *)(v10 + 64));
    goto LABEL_7;
  }
  sub_253944CD4();
  sub_25346CAF4();
  uint64_t v6 = *(void (**)(uint64_t))(v5 + 16);
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_253945A94();
  v6(v7);
  sub_2539443D0();
LABEL_7:
  sub_25394426C();
  sub_25346CAF4();
  sub_2539444A8();
  v12();
  sub_2535E2374();
}

void _s30IntelligenceFlowPlannerSupport37TranscriptProtoSpeechRequestCandidateVwtk_0()
{
  sub_2535B3C98();
  *uint64_t v1 = *v0;
  uint64_t v3 = *(int *)(v2 + 20);
  uint64_t v4 = (uint64_t)v1 + v3;
  uint64_t v5 = (uint64_t)v0 + v3;
  type metadata accessor for TranscriptProtoStatementID(0);
  if (sub_253944A84(v5))
  {
    uint64_t v6 = sub_253462A5C(&qword_26B249528);
    uint64_t v7 = sub_25346CB4C(v6);
    sub_25394573C(v7, v9, *(void *)(v8 + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v4 = *(_DWORD *)v5;
    *(_OWORD *)(v4 + 8) = *(_OWORD *)(v5 + 8);
    sub_253944E94();
    sub_25346CAF4();
    sub_2534D8E14();
    v10();
    sub_2539446A0(v4);
  }
  sub_25394426C();
  sub_25346CAF4();
  sub_2534D8E14();
  v11();
  sub_25346CD04();
}

void _s30IntelligenceFlowPlannerSupport37TranscriptProtoSpeechRequestCandidateVwta_0()
{
  sub_2535B3C98();
  sub_2539457C8(v1, v2);
  uint64_t v3 = type metadata accessor for TranscriptProtoStatementID(0);
  int v4 = sub_2539442E4(v3);
  if (!v0)
  {
    if (!v4)
    {
      sub_253945A00();
      sub_253944ECC();
      sub_25346CAF4();
      sub_253944534();
      v11();
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v4)
  {
LABEL_6:
    uint64_t v6 = sub_253462A5C(&qword_26B249528);
    uint64_t v7 = sub_25346CB4C(v6);
    sub_253944A48(v7, v9, *(void *)(v8 + 64));
    goto LABEL_7;
  }
  sub_253945214();
  sub_25346CAF4();
  sub_2534D8E14();
  v5();
  sub_2539443D0();
LABEL_7:
  sub_25394426C();
  sub_25346CAF4();
  sub_253944438();
  v10();
  sub_25346CD04();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSpeechRequestCandidate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2537FCEE8);
}

uint64_t sub_2537FCEE8()
{
  return sub_25393618C();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSpeechRequestCandidate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2537FCF08);
}

void sub_2537FCF08()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoExternalAgentRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = a3;
  uint64_t v7 = type metadata accessor for TranscriptProtoRequestContent(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
  {
    uint64_t v10 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v10))
    {
      uint64_t v11 = sub_253462A5C(&qword_269CE1B00);
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      goto LABEL_47;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        uint64_t v132 = (char *)a1 + v19;
        uint64_t v20 = (char *)a2 + v19;
        uint64_t v21 = sub_253B07160();
        uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        v22(v132, v20, v21);
        goto LABEL_46;
      case 2u:
        uint64_t v23 = a2[1];
        *a1 = *a2;
        a1[1] = v23;
        uint64_t v24 = a2[3];
        a1[2] = a2[2];
        a1[3] = v24;
        uint64_t v133 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        uint64_t v25 = *(int *)(v133 + 24);
        uint64_t v26 = (char *)a1 + v25;
        uint64_t v27 = (char *)a2 + v25;
        uint64_t v28 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v28))
        {
          uint64_t v29 = sub_253462A5C(&qword_269CE2140);
          memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
          goto LABEL_28;
        }
        uint64_t v38 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v38))
        {
          uint64_t v39 = sub_253462A5C(&qword_269CE2200);
          memcpy(v26, v27, *(void *)(*(void *)(v39 - 8) + 64));
LABEL_27:
          uint64_t v46 = *(int *)(v28 + 20);
          uint64_t v47 = &v26[v46];
          uint64_t v48 = &v27[v46];
          uint64_t v49 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v28);
LABEL_28:
          uint64_t v50 = v133;
          uint64_t v51 = *(int *)(v133 + 28);
          uint64_t v52 = (uint64_t *)((char *)a1 + v51);
          uint64_t v53 = (uint64_t *)((char *)a2 + v51);
          uint64_t v54 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v53, 1, v54))
          {
            uint64_t v55 = sub_253462A5C(&qword_26B249528);
            memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
          }
          else
          {
            *(_DWORD *)uint64_t v52 = *(_DWORD *)v53;
            uint64_t v56 = v54;
            uint64_t v57 = v53[2];
            v52[1] = v53[1];
            v52[2] = v57;
            uint64_t v58 = *(int *)(v56 + 24);
            __dsta = (char *)v53 + v58;
            uint64_t v126 = (char *)v52 + v58;
            uint64_t v59 = sub_253B07160();
            __srcb = (void *)v10;
            uint64_t v60 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
            uint64_t v54 = v56;
            swift_bridgeObjectRetain();
            uint64_t v61 = v59;
            uint64_t v50 = v133;
            v60(v126, __dsta, v61);
            uint64_t v10 = (uint64_t)__srcb;
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v52, 0, 1, v56);
          }
          uint64_t v62 = *(int *)(v50 + 32);
          uint64_t v63 = (uint64_t *)((char *)a1 + v62);
          uint64_t v64 = (uint64_t *)((char *)a2 + v62);
          uint64_t v65 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v64, 1, v65))
          {
            uint64_t v66 = sub_253462A5C(&qword_269CE2130);
            memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
          }
          else
          {
            uint64_t v120 = v54;
            uint64_t v67 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v64, 1, v67))
            {
              uint64_t v68 = sub_253462A5C(&qword_269CE2150);
              memcpy(v63, v64, *(void *)(*(void *)(v68 - 8) + 64));
            }
            else
            {
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              if (EnumCaseMultiPayload == 1)
              {
                *uint64_t v63 = *v64;
                uint64_t v74 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                uint64_t v121 = (char *)v64 + v74;
                __dstb = (char *)v63 + v74;
                uint64_t v75 = sub_253B07160();
                uint64_t v119 = *(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v76 = v75;
                uint64_t v50 = v133;
                v119(__dstb, v121, v76);
                swift_storeEnumTagMultiPayload();
              }
              else if (EnumCaseMultiPayload)
              {
                memcpy(v63, v64, *(void *)(*(void *)(v67 - 8) + 64));
              }
              else
              {
                uint64_t v127 = v67;
                uint64_t v70 = v64[1];
                *uint64_t v63 = *v64;
                v63[1] = v70;
                uint64_t v118 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                uint64_t v71 = *(int *)(v118 + 20);
                __dst = (void *)((char *)v63 + v71);
                uint64_t v72 = (void *)((char *)v64 + v71);
                swift_bridgeObjectRetain();
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v72, 1, v120))
                {
                  uint64_t v73 = sub_253462A5C(&qword_26B249528);
                  memcpy(__dst, v72, *(void *)(*(void *)(v73 - 8) + 64));
                }
                else
                {
                  *(_DWORD *)__dst = *(_DWORD *)v72;
                  uint64_t v77 = v72[2];
                  __dst[1] = v72[1];
                  __dst[2] = v77;
                  uint64_t v78 = *(int *)(v120 + 24);
                  uint64_t v116 = (char *)v72 + v78;
                  uint64_t v117 = (char *)__dst + v78;
                  uint64_t v79 = sub_253B07160();
                  uint64_t v115 = *(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v115(v117, v116, v79);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v120);
                }
                uint64_t v80 = *(int *)(v118 + 24);
                uint64_t v81 = (char *)v63 + v80;
                uint64_t v82 = (char *)v64 + v80;
                uint64_t v83 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
                uint64_t v67 = v127;
                swift_storeEnumTagMultiPayload();
                uint64_t v50 = v133;
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v63, 0, 1, v67);
            }
            uint64_t v84 = *(int *)(v65 + 20);
            uint64_t v85 = (char *)v63 + v84;
            uint64_t v86 = (char *)v64 + v84;
            uint64_t v87 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v63, 0, 1, v65);
          }
          uint64_t v88 = *(int *)(v50 + 36);
          uint64_t v89 = (char *)a1 + v88;
          uint64_t v90 = (char *)a2 + v88;
          uint64_t v91 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16))(v89, v90, v91);
LABEL_46:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v10);
LABEL_47:
          uint64_t v92 = *(int *)(v7 + 20);
          uint64_t v93 = (char *)a1 + v92;
          uint64_t v94 = (char *)a2 + v92;
          uint64_t v95 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16))(v93, v94, v95);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
          goto LABEL_48;
        }
        int v40 = swift_getEnumCaseMultiPayload();
        switch(v40)
        {
          case 6:
            uint64_t v42 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v42 - 8) + 16))(v26, v27, v42);
            break;
          case 5:
            unsigned char *v26 = *v27;
            uint64_t v43 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                         + 20);
            uint64_t v44 = &v26[v43];
            __srca = &v27[v43];
            uint64_t v45 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v45 - 8) + 16))(v44, __srca, v45);
            break;
          case 1:
            uint64_t v41 = sub_253B08E50();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v41 - 8) + 16))(v26, v27, v41);
            break;
          default:
            memcpy(v26, v27, *(void *)(*(void *)(v38 - 8) + 64));
            goto LABEL_26;
        }
        swift_storeEnumTagMultiPayload();
LABEL_26:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v38);
        goto LABEL_27;
      case 3u:
        uint64_t v30 = sub_253B07160();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
        goto LABEL_46;
      default:
        uint64_t v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        uint64_t v13 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v14 = *(int *)(v13 + 20);
        uint64_t v15 = (uint64_t *)((char *)a1 + v14);
        uint64_t v16 = (uint64_t *)((char *)a2 + v14);
        uint64_t v17 = type metadata accessor for TranscriptProtoStatementID(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v17))
        {
          uint64_t v18 = sub_253462A5C(&qword_26B249528);
          memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
          uint64_t v31 = v16[2];
          v15[1] = v16[1];
          v15[2] = v31;
          uint64_t v32 = *(int *)(v17 + 24);
          __src = (char *)v16 + v32;
          uint64_t v134 = (char *)v15 + v32;
          uint64_t v33 = sub_253B07160();
          uint64_t v125 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
          swift_bridgeObjectRetain();
          v125(v134, __src, v33);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v17);
        }
        uint64_t v34 = *(int *)(v13 + 24);
        uint64_t v35 = (char *)a1 + v34;
        uint64_t v36 = (char *)a2 + v34;
        uint64_t v37 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
        goto LABEL_46;
    }
  }
  uint64_t v8 = sub_253462A5C(&qword_269CE1AF0);
  memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_48:
  uint64_t v96 = v6[5];
  uint64_t v97 = v6[6];
  uint64_t v98 = (uint64_t *)((char *)a1 + v96);
  uint64_t v99 = (uint64_t *)((char *)a2 + v96);
  uint64_t v100 = v99[1];
  *uint64_t v98 = *v99;
  v98[1] = v100;
  uint64_t v101 = (uint64_t *)((char *)a1 + v97);
  uint64_t v102 = (uint64_t *)((char *)a2 + v97);
  uint64_t v103 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v102, 1, v103))
  {
    uint64_t v104 = sub_253462A5C(&qword_269CE1AD0);
    memcpy(v101, v102, *(void *)(*(void *)(v104 - 8) + 64));
  }
  else
  {
    uint64_t v105 = v102[1];
    *uint64_t v101 = *v102;
    v101[1] = v105;
    v101[2] = v102[2];
    uint64_t v106 = *(int *)(v103 + 24);
    __srcc = (char *)v102 + v106;
    uint64_t v135 = (char *)v101 + v106;
    uint64_t v107 = sub_253B07160();
    uint64_t v108 = v6;
    uint64_t v109 = *(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v109(v135, __srcc, v107);
    uint64_t v6 = v108;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v101, 0, 1, v103);
  }
  uint64_t v110 = v6[7];
  uint64_t v111 = (char *)a1 + v110;
  uint64_t v112 = (char *)a2 + v110;
  uint64_t v113 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 16))(v111, v112, v113);
  return a1;
}

uint64_t destroy for TranscriptProtoExternalAgentRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoRequestContent(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    uint64_t v5 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v5))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          uint64_t v6 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          uint64_t v7 = a1 + *(int *)(v6 + 20);
          uint64_t v8 = type metadata accessor for TranscriptProtoStatementID(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v8))
          {
            swift_bridgeObjectRelease();
            uint64_t v9 = v7 + *(int *)(v8 + 24);
            uint64_t v10 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
          }
          uint64_t v11 = *(int *)(v6 + 24);
          goto LABEL_32;
        case 1u:
          swift_bridgeObjectRelease();
          uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          goto LABEL_32;
        case 2u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v12 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
          uint64_t v13 = a1 + v12[6];
          uint64_t v14 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v13, 1, v14)) {
            goto LABEL_19;
          }
          uint64_t v15 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v13, 1, v15)) {
            goto LABEL_18;
          }
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 6)
          {
            uint64_t v17 = sub_253B07160();
LABEL_16:
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v13, v17);
            goto LABEL_18;
          }
          if (EnumCaseMultiPayload != 5)
          {
            if (EnumCaseMultiPayload != 1) {
              goto LABEL_18;
            }
            uint64_t v17 = sub_253B08E50();
            goto LABEL_16;
          }
          uint64_t v19 = v13
              + *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          uint64_t v20 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
LABEL_18:
          uint64_t v21 = v13 + *(int *)(v14 + 20);
          uint64_t v22 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
LABEL_19:
          uint64_t v23 = a1 + v12[7];
          uint64_t v24 = type metadata accessor for TranscriptProtoStatementID(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v23, 1, v24))
          {
            swift_bridgeObjectRelease();
            uint64_t v25 = v23 + *(int *)(v24 + 24);
            uint64_t v26 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
          }
          uint64_t v27 = a1 + v12[8];
          uint64_t v28 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v27, 1, v28)) {
            goto LABEL_31;
          }
          uint64_t v29 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v27, 1, v29)) {
            goto LABEL_30;
          }
          int v30 = swift_getEnumCaseMultiPayload();
          if (v30 == 1)
          {
            swift_bridgeObjectRelease();
            uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          }
          else
          {
            if (v30) {
              goto LABEL_30;
            }
            swift_bridgeObjectRelease();
            uint64_t v31 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
            uint64_t v32 = v27 + *(int *)(v31 + 20);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v32, 1, v24))
            {
              swift_bridgeObjectRelease();
              uint64_t v33 = v32 + *(int *)(v24 + 24);
              uint64_t v34 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
            }
            uint64_t v35 = *(int *)(v31 + 24);
          }
          uint64_t v36 = v27 + v35;
          uint64_t v37 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
LABEL_30:
          uint64_t v38 = v27 + *(int *)(v28 + 20);
          uint64_t v39 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
LABEL_31:
          uint64_t v11 = v12[9];
LABEL_32:
          uint64_t v40 = a1 + v11;
          uint64_t v41 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
          break;
        case 3u:
          uint64_t v18 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a1, v18);
          break;
        default:
          break;
      }
    }
    uint64_t v42 = a1 + *(int *)(v4 + 20);
    uint64_t v43 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v42, v43);
  }
  swift_bridgeObjectRelease();
  uint64_t v44 = a1 + *(int *)(a2 + 24);
  uint64_t v45 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v44, 1, v45))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v46 = v44 + *(int *)(v45 + 24);
    uint64_t v47 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v46, v47);
  }
  uint64_t v48 = a1 + *(int *)(a2 + 28);
  uint64_t v49 = sub_253B07160();
  uint64_t v50 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8);
  return v50(v48, v49);
}

void *initializeWithCopy for TranscriptProtoExternalAgentRequest(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoRequestContent(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE1AF0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    goto LABEL_46;
  }
  uint64_t v8 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v8))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v17 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        uint64_t v130 = (char *)a1 + v17;
        uint64_t v18 = (char *)a2 + v17;
        uint64_t v19 = sub_253B07160();
        uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
        swift_bridgeObjectRetain();
        v20(v130, v18, v19);
        goto LABEL_44;
      case 2u:
        uint64_t v21 = a2[1];
        *a1 = *a2;
        a1[1] = v21;
        uint64_t v22 = a2[3];
        a1[2] = a2[2];
        a1[3] = v22;
        uint64_t v131 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        uint64_t v23 = *(int *)(v131 + 24);
        uint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v26))
        {
          uint64_t v27 = sub_253462A5C(&qword_269CE2140);
          memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
LABEL_26:
          uint64_t v48 = v131;
          uint64_t v49 = *(int *)(v131 + 28);
          uint64_t v50 = (void *)((char *)a1 + v49);
          uint64_t v51 = (void *)((char *)a2 + v49);
          uint64_t v52 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v51, 1, v52))
          {
            uint64_t v53 = sub_253462A5C(&qword_26B249528);
            memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
          }
          else
          {
            *(_DWORD *)uint64_t v50 = *(_DWORD *)v51;
            uint64_t v54 = v52;
            uint64_t v55 = v51[2];
            v50[1] = v51[1];
            v50[2] = v55;
            uint64_t v56 = *(int *)(v54 + 24);
            __dsta = (char *)v51 + v56;
            uint64_t v124 = (char *)v50 + v56;
            uint64_t v57 = sub_253B07160();
            __srcb = (void *)v8;
            uint64_t v58 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16);
            uint64_t v52 = v54;
            swift_bridgeObjectRetain();
            uint64_t v59 = v57;
            uint64_t v48 = v131;
            v58(v124, __dsta, v59);
            uint64_t v8 = (uint64_t)__srcb;
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v50, 0, 1, v54);
          }
          uint64_t v60 = *(int *)(v48 + 32);
          uint64_t v61 = (void *)((char *)a1 + v60);
          uint64_t v62 = (void *)((char *)a2 + v60);
          uint64_t v63 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v62, 1, v63))
          {
            uint64_t v64 = sub_253462A5C(&qword_269CE2130);
            memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
          }
          else
          {
            uint64_t v118 = v52;
            uint64_t v65 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v62, 1, v65))
            {
              uint64_t v66 = sub_253462A5C(&qword_269CE2150);
              memcpy(v61, v62, *(void *)(*(void *)(v66 - 8) + 64));
            }
            else
            {
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              if (EnumCaseMultiPayload == 1)
              {
                void *v61 = *v62;
                uint64_t v72 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                uint64_t v119 = (char *)v62 + v72;
                __dstb = (char *)v61 + v72;
                uint64_t v73 = sub_253B07160();
                uint64_t v117 = *(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v74 = v73;
                uint64_t v48 = v131;
                v117(__dstb, v119, v74);
                swift_storeEnumTagMultiPayload();
              }
              else if (EnumCaseMultiPayload)
              {
                memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
              }
              else
              {
                uint64_t v125 = v65;
                uint64_t v68 = v62[1];
                void *v61 = *v62;
                v61[1] = v68;
                uint64_t v116 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                uint64_t v69 = *(int *)(v116 + 20);
                __dst = (void *)((char *)v61 + v69);
                uint64_t v70 = (void *)((char *)v62 + v69);
                swift_bridgeObjectRetain();
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v70, 1, v118))
                {
                  uint64_t v71 = sub_253462A5C(&qword_26B249528);
                  memcpy(__dst, v70, *(void *)(*(void *)(v71 - 8) + 64));
                }
                else
                {
                  *(_DWORD *)__dst = *(_DWORD *)v70;
                  uint64_t v75 = v70[2];
                  __dst[1] = v70[1];
                  __dst[2] = v75;
                  uint64_t v76 = *(int *)(v118 + 24);
                  uint64_t v114 = (char *)v70 + v76;
                  uint64_t v115 = (char *)__dst + v76;
                  uint64_t v77 = sub_253B07160();
                  uint64_t v113 = *(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v113(v115, v114, v77);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v118);
                }
                uint64_t v78 = *(int *)(v116 + 24);
                uint64_t v79 = (char *)v61 + v78;
                uint64_t v80 = (char *)v62 + v78;
                uint64_t v81 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v79, v80, v81);
                uint64_t v65 = v125;
                swift_storeEnumTagMultiPayload();
                uint64_t v48 = v131;
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v61, 0, 1, v65);
            }
            uint64_t v82 = *(int *)(v63 + 20);
            uint64_t v83 = (char *)v61 + v82;
            uint64_t v84 = (char *)v62 + v82;
            uint64_t v85 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16))(v83, v84, v85);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v61, 0, 1, v63);
          }
          uint64_t v86 = *(int *)(v48 + 36);
          uint64_t v87 = (char *)a1 + v86;
          uint64_t v88 = (char *)a2 + v86;
          uint64_t v89 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16))(v87, v88, v89);
LABEL_44:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v8);
          goto LABEL_45;
        }
        uint64_t v36 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v36))
        {
          uint64_t v37 = sub_253462A5C(&qword_269CE2200);
          memcpy(v24, v25, *(void *)(*(void *)(v37 - 8) + 64));
LABEL_25:
          uint64_t v44 = *(int *)(v26 + 20);
          uint64_t v45 = &v24[v44];
          uint64_t v46 = &v25[v44];
          uint64_t v47 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v26);
          goto LABEL_26;
        }
        int v38 = swift_getEnumCaseMultiPayload();
        switch(v38)
        {
          case 6:
            uint64_t v40 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v40 - 8) + 16))(v24, v25, v40);
            break;
          case 5:
            *uint64_t v24 = *v25;
            uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                         + 20);
            uint64_t v42 = &v24[v41];
            __srca = &v25[v41];
            uint64_t v43 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v43 - 8) + 16))(v42, __srca, v43);
            break;
          case 1:
            uint64_t v39 = sub_253B08E50();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v39 - 8) + 16))(v24, v25, v39);
            break;
          default:
            memcpy(v24, v25, *(void *)(*(void *)(v36 - 8) + 64));
            goto LABEL_24;
        }
        swift_storeEnumTagMultiPayload();
LABEL_24:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v36);
        goto LABEL_25;
      case 3u:
        uint64_t v28 = sub_253B07160();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
        goto LABEL_44;
      default:
        uint64_t v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        uint64_t v11 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v12 = *(int *)(v11 + 20);
        uint64_t v13 = (void *)((char *)a1 + v12);
        uint64_t v14 = (void *)((char *)a2 + v12);
        uint64_t v15 = type metadata accessor for TranscriptProtoStatementID(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v15))
        {
          uint64_t v16 = sub_253462A5C(&qword_26B249528);
          memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
          uint64_t v29 = v14[2];
          v13[1] = v14[1];
          v13[2] = v29;
          uint64_t v30 = *(int *)(v15 + 24);
          __src = (char *)v14 + v30;
          uint64_t v132 = (char *)v13 + v30;
          uint64_t v31 = sub_253B07160();
          uint64_t v123 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
          swift_bridgeObjectRetain();
          v123(v132, __src, v31);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v13, 0, 1, v15);
        }
        uint64_t v32 = *(int *)(v11 + 24);
        uint64_t v33 = (char *)a1 + v32;
        uint64_t v34 = (char *)a2 + v32;
        uint64_t v35 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
        goto LABEL_44;
    }
  }
  uint64_t v9 = sub_253462A5C(&qword_269CE1B00);
  memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_45:
  uint64_t v90 = *(int *)(v6 + 20);
  uint64_t v91 = (char *)a1 + v90;
  uint64_t v92 = (char *)a2 + v90;
  uint64_t v93 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16))(v91, v92, v93);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_46:
  uint64_t v94 = a3[5];
  uint64_t v95 = a3[6];
  uint64_t v96 = (void *)((char *)a1 + v94);
  uint64_t v97 = (void *)((char *)a2 + v94);
  uint64_t v98 = v97[1];
  *uint64_t v96 = *v97;
  v96[1] = v98;
  uint64_t v99 = (void *)((char *)a1 + v95);
  uint64_t v100 = (void *)((char *)a2 + v95);
  uint64_t v101 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v100, 1, v101))
  {
    uint64_t v102 = sub_253462A5C(&qword_269CE1AD0);
    memcpy(v99, v100, *(void *)(*(void *)(v102 - 8) + 64));
  }
  else
  {
    uint64_t v103 = v100[1];
    void *v99 = *v100;
    v99[1] = v103;
    v99[2] = v100[2];
    uint64_t v104 = *(int *)(v101 + 24);
    __srcc = (char *)v100 + v104;
    uint64_t v133 = (char *)v99 + v104;
    uint64_t v105 = sub_253B07160();
    uint64_t v106 = a3;
    uint64_t v107 = *(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v107(v133, __srcc, v105);
    a3 = v106;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v99, 0, 1, v101);
  }
  uint64_t v108 = a3[7];
  uint64_t v109 = (char *)a1 + v108;
  uint64_t v110 = (char *)a2 + v108;
  uint64_t v111 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16))(v109, v110, v111);
  return a1;
}

void *assignWithCopy for TranscriptProtoExternalAgentRequest(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoRequestContent(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v9))
      {
        uint64_t v10 = sub_253462A5C(&qword_269CE1B00);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
        goto LABEL_84;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *a1 = *a2;
          uint64_t v28 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          uint64_t v312 = (char *)a1 + v28;
          uint64_t v29 = (char *)a2 + v28;
          uint64_t v30 = sub_253B07160();
          uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
          swift_bridgeObjectRetain();
          v31(v312, v29, v30);
          goto LABEL_83;
        case 2u:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          a1[3] = a2[3];
          uint64_t v313 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
          uint64_t v32 = *(int *)(v313 + 24);
          uint64_t v33 = (char *)a1 + v32;
          uint64_t v34 = (char *)a2 + v32;
          uint64_t v35 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v34, 1, v35))
          {
            uint64_t v36 = sub_253462A5C(&qword_269CE2140);
            memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
            goto LABEL_61;
          }
          uint64_t v60 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v34, 1, v60))
          {
            uint64_t v61 = sub_253462A5C(&qword_269CE2200);
            memcpy(v33, v34, *(void *)(*(void *)(v61 - 8) + 64));
LABEL_60:
            uint64_t v96 = *(int *)(v35 + 20);
            uint64_t v97 = &v33[v96];
            uint64_t v98 = &v34[v96];
            uint64_t v99 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v99 - 8) + 16))(v97, v98, v99);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v33, 0, 1, v35);
LABEL_61:
            uint64_t v100 = v313;
            uint64_t v101 = *(int *)(v313 + 28);
            uint64_t v102 = (void *)((char *)a1 + v101);
            uint64_t v103 = (void *)((char *)a2 + v101);
            uint64_t v104 = type metadata accessor for TranscriptProtoStatementID(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v103, 1, v104))
            {
              uint64_t v105 = sub_253462A5C(&qword_26B249528);
              memcpy(v102, v103, *(void *)(*(void *)(v105 - 8) + 64));
            }
            else
            {
              *(_DWORD *)uint64_t v102 = *(_DWORD *)v103;
              v102[1] = v103[1];
              v102[2] = v103[2];
              uint64_t v106 = *(int *)(v104 + 24);
              __dstc = (char *)v103 + v106;
              uint64_t v294 = (char *)v102 + v106;
              uint64_t v107 = sub_253B07160();
              __srce = (void *)v9;
              uint64_t v108 = *(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16);
              swift_bridgeObjectRetain();
              uint64_t v109 = v107;
              uint64_t v100 = v313;
              v108(v294, __dstc, v109);
              uint64_t v9 = (uint64_t)__srce;
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v102, 0, 1, v104);
            }
            uint64_t v110 = *(int *)(v100 + 32);
            uint64_t v111 = (void *)((char *)a1 + v110);
            uint64_t v112 = (void *)((char *)a2 + v110);
            uint64_t v113 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v112, 1, v113))
            {
              uint64_t v114 = sub_253462A5C(&qword_269CE2130);
              memcpy(v111, v112, *(void *)(*(void *)(v114 - 8) + 64));
            }
            else
            {
              uint64_t v276 = v104;
              uint64_t v115 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v112, 1, v115))
              {
                uint64_t v116 = sub_253462A5C(&qword_269CE2150);
                memcpy(v111, v112, *(void *)(*(void *)(v116 - 8) + 64));
              }
              else
              {
                int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                if (EnumCaseMultiPayload == 1)
                {
                  void *v111 = *v112;
                  uint64_t v121 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                  int v277 = (char *)v112 + v121;
                  __dstd = (char *)v111 + v121;
                  uint64_t v122 = sub_253B07160();
                  uint64_t v272 = *(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v123 = v122;
                  uint64_t v100 = v313;
                  v272(__dstd, v277, v123);
                  swift_storeEnumTagMultiPayload();
                }
                else if (EnumCaseMultiPayload)
                {
                  memcpy(v111, v112, *(void *)(*(void *)(v115 - 8) + 64));
                }
                else
                {
                  uint64_t v295 = v115;
                  void *v111 = *v112;
                  v111[1] = v112[1];
                  uint64_t v271 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                  uint64_t v118 = *(int *)(v271 + 20);
                  __dst = (void *)((char *)v111 + v118);
                  uint64_t v119 = (void *)((char *)v112 + v118);
                  swift_bridgeObjectRetain();
                  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v119, 1, v276))
                  {
                    uint64_t v120 = sub_253462A5C(&qword_26B249528);
                    memcpy(__dst, v119, *(void *)(*(void *)(v120 - 8) + 64));
                  }
                  else
                  {
                    *(_DWORD *)__dst = *(_DWORD *)v119;
                    __dst[1] = v119[1];
                    __dst[2] = v119[2];
                    uint64_t v126 = *(int *)(v276 + 24);
                    uint64_t v266 = (char *)v119 + v126;
                    uint64_t v268 = (char *)__dst + v126;
                    uint64_t v127 = sub_253B07160();
                    int v263 = *(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v263(v268, v266, v127);
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v276);
                  }
                  uint64_t v128 = *(int *)(v271 + 24);
                  uint64_t v129 = (char *)v111 + v128;
                  uint64_t v130 = (char *)v112 + v128;
                  uint64_t v131 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16))(v129, v130, v131);
                  uint64_t v115 = v295;
                  swift_storeEnumTagMultiPayload();
                  uint64_t v100 = v313;
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v111, 0, 1, v115);
              }
              uint64_t v132 = *(int *)(v113 + 20);
              uint64_t v133 = (char *)v111 + v132;
              uint64_t v134 = (char *)v112 + v132;
              uint64_t v135 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 16))(v133, v134, v135);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v111, 0, 1, v113);
            }
            uint64_t v136 = *(int *)(v100 + 36);
            uint64_t v137 = (char *)a1 + v136;
            int v138 = (char *)a2 + v136;
            uint64_t v139 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 16))(v137, v138, v139);
LABEL_83:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v9);
LABEL_84:
            uint64_t v140 = *(int *)(v6 + 20);
            uint64_t v141 = (char *)a1 + v140;
            uint64_t v142 = (char *)a2 + v140;
            uint64_t v143 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 16))(v141, v142, v143);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
            goto LABEL_136;
          }
          int v80 = swift_getEnumCaseMultiPayload();
          switch(v80)
          {
            case 6:
              uint64_t v92 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v92 - 8) + 16))(v33, v34, v92);
              break;
            case 5:
              *uint64_t v33 = *v34;
              uint64_t v93 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                           + 20);
              uint64_t v94 = &v33[v93];
              __srcd = &v34[v93];
              uint64_t v95 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v95 - 8) + 16))(v94, __srcd, v95);
              break;
            case 1:
              uint64_t v81 = sub_253B08E50();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v81 - 8) + 16))(v33, v34, v81);
              break;
            default:
              memcpy(v33, v34, *(void *)(*(void *)(v60 - 8) + 64));
              goto LABEL_59;
          }
          swift_storeEnumTagMultiPayload();
LABEL_59:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v33, 0, 1, v60);
          goto LABEL_60;
        case 3u:
          uint64_t v37 = sub_253B07160();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v37 - 8) + 16))(a1, a2, v37);
          goto LABEL_83;
        default:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v21 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          uint64_t v22 = *(int *)(v21 + 20);
          uint64_t v23 = (void *)((char *)a1 + v22);
          uint64_t v24 = (void *)((char *)a2 + v22);
          uint64_t v25 = type metadata accessor for TranscriptProtoStatementID(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
          {
            uint64_t v26 = sub_253462A5C(&qword_26B249528);
            memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
          }
          else
          {
            *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
            v23[1] = v24[1];
            v23[2] = v24[2];
            uint64_t v54 = *(int *)(v25 + 24);
            __srca = (char *)v24 + v54;
            uint64_t v316 = (char *)v23 + v54;
            uint64_t v55 = sub_253B07160();
            uint64_t v291 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
            swift_bridgeObjectRetain();
            v291(v316, __srca, v55);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v25);
          }
          uint64_t v56 = *(int *)(v21 + 24);
          uint64_t v57 = (char *)a1 + v56;
          uint64_t v58 = (char *)a2 + v56;
          uint64_t v59 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
          goto LABEL_83;
      }
    }
LABEL_7:
    uint64_t v11 = sub_253462A5C(&qword_269CE1AF0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_136;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  uint64_t v12 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v12);
  int v14 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v12);
  if (v13)
  {
    if (!v14)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *a1 = *a2;
          uint64_t v44 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          uint64_t v314 = (char *)a1 + v44;
          uint64_t v45 = (char *)a2 + v44;
          uint64_t v46 = sub_253B07160();
          uint64_t v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16);
          swift_bridgeObjectRetain();
          v47(v314, v45, v46);
          goto LABEL_109;
        case 2u:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          a1[3] = a2[3];
          uint64_t v315 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
          uint64_t v48 = *(int *)(v315 + 24);
          uint64_t v49 = (char *)a1 + v48;
          uint64_t v50 = (char *)a2 + v48;
          uint64_t v51 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v50, 1, v51))
          {
            uint64_t v52 = sub_253462A5C(&qword_269CE2140);
            memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
LABEL_91:
            uint64_t v152 = v315;
            uint64_t v153 = *(int *)(v315 + 28);
            uint64_t v154 = (void *)((char *)a1 + v153);
            uint64_t v155 = (void *)((char *)a2 + v153);
            uint64_t v156 = type metadata accessor for TranscriptProtoStatementID(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v155, 1, v156))
            {
              uint64_t v157 = sub_253462A5C(&qword_26B249528);
              memcpy(v154, v155, *(void *)(*(void *)(v157 - 8) + 64));
            }
            else
            {
              *(_DWORD *)uint64_t v154 = *(_DWORD *)v155;
              v154[1] = v155[1];
              v154[2] = v155[2];
              uint64_t v158 = *(int *)(v156 + 24);
              __dste = (char *)v155 + v158;
              uint64_t v296 = (char *)v154 + v158;
              uint64_t v159 = sub_253B07160();
              __srcg = (void *)v12;
              uint64_t v160 = *(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 16);
              swift_bridgeObjectRetain();
              uint64_t v161 = v159;
              uint64_t v152 = v315;
              v160(v296, __dste, v161);
              uint64_t v12 = (uint64_t)__srcg;
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v154, 0, 1, v156);
            }
            uint64_t v162 = *(int *)(v152 + 32);
            uint64_t v163 = (void *)((char *)a1 + v162);
            uint64_t v164 = (void *)((char *)a2 + v162);
            uint64_t v165 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v164, 1, v165))
            {
              uint64_t v166 = sub_253462A5C(&qword_269CE2130);
              memcpy(v163, v164, *(void *)(*(void *)(v166 - 8) + 64));
            }
            else
            {
              uint64_t v278 = v156;
              uint64_t v167 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v164, 1, v167))
              {
                uint64_t v168 = sub_253462A5C(&qword_269CE2150);
                memcpy(v163, v164, *(void *)(*(void *)(v168 - 8) + 64));
              }
              else
              {
                int v169 = swift_getEnumCaseMultiPayload();
                if (v169 == 1)
                {
                  void *v163 = *v164;
                  uint64_t v173 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                  uint64_t v279 = (char *)v164 + v173;
                  __dstf = (char *)v163 + v173;
                  uint64_t v174 = sub_253B07160();
                  uint64_t v274 = *(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v175 = v174;
                  uint64_t v152 = v315;
                  v274(__dstf, v279, v175);
                  swift_storeEnumTagMultiPayload();
                }
                else if (v169)
                {
                  memcpy(v163, v164, *(void *)(*(void *)(v167 - 8) + 64));
                }
                else
                {
                  uint64_t v297 = v167;
                  void *v163 = *v164;
                  v163[1] = v164[1];
                  uint64_t v273 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                  uint64_t v170 = *(int *)(v273 + 20);
                  __dsta = (void *)((char *)v163 + v170);
                  uint64_t v171 = (void *)((char *)v164 + v170);
                  swift_bridgeObjectRetain();
                  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v171, 1, v278))
                  {
                    uint64_t v172 = sub_253462A5C(&qword_26B249528);
                    memcpy(__dsta, v171, *(void *)(*(void *)(v172 - 8) + 64));
                  }
                  else
                  {
                    *(_DWORD *)__dsta = *(_DWORD *)v171;
                    __dsta[1] = v171[1];
                    __dsta[2] = v171[2];
                    uint64_t v176 = *(int *)(v278 + 24);
                    uint64_t v267 = (char *)v171 + v176;
                    uint64_t v269 = (char *)__dsta + v176;
                    uint64_t v177 = sub_253B07160();
                    uint64_t v264 = *(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v264(v269, v267, v177);
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v278);
                  }
                  uint64_t v178 = *(int *)(v273 + 24);
                  uint64_t v179 = (char *)v163 + v178;
                  uint64_t v180 = (char *)v164 + v178;
                  uint64_t v181 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 16))(v179, v180, v181);
                  uint64_t v167 = v297;
                  swift_storeEnumTagMultiPayload();
                  uint64_t v152 = v315;
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v163, 0, 1, v167);
              }
              uint64_t v182 = *(int *)(v165 + 20);
              uint64_t v183 = (char *)v163 + v182;
              uint64_t v184 = (char *)v164 + v182;
              uint64_t v185 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v185 - 8) + 16))(v183, v184, v185);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v163, 0, 1, v165);
            }
            uint64_t v186 = *(int *)(v152 + 36);
            uint64_t v187 = (char *)a1 + v186;
            uint64_t v188 = (char *)a2 + v186;
            uint64_t v189 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v189 - 8) + 16))(v187, v188, v189);
LABEL_109:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v12);
            goto LABEL_135;
          }
          uint64_t v78 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v50, 1, v78))
          {
            uint64_t v79 = sub_253462A5C(&qword_269CE2200);
            memcpy(v49, v50, *(void *)(*(void *)(v79 - 8) + 64));
LABEL_90:
            uint64_t v148 = *(int *)(v51 + 20);
            uint64_t v149 = &v49[v148];
            uint64_t v150 = &v50[v148];
            uint64_t v151 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v151 - 8) + 16))(v149, v150, v151);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v49, 0, 1, v51);
            goto LABEL_91;
          }
          int v90 = swift_getEnumCaseMultiPayload();
          switch(v90)
          {
            case 6:
              uint64_t v144 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v144 - 8) + 16))(v49, v50, v144);
              break;
            case 5:
              *uint64_t v49 = *v50;
              uint64_t v145 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                            + 20);
              uint64_t v146 = &v49[v145];
              __srcf = &v50[v145];
              uint64_t v147 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v147 - 8) + 16))(v146, __srcf, v147);
              break;
            case 1:
              uint64_t v91 = sub_253B08E50();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v91 - 8) + 16))(v49, v50, v91);
              break;
            default:
              memcpy(v49, v50, *(void *)(*(void *)(v78 - 8) + 64));
              goto LABEL_89;
          }
          swift_storeEnumTagMultiPayload();
LABEL_89:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v49, 0, 1, v78);
          goto LABEL_90;
        case 3u:
          uint64_t v53 = sub_253B07160();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16))(a1, a2, v53);
          goto LABEL_109;
        default:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v15 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          uint64_t v16 = *(int *)(v15 + 20);
          uint64_t v17 = (void *)((char *)a1 + v16);
          uint64_t v18 = (void *)((char *)a2 + v16);
          uint64_t v19 = type metadata accessor for TranscriptProtoStatementID(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
          {
            uint64_t v20 = sub_253462A5C(&qword_26B249528);
            memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
          }
          else
          {
            *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
            v17[1] = v18[1];
            v17[2] = v18[2];
            uint64_t v62 = *(int *)(v19 + 24);
            __srcb = (char *)v18 + v62;
            uint64_t v317 = (char *)v17 + v62;
            uint64_t v63 = sub_253B07160();
            uint64_t v292 = *(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16);
            swift_bridgeObjectRetain();
            v292(v317, __srcb, v63);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
          }
          uint64_t v64 = *(int *)(v15 + 24);
          uint64_t v65 = (char *)a1 + v64;
          uint64_t v66 = (char *)a2 + v64;
          uint64_t v67 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
          goto LABEL_109;
      }
    }
    goto LABEL_18;
  }
  if (!v14)
  {
    if (a1 == a2) {
      goto LABEL_135;
    }
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v68 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        uint64_t v318 = (char *)a1 + v68;
        uint64_t v69 = (char *)a2 + v68;
        uint64_t v70 = sub_253B07160();
        uint64_t v71 = *(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16);
        swift_bridgeObjectRetain();
        v71(v318, v69, v70);
        goto LABEL_134;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        uint64_t v319 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        uint64_t v72 = *(int *)(v319 + 24);
        uint64_t v73 = (char *)a1 + v72;
        uint64_t v74 = (char *)a2 + v72;
        uint64_t v75 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v74, 1, v75))
        {
          uint64_t v76 = sub_253462A5C(&qword_269CE2140);
          memcpy(v73, v74, *(void *)(*(void *)(v76 - 8) + 64));
LABEL_116:
          uint64_t v198 = v319;
          uint64_t v199 = *(int *)(v319 + 28);
          uint64_t v200 = (void *)((char *)a1 + v199);
          uint64_t v201 = (void *)((char *)a2 + v199);
          uint64_t v202 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v201, 1, v202))
          {
            uint64_t v203 = sub_253462A5C(&qword_26B249528);
            memcpy(v200, v201, *(void *)(*(void *)(v203 - 8) + 64));
          }
          else
          {
            *(_DWORD *)uint64_t v200 = *(_DWORD *)v201;
            v200[1] = v201[1];
            v200[2] = v201[2];
            uint64_t v204 = *(int *)(v202 + 24);
            uint64_t v298 = (char *)v201 + v204;
            __srci = (char *)v200 + v204;
            uint64_t v205 = sub_253B07160();
            __dstg = *(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v206 = v205;
            uint64_t v198 = v319;
            __dstg(__srci, v298, v206);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v200, 0, 1, v202);
          }
          uint64_t v207 = *(int *)(v198 + 32);
          uint64_t v208 = (void *)((char *)a1 + v207);
          uint64_t v209 = (void *)((char *)a2 + v207);
          uint64_t v210 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v209, 1, v210))
          {
            uint64_t v211 = sub_253462A5C(&qword_269CE2130);
            memcpy(v208, v209, *(void *)(*(void *)(v211 - 8) + 64));
          }
          else
          {
            __src = (int *)v202;
            uint64_t v212 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v209, 1, v212))
            {
              uint64_t v213 = sub_253462A5C(&qword_269CE2150);
              memcpy(v208, v209, *(void *)(*(void *)(v213 - 8) + 64));
            }
            else
            {
              int v214 = swift_getEnumCaseMultiPayload();
              if (v214 == 1)
              {
                void *v208 = *v209;
                uint64_t v219 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                __srcj = (char *)v208 + v219;
                __dsth = (char *)v209 + v219;
                uint64_t v220 = sub_253B07160();
                uint64_t v281 = *(void (**)(char *, char *, uint64_t))(*(void *)(v220 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v221 = v220;
                uint64_t v198 = v319;
                v281(__srcj, __dsth, v221);
                swift_storeEnumTagMultiPayload();
              }
              else if (v214)
              {
                memcpy(v208, v209, *(void *)(*(void *)(v212 - 8) + 64));
              }
              else
              {
                uint64_t v299 = v212;
                void *v208 = *v209;
                v208[1] = v209[1];
                uint64_t v215 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                uint64_t v216 = *(int *)(v215 + 20);
                uint64_t v280 = v215;
                __dstb = (void *)((char *)v208 + v216);
                uint64_t v217 = (void *)((char *)v209 + v216);
                swift_bridgeObjectRetain();
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v217, 1, (uint64_t)__src))
                {
                  uint64_t v218 = sub_253462A5C(&qword_26B249528);
                  memcpy(__dstb, v217, *(void *)(*(void *)(v218 - 8) + 64));
                }
                else
                {
                  *(_DWORD *)__dstb = *(_DWORD *)v217;
                  __dstb[1] = v217[1];
                  __dstb[2] = v217[2];
                  uint64_t v222 = __src[6];
                  uint64_t v270 = (char *)v217 + v222;
                  uint64_t v275 = (char *)__dstb + v222;
                  uint64_t v223 = sub_253B07160();
                  uint64_t v265 = *(void (**)(char *, char *, uint64_t))(*(void *)(v223 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v265(v275, v270, v223);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstb, 0, 1, (uint64_t)__src);
                }
                uint64_t v224 = *(int *)(v280 + 24);
                uint64_t v225 = (char *)v208 + v224;
                uint64_t v226 = (char *)v209 + v224;
                uint64_t v227 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v227 - 8) + 16))(v225, v226, v227);
                uint64_t v212 = v299;
                swift_storeEnumTagMultiPayload();
                uint64_t v198 = v319;
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v208, 0, 1, v212);
            }
            uint64_t v228 = *(int *)(v210 + 20);
            uint64_t v229 = (char *)v208 + v228;
            uint64_t v230 = (char *)v209 + v228;
            uint64_t v231 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v231 - 8) + 16))(v229, v230, v231);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v208, 0, 1, v210);
          }
          uint64_t v232 = *(int *)(v198 + 36);
          uint64_t v233 = (char *)a1 + v232;
          uint64_t v234 = (char *)a2 + v232;
          uint64_t v235 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v235 - 8) + 16))(v233, v234, v235);
LABEL_134:
          swift_storeEnumTagMultiPayload();
          goto LABEL_135;
        }
        uint64_t v88 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v74, 1, v88))
        {
          uint64_t v89 = sub_253462A5C(&qword_269CE2200);
          memcpy(v73, v74, *(void *)(*(void *)(v89 - 8) + 64));
LABEL_115:
          uint64_t v194 = *(int *)(v75 + 20);
          int v195 = &v73[v194];
          uint64_t v196 = &v74[v194];
          uint64_t v197 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v197 - 8) + 16))(v195, v196, v197);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v73, 0, 1, v75);
          goto LABEL_116;
        }
        int v124 = swift_getEnumCaseMultiPayload();
        switch(v124)
        {
          case 6:
            uint64_t v190 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v190 - 8) + 16))(v73, v74, v190);
            break;
          case 5:
            *uint64_t v73 = *v74;
            uint64_t v191 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                          + 20);
            uint64_t v192 = &v73[v191];
            __srch = &v74[v191];
            uint64_t v193 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v193 - 8) + 16))(v192, __srch, v193);
            break;
          case 1:
            uint64_t v125 = sub_253B08E50();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v125 - 8) + 16))(v73, v74, v125);
            break;
          default:
            memcpy(v73, v74, *(void *)(*(void *)(v88 - 8) + 64));
            goto LABEL_114;
        }
        swift_storeEnumTagMultiPayload();
LABEL_114:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v73, 0, 1, v88);
        goto LABEL_115;
      case 3u:
        uint64_t v77 = sub_253B07160();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v77 - 8) + 16))(a1, a2, v77);
        goto LABEL_134;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v38 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v39 = *(int *)(v38 + 20);
        uint64_t v40 = (void *)((char *)a1 + v39);
        uint64_t v41 = (void *)((char *)a2 + v39);
        uint64_t v42 = type metadata accessor for TranscriptProtoStatementID(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v41, 1, v42))
        {
          uint64_t v43 = sub_253462A5C(&qword_26B249528);
          memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
        }
        else
        {
          *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
          v40[1] = v41[1];
          v40[2] = v41[2];
          uint64_t v82 = *(int *)(v42 + 24);
          __srcc = (char *)v41 + v82;
          uint64_t v320 = (char *)v40 + v82;
          uint64_t v83 = sub_253B07160();
          uint64_t v293 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16);
          swift_bridgeObjectRetain();
          v293(v320, __srcc, v83);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v40, 0, 1, v42);
        }
        uint64_t v84 = *(int *)(v38 + 24);
        uint64_t v85 = (char *)a1 + v84;
        uint64_t v86 = (char *)a2 + v84;
        uint64_t v87 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
        goto LABEL_134;
    }
  }
  sub_2536FA73C();
LABEL_18:
  uint64_t v27 = sub_253462A5C(&qword_269CE1B00);
  memcpy(a1, a2, *(void *)(*(void *)(v27 - 8) + 64));
LABEL_135:
  uint64_t v236 = *(int *)(v6 + 20);
  uint64_t v237 = (char *)a1 + v236;
  uint64_t v238 = (char *)a2 + v236;
  uint64_t v239 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v239 - 8) + 24))(v237, v238, v239);
LABEL_136:
  uint64_t v240 = a3[5];
  uint64_t v241 = (void *)((char *)a1 + v240);
  uint64_t v242 = (void *)((char *)a2 + v240);
  void *v241 = *v242;
  v241[1] = v242[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v243 = a3[6];
  uint64_t v244 = (void *)((char *)a1 + v243);
  uint64_t v245 = (void *)((char *)a2 + v243);
  uint64_t v246 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  int v247 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v244, 1, v246);
  int v248 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v245, 1, v246);
  if (!v247)
  {
    if (!v248)
    {
      void *v244 = *v245;
      v244[1] = v245[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v244[2] = v245[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v259 = *(int *)(v246 + 24);
      uint64_t v260 = (char *)v244 + v259;
      uint64_t v261 = (char *)v245 + v259;
      uint64_t v262 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v262 - 8) + 24))(v260, v261, v262);
      goto LABEL_142;
    }
    sub_2536FA73C();
    goto LABEL_141;
  }
  if (v248)
  {
LABEL_141:
    uint64_t v253 = sub_253462A5C(&qword_269CE1AD0);
    memcpy(v244, v245, *(void *)(*(void *)(v253 - 8) + 64));
    goto LABEL_142;
  }
  void *v244 = *v245;
  v244[1] = v245[1];
  v244[2] = v245[2];
  uint64_t v249 = *(int *)(v246 + 24);
  __srck = (char *)v245 + v249;
  uint64_t v321 = (char *)v244 + v249;
  uint64_t v250 = sub_253B07160();
  uint64_t v251 = a3;
  uint64_t v252 = *(void (**)(char *, char *, uint64_t))(*(void *)(v250 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v252(v321, __srck, v250);
  a3 = v251;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v244, 0, 1, v246);
LABEL_142:
  uint64_t v254 = a3[7];
  uint64_t v255 = (char *)a1 + v254;
  uint64_t v256 = (char *)a2 + v254;
  uint64_t v257 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v257 - 8) + 24))(v255, v256, v257);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoExternalAgentRequest(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoRequestContent(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE1AF0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    goto LABEL_46;
  }
  uint64_t v8 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v8))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
        goto LABEL_44;
      case 2u:
        long long v20 = a2[1];
        *a1 = *a2;
        a1[1] = v20;
        uint64_t v21 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        uint64_t v22 = v21[6];
        uint64_t v23 = (char *)a1 + v22;
        uint64_t v24 = (char *)a2 + v22;
        uint64_t v25 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
        {
          uint64_t v26 = sub_253462A5C(&qword_269CE2140);
          memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
LABEL_26:
          uint64_t v47 = v21[7];
          uint64_t v48 = (_DWORD *)((char *)a1 + v47);
          uint64_t v49 = (_DWORD *)((char *)a2 + v47);
          uint64_t v50 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v49, 1, v50))
          {
            uint64_t v51 = sub_253462A5C(&qword_26B249528);
            memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
          }
          else
          {
            *uint64_t v48 = *v49;
            *(_OWORD *)(v48 + 2) = *(_OWORD *)(v49 + 2);
            uint64_t v52 = *(int *)(v50 + 24);
            uint64_t v53 = (char *)v48 + v52;
            uint64_t v54 = (char *)v49 + v52;
            uint64_t v55 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v48, 0, 1, v50);
          }
          uint64_t v56 = v21[8];
          uint64_t v57 = (void *)((char *)a1 + v56);
          uint64_t v58 = (void *)((char *)a2 + v56);
          uint64_t v59 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v58, 1, v59))
          {
            uint64_t v60 = sub_253462A5C(&qword_269CE2130);
            memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
          }
          else
          {
            uint64_t v112 = v21;
            uint64_t v61 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v58, 1, v61))
            {
              uint64_t v62 = sub_253462A5C(&qword_269CE2150);
              memcpy(v57, v58, *(void *)(*(void *)(v62 - 8) + 64));
              uint64_t v21 = v112;
            }
            else
            {
              uint64_t v110 = v61;
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              if (EnumCaseMultiPayload == 1)
              {
                *uint64_t v57 = *v58;
                uint64_t v67 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                uint64_t v68 = (char *)v57 + v67;
                uint64_t v69 = (char *)v58 + v67;
                uint64_t v70 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
                uint64_t v71 = v110;
                swift_storeEnumTagMultiPayload();
                uint64_t v21 = v112;
              }
              else
              {
                uint64_t v21 = v112;
                if (EnumCaseMultiPayload)
                {
                  uint64_t v71 = v110;
                  memcpy(v57, v58, *(void *)(*(void *)(v110 - 8) + 64));
                }
                else
                {
                  *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
                  uint64_t v64 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                  uint64_t v65 = *(int *)(v64 + 20);
                  uint64_t v106 = v64;
                  __dst = (_DWORD *)((char *)v57 + v65);
                  __src = (_DWORD *)((char *)v58 + v65);
                  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v58 + v65, 1, v50))
                  {
                    uint64_t v66 = sub_253462A5C(&qword_26B249528);
                    memcpy(__dst, __src, *(void *)(*(void *)(v66 - 8) + 64));
                  }
                  else
                  {
                    _DWORD *__dst = *__src;
                    *(_OWORD *)(__dst + 2) = *(_OWORD *)(__src + 2);
                    uint64_t v72 = *(int *)(v50 + 24);
                    uint64_t v103 = (char *)__dst + v72;
                    __srca = (char *)__src + v72;
                    uint64_t v73 = sub_253B07160();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v103, __srca, v73);
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v50);
                  }
                  uint64_t v74 = *(int *)(v106 + 24);
                  uint64_t v75 = (char *)v57 + v74;
                  __dsta = (char *)v58 + v74;
                  uint64_t v76 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32))(v75, __dsta, v76);
                  uint64_t v71 = v110;
                  swift_storeEnumTagMultiPayload();
                }
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v57, 0, 1, v71);
            }
            uint64_t v77 = *(int *)(v59 + 20);
            uint64_t v78 = (char *)v57 + v77;
            uint64_t v79 = (char *)v58 + v77;
            uint64_t v80 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v78, v79, v80);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v57, 0, 1, v59);
          }
          uint64_t v81 = v21[9];
          uint64_t v82 = (char *)a1 + v81;
          uint64_t v83 = (char *)a2 + v81;
          uint64_t v84 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v82, v83, v84);
LABEL_44:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v8);
          goto LABEL_45;
        }
        uint64_t v36 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v36))
        {
          uint64_t v37 = sub_253462A5C(&qword_269CE2200);
          memcpy(v23, v24, *(void *)(*(void *)(v37 - 8) + 64));
LABEL_25:
          uint64_t v43 = *(int *)(v25 + 20);
          uint64_t v44 = &v23[v43];
          uint64_t v45 = &v24[v43];
          uint64_t v46 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v25);
          goto LABEL_26;
        }
        int v38 = swift_getEnumCaseMultiPayload();
        switch(v38)
        {
          case 6:
            uint64_t v40 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v40 - 8) + 32))(v23, v24, v40);
            break;
          case 5:
            *uint64_t v23 = *v24;
            uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                         + 20);
            uint64_t v109 = &v24[v41];
            uint64_t v111 = &v23[v41];
            uint64_t v42 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v42 - 8) + 32))(v111, v109, v42);
            break;
          case 1:
            uint64_t v39 = sub_253B08E50();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v39 - 8) + 32))(v23, v24, v39);
            break;
          default:
            memcpy(v23, v24, *(void *)(*(void *)(v36 - 8) + 64));
            goto LABEL_24;
        }
        swift_storeEnumTagMultiPayload();
LABEL_24:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v36);
        goto LABEL_25;
      case 3u:
        uint64_t v27 = sub_253B07160();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v27 - 8) + 32))(a1, a2, v27);
        goto LABEL_44;
      default:
        *a1 = *a2;
        uint64_t v10 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v11 = *(int *)(v10 + 20);
        uint64_t v12 = (_DWORD *)((char *)a1 + v11);
        int v13 = (_DWORD *)((char *)a2 + v11);
        uint64_t v14 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
        {
          uint64_t v15 = sub_253462A5C(&qword_26B249528);
          memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          *uint64_t v12 = *v13;
          *(_OWORD *)(v12 + 2) = *(_OWORD *)(v13 + 2);
          uint64_t v28 = *(int *)(v14 + 24);
          uint64_t v29 = (char *)v12 + v28;
          uint64_t v30 = (char *)v13 + v28;
          uint64_t v31 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
        }
        uint64_t v32 = *(int *)(v10 + 24);
        uint64_t v33 = (char *)a1 + v32;
        uint64_t v34 = (char *)a2 + v32;
        uint64_t v35 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
        goto LABEL_44;
    }
  }
  uint64_t v9 = sub_253462A5C(&qword_269CE1B00);
  memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_45:
  uint64_t v85 = *(int *)(v6 + 20);
  uint64_t v86 = (char *)a1 + v85;
  uint64_t v87 = (char *)a2 + v85;
  uint64_t v88 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v86, v87, v88);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_46:
  uint64_t v89 = a3[6];
  *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
  int v90 = (void *)((char *)a1 + v89);
  uint64_t v91 = (void *)((char *)a2 + v89);
  uint64_t v92 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v91, 1, v92))
  {
    uint64_t v93 = sub_253462A5C(&qword_269CE1AD0);
    memcpy(v90, v91, *(void *)(*(void *)(v93 - 8) + 64));
  }
  else
  {
    *(_OWORD *)int v90 = *(_OWORD *)v91;
    v90[2] = v91[2];
    uint64_t v94 = *(int *)(v92 + 24);
    uint64_t v95 = (char *)v90 + v94;
    uint64_t v96 = (char *)v91 + v94;
    uint64_t v97 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 32))(v95, v96, v97);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v90, 0, 1, v92);
  }
  uint64_t v98 = a3[7];
  uint64_t v99 = (char *)a1 + v98;
  uint64_t v100 = (char *)a2 + v98;
  uint64_t v101 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v99, v100, v101);
  return a1;
}

_OWORD *assignWithTake for TranscriptProtoExternalAgentRequest(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoRequestContent(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v9))
      {
        uint64_t v10 = sub_253462A5C(&qword_269CE1B00);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
        goto LABEL_84;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)a1 = *(void *)a2;
          uint64_t v28 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          uint64_t v29 = (char *)a1 + v28;
          uint64_t v30 = (char *)a2 + v28;
          uint64_t v31 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
          goto LABEL_83;
        case 2u:
          long long v32 = a2[1];
          *a1 = *a2;
          a1[1] = v32;
          uint64_t v33 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
          uint64_t v34 = v33[6];
          uint64_t v35 = (char *)a1 + v34;
          uint64_t v36 = (char *)a2 + v34;
          uint64_t v37 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v36, 1, v37))
          {
            uint64_t v38 = sub_253462A5C(&qword_269CE2140);
            memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
            goto LABEL_61;
          }
          uint64_t v66 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v36, 1, v66))
          {
            uint64_t v67 = sub_253462A5C(&qword_269CE2200);
            memcpy(v35, v36, *(void *)(*(void *)(v67 - 8) + 64));
LABEL_60:
            uint64_t v107 = *(int *)(v37 + 20);
            uint64_t v108 = &v35[v107];
            uint64_t v109 = &v36[v107];
            uint64_t v110 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v110 - 8) + 32))(v108, v109, v110);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v35, 0, 1, v37);
LABEL_61:
            uint64_t v111 = v33[7];
            uint64_t v112 = (_DWORD *)((char *)a1 + v111);
            uint64_t v113 = (_DWORD *)((char *)a2 + v111);
            uint64_t v114 = type metadata accessor for TranscriptProtoStatementID(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v113, 1, v114))
            {
              uint64_t v115 = sub_253462A5C(&qword_26B249528);
              memcpy(v112, v113, *(void *)(*(void *)(v115 - 8) + 64));
            }
            else
            {
              _DWORD *v112 = *v113;
              *(_OWORD *)(v112 + 2) = *(_OWORD *)(v113 + 2);
              uint64_t v116 = *(int *)(v114 + 24);
              uint64_t v117 = (char *)v112 + v116;
              uint64_t v118 = (char *)v113 + v116;
              uint64_t v119 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 32))(v117, v118, v119);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v112, 0, 1, v114);
            }
            uint64_t v120 = v33[8];
            uint64_t v121 = (void *)((char *)a1 + v120);
            uint64_t v122 = (void *)((char *)a2 + v120);
            uint64_t v123 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v122, 1, v123))
            {
              uint64_t v124 = sub_253462A5C(&qword_269CE2130);
              memcpy(v121, v122, *(void *)(*(void *)(v124 - 8) + 64));
            }
            else
            {
              uint64_t v300 = v33;
              uint64_t v125 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v122, 1, v125))
              {
                uint64_t v126 = sub_253462A5C(&qword_269CE2150);
                memcpy(v121, v122, *(void *)(*(void *)(v126 - 8) + 64));
                uint64_t v33 = v300;
              }
              else
              {
                uint64_t v294 = v125;
                int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                if (EnumCaseMultiPayload == 1)
                {
                  *uint64_t v121 = *v122;
                  uint64_t v131 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                  uint64_t v132 = (char *)v121 + v131;
                  uint64_t v133 = (char *)v122 + v131;
                  uint64_t v134 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 32))(v132, v133, v134);
                  uint64_t v135 = v294;
                  swift_storeEnumTagMultiPayload();
                  uint64_t v33 = v300;
                }
                else
                {
                  uint64_t v33 = v300;
                  if (EnumCaseMultiPayload)
                  {
                    uint64_t v135 = v294;
                    memcpy(v121, v122, *(void *)(*(void *)(v294 - 8) + 64));
                  }
                  else
                  {
                    *(_OWORD *)uint64_t v121 = *(_OWORD *)v122;
                    uint64_t v128 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                    uint64_t v129 = *(int *)(v128 + 20);
                    uint64_t v284 = v128;
                    __dst = (_DWORD *)((char *)v121 + v129);
                    __src = (_DWORD *)((char *)v122 + v129);
                    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v122 + v129, 1, v114))
                    {
                      uint64_t v130 = sub_253462A5C(&qword_26B249528);
                      memcpy(__dst, __src, *(void *)(*(void *)(v130 - 8) + 64));
                    }
                    else
                    {
                      _DWORD *__dst = *__src;
                      *(_OWORD *)(__dst + 2) = *(_OWORD *)(__src + 2);
                      uint64_t v138 = *(int *)(v114 + 24);
                      uint64_t v275 = (char *)__dst + v138;
                      __srcc = (char *)__src + v138;
                      uint64_t v139 = sub_253B07160();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 32))(v275, __srcc, v139);
                      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v114);
                    }
                    uint64_t v140 = *(int *)(v284 + 24);
                    uint64_t v141 = (char *)v121 + v140;
                    __dstc = (char *)v122 + v140;
                    uint64_t v142 = sub_253B07160();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v141, __dstc, v142);
                    uint64_t v135 = v294;
                    swift_storeEnumTagMultiPayload();
                  }
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v121, 0, 1, v135);
              }
              uint64_t v143 = *(int *)(v123 + 20);
              uint64_t v144 = (char *)v121 + v143;
              uint64_t v145 = (char *)v122 + v143;
              uint64_t v146 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 32))(v144, v145, v146);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v121, 0, 1, v123);
            }
            uint64_t v147 = v33[9];
            uint64_t v148 = (char *)a1 + v147;
            uint64_t v149 = (char *)a2 + v147;
            uint64_t v150 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 32))(v148, v149, v150);
LABEL_83:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v9);
LABEL_84:
            uint64_t v151 = *(int *)(v6 + 20);
            uint64_t v152 = (char *)a1 + v151;
            uint64_t v153 = (char *)a2 + v151;
            uint64_t v154 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 32))(v152, v153, v154);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
            goto LABEL_136;
          }
          int v90 = swift_getEnumCaseMultiPayload();
          switch(v90)
          {
            case 6:
              uint64_t v104 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v104 - 8) + 32))(v35, v36, v104);
              break;
            case 5:
              *uint64_t v35 = *v36;
              uint64_t v105 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                            + 20);
              uint64_t v293 = &v36[v105];
              uint64_t v299 = &v35[v105];
              uint64_t v106 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v106 - 8) + 32))(v299, v293, v106);
              break;
            case 1:
              uint64_t v91 = sub_253B08E50();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v91 - 8) + 32))(v35, v36, v91);
              break;
            default:
              memcpy(v35, v36, *(void *)(*(void *)(v66 - 8) + 64));
              goto LABEL_59;
          }
          swift_storeEnumTagMultiPayload();
LABEL_59:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v35, 0, 1, v66);
          goto LABEL_60;
        case 3u:
          uint64_t v39 = sub_253B07160();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v39 - 8) + 32))(a1, a2, v39);
          goto LABEL_83;
        default:
          *a1 = *a2;
          uint64_t v21 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          uint64_t v22 = *(int *)(v21 + 20);
          uint64_t v23 = (_DWORD *)((char *)a1 + v22);
          uint64_t v24 = (_DWORD *)((char *)a2 + v22);
          uint64_t v25 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
          {
            uint64_t v26 = sub_253462A5C(&qword_26B249528);
            memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
          }
          else
          {
            *uint64_t v23 = *v24;
            *(_OWORD *)(v23 + 2) = *(_OWORD *)(v24 + 2);
            uint64_t v58 = *(int *)(v25 + 24);
            uint64_t v59 = (char *)v23 + v58;
            uint64_t v60 = (char *)v24 + v58;
            uint64_t v61 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v25);
          }
          uint64_t v62 = *(int *)(v21 + 24);
          uint64_t v63 = (char *)a1 + v62;
          uint64_t v64 = (char *)a2 + v62;
          uint64_t v65 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v63, v64, v65);
          goto LABEL_83;
      }
    }
LABEL_7:
    uint64_t v11 = sub_253462A5C(&qword_269CE1AF0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_136;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  uint64_t v12 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v12);
  int v14 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v12);
  if (v13)
  {
    if (!v14)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)a1 = *(void *)a2;
          uint64_t v46 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          uint64_t v47 = (char *)a1 + v46;
          uint64_t v48 = (char *)a2 + v46;
          uint64_t v49 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
          goto LABEL_109;
        case 2u:
          long long v50 = a2[1];
          *a1 = *a2;
          a1[1] = v50;
          uint64_t v51 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
          uint64_t v52 = v51[6];
          uint64_t v53 = (char *)a1 + v52;
          uint64_t v54 = (char *)a2 + v52;
          uint64_t v55 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54, 1, v55))
          {
            uint64_t v56 = sub_253462A5C(&qword_269CE2140);
            memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
LABEL_91:
            uint64_t v162 = v51[7];
            uint64_t v163 = (_DWORD *)((char *)a1 + v162);
            uint64_t v164 = (_DWORD *)((char *)a2 + v162);
            uint64_t v165 = type metadata accessor for TranscriptProtoStatementID(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v164, 1, v165))
            {
              uint64_t v166 = sub_253462A5C(&qword_26B249528);
              memcpy(v163, v164, *(void *)(*(void *)(v166 - 8) + 64));
            }
            else
            {
              _DWORD *v163 = *v164;
              *(_OWORD *)(v163 + 2) = *(_OWORD *)(v164 + 2);
              uint64_t v167 = *(int *)(v165 + 24);
              uint64_t v168 = (char *)v163 + v167;
              int v169 = (char *)v164 + v167;
              uint64_t v170 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 32))(v168, v169, v170);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v163, 0, 1, v165);
            }
            uint64_t v171 = v51[8];
            uint64_t v172 = (void *)((char *)a1 + v171);
            uint64_t v173 = (void *)((char *)a2 + v171);
            uint64_t v174 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v173, 1, v174))
            {
              uint64_t v175 = sub_253462A5C(&qword_269CE2130);
              memcpy(v172, v173, *(void *)(*(void *)(v175 - 8) + 64));
            }
            else
            {
              uint64_t v302 = v51;
              uint64_t v176 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v173, 1, v176))
              {
                uint64_t v177 = sub_253462A5C(&qword_269CE2150);
                memcpy(v172, v173, *(void *)(*(void *)(v177 - 8) + 64));
                uint64_t v51 = v302;
              }
              else
              {
                uint64_t v296 = v176;
                int v178 = swift_getEnumCaseMultiPayload();
                if (v178 == 1)
                {
                  void *v172 = *v173;
                  uint64_t v182 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                  uint64_t v183 = (char *)v172 + v182;
                  uint64_t v184 = (char *)v173 + v182;
                  uint64_t v185 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v185 - 8) + 32))(v183, v184, v185);
                  uint64_t v186 = v296;
                  swift_storeEnumTagMultiPayload();
                  uint64_t v51 = v302;
                }
                else
                {
                  uint64_t v51 = v302;
                  if (v178)
                  {
                    uint64_t v186 = v296;
                    memcpy(v172, v173, *(void *)(*(void *)(v296 - 8) + 64));
                  }
                  else
                  {
                    *(_OWORD *)uint64_t v172 = *(_OWORD *)v173;
                    uint64_t v179 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                    uint64_t v180 = *(int *)(v179 + 20);
                    uint64_t v285 = v179;
                    __dsta = (_DWORD *)((char *)v172 + v180);
                    __srca = (_DWORD *)((char *)v173 + v180);
                    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v173 + v180, 1, v165))
                    {
                      uint64_t v181 = sub_253462A5C(&qword_26B249528);
                      memcpy(__dsta, __srca, *(void *)(*(void *)(v181 - 8) + 64));
                    }
                    else
                    {
                      _DWORD *__dsta = *__srca;
                      *(_OWORD *)(__dsta + 2) = *(_OWORD *)(__srca + 2);
                      uint64_t v187 = *(int *)(v165 + 24);
                      uint64_t v276 = (char *)__dsta + v187;
                      __srcd = (char *)__srca + v187;
                      uint64_t v188 = sub_253B07160();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v188 - 8) + 32))(v276, __srcd, v188);
                      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v165);
                    }
                    uint64_t v189 = *(int *)(v285 + 24);
                    uint64_t v190 = (char *)v172 + v189;
                    __dstd = (char *)v173 + v189;
                    uint64_t v191 = sub_253B07160();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 32))(v190, __dstd, v191);
                    uint64_t v186 = v296;
                    swift_storeEnumTagMultiPayload();
                  }
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v172, 0, 1, v186);
              }
              uint64_t v192 = *(int *)(v174 + 20);
              uint64_t v193 = (char *)v172 + v192;
              uint64_t v194 = (char *)v173 + v192;
              uint64_t v195 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 32))(v193, v194, v195);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v172, 0, 1, v174);
            }
            uint64_t v196 = v51[9];
            uint64_t v197 = (char *)a1 + v196;
            uint64_t v198 = (char *)a2 + v196;
            uint64_t v199 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v199 - 8) + 32))(v197, v198, v199);
LABEL_109:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v12);
            goto LABEL_135;
          }
          uint64_t v88 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v54, 1, v88))
          {
            uint64_t v89 = sub_253462A5C(&qword_269CE2200);
            memcpy(v53, v54, *(void *)(*(void *)(v89 - 8) + 64));
LABEL_90:
            uint64_t v158 = *(int *)(v55 + 20);
            uint64_t v159 = &v53[v158];
            uint64_t v160 = &v54[v158];
            uint64_t v161 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v161 - 8) + 32))(v159, v160, v161);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v53, 0, 1, v55);
            goto LABEL_91;
          }
          int v102 = swift_getEnumCaseMultiPayload();
          switch(v102)
          {
            case 6:
              uint64_t v155 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v155 - 8) + 32))(v53, v54, v155);
              break;
            case 5:
              *uint64_t v53 = *v54;
              uint64_t v156 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                            + 20);
              uint64_t v295 = &v54[v156];
              uint64_t v301 = &v53[v156];
              uint64_t v157 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v157 - 8) + 32))(v301, v295, v157);
              break;
            case 1:
              uint64_t v103 = sub_253B08E50();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v103 - 8) + 32))(v53, v54, v103);
              break;
            default:
              memcpy(v53, v54, *(void *)(*(void *)(v88 - 8) + 64));
              goto LABEL_89;
          }
          swift_storeEnumTagMultiPayload();
LABEL_89:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v53, 0, 1, v88);
          goto LABEL_90;
        case 3u:
          uint64_t v57 = sub_253B07160();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v57 - 8) + 32))(a1, a2, v57);
          goto LABEL_109;
        default:
          *a1 = *a2;
          uint64_t v15 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          uint64_t v16 = *(int *)(v15 + 20);
          uint64_t v17 = (_DWORD *)((char *)a1 + v16);
          uint64_t v18 = (_DWORD *)((char *)a2 + v16);
          uint64_t v19 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
          {
            uint64_t v20 = sub_253462A5C(&qword_26B249528);
            memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
          }
          else
          {
            *uint64_t v17 = *v18;
            *(_OWORD *)(v17 + 2) = *(_OWORD *)(v18 + 2);
            uint64_t v68 = *(int *)(v19 + 24);
            uint64_t v69 = (char *)v17 + v68;
            uint64_t v70 = (char *)v18 + v68;
            uint64_t v71 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
          }
          uint64_t v72 = *(int *)(v15 + 24);
          uint64_t v73 = (char *)a1 + v72;
          uint64_t v74 = (char *)a2 + v72;
          uint64_t v75 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
          goto LABEL_109;
      }
    }
    goto LABEL_18;
  }
  if (!v14)
  {
    if (a1 == a2) {
      goto LABEL_135;
    }
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        uint64_t v76 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        uint64_t v77 = (char *)a1 + v76;
        uint64_t v78 = (char *)a2 + v76;
        uint64_t v79 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
        goto LABEL_134;
      case 2u:
        long long v80 = a2[1];
        *a1 = *a2;
        a1[1] = v80;
        uint64_t v81 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        uint64_t v82 = v81[6];
        uint64_t v83 = (char *)a1 + v82;
        uint64_t v84 = (char *)a2 + v82;
        uint64_t v85 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v85))
        {
          uint64_t v86 = sub_253462A5C(&qword_269CE2140);
          memcpy(v83, v84, *(void *)(*(void *)(v86 - 8) + 64));
LABEL_116:
          uint64_t v207 = v81[7];
          uint64_t v208 = (_DWORD *)((char *)a1 + v207);
          uint64_t v209 = (_DWORD *)((char *)a2 + v207);
          uint64_t v210 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v209, 1, v210))
          {
            uint64_t v211 = sub_253462A5C(&qword_26B249528);
            memcpy(v208, v209, *(void *)(*(void *)(v211 - 8) + 64));
          }
          else
          {
            _DWORD *v208 = *v209;
            *(_OWORD *)(v208 + 2) = *(_OWORD *)(v209 + 2);
            uint64_t v212 = *(int *)(v210 + 24);
            uint64_t v213 = (char *)v208 + v212;
            int v214 = (char *)v209 + v212;
            uint64_t v215 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v215 - 8) + 32))(v213, v214, v215);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v208, 0, 1, v210);
          }
          uint64_t v216 = v81[8];
          uint64_t v217 = (void *)((char *)a1 + v216);
          uint64_t v218 = (void *)((char *)a2 + v216);
          uint64_t v219 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v218, 1, v219))
          {
            uint64_t v220 = sub_253462A5C(&qword_269CE2130);
            memcpy(v217, v218, *(void *)(*(void *)(v220 - 8) + 64));
          }
          else
          {
            uint64_t v304 = v81;
            uint64_t v221 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v218, 1, v221))
            {
              uint64_t v222 = sub_253462A5C(&qword_269CE2150);
              memcpy(v217, v218, *(void *)(*(void *)(v222 - 8) + 64));
              uint64_t v81 = v304;
            }
            else
            {
              uint64_t v298 = v221;
              int v223 = swift_getEnumCaseMultiPayload();
              if (v223 == 1)
              {
                void *v217 = *v218;
                uint64_t v227 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                uint64_t v228 = (char *)v217 + v227;
                uint64_t v229 = (char *)v218 + v227;
                uint64_t v230 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v230 - 8) + 32))(v228, v229, v230);
                uint64_t v231 = v298;
                swift_storeEnumTagMultiPayload();
                uint64_t v81 = v304;
              }
              else
              {
                uint64_t v81 = v304;
                if (v223)
                {
                  uint64_t v231 = v298;
                  memcpy(v217, v218, *(void *)(*(void *)(v298 - 8) + 64));
                }
                else
                {
                  *(_OWORD *)uint64_t v217 = *(_OWORD *)v218;
                  uint64_t v224 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                  uint64_t v225 = *(int *)(v224 + 20);
                  uint64_t v286 = v224;
                  __dstb = (_DWORD *)((char *)v217 + v225);
                  __srcb = (_DWORD *)((char *)v218 + v225);
                  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v218 + v225, 1, v210))
                  {
                    uint64_t v226 = sub_253462A5C(&qword_26B249528);
                    memcpy(__dstb, __srcb, *(void *)(*(void *)(v226 - 8) + 64));
                  }
                  else
                  {
                    _DWORD *__dstb = *__srcb;
                    *(_OWORD *)(__dstb + 2) = *(_OWORD *)(__srcb + 2);
                    uint64_t v232 = *(int *)(v210 + 24);
                    int v277 = (char *)__dstb + v232;
                    __srce = (char *)__srcb + v232;
                    uint64_t v233 = sub_253B07160();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v233 - 8) + 32))(v277, __srce, v233);
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstb, 0, 1, v210);
                  }
                  uint64_t v234 = *(int *)(v286 + 24);
                  uint64_t v235 = (char *)v217 + v234;
                  __dste = (char *)v218 + v234;
                  uint64_t v236 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v236 - 8) + 32))(v235, __dste, v236);
                  uint64_t v231 = v298;
                  swift_storeEnumTagMultiPayload();
                }
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v217, 0, 1, v231);
            }
            uint64_t v237 = *(int *)(v219 + 20);
            uint64_t v238 = (char *)v217 + v237;
            uint64_t v239 = (char *)v218 + v237;
            uint64_t v240 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v240 - 8) + 32))(v238, v239, v240);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v217, 0, 1, v219);
          }
          uint64_t v241 = v81[9];
          uint64_t v242 = (char *)a1 + v241;
          uint64_t v243 = (char *)a2 + v241;
          uint64_t v244 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v244 - 8) + 32))(v242, v243, v244);
LABEL_134:
          swift_storeEnumTagMultiPayload();
          goto LABEL_135;
        }
        uint64_t v100 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v100))
        {
          uint64_t v101 = sub_253462A5C(&qword_269CE2200);
          memcpy(v83, v84, *(void *)(*(void *)(v101 - 8) + 64));
LABEL_115:
          uint64_t v203 = *(int *)(v85 + 20);
          uint64_t v204 = &v83[v203];
          uint64_t v205 = &v84[v203];
          uint64_t v206 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v206 - 8) + 32))(v204, v205, v206);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v85);
          goto LABEL_116;
        }
        int v136 = swift_getEnumCaseMultiPayload();
        switch(v136)
        {
          case 6:
            uint64_t v200 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v200 - 8) + 32))(v83, v84, v200);
            break;
          case 5:
            *uint64_t v83 = *v84;
            uint64_t v201 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                          + 20);
            uint64_t v297 = &v84[v201];
            uint64_t v303 = &v83[v201];
            uint64_t v202 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v202 - 8) + 32))(v303, v297, v202);
            break;
          case 1:
            uint64_t v137 = sub_253B08E50();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v137 - 8) + 32))(v83, v84, v137);
            break;
          default:
            memcpy(v83, v84, *(void *)(*(void *)(v100 - 8) + 64));
            goto LABEL_114;
        }
        swift_storeEnumTagMultiPayload();
LABEL_114:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v83, 0, 1, v100);
        goto LABEL_115;
      case 3u:
        uint64_t v87 = sub_253B07160();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v87 - 8) + 32))(a1, a2, v87);
        goto LABEL_134;
      default:
        *a1 = *a2;
        uint64_t v40 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        uint64_t v41 = *(int *)(v40 + 20);
        uint64_t v42 = (_DWORD *)((char *)a1 + v41);
        uint64_t v43 = (_DWORD *)((char *)a2 + v41);
        uint64_t v44 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v43, 1, v44))
        {
          uint64_t v45 = sub_253462A5C(&qword_26B249528);
          memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
        }
        else
        {
          _DWORD *v42 = *v43;
          *(_OWORD *)(v42 + 2) = *(_OWORD *)(v43 + 2);
          uint64_t v92 = *(int *)(v44 + 24);
          uint64_t v93 = (char *)v42 + v92;
          uint64_t v94 = (char *)v43 + v92;
          uint64_t v95 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 32))(v93, v94, v95);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v42, 0, 1, v44);
        }
        uint64_t v96 = *(int *)(v40 + 24);
        uint64_t v97 = (char *)a1 + v96;
        uint64_t v98 = (char *)a2 + v96;
        uint64_t v99 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(v97, v98, v99);
        goto LABEL_134;
    }
  }
  sub_2536FA73C();
LABEL_18:
  uint64_t v27 = sub_253462A5C(&qword_269CE1B00);
  memcpy(a1, a2, *(void *)(*(void *)(v27 - 8) + 64));
LABEL_135:
  uint64_t v245 = *(int *)(v6 + 20);
  uint64_t v246 = (char *)a1 + v245;
  int v247 = (char *)a2 + v245;
  uint64_t v248 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v248 - 8) + 40))(v246, v247, v248);
LABEL_136:
  uint64_t v249 = a3[5];
  uint64_t v250 = (void *)((char *)a1 + v249);
  uint64_t v251 = (uint64_t *)((char *)a2 + v249);
  uint64_t v253 = *v251;
  uint64_t v252 = v251[1];
  void *v250 = v253;
  v250[1] = v252;
  swift_bridgeObjectRelease();
  uint64_t v254 = a3[6];
  uint64_t v255 = (void *)((char *)a1 + v254);
  uint64_t v256 = (void *)((char *)a2 + v254);
  uint64_t v257 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  int v258 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v255, 1, v257);
  int v259 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v256, 1, v257);
  if (!v258)
  {
    if (!v259)
    {
      uint64_t v270 = v256[1];
      void *v255 = *v256;
      v255[1] = v270;
      swift_bridgeObjectRelease();
      v255[2] = v256[2];
      swift_bridgeObjectRelease();
      uint64_t v271 = *(int *)(v257 + 24);
      uint64_t v272 = (char *)v255 + v271;
      uint64_t v273 = (char *)v256 + v271;
      uint64_t v274 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v274 - 8) + 40))(v272, v273, v274);
      goto LABEL_142;
    }
    sub_2536FA73C();
    goto LABEL_141;
  }
  if (v259)
  {
LABEL_141:
    uint64_t v264 = sub_253462A5C(&qword_269CE1AD0);
    memcpy(v255, v256, *(void *)(*(void *)(v264 - 8) + 64));
    goto LABEL_142;
  }
  *(_OWORD *)uint64_t v255 = *(_OWORD *)v256;
  v255[2] = v256[2];
  uint64_t v260 = *(int *)(v257 + 24);
  uint64_t v261 = (char *)v255 + v260;
  uint64_t v262 = (char *)v256 + v260;
  uint64_t v263 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v263 - 8) + 32))(v261, v262, v263);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v255, 0, 1, v257);
LABEL_142:
  uint64_t v265 = a3[7];
  uint64_t v266 = (char *)a1 + v265;
  uint64_t v267 = (char *)a2 + v265;
  uint64_t v268 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v268 - 8) + 40))(v266, v267, v268);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoExternalAgentRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253803AE8);
}

uint64_t sub_253803AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2534DA0C4();
  sub_253462A5C(&qword_269CE1AF0);
  sub_2535782A8();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    uint64_t v7 = sub_253945320();
  }
  else
  {
    sub_253945F98();
    if (v9) {
      return sub_2535E2258(*(void *)(v4 + *(int *)(a3 + 20) + 8));
    }
    sub_253462A5C(&qword_269CE1AD0);
    sub_2535782A8();
    if (*(_DWORD *)(v11 + 84) == v3)
    {
      sub_2535E2560();
    }
    else
    {
      sub_253B07160();
      sub_2535E256C();
    }
    uint64_t v7 = v4 + v12;
  }
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, v3, v8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoExternalAgentRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253803BC4);
}

void sub_253803BC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_2534DA0C4();
  sub_253462A5C(&qword_269CE1AF0);
  sub_2535782A8();
  if (*(_DWORD *)(v6 + 84) == a3)
  {
    sub_253944FD8();
  }
  else
  {
    sub_253945FA4();
    if (v7)
    {
      sub_253945524(*(int *)(a4 + 20));
      return;
    }
    sub_253462A5C(&qword_269CE1AD0);
    sub_2535782A8();
    if (*(_DWORD *)(v8 + 84) == a3)
    {
      sub_2535E26D8();
    }
    else
    {
      sub_253B07160();
      sub_2535E26E4();
    }
  }
  sub_2535E228C();
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v9, v10, v11, v12);
}

void sub_253803C88()
{
  sub_253760A08(319, &qword_26B2497E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestContent);
  if (v0 <= 0x3F)
  {
    sub_253760A08(319, &qword_26B249E20, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    if (v1 <= 0x3F)
    {
      sub_253B07160();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for TranscriptProtoExternalAgentRequestRewriteMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253803DF8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoExternalAgentRequestRewriteMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253803E10);
}

uint64_t sub_253803E14()
{
  return sub_2535DC13C();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoRequestPrescribedPlan(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE1B50);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v16 = a2[1];
          *a1 = *a2;
          a1[1] = v16;
          uint64_t v17 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0)
                       + 20);
          uint64_t v18 = (char *)a1 + v17;
          uint64_t v19 = (char *)a2 + v17;
          uint64_t v20 = sub_253B07160();
          uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
          swift_bridgeObjectRetain();
          v21(v18, v19, v20);
          break;
        case 2u:
          uint64_t v22 = a2[1];
          *a1 = *a2;
          a1[1] = v22;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0) + 24);
          uint64_t v24 = (char *)a1 + v23;
          uint64_t v25 = (char *)a2 + v23;
          uint64_t v26 = sub_253B07160();
          uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
          swift_bridgeObjectRetain();
          v27(v24, v25, v26);
          break;
        case 3u:
          uint64_t v28 = a2[1];
          *a1 = *a2;
          a1[1] = v28;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0) + 24);
          uint64_t v30 = (char *)a1 + v29;
          uint64_t v31 = (char *)a2 + v29;
          uint64_t v32 = sub_253B07160();
          uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
          swift_bridgeObjectRetain();
          v33(v30, v31, v32);
          break;
        case 4u:
          uint64_t v34 = a2[1];
          *a1 = *a2;
          a1[1] = v34;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0) + 24);
          uint64_t v36 = (char *)a1 + v35;
          uint64_t v37 = (char *)a2 + v35;
          uint64_t v38 = sub_253B07160();
          uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
          swift_bridgeObjectRetain();
          v39(v36, v37, v38);
          break;
        case 5u:
          uint64_t v40 = a2[1];
          *a1 = *a2;
          a1[1] = v40;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0) + 24);
          uint64_t v42 = (char *)a1 + v41;
          uint64_t v43 = (char *)a2 + v41;
          uint64_t v44 = sub_253B07160();
          uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
          swift_bridgeObjectRetain();
          v45(v42, v43, v44);
          break;
        case 6u:
          uint64_t v46 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v46))
          {
            uint64_t v47 = sub_253462A5C(&qword_26B249528);
            memcpy(a1, a2, *(void *)(*(void *)(v47 - 8) + 64));
          }
          else
          {
            *(_DWORD *)a1 = *(_DWORD *)a2;
            uint64_t v52 = a2[2];
            a1[1] = a2[1];
            a1[2] = v52;
            uint64_t v53 = *(int *)(v46 + 24);
            uint64_t v70 = (char *)a1 + v53;
            uint64_t v54 = (char *)a2 + v53;
            uint64_t v55 = sub_253B07160();
            uint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
            swift_bridgeObjectRetain();
            v56(v70, v54, v55);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v46);
          }
          uint64_t v57 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
          uint64_t v58 = *(int *)(v57 + 20);
          uint64_t v59 = (char *)a1 + v58;
          uint64_t v60 = (char *)a2 + v58;
          *(void *)uint64_t v59 = *(void *)v60;
          v59[8] = v60[8];
          uint64_t v61 = *(int *)(v57 + 24);
          uint64_t v62 = (char *)a1 + v61;
          uint64_t v63 = (char *)a2 + v61;
          uint64_t v64 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
          break;
        case 7u:
          *a1 = *a2;
          *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
          uint64_t v48 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0)
                       + 20);
          uint64_t v49 = (char *)a1 + v48;
          long long v50 = (char *)a2 + v48;
          uint64_t v51 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
          break;
        default:
          uint64_t v10 = a2[1];
          *a1 = *a2;
          a1[1] = v10;
          *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
          uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
          uint64_t v12 = (char *)a1 + v11;
          int v13 = (char *)a2 + v11;
          uint64_t v14 = sub_253B07160();
          uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
          swift_bridgeObjectRetain();
          v15(v12, v13, v14);
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v65 = *(int *)(a3 + 20);
    uint64_t v66 = (char *)a1 + v65;
    uint64_t v67 = (char *)a2 + v65;
    uint64_t v68 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoRequestPrescribedPlan(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        uint64_t v5 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
        goto LABEL_15;
      case 1u:
        swift_bridgeObjectRelease();
        uint64_t v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0);
        goto LABEL_14;
      case 2u:
        swift_bridgeObjectRelease();
        uint64_t v7 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
        goto LABEL_12;
      case 3u:
        swift_bridgeObjectRelease();
        uint64_t v7 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
        goto LABEL_12;
      case 4u:
        swift_bridgeObjectRelease();
        uint64_t v7 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
        goto LABEL_12;
      case 5u:
        swift_bridgeObjectRelease();
        uint64_t v7 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
        goto LABEL_12;
      case 6u:
        uint64_t v8 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v8))
        {
          swift_bridgeObjectRelease();
          uint64_t v9 = a1 + *(int *)(v8 + 24);
          uint64_t v10 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
        }
        uint64_t v7 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
LABEL_12:
        uint64_t v5 = *(int *)(v7 + 24);
        goto LABEL_15;
      case 7u:
        uint64_t v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0);
LABEL_14:
        uint64_t v5 = *(int *)(v6 + 20);
LABEL_15:
        uint64_t v11 = a1 + v5;
        uint64_t v12 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
        break;
      default:
        break;
    }
  }
  uint64_t v13 = a1 + *(int *)(a2 + 20);
  uint64_t v14 = sub_253B07160();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
  return v15(v13, v14);
}

void *initializeWithCopy for TranscriptProtoRequestPrescribedPlan(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE1B50);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v14 = a2[1];
        *a1 = *a2;
        a1[1] = v14;
        uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0)
                     + 20);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_253B07160();
        uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        break;
      case 2u:
        uint64_t v20 = a2[1];
        *a1 = *a2;
        a1[1] = v20;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0) + 24);
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        uint64_t v24 = sub_253B07160();
        uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v25(v22, v23, v24);
        break;
      case 3u:
        uint64_t v26 = a2[1];
        *a1 = *a2;
        a1[1] = v26;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v27 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0) + 24);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = sub_253B07160();
        uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
        swift_bridgeObjectRetain();
        v31(v28, v29, v30);
        break;
      case 4u:
        uint64_t v32 = a2[1];
        *a1 = *a2;
        a1[1] = v32;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0) + 24);
        uint64_t v34 = (char *)a1 + v33;
        uint64_t v35 = (char *)a2 + v33;
        uint64_t v36 = sub_253B07160();
        uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
        swift_bridgeObjectRetain();
        v37(v34, v35, v36);
        break;
      case 5u:
        uint64_t v38 = a2[1];
        *a1 = *a2;
        a1[1] = v38;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v39 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0) + 24);
        uint64_t v40 = (char *)a1 + v39;
        uint64_t v41 = (char *)a2 + v39;
        uint64_t v42 = sub_253B07160();
        uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
        swift_bridgeObjectRetain();
        v43(v40, v41, v42);
        break;
      case 6u:
        uint64_t v44 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v44))
        {
          uint64_t v45 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v45 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          uint64_t v50 = a2[2];
          a1[1] = a2[1];
          a1[2] = v50;
          uint64_t v51 = *(int *)(v44 + 24);
          uint64_t v68 = (char *)a1 + v51;
          uint64_t v52 = (char *)a2 + v51;
          uint64_t v53 = sub_253B07160();
          uint64_t v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16);
          swift_bridgeObjectRetain();
          v54(v68, v52, v53);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v44);
        }
        uint64_t v55 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
        uint64_t v56 = *(int *)(v55 + 20);
        uint64_t v57 = (char *)a1 + v56;
        uint64_t v58 = (char *)a2 + v56;
        *(void *)uint64_t v57 = *(void *)v58;
        v57[8] = v58[8];
        uint64_t v59 = *(int *)(v55 + 24);
        uint64_t v60 = (char *)a1 + v59;
        uint64_t v61 = (char *)a2 + v59;
        uint64_t v62 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
        break;
      case 7u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        uint64_t v46 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0)
                     + 20);
        uint64_t v47 = (char *)a1 + v46;
        uint64_t v48 = (char *)a2 + v46;
        uint64_t v49 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
        break;
      default:
        uint64_t v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
        uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_253B07160();
        uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v13(v10, v11, v12);
        break;
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v63 = *(int *)(a3 + 20);
  uint64_t v64 = (char *)a1 + v63;
  uint64_t v65 = (char *)a2 + v63;
  uint64_t v66 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v64, v65, v66);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoRequestPrescribedPlan(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0)
                       + 20);
          uint64_t v21 = a1 + v20;
          uint64_t v22 = a2 + v20;
          uint64_t v23 = sub_253B07160();
          uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
          swift_bridgeObjectRetain();
          v24(v21, v22, v23);
          break;
        case 2u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          uint64_t v25 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0) + 24);
          uint64_t v26 = a1 + v25;
          uint64_t v27 = a2 + v25;
          uint64_t v28 = sub_253B07160();
          uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16);
          swift_bridgeObjectRetain();
          v29(v26, v27, v28);
          break;
        case 3u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          uint64_t v30 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0) + 24);
          uint64_t v31 = a1 + v30;
          uint64_t v32 = a2 + v30;
          uint64_t v33 = sub_253B07160();
          uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16);
          swift_bridgeObjectRetain();
          v34(v31, v32, v33);
          break;
        case 4u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0) + 24);
          uint64_t v36 = a1 + v35;
          uint64_t v37 = a2 + v35;
          uint64_t v38 = sub_253B07160();
          uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16);
          swift_bridgeObjectRetain();
          v39(v36, v37, v38);
          break;
        case 5u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          uint64_t v40 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0) + 24);
          uint64_t v41 = a1 + v40;
          uint64_t v42 = a2 + v40;
          uint64_t v43 = sub_253B07160();
          uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16);
          swift_bridgeObjectRetain();
          v44(v41, v42, v43);
          break;
        case 6u:
          uint64_t v45 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v45))
          {
            uint64_t v46 = sub_253462A5C(&qword_26B249528);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v46 - 8) + 64));
          }
          else
          {
            *(_DWORD *)a1 = *(_DWORD *)a2;
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            uint64_t v84 = *(int *)(v45 + 24);
            uint64_t v115 = a1 + v84;
            uint64_t v85 = a2 + v84;
            uint64_t v86 = sub_253B07160();
            uint64_t v87 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 16);
            swift_bridgeObjectRetain();
            v87(v115, v85, v86);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v45);
          }
          uint64_t v88 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
          uint64_t v89 = *(int *)(v88 + 20);
          uint64_t v90 = a1 + v89;
          uint64_t v91 = a2 + v89;
          char v92 = *(unsigned char *)(v91 + 8);
          *(void *)uint64_t v90 = *(void *)v91;
          *(unsigned char *)(v90 + 8) = v92;
          uint64_t v93 = *(int *)(v88 + 24);
          uint64_t v94 = a1 + v93;
          uint64_t v95 = a2 + v93;
          uint64_t v96 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 16))(v94, v95, v96);
          break;
        case 7u:
          uint64_t v47 = *(void *)a2;
          *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
          *(void *)a1 = v47;
          uint64_t v48 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0)
                       + 20);
          uint64_t v49 = a1 + v48;
          uint64_t v50 = a2 + v48;
          uint64_t v51 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
          break;
        default:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
          uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
          uint64_t v10 = a1 + v9;
          uint64_t v11 = a2 + v9;
          uint64_t v12 = sub_253B07160();
          uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
          swift_bridgeObjectRetain();
          v13(v10, v11, v12);
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v6);
      goto LABEL_33;
    }
LABEL_7:
    uint64_t v14 = sub_253462A5C(&qword_269CE1B50);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_33;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v52 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0)
                     + 20);
        uint64_t v53 = a1 + v52;
        uint64_t v54 = a2 + v52;
        uint64_t v55 = sub_253B07160();
        uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 16);
        swift_bridgeObjectRetain();
        v56(v53, v54, v55);
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v57 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0) + 24);
        uint64_t v58 = a1 + v57;
        uint64_t v59 = a2 + v57;
        uint64_t v60 = sub_253B07160();
        uint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 16);
        swift_bridgeObjectRetain();
        v61(v58, v59, v60);
        break;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v62 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0) + 24);
        uint64_t v63 = a1 + v62;
        uint64_t v64 = a2 + v62;
        uint64_t v65 = sub_253B07160();
        uint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 16);
        swift_bridgeObjectRetain();
        v66(v63, v64, v65);
        break;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v67 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0) + 24);
        uint64_t v68 = a1 + v67;
        uint64_t v69 = a2 + v67;
        uint64_t v70 = sub_253B07160();
        uint64_t v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 16);
        swift_bridgeObjectRetain();
        v71(v68, v69, v70);
        break;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v72 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0) + 24);
        uint64_t v73 = a1 + v72;
        uint64_t v74 = a2 + v72;
        uint64_t v75 = sub_253B07160();
        uint64_t v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 16);
        swift_bridgeObjectRetain();
        v76(v73, v74, v75);
        break;
      case 6u:
        uint64_t v77 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v77))
        {
          uint64_t v78 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v78 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          uint64_t v97 = *(int *)(v77 + 24);
          uint64_t v116 = a1 + v97;
          uint64_t v98 = a2 + v97;
          uint64_t v99 = sub_253B07160();
          uint64_t v100 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 16);
          swift_bridgeObjectRetain();
          v100(v116, v98, v99);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v77);
        }
        uint64_t v101 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
        uint64_t v102 = *(int *)(v101 + 20);
        uint64_t v103 = a1 + v102;
        uint64_t v104 = a2 + v102;
        char v105 = *(unsigned char *)(v104 + 8);
        *(void *)uint64_t v103 = *(void *)v104;
        *(unsigned char *)(v103 + 8) = v105;
        uint64_t v106 = *(int *)(v101 + 24);
        uint64_t v107 = a1 + v106;
        uint64_t v108 = a2 + v106;
        uint64_t v109 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 16))(v107, v108, v109);
        break;
      case 7u:
        uint64_t v79 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        *(void *)a1 = v79;
        uint64_t v80 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0)
                     + 20);
        uint64_t v81 = a1 + v80;
        uint64_t v82 = a2 + v80;
        uint64_t v83 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
        uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
        uint64_t v16 = a1 + v15;
        uint64_t v17 = a2 + v15;
        uint64_t v18 = sub_253B07160();
        uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_33:
  uint64_t v110 = *(int *)(a3 + 20);
  uint64_t v111 = a1 + v110;
  uint64_t v112 = a2 + v110;
  uint64_t v113 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 24))(v111, v112, v113);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoRequestPrescribedPlan(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE1B50);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v9 = type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0);
        goto LABEL_13;
      case 2u:
        *a1 = *a2;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v10 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
        goto LABEL_16;
      case 3u:
        *a1 = *a2;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v10 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
        goto LABEL_16;
      case 4u:
        *a1 = *a2;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v10 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
        goto LABEL_16;
      case 5u:
        *a1 = *a2;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v10 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
        goto LABEL_16;
      case 6u:
        uint64_t v11 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v11))
        {
          uint64_t v12 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
          uint64_t v13 = *(int *)(v11 + 24);
          uint64_t v14 = (char *)a1 + v13;
          uint64_t v15 = (char *)a2 + v13;
          uint64_t v16 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v11);
        }
        uint64_t v10 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
        uint64_t v17 = *(int *)(v10 + 20);
        uint64_t v18 = (char *)a1 + v17;
        uint64_t v19 = (char *)a2 + v17;
        *(void *)uint64_t v18 = *(void *)v19;
        v18[8] = v19[8];
LABEL_16:
        uint64_t v8 = *(int *)(v10 + 24);
        break;
      case 7u:
        *(void *)a1 = *(void *)a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        uint64_t v9 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0);
LABEL_13:
        uint64_t v8 = *(int *)(v9 + 20);
        break;
      default:
        *a1 = *a2;
        *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
        uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
        break;
    }
    uint64_t v20 = (char *)a1 + v8;
    uint64_t v21 = (char *)a2 + v8;
    uint64_t v22 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoRequestPrescribedPlan(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v15 = type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0);
          goto LABEL_19;
        case 2u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          uint64_t v16 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
          goto LABEL_30;
        case 3u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          uint64_t v16 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
          goto LABEL_30;
        case 4u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          uint64_t v16 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
          goto LABEL_30;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          uint64_t v16 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
          goto LABEL_30;
        case 6u:
          uint64_t v17 = type metadata accessor for TranscriptProtoStatementID(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v17))
          {
            uint64_t v18 = sub_253462A5C(&qword_26B249528);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v18 - 8) + 64));
          }
          else
          {
            *(_DWORD *)a1 = *(_DWORD *)a2;
            *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
            uint64_t v45 = *(int *)(v17 + 24);
            uint64_t v46 = a1 + v45;
            uint64_t v47 = a2 + v45;
            uint64_t v48 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v17);
          }
          uint64_t v16 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
          uint64_t v49 = *(int *)(v16 + 20);
          uint64_t v50 = a1 + v49;
          uint64_t v51 = a2 + v49;
          *(void *)uint64_t v50 = *(void *)v51;
          *(unsigned char *)(v50 + 8) = *(unsigned char *)(v51 + 8);
LABEL_30:
          uint64_t v9 = *(int *)(v16 + 24);
          break;
        case 7u:
          *(void *)a1 = *(void *)a2;
          *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
          uint64_t v15 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0);
LABEL_19:
          uint64_t v9 = *(int *)(v15 + 20);
          break;
        default:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
          uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
          break;
      }
      uint64_t v52 = a1 + v9;
      uint64_t v53 = a2 + v9;
      uint64_t v54 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v6);
      goto LABEL_35;
    }
LABEL_7:
    uint64_t v10 = sub_253462A5C(&qword_269CE1B50);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_35;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0)
                     + 20);
        uint64_t v20 = a1 + v19;
        uint64_t v21 = a2 + v19;
        uint64_t v22 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
        break;
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0) + 24);
        uint64_t v24 = a1 + v23;
        uint64_t v25 = a2 + v23;
        uint64_t v26 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
        break;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v27 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0) + 24);
        uint64_t v28 = a1 + v27;
        uint64_t v29 = a2 + v27;
        uint64_t v30 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
        break;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v31 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0) + 24);
        uint64_t v32 = a1 + v31;
        uint64_t v33 = a2 + v31;
        uint64_t v34 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
        break;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0) + 24);
        uint64_t v36 = a1 + v35;
        uint64_t v37 = a2 + v35;
        uint64_t v38 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
        break;
      case 6u:
        uint64_t v39 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v39))
        {
          uint64_t v40 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          uint64_t v55 = *(int *)(v39 + 24);
          uint64_t v56 = a1 + v55;
          uint64_t v57 = a2 + v55;
          uint64_t v58 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v39);
        }
        uint64_t v59 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
        uint64_t v60 = *(int *)(v59 + 20);
        uint64_t v61 = a1 + v60;
        uint64_t v62 = a2 + v60;
        *(void *)uint64_t v61 = *(void *)v62;
        *(unsigned char *)(v61 + 8) = *(unsigned char *)(v62 + 8);
        uint64_t v63 = *(int *)(v59 + 24);
        uint64_t v64 = a1 + v63;
        uint64_t v65 = a2 + v63;
        uint64_t v66 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
        break;
      case 7u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0)
                     + 20);
        uint64_t v42 = a1 + v41;
        uint64_t v43 = a2 + v41;
        uint64_t v44 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
        break;
      default:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
        uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
        uint64_t v12 = a1 + v11;
        uint64_t v13 = a2 + v11;
        uint64_t v14 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_35:
  uint64_t v67 = *(int *)(a3 + 20);
  uint64_t v68 = a1 + v67;
  uint64_t v69 = a2 + v67;
  uint64_t v70 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 40))(v68, v69, v70);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlan(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538063AC);
}

uint64_t sub_2538063AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE1B50);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlan(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538063CC);
}

uint64_t sub_2538063CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE1B50);
}

void sub_2538063D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoRequestPrescribedPlanEnum(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v13 = a2[1];
        *a1 = *a2;
        a1[1] = v13;
        uint64_t v14 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0)
                     + 20);
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_253B07160();
        uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
        swift_bridgeObjectRetain();
        v18(v15, v16, v17);
        break;
      case 2u:
        uint64_t v19 = a2[1];
        *a1 = *a2;
        a1[1] = v19;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0) + 24);
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        uint64_t v23 = sub_253B07160();
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        v24(v21, v22, v23);
        break;
      case 3u:
        uint64_t v25 = a2[1];
        *a1 = *a2;
        a1[1] = v25;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v26 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0) + 24);
        uint64_t v27 = (char *)a1 + v26;
        uint64_t v28 = (char *)a2 + v26;
        uint64_t v29 = sub_253B07160();
        uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
        swift_bridgeObjectRetain();
        v30(v27, v28, v29);
        break;
      case 4u:
        uint64_t v31 = a2[1];
        *a1 = *a2;
        a1[1] = v31;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v32 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0) + 24);
        uint64_t v33 = (char *)a1 + v32;
        uint64_t v34 = (char *)a2 + v32;
        uint64_t v35 = sub_253B07160();
        uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
        swift_bridgeObjectRetain();
        v36(v33, v34, v35);
        break;
      case 5u:
        uint64_t v37 = a2[1];
        *a1 = *a2;
        a1[1] = v37;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v38 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0) + 24);
        uint64_t v39 = (char *)a1 + v38;
        uint64_t v40 = (char *)a2 + v38;
        uint64_t v41 = sub_253B07160();
        uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
        swift_bridgeObjectRetain();
        v42(v39, v40, v41);
        break;
      case 6u:
        uint64_t v43 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v43))
        {
          uint64_t v44 = sub_253462A5C(&qword_26B249528);
          memcpy(a1, a2, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          uint64_t v49 = a2[2];
          a1[1] = a2[1];
          a1[2] = v49;
          uint64_t v50 = *(int *)(v43 + 24);
          uint64_t v51 = (char *)a1 + v50;
          uint64_t v52 = (char *)a2 + v50;
          uint64_t v53 = sub_253B07160();
          uint64_t v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16);
          swift_bridgeObjectRetain();
          v54(v51, v52, v53);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v43);
        }
        uint64_t v55 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
        uint64_t v56 = *(int *)(v55 + 20);
        uint64_t v57 = (char *)a1 + v56;
        uint64_t v58 = (char *)a2 + v56;
        *(void *)uint64_t v57 = *(void *)v58;
        v57[8] = v58[8];
        uint64_t v59 = *(int *)(v55 + 24);
        uint64_t v60 = (char *)a1 + v59;
        uint64_t v61 = (char *)a2 + v59;
        uint64_t v62 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
        break;
      case 7u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        uint64_t v45 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0)
                     + 20);
        uint64_t v46 = (char *)a1 + v45;
        uint64_t v47 = (char *)a2 + v45;
        uint64_t v48 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
        break;
      default:
        uint64_t v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
        uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
        int v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = sub_253B07160();
        uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
        swift_bridgeObjectRetain();
        v11(v8, v9, v10);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TranscriptProtoRequestPrescribedPlanEnum(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      uint64_t v3 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
      goto LABEL_14;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v4 = type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0);
      goto LABEL_13;
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
      goto LABEL_11;
    case 3:
      swift_bridgeObjectRelease();
      uint64_t v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
      goto LABEL_11;
    case 4:
      swift_bridgeObjectRelease();
      uint64_t v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
      goto LABEL_11;
    case 5:
      swift_bridgeObjectRelease();
      uint64_t v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
      goto LABEL_11;
    case 6:
      uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v6))
      {
        swift_bridgeObjectRelease();
        uint64_t v7 = a1 + *(int *)(v6 + 24);
        uint64_t v8 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
      }
      uint64_t v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
LABEL_11:
      uint64_t v3 = *(int *)(v5 + 24);
      goto LABEL_14;
    case 7:
      uint64_t v4 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0);
LABEL_13:
      uint64_t v3 = *(int *)(v4 + 20);
LABEL_14:
      uint64_t v9 = a1 + v3;
      uint64_t v10 = sub_253B07160();
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
      uint64_t result = v11(v9, v10);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for TranscriptProtoRequestPrescribedPlanEnum(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0) + 20);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_253B07160();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      break;
    case 2u:
      uint64_t v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v17 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0) + 24);
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_253B07160();
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v21(v18, v19, v20);
      break;
    case 3u:
      uint64_t v22 = a2[1];
      *a1 = *a2;
      a1[1] = v22;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0) + 24);
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = sub_253B07160();
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      v27(v24, v25, v26);
      break;
    case 4u:
      uint64_t v28 = a2[1];
      *a1 = *a2;
      a1[1] = v28;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0) + 24);
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)a2 + v29;
      uint64_t v32 = sub_253B07160();
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
      swift_bridgeObjectRetain();
      v33(v30, v31, v32);
      break;
    case 5u:
      uint64_t v34 = a2[1];
      *a1 = *a2;
      a1[1] = v34;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0) + 24);
      uint64_t v36 = (char *)a1 + v35;
      uint64_t v37 = (char *)a2 + v35;
      uint64_t v38 = sub_253B07160();
      uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
      swift_bridgeObjectRetain();
      v39(v36, v37, v38);
      break;
    case 6u:
      uint64_t v40 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v40))
      {
        uint64_t v41 = sub_253462A5C(&qword_26B249528);
        memcpy(a1, a2, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v46 = a2[2];
        a1[1] = a2[1];
        a1[2] = v46;
        uint64_t v47 = *(int *)(v40 + 24);
        uint64_t v48 = (char *)a1 + v47;
        uint64_t v49 = (char *)a2 + v47;
        uint64_t v50 = sub_253B07160();
        uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16);
        swift_bridgeObjectRetain();
        v51(v48, v49, v50);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v40);
      }
      uint64_t v52 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
      uint64_t v53 = *(int *)(v52 + 20);
      uint64_t v54 = (char *)a1 + v53;
      uint64_t v55 = (char *)a2 + v53;
      *(void *)uint64_t v54 = *(void *)v55;
      v54[8] = v55[8];
      uint64_t v56 = *(int *)(v52 + 24);
      uint64_t v57 = (char *)a1 + v56;
      uint64_t v58 = (char *)a2 + v56;
      uint64_t v59 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
      break;
    case 7u:
      *a1 = *a2;
      *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
      uint64_t v42 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0)
                   + 20);
      uint64_t v43 = (char *)a1 + v42;
      uint64_t v44 = (char *)a2 + v42;
      uint64_t v45 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
      break;
    default:
      uint64_t v4 = a2[1];
      *a1 = *a2;
      a1[1] = v4;
      *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
      uint64_t v5 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
      uint64_t v6 = (char *)a1 + v5;
      uint64_t v7 = (char *)a2 + v5;
      uint64_t v8 = sub_253B07160();
      uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
      swift_bridgeObjectRetain();
      v9(v6, v7, v8);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoRequestPrescribedPlanEnum(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0) + 20);
        uint64_t v10 = a1 + v9;
        uint64_t v11 = a2 + v9;
        uint64_t v12 = sub_253B07160();
        uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v13(v10, v11, v12);
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v14 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0) + 24);
        uint64_t v15 = a1 + v14;
        uint64_t v16 = a2 + v14;
        uint64_t v17 = sub_253B07160();
        uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
        swift_bridgeObjectRetain();
        v18(v15, v16, v17);
        break;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0) + 24);
        uint64_t v20 = a1 + v19;
        uint64_t v21 = a2 + v19;
        uint64_t v22 = sub_253B07160();
        uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v23(v20, v21, v22);
        break;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v24 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0) + 24);
        uint64_t v25 = a1 + v24;
        uint64_t v26 = a2 + v24;
        uint64_t v27 = sub_253B07160();
        uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v28(v25, v26, v27);
        break;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0) + 24);
        uint64_t v30 = a1 + v29;
        uint64_t v31 = a2 + v29;
        uint64_t v32 = sub_253B07160();
        uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16);
        swift_bridgeObjectRetain();
        v33(v30, v31, v32);
        break;
      case 6u:
        uint64_t v34 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v34))
        {
          uint64_t v35 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          uint64_t v41 = *(int *)(v34 + 24);
          uint64_t v42 = a1 + v41;
          uint64_t v43 = a2 + v41;
          uint64_t v44 = sub_253B07160();
          uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16);
          swift_bridgeObjectRetain();
          v45(v42, v43, v44);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v34);
        }
        uint64_t v46 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
        uint64_t v47 = *(int *)(v46 + 20);
        uint64_t v48 = a1 + v47;
        uint64_t v49 = a2 + v47;
        char v50 = *(unsigned char *)(v49 + 8);
        *(void *)uint64_t v48 = *(void *)v49;
        *(unsigned char *)(v48 + 8) = v50;
        uint64_t v51 = *(int *)(v46 + 24);
        uint64_t v52 = a1 + v51;
        uint64_t v53 = a2 + v51;
        uint64_t v54 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
        break;
      case 7u:
        uint64_t v36 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        *(void *)a1 = v36;
        uint64_t v37 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0)
                     + 20);
        uint64_t v38 = a1 + v37;
        uint64_t v39 = a2 + v37;
        uint64_t v40 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
        uint64_t v4 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
        uint64_t v5 = a1 + v4;
        uint64_t v6 = a2 + v4;
        uint64_t v7 = sub_253B07160();
        uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
        swift_bridgeObjectRetain();
        v8(v5, v6, v7);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoRequestPrescribedPlanEnum(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0);
      goto LABEL_11;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
      goto LABEL_14;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
      goto LABEL_14;
    case 4u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
      goto LABEL_14;
    case 5u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
      goto LABEL_14;
    case 6u:
      uint64_t v7 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v7))
      {
        uint64_t v8 = sub_253462A5C(&qword_26B249528);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        uint64_t v9 = *(int *)(v7 + 24);
        uint64_t v10 = a1 + v9;
        uint64_t v11 = a2 + v9;
        uint64_t v12 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v7);
      }
      uint64_t v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
      uint64_t v13 = *(int *)(v6 + 20);
      uint64_t v14 = a1 + v13;
      uint64_t v15 = a2 + v13;
      *(void *)uint64_t v14 = *(void *)v15;
      *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
LABEL_14:
      uint64_t v4 = *(int *)(v6 + 24);
      break;
    case 7u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      uint64_t v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0);
LABEL_11:
      uint64_t v4 = *(int *)(v5 + 20);
      break;
    default:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
      uint64_t v4 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
      break;
  }
  uint64_t v16 = a1 + v4;
  uint64_t v17 = a2 + v4;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for TranscriptProtoRequestPrescribedPlanEnum(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0);
        goto LABEL_12;
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
        goto LABEL_15;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
        goto LABEL_15;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
        goto LABEL_15;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
        goto LABEL_15;
      case 6u:
        uint64_t v7 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v7))
        {
          uint64_t v8 = sub_253462A5C(&qword_26B249528);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          uint64_t v9 = *(int *)(v7 + 24);
          uint64_t v10 = a1 + v9;
          uint64_t v11 = a2 + v9;
          uint64_t v12 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v7);
        }
        uint64_t v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
        uint64_t v13 = *(int *)(v6 + 20);
        uint64_t v14 = a1 + v13;
        uint64_t v15 = a2 + v13;
        *(void *)uint64_t v14 = *(void *)v15;
        *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
LABEL_15:
        uint64_t v4 = *(int *)(v6 + 24);
        break;
      case 7u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0);
LABEL_12:
        uint64_t v4 = *(int *)(v5 + 20);
        break;
      default:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
        uint64_t v4 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 28);
        break;
    }
    uint64_t v16 = a1 + v4;
    uint64_t v17 = a2 + v4;
    uint64_t v18 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253807B4C()
{
  uint64_t result = type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(319);
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(319);
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(319);
            if (v6 <= 0x3F)
            {
              uint64_t result = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(319);
              if (v7 <= 0x3F)
              {
                uint64_t result = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(319);
                if (v8 <= 0x3F)
                {
                  swift_initEnumMetadataMultiPayload();
                  return 0;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanSearchTool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253807DA4);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanSearchTool(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253807DBC);
}

uint64_t sub_253807DC0()
{
  return sub_253942B08();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253807E04);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253807E1C);
}

uint64_t sub_253807E20()
{
  return sub_25393E9BC();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanTextTool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253807E58);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanTextTool(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253807E70);
}

uint64_t sub_253807E74()
{
  return sub_2535DC13C();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanConvertTool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253807E9C);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanConvertTool(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253807EB4);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanDisplayTool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253807ECC);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanDisplayTool(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253807EE4);
}

void _s30IntelligenceFlowPlannerSupport44TranscriptProtoRequestPrescribedPlanTextToolVwCP_0()
{
  sub_2535B3C98();
  uint64_t v1 = v0;
  sub_2535782A8();
  if ((*(_DWORD *)(v4 + 80) & 0x20000) != 0)
  {
    sub_2539442C0(*v3);
  }
  else
  {
    sub_253945F60(v2, v3);
    *(unsigned char *)(v1 + 16) = *(unsigned char *)(v5 + 16);
    sub_253945ECC();
    sub_25346CAF4();
    unint64_t v7 = *(void (**)(uint64_t))(v6 + 16);
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_2539445B0();
    v7(v8);
  }
  sub_25346CD04();
}

void _s30IntelligenceFlowPlannerSupport44TranscriptProtoRequestPrescribedPlanTextToolVwcp_0()
{
  sub_2535B3C98();
  uint64_t v2 = sub_253945570(v0, v1);
  *((unsigned char *)v2 + 16) = *(unsigned char *)(v3 + 16);
  sub_253945020();
  sub_25346CAF4();
  uint64_t v5 = *(void (**)(uint64_t))(v4 + 16);
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_2539445B0();
  v5(v6);
  sub_25346CD04();
}

uint64_t _s30IntelligenceFlowPlannerSupport44TranscriptProtoRequestPrescribedPlanTextToolVwca_0(void *a1, void *a2)
{
  sub_253944580(a1, a2);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v3 + 16) = *(unsigned char *)(v2 + 16);
  sub_2535E22F0();
  sub_25346CAF4();
  sub_2539444A8();
  v4();
  return v3;
}

uint64_t _s30IntelligenceFlowPlannerSupport44TranscriptProtoRequestPrescribedPlanTextToolVwtk_0(__n128 *a1, __n128 *a2)
{
  sub_253945880(a1, a2);
  sub_253944360();
  sub_25346CAF4();
  sub_2534D8E14();
  v3();
  return v2;
}

uint64_t _s30IntelligenceFlowPlannerSupport44TranscriptProtoRequestPrescribedPlanTextToolVwta_0(void *a1, void *a2)
{
  sub_2539445FC(a1, a2);
  *(unsigned char *)(v3 + 16) = *(unsigned char *)(v2 + 16);
  sub_2535E22F0();
  sub_25346CAF4();
  sub_253944438();
  v4();
  return v3;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanKnowledgeTool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25380811C);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanKnowledgeTool(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253808134);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoRequestPrescribedPlanOpenTool(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_26B249528);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      uint64_t v10 = a2[2];
      a1[1] = a2[1];
      a1[2] = v10;
      uint64_t v11 = *(int *)(v7 + 24);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_253B07160();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v16 = *(int *)(a3 + 20);
    uint64_t v17 = *(int *)(a3 + 24);
    uint64_t v18 = (char *)a1 + v16;
    uint64_t v19 = (char *)a2 + v16;
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = (char *)a1 + v17;
    uint64_t v21 = (char *)a2 + v17;
    uint64_t v22 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoRequestPrescribedPlanOpenTool(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = a1 + *(int *)(v4 + 24);
    uint64_t v6 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_253B07160();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  return v9(v7, v8);
}

void *initializeWithCopy for TranscriptProtoRequestPrescribedPlanOpenTool(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_26B249528);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    uint64_t v9 = *(int *)(v6 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_253B07160();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)a1 + v14;
  uint64_t v17 = (char *)a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  uint64_t v18 = (char *)a1 + v15;
  uint64_t v19 = (char *)a2 + v15;
  uint64_t v20 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

void *assignWithCopy for TranscriptProtoRequestPrescribedPlanOpenTool(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v24 = *(int *)(v6 + 24);
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      uint64_t v27 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 24))(v25, v26, v27);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v14 = sub_253462A5C(&qword_26B249528);
    memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v9 = *(int *)(v6 + 24);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_253B07160();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)v17;
  v16[8] = v17[8];
  *(void *)uint64_t v16 = v18;
  uint64_t v19 = *(int *)(a3 + 24);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

_DWORD *initializeWithTake for TranscriptProtoRequestPrescribedPlanOpenTool(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_26B249528);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
    uint64_t v8 = *(int *)(v6 + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = (char *)a1 + v13;
  uint64_t v17 = (char *)a2 + v13;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoRequestPrescribedPlanOpenTool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementID(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      uint64_t v22 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = v22;
      swift_bridgeObjectRelease();
      uint64_t v23 = *(int *)(v6 + 24);
      uint64_t v24 = a1 + v23;
      uint64_t v25 = a2 + v23;
      uint64_t v26 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v13 = sub_253462A5C(&qword_26B249528);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v9 = *(int *)(v6 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v6);
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v18 = a1 + v15;
  uint64_t v19 = a2 + v15;
  uint64_t v20 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanOpenTool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253808ADC);
}

uint64_t sub_253808ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253902340(a1, a2, a3, &qword_26B249528);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanOpenTool(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253808AFC);
}

uint64_t sub_253808AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2539023CC(a1, a2, a3, a4, &qword_26B249528);
}

void sub_253808B08()
{
  sub_253760A08(319, &qword_26B249530, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
  if (v0 <= 0x3F)
  {
    sub_253B07160();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253808C20);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253808C38);
}

uint64_t sub_253808C3C()
{
  return sub_25393E9BC();
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoAction(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(void *)(a1 + 24) = a2[3];
    uint64_t v8 = a3[7];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_26B249528);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
      uint64_t v14 = v10[2];
      v9[1] = v10[1];
      v9[2] = v14;
      uint64_t v15 = *(int *)(v11 + 24);
      uint64_t v16 = (char *)v9 + v15;
      uint64_t v47 = (char *)v10 + v15;
      uint64_t v17 = sub_253B07160();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v16, v47, v17);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v19 = a3[8];
    uint64_t v20 = a3[9];
    uint64_t v21 = (void *)((char *)v4 + v19);
    uint64_t v22 = (uint64_t *)((char *)a2 + v19);
    uint64_t v23 = v22[1];
    void *v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = (void *)((char *)v4 + v20);
    uint64_t v25 = (uint64_t *)((char *)a2 + v20);
    uint64_t v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    uint64_t v27 = a3[10];
    uint64_t v28 = a3[11];
    uint64_t v29 = (void *)((char *)v4 + v27);
    uint64_t v30 = (uint64_t *)((char *)a2 + v27);
    uint64_t v31 = v30[1];
    void *v29 = *v30;
    v29[1] = v31;
    uint64_t v32 = (void *)((char *)v4 + v28);
    uint64_t v33 = (uint64_t *)((char *)a2 + v28);
    uint64_t v34 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v33, 1, v34))
    {
      uint64_t v35 = sub_253462A5C(&qword_269CE0448);
      memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      uint64_t v36 = v33[1];
      void *v32 = *v33;
      v32[1] = v36;
      uint64_t v37 = v33[3];
      v32[2] = v33[2];
      v32[3] = v37;
      uint64_t v38 = *(int *)(v34 + 24);
      uint64_t v46 = (char *)v33 + v38;
      uint64_t v48 = (char *)v32 + v38;
      uint64_t v39 = sub_253B07160();
      uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v40(v48, v46, v39);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v32, 0, 1, v34);
    }
    uint64_t v41 = a3[12];
    uint64_t v42 = (char *)v4 + v41;
    uint64_t v43 = (uint64_t)a2 + v41;
    uint64_t v44 = sub_253B07160();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoAction(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[11];
  uint64_t v9 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v8 + *(int *)(v9 + 24);
    uint64_t v11 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  uint64_t v12 = a1 + a2[12];
  uint64_t v13 = sub_253B07160();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
  return v14(v12, v13);
}

uint64_t initializeWithCopy for TranscriptProtoAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoStatementID(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_26B249528);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
    uint64_t v12 = v9[2];
    v8[1] = v9[1];
    v8[2] = v12;
    uint64_t v13 = *(int *)(v10 + 24);
    uint64_t v14 = (char *)v8 + v13;
    uint64_t v45 = (char *)v9 + v13;
    uint64_t v15 = sub_253B07160();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v14, v45, v15);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = (void *)(a1 + v17);
  uint64_t v20 = (void *)(a2 + v17);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = (void *)(a1 + v18);
  uint64_t v23 = (void *)(a2 + v18);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = a3[10];
  uint64_t v26 = a3[11];
  uint64_t v27 = (void *)(a1 + v25);
  uint64_t v28 = (void *)(a2 + v25);
  uint64_t v29 = v28[1];
  void *v27 = *v28;
  v27[1] = v29;
  uint64_t v30 = (void *)(a1 + v26);
  uint64_t v31 = (void *)(a2 + v26);
  uint64_t v32 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v31, 1, v32))
  {
    uint64_t v33 = sub_253462A5C(&qword_269CE0448);
    memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    uint64_t v34 = v31[1];
    *uint64_t v30 = *v31;
    v30[1] = v34;
    uint64_t v35 = v31[3];
    v30[2] = v31[2];
    v30[3] = v35;
    uint64_t v36 = *(int *)(v32 + 24);
    uint64_t v44 = (char *)v31 + v36;
    uint64_t v46 = (char *)v30 + v36;
    uint64_t v37 = sub_253B07160();
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v38(v46, v44, v37);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v30, 0, 1, v32);
  }
  uint64_t v39 = a3[12];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoAction(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      uint64_t v12 = *(int *)(v9 + 24);
      uint64_t v13 = (char *)v7 + v12;
      char v50 = (char *)v8 + v12;
      uint64_t v14 = sub_253B07160();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v13, v50, v14);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = *(int *)(v9 + 24);
  uint64_t v42 = (char *)v7 + v41;
  uint64_t v43 = (char *)v8 + v41;
  uint64_t v44 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 24))(v42, v43, v44);
LABEL_7:
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  void *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  void *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[10];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[11];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  uint64_t v29 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  int v30 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v29);
  int v31 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v29);
  if (!v30)
  {
    if (!v31)
    {
      void *v27 = *v28;
      v27[1] = v28[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v27[2] = v28[2];
      v27[3] = v28[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v45 = *(int *)(v29 + 24);
      uint64_t v46 = (char *)v27 + v45;
      uint64_t v47 = (char *)v28 + v45;
      uint64_t v48 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 24))(v46, v47, v48);
      goto LABEL_13;
    }
    sub_2536FA73C();
    goto LABEL_12;
  }
  if (v31)
  {
LABEL_12:
    uint64_t v35 = sub_253462A5C(&qword_269CE0448);
    memcpy(v27, v28, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  void *v27 = *v28;
  v27[1] = v28[1];
  v27[2] = v28[2];
  v27[3] = v28[3];
  uint64_t v32 = *(int *)(v29 + 24);
  uint64_t v49 = (char *)v28 + v32;
  uint64_t v51 = (char *)v27 + v32;
  uint64_t v33 = sub_253B07160();
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34(v51, v49, v33);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v27, 0, 1, v29);
LABEL_13:
  uint64_t v36 = a3[12];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 24))(v37, v38, v39);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoAction(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = a3[7];
  uint64_t v7 = (_DWORD *)(a1 + v6);
  uint64_t v8 = (_DWORD *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *uint64_t v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    uint64_t v11 = *(int *)(v9 + 24);
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    uint64_t v14 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v15 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  uint64_t v16 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  uint64_t v17 = (_OWORD *)(a1 + v16);
  uint64_t v18 = (_OWORD *)(a2 + v16);
  uint64_t v19 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
  {
    uint64_t v20 = sub_253462A5C(&qword_269CE0448);
    memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    long long v21 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v21;
    uint64_t v22 = *(int *)(v19 + 24);
    uint64_t v23 = (char *)v17 + v22;
    uint64_t v24 = (char *)v18 + v22;
    uint64_t v25 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
  }
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoStatementID(0);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
      *(_OWORD *)(v8 + 1) = *(_OWORD *)(v9 + 1);
      uint64_t v13 = *(int *)(v10 + 24);
      uint64_t v14 = (char *)v8 + v13;
      uint64_t v15 = (char *)v9 + v13;
      uint64_t v16 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v17 = sub_253462A5C(&qword_26B249528);
    memcpy(v8, v9, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  uint64_t v50 = v9[2];
  v8[1] = v9[1];
  v8[2] = v50;
  swift_bridgeObjectRelease();
  uint64_t v51 = *(int *)(v10 + 24);
  uint64_t v52 = (char *)v8 + v51;
  uint64_t v53 = (char *)v9 + v51;
  uint64_t v54 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 40))(v52, v53, v54);
LABEL_7:
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[9];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *uint64_t v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[10];
  uint64_t v29 = (void *)(a1 + v28);
  int v30 = (uint64_t *)(a2 + v28);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  void *v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[11];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  uint64_t v36 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  int v37 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v34, 1, v36);
  int v38 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v35, 1, v36);
  if (!v37)
  {
    if (!v38)
    {
      uint64_t v55 = v35[1];
      *uint64_t v34 = *v35;
      v34[1] = v55;
      swift_bridgeObjectRelease();
      uint64_t v56 = v35[3];
      v34[2] = v35[2];
      v34[3] = v56;
      swift_bridgeObjectRelease();
      uint64_t v57 = *(int *)(v36 + 24);
      uint64_t v58 = (char *)v34 + v57;
      uint64_t v59 = (char *)v35 + v57;
      uint64_t v60 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 40))(v58, v59, v60);
      goto LABEL_13;
    }
    sub_2536FA73C();
    goto LABEL_12;
  }
  if (v38)
  {
LABEL_12:
    uint64_t v44 = sub_253462A5C(&qword_269CE0448);
    memcpy(v34, v35, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_13;
  }
  long long v39 = *((_OWORD *)v35 + 1);
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *((_OWORD *)v34 + 1) = v39;
  uint64_t v40 = *(int *)(v36 + 24);
  uint64_t v41 = (char *)v34 + v40;
  uint64_t v42 = (char *)v35 + v40;
  uint64_t v43 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v34, 0, 1, v36);
LABEL_13:
  uint64_t v45 = a3[12];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  uint64_t v48 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 40))(v46, v47, v48);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253809E88);
}

uint64_t sub_253809E88()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*(void *)(v1 + 8));
  }
  sub_2535E2460();
  sub_253462A5C(&qword_26B249528);
  sub_2535782A8();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    sub_2535E256C();
  }
  else
  {
    sub_253462A5C(&qword_269CE0448);
    sub_2535782A8();
    if (*(_DWORD *)(v6 + 84) == v0)
    {
      sub_25394532C();
    }
    else
    {
      sub_253B07160();
      sub_2539462E4();
    }
  }
  uint64_t v7 = sub_2535E22C8(v5);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, v8, v9);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253809F54);
}

void sub_253809F54()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E24BC();
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_26B249528);
    sub_2535782A8();
    if (*(_DWORD *)(v2 + 84) == v0)
    {
      sub_2535E26E4();
    }
    else
    {
      sub_253462A5C(&qword_269CE0448);
      sub_2535782A8();
      if (*(_DWORD *)(v4 + 84) == v0)
      {
        sub_2539453D4();
      }
      else
      {
        sub_253B07160();
        sub_253946304();
      }
    }
    uint64_t v5 = sub_2535E2234(v3);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v5, v6, v7, v8);
  }
}

void sub_25380A008()
{
  sub_253760A08(319, &qword_26B249530, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
  if (v0 <= 0x3F)
  {
    sub_253760A08(319, &qword_26B249A78, (void (*)(uint64_t))type metadata accessor for TranscriptProtoGlobalToolIdentifier);
    if (v1 <= 0x3F)
    {
      sub_253B07160();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoActionParameterValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoToolParameterValue(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE1BE0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v10))
      {
        uint64_t v11 = sub_253462A5C(&qword_269CE2490);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v12 = sub_253B08E50();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        }
        else
        {
          uint64_t v13 = a2[1];
          *a1 = *a2;
          a1[1] = v13;
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v10);
      }
      uint64_t v14 = *(int *)(v7 + 20);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v18 = *(int *)(a3 + 20);
    uint64_t v19 = (_WORD *)((char *)a1 + v18);
    uint64_t v20 = (_WORD *)((char *)a2 + v18);
    uint64_t v21 = type metadata accessor for TranscriptProtoPromptSelection(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21))
    {
      uint64_t v22 = sub_253462A5C(&qword_269CE1BD0);
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v19 = *(void *)v20;
      v19[4] = v20[4];
      uint64_t v23 = *(int *)(v21 + 20);
      uint64_t v24 = (char *)v19 + v23;
      uint64_t v25 = (char *)v20 + v23;
      uint64_t v26 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v21);
    }
    uint64_t v27 = *(int *)(a3 + 24);
    uint64_t v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    uint64_t v30 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoActionParameterValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoToolParameterValue(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    uint64_t v5 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v5))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v6 = sub_253B08E50();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v7 = a1 + *(int *)(v4 + 20);
    uint64_t v8 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v9 = a1 + *(int *)(a2 + 20);
  uint64_t v10 = type metadata accessor for TranscriptProtoPromptSelection(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, 1, v10))
  {
    uint64_t v11 = v9 + *(int *)(v10 + 20);
    uint64_t v12 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = a1 + *(int *)(a2 + 24);
  uint64_t v14 = sub_253B07160();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
  return v15(v13, v14);
}

void *initializeWithCopy for TranscriptProtoActionParameterValue(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoToolParameterValue(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE1BE0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v8))
    {
      uint64_t v9 = sub_253462A5C(&qword_269CE2490);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v10 = sub_253B08E50();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      }
      else
      {
        uint64_t v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v8);
    }
    uint64_t v12 = *(int *)(v6 + 20);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v16 = *(int *)(a3 + 20);
  uint64_t v17 = (_WORD *)((char *)a1 + v16);
  uint64_t v18 = (_WORD *)((char *)a2 + v16);
  uint64_t v19 = type metadata accessor for TranscriptProtoPromptSelection(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
  {
    uint64_t v20 = sub_253462A5C(&qword_269CE1BD0);
    memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v17 = *(void *)v18;
    v17[4] = v18[4];
    uint64_t v21 = *(int *)(v19 + 20);
    uint64_t v22 = (char *)v17 + v21;
    uint64_t v23 = (char *)v18 + v21;
    uint64_t v24 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
  }
  uint64_t v25 = *(int *)(a3 + 24);
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  return a1;
}

void *assignWithCopy for TranscriptProtoActionParameterValue(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoToolParameterValue(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v12 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
    int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v12);
    int v14 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v15 = sub_253B08E50();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        }
        else
        {
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v12);
        goto LABEL_27;
      }
    }
    else
    {
      if (!v14)
      {
        if (a1 != a2)
        {
          sub_2536FA73C();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v22 = sub_253B08E50();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
          }
          else
          {
            *a1 = *a2;
            a1[1] = a2[1];
            swift_bridgeObjectRetain();
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_27;
      }
      sub_2536FA73C();
    }
    uint64_t v17 = sub_253462A5C(&qword_269CE2490);
    memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
LABEL_27:
    uint64_t v23 = *(int *)(v6 + 20);
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
    goto LABEL_28;
  }
  if (v8)
  {
LABEL_7:
    uint64_t v11 = sub_253462A5C(&qword_269CE1BE0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_28;
  }
  uint64_t v9 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE2490);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_253B08E50();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v9);
  }
  uint64_t v18 = *(int *)(v6 + 20);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_28:
  uint64_t v27 = *(int *)(a3 + 20);
  uint64_t v28 = (_WORD *)((char *)a1 + v27);
  uint64_t v29 = (_WORD *)((char *)a2 + v27);
  uint64_t v30 = type metadata accessor for TranscriptProtoPromptSelection(0);
  int v31 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v30);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v30);
  if (!v31)
  {
    if (!v32)
    {
      uint64_t v44 = *(void *)v29;
      v28[4] = v29[4];
      *(void *)uint64_t v28 = v44;
      uint64_t v45 = *(int *)(v30 + 20);
      uint64_t v46 = (char *)v28 + v45;
      uint64_t v47 = (char *)v29 + v45;
      uint64_t v48 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 24))(v46, v47, v48);
      goto LABEL_34;
    }
    sub_2536FA73C();
    goto LABEL_33;
  }
  if (v32)
  {
LABEL_33:
    uint64_t v38 = sub_253462A5C(&qword_269CE1BD0);
    memcpy(v28, v29, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_34;
  }
  uint64_t v33 = *(void *)v29;
  v28[4] = v29[4];
  *(void *)uint64_t v28 = v33;
  uint64_t v34 = *(int *)(v30 + 20);
  uint64_t v35 = (char *)v28 + v34;
  uint64_t v36 = (char *)v29 + v34;
  uint64_t v37 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v28, 0, 1, v30);
LABEL_34:
  uint64_t v39 = *(int *)(a3 + 24);
  uint64_t v40 = (char *)a1 + v39;
  uint64_t v41 = (char *)a2 + v39;
  uint64_t v42 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

char *initializeWithTake for TranscriptProtoActionParameterValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoToolParameterValue(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE1BE0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v8))
    {
      uint64_t v9 = sub_253462A5C(&qword_269CE2490);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v10 = sub_253B08E50();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v8);
    }
    uint64_t v11 = *(int *)(v6 + 20);
    uint64_t v12 = &a1[v11];
    int v13 = &a2[v11];
    uint64_t v14 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = type metadata accessor for TranscriptProtoPromptSelection(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18))
  {
    uint64_t v19 = sub_253462A5C(&qword_269CE1BD0);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v16 = *(void *)v17;
    *((_WORD *)v16 + 4) = *((_WORD *)v17 + 4);
    uint64_t v20 = *(int *)(v18 + 20);
    uint64_t v21 = &v16[v20];
    uint64_t v22 = &v17[v20];
    uint64_t v23 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v18);
  }
  uint64_t v24 = *(int *)(a3 + 24);
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  return a1;
}

char *assignWithTake for TranscriptProtoActionParameterValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoToolParameterValue(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v12 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
    int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v12);
    int v14 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v15 = sub_253B08E50();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v12);
        goto LABEL_26;
      }
    }
    else
    {
      if (!v14)
      {
        if (a1 == a2) {
          goto LABEL_26;
        }
        sub_2536FA73C();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v22 = sub_253B08E50();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(a1, a2, v22);
          swift_storeEnumTagMultiPayload();
          goto LABEL_26;
        }
        size_t v17 = *(void *)(*(void *)(v12 - 8) + 64);
LABEL_17:
        memcpy(a1, a2, v17);
LABEL_26:
        uint64_t v23 = *(int *)(v6 + 20);
        uint64_t v24 = &a1[v23];
        uint64_t v25 = &a2[v23];
        uint64_t v26 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
        goto LABEL_27;
      }
      sub_2536FA73C();
    }
    size_t v17 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE2490) - 8) + 64);
    goto LABEL_17;
  }
  if (v8)
  {
LABEL_7:
    uint64_t v11 = sub_253462A5C(&qword_269CE1BE0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_27;
  }
  uint64_t v9 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE2490);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_253B08E50();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v9);
  }
  uint64_t v18 = *(int *)(v6 + 20);
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_27:
  uint64_t v27 = *(int *)(a3 + 20);
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v30 = type metadata accessor for TranscriptProtoPromptSelection(0);
  int v31 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v30);
  int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v30);
  if (!v31)
  {
    if (!v32)
    {
      *(void *)uint64_t v28 = *(void *)v29;
      *((_WORD *)v28 + 4) = *((_WORD *)v29 + 4);
      uint64_t v43 = *(int *)(v30 + 20);
      uint64_t v44 = &v28[v43];
      uint64_t v45 = &v29[v43];
      uint64_t v46 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
      goto LABEL_33;
    }
    sub_2536FA73C();
    goto LABEL_32;
  }
  if (v32)
  {
LABEL_32:
    uint64_t v37 = sub_253462A5C(&qword_269CE1BD0);
    memcpy(v28, v29, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_33;
  }
  *(void *)uint64_t v28 = *(void *)v29;
  *((_WORD *)v28 + 4) = *((_WORD *)v29 + 4);
  uint64_t v33 = *(int *)(v30 + 20);
  uint64_t v34 = &v28[v33];
  uint64_t v35 = &v29[v33];
  uint64_t v36 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v28, 0, 1, v30);
LABEL_33:
  uint64_t v38 = *(int *)(a3 + 24);
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  uint64_t v41 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 40))(v39, v40, v41);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionParameterValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25380B7D0);
}

uint64_t sub_25380B7D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2538A7E84(a1, a2, a3, &qword_269CE1BE0, &qword_269CE1BD0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionParameterValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25380B7F8);
}

uint64_t sub_25380B7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2538A7F3C(a1, a2, a3, a4, &qword_269CE1BE0, &qword_269CE1BD0);
}

void sub_25380B80C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionCancellation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25380B874);
}

uint64_t sub_25380B874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253902340(a1, a2, a3, &qword_26B249528);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionCancellation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25380B894);
}

uint64_t sub_25380B894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2539023CC(a1, a2, a3, a4, &qword_26B249528);
}

void sub_25380B8A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPromptSelection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25380B8E8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPromptSelection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25380B900);
}

uint64_t sub_25380B904()
{
  return sub_25393E9BC();
}

void type metadata accessor for TranscriptProtoPromptSelectionEnum()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoActionConfirmation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    int v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    int v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CE0480);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v13 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v13))
      {
        uint64_t v14 = sub_253462A5C(&qword_269CE0478);
        memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        uint64_t v15 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v15;
        *((unsigned char *)v9 + 16) = *((unsigned char *)v10 + 16);
        uint64_t v16 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
        uint64_t v17 = *(int *)(v16 + 24);
        __dst = (char *)v9 + v17;
        uint64_t v39 = v16;
        uint64_t v18 = (char *)v10 + v17;
        uint64_t v19 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
        {
          uint64_t v20 = sub_253462A5C(&qword_269CE0470);
          memcpy(__dst, v18, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          unsigned char *__dst = *v18;
          uint64_t v21 = *(int *)(v19 + 20);
          uint64_t v37 = &__dst[v21];
          uint64_t v22 = &v18[v21];
          uint64_t v23 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 16))(v37, v22, v23);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v19);
        }
        uint64_t v24 = *(int *)(v39 + 28);
        uint64_t v25 = (char *)v9 + v24;
        uint64_t v26 = (char *)v10 + v24;
        uint64_t v27 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v13);
      }
      uint64_t v28 = *(int *)(v11 + 20);
      uint64_t v29 = (char *)v9 + v28;
      uint64_t v30 = (char *)v10 + v28;
      uint64_t v31 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v32 = *(int *)(a3 + 24);
    uint64_t v33 = (char *)v7 + v32;
    uint64_t v34 = (char *)a2 + v32;
    uint64_t v35 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return v7;
}

uint64_t destroy for TranscriptProtoActionConfirmation(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    uint64_t v6 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v6))
    {
      swift_bridgeObjectRelease();
      uint64_t v7 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
      uint64_t v8 = v4 + *(int *)(v7 + 24);
      uint64_t v9 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v9))
      {
        uint64_t v10 = v8 + *(int *)(v9 + 20);
        uint64_t v11 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      }
      uint64_t v12 = v4 + *(int *)(v7 + 28);
      uint64_t v13 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    }
    uint64_t v14 = v4 + *(int *)(v5 + 20);
    uint64_t v15 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }
  uint64_t v16 = a1 + *(int *)(a2 + 24);
  uint64_t v17 = sub_253B07160();
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8);
  return v18(v16, v17);
}

void *initializeWithCopy for TranscriptProtoActionConfirmation(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE0480);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CE0478);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v13 = v8[1];
      *uint64_t v7 = *v8;
      v7[1] = v13;
      *((unsigned char *)v7 + 16) = *((unsigned char *)v8 + 16);
      uint64_t v14 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
      uint64_t v15 = *(int *)(v14 + 24);
      __dst = (char *)v7 + v15;
      uint64_t v37 = v14;
      uint64_t v16 = (char *)v8 + v15;
      uint64_t v17 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v17))
      {
        uint64_t v18 = sub_253462A5C(&qword_269CE0470);
        memcpy(__dst, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        unsigned char *__dst = *v16;
        uint64_t v19 = *(int *)(v17 + 20);
        uint64_t v35 = &__dst[v19];
        uint64_t v20 = &v16[v19];
        uint64_t v21 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 16))(v35, v20, v21);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v17);
      }
      uint64_t v22 = *(int *)(v37 + 28);
      uint64_t v23 = (char *)v7 + v22;
      uint64_t v24 = (char *)v8 + v22;
      uint64_t v25 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v11);
    }
    uint64_t v26 = *(int *)(v9 + 20);
    uint64_t v27 = (char *)v7 + v26;
    uint64_t v28 = (char *)v8 + v26;
    uint64_t v29 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v30 = *(int *)(a3 + 24);
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  return a1;
}

void *assignWithCopy for TranscriptProtoActionConfirmation(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (uint64_t)a1 + v6;
  uint64_t v8 = (uint64_t)a2 + v6;
  uint64_t v9 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v15 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
    int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v15);
    int v17 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        *(void *)uint64_t v7 = *(void *)v8;
        *(void *)(v7 + 8) = *(void *)(v8 + 8);
        *(unsigned char *)(v7 + 16) = *(unsigned char *)(v8 + 16);
        uint64_t v18 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
        uint64_t v19 = *(int *)(v18 + 24);
        __dst = (unsigned char *)(v7 + v19);
        uint64_t v79 = (int *)v18;
        uint64_t v20 = (unsigned char *)(v8 + v19);
        uint64_t v21 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21))
        {
          uint64_t v22 = sub_253462A5C(&qword_269CE0470);
          memcpy(__dst, v20, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          unsigned char *__dst = *v20;
          uint64_t v50 = *(int *)(v21 + 20);
          uint64_t v76 = &__dst[v50];
          uint64_t v51 = &v20[v50];
          uint64_t v52 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v52 - 8) + 16))(v76, v51, v52);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v21);
        }
        uint64_t v53 = v79[7];
        uint64_t v54 = v7 + v53;
        uint64_t v55 = v8 + v53;
        uint64_t v56 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, 0, 1, v15);
        goto LABEL_29;
      }
      goto LABEL_16;
    }
    if (v17)
    {
      sub_2536FA73C();
LABEL_16:
      uint64_t v28 = sub_253462A5C(&qword_269CE0478);
      memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v28 - 8) + 64));
LABEL_29:
      uint64_t v62 = *(int *)(v9 + 20);
      uint64_t v63 = v7 + v62;
      uint64_t v64 = v8 + v62;
      uint64_t v65 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 24))(v63, v64, v65);
      goto LABEL_30;
    }
    *(void *)uint64_t v7 = *(void *)v8;
    *(void *)(v7 + 8) = *(void *)(v8 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v7 + 16) = *(unsigned char *)(v8 + 16);
    uint64_t v81 = (int *)type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
    uint64_t v40 = v81[6];
    uint64_t v41 = (unsigned char *)(v7 + v40);
    uint64_t v42 = (unsigned char *)(v8 + v40);
    uint64_t v43 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
    int v44 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v41, 1, v43);
    int v45 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v42, 1, v43);
    if (v44)
    {
      if (!v45)
      {
        *uint64_t v41 = *v42;
        uint64_t v46 = *(int *)(v43 + 20);
        uint64_t v47 = &v41[v46];
        uint64_t v48 = &v42[v46];
        uint64_t v49 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v41, 0, 1, v43);
LABEL_28:
        uint64_t v58 = v81[7];
        uint64_t v59 = v7 + v58;
        uint64_t v60 = v8 + v58;
        uint64_t v61 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 24))(v59, v60, v61);
        goto LABEL_29;
      }
    }
    else
    {
      if (!v45)
      {
        *uint64_t v41 = *v42;
        uint64_t v71 = *(int *)(v43 + 20);
        uint64_t v72 = &v41[v71];
        uint64_t v73 = &v42[v71];
        uint64_t v74 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v74 - 8) + 24))(v72, v73, v74);
        goto LABEL_28;
      }
      sub_2536FA73C();
    }
    uint64_t v57 = sub_253462A5C(&qword_269CE0470);
    memcpy(v41, v42, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_28;
  }
  if (v11)
  {
LABEL_7:
    uint64_t v14 = sub_253462A5C(&qword_269CE0480);
    memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_30;
  }
  uint64_t v12 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v12))
  {
    uint64_t v13 = sub_253462A5C(&qword_269CE0478);
    memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v7 = *(void *)v8;
    *(void *)(v7 + 8) = *(void *)(v8 + 8);
    *(unsigned char *)(v7 + 16) = *(unsigned char *)(v8 + 16);
    uint64_t v23 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
    uint64_t v24 = *(int *)(v23 + 24);
    __dsta = (int *)v23;
    uint64_t v80 = (unsigned char *)(v7 + v24);
    uint64_t v25 = (unsigned char *)(v8 + v24);
    uint64_t v26 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v26))
    {
      uint64_t v27 = sub_253462A5C(&qword_269CE0470);
      memcpy(v80, v25, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      unsigned char *v80 = *v25;
      uint64_t v29 = *(int *)(v26 + 20);
      uint64_t v75 = &v80[v29];
      uint64_t v30 = &v25[v29];
      uint64_t v31 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v31 - 8) + 16))(v75, v30, v31);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v80, 0, 1, v26);
    }
    uint64_t v32 = __dsta[7];
    uint64_t v33 = v7 + v32;
    uint64_t v34 = v8 + v32;
    uint64_t v35 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, 0, 1, v12);
  }
  uint64_t v36 = *(int *)(v9 + 20);
  uint64_t v37 = v7 + v36;
  uint64_t v38 = v8 + v36;
  uint64_t v39 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, 0, 1, v9);
LABEL_30:
  uint64_t v66 = *(int *)(a3 + 24);
  uint64_t v67 = (char *)a1 + v66;
  uint64_t v68 = (char *)a2 + v66;
  uint64_t v69 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 24))(v67, v68, v69);
  return a1;
}

void *initializeWithTake for TranscriptProtoActionConfirmation(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE0480);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CE0478);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      v7[16] = v8[16];
      uint64_t v35 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
      uint64_t v13 = *(int *)(v35 + 24);
      uint64_t v14 = &v7[v13];
      uint64_t v15 = &v8[v13];
      uint64_t v16 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16))
      {
        uint64_t v17 = sub_253462A5C(&qword_269CE0470);
        memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        *uint64_t v14 = *v15;
        uint64_t v18 = *(int *)(v16 + 20);
        uint64_t v34 = &v14[v18];
        uint64_t v19 = &v15[v18];
        uint64_t v20 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 32))(v34, v19, v20);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v14, 0, 1, v16);
      }
      uint64_t v21 = *(int *)(v35 + 28);
      uint64_t v22 = &v7[v21];
      uint64_t v23 = &v8[v21];
      uint64_t v24 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v11);
    }
    uint64_t v25 = *(int *)(v9 + 20);
    uint64_t v26 = &v7[v25];
    uint64_t v27 = &v8[v25];
    uint64_t v28 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v29 = *(int *)(a3 + 24);
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
  return a1;
}

void *assignWithTake for TranscriptProtoActionConfirmation(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (uint64_t)a1 + v6;
  uint64_t v8 = (uint64_t)a2 + v6;
  uint64_t v9 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v15 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
    int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v15);
    int v17 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
        *(unsigned char *)(v7 + 16) = *(unsigned char *)(v8 + 16);
        uint64_t v78 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
        uint64_t v18 = *(int *)(v78 + 24);
        uint64_t v19 = (unsigned char *)(v7 + v18);
        uint64_t v20 = (unsigned char *)(v8 + v18);
        uint64_t v21 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21))
        {
          uint64_t v22 = sub_253462A5C(&qword_269CE0470);
          memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          *uint64_t v19 = *v20;
          uint64_t v51 = *(int *)(v21 + 20);
          uint64_t v77 = &v19[v51];
          uint64_t v52 = &v20[v51];
          uint64_t v53 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v53 - 8) + 32))(v77, v52, v53);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v21);
        }
        uint64_t v54 = *(int *)(v78 + 28);
        uint64_t v55 = v7 + v54;
        uint64_t v56 = v8 + v54;
        uint64_t v57 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, 0, 1, v15);
        goto LABEL_29;
      }
      goto LABEL_16;
    }
    if (v17)
    {
      sub_2536FA73C();
LABEL_16:
      uint64_t v28 = sub_253462A5C(&qword_269CE0478);
      memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v28 - 8) + 64));
LABEL_29:
      uint64_t v63 = *(int *)(v9 + 20);
      uint64_t v64 = v7 + v63;
      uint64_t v65 = v8 + v63;
      uint64_t v66 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 40))(v64, v65, v66);
      goto LABEL_30;
    }
    uint64_t v40 = *(void *)(v8 + 8);
    *(void *)uint64_t v7 = *(void *)v8;
    *(void *)(v7 + 8) = v40;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v7 + 16) = *(unsigned char *)(v8 + 16);
    uint64_t v80 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
    uint64_t v41 = *(int *)(v80 + 24);
    uint64_t v42 = (unsigned char *)(v7 + v41);
    uint64_t v43 = (unsigned char *)(v8 + v41);
    uint64_t v44 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
    int v45 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v42, 1, v44);
    int v46 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v43, 1, v44);
    if (v45)
    {
      if (!v46)
      {
        unsigned char *v42 = *v43;
        uint64_t v47 = *(int *)(v44 + 20);
        uint64_t v48 = &v42[v47];
        uint64_t v49 = &v43[v47];
        uint64_t v50 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v42, 0, 1, v44);
LABEL_28:
        uint64_t v59 = *(int *)(v80 + 28);
        uint64_t v60 = v7 + v59;
        uint64_t v61 = v8 + v59;
        uint64_t v62 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 40))(v60, v61, v62);
        goto LABEL_29;
      }
    }
    else
    {
      if (!v46)
      {
        unsigned char *v42 = *v43;
        uint64_t v72 = *(int *)(v44 + 20);
        uint64_t v73 = &v42[v72];
        uint64_t v74 = &v43[v72];
        uint64_t v75 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v75 - 8) + 40))(v73, v74, v75);
        goto LABEL_28;
      }
      sub_2536FA73C();
    }
    uint64_t v58 = sub_253462A5C(&qword_269CE0470);
    memcpy(v42, v43, *(void *)(*(void *)(v58 - 8) + 64));
    goto LABEL_28;
  }
  if (v11)
  {
LABEL_7:
    uint64_t v14 = sub_253462A5C(&qword_269CE0480);
    memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_30;
  }
  uint64_t v12 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v12))
  {
    uint64_t v13 = sub_253462A5C(&qword_269CE0478);
    memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    *(unsigned char *)(v7 + 16) = *(unsigned char *)(v8 + 16);
    uint64_t v79 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
    uint64_t v23 = *(int *)(v79 + 24);
    uint64_t v24 = (unsigned char *)(v7 + v23);
    uint64_t v25 = (unsigned char *)(v8 + v23);
    uint64_t v26 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v26))
    {
      uint64_t v27 = sub_253462A5C(&qword_269CE0470);
      memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      *uint64_t v24 = *v25;
      uint64_t v29 = *(int *)(v26 + 20);
      uint64_t v76 = &v24[v29];
      uint64_t v30 = &v25[v29];
      uint64_t v31 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v31 - 8) + 32))(v76, v30, v31);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v26);
    }
    uint64_t v32 = *(int *)(v79 + 28);
    uint64_t v33 = v7 + v32;
    uint64_t v34 = v8 + v32;
    uint64_t v35 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, 0, 1, v12);
  }
  uint64_t v36 = *(int *)(v9 + 20);
  uint64_t v37 = v7 + v36;
  uint64_t v38 = v8 + v36;
  uint64_t v39 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v7, 0, 1, v9);
LABEL_30:
  uint64_t v67 = *(int *)(a3 + 24);
  uint64_t v68 = (char *)a1 + v67;
  uint64_t v69 = (char *)a2 + v67;
  uint64_t v70 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 40))(v68, v69, v70);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionConfirmation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25380D278);
}

uint64_t sub_25380D278()
{
  return sub_253903F38();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionConfirmation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25380D298);
}

void sub_25380D298()
{
}

void sub_25380D2A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoActionConfirmationSystemStyle(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE0478);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v11 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
      uint64_t v12 = *(int *)(v11 + 24);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v15))
      {
        uint64_t v16 = sub_253462A5C(&qword_269CE0470);
        memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        *uint64_t v13 = *v14;
        uint64_t v17 = *(int *)(v15 + 20);
        uint64_t v18 = &v13[v17];
        uint64_t v19 = &v14[v17];
        uint64_t v20 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v13, 0, 1, v15);
      }
      uint64_t v21 = *(int *)(v11 + 28);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v25 = *(int *)(a3 + 20);
    uint64_t v26 = (char *)a1 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoActionConfirmationSystemStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
    uint64_t v6 = a1 + *(int *)(v5 + 24);
    uint64_t v7 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, 1, v7))
    {
      uint64_t v8 = v6 + *(int *)(v7 + 20);
      uint64_t v9 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    }
    uint64_t v10 = a1 + *(int *)(v5 + 28);
    uint64_t v11 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  uint64_t v12 = a1 + *(int *)(a2 + 20);
  uint64_t v13 = sub_253B07160();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
  return v14(v12, v13);
}

void *initializeWithCopy for TranscriptProtoActionConfirmationSystemStyle(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE0478);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v9 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
    uint64_t v10 = *(int *)(v9 + 24);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = sub_253462A5C(&qword_269CE0470);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      unsigned char *v11 = *v12;
      uint64_t v15 = *(int *)(v13 + 20);
      uint64_t v16 = &v11[v15];
      uint64_t v17 = &v12[v15];
      uint64_t v18 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v11, 0, 1, v13);
    }
    uint64_t v19 = *(int *)(v9 + 28);
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoActionConfirmationSystemStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    uint64_t v16 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
    uint64_t v17 = *(int *)(v16 + 24);
    uint64_t v18 = (unsigned char *)(a1 + v17);
    uint64_t v19 = (unsigned char *)(a2 + v17);
    uint64_t v20 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
    int v21 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v20);
    int v22 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20);
    if (v21)
    {
      if (!v22)
      {
        unsigned char *v18 = *v19;
        uint64_t v23 = *(int *)(v20 + 20);
        uint64_t v24 = &v18[v23];
        uint64_t v25 = &v19[v23];
        uint64_t v26 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
LABEL_16:
        uint64_t v36 = *(int *)(v16 + 28);
        uint64_t v37 = a1 + v36;
        uint64_t v38 = a2 + v36;
        uint64_t v39 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 24))(v37, v38, v39);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v22)
      {
        unsigned char *v18 = *v19;
        uint64_t v45 = *(int *)(v20 + 20);
        int v46 = &v18[v45];
        uint64_t v47 = &v19[v45];
        uint64_t v48 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v48 - 8) + 24))(v46, v47, v48);
        goto LABEL_16;
      }
      sub_2536FA73C();
    }
    uint64_t v35 = sub_253462A5C(&qword_269CE0470);
    memcpy(v18, v19, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_16;
  }
  if (v8)
  {
LABEL_7:
    uint64_t v15 = sub_253462A5C(&qword_269CE0478);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_17;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v9 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
  uint64_t v10 = *(int *)(v9 + 24);
  uint64_t v11 = (unsigned char *)(a1 + v10);
  uint64_t v12 = (unsigned char *)(a2 + v10);
  uint64_t v13 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13))
  {
    uint64_t v14 = sub_253462A5C(&qword_269CE0470);
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    unsigned char *v11 = *v12;
    uint64_t v27 = *(int *)(v13 + 20);
    uint64_t v28 = &v11[v27];
    uint64_t v29 = &v12[v27];
    uint64_t v30 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v11, 0, 1, v13);
  }
  uint64_t v31 = *(int *)(v9 + 28);
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v6);
LABEL_17:
  uint64_t v40 = *(int *)(a3 + 20);
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  uint64_t v43 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 24))(v41, v42, v43);
  return a1;
}

unsigned char *initializeWithTake for TranscriptProtoActionConfirmationSystemStyle(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE0478);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[16] = a2[16];
    uint64_t v8 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
    uint64_t v9 = *(int *)(v8 + 24);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
    {
      uint64_t v13 = sub_253462A5C(&qword_269CE0470);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      unsigned char *v10 = *v11;
      uint64_t v14 = *(int *)(v12 + 20);
      uint64_t v15 = &v10[v14];
      uint64_t v16 = &v11[v14];
      uint64_t v17 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
    }
    uint64_t v18 = *(int *)(v8 + 28);
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v22 = *(int *)(a3 + 20);
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  return a1;
}

unsigned char *assignWithTake for TranscriptProtoActionConfirmationSystemStyle(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v16 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v16;
    swift_bridgeObjectRelease();
    a1[16] = a2[16];
    uint64_t v17 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
    uint64_t v18 = *(int *)(v17 + 24);
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
    int v22 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v21);
    int v23 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21);
    if (v22)
    {
      if (!v23)
      {
        *uint64_t v19 = *v20;
        uint64_t v24 = *(int *)(v21 + 20);
        uint64_t v25 = &v19[v24];
        uint64_t v26 = &v20[v24];
        uint64_t v27 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v21);
LABEL_16:
        uint64_t v37 = *(int *)(v17 + 28);
        uint64_t v38 = &a1[v37];
        uint64_t v39 = &a2[v37];
        uint64_t v40 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v40 - 8) + 40))(v38, v39, v40);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v23)
      {
        *uint64_t v19 = *v20;
        uint64_t v46 = *(int *)(v21 + 20);
        uint64_t v47 = &v19[v46];
        uint64_t v48 = &v20[v46];
        uint64_t v49 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v49 - 8) + 40))(v47, v48, v49);
        goto LABEL_16;
      }
      sub_2536FA73C();
    }
    uint64_t v36 = sub_253462A5C(&qword_269CE0470);
    memcpy(v19, v20, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_16;
  }
  if (v8)
  {
LABEL_7:
    uint64_t v15 = sub_253462A5C(&qword_269CE0478);
    memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_17;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[16] = a2[16];
  uint64_t v9 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
  uint64_t v10 = *(int *)(v9 + 24);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13))
  {
    uint64_t v14 = sub_253462A5C(&qword_269CE0470);
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    unsigned char *v11 = *v12;
    uint64_t v28 = *(int *)(v13 + 20);
    uint64_t v29 = &v11[v28];
    uint64_t v30 = &v12[v28];
    uint64_t v31 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v11, 0, 1, v13);
  }
  uint64_t v32 = *(int *)(v9 + 28);
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_17:
  uint64_t v41 = *(int *)(a3 + 20);
  uint64_t v42 = &a1[v41];
  uint64_t v43 = &a2[v41];
  uint64_t v44 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v44 - 8) + 40))(v42, v43, v44);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionConfirmationSystemStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25380E330);
}

uint64_t sub_25380E330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE0478);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionConfirmationSystemStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25380E350);
}

uint64_t sub_25380E350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE0478);
}

void sub_25380E35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoActionConfirmationSystemStyleEnum(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v7 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
    uint64_t v8 = *(int *)(v7 + 24);
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CE0470);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *uint64_t v9 = *v10;
      uint64_t v14 = *(int *)(v11 + 20);
      uint64_t v15 = &v9[v14];
      uint64_t v16 = &v10[v14];
      uint64_t v17 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v18 = *(int *)(v7 + 28);
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (uint64_t)a2 + v18;
    uint64_t v21 = sub_253B07160();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoActionConfirmationSystemStyleEnum(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
  uint64_t v3 = a1 + *(int *)(v2 + 24);
  uint64_t v4 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v3, 1, v4))
  {
    uint64_t v5 = v3 + *(int *)(v4 + 20);
    uint64_t v6 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(v2 + 28);
  uint64_t v8 = sub_253B07160();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  return v9(v7, v8);
}

uint64_t initializeWithCopy for TranscriptProtoActionConfirmationSystemStyleEnum(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
  uint64_t v6 = *(int *)(v5 + 24);
  uint64_t v7 = (unsigned char *)(a1 + v6);
  uint64_t v8 = (unsigned char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE0470);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *uint64_t v7 = *v8;
    uint64_t v11 = *(int *)(v9 + 20);
    uint64_t v12 = &v7[v11];
    uint64_t v13 = &v8[v11];
    uint64_t v14 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v15 = *(int *)(v5 + 28);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoActionConfirmationSystemStyleEnum(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = (unsigned char *)(a1 + v5);
  uint64_t v7 = (unsigned char *)(a2 + v5);
  uint64_t v8 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
  int v9 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v6, 1, v8);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v8);
  if (!v9)
  {
    if (!v10)
    {
      *uint64_t v6 = *v7;
      uint64_t v21 = *(int *)(v8 + 20);
      int v22 = &v6[v21];
      int v23 = &v7[v21];
      uint64_t v24 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v15 = sub_253462A5C(&qword_269CE0470);
    memcpy(v6, v7, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v6 = *v7;
  uint64_t v11 = *(int *)(v8 + 20);
  uint64_t v12 = &v6[v11];
  uint64_t v13 = &v7[v11];
  uint64_t v14 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v6, 0, 1, v8);
LABEL_7:
  uint64_t v16 = *(int *)(v4 + 28);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoActionConfirmationSystemStyleEnum(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = (unsigned char *)(a1 + v5);
  uint64_t v7 = (unsigned char *)(a2 + v5);
  uint64_t v8 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v8))
  {
    uint64_t v9 = sub_253462A5C(&qword_269CE0470);
    memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    *uint64_t v6 = *v7;
    uint64_t v10 = *(int *)(v8 + 20);
    uint64_t v11 = &v6[v10];
    uint64_t v12 = &v7[v10];
    uint64_t v13 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v6, 0, 1, v8);
  }
  uint64_t v14 = *(int *)(v4 + 28);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoActionConfirmationSystemStyleEnum(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
  uint64_t v6 = *(int *)(v5 + 24);
  uint64_t v7 = (unsigned char *)(a1 + v6);
  uint64_t v8 = (unsigned char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *uint64_t v7 = *v8;
      uint64_t v22 = *(int *)(v9 + 20);
      int v23 = &v7[v22];
      uint64_t v24 = &v8[v22];
      uint64_t v25 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 40))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_269CE0470);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v7 = *v8;
  uint64_t v12 = *(int *)(v9 + 20);
  uint64_t v13 = &v7[v12];
  uint64_t v14 = &v8[v12];
  uint64_t v15 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v17 = *(int *)(v5 + 28);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionConfirmationSystemStyleEnum(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
  return MEMORY[0x270FA0340](a1, a2, v4, sub_25380ED4C);
}

uint64_t sub_25380ED4C()
{
  return sub_253942490();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionConfirmationSystemStyleEnum(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
  return MEMORY[0x270FA0580](a1, a2, a3, v6, sub_25380EDC0);
}

void sub_25380EDC0()
{
}

uint64_t sub_25380EDCC()
{
  return sub_253860EAC();
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (unsigned char *)(a1 + v8);
    int v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CE0470);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *uint64_t v9 = *v10;
      uint64_t v14 = *(int *)(v11 + 20);
      uint64_t v15 = &v9[v14];
      uint64_t v16 = &v10[v14];
      uint64_t v17 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v18 = *(int *)(a3 + 28);
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (uint64_t)a2 + v18;
    uint64_t v21 = sub_253B07160();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  uint64_t v9 = sub_253B07160();
  int v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  return v10(v8, v9);
}

uint64_t initializeWithCopy for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (unsigned char *)(a1 + v7);
  uint64_t v9 = (unsigned char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_269CE0470);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    unsigned char *v8 = *v9;
    uint64_t v12 = *(int *)(v10 + 20);
    uint64_t v13 = &v8[v12];
    uint64_t v14 = &v9[v12];
    uint64_t v15 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v16 = *(int *)(a3 + 28);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (unsigned char *)(a1 + v6);
  uint64_t v8 = (unsigned char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *uint64_t v7 = *v8;
      uint64_t v22 = *(int *)(v9 + 20);
      int v23 = &v7[v22];
      uint64_t v24 = &v8[v22];
      uint64_t v25 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_269CE0470);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v7 = *v8;
  uint64_t v12 = *(int *)(v9 + 20);
  uint64_t v13 = &v7[v12];
  uint64_t v14 = &v8[v12];
  uint64_t v15 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 28);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (unsigned char *)(a1 + v6);
  uint64_t v8 = (unsigned char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE0470);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *uint64_t v7 = *v8;
    uint64_t v11 = *(int *)(v9 + 20);
    uint64_t v12 = &v7[v11];
    uint64_t v13 = &v8[v11];
    uint64_t v14 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v15 = *(int *)(a3 + 28);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (unsigned char *)(a1 + v7);
  uint64_t v9 = (unsigned char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    if (!v12)
    {
      unsigned char *v8 = *v9;
      uint64_t v23 = *(int *)(v10 + 20);
      uint64_t v24 = &v8[v23];
      uint64_t v25 = &v9[v23];
      uint64_t v26 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v17 = sub_253462A5C(&qword_269CE0470);
    memcpy(v8, v9, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  unsigned char *v8 = *v9;
  uint64_t v13 = *(int *)(v10 + 20);
  uint64_t v14 = &v8[v13];
  uint64_t v15 = &v9[v13];
  uint64_t v16 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 28);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25380F744);
}

uint64_t sub_25380F744()
{
  return sub_253942490();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25380F764);
}

void sub_25380F764()
{
}

void sub_25380F770(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25380F7C8);
}

uint64_t sub_25380F7C8(unsigned __int8 *a1, int a2)
{
  if (a2 == 251)
  {
    if (*a1 <= 4u) {
      int v3 = 4;
    }
    else {
      int v3 = *a1;
    }
    unsigned int v4 = v3 - 4;
    if (*a1 >= 4u) {
      return v4;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_2535E22D4();
    uint64_t v6 = sub_2535E22C8(*(int *)(v2 + 20));
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, v7, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25380F858);
}

void sub_25380F858()
{
  sub_2534DA0C4();
  if (v3 == 251)
  {
    *unint64_t v1 = v0 + 4;
  }
  else
  {
    sub_2535E235C();
    uint64_t v4 = sub_2535E2234(*(int *)(v2 + 20));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, v5, v6, v7);
  }
}

uint64_t sub_25380F8C0()
{
  return sub_25393E9BC();
}

unsigned char *_s30IntelligenceFlowPlannerSupport71TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSourceEnumOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)sub_2534DA378((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)sub_2534DA360((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25380F988);
      case 4:
        uint64_t result = (unsigned char *)sub_2534DA368((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = sub_2534DA370(result, a2 + 3);
        break;
    }
  }
  return result;
}

void type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSourceEnum()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoParameterValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253B08E50();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = *(int *)(a3 + 20);
    int v11 = (_WORD *)((char *)a1 + v10);
    int v12 = (_WORD *)((char *)a2 + v10);
    uint64_t v13 = type metadata accessor for TranscriptProtoPromptSelection(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = sub_253462A5C(&qword_269CE1BD0);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      *(void *)int v11 = *(void *)v12;
      v11[4] = v12[4];
      uint64_t v15 = *(int *)(v13 + 20);
      uint64_t v16 = (char *)v11 + v15;
      uint64_t v17 = (char *)v12 + v15;
      uint64_t v18 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v11, 0, 1, v13);
    }
    uint64_t v19 = *(int *)(a3 + 24);
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoParameterValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253B08E50();
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for TranscriptProtoPromptSelection(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v5, 1, v6))
  {
    uint64_t v7 = v5 + *(int *)(v6 + 20);
    uint64_t v8 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v9 = a1 + *(int *)(a2 + 24);
  uint64_t v10 = sub_253B07160();
  int v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  return v11(v9, v10);
}

char *initializeWithCopy for TranscriptProtoParameterValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_253B08E50();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for TranscriptProtoPromptSelection(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_253462A5C(&qword_269CE1BD0);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v9 = *(void *)v10;
    *((_WORD *)v9 + 4) = *((_WORD *)v10 + 4);
    uint64_t v13 = *(int *)(v11 + 20);
    uint64_t v14 = &v9[v13];
    uint64_t v15 = &v10[v13];
    uint64_t v16 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

char *assignWithCopy for TranscriptProtoParameterValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_253B08E50();
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for TranscriptProtoPromptSelection(0);
  int v15 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v14);
  int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14);
  if (!v15)
  {
    if (!v16)
    {
      uint64_t v28 = *(void *)v13;
      *((_WORD *)v12 + 4) = *((_WORD *)v13 + 4);
      *(void *)uint64_t v12 = v28;
      uint64_t v29 = *(int *)(v14 + 20);
      uint64_t v30 = &v12[v29];
      uint64_t v31 = &v13[v29];
      uint64_t v32 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 24))(v30, v31, v32);
      goto LABEL_13;
    }
    sub_2536FA73C();
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    uint64_t v22 = sub_253462A5C(&qword_269CE1BD0);
    memcpy(v12, v13, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v17 = *(void *)v13;
  *((_WORD *)v12 + 4) = *((_WORD *)v13 + 4);
  *(void *)uint64_t v12 = v17;
  uint64_t v18 = *(int *)(v14 + 20);
  uint64_t v19 = &v12[v18];
  uint64_t v20 = &v13[v18];
  uint64_t v21 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
LABEL_13:
  uint64_t v23 = *(int *)(a3 + 24);
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

char *initializeWithTake for TranscriptProtoParameterValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_253B08E50();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for TranscriptProtoPromptSelection(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_253462A5C(&qword_269CE1BD0);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v9 = *(void *)v10;
    *((_WORD *)v9 + 4) = *((_WORD *)v10 + 4);
    uint64_t v13 = *(int *)(v11 + 20);
    uint64_t v14 = &v9[v13];
    int v15 = &v10[v13];
    uint64_t v16 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  return a1;
}

char *assignWithTake for TranscriptProtoParameterValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_253B08E50();
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for TranscriptProtoPromptSelection(0);
  int v15 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v14);
  int v16 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14);
  if (!v15)
  {
    if (!v16)
    {
      *(void *)uint64_t v12 = *(void *)v13;
      *((_WORD *)v12 + 4) = *((_WORD *)v13 + 4);
      uint64_t v27 = *(int *)(v14 + 20);
      uint64_t v28 = &v12[v27];
      uint64_t v29 = &v13[v27];
      uint64_t v30 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
      goto LABEL_13;
    }
    sub_2536FA73C();
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    uint64_t v21 = sub_253462A5C(&qword_269CE1BD0);
    memcpy(v12, v13, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  *(void *)uint64_t v12 = *(void *)v13;
  *((_WORD *)v12 + 4) = *((_WORD *)v13 + 4);
  uint64_t v17 = *(int *)(v14 + 20);
  uint64_t v18 = &v12[v17];
  uint64_t v19 = &v13[v17];
  uint64_t v20 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
LABEL_13:
  uint64_t v22 = *(int *)(a3 + 24);
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 40))(v23, v24, v25);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoParameterValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253810714);
}

uint64_t sub_253810714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2538A7E84(a1, a2, a3, &qword_269CDCBC8, &qword_269CE1BD0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoParameterValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25381073C);
}

uint64_t sub_25381073C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2538A7F3C(a1, a2, a3, a4, &qword_269CDCBC8, &qword_269CE1BD0);
}

void sub_253810750(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t getEnumTagSinglePayload for TranscriptProtoToolDisambiguation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538107B8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoToolDisambiguation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538107D0);
}

uint64_t sub_2538107D4()
{
  return sub_2535DC13C();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoContextPrewarmRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253943C80);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoContextPrewarmRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253943C2C);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoContextPrewarmCompleted(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253943C84);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoContextPrewarmCompleted(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253943C30);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253943C88);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253943C34);
}

uint64_t type metadata accessor for TranscriptProtoActionResult(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE48B8);
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoExternalAgentOutcome(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) == 0)
  {
    uint64_t v6 = a2;
    int v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_26B249528);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
      uint64_t v13 = v10[2];
      v9[1] = v10[1];
      v9[2] = v13;
      uint64_t v14 = *(int *)(v11 + 24);
      int v15 = (char *)v9 + v14;
      uint64_t v227 = (char *)v10 + v14;
      uint64_t v16 = sub_253B07160();
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v15, v227, v16);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v18 = a3[6];
    uint64_t v19 = (void *)((char *)v7 + v18);
    uint64_t v20 = (void *)((char *)v6 + v18);
    uint64_t v21 = type metadata accessor for TranscriptProtoStatementOutcome(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21))
    {
      uint64_t v22 = sub_253462A5C(&qword_269CE0388);
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
LABEL_92:
      uint64_t v178 = a3[7];
      uint64_t v179 = (char *)v7 + v178;
      uint64_t v180 = (char *)v6 + v178;
      uint64_t v181 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 16))(v179, v180, v181);
      return v7;
    }
    uint64_t v23 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v23))
    {
      uint64_t v24 = sub_253462A5C(&qword_269CE04B0);
      memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
LABEL_91:
      uint64_t v174 = *(int *)(v21 + 20);
      uint64_t v175 = (char *)v19 + v174;
      uint64_t v176 = (char *)v20 + v174;
      uint64_t v177 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 16))(v175, v176, v177);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v21);
      goto LABEL_92;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v19 = *v20;
        uint64_t v219 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v30 = *(int *)(v219 + 20);
        uint64_t v31 = (void *)((char *)v19 + v30);
        uint64_t v32 = (char *)v20 + v30;
        uint64_t v33 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v32, 1, v33))
        {
          uint64_t v34 = sub_253462A5C(&qword_269CE0480);
          memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          uint64_t v68 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          uint64_t v69 = (uint64_t)v32;
          uint64_t v70 = v68;
          __src = (void *)v69;
          __dstb = (void *)v33;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v69, 1, v68))
          {
            uint64_t v71 = sub_253462A5C(&qword_269CE0478);
            uint64_t v72 = __src;
            memcpy(v31, __src, *(void *)(*(void *)(v71 - 8) + 64));
          }
          else
          {
            uint64_t v191 = v70;
            uint64_t v72 = __src;
            uint64_t v97 = __src[1];
            void *v31 = *__src;
            v31[1] = v97;
            *((unsigned char *)v31 + 16) = *((unsigned char *)__src + 16);
            uint64_t v188 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v98 = *(int *)(v188 + 24);
            uint64_t v195 = (uint64_t)v31;
            uint64_t v184 = (char *)v31 + v98;
            uint64_t v99 = (char *)__src + v98;
            uint64_t v100 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v99, 1, v100))
            {
              uint64_t v101 = sub_253462A5C(&qword_269CE0470);
              memcpy(v184, v99, *(void *)(*(void *)(v101 - 8) + 64));
            }
            else
            {
              *uint64_t v184 = *v99;
              uint64_t v119 = *(int *)(v100 + 20);
              uint64_t v183 = &v184[v119];
              uint64_t v187 = &v99[v119];
              uint64_t v120 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v120 - 8) + 16))(v183, v187, v120);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v184, 0, 1, v100);
            }
            uint64_t v121 = *(int *)(v188 + 28);
            uint64_t v31 = (void *)v195;
            uint64_t v122 = v195 + v121;
            uint64_t v189 = (char *)__src + v121;
            uint64_t v123 = sub_253B07160();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v123 - 8) + 16))(v122, v189, v123);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v195, 0, 1, v191);
            uint64_t v33 = (uint64_t)__dstb;
          }
          uint64_t v124 = *(int *)(v33 + 20);
          uint64_t v125 = (char *)v31 + v124;
          uint64_t v126 = (char *)v72 + v124;
          uint64_t v127 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16))(v125, v126, v127);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v31, 0, 1, (uint64_t)__dstb);
        }
        uint64_t v128 = *(int *)(v219 + 24);
        uint64_t v129 = (char *)v19 + v128;
        uint64_t v130 = (char *)v20 + v128;
        uint64_t v131 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16))(v129, v130, v131);
        goto LABEL_90;
      case 2u:
        uint64_t v35 = v20[1];
        *uint64_t v19 = *v20;
        v19[1] = v35;
        uint64_t v36 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
        uint64_t v228 = (char *)v19 + v36;
        __dstd = (char *)v20 + v36;
        uint64_t v37 = sub_253B07160();
        uint64_t v220 = v6;
        uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
        swift_bridgeObjectRetain();
        v38(v228, __dstd, v37);
        uint64_t v6 = v220;
        goto LABEL_90;
      case 3u:
        uint64_t v39 = v20[1];
        *uint64_t v19 = *v20;
        v19[1] = v39;
        v19[2] = v20[2];
        *((unsigned char *)v19 + 24) = *((unsigned char *)v20 + 24);
        uint64_t v40 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_19;
      case 4u:
        uint64_t v41 = v20[1];
        *uint64_t v19 = *v20;
        v19[1] = v41;
        uint64_t v42 = v20[3];
        v19[2] = v20[2];
        v19[3] = v42;
        *((unsigned char *)v19 + 32) = *((unsigned char *)v20 + 32);
        uint64_t v43 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_26;
      case 5u:
        uint64_t v44 = v20[1];
        *uint64_t v19 = *v20;
        v19[1] = v44;
        *((unsigned char *)v19 + 16) = *((unsigned char *)v20 + 16);
        uint64_t v40 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_19:
        uint64_t v221 = v40;
        uint64_t v45 = *(int *)(v40 + 24);
        __dst = (char *)v19 + v45;
        uint64_t v46 = (char *)v20 + v45;
        uint64_t v47 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v46, 1, v47))
        {
          uint64_t v48 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(__dst, v46, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(__dst, v46, v47);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v47);
        }
        uint64_t v62 = *(int *)(v221 + 28);
        goto LABEL_89;
      case 6u:
        uint64_t v49 = v20[1];
        *uint64_t v19 = *v20;
        v19[1] = v49;
        uint64_t v222 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v50 = *(int *)(v222 + 20);
        __dsta = (char *)v19 + v50;
        uint64_t v51 = (char *)v20 + v50;
        uint64_t v52 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v51, 1, v52))
        {
          uint64_t v53 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(__dsta, v51, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(__dsta, v51, v52);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v52);
        }
        uint64_t v62 = *(int *)(v222 + 24);
        goto LABEL_89;
      case 7u:
        uint64_t v54 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v54))
        {
          uint64_t v55 = sub_253462A5C(&qword_269CE0498);
          memcpy(v19, v20, *(void *)(*(void *)(v55 - 8) + 64));
          goto LABEL_87;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
            uint64_t v106 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v107 = (char *)v19 + v106;
            uint64_t v108 = (char *)v20 + v106;
            uint64_t v109 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 16))(v107, v108, v109);
            goto LABEL_60;
          }
          if (!EnumCaseMultiPayload)
          {
            *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
            uint64_t v74 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v75 = (char *)v19 + v74;
            uint64_t v76 = (char *)v20 + v74;
            uint64_t v77 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v75, v76, v77);
LABEL_60:
            swift_storeEnumTagMultiPayload();
            goto LABEL_86;
          }
          memcpy(v19, v20, *(void *)(*(void *)(v54 - 8) + 64));
LABEL_86:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v54);
LABEL_87:
          uint64_t v118 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_88:
          uint64_t v62 = *(int *)(v118 + 20);
LABEL_89:
          uint64_t v171 = (char *)v19 + v62;
          uint64_t v172 = (char *)v20 + v62;
          uint64_t v173 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 16))(v171, v172, v173);
LABEL_90:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v23);
          goto LABEL_91;
        }
        uint64_t v104 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v104))
        {
          uint64_t v105 = sub_253462A5C(&qword_269CE0490);
          memcpy(v19, v20, *(void *)(*(void *)(v105 - 8) + 64));
LABEL_85:
          uint64_t v167 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v168 = (char *)v19 + v167;
          int v169 = (char *)v20 + v167;
          uint64_t v170 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 16))(v168, v169, v170);
          swift_storeEnumTagMultiPayload();
          goto LABEL_86;
        }
        int v156 = swift_getEnumCaseMultiPayload();
        if (v156 == 1)
        {
          uint64_t v160 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v160))
          {
            uint64_t v161 = sub_253462A5C(&qword_269CE0488);
            memcpy(v19, v20, *(void *)(*(void *)(v161 - 8) + 64));
          }
          else
          {
            *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
            uint64_t v162 = *(int *)(v160 + 20);
            uint64_t v225 = (char *)v19 + v162;
            __dstj = (char *)v20 + v162;
            uint64_t v163 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 16))(v225, __dstj, v163);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v160);
          }
          uint64_t v164 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v165 = (char *)v19 + v164;
          uint64_t v226 = (char *)v20 + v164;
          uint64_t v166 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 16))(v165, v226, v166);
        }
        else
        {
          if (v156)
          {
            memcpy(v19, v20, *(void *)(*(void *)(v104 - 8) + 64));
LABEL_84:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v104);
            goto LABEL_85;
          }
          uint64_t v157 = v20[1];
          *uint64_t v19 = *v20;
          v19[1] = v157;
          uint64_t v158 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v198 = (char *)v20 + v158;
          __srcf = (char *)v19 + v158;
          uint64_t v159 = sub_253B07160();
          uint64_t v193 = *(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 16);
          swift_bridgeObjectRetain();
          v193(__srcf, v198, v159);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_84;
      case 8u:
        uint64_t v56 = v20[1];
        *uint64_t v19 = *v20;
        v19[1] = v56;
        v19[2] = v20[2];
        uint64_t v43 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
LABEL_26:
        __srcb = (char *)v20 + v43;
        __dste = (char *)v19 + v43;
        uint64_t v57 = sub_253B07160();
        int v223 = v6;
        uint64_t v194 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v194(__dste, __srcb, v57);
        goto LABEL_30;
      case 9u:
        uint64_t v58 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v58))
        {
          uint64_t v59 = sub_253462A5C(&qword_269CE04A8);
          memcpy(v19, v20, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          uint64_t v78 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v78))
          {
            uint64_t v79 = sub_253462A5C(&qword_269CE04A0);
            memcpy(v19, v20, *(void *)(*(void *)(v79 - 8) + 64));
          }
          else
          {
            uint64_t v96 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 16, v96))
            {
              memcpy(v19, v20, *(void *)(*(void *)(v78 - 8) + 64));
            }
            else
            {
              uint64_t v110 = v20[1];
              *uint64_t v19 = *v20;
              v19[1] = v110;
              uint64_t v111 = v20[3];
              v19[2] = v20[2];
              v19[3] = v111;
              v19[4] = v20[4];
              uint64_t v112 = *(int *)(v96 + 28);
              uint64_t v197 = (char *)v20 + v112;
              __srce = (char *)v19 + v112;
              __dsth = (void *)v96;
              uint64_t v113 = sub_253B07160();
              uint64_t v186 = *(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v186(__srce, v197, v113);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 16, (uint64_t)__dsth);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v78);
          }
          uint64_t v114 = *(int *)(v58 + 20);
          uint64_t v115 = (char *)v19 + v114;
          uint64_t v116 = (char *)v20 + v114;
          uint64_t v117 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16))(v115, v116, v117);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v58);
        }
        uint64_t v118 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_88;
      case 0xAu:
        *uint64_t v19 = *v20;
        uint64_t v60 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
        uint64_t v229 = (char *)v19 + v60;
        __dstf = (char *)v20 + v60;
        uint64_t v61 = sub_253B07160();
        int v223 = v6;
        __srcc = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
        swift_bridgeObjectRetain();
        __srcc(v229, __dstf, v61);
LABEL_30:
        uint64_t v6 = v223;
        goto LABEL_90;
      default:
        *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
        *(_WORD *)((char *)v19 + 1) = *(_WORD *)((char *)v20 + 1);
        uint64_t v218 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v25 = v218[7];
        uint64_t v26 = (char *)v19 + v25;
        uint64_t v27 = (char *)v20 + v25;
        uint64_t v28 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v28))
        {
          uint64_t v29 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v28);
        }
        uint64_t v63 = v218[8];
        uint64_t v64 = (void *)((char *)v19 + v63);
        uint64_t v65 = (void *)((char *)v20 + v63);
        uint64_t v66 = type metadata accessor for TranscriptProtoUndoContext(0);
        uint64_t v217 = v23;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v65, 1, v66))
        {
          uint64_t v67 = sub_253462A5C(&qword_269CE0450);
          memcpy(v64, v65, *(void *)(*(void *)(v67 - 8) + 64));
        }
        else
        {
          uint64_t v80 = v65[1];
          void *v64 = *v65;
          v64[1] = v80;
          uint64_t v81 = v65[3];
          v64[2] = v65[2];
          v64[3] = v81;
          uint64_t v82 = v65[5];
          v64[4] = v65[4];
          v64[5] = v82;
          uint64_t v83 = *(int *)(v66 + 28);
          __srcd = (char *)v65 + v83;
          __dstg = (char *)v64 + v83;
          uint64_t v84 = sub_253B07160();
          uint64_t v185 = *(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v185(__dstg, __srcd, v84);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v64, 0, 1, v66);
        }
        uint64_t v85 = v218[9];
        uint64_t v86 = (void *)((char *)v19 + v85);
        uint64_t v87 = (char *)v20 + v85;
        uint64_t v88 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v87, 1, v88))
        {
          uint64_t v89 = v6;
          uint64_t v90 = sub_253462A5C(&qword_269CE0468);
          memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64));
        }
        else
        {
          uint64_t v91 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          uint64_t v92 = (uint64_t)v87;
          uint64_t v93 = v91;
          __dstc = (void *)v92;
          __srca = (void *)v88;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v92, 1, v91))
          {
            uint64_t v94 = sub_253462A5C(&qword_269CE0460);
            uint64_t v95 = __dstc;
            memcpy(v86, __dstc, *(void *)(*(void *)(v94 - 8) + 64));
          }
          else
          {
            uint64_t v192 = v93;
            uint64_t v102 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            uint64_t v196 = v86;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__dstc, 1, v102))
            {
              uint64_t v103 = sub_253462A5C(&qword_269CE0458);
              memcpy(v86, __dstc, *(void *)(*(void *)(v103 - 8) + 64));
            }
            else
            {
              uint64_t v190 = v102;
              uint64_t v132 = __dstc[1];
              *uint64_t v86 = *__dstc;
              v86[1] = v132;
              uint64_t v133 = __dstc[2];
              unint64_t v134 = __dstc[3];
              swift_bridgeObjectRetain();
              sub_25348A9C8(v133, v134);
              v196[2] = v133;
              v196[3] = v134;
              v196[4] = __dstc[4];
              uint64_t v135 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              int v136 = (char *)v196 + v135;
              uint64_t v137 = (char *)__dstc + v135;
              uint64_t v138 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16))(v136, v137, v138);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v196, 0, 1, v190);
            }
            uint64_t v139 = *(int *)(v192 + 20);
            uint64_t v140 = (char *)v196 + v139;
            uint64_t v95 = __dstc;
            uint64_t v141 = (char *)__dstc + v139;
            uint64_t v142 = sub_253B07160();
            uint64_t v143 = v140;
            uint64_t v86 = v196;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 16))(v143, v141, v142);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v196, 0, 1, v192);
            uint64_t v88 = (uint64_t)__srca;
          }
          uint64_t v89 = v6;
          uint64_t v144 = *(int *)(v88 + 20);
          uint64_t v145 = (uint64_t)v86;
          uint64_t v146 = (char *)v86 + v144;
          uint64_t v147 = (char *)v95 + v144;
          uint64_t v148 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16))(v146, v147, v148);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v145, 0, 1, (uint64_t)__srca);
        }
        uint64_t v149 = v218[10];
        uint64_t v150 = (void *)((char *)v19 + v149);
        uint64_t v151 = (void *)((char *)v20 + v149);
        uint64_t v152 = v151[1];
        void *v150 = *v151;
        v150[1] = v152;
        uint64_t v153 = v218[11];
        uint64_t v224 = (char *)v19 + v153;
        __dsti = (char *)v20 + v153;
        uint64_t v154 = sub_253B07160();
        uint64_t v155 = *(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 16);
        swift_bridgeObjectRetain();
        v155(v224, __dsti, v154);
        uint64_t v6 = v89;
        uint64_t v23 = v217;
        goto LABEL_90;
    }
  }
  int v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  swift_retain();
  return v7;
}

uint64_t destroy for TranscriptProtoExternalAgentOutcome(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + a2[6];
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v9))
  {
    uint64_t v10 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v10))
    {
LABEL_60:
      uint64_t v71 = v8 + *(int *)(v9 + 20);
      uint64_t v72 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v72 - 8) + 8))(v71, v72);
      goto LABEL_61;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v11 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v12 = v8 + v11[7];
        uint64_t v13 = sub_253B08E50();
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v12, 1, v13)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
        }
        uint64_t v14 = v8 + v11[8];
        uint64_t v15 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v14, 1, v15))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v16 = v14 + *(int *)(v15 + 28);
          uint64_t v17 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
        }
        uint64_t v18 = v8 + v11[9];
        uint64_t v19 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v18, 1, v19))
        {
          uint64_t v20 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v18, 1, v20))
          {
            uint64_t v21 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v18, 1, v21))
            {
              swift_bridgeObjectRelease();
              sub_253487D84(*(void *)(v18 + 16), *(void *)(v18 + 24));
              uint64_t v22 = v18
                  + *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
              uint64_t v23 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
            }
            uint64_t v24 = v18 + *(int *)(v20 + 20);
            uint64_t v25 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
          }
          uint64_t v26 = v18 + *(int *)(v19 + 20);
          uint64_t v27 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
        }
        swift_bridgeObjectRelease();
        uint64_t v28 = v11[11];
        goto LABEL_59;
      case 1u:
        swift_bridgeObjectRelease();
        uint64_t v29 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v30 = v8 + *(int *)(v29 + 20);
        uint64_t v31 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v30, 1, v31))
        {
          uint64_t v32 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v30, 1, v32))
          {
            swift_bridgeObjectRelease();
            uint64_t v33 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v34 = v30 + *(int *)(v33 + 24);
            uint64_t v35 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v34, 1, v35))
            {
              uint64_t v36 = v34 + *(int *)(v35 + 20);
              uint64_t v37 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
            }
            uint64_t v38 = v30 + *(int *)(v33 + 28);
            uint64_t v39 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
          }
          uint64_t v40 = v30 + *(int *)(v31 + 20);
          uint64_t v41 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
        }
        goto LABEL_32;
      case 2u:
        swift_bridgeObjectRelease();
        uint64_t v42 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_58;
      case 3u:
        swift_bridgeObjectRelease();
        uint64_t v43 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_27;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v28 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_59;
      case 5u:
        swift_bridgeObjectRelease();
        uint64_t v43 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_27:
        uint64_t v44 = v43;
        uint64_t v45 = v8 + *(int *)(v43 + 24);
        uint64_t v46 = sub_253B08E50();
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v45, 1, v46)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8))(v45, v46);
        }
        uint64_t v28 = *(int *)(v44 + 28);
        goto LABEL_59;
      case 6u:
        swift_bridgeObjectRelease();
        uint64_t v29 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v47 = v8 + *(int *)(v29 + 20);
        uint64_t v48 = sub_253B08E50();
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v47, 1, v48)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v47, v48);
        }
LABEL_32:
        uint64_t v28 = *(int *)(v29 + 24);
        goto LABEL_59;
      case 7u:
        uint64_t v49 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v49)) {
          goto LABEL_57;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v51 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
          }
          else
          {
            if (EnumCaseMultiPayload) {
              goto LABEL_57;
            }
            uint64_t v51 = type metadata accessor for TranscriptProtoAppRequirement(0);
          }
LABEL_56:
          uint64_t v67 = v8 + *(int *)(v51 + 20);
          uint64_t v68 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v68 - 8) + 8))(v67, v68);
LABEL_57:
          uint64_t v42 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_58:
          uint64_t v28 = *(int *)(v42 + 20);
LABEL_59:
          uint64_t v69 = v8 + v28;
          uint64_t v70 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v70 - 8) + 8))(v69, v70);
          goto LABEL_60;
        }
        uint64_t v59 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v59)) {
          goto LABEL_55;
        }
        int v60 = swift_getEnumCaseMultiPayload();
        if (v60 == 1)
        {
          uint64_t v62 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v62))
          {
            uint64_t v63 = v8 + *(int *)(v62 + 20);
            uint64_t v64 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v64 - 8) + 8))(v63, v64);
          }
          uint64_t v61 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
        }
        else
        {
          if (v60)
          {
LABEL_55:
            uint64_t v51 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
            goto LABEL_56;
          }
          swift_bridgeObjectRelease();
          uint64_t v61 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
        }
        uint64_t v65 = v8 + *(int *)(v61 + 20);
        uint64_t v66 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v66 - 8) + 8))(v65, v66);
        goto LABEL_55;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v28 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        goto LABEL_59;
      case 9u:
        uint64_t v52 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v52))
        {
          uint64_t v53 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v53))
          {
            uint64_t v54 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 16, v54))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v55 = v8 + *(int *)(v54 + 28);
              uint64_t v56 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v56 - 8) + 8))(v55, v56);
            }
          }
          uint64_t v57 = v8 + *(int *)(v52 + 20);
          uint64_t v58 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v58 - 8) + 8))(v57, v58);
        }
        uint64_t v42 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_58;
      case 0xAu:
        swift_bridgeObjectRelease();
        uint64_t v42 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
        goto LABEL_58;
      default:
        goto LABEL_60;
    }
  }
LABEL_61:
  uint64_t v73 = a1 + a2[7];
  uint64_t v74 = sub_253B07160();
  uint64_t v75 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v74 - 8) + 8);
  return v75(v73, v74);
}

void *initializeWithCopy for TranscriptProtoExternalAgentOutcome(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
    uint64_t v11 = v8[2];
    v7[1] = v8[1];
    v7[2] = v11;
    uint64_t v12 = *(int *)(v9 + 24);
    uint64_t v13 = (char *)v7 + v12;
    uint64_t v225 = (char *)v8 + v12;
    uint64_t v14 = sub_253B07160();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    v15(v13, v225, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v16 = *(int *)(v3 + 24);
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v19 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
  {
    uint64_t v21 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v21))
    {
      uint64_t v22 = sub_253462A5C(&qword_269CE04B0);
      memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
LABEL_89:
      uint64_t v172 = *(int *)(v19 + 20);
      uint64_t v173 = (char *)v17 + v172;
      uint64_t v174 = (char *)v18 + v172;
      uint64_t v175 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v175 - 8) + 16))(v173, v174, v175);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
      goto LABEL_90;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v17 = *v18;
        uint64_t v217 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v28 = *(int *)(v217 + 20);
        uint64_t v29 = (void *)((char *)v17 + v28);
        uint64_t v30 = (char *)v18 + v28;
        uint64_t v31 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v30, 1, v31))
        {
          uint64_t v32 = sub_253462A5C(&qword_269CE0480);
          memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          uint64_t v66 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          uint64_t v67 = (uint64_t)v30;
          uint64_t v68 = v66;
          __src = (void *)v67;
          __dstb = (void *)v31;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v67, 1, v66))
          {
            uint64_t v69 = sub_253462A5C(&qword_269CE0478);
            uint64_t v70 = __src;
            memcpy(v29, __src, *(void *)(*(void *)(v69 - 8) + 64));
          }
          else
          {
            uint64_t v189 = v68;
            uint64_t v70 = __src;
            uint64_t v95 = __src[1];
            void *v29 = *__src;
            v29[1] = v95;
            *((unsigned char *)v29 + 16) = *((unsigned char *)__src + 16);
            uint64_t v186 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v96 = *(int *)(v186 + 24);
            uint64_t v193 = (uint64_t)v29;
            uint64_t v182 = (char *)v29 + v96;
            uint64_t v97 = (char *)__src + v96;
            uint64_t v98 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v97, 1, v98))
            {
              uint64_t v99 = sub_253462A5C(&qword_269CE0470);
              memcpy(v182, v97, *(void *)(*(void *)(v99 - 8) + 64));
            }
            else
            {
              unsigned char *v182 = *v97;
              uint64_t v117 = *(int *)(v98 + 20);
              uint64_t v181 = &v182[v117];
              uint64_t v185 = &v97[v117];
              uint64_t v118 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v118 - 8) + 16))(v181, v185, v118);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v182, 0, 1, v98);
            }
            uint64_t v119 = *(int *)(v186 + 28);
            uint64_t v29 = (void *)v193;
            uint64_t v120 = v193 + v119;
            uint64_t v187 = (char *)__src + v119;
            uint64_t v121 = sub_253B07160();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v121 - 8) + 16))(v120, v187, v121);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v193, 0, 1, v189);
            uint64_t v31 = (uint64_t)__dstb;
          }
          uint64_t v122 = *(int *)(v31 + 20);
          uint64_t v123 = (char *)v29 + v122;
          uint64_t v124 = (char *)v70 + v122;
          uint64_t v125 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 16))(v123, v124, v125);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v29, 0, 1, (uint64_t)__dstb);
        }
        uint64_t v126 = *(int *)(v217 + 24);
        uint64_t v127 = (char *)v17 + v126;
        uint64_t v128 = (char *)v18 + v126;
        uint64_t v129 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 16))(v127, v128, v129);
        goto LABEL_88;
      case 2u:
        uint64_t v33 = v18[1];
        *uint64_t v17 = *v18;
        v17[1] = v33;
        uint64_t v34 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
        uint64_t v226 = (char *)v17 + v34;
        __dstd = (char *)v18 + v34;
        uint64_t v35 = sub_253B07160();
        uint64_t v218 = v3;
        uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
        swift_bridgeObjectRetain();
        v36(v226, __dstd, v35);
        uint64_t v3 = v218;
        goto LABEL_88;
      case 3u:
        uint64_t v37 = v18[1];
        *uint64_t v17 = *v18;
        v17[1] = v37;
        v17[2] = v18[2];
        *((unsigned char *)v17 + 24) = *((unsigned char *)v18 + 24);
        uint64_t v38 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_17;
      case 4u:
        uint64_t v39 = v18[1];
        *uint64_t v17 = *v18;
        v17[1] = v39;
        uint64_t v40 = v18[3];
        v17[2] = v18[2];
        v17[3] = v40;
        *((unsigned char *)v17 + 32) = *((unsigned char *)v18 + 32);
        uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_24;
      case 5u:
        uint64_t v42 = v18[1];
        *uint64_t v17 = *v18;
        v17[1] = v42;
        *((unsigned char *)v17 + 16) = *((unsigned char *)v18 + 16);
        uint64_t v38 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_17:
        uint64_t v219 = v38;
        uint64_t v43 = *(int *)(v38 + 24);
        __dst = (char *)v17 + v43;
        uint64_t v44 = (char *)v18 + v43;
        uint64_t v45 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v44, 1, v45))
        {
          uint64_t v46 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(__dst, v44, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(__dst, v44, v45);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v45);
        }
        uint64_t v60 = *(int *)(v219 + 28);
        goto LABEL_87;
      case 6u:
        uint64_t v47 = v18[1];
        *uint64_t v17 = *v18;
        v17[1] = v47;
        uint64_t v220 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v48 = *(int *)(v220 + 20);
        __dsta = (char *)v17 + v48;
        uint64_t v49 = (char *)v18 + v48;
        uint64_t v50 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v49, 1, v50))
        {
          uint64_t v51 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(__dsta, v49, *(void *)(*(void *)(v51 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(__dsta, v49, v50);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v50);
        }
        uint64_t v60 = *(int *)(v220 + 24);
        goto LABEL_87;
      case 7u:
        uint64_t v52 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v52))
        {
          uint64_t v53 = sub_253462A5C(&qword_269CE0498);
          memcpy(v17, v18, *(void *)(*(void *)(v53 - 8) + 64));
          goto LABEL_85;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
            uint64_t v104 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v105 = (char *)v17 + v104;
            uint64_t v106 = (char *)v18 + v104;
            uint64_t v107 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16))(v105, v106, v107);
            goto LABEL_58;
          }
          if (!EnumCaseMultiPayload)
          {
            *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
            uint64_t v72 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v73 = (char *)v17 + v72;
            uint64_t v74 = (char *)v18 + v72;
            uint64_t v75 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v73, v74, v75);
LABEL_58:
            swift_storeEnumTagMultiPayload();
            goto LABEL_84;
          }
          memcpy(v17, v18, *(void *)(*(void *)(v52 - 8) + 64));
LABEL_84:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v52);
LABEL_85:
          uint64_t v116 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_86:
          uint64_t v60 = *(int *)(v116 + 20);
LABEL_87:
          int v169 = (char *)v17 + v60;
          uint64_t v170 = (char *)v18 + v60;
          uint64_t v171 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 16))(v169, v170, v171);
LABEL_88:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v21);
          goto LABEL_89;
        }
        uint64_t v102 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v102))
        {
          uint64_t v103 = sub_253462A5C(&qword_269CE0490);
          memcpy(v17, v18, *(void *)(*(void *)(v103 - 8) + 64));
LABEL_83:
          uint64_t v165 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v166 = (char *)v17 + v165;
          uint64_t v167 = (char *)v18 + v165;
          uint64_t v168 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16))(v166, v167, v168);
          swift_storeEnumTagMultiPayload();
          goto LABEL_84;
        }
        int v154 = swift_getEnumCaseMultiPayload();
        if (v154 == 1)
        {
          uint64_t v158 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v158))
          {
            uint64_t v159 = sub_253462A5C(&qword_269CE0488);
            memcpy(v17, v18, *(void *)(*(void *)(v159 - 8) + 64));
          }
          else
          {
            *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
            uint64_t v160 = *(int *)(v158 + 20);
            int v223 = (char *)v17 + v160;
            __dstj = (char *)v18 + v160;
            uint64_t v161 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 16))(v223, __dstj, v161);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v158);
          }
          uint64_t v162 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v163 = (char *)v17 + v162;
          uint64_t v224 = (char *)v18 + v162;
          uint64_t v164 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 16))(v163, v224, v164);
        }
        else
        {
          if (v154)
          {
            memcpy(v17, v18, *(void *)(*(void *)(v102 - 8) + 64));
LABEL_82:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v102);
            goto LABEL_83;
          }
          uint64_t v155 = v18[1];
          *uint64_t v17 = *v18;
          v17[1] = v155;
          uint64_t v156 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v196 = (char *)v18 + v156;
          __srcf = (char *)v17 + v156;
          uint64_t v157 = sub_253B07160();
          uint64_t v191 = *(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 16);
          swift_bridgeObjectRetain();
          v191(__srcf, v196, v157);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_82;
      case 8u:
        uint64_t v54 = v18[1];
        *uint64_t v17 = *v18;
        v17[1] = v54;
        v17[2] = v18[2];
        uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
LABEL_24:
        __srcb = (char *)v18 + v41;
        __dste = (char *)v17 + v41;
        uint64_t v55 = sub_253B07160();
        uint64_t v221 = v3;
        uint64_t v192 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v192(__dste, __srcb, v55);
        goto LABEL_28;
      case 9u:
        uint64_t v56 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v56))
        {
          uint64_t v57 = sub_253462A5C(&qword_269CE04A8);
          memcpy(v17, v18, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          uint64_t v76 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v76))
          {
            uint64_t v77 = sub_253462A5C(&qword_269CE04A0);
            memcpy(v17, v18, *(void *)(*(void *)(v77 - 8) + 64));
          }
          else
          {
            uint64_t v94 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 16, v94))
            {
              memcpy(v17, v18, *(void *)(*(void *)(v76 - 8) + 64));
            }
            else
            {
              uint64_t v108 = v18[1];
              *uint64_t v17 = *v18;
              v17[1] = v108;
              uint64_t v109 = v18[3];
              v17[2] = v18[2];
              v17[3] = v109;
              v17[4] = v18[4];
              uint64_t v110 = *(int *)(v94 + 28);
              uint64_t v195 = (char *)v18 + v110;
              __srce = (char *)v17 + v110;
              __dsth = (void *)v94;
              uint64_t v111 = sub_253B07160();
              uint64_t v184 = *(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v184(__srce, v195, v111);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 16, (uint64_t)__dsth);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v76);
          }
          uint64_t v112 = *(int *)(v56 + 20);
          uint64_t v113 = (char *)v17 + v112;
          uint64_t v114 = (char *)v18 + v112;
          uint64_t v115 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16))(v113, v114, v115);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v56);
        }
        uint64_t v116 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_86;
      case 0xAu:
        *uint64_t v17 = *v18;
        uint64_t v58 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
        uint64_t v227 = (char *)v17 + v58;
        __dstf = (char *)v18 + v58;
        uint64_t v59 = sub_253B07160();
        uint64_t v221 = v3;
        __srcc = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
        swift_bridgeObjectRetain();
        __srcc(v227, __dstf, v59);
LABEL_28:
        uint64_t v3 = v221;
        goto LABEL_88;
      default:
        *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
        *(_WORD *)((char *)v17 + 1) = *(_WORD *)((char *)v18 + 1);
        uint64_t v216 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v23 = v216[7];
        uint64_t v24 = (char *)v17 + v23;
        uint64_t v25 = (char *)v18 + v23;
        uint64_t v26 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v26))
        {
          uint64_t v27 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v26);
        }
        uint64_t v61 = v216[8];
        uint64_t v62 = (void *)((char *)v17 + v61);
        uint64_t v63 = (void *)((char *)v18 + v61);
        uint64_t v64 = type metadata accessor for TranscriptProtoUndoContext(0);
        uint64_t v215 = v21;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v63, 1, v64))
        {
          uint64_t v65 = sub_253462A5C(&qword_269CE0450);
          memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
        }
        else
        {
          uint64_t v78 = v63[1];
          *uint64_t v62 = *v63;
          v62[1] = v78;
          uint64_t v79 = v63[3];
          v62[2] = v63[2];
          v62[3] = v79;
          uint64_t v80 = v63[5];
          v62[4] = v63[4];
          v62[5] = v80;
          uint64_t v81 = *(int *)(v64 + 28);
          __srcd = (char *)v63 + v81;
          __dstg = (char *)v62 + v81;
          uint64_t v82 = sub_253B07160();
          uint64_t v183 = *(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v183(__dstg, __srcd, v82);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v62, 0, 1, v64);
        }
        uint64_t v83 = v216[9];
        uint64_t v84 = (void *)((char *)v17 + v83);
        uint64_t v85 = (char *)v18 + v83;
        uint64_t v86 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v85, 1, v86))
        {
          uint64_t v87 = v3;
          uint64_t v88 = sub_253462A5C(&qword_269CE0468);
          memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64));
        }
        else
        {
          uint64_t v89 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          uint64_t v90 = (uint64_t)v85;
          uint64_t v91 = v89;
          __dstc = (void *)v90;
          __srca = (void *)v86;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v90, 1, v89))
          {
            uint64_t v92 = sub_253462A5C(&qword_269CE0460);
            uint64_t v93 = __dstc;
            memcpy(v84, __dstc, *(void *)(*(void *)(v92 - 8) + 64));
          }
          else
          {
            uint64_t v190 = v91;
            uint64_t v100 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            uint64_t v194 = v84;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__dstc, 1, v100))
            {
              uint64_t v101 = sub_253462A5C(&qword_269CE0458);
              memcpy(v84, __dstc, *(void *)(*(void *)(v101 - 8) + 64));
            }
            else
            {
              uint64_t v188 = v100;
              uint64_t v130 = __dstc[1];
              void *v84 = *__dstc;
              v84[1] = v130;
              uint64_t v131 = __dstc[2];
              unint64_t v132 = __dstc[3];
              swift_bridgeObjectRetain();
              sub_25348A9C8(v131, v132);
              v194[2] = v131;
              v194[3] = v132;
              v194[4] = __dstc[4];
              uint64_t v133 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              unint64_t v134 = (char *)v194 + v133;
              uint64_t v135 = (char *)__dstc + v133;
              uint64_t v136 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 16))(v134, v135, v136);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v194, 0, 1, v188);
            }
            uint64_t v137 = *(int *)(v190 + 20);
            uint64_t v138 = (char *)v194 + v137;
            uint64_t v93 = __dstc;
            uint64_t v139 = (char *)__dstc + v137;
            uint64_t v140 = sub_253B07160();
            uint64_t v141 = v138;
            uint64_t v84 = v194;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v141, v139, v140);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v194, 0, 1, v190);
            uint64_t v86 = (uint64_t)__srca;
          }
          uint64_t v87 = v3;
          uint64_t v142 = *(int *)(v86 + 20);
          uint64_t v143 = (uint64_t)v84;
          uint64_t v144 = (char *)v84 + v142;
          uint64_t v145 = (char *)v93 + v142;
          uint64_t v146 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 16))(v144, v145, v146);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v143, 0, 1, (uint64_t)__srca);
        }
        uint64_t v147 = v216[10];
        uint64_t v148 = (void *)((char *)v17 + v147);
        uint64_t v149 = (void *)((char *)v18 + v147);
        uint64_t v150 = v149[1];
        *uint64_t v148 = *v149;
        v148[1] = v150;
        uint64_t v151 = v216[11];
        uint64_t v222 = (char *)v17 + v151;
        __dsti = (char *)v18 + v151;
        uint64_t v152 = sub_253B07160();
        uint64_t v153 = *(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 16);
        swift_bridgeObjectRetain();
        v153(v222, __dsti, v152);
        uint64_t v3 = v87;
        uint64_t v21 = v215;
        goto LABEL_88;
    }
  }
  uint64_t v20 = sub_253462A5C(&qword_269CE0388);
  memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
LABEL_90:
  uint64_t v176 = *(int *)(v3 + 28);
  uint64_t v177 = (char *)a1 + v176;
  uint64_t v178 = (char *)a2 + v176;
  uint64_t v179 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 16))(v177, v178, v179);
  return a1;
}

void *assignWithCopy for TranscriptProtoExternalAgentOutcome(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)((char *)v5 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      uint64_t v12 = *(int *)(v9 + 24);
      uint64_t v13 = (char *)v7 + v12;
      v578 = (char *)v8 + v12;
      uint64_t v14 = sub_253B07160();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v13, v578, v14);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = *(int *)(v9 + 24);
  uint64_t v27 = (char *)v7 + v26;
  uint64_t v28 = (char *)v8 + v26;
  uint64_t v29 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 24))(v27, v28, v29);
LABEL_7:
  uint64_t v17 = a3[6];
  uint64_t v18 = (uint64_t)v5 + v17;
  uint64_t v19 = (uint64_t)a2 + v17;
  uint64_t v20 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  int v21 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v18, 1, v20);
  int v22 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v20);
  if (!v21)
  {
    if (v22)
    {
      sub_2536FA73C();
      goto LABEL_13;
    }
    uint64_t v30 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    int v31 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v18, 1, v30);
    int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v30);
    if (v31)
    {
      if (!v32)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *(void *)uint64_t v18 = *(void *)v19;
            uint64_t v557 = (int *)type metadata accessor for TranscriptProtoActionConfirmation(0);
            uint64_t v77 = v557[5];
            uint64_t v78 = (void *)(v18 + v77);
            uint64_t v79 = (const void *)(v19 + v77);
            uint64_t v80 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v79, 1, v80))
            {
              uint64_t v81 = sub_253462A5C(&qword_269CE0480);
              memcpy(v78, v79, *(void *)(*(void *)(v81 - 8) + 64));
            }
            else
            {
              uint64_t v175 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
              uint64_t v176 = (uint64_t)v79;
              uint64_t v177 = v175;
              __srcb = (void *)v176;
              __dstf = (void *)v80;
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v176, 1, v175))
              {
                uint64_t v178 = sub_253462A5C(&qword_269CE0478);
                uint64_t v179 = __srcb;
                memcpy(v78, __srcb, *(void *)(*(void *)(v178 - 8) + 64));
              }
              else
              {
                uint64_t v482 = v177;
                uint64_t v179 = __srcb;
                *uint64_t v78 = *__srcb;
                v78[1] = __srcb[1];
                *((unsigned char *)v78 + 16) = *((unsigned char *)__srcb + 16);
                uint64_t v473 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
                uint64_t v234 = *(int *)(v473 + 24);
                uint64_t v491 = (uint64_t)v78;
                uint64_t v464 = (char *)v78 + v234;
                uint64_t v235 = (char *)__srcb + v234;
                uint64_t v236 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
                swift_bridgeObjectRetain();
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v235, 1, v236))
                {
                  uint64_t v237 = sub_253462A5C(&qword_269CE0470);
                  memcpy(v464, v235, *(void *)(*(void *)(v237 - 8) + 64));
                }
                else
                {
                  *uint64_t v464 = *v235;
                  uint64_t v313 = *(int *)(v236 + 20);
                  uint64_t v462 = &v464[v313];
                  uint64_t v471 = &v235[v313];
                  uint64_t v314 = sub_253B07160();
                  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v314 - 8) + 16))(v462, v471, v314);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v464, 0, 1, v236);
                }
                uint64_t v315 = *(int *)(v473 + 28);
                uint64_t v78 = (void *)v491;
                uint64_t v316 = v491 + v315;
                uint64_t v478 = (char *)__srcb + v315;
                uint64_t v317 = sub_253B07160();
                (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v317 - 8) + 16))(v316, v478, v317);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v491, 0, 1, v482);
                uint64_t v80 = (uint64_t)__dstf;
              }
              uint64_t v318 = *(int *)(v80 + 20);
              uint64_t v319 = (char *)v78 + v318;
              uint64_t v320 = (char *)v179 + v318;
              uint64_t v321 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v321 - 8) + 16))(v319, v320, v321);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v78, 0, 1, (uint64_t)__dstf);
            }
            uint64_t v322 = v557[6];
            uint64_t v323 = v18 + v322;
            uint64_t v324 = v19 + v322;
            uint64_t v325 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v325 - 8) + 16))(v323, v324, v325);
            goto LABEL_249;
          case 2u:
            *(void *)uint64_t v18 = *(void *)v19;
            *(void *)(v18 + 8) = *(void *)(v19 + 8);
            uint64_t v82 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
            uint64_t v582 = v18 + v82;
            __dstn = (void *)(v19 + v82);
            uint64_t v83 = sub_253B07160();
            uint64_t v558 = a3;
            uint64_t v84 = *(void (**)(uint64_t, void *, uint64_t))(*(void *)(v83 - 8) + 16);
            swift_bridgeObjectRetain();
            v84(v582, __dstn, v83);
            a3 = v558;
            goto LABEL_249;
          case 3u:
            *(void *)uint64_t v18 = *(void *)v19;
            *(void *)(v18 + 8) = *(void *)(v19 + 8);
            uint64_t v85 = *(void *)(v19 + 16);
            *(unsigned char *)(v18 + 24) = *(unsigned char *)(v19 + 24);
            *(void *)(v18 + 16) = v85;
            uint64_t v86 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
            goto LABEL_56;
          case 4u:
            *(void *)uint64_t v18 = *(void *)v19;
            *(void *)(v18 + 8) = *(void *)(v19 + 8);
            *(void *)(v18 + 16) = *(void *)(v19 + 16);
            uint64_t v87 = *(void *)(v19 + 24);
            *(unsigned char *)(v18 + 32) = *(unsigned char *)(v19 + 32);
            *(void *)(v18 + 24) = v87;
            uint64_t v88 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
            goto LABEL_63;
          case 5u:
            *(void *)uint64_t v18 = *(void *)v19;
            *(void *)(v18 + 8) = *(void *)(v19 + 8);
            *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
            uint64_t v86 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_56:
            v559 = (int *)v86;
            uint64_t v89 = *(int *)(v86 + 24);
            __dstb = (void *)(v18 + v89);
            uint64_t v90 = (const void *)(v19 + v89);
            uint64_t v91 = sub_253B08E50();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v90, 1, v91))
            {
              uint64_t v92 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(__dstb, v90, *(void *)(*(void *)(v92 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v91 - 8) + 16))(__dstb, v90, v91);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstb, 0, 1, v91);
            }
            uint64_t v134 = v559[7];
            goto LABEL_248;
          case 6u:
            *(void *)uint64_t v18 = *(void *)v19;
            *(void *)(v18 + 8) = *(void *)(v19 + 8);
            uint64_t v560 = (int *)type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
            uint64_t v93 = v560[5];
            __dstc = (void *)(v18 + v93);
            uint64_t v94 = (const void *)(v19 + v93);
            uint64_t v95 = sub_253B08E50();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v94, 1, v95))
            {
              uint64_t v96 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(__dstc, v94, *(void *)(*(void *)(v96 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v95 - 8) + 16))(__dstc, v94, v95);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstc, 0, 1, v95);
            }
            uint64_t v134 = v560[6];
            goto LABEL_248;
          case 7u:
            uint64_t v97 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v97))
            {
              uint64_t v98 = sub_253462A5C(&qword_269CE0498);
              memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v98 - 8) + 64));
              goto LABEL_246;
            }
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload != 2)
            {
              if (EnumCaseMultiPayload == 1)
              {
                *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
                uint64_t v294 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
                uint64_t v295 = v18 + v294;
                uint64_t v296 = v19 + v294;
                uint64_t v297 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v297 - 8) + 16))(v295, v296, v297);
                goto LABEL_175;
              }
              if (!EnumCaseMultiPayload)
              {
                *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
                uint64_t v181 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
                uint64_t v182 = v18 + v181;
                uint64_t v183 = v19 + v181;
                uint64_t v184 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v184 - 8) + 16))(v182, v183, v184);
LABEL_175:
                swift_storeEnumTagMultiPayload();
                goto LABEL_245;
              }
              memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v97 - 8) + 64));
              goto LABEL_245;
            }
            uint64_t v292 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v292))
            {
              uint64_t v293 = sub_253462A5C(&qword_269CE0490);
              memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v293 - 8) + 64));
LABEL_244:
              uint64_t v430 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
              uint64_t v431 = v18 + v430;
              uint64_t v432 = v19 + v430;
              uint64_t v433 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v433 - 8) + 16))(v431, v432, v433);
              swift_storeEnumTagMultiPayload();
LABEL_245:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v97);
LABEL_246:
              uint64_t v308 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_247:
              uint64_t v134 = *(int *)(v308 + 20);
LABEL_248:
              uint64_t v434 = v18 + v134;
              uint64_t v435 = v19 + v134;
              uint64_t v436 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v436 - 8) + 16))(v434, v435, v436);
LABEL_249:
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v30);
              goto LABEL_258;
            }
            __dstj = v5;
            uint64_t v573 = a3;
            int v356 = swift_getEnumCaseMultiPayload();
            if (v356 == 1)
            {
              uint64_t v402 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v402))
              {
                uint64_t v403 = sub_253462A5C(&qword_269CE0488);
                memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v403 - 8) + 64));
              }
              else
              {
                *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
                uint64_t v422 = *(int *)(v402 + 20);
                uint64_t v423 = v18 + v422;
                uint64_t v424 = v19 + v422;
                uint64_t v425 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v425 - 8) + 16))(v423, v424, v425);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v402);
              }
              uint64_t v426 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
              uint64_t v427 = v18 + v426;
              uint64_t v428 = v19 + v426;
              uint64_t v429 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v429 - 8) + 16))(v427, v428, v429);
            }
            else
            {
              if (v356)
              {
                memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v292 - 8) + 64));
LABEL_243:
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v292);
                a3 = v573;
                uint64_t v5 = __dstj;
                goto LABEL_244;
              }
              *(void *)uint64_t v18 = *(void *)v19;
              *(void *)(v18 + 8) = *(void *)(v19 + 8);
              uint64_t v357 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
              uint64_t v497 = v19 + v357;
              __srco = (void *)(v18 + v357);
              uint64_t v358 = sub_253B07160();
              uint64_t v359 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v358 - 8) + 16);
              swift_bridgeObjectRetain();
              v359(__srco, v497, v358);
            }
            swift_storeEnumTagMultiPayload();
            goto LABEL_243;
          case 8u:
            *(void *)uint64_t v18 = *(void *)v19;
            *(void *)(v18 + 8) = *(void *)(v19 + 8);
            *(void *)(v18 + 16) = *(void *)(v19 + 16);
            uint64_t v88 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
LABEL_63:
            __srch = (void *)(v19 + v88);
            __dsto = (void *)(v18 + v88);
            uint64_t v99 = sub_253B07160();
            uint64_t v561 = a3;
            uint64_t v488 = *(void (**)(void *, void *, uint64_t))(*(void *)(v99 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v488(__dsto, __srch, v99);
            goto LABEL_67;
          case 9u:
            uint64_t v100 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v100))
            {
              uint64_t v101 = sub_253462A5C(&qword_269CE04A8);
              memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v101 - 8) + 64));
            }
            else
            {
              uint64_t v185 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v185))
              {
                uint64_t v186 = sub_253462A5C(&qword_269CE04A0);
                memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v186 - 8) + 64));
              }
              else
              {
                uint64_t v238 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 16, v238))
                {
                  memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v185 - 8) + 64));
                }
                else
                {
                  *(void *)uint64_t v18 = *(void *)v19;
                  *(void *)(v18 + 8) = *(void *)(v19 + 8);
                  *(void *)(v18 + 16) = *(void *)(v19 + 16);
                  *(void *)(v18 + 24) = *(void *)(v19 + 24);
                  *(void *)(v18 + 32) = *(void *)(v19 + 32);
                  uint64_t v302 = *(int *)(v238 + 28);
                  uint64_t v495 = v19 + v302;
                  __srcn = (void *)(v18 + v302);
                  __dstx = (void *)v238;
                  uint64_t v303 = sub_253B07160();
                  uint64_t v470 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v303 - 8) + 16);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v470(__srcn, v495, v303);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 16, (uint64_t)__dstx);
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v185);
              }
              uint64_t v304 = *(int *)(v100 + 20);
              uint64_t v305 = v18 + v304;
              uint64_t v306 = v19 + v304;
              uint64_t v307 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v307 - 8) + 16))(v305, v306, v307);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v100);
            }
            uint64_t v308 = type metadata accessor for TranscriptProtoActionFailure(0);
            goto LABEL_247;
          case 0xAu:
            *(void *)uint64_t v18 = *(void *)v19;
            uint64_t v102 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
            uint64_t v583 = v18 + v102;
            __dstp = (void *)(v19 + v102);
            uint64_t v103 = sub_253B07160();
            uint64_t v561 = a3;
            __srci = *(void (**)(uint64_t, void *, uint64_t))(*(void *)(v103 - 8) + 16);
            swift_bridgeObjectRetain();
            __srci(v583, __dstp, v103);
LABEL_67:
            a3 = v561;
            goto LABEL_249;
          default:
            *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
            *(unsigned char *)(v18 + 1) = *(unsigned char *)(v19 + 1);
            *(unsigned char *)(v18 + 2) = *(unsigned char *)(v19 + 2);
            uint64_t v550 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
            uint64_t v33 = v550[7];
            uint64_t v34 = (void *)(v18 + v33);
            uint64_t v35 = (const void *)(v19 + v33);
            uint64_t v36 = sub_253B08E50();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v35, 1, v36))
            {
              uint64_t v37 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v34, 0, 1, v36);
            }
            uint64_t v135 = v550[8];
            uint64_t v136 = (void *)(v18 + v135);
            uint64_t v137 = (void *)(v19 + v135);
            uint64_t v138 = type metadata accessor for TranscriptProtoUndoContext(0);
            uint64_t v549 = v30;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v137, 1, v138))
            {
              uint64_t v139 = sub_253462A5C(&qword_269CE0450);
              memcpy(v136, v137, *(void *)(*(void *)(v139 - 8) + 64));
            }
            else
            {
              void *v136 = *v137;
              v136[1] = v137[1];
              v136[2] = v137[2];
              v136[3] = v137[3];
              v136[4] = v137[4];
              v136[5] = v137[5];
              uint64_t v194 = *(int *)(v138 + 28);
              __srck = (char *)v137 + v194;
              __dstt = (char *)v136 + v194;
              uint64_t v195 = sub_253B07160();
              uint64_t v467 = *(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v467(__dstt, __srck, v195);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v136, 0, 1, v138);
            }
            uint64_t v196 = v550[9];
            uint64_t v197 = (void *)(v18 + v196);
            uint64_t v198 = (const void *)(v19 + v196);
            uint64_t v199 = type metadata accessor for TranscriptProtoFollowUpAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v198, 1, v199))
            {
              uint64_t v200 = a3;
              uint64_t v201 = sub_253462A5C(&qword_269CE0468);
              memcpy(v197, v198, *(void *)(*(void *)(v201 - 8) + 64));
            }
            else
            {
              uint64_t v202 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
              uint64_t v203 = (uint64_t)v198;
              uint64_t v204 = v202;
              __dstg = (void *)v203;
              __srcc = (void *)v199;
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v203, 1, v202))
              {
                uint64_t v205 = sub_253462A5C(&qword_269CE0460);
                uint64_t v206 = __dstg;
                memcpy(v197, __dstg, *(void *)(*(void *)(v205 - 8) + 64));
              }
              else
              {
                uint64_t v483 = v204;
                uint64_t v281 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
                uint64_t v493 = v197;
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__dstg, 1, v281))
                {
                  uint64_t v282 = sub_253462A5C(&qword_269CE0458);
                  memcpy(v197, __dstg, *(void *)(*(void *)(v282 - 8) + 64));
                }
                else
                {
                  uint64_t v479 = v281;
                  *uint64_t v197 = *__dstg;
                  v197[1] = __dstg[1];
                  uint64_t v326 = __dstg[2];
                  unint64_t v327 = __dstg[3];
                  swift_bridgeObjectRetain();
                  sub_25348A9C8(v326, v327);
                  v493[2] = v326;
                  v493[3] = v327;
                  v493[4] = __dstg[4];
                  uint64_t v328 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                                + 28);
                  uint64_t v329 = (char *)v493 + v328;
                  uint64_t v330 = (char *)__dstg + v328;
                  uint64_t v331 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v331 - 8) + 16))(v329, v330, v331);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v493, 0, 1, v479);
                }
                uint64_t v332 = *(int *)(v483 + 20);
                uint64_t v333 = (char *)v493 + v332;
                uint64_t v206 = __dstg;
                uint64_t v334 = (char *)__dstg + v332;
                uint64_t v335 = sub_253B07160();
                uint64_t v336 = v333;
                uint64_t v197 = v493;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v335 - 8) + 16))(v336, v334, v335);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v493, 0, 1, v483);
                uint64_t v199 = (uint64_t)__srcc;
              }
              uint64_t v200 = a3;
              uint64_t v337 = *(int *)(v199 + 20);
              uint64_t v338 = (uint64_t)v197;
              uint64_t v339 = (char *)v197 + v337;
              uint64_t v340 = (char *)v206 + v337;
              uint64_t v341 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v341 - 8) + 16))(v339, v340, v341);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v338, 0, 1, (uint64_t)__srcc);
            }
            uint64_t v342 = v550[10];
            uint64_t v343 = (void *)(v18 + v342);
            uint64_t v344 = (void *)(v19 + v342);
            *uint64_t v343 = *v344;
            v343[1] = v344[1];
            uint64_t v345 = v550[11];
            int v572 = (void *)(v18 + v345);
            __dsty = (void *)(v19 + v345);
            uint64_t v346 = sub_253B07160();
            uint64_t v347 = *(void (**)(void *, void *, uint64_t))(*(void *)(v346 - 8) + 16);
            swift_bridgeObjectRetain();
            v347(v572, __dsty, v346);
            a3 = v200;
            uint64_t v30 = v549;
            goto LABEL_249;
        }
      }
      goto LABEL_25;
    }
    if (v32)
    {
      sub_2536FA73C();
LABEL_25:
      uint64_t v43 = sub_253462A5C(&qword_269CE04B0);
      memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v43 - 8) + 64));
LABEL_258:
      uint64_t v452 = *(int *)(v20 + 20);
      uint64_t v453 = v18 + v452;
      uint64_t v454 = v19 + v452;
      uint64_t v455 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v455 - 8) + 24))(v453, v454, v455);
      goto LABEL_259;
    }
    if (v5 == a2) {
      goto LABEL_258;
    }
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)uint64_t v18 = *(void *)v19;
        uint64_t v584 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v140 = *(int *)(v584 + 20);
        uint64_t v141 = (void *)(v18 + v140);
        uint64_t v142 = (void *)(v19 + v140);
        uint64_t v143 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v142, 1, v143))
        {
          uint64_t v144 = sub_253462A5C(&qword_269CE0480);
          memcpy(v141, v142, *(void *)(*(void *)(v144 - 8) + 64));
        }
        else
        {
          __dsth = (void *)type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          uint64_t v568 = (void *)v143;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v142, 1, (uint64_t)__dsth))
          {
            uint64_t v218 = sub_253462A5C(&qword_269CE0478);
            memcpy(v141, v142, *(void *)(*(void *)(v218 - 8) + 64));
          }
          else
          {
            void *v141 = *v142;
            v141[1] = v142[1];
            *((unsigned char *)v141 + 16) = *((unsigned char *)v142 + 16);
            uint64_t v496 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            __srcd = v141;
            uint64_t v309 = *(int *)(v496 + 24);
            uint64_t v477 = (char *)v141 + v309;
            uint64_t v310 = (char *)v142 + v309;
            uint64_t v311 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v310, 1, v311))
            {
              uint64_t v312 = sub_253462A5C(&qword_269CE0470);
              memcpy(v477, v310, *(void *)(*(void *)(v312 - 8) + 64));
            }
            else
            {
              unsigned char *v477 = *v310;
              uint64_t v372 = *(int *)(v311 + 20);
              v465 = &v477[v372];
              uint64_t v486 = &v310[v372];
              uint64_t v373 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v373 - 8) + 16))(v465, v486, v373);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v477, 0, 1, v311);
            }
            uint64_t v141 = __srcd;
            uint64_t v374 = *(int *)(v496 + 28);
            uint64_t v375 = (char *)__srcd + v374;
            v498 = (char *)v142 + v374;
            uint64_t v376 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v376 - 8) + 16))(v375, v498, v376);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__srcd, 0, 1, (uint64_t)__dsth);
            uint64_t v143 = (uint64_t)v568;
          }
          uint64_t v377 = *(int *)(v143 + 20);
          uint64_t v378 = (char *)v141 + v377;
          uint64_t v379 = (char *)v142 + v377;
          uint64_t v380 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v380 - 8) + 16))(v378, v379, v380);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v141, 0, 1, (uint64_t)v568);
        }
        goto LABEL_142;
      case 2u:
        *(void *)uint64_t v18 = *(void *)v19;
        *(void *)(v18 + 8) = *(void *)(v19 + 8);
        uint64_t v145 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
        uint64_t v562 = (void *)(v19 + v145);
        uint64_t v585 = v18 + v145;
        uint64_t v146 = sub_253B07160();
        uint64_t v147 = a3;
        uint64_t v148 = *(void (**)(uint64_t, void *, uint64_t))(*(void *)(v146 - 8) + 16);
        swift_bridgeObjectRetain();
        v148(v585, v562, v146);
        a3 = v147;
        goto LABEL_257;
      case 3u:
        *(void *)uint64_t v18 = *(void *)v19;
        *(void *)(v18 + 8) = *(void *)(v19 + 8);
        uint64_t v149 = *(void *)(v19 + 16);
        *(unsigned char *)(v18 + 24) = *(unsigned char *)(v19 + 24);
        *(void *)(v18 + 16) = v149;
        uint64_t v150 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        uint64_t v151 = *(int *)(v150 + 24);
        uint64_t v563 = (void *)(v18 + v151);
        uint64_t v586 = v150;
        uint64_t v152 = (const void *)(v19 + v151);
        uint64_t v153 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v152, 1, v153)) {
          goto LABEL_95;
        }
        goto LABEL_138;
      case 4u:
        *(void *)uint64_t v18 = *(void *)v19;
        *(void *)(v18 + 8) = *(void *)(v19 + 8);
        *(void *)(v18 + 16) = *(void *)(v19 + 16);
        uint64_t v155 = *(void *)(v19 + 24);
        *(unsigned char *)(v18 + 32) = *(unsigned char *)(v19 + 32);
        *(void *)(v18 + 24) = v155;
        uint64_t v156 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        v564 = (void *)(v19 + v156);
        uint64_t v587 = v18 + v156;
        uint64_t v157 = sub_253B07160();
        __dstr = *(void (**)(uint64_t, void *, uint64_t))(*(void *)(v157 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __dstr(v587, v564, v157);
        goto LABEL_257;
      case 5u:
        *(void *)uint64_t v18 = *(void *)v19;
        *(void *)(v18 + 8) = *(void *)(v19 + 8);
        *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
        uint64_t v158 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
        uint64_t v159 = *(int *)(v158 + 24);
        uint64_t v563 = (void *)(v18 + v159);
        uint64_t v586 = v158;
        uint64_t v152 = (const void *)(v19 + v159);
        uint64_t v153 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v152, 1, v153))
        {
LABEL_95:
          uint64_t v154 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v563, v152, *(void *)(*(void *)(v154 - 8) + 64));
        }
        else
        {
LABEL_138:
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v153 - 8) + 16))(v563, v152, v153);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v563, 0, 1, v153);
        }
        uint64_t v219 = *(int *)(v586 + 28);
        uint64_t v220 = v18 + v219;
        uint64_t v221 = v19 + v219;
        uint64_t v222 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v222 - 8) + 16))(v220, v221, v222);
        goto LABEL_257;
      case 6u:
        *(void *)uint64_t v18 = *(void *)v19;
        *(void *)(v18 + 8) = *(void *)(v19 + 8);
        uint64_t v160 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v161 = *(int *)(v160 + 20);
        uint64_t v565 = (void *)(v18 + v161);
        uint64_t v584 = v160;
        uint64_t v162 = (const void *)(v19 + v161);
        uint64_t v163 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v162, 1, v163))
        {
          uint64_t v164 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v565, v162, *(void *)(*(void *)(v164 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v163 - 8) + 16))(v565, v162, v163);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v565, 0, 1, v163);
        }
LABEL_142:
        uint64_t v223 = *(int *)(v584 + 24);
        uint64_t v224 = v18 + v223;
        uint64_t v225 = v19 + v223;
        uint64_t v226 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v226 - 8) + 16))(v224, v225, v226);
        goto LABEL_257;
      case 7u:
        uint64_t v165 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v165))
        {
          uint64_t v166 = sub_253462A5C(&qword_269CE0498);
          memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v166 - 8) + 64));
          goto LABEL_256;
        }
        int v227 = swift_getEnumCaseMultiPayload();
        if (v227 != 2)
        {
          if (v227 == 1)
          {
            *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
            uint64_t v352 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v353 = v18 + v352;
            uint64_t v354 = v19 + v352;
            uint64_t v355 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v355 - 8) + 16))(v353, v354, v355);
            goto LABEL_201;
          }
          if (!v227)
          {
            *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
            uint64_t v228 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v229 = v18 + v228;
            uint64_t v230 = v19 + v228;
            uint64_t v231 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v231 - 8) + 16))(v229, v230, v231);
LABEL_201:
            swift_storeEnumTagMultiPayload();
            goto LABEL_255;
          }
          memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v165 - 8) + 64));
LABEL_255:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v165);
LABEL_256:
          uint64_t v448 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
          uint64_t v449 = v18 + v448;
          uint64_t v450 = v19 + v448;
          uint64_t v451 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v451 - 8) + 16))(v449, v450, v451);
LABEL_257:
          swift_storeEnumTagMultiPayload();
          goto LABEL_258;
        }
        uint64_t v349 = a3;
        uint64_t v350 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v350))
        {
          uint64_t v351 = sub_253462A5C(&qword_269CE0490);
          memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v351 - 8) + 64));
LABEL_254:
          uint64_t v444 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v445 = v18 + v444;
          uint64_t v446 = v19 + v444;
          uint64_t v447 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v447 - 8) + 16))(v445, v446, v447);
          swift_storeEnumTagMultiPayload();
          a3 = v349;
          goto LABEL_255;
        }
        int v399 = swift_getEnumCaseMultiPayload();
        if (v399 == 1)
        {
          uint64_t v420 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v420))
          {
            uint64_t v421 = sub_253462A5C(&qword_269CE0488);
            memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v421 - 8) + 64));
          }
          else
          {
            *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
            uint64_t v437 = *(int *)(v420 + 20);
            uint64_t v438 = v18 + v437;
            uint64_t v592 = v19 + v437;
            uint64_t v439 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v439 - 8) + 16))(v438, v592, v439);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v420);
          }
          uint64_t v440 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v441 = v18 + v440;
          uint64_t v442 = v19 + v440;
          uint64_t v443 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v443 - 8) + 16))(v441, v442, v443);
        }
        else
        {
          if (v399)
          {
            memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v350 - 8) + 64));
LABEL_253:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v350);
            goto LABEL_254;
          }
          *(void *)uint64_t v18 = *(void *)v19;
          *(void *)(v18 + 8) = *(void *)(v19 + 8);
          uint64_t v400 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v575 = (void *)(v18 + v400);
          __dstba = (void *)(v19 + v400);
          uint64_t v401 = sub_253B07160();
          __srcq = *(void (**)(void *, void *, uint64_t))(*(void *)(v401 - 8) + 16);
          swift_bridgeObjectRetain();
          __srcq(v575, __dstba, v401);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_253;
      case 8u:
        *(void *)uint64_t v18 = *(void *)v19;
        *(void *)(v18 + 8) = *(void *)(v19 + 8);
        *(void *)(v18 + 16) = *(void *)(v19 + 16);
        uint64_t v167 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        uint64_t v566 = (void *)(v19 + v167);
        uint64_t v588 = v18 + v167;
        uint64_t v168 = sub_253B07160();
        __dsts = *(void (**)(uint64_t, void *, uint64_t))(*(void *)(v168 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __dsts(v588, v566, v168);
        goto LABEL_257;
      case 9u:
        uint64_t v169 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v169))
        {
          uint64_t v170 = sub_253462A5C(&qword_269CE04A8);
          memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v170 - 8) + 64));
        }
        else
        {
          uint64_t v232 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v232))
          {
            uint64_t v233 = sub_253462A5C(&qword_269CE04A0);
            memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v233 - 8) + 64));
          }
          else
          {
            uint64_t v301 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 16, v301))
            {
              memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v232 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v18 = *(void *)v19;
              *(void *)(v18 + 8) = *(void *)(v19 + 8);
              *(void *)(v18 + 16) = *(void *)(v19 + 16);
              *(void *)(v18 + 24) = *(void *)(v19 + 24);
              *(void *)(v18 + 32) = *(void *)(v19 + 32);
              uint64_t v362 = *(int *)(v301 + 28);
              uint64_t v590 = v18 + v362;
              __dstz = (void *)(v19 + v362);
              uint64_t v363 = sub_253B07160();
              uint64_t v485 = *(void (**)(uint64_t, void *, uint64_t))(*(void *)(v363 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v485(v590, __dstz, v363);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 16, v301);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v232);
          }
          uint64_t v364 = *(int *)(v169 + 20);
          uint64_t v365 = v18 + v364;
          uint64_t v366 = v19 + v364;
          uint64_t v367 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v367 - 8) + 16))(v365, v366, v367);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v169);
        }
        uint64_t v368 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
        uint64_t v369 = v18 + v368;
        uint64_t v370 = v19 + v368;
        uint64_t v371 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v371 - 8) + 16))(v369, v370, v371);
        goto LABEL_257;
      case 0xAu:
        *(void *)uint64_t v18 = *(void *)v19;
        uint64_t v171 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
        uint64_t v567 = (void *)(v19 + v171);
        uint64_t v589 = v18 + v171;
        uint64_t v172 = sub_253B07160();
        uint64_t v173 = a3;
        uint64_t v174 = *(void (**)(uint64_t, void *, uint64_t))(*(void *)(v172 - 8) + 16);
        swift_bridgeObjectRetain();
        v174(v589, v567, v172);
        a3 = v173;
        goto LABEL_257;
      default:
        *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
        *(unsigned char *)(v18 + 1) = *(unsigned char *)(v19 + 1);
        *(unsigned char *)(v18 + 2) = *(unsigned char *)(v19 + 2);
        uint64_t v579 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v44 = v579[7];
        uint64_t v45 = (void *)(v18 + v44);
        uint64_t v46 = (const void *)(v19 + v44);
        uint64_t v47 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v46, 1, v47))
        {
          uint64_t v48 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v45, 0, 1, v47);
        }
        uint64_t v213 = v579[8];
        int v214 = (void *)(v18 + v213);
        uint64_t v215 = (void *)(v19 + v213);
        uint64_t v216 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v215, 1, v216))
        {
          uint64_t v217 = sub_253462A5C(&qword_269CE0450);
          memcpy(v214, v215, *(void *)(*(void *)(v217 - 8) + 64));
        }
        else
        {
          *int v214 = *v215;
          v214[1] = v215[1];
          v214[2] = v215[2];
          v214[3] = v215[3];
          v214[4] = v215[4];
          v214[5] = v215[5];
          uint64_t v283 = *(int *)(v216 + 28);
          uint64_t v570 = (char *)v214 + v283;
          __dstw = (char *)v215 + v283;
          uint64_t v284 = sub_253B07160();
          uint64_t v476 = *(void (**)(char *, char *, uint64_t))(*(void *)(v284 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v476(v570, __dstw, v284);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v214, 0, 1, v216);
        }
        uint64_t v285 = v579[9];
        uint64_t v286 = (void *)(v18 + v285);
        uint64_t v287 = (void *)(v19 + v285);
        uint64_t v288 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v287, 1, v288))
        {
          uint64_t v289 = a3;
          uint64_t v290 = sub_253462A5C(&qword_269CE0468);
          memcpy(v286, v287, *(void *)(*(void *)(v290 - 8) + 64));
        }
        else
        {
          uint64_t v571 = (int *)type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v287, 1, (uint64_t)v571))
          {
            uint64_t v291 = sub_253462A5C(&qword_269CE0460);
            memcpy(v286, v287, *(void *)(*(void *)(v291 - 8) + 64));
          }
          else
          {
            __dsti = (void *)v288;
            __srce = (void *)type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v287, 1, (uint64_t)__srce))
            {
              uint64_t v348 = sub_253462A5C(&qword_269CE0458);
              memcpy(v286, v287, *(void *)(*(void *)(v348 - 8) + 64));
            }
            else
            {
              *uint64_t v286 = *v287;
              v286[1] = v287[1];
              uint64_t v381 = v287[2];
              unint64_t v499 = v287[3];
              swift_bridgeObjectRetain();
              sub_25348A9C8(v381, v499);
              v286[2] = v381;
              v286[3] = v499;
              v286[4] = v287[4];
              uint64_t v382 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              uint64_t v383 = (char *)v286 + v382;
              uint64_t v500 = (char *)v287 + v382;
              uint64_t v384 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v384 - 8) + 16))(v383, v500, v384);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v286, 0, 1, (uint64_t)__srce);
            }
            uint64_t v385 = v571[5];
            uint64_t v386 = (char *)v286 + v385;
            __srcp = (char *)v287 + v385;
            uint64_t v387 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v387 - 8) + 16))(v386, __srcp, v387);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v286, 0, 1, (uint64_t)v571);
            uint64_t v288 = (uint64_t)__dsti;
          }
          uint64_t v289 = a3;
          uint64_t v388 = *(int *)(v288 + 20);
          uint64_t v389 = v288;
          uint64_t v390 = (char *)v286 + v388;
          uint64_t v391 = (char *)v287 + v388;
          uint64_t v392 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v392 - 8) + 16))(v390, v391, v392);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v286, 0, 1, v389);
        }
        uint64_t v393 = v579[10];
        uint64_t v394 = (void *)(v18 + v393);
        uint64_t v395 = (void *)(v19 + v393);
        *uint64_t v394 = *v395;
        v394[1] = v395[1];
        uint64_t v396 = v579[11];
        int v574 = (void *)(v19 + v396);
        uint64_t v591 = v18 + v396;
        uint64_t v397 = sub_253B07160();
        uint64_t v398 = *(void (**)(uint64_t, void *, uint64_t))(*(void *)(v397 - 8) + 16);
        swift_bridgeObjectRetain();
        v398(v591, v574, v397);
        swift_storeEnumTagMultiPayload();
        a3 = v289;
        goto LABEL_258;
    }
  }
  if (!v22)
  {
    uint64_t v23 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v23))
    {
      uint64_t v24 = sub_253462A5C(&qword_269CE04B0);
      memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v24 - 8) + 64));
LABEL_236:
      uint64_t v416 = *(int *)(v20 + 20);
      uint64_t v417 = v18 + v416;
      uint64_t v418 = v19 + v416;
      uint64_t v419 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v419 - 8) + 16))(v417, v418, v419);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v20);
      goto LABEL_259;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)uint64_t v18 = *(void *)v19;
        uint64_t v552 = (int *)type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v49 = v552[5];
        uint64_t v50 = (void *)(v18 + v49);
        uint64_t v51 = (const void *)(v19 + v49);
        uint64_t v52 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v51, 1, v52))
        {
          uint64_t v53 = sub_253462A5C(&qword_269CE0480);
          memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          uint64_t v109 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          uint64_t v110 = (uint64_t)v51;
          uint64_t v111 = v109;
          __src = (void *)v110;
          __dstd = (void *)v52;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v110, 1, v109))
          {
            uint64_t v112 = sub_253462A5C(&qword_269CE0478);
            uint64_t v113 = __src;
            memcpy(v50, __src, *(void *)(*(void *)(v112 - 8) + 64));
          }
          else
          {
            uint64_t v480 = v111;
            uint64_t v113 = __src;
            *uint64_t v50 = *__src;
            v50[1] = __src[1];
            *((unsigned char *)v50 + 16) = *((unsigned char *)__src + 16);
            uint64_t v472 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v187 = *(int *)(v472 + 24);
            uint64_t v489 = (uint64_t)v50;
            uint64_t v463 = (char *)v50 + v187;
            uint64_t v188 = (char *)__src + v187;
            uint64_t v189 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v188, 1, v189))
            {
              uint64_t v190 = sub_253462A5C(&qword_269CE0470);
              memcpy(v463, v188, *(void *)(*(void *)(v190 - 8) + 64));
            }
            else
            {
              *uint64_t v463 = *v188;
              uint64_t v239 = *(int *)(v189 + 20);
              uint64_t v461 = &v463[v239];
              long long v468 = &v188[v239];
              uint64_t v240 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v240 - 8) + 16))(v461, v468, v240);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v463, 0, 1, v189);
            }
            uint64_t v241 = *(int *)(v472 + 28);
            uint64_t v50 = (void *)v489;
            uint64_t v242 = v489 + v241;
            uint64_t v474 = (char *)__src + v241;
            uint64_t v243 = sub_253B07160();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v243 - 8) + 16))(v242, v474, v243);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v489, 0, 1, v480);
            uint64_t v52 = (uint64_t)__dstd;
          }
          uint64_t v244 = *(int *)(v52 + 20);
          uint64_t v245 = (char *)v50 + v244;
          uint64_t v246 = (char *)v113 + v244;
          uint64_t v247 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v247 - 8) + 16))(v245, v246, v247);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v50, 0, 1, (uint64_t)__dstd);
        }
        uint64_t v248 = v552[6];
        uint64_t v249 = v18 + v248;
        uint64_t v250 = v19 + v248;
        uint64_t v251 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v251 - 8) + 16))(v249, v250, v251);
        goto LABEL_235;
      case 2u:
        *(void *)uint64_t v18 = *(void *)v19;
        *(void *)(v18 + 8) = *(void *)(v19 + 8);
        uint64_t v54 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
        uint64_t v580 = v18 + v54;
        __dstk = (void *)(v19 + v54);
        uint64_t v55 = sub_253B07160();
        uint64_t v553 = a3;
        uint64_t v56 = *(void (**)(uint64_t, void *, uint64_t))(*(void *)(v55 - 8) + 16);
        swift_bridgeObjectRetain();
        v56(v580, __dstk, v55);
        a3 = v553;
        goto LABEL_235;
      case 3u:
        *(void *)uint64_t v18 = *(void *)v19;
        *(void *)(v18 + 8) = *(void *)(v19 + 8);
        uint64_t v57 = *(void *)(v19 + 16);
        *(unsigned char *)(v18 + 24) = *(unsigned char *)(v19 + 24);
        *(void *)(v18 + 16) = v57;
        uint64_t v58 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_36;
      case 4u:
        *(void *)uint64_t v18 = *(void *)v19;
        *(void *)(v18 + 8) = *(void *)(v19 + 8);
        *(void *)(v18 + 16) = *(void *)(v19 + 16);
        uint64_t v59 = *(void *)(v19 + 24);
        *(unsigned char *)(v18 + 32) = *(unsigned char *)(v19 + 32);
        *(void *)(v18 + 24) = v59;
        uint64_t v60 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_43;
      case 5u:
        *(void *)uint64_t v18 = *(void *)v19;
        *(void *)(v18 + 8) = *(void *)(v19 + 8);
        *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
        uint64_t v58 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_36:
        uint64_t v554 = (int *)v58;
        uint64_t v61 = *(int *)(v58 + 24);
        __dst = (void *)(v18 + v61);
        uint64_t v62 = (const void *)(v19 + v61);
        uint64_t v63 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v62, 1, v63))
        {
          uint64_t v64 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(__dst, v62, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v63 - 8) + 16))(__dst, v62, v63);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v63);
        }
        uint64_t v76 = v554[7];
        goto LABEL_234;
      case 6u:
        *(void *)uint64_t v18 = *(void *)v19;
        *(void *)(v18 + 8) = *(void *)(v19 + 8);
        uint64_t v555 = (int *)type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v65 = v555[5];
        __dsta = (void *)(v18 + v65);
        uint64_t v66 = (const void *)(v19 + v65);
        uint64_t v67 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v66, 1, v67))
        {
          uint64_t v68 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(__dsta, v66, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v67 - 8) + 16))(__dsta, v66, v67);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v67);
        }
        uint64_t v76 = v555[6];
        goto LABEL_234;
      case 7u:
        uint64_t v69 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v69))
        {
          uint64_t v70 = sub_253462A5C(&qword_269CE0498);
          memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v70 - 8) + 64));
          goto LABEL_232;
        }
        int v114 = swift_getEnumCaseMultiPayload();
        if (v114 != 2)
        {
          if (v114 == 1)
          {
            *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
            uint64_t v209 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v210 = v18 + v209;
            uint64_t v211 = v19 + v209;
            uint64_t v212 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v212 - 8) + 16))(v210, v211, v212);
            goto LABEL_131;
          }
          if (!v114)
          {
            *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
            uint64_t v115 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v116 = v18 + v115;
            uint64_t v117 = v19 + v115;
            uint64_t v118 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 16))(v116, v117, v118);
LABEL_131:
            swift_storeEnumTagMultiPayload();
            goto LABEL_231;
          }
          memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v69 - 8) + 64));
LABEL_231:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v69);
LABEL_232:
          uint64_t v258 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_233:
          uint64_t v76 = *(int *)(v258 + 20);
LABEL_234:
          uint64_t v413 = v18 + v76;
          uint64_t v414 = v19 + v76;
          uint64_t v415 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v415 - 8) + 16))(v413, v414, v415);
LABEL_235:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v23);
          goto LABEL_236;
        }
        uint64_t v207 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v207))
        {
          uint64_t v208 = sub_253462A5C(&qword_269CE0490);
          memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v208 - 8) + 64));
LABEL_230:
          uint64_t v409 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v410 = v18 + v409;
          uint64_t v411 = v19 + v409;
          uint64_t v412 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v412 - 8) + 16))(v410, v411, v412);
          swift_storeEnumTagMultiPayload();
          goto LABEL_231;
        }
        int v298 = swift_getEnumCaseMultiPayload();
        if (v298 == 1)
        {
          uint64_t v360 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v360))
          {
            uint64_t v361 = sub_253462A5C(&qword_269CE0488);
            memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v361 - 8) + 64));
          }
          else
          {
            *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
            uint64_t v404 = *(int *)(v360 + 20);
            uint64_t v576 = (void *)(v18 + v404);
            __dstbb = (void *)(v19 + v404);
            uint64_t v405 = sub_253B07160();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v405 - 8) + 16))(v576, __dstbb, v405);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v360);
          }
          uint64_t v406 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v407 = v18 + v406;
          v577 = (void *)(v19 + v406);
          uint64_t v408 = sub_253B07160();
          (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v408 - 8) + 16))(v407, v577, v408);
        }
        else
        {
          if (v298)
          {
            memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v207 - 8) + 64));
LABEL_229:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v207);
            goto LABEL_230;
          }
          *(void *)uint64_t v18 = *(void *)v19;
          *(void *)(v18 + 8) = *(void *)(v19 + 8);
          uint64_t v299 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v494 = v19 + v299;
          __srcm = (void *)(v18 + v299);
          uint64_t v300 = sub_253B07160();
          v484 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v300 - 8) + 16);
          swift_bridgeObjectRetain();
          v484(__srcm, v494, v300);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_229;
      case 8u:
        *(void *)uint64_t v18 = *(void *)v19;
        *(void *)(v18 + 8) = *(void *)(v19 + 8);
        *(void *)(v18 + 16) = *(void *)(v19 + 16);
        uint64_t v60 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
LABEL_43:
        __srcf = (void *)(v19 + v60);
        __dstl = (void *)(v18 + v60);
        uint64_t v71 = sub_253B07160();
        uint64_t v556 = a3;
        v487 = *(void (**)(void *, void *, uint64_t))(*(void *)(v71 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v487(__dstl, __srcf, v71);
        goto LABEL_47;
      case 9u:
        uint64_t v72 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v72))
        {
          uint64_t v73 = sub_253462A5C(&qword_269CE04A8);
          memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v73 - 8) + 64));
        }
        else
        {
          uint64_t v119 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v119))
          {
            uint64_t v120 = sub_253462A5C(&qword_269CE04A0);
            memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v120 - 8) + 64));
          }
          else
          {
            uint64_t v191 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 16, v191))
            {
              memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v119 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v18 = *(void *)v19;
              *(void *)(v18 + 8) = *(void *)(v19 + 8);
              *(void *)(v18 + 16) = *(void *)(v19 + 16);
              *(void *)(v18 + 24) = *(void *)(v19 + 24);
              *(void *)(v18 + 32) = *(void *)(v19 + 32);
              uint64_t v252 = *(int *)(v191 + 28);
              uint64_t v492 = v19 + v252;
              __srcl = (void *)(v18 + v252);
              __dstu = (void *)v191;
              uint64_t v253 = sub_253B07160();
              uint64_t v469 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v253 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v469(__srcl, v492, v253);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 16, (uint64_t)__dstu);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v119);
          }
          uint64_t v254 = *(int *)(v72 + 20);
          uint64_t v255 = v18 + v254;
          uint64_t v256 = v19 + v254;
          uint64_t v257 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v257 - 8) + 16))(v255, v256, v257);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v72);
        }
        uint64_t v258 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_233;
      case 0xAu:
        *(void *)uint64_t v18 = *(void *)v19;
        uint64_t v74 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
        uint64_t v581 = v18 + v74;
        __dstm = (void *)(v19 + v74);
        uint64_t v75 = sub_253B07160();
        uint64_t v556 = a3;
        __srcg = *(void (**)(uint64_t, void *, uint64_t))(*(void *)(v75 - 8) + 16);
        swift_bridgeObjectRetain();
        __srcg(v581, __dstm, v75);
LABEL_47:
        a3 = v556;
        goto LABEL_235;
      default:
        *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
        *(unsigned char *)(v18 + 1) = *(unsigned char *)(v19 + 1);
        *(unsigned char *)(v18 + 2) = *(unsigned char *)(v19 + 2);
        uint64_t v551 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v38 = v551[7];
        uint64_t v39 = (void *)(v18 + v38);
        uint64_t v40 = (const void *)(v19 + v38);
        uint64_t v41 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v40, 1, v41))
        {
          uint64_t v42 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v39, 0, 1, v41);
        }
        uint64_t v104 = v551[8];
        uint64_t v105 = (void *)(v18 + v104);
        uint64_t v106 = (void *)(v19 + v104);
        uint64_t v107 = type metadata accessor for TranscriptProtoUndoContext(0);
        uint64_t v548 = v23;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v106, 1, v107))
        {
          uint64_t v108 = sub_253462A5C(&qword_269CE0450);
          memcpy(v105, v106, *(void *)(*(void *)(v108 - 8) + 64));
        }
        else
        {
          void *v105 = *v106;
          v105[1] = v106[1];
          v105[2] = v106[2];
          v105[3] = v106[3];
          v105[4] = v106[4];
          v105[5] = v106[5];
          uint64_t v121 = *(int *)(v107 + 28);
          __srcj = (char *)v106 + v121;
          __dstq = (char *)v105 + v121;
          uint64_t v122 = sub_253B07160();
          uint64_t v466 = *(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v466(__dstq, __srcj, v122);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v105, 0, 1, v107);
        }
        uint64_t v123 = v551[9];
        uint64_t v124 = (void *)(v18 + v123);
        uint64_t v125 = (const void *)(v19 + v123);
        uint64_t v126 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v125, 1, v126))
        {
          uint64_t v127 = a3;
          uint64_t v128 = sub_253462A5C(&qword_269CE0468);
          memcpy(v124, v125, *(void *)(*(void *)(v128 - 8) + 64));
        }
        else
        {
          uint64_t v129 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          uint64_t v130 = (uint64_t)v125;
          uint64_t v131 = v129;
          __dste = (void *)v130;
          __srca = (void *)v126;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v130, 1, v129))
          {
            uint64_t v132 = sub_253462A5C(&qword_269CE0460);
            uint64_t v133 = __dste;
            memcpy(v124, __dste, *(void *)(*(void *)(v132 - 8) + 64));
          }
          else
          {
            uint64_t v481 = v131;
            uint64_t v192 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            v490 = v124;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__dste, 1, v192))
            {
              uint64_t v193 = sub_253462A5C(&qword_269CE0458);
              memcpy(v124, __dste, *(void *)(*(void *)(v193 - 8) + 64));
            }
            else
            {
              uint64_t v475 = v192;
              void *v124 = *__dste;
              v124[1] = __dste[1];
              uint64_t v259 = __dste[2];
              unint64_t v260 = __dste[3];
              swift_bridgeObjectRetain();
              sub_25348A9C8(v259, v260);
              v490[2] = v259;
              v490[3] = v260;
              v490[4] = __dste[4];
              uint64_t v261 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              uint64_t v262 = (char *)v490 + v261;
              uint64_t v263 = (char *)__dste + v261;
              uint64_t v264 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v264 - 8) + 16))(v262, v263, v264);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v490, 0, 1, v475);
            }
            uint64_t v265 = *(int *)(v481 + 20);
            uint64_t v266 = (char *)v490 + v265;
            uint64_t v133 = __dste;
            uint64_t v267 = (char *)__dste + v265;
            uint64_t v268 = sub_253B07160();
            uint64_t v269 = v266;
            uint64_t v124 = v490;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v268 - 8) + 16))(v269, v267, v268);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v490, 0, 1, v481);
            uint64_t v126 = (uint64_t)__srca;
          }
          uint64_t v127 = a3;
          uint64_t v270 = *(int *)(v126 + 20);
          uint64_t v271 = (uint64_t)v124;
          uint64_t v272 = (char *)v124 + v270;
          uint64_t v273 = (char *)v133 + v270;
          uint64_t v274 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v274 - 8) + 16))(v272, v273, v274);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v271, 0, 1, (uint64_t)__srca);
        }
        uint64_t v275 = v551[10];
        uint64_t v276 = (void *)(v18 + v275);
        int v277 = (void *)(v19 + v275);
        void *v276 = *v277;
        v276[1] = v277[1];
        uint64_t v278 = v551[11];
        uint64_t v569 = (void *)(v18 + v278);
        __dstv = (void *)(v19 + v278);
        uint64_t v279 = sub_253B07160();
        uint64_t v280 = *(void (**)(void *, void *, uint64_t))(*(void *)(v279 - 8) + 16);
        swift_bridgeObjectRetain();
        v280(v569, __dstv, v279);
        a3 = v127;
        uint64_t v23 = v548;
        goto LABEL_235;
    }
  }
LABEL_13:
  uint64_t v25 = sub_253462A5C(&qword_269CE0388);
  memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v25 - 8) + 64));
LABEL_259:
  uint64_t v456 = a3[7];
  uint64_t v457 = (char *)v5 + v456;
  uint64_t v458 = (char *)a2 + v456;
  uint64_t v459 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v459 - 8) + 24))(v457, v458, v459);
  return v5;
}

void *initializeWithTake for TranscriptProtoExternalAgentOutcome(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (_DWORD *)((char *)a1 + v6);
  uint64_t v8 = (_DWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *uint64_t v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    uint64_t v11 = *(int *)(v9 + 24);
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    uint64_t v14 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18))
  {
    uint64_t v20 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v20))
    {
      uint64_t v21 = sub_253462A5C(&qword_269CE04B0);
      memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
LABEL_85:
      uint64_t v135 = *(int *)(v18 + 20);
      uint64_t v136 = (char *)v16 + v135;
      uint64_t v137 = (char *)v17 + v135;
      uint64_t v138 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 32))(v136, v137, v138);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v18);
      goto LABEL_86;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        void *v16 = *v17;
        uint64_t v27 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v28 = *(int *)(v27 + 20);
        __dsta = (char *)v16 + v28;
        uint64_t v29 = (char *)v17 + v28;
        uint64_t v30 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v30))
        {
          uint64_t v31 = sub_253462A5C(&qword_269CE0480);
          memcpy(__dsta, v29, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          uint64_t v154 = v30;
          uint64_t v156 = (void *)v27;
          uint64_t v55 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v55))
          {
            uint64_t v56 = sub_253462A5C(&qword_269CE0478);
            uint64_t v57 = (uint64_t)__dsta;
            memcpy(__dsta, v29, *(void *)(*(void *)(v56 - 8) + 64));
          }
          else
          {
            *(_OWORD *)__dsta = *(_OWORD *)v29;
            __dsta[16] = v29[16];
            uint64_t v76 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v77 = *(int *)(v76 + 24);
            uint64_t v145 = &__dsta[v77];
            uint64_t v146 = v76;
            uint64_t v151 = v29;
            uint64_t v78 = &v29[v77];
            uint64_t v79 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            uint64_t v148 = v55;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v78, 1, v79))
            {
              uint64_t v80 = sub_253462A5C(&qword_269CE0470);
              memcpy(v145, v78, *(void *)(*(void *)(v80 - 8) + 64));
            }
            else
            {
              *uint64_t v145 = *v78;
              uint64_t v97 = *(int *)(v79 + 20);
              uint64_t v144 = &v145[v97];
              uint64_t v98 = &v78[v97];
              uint64_t v99 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v99 - 8) + 32))(v144, v98, v99);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v145, 0, 1, v79);
            }
            uint64_t v100 = *(int *)(v146 + 28);
            uint64_t v57 = (uint64_t)__dsta;
            uint64_t v101 = &__dsta[v100];
            uint64_t v29 = v151;
            uint64_t v147 = &v151[v100];
            uint64_t v102 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v102 - 8) + 32))(v101, v147, v102);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v148);
          }
          uint64_t v103 = *(int *)(v154 + 20);
          __dste = (void *)(v57 + v103);
          uint64_t v104 = &v29[v103];
          uint64_t v105 = sub_253B07160();
          (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v105 - 8) + 32))(__dste, v104, v105);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v57, 0, 1, v154);
          uint64_t v27 = (uint64_t)v156;
        }
        uint64_t v35 = *(int *)(v27 + 24);
        goto LABEL_84;
      case 2u:
        *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        uint64_t v32 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_83;
      case 3u:
        *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        v16[2] = v17[2];
        *((unsigned char *)v16 + 24) = *((unsigned char *)v17 + 24);
        uint64_t v33 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_17;
      case 4u:
        *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        uint64_t v34 = v17[3];
        v16[2] = v17[2];
        v16[3] = v34;
        *((unsigned char *)v16 + 32) = *((unsigned char *)v17 + 32);
        uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_84;
      case 5u:
        *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        *((unsigned char *)v16 + 16) = *((unsigned char *)v17 + 16);
        uint64_t v33 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_17:
        uint64_t v36 = v33;
        uint64_t v37 = *(int *)(v33 + 24);
        __dstb = (char *)v16 + v37;
        uint64_t v38 = (char *)v17 + v37;
        uint64_t v39 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, v39))
        {
          uint64_t v40 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(__dstb, v38, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(__dstb, v38, v39);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstb, 0, 1, v39);
        }
        uint64_t v35 = *(int *)(v36 + 28);
        goto LABEL_84;
      case 6u:
        *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        uint64_t v41 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v42 = *(int *)(v41 + 20);
        __dstc = (char *)v16 + v42;
        uint64_t v43 = (char *)v17 + v42;
        uint64_t v44 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v43, 1, v44))
        {
          uint64_t v45 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(__dstc, v43, *(void *)(*(void *)(v45 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(__dstc, v43, v44);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstc, 0, 1, v44);
        }
        uint64_t v35 = *(int *)(v41 + 24);
        goto LABEL_84;
      case 7u:
        uint64_t v46 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v46))
        {
          uint64_t v47 = sub_253462A5C(&qword_269CE0498);
          memcpy(v16, v17, *(void *)(*(void *)(v47 - 8) + 64));
          goto LABEL_82;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
            uint64_t v85 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v86 = (char *)v16 + v85;
            uint64_t v87 = (char *)v17 + v85;
            uint64_t v88 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v86, v87, v88);
            goto LABEL_56;
          }
          if (!EnumCaseMultiPayload)
          {
            *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
            uint64_t v59 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v60 = (char *)v16 + v59;
            uint64_t v61 = (char *)v17 + v59;
            uint64_t v62 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
LABEL_56:
            swift_storeEnumTagMultiPayload();
            goto LABEL_81;
          }
          memcpy(v16, v17, *(void *)(*(void *)(v46 - 8) + 64));
LABEL_81:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v46);
LABEL_82:
          uint64_t v32 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_83:
          uint64_t v35 = *(int *)(v32 + 20);
LABEL_84:
          uint64_t v132 = (char *)v16 + v35;
          uint64_t v133 = (char *)v17 + v35;
          uint64_t v134 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 32))(v132, v133, v134);
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v20);
          goto LABEL_85;
        }
        uint64_t v83 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v83))
        {
          uint64_t v84 = sub_253462A5C(&qword_269CE0490);
          memcpy(v16, v17, *(void *)(*(void *)(v84 - 8) + 64));
LABEL_80:
          uint64_t v128 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v129 = (char *)v16 + v128;
          uint64_t v130 = (char *)v17 + v128;
          uint64_t v131 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 32))(v129, v130, v131);
          swift_storeEnumTagMultiPayload();
          goto LABEL_81;
        }
        int v117 = swift_getEnumCaseMultiPayload();
        if (v117 == 1)
        {
          uint64_t v121 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v121))
          {
            uint64_t v122 = sub_253462A5C(&qword_269CE0488);
            memcpy(v16, v17, *(void *)(*(void *)(v122 - 8) + 64));
          }
          else
          {
            *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
            uint64_t v123 = *(int *)(v121 + 20);
            uint64_t v160 = (char *)v17 + v123;
            __dstg = (char *)v16 + v123;
            uint64_t v124 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 32))(__dstg, v160, v124);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v121);
          }
          uint64_t v125 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v126 = (char *)v16 + v125;
          __dsth = (char *)v17 + v125;
          uint64_t v127 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 32))(v126, __dsth, v127);
        }
        else
        {
          if (v117)
          {
            memcpy(v16, v17, *(void *)(*(void *)(v83 - 8) + 64));
LABEL_79:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v83);
            goto LABEL_80;
          }
          *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
          uint64_t v118 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v119 = (char *)v16 + v118;
          __dstf = (char *)v17 + v118;
          uint64_t v120 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 32))(v119, __dstf, v120);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_79;
      case 8u:
        void *v16 = *v17;
        *(_OWORD *)(v16 + 1) = *(_OWORD *)(v17 + 1);
        uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        goto LABEL_84;
      case 9u:
        uint64_t v48 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v48))
        {
          uint64_t v49 = sub_253462A5C(&qword_269CE04A8);
          memcpy(v16, v17, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          uint64_t v63 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v63))
          {
            uint64_t v64 = sub_253462A5C(&qword_269CE04A0);
            memcpy(v16, v17, *(void *)(*(void *)(v64 - 8) + 64));
          }
          else
          {
            uint64_t v75 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 16, v75))
            {
              memcpy(v16, v17, *(void *)(*(void *)(v63 - 8) + 64));
            }
            else
            {
              long long v89 = *((_OWORD *)v17 + 1);
              *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
              *((_OWORD *)v16 + 1) = v89;
              v16[4] = v17[4];
              uint64_t v90 = *(int *)(v75 + 28);
              __dstd = (void *)v75;
              uint64_t v91 = (char *)v16 + v90;
              uint64_t v159 = (char *)v17 + v90;
              uint64_t v92 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 32))(v91, v159, v92);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 16, (uint64_t)__dstd);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v63);
          }
          uint64_t v93 = *(int *)(v48 + 20);
          uint64_t v94 = (char *)v16 + v93;
          uint64_t v95 = (char *)v17 + v93;
          uint64_t v96 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32))(v94, v95, v96);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v48);
        }
        uint64_t v32 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_83;
      case 0xAu:
        void *v16 = *v17;
        uint64_t v32 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
        goto LABEL_83;
      default:
        *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
        *(_WORD *)((char *)v16 + 1) = *(_WORD *)((char *)v17 + 1);
        __dst = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v22 = __dst[7];
        uint64_t v23 = (char *)v16 + v22;
        uint64_t v24 = (char *)v17 + v22;
        uint64_t v25 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
        {
          uint64_t v26 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v25);
        }
        uint64_t v50 = __dst[8];
        uint64_t v51 = (_OWORD *)((char *)v16 + v50);
        uint64_t v52 = (_OWORD *)((char *)v17 + v50);
        uint64_t v53 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v53))
        {
          uint64_t v54 = sub_253462A5C(&qword_269CE0450);
          memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          long long v65 = v52[1];
          *uint64_t v51 = *v52;
          v51[1] = v65;
          v51[2] = v52[2];
          uint64_t v66 = *(int *)(v53 + 28);
          uint64_t v157 = (char *)v51 + v66;
          uint64_t v67 = (char *)v52 + v66;
          uint64_t v68 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v157, v67, v68);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v51, 0, 1, v53);
        }
        uint64_t v69 = __dst[9];
        uint64_t v158 = (_OWORD *)((char *)v16 + v69);
        uint64_t v70 = (_OWORD *)((char *)v17 + v69);
        uint64_t v71 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v70, 1, v71))
        {
          uint64_t v72 = sub_253462A5C(&qword_269CE0468);
          memcpy(v158, v70, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          uint64_t v73 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          uint64_t v155 = v71;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v70, 1, v73))
          {
            uint64_t v74 = sub_253462A5C(&qword_269CE0460);
            memcpy(v158, v70, *(void *)(*(void *)(v74 - 8) + 64));
          }
          else
          {
            uint64_t v152 = v73;
            uint64_t v81 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v70, 1, v81))
            {
              uint64_t v82 = sub_253462A5C(&qword_269CE0458);
              memcpy(v158, v70, *(void *)(*(void *)(v82 - 8) + 64));
            }
            else
            {
              long long v106 = v70[1];
              _OWORD *v158 = *v70;
              v158[1] = v106;
              *((void *)v158 + 4) = *((void *)v70 + 4);
              uint64_t v107 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              uint64_t v149 = v81;
              uint64_t v108 = (char *)v158 + v107;
              uint64_t v109 = (char *)v70 + v107;
              uint64_t v110 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 32))(v108, v109, v110);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v158, 0, 1, v149);
            }
            uint64_t v111 = *(int *)(v152 + 20);
            uint64_t v150 = (char *)v158 + v111;
            uint64_t v112 = (char *)v70 + v111;
            uint64_t v113 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 32))(v150, v112, v113);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v158, 0, 1, v152);
            uint64_t v71 = v155;
          }
          uint64_t v114 = *(int *)(v71 + 20);
          uint64_t v153 = (char *)v158 + v114;
          uint64_t v115 = (char *)v70 + v114;
          uint64_t v116 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 32))(v153, v115, v116);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v158, 0, 1, v155);
        }
        *(_OWORD *)((char *)v16 + __dst[10]) = *(_OWORD *)((char *)v17 + __dst[10]);
        uint64_t v35 = __dst[11];
        goto LABEL_84;
    }
  }
  uint64_t v19 = sub_253462A5C(&qword_269CE0388);
  memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
LABEL_86:
  uint64_t v139 = a3[7];
  uint64_t v140 = (char *)a1 + v139;
  uint64_t v141 = (char *)a2 + v139;
  uint64_t v142 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v140, v141, v142);
  return a1;
}

void *assignWithTake for TranscriptProtoExternalAgentOutcome(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
      *(_OWORD *)(v7 + 1) = *(_OWORD *)(v8 + 1);
      uint64_t v12 = *(int *)(v9 + 24);
      uint64_t v13 = (char *)v7 + v12;
      uint64_t v14 = (char *)v8 + v12;
      uint64_t v15 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
  uint64_t v26 = v8[2];
  v7[1] = v8[1];
  v7[2] = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(int *)(v9 + 24);
  uint64_t v28 = (char *)v7 + v27;
  uint64_t v29 = (char *)v8 + v27;
  uint64_t v30 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
LABEL_7:
  uint64_t v17 = a3[6];
  uint64_t v18 = (uint64_t)a1 + v17;
  uint64_t v19 = (uint64_t)a2 + v17;
  uint64_t v20 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  int v21 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v18, 1, v20);
  int v22 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v20);
  if (!v21)
  {
    if (v22)
    {
      sub_2536FA73C();
      goto LABEL_13;
    }
    uint64_t v31 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v18, 1, v31);
    int v33 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v31);
    if (v32)
    {
      if (!v33)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *(void *)uint64_t v18 = *(void *)v19;
            uint64_t v73 = type metadata accessor for TranscriptProtoActionConfirmation(0);
            uint64_t v74 = *(int *)(v73 + 20);
            __dste = (unsigned char *)(v18 + v74);
            uint64_t v75 = (unsigned char *)(v19 + v74);
            uint64_t v76 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v75, 1, v76))
            {
              uint64_t v77 = sub_253462A5C(&qword_269CE0480);
              memcpy(__dste, v75, *(void *)(*(void *)(v77 - 8) + 64));
            }
            else
            {
              uint64_t v448 = v76;
              uint64_t v456 = (void *)v73;
              uint64_t v163 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v75, 1, v163))
              {
                uint64_t v164 = sub_253462A5C(&qword_269CE0478);
                uint64_t v165 = (uint64_t)__dste;
                memcpy(__dste, v75, *(void *)(*(void *)(v164 - 8) + 64));
              }
              else
              {
                *(_OWORD *)__dste = *(_OWORD *)v75;
                __dste[16] = v75[16];
                uint64_t v220 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
                uint64_t v221 = *(int *)(v220 + 24);
                uint64_t v422 = &__dste[v221];
                uint64_t v425 = v220;
                uint64_t v438 = v75;
                uint64_t v222 = &v75[v221];
                uint64_t v223 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
                uint64_t v431 = v163;
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v222, 1, v223))
                {
                  uint64_t v224 = sub_253462A5C(&qword_269CE0470);
                  memcpy(v422, v222, *(void *)(*(void *)(v224 - 8) + 64));
                }
                else
                {
                  *uint64_t v422 = *v222;
                  uint64_t v290 = *(int *)(v223 + 20);
                  uint64_t v420 = &v422[v290];
                  uint64_t v291 = &v222[v290];
                  uint64_t v292 = sub_253B07160();
                  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v292 - 8) + 32))(v420, v291, v292);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v422, 0, 1, v223);
                }
                uint64_t v293 = *(int *)(v425 + 28);
                uint64_t v165 = (uint64_t)__dste;
                uint64_t v294 = &__dste[v293];
                uint64_t v75 = v438;
                uint64_t v427 = &v438[v293];
                uint64_t v295 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v295 - 8) + 32))(v294, v427, v295);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dste, 0, 1, v431);
              }
              uint64_t v296 = *(int *)(v448 + 20);
              __dsto = (void *)(v165 + v296);
              uint64_t v297 = &v75[v296];
              uint64_t v298 = sub_253B07160();
              (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v298 - 8) + 32))(__dsto, v297, v298);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v165, 0, 1, v448);
              uint64_t v73 = (uint64_t)v456;
            }
            uint64_t v81 = *(int *)(v73 + 24);
            goto LABEL_243;
          case 2u:
            *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            uint64_t v78 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
            goto LABEL_242;
          case 3u:
            *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            *(void *)(v18 + 16) = *(void *)(v19 + 16);
            *(unsigned char *)(v18 + 24) = *(unsigned char *)(v19 + 24);
            uint64_t v79 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
            goto LABEL_54;
          case 4u:
            *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            uint64_t v80 = *(void *)(v19 + 24);
            *(void *)(v18 + 16) = *(void *)(v19 + 16);
            *(void *)(v18 + 24) = v80;
            *(unsigned char *)(v18 + 32) = *(unsigned char *)(v19 + 32);
            uint64_t v81 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
            goto LABEL_243;
          case 5u:
            *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
            uint64_t v79 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_54:
            uint64_t v82 = v79;
            uint64_t v83 = *(int *)(v79 + 24);
            __dstf = (void *)(v18 + v83);
            uint64_t v84 = (const void *)(v19 + v83);
            uint64_t v85 = sub_253B08E50();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v84, 1, v85))
            {
              uint64_t v86 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(__dstf, v84, *(void *)(*(void *)(v86 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v85 - 8) + 32))(__dstf, v84, v85);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstf, 0, 1, v85);
            }
            uint64_t v81 = *(int *)(v82 + 28);
            goto LABEL_243;
          case 6u:
            *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            uint64_t v87 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
            uint64_t v88 = *(int *)(v87 + 20);
            __dstg = (void *)(v18 + v88);
            long long v89 = (const void *)(v19 + v88);
            uint64_t v90 = sub_253B08E50();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v89, 1, v90))
            {
              uint64_t v91 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(__dstg, v89, *(void *)(*(void *)(v91 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v90 - 8) + 32))(__dstg, v89, v90);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstg, 0, 1, v90);
            }
            uint64_t v81 = *(int *)(v87 + 24);
            goto LABEL_243;
          case 7u:
            uint64_t v92 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v92))
            {
              uint64_t v93 = sub_253462A5C(&qword_269CE0498);
              memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v93 - 8) + 64));
              goto LABEL_241;
            }
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload != 2)
            {
              if (EnumCaseMultiPayload == 1)
              {
                *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
                uint64_t v268 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
                uint64_t v269 = v18 + v268;
                uint64_t v270 = v19 + v268;
                uint64_t v271 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v271 - 8) + 32))(v269, v270, v271);
                goto LABEL_171;
              }
              if (!EnumCaseMultiPayload)
              {
                *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
                uint64_t v167 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
                uint64_t v168 = v18 + v167;
                uint64_t v169 = v19 + v167;
                uint64_t v170 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v170 - 8) + 32))(v168, v169, v170);
LABEL_171:
                swift_storeEnumTagMultiPayload();
                goto LABEL_240;
              }
              memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v92 - 8) + 64));
              goto LABEL_240;
            }
            uint64_t v266 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v266))
            {
              uint64_t v267 = sub_253462A5C(&qword_269CE0490);
              memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v267 - 8) + 64));
LABEL_239:
              uint64_t v390 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
              uint64_t v391 = v18 + v390;
              uint64_t v392 = v19 + v390;
              uint64_t v393 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v393 - 8) + 32))(v391, v392, v393);
              swift_storeEnumTagMultiPayload();
LABEL_240:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v92);
LABEL_241:
              uint64_t v78 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_242:
              uint64_t v81 = *(int *)(v78 + 20);
LABEL_243:
              uint64_t v394 = v18 + v81;
              uint64_t v395 = v19 + v81;
              uint64_t v396 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v396 - 8) + 32))(v394, v395, v396);
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v31);
              goto LABEL_253;
            }
            int v317 = swift_getEnumCaseMultiPayload();
            if (v317 == 1)
            {
              uint64_t v365 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v365))
              {
                uint64_t v366 = sub_253462A5C(&qword_269CE0488);
                memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v366 - 8) + 64));
              }
              else
              {
                *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
                uint64_t v385 = *(int *)(v365 + 20);
                uint64_t v464 = (void *)(v19 + v385);
                __dstu = (void *)(v18 + v385);
                uint64_t v386 = sub_253B07160();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v386 - 8) + 32))(__dstu, v464, v386);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v365);
              }
              uint64_t v387 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
              uint64_t v388 = v18 + v387;
              __dstv = (void *)(v19 + v387);
              uint64_t v389 = sub_253B07160();
              (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v389 - 8) + 32))(v388, __dstv, v389);
            }
            else
            {
              if (v317)
              {
                memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v266 - 8) + 64));
LABEL_238:
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v266);
                goto LABEL_239;
              }
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
              uint64_t v318 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
              uint64_t v319 = v18 + v318;
              __dstp = (void *)(v19 + v318);
              uint64_t v320 = sub_253B07160();
              (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v320 - 8) + 32))(v319, __dstp, v320);
            }
            swift_storeEnumTagMultiPayload();
            goto LABEL_238;
          case 8u:
            *(void *)uint64_t v18 = *(void *)v19;
            *(_OWORD *)(v18 + 8) = *(_OWORD *)(v19 + 8);
            uint64_t v81 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
            goto LABEL_243;
          case 9u:
            uint64_t v94 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v94))
            {
              uint64_t v95 = sub_253462A5C(&qword_269CE04A8);
              memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v95 - 8) + 64));
            }
            else
            {
              uint64_t v171 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v171))
              {
                uint64_t v172 = sub_253462A5C(&qword_269CE04A0);
                memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v172 - 8) + 64));
              }
              else
              {
                uint64_t v225 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 16, v225))
                {
                  memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v171 - 8) + 64));
                }
                else
                {
                  long long v277 = *(_OWORD *)(v19 + 16);
                  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
                  *(_OWORD *)(v18 + 16) = v277;
                  *(void *)(v18 + 32) = *(void *)(v19 + 32);
                  uint64_t v278 = *(int *)(v225 + 28);
                  __dstn = (void *)v225;
                  uint64_t v279 = v18 + v278;
                  uint64_t v462 = (void *)(v19 + v278);
                  uint64_t v280 = sub_253B07160();
                  (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v280 - 8) + 32))(v279, v462, v280);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 16, (uint64_t)__dstn);
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v171);
              }
              uint64_t v281 = *(int *)(v94 + 20);
              uint64_t v282 = v18 + v281;
              uint64_t v283 = v19 + v281;
              uint64_t v284 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v284 - 8) + 32))(v282, v283, v284);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v94);
            }
            uint64_t v78 = type metadata accessor for TranscriptProtoActionFailure(0);
            goto LABEL_242;
          case 0xAu:
            *(void *)uint64_t v18 = *(void *)v19;
            uint64_t v78 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
            goto LABEL_242;
          default:
            *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
            *(_WORD *)(v18 + 1) = *(_WORD *)(v19 + 1);
            __dst = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
            uint64_t v34 = __dst[7];
            uint64_t v35 = (void *)(v18 + v34);
            uint64_t v36 = (const void *)(v19 + v34);
            uint64_t v37 = sub_253B08E50();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v36, 1, v37))
            {
              uint64_t v38 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v35, 0, 1, v37);
            }
            uint64_t v121 = __dst[8];
            uint64_t v122 = (_OWORD *)(v18 + v121);
            uint64_t v123 = (_OWORD *)(v19 + v121);
            uint64_t v124 = type metadata accessor for TranscriptProtoUndoContext(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v123, 1, v124))
            {
              uint64_t v125 = sub_253462A5C(&qword_269CE0450);
              memcpy(v122, v123, *(void *)(*(void *)(v125 - 8) + 64));
            }
            else
            {
              long long v181 = v123[1];
              *uint64_t v122 = *v123;
              v122[1] = v181;
              v122[2] = v123[2];
              uint64_t v182 = *(int *)(v124 + 28);
              uint64_t v457 = (char *)v122 + v182;
              uint64_t v183 = (char *)v123 + v182;
              uint64_t v184 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 32))(v457, v183, v184);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v122, 0, 1, v124);
            }
            uint64_t v185 = __dst[9];
            uint64_t v458 = (_OWORD *)(v18 + v185);
            uint64_t v186 = (_OWORD *)(v19 + v185);
            uint64_t v187 = type metadata accessor for TranscriptProtoFollowUpAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v186, 1, v187))
            {
              uint64_t v188 = sub_253462A5C(&qword_269CE0468);
              memcpy(v458, v186, *(void *)(*(void *)(v188 - 8) + 64));
            }
            else
            {
              uint64_t v189 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
              uint64_t v449 = v187;
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v186, 1, v189))
              {
                uint64_t v190 = sub_253462A5C(&qword_269CE0460);
                memcpy(v458, v186, *(void *)(*(void *)(v190 - 8) + 64));
              }
              else
              {
                uint64_t v254 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v186, 1, v254))
                {
                  uint64_t v255 = sub_253462A5C(&qword_269CE0458);
                  memcpy(v458, v186, *(void *)(*(void *)(v255 - 8) + 64));
                }
                else
                {
                  long long v299 = v186[1];
                  _OWORD *v458 = *v186;
                  v458[1] = v299;
                  *((void *)v458 + 4) = *((void *)v186 + 4);
                  uint64_t v300 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                                + 28);
                  uint64_t v428 = (char *)v458 + v300;
                  uint64_t v435 = v254;
                  uint64_t v301 = (char *)v186 + v300;
                  uint64_t v302 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v302 - 8) + 32))(v428, v301, v302);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v458, 0, 1, v435);
                }
                uint64_t v441 = v189;
                uint64_t v303 = *(int *)(v189 + 20);
                uint64_t v304 = (char *)v458 + v303;
                uint64_t v305 = (char *)v186 + v303;
                uint64_t v306 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v306 - 8) + 32))(v304, v305, v306);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v458, 0, 1, v441);
                uint64_t v187 = v449;
              }
              uint64_t v307 = *(int *)(v187 + 20);
              uint64_t v442 = (char *)v458 + v307;
              uint64_t v308 = (char *)v186 + v307;
              uint64_t v309 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v309 - 8) + 32))(v442, v308, v309);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v458, 0, 1, v449);
            }
            *(_OWORD *)(v18 + __dst[10]) = *(_OWORD *)(v19 + __dst[10]);
            uint64_t v81 = __dst[11];
            goto LABEL_243;
        }
      }
      goto LABEL_25;
    }
    if (v33)
    {
      sub_2536FA73C();
LABEL_25:
      uint64_t v44 = sub_253462A5C(&qword_269CE04B0);
      memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v44 - 8) + 64));
LABEL_253:
      uint64_t v410 = *(int *)(v20 + 20);
      uint64_t v411 = v18 + v410;
      uint64_t v412 = v19 + v410;
      uint64_t v413 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v413 - 8) + 40))(v411, v412, v413);
      goto LABEL_254;
    }
    if (a1 == a2) {
      goto LABEL_253;
    }
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)uint64_t v18 = *(void *)v19;
        v490 = (int *)type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v126 = v490[5];
        uint64_t v127 = (void *)(v18 + v126);
        uint64_t v128 = (unsigned char *)(v19 + v126);
        uint64_t v129 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v128, 1, v129))
        {
          uint64_t v130 = sub_253462A5C(&qword_269CE0480);
          memcpy(v127, v128, *(void *)(*(void *)(v130 - 8) + 64));
        }
        else
        {
          uint64_t v459 = (int *)v129;
          __dsth = v127;
          uint64_t v202 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v128, 1, v202))
          {
            uint64_t v203 = sub_253462A5C(&qword_269CE0478);
            uint64_t v204 = (uint64_t)__dsth;
            memcpy(__dsth, v128, *(void *)(*(void *)(v203 - 8) + 64));
          }
          else
          {
            uint64_t v450 = v202;
            *(_OWORD *)__dsth = *(_OWORD *)v128;
            __dsth[16] = v128[16];
            uint64_t v285 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v286 = *(int *)(v285 + 24);
            uint64_t v434 = &__dsth[v286];
            uint64_t v440 = v285;
            uint64_t v287 = &v128[v286];
            uint64_t v288 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v287, 1, v288))
            {
              uint64_t v289 = sub_253462A5C(&qword_269CE0470);
              memcpy(v434, v287, *(void *)(*(void *)(v289 - 8) + 64));
            }
            else
            {
              *uint64_t v434 = *v287;
              uint64_t v334 = *(int *)(v288 + 20);
              uint64_t v423 = &v434[v334];
              uint64_t v429 = &v287[v334];
              uint64_t v335 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v335 - 8) + 32))(v423, v429, v335);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v434, 0, 1, v288);
            }
            uint64_t v336 = *(int *)(v440 + 28);
            uint64_t v204 = (uint64_t)__dsth;
            uint64_t v337 = &__dsth[v336];
            uint64_t v443 = &v128[v336];
            uint64_t v338 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v338 - 8) + 32))(v337, v443, v338);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsth, 0, 1, v450);
          }
          uint64_t v339 = v459[5];
          __dstr = (void *)(v204 + v339);
          uint64_t v340 = &v128[v339];
          uint64_t v341 = sub_253B07160();
          (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v341 - 8) + 32))(__dstr, v340, v341);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v204, 0, 1, (uint64_t)v459);
        }
        uint64_t v342 = v490[6];
        uint64_t v343 = v18 + v342;
        uint64_t v344 = v19 + v342;
        uint64_t v345 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v345 - 8) + 32))(v343, v344, v345);
        goto LABEL_252;
      case 2u:
        *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
        uint64_t v131 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
        uint64_t v132 = v18 + v131;
        uint64_t v133 = v19 + v131;
        uint64_t v134 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 32))(v132, v133, v134);
        goto LABEL_252;
      case 3u:
        *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
        *(void *)(v18 + 16) = *(void *)(v19 + 16);
        *(unsigned char *)(v18 + 24) = *(unsigned char *)(v19 + 24);
        uint64_t v135 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        uint64_t v136 = *(int *)(v135 + 24);
        uint64_t v491 = (void *)(v18 + v136);
        uint64_t v137 = (const void *)(v19 + v136);
        uint64_t v138 = sub_253B08E50();
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v137, 1, v138)) {
          goto LABEL_134;
        }
        goto LABEL_91;
      case 4u:
        *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
        uint64_t v140 = *(void *)(v19 + 24);
        *(void *)(v18 + 16) = *(void *)(v19 + 16);
        *(void *)(v18 + 24) = v140;
        *(unsigned char *)(v18 + 32) = *(unsigned char *)(v19 + 32);
        uint64_t v141 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        uint64_t v142 = v18 + v141;
        uint64_t v143 = v19 + v141;
        uint64_t v144 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v144 - 8) + 32))(v142, v143, v144);
        goto LABEL_252;
      case 5u:
        *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
        *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
        uint64_t v135 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
        uint64_t v145 = *(int *)(v135 + 24);
        uint64_t v491 = (void *)(v18 + v145);
        uint64_t v137 = (const void *)(v19 + v145);
        uint64_t v138 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v137, 1, v138))
        {
LABEL_91:
          uint64_t v139 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v491, v137, *(void *)(*(void *)(v139 - 8) + 64));
        }
        else
        {
LABEL_134:
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v138 - 8) + 32))(v491, v137, v138);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v491, 0, 1, v138);
        }
        uint64_t v205 = *(int *)(v135 + 28);
        uint64_t v206 = v18 + v205;
        uint64_t v207 = v19 + v205;
        uint64_t v208 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v208 - 8) + 32))(v206, v207, v208);
        goto LABEL_252;
      case 6u:
        *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
        uint64_t v146 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v147 = *(int *)(v146 + 20);
        uint64_t v492 = (void *)(v18 + v147);
        uint64_t v148 = (const void *)(v19 + v147);
        uint64_t v149 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v148, 1, v149))
        {
          uint64_t v150 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v492, v148, *(void *)(*(void *)(v150 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v149 - 8) + 32))(v492, v148, v149);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v492, 0, 1, v149);
        }
        uint64_t v209 = *(int *)(v146 + 24);
        uint64_t v210 = v18 + v209;
        uint64_t v211 = v19 + v209;
        uint64_t v212 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v212 - 8) + 32))(v210, v211, v212);
        goto LABEL_252;
      case 7u:
        uint64_t v151 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v151))
        {
          uint64_t v152 = sub_253462A5C(&qword_269CE0498);
          memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v152 - 8) + 64));
          goto LABEL_251;
        }
        int v213 = swift_getEnumCaseMultiPayload();
        if (v213 != 2)
        {
          if (v213 == 1)
          {
            *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
            uint64_t v313 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v314 = v18 + v313;
            uint64_t v315 = v19 + v313;
            uint64_t v316 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v316 - 8) + 32))(v314, v315, v316);
          }
          else
          {
            if (v213)
            {
              memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v151 - 8) + 64));
              goto LABEL_250;
            }
            *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
            uint64_t v214 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v215 = v18 + v214;
            uint64_t v216 = v19 + v214;
            uint64_t v217 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v217 - 8) + 32))(v215, v216, v217);
          }
LABEL_249:
          swift_storeEnumTagMultiPayload();
LABEL_250:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v151);
LABEL_251:
          uint64_t v406 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
          uint64_t v407 = v18 + v406;
          uint64_t v408 = v19 + v406;
          uint64_t v409 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v409 - 8) + 32))(v407, v408, v409);
LABEL_252:
          swift_storeEnumTagMultiPayload();
          goto LABEL_253;
        }
        uint64_t v311 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v311))
        {
          uint64_t v312 = sub_253462A5C(&qword_269CE0490);
          memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v312 - 8) + 64));
LABEL_248:
          uint64_t v402 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v403 = v18 + v402;
          uint64_t v404 = v19 + v402;
          uint64_t v405 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v405 - 8) + 32))(v403, v404, v405);
          goto LABEL_249;
        }
        int v361 = swift_getEnumCaseMultiPayload();
        if (v361 == 1)
        {
          uint64_t v383 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v383))
          {
            uint64_t v384 = sub_253462A5C(&qword_269CE0488);
            memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v384 - 8) + 64));
          }
          else
          {
            *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
            uint64_t v397 = *(int *)(v383 + 20);
            __dstw = (void *)(v19 + v397);
            uint64_t v495 = (void *)(v18 + v397);
            uint64_t v398 = sub_253B07160();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v398 - 8) + 32))(v495, __dstw, v398);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v383);
          }
          uint64_t v399 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v400 = v18 + v399;
          uint64_t v496 = (void *)(v19 + v399);
          uint64_t v401 = sub_253B07160();
          (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v401 - 8) + 32))(v400, v496, v401);
        }
        else
        {
          if (v361)
          {
            memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v311 - 8) + 64));
LABEL_247:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v311);
            goto LABEL_248;
          }
          *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
          uint64_t v362 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v363 = v18 + v362;
          uint64_t v494 = (void *)(v19 + v362);
          uint64_t v364 = sub_253B07160();
          (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v364 - 8) + 32))(v363, v494, v364);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_247;
      case 8u:
        *(void *)uint64_t v18 = *(void *)v19;
        *(_OWORD *)(v18 + 8) = *(_OWORD *)(v19 + 8);
        uint64_t v153 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        uint64_t v154 = v18 + v153;
        uint64_t v155 = v19 + v153;
        uint64_t v156 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v156 - 8) + 32))(v154, v155, v156);
        goto LABEL_252;
      case 9u:
        uint64_t v157 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v157))
        {
          uint64_t v158 = sub_253462A5C(&qword_269CE04A8);
          memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v158 - 8) + 64));
        }
        else
        {
          uint64_t v218 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v218))
          {
            uint64_t v219 = sub_253462A5C(&qword_269CE04A0);
            memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v219 - 8) + 64));
          }
          else
          {
            uint64_t v276 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 16, v276))
            {
              memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v218 - 8) + 64));
            }
            else
            {
              long long v323 = *(_OWORD *)(v19 + 16);
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
              *(_OWORD *)(v18 + 16) = v323;
              *(void *)(v18 + 32) = *(void *)(v19 + 32);
              uint64_t v324 = *(int *)(v276 + 28);
              __dstq = (void *)(v19 + v324);
              uint64_t v493 = (void *)(v18 + v324);
              uint64_t v325 = sub_253B07160();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v325 - 8) + 32))(v493, __dstq, v325);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 16, v276);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v218);
          }
          uint64_t v326 = *(int *)(v157 + 20);
          uint64_t v327 = v18 + v326;
          uint64_t v328 = v19 + v326;
          uint64_t v329 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v329 - 8) + 32))(v327, v328, v329);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v157);
        }
        uint64_t v330 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
        uint64_t v331 = v18 + v330;
        uint64_t v332 = v19 + v330;
        uint64_t v333 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v333 - 8) + 32))(v331, v332, v333);
        goto LABEL_252;
      case 0xAu:
        *(void *)uint64_t v18 = *(void *)v19;
        uint64_t v159 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
        uint64_t v160 = v18 + v159;
        uint64_t v161 = v19 + v159;
        uint64_t v162 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v162 - 8) + 32))(v160, v161, v162);
        goto LABEL_252;
      default:
        *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
        *(_WORD *)(v18 + 1) = *(_WORD *)(v19 + 1);
        uint64_t v489 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v45 = v489[7];
        uint64_t v46 = (void *)(v18 + v45);
        uint64_t v47 = (const void *)(v19 + v45);
        uint64_t v48 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v47, 1, v48))
        {
          uint64_t v49 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v46, 0, 1, v48);
        }
        uint64_t v197 = v489[8];
        uint64_t v198 = (_OWORD *)(v18 + v197);
        uint64_t v199 = (_OWORD *)(v19 + v197);
        uint64_t v200 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v199, 1, v200))
        {
          uint64_t v201 = sub_253462A5C(&qword_269CE0450);
          memcpy(v198, v199, *(void *)(*(void *)(v201 - 8) + 64));
        }
        else
        {
          long long v256 = v199[1];
          *uint64_t v198 = *v199;
          v198[1] = v256;
          v198[2] = v199[2];
          uint64_t v257 = *(int *)(v200 + 28);
          __dstl = (char *)v198 + v257;
          uint64_t v258 = (char *)v199 + v257;
          uint64_t v259 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v259 - 8) + 32))(__dstl, v258, v259);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v198, 0, 1, v200);
        }
        uint64_t v260 = v489[9];
        uint64_t v261 = (_OWORD *)(v18 + v260);
        uint64_t v262 = (_OWORD *)(v19 + v260);
        uint64_t v263 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v262, 1, v263))
        {
          uint64_t v264 = sub_253462A5C(&qword_269CE0468);
          memcpy(v261, v262, *(void *)(*(void *)(v264 - 8) + 64));
        }
        else
        {
          uint64_t v461 = (int *)type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          __dsti = (void *)v263;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v262, 1, (uint64_t)v461))
          {
            uint64_t v265 = sub_253462A5C(&qword_269CE0460);
            memcpy(v261, v262, *(void *)(*(void *)(v265 - 8) + 64));
          }
          else
          {
            uint64_t v451 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v262, 1, v451))
            {
              uint64_t v310 = sub_253462A5C(&qword_269CE0458);
              memcpy(v261, v262, *(void *)(*(void *)(v310 - 8) + 64));
            }
            else
            {
              long long v346 = v262[1];
              uint64_t v347 = (uint64_t)v261;
              *uint64_t v261 = *v262;
              v261[1] = v346;
              *((void *)v261 + 4) = *((void *)v262 + 4);
              uint64_t v348 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              uint64_t v349 = (char *)v261 + v348;
              uint64_t v444 = (char *)v262 + v348;
              uint64_t v350 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v350 - 8) + 32))(v349, v444, v350);
              uint64_t v261 = (_OWORD *)v347;
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v347, 0, 1, v451);
            }
            uint64_t v351 = v461[5];
            uint64_t v445 = (char *)v262 + v351;
            uint64_t v452 = (char *)v261 + v351;
            uint64_t v352 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v352 - 8) + 32))(v452, v445, v352);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v261, 0, 1, (uint64_t)v461);
            uint64_t v263 = (uint64_t)__dsti;
          }
          uint64_t v353 = *(int *)(v263 + 20);
          uint64_t v354 = (char *)v261 + v353;
          uint64_t v355 = (char *)v262 + v353;
          uint64_t v356 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v356 - 8) + 32))(v354, v355, v356);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v261, 0, 1, (uint64_t)__dsti);
        }
        *(_OWORD *)(v18 + v489[10]) = *(_OWORD *)(v19 + v489[10]);
        uint64_t v357 = v489[11];
        uint64_t v358 = v18 + v357;
        uint64_t v359 = v19 + v357;
        uint64_t v360 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v360 - 8) + 32))(v358, v359, v360);
        goto LABEL_252;
    }
  }
  if (!v22)
  {
    uint64_t v23 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v23))
    {
      uint64_t v24 = sub_253462A5C(&qword_269CE04B0);
      memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v24 - 8) + 64));
LABEL_231:
      uint64_t v379 = *(int *)(v20 + 20);
      uint64_t v380 = v18 + v379;
      uint64_t v381 = v19 + v379;
      uint64_t v382 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v382 - 8) + 32))(v380, v381, v382);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v20);
      goto LABEL_254;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)uint64_t v18 = *(void *)v19;
        uint64_t v50 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v51 = *(int *)(v50 + 20);
        __dstb = (unsigned char *)(v18 + v51);
        uint64_t v52 = (unsigned char *)(v19 + v51);
        uint64_t v53 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v53))
        {
          uint64_t v54 = sub_253462A5C(&qword_269CE0480);
          memcpy(__dstb, v52, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          uint64_t v446 = v53;
          uint64_t v453 = (void *)v50;
          uint64_t v101 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v101))
          {
            uint64_t v102 = sub_253462A5C(&qword_269CE0478);
            uint64_t v103 = (uint64_t)__dstb;
            memcpy(__dstb, v52, *(void *)(*(void *)(v102 - 8) + 64));
          }
          else
          {
            *(_OWORD *)__dstb = *(_OWORD *)v52;
            __dstb[16] = v52[16];
            uint64_t v173 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v174 = *(int *)(v173 + 24);
            uint64_t v421 = &__dstb[v174];
            uint64_t v424 = v173;
            uint64_t v436 = v52;
            uint64_t v175 = &v52[v174];
            uint64_t v176 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            uint64_t v430 = v101;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v175, 1, v176))
            {
              uint64_t v177 = sub_253462A5C(&qword_269CE0470);
              memcpy(v421, v175, *(void *)(*(void *)(v177 - 8) + 64));
            }
            else
            {
              *uint64_t v421 = *v175;
              uint64_t v226 = *(int *)(v176 + 20);
              uint64_t v419 = &v421[v226];
              int v227 = &v175[v226];
              uint64_t v228 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v228 - 8) + 32))(v419, v227, v228);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v421, 0, 1, v176);
            }
            uint64_t v229 = *(int *)(v424 + 28);
            uint64_t v103 = (uint64_t)__dstb;
            uint64_t v230 = &__dstb[v229];
            uint64_t v52 = v436;
            uint64_t v426 = &v436[v229];
            uint64_t v231 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v231 - 8) + 32))(v230, v426, v231);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstb, 0, 1, v430);
          }
          uint64_t v232 = *(int *)(v446 + 20);
          __dstj = (void *)(v103 + v232);
          uint64_t v233 = &v52[v232];
          uint64_t v234 = sub_253B07160();
          (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v234 - 8) + 32))(__dstj, v233, v234);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v103, 0, 1, v446);
          uint64_t v50 = (uint64_t)v453;
        }
        uint64_t v58 = *(int *)(v50 + 24);
        goto LABEL_230;
      case 2u:
        *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
        uint64_t v55 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_229;
      case 3u:
        *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
        *(void *)(v18 + 16) = *(void *)(v19 + 16);
        *(unsigned char *)(v18 + 24) = *(unsigned char *)(v19 + 24);
        uint64_t v56 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_36;
      case 4u:
        *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
        uint64_t v57 = *(void *)(v19 + 24);
        *(void *)(v18 + 16) = *(void *)(v19 + 16);
        *(void *)(v18 + 24) = v57;
        *(unsigned char *)(v18 + 32) = *(unsigned char *)(v19 + 32);
        uint64_t v58 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_230;
      case 5u:
        *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
        *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
        uint64_t v56 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_36:
        uint64_t v59 = v56;
        uint64_t v60 = *(int *)(v56 + 24);
        __dstc = (void *)(v18 + v60);
        uint64_t v61 = (const void *)(v19 + v60);
        uint64_t v62 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v61, 1, v62))
        {
          uint64_t v63 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(__dstc, v61, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v62 - 8) + 32))(__dstc, v61, v62);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstc, 0, 1, v62);
        }
        uint64_t v58 = *(int *)(v59 + 28);
        goto LABEL_230;
      case 6u:
        *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
        uint64_t v64 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v65 = *(int *)(v64 + 20);
        __dstd = (void *)(v18 + v65);
        uint64_t v66 = (const void *)(v19 + v65);
        uint64_t v67 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v66, 1, v67))
        {
          uint64_t v68 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(__dstd, v66, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v67 - 8) + 32))(__dstd, v66, v67);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstd, 0, 1, v67);
        }
        uint64_t v58 = *(int *)(v64 + 24);
        goto LABEL_230;
      case 7u:
        uint64_t v69 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v69))
        {
          uint64_t v70 = sub_253462A5C(&qword_269CE0498);
          memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v70 - 8) + 64));
          goto LABEL_228;
        }
        int v104 = swift_getEnumCaseMultiPayload();
        if (v104 != 2)
        {
          if (v104 == 1)
          {
            *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
            uint64_t v193 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v194 = v18 + v193;
            uint64_t v195 = v19 + v193;
            uint64_t v196 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v196 - 8) + 32))(v194, v195, v196);
            goto LABEL_127;
          }
          if (!v104)
          {
            *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
            uint64_t v105 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v106 = v18 + v105;
            uint64_t v107 = v19 + v105;
            uint64_t v108 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 32))(v106, v107, v108);
LABEL_127:
            swift_storeEnumTagMultiPayload();
            goto LABEL_227;
          }
          memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v69 - 8) + 64));
LABEL_227:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v69);
LABEL_228:
          uint64_t v55 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_229:
          uint64_t v58 = *(int *)(v55 + 20);
LABEL_230:
          uint64_t v376 = v18 + v58;
          uint64_t v377 = v19 + v58;
          uint64_t v378 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v378 - 8) + 32))(v376, v377, v378);
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v23);
          goto LABEL_231;
        }
        uint64_t v191 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v191))
        {
          uint64_t v192 = sub_253462A5C(&qword_269CE0490);
          memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v192 - 8) + 64));
LABEL_226:
          uint64_t v372 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v373 = v18 + v372;
          uint64_t v374 = v19 + v372;
          uint64_t v375 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v375 - 8) + 32))(v373, v374, v375);
          swift_storeEnumTagMultiPayload();
          goto LABEL_227;
        }
        int v272 = swift_getEnumCaseMultiPayload();
        if (v272 == 1)
        {
          uint64_t v321 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v321))
          {
            uint64_t v322 = sub_253462A5C(&qword_269CE0488);
            memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v322 - 8) + 64));
          }
          else
          {
            *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
            uint64_t v367 = *(int *)(v321 + 20);
            uint64_t v463 = (void *)(v19 + v367);
            __dsts = (void *)(v18 + v367);
            uint64_t v368 = sub_253B07160();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v368 - 8) + 32))(__dsts, v463, v368);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v321);
          }
          uint64_t v369 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v370 = v18 + v369;
          __dstt = (void *)(v19 + v369);
          uint64_t v371 = sub_253B07160();
          (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v371 - 8) + 32))(v370, __dstt, v371);
        }
        else
        {
          if (v272)
          {
            memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v191 - 8) + 64));
LABEL_225:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v191);
            goto LABEL_226;
          }
          *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
          uint64_t v273 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v274 = v18 + v273;
          __dstm = (void *)(v19 + v273);
          uint64_t v275 = sub_253B07160();
          (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v275 - 8) + 32))(v274, __dstm, v275);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_225;
      case 8u:
        *(void *)uint64_t v18 = *(void *)v19;
        *(_OWORD *)(v18 + 8) = *(_OWORD *)(v19 + 8);
        uint64_t v58 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        goto LABEL_230;
      case 9u:
        uint64_t v71 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v71))
        {
          uint64_t v72 = sub_253462A5C(&qword_269CE04A8);
          memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          uint64_t v109 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 1, v109))
          {
            uint64_t v110 = sub_253462A5C(&qword_269CE04A0);
            memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v110 - 8) + 64));
          }
          else
          {
            uint64_t v178 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v19, 16, v178))
            {
              memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v109 - 8) + 64));
            }
            else
            {
              long long v235 = *(_OWORD *)(v19 + 16);
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
              *(_OWORD *)(v18 + 16) = v235;
              *(void *)(v18 + 32) = *(void *)(v19 + 32);
              uint64_t v236 = *(int *)(v178 + 28);
              __dstk = (void *)v178;
              uint64_t v237 = v18 + v236;
              uint64_t v460 = (void *)(v19 + v236);
              uint64_t v238 = sub_253B07160();
              (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v238 - 8) + 32))(v237, v460, v238);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 16, (uint64_t)__dstk);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v109);
          }
          uint64_t v239 = *(int *)(v71 + 20);
          uint64_t v240 = v18 + v239;
          uint64_t v241 = v19 + v239;
          uint64_t v242 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v242 - 8) + 32))(v240, v241, v242);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, 1, v71);
        }
        uint64_t v55 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_229;
      case 0xAu:
        *(void *)uint64_t v18 = *(void *)v19;
        uint64_t v55 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
        goto LABEL_229;
      default:
        *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
        *(_WORD *)(v18 + 1) = *(_WORD *)(v19 + 1);
        __dsta = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v39 = __dsta[7];
        uint64_t v40 = (void *)(v18 + v39);
        uint64_t v41 = (const void *)(v19 + v39);
        uint64_t v42 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v41, 1, v42))
        {
          uint64_t v43 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v40, 0, 1, v42);
        }
        uint64_t v96 = __dsta[8];
        uint64_t v97 = (_OWORD *)(v18 + v96);
        uint64_t v98 = (_OWORD *)(v19 + v96);
        uint64_t v99 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v98, 1, v99))
        {
          uint64_t v100 = sub_253462A5C(&qword_269CE0450);
          memcpy(v97, v98, *(void *)(*(void *)(v100 - 8) + 64));
        }
        else
        {
          long long v111 = v98[1];
          *uint64_t v97 = *v98;
          v97[1] = v111;
          v97[2] = v98[2];
          uint64_t v112 = *(int *)(v99 + 28);
          uint64_t v454 = (char *)v97 + v112;
          uint64_t v113 = (char *)v98 + v112;
          uint64_t v114 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32))(v454, v113, v114);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v97, 0, 1, v99);
        }
        uint64_t v115 = __dsta[9];
        uint64_t v455 = (_OWORD *)(v18 + v115);
        uint64_t v116 = (_OWORD *)(v19 + v115);
        uint64_t v117 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v116, 1, v117))
        {
          uint64_t v118 = sub_253462A5C(&qword_269CE0468);
          memcpy(v455, v116, *(void *)(*(void *)(v118 - 8) + 64));
        }
        else
        {
          uint64_t v119 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          uint64_t v447 = v117;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v116, 1, v119))
          {
            uint64_t v120 = sub_253462A5C(&qword_269CE0460);
            memcpy(v455, v116, *(void *)(*(void *)(v120 - 8) + 64));
          }
          else
          {
            uint64_t v437 = v119;
            uint64_t v179 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v116, 1, v179))
            {
              uint64_t v180 = sub_253462A5C(&qword_269CE0458);
              memcpy(v455, v116, *(void *)(*(void *)(v180 - 8) + 64));
            }
            else
            {
              long long v243 = v116[1];
              *uint64_t v455 = *v116;
              v455[1] = v243;
              *((void *)v455 + 4) = *((void *)v116 + 4);
              uint64_t v244 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              uint64_t v432 = v179;
              uint64_t v245 = (char *)v455 + v244;
              uint64_t v246 = (char *)v116 + v244;
              uint64_t v247 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v247 - 8) + 32))(v245, v246, v247);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v455, 0, 1, v432);
            }
            uint64_t v248 = *(int *)(v437 + 20);
            uint64_t v433 = (char *)v455 + v248;
            uint64_t v249 = (char *)v116 + v248;
            uint64_t v250 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v250 - 8) + 32))(v433, v249, v250);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v455, 0, 1, v437);
            uint64_t v117 = v447;
          }
          uint64_t v251 = *(int *)(v117 + 20);
          uint64_t v439 = (char *)v455 + v251;
          uint64_t v252 = (char *)v116 + v251;
          uint64_t v253 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v253 - 8) + 32))(v439, v252, v253);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v455, 0, 1, v447);
        }
        *(_OWORD *)(v18 + __dsta[10]) = *(_OWORD *)(v19 + __dsta[10]);
        uint64_t v58 = __dsta[11];
        goto LABEL_230;
    }
  }
LABEL_13:
  uint64_t v25 = sub_253462A5C(&qword_269CE0388);
  memcpy((void *)v18, (const void *)v19, *(void *)(*(void *)(v25 - 8) + 64));
LABEL_254:
  uint64_t v414 = a3[7];
  uint64_t v415 = (char *)a1 + v414;
  uint64_t v416 = (char *)a2 + v414;
  uint64_t v417 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v417 - 8) + 40))(v415, v416, v417);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoExternalAgentOutcome(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25381C7BC);
}

uint64_t sub_25381C7BC()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*v1);
  }
  sub_2535E2460();
  sub_253462A5C(&qword_26B249528);
  sub_2535782A8();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    sub_2535E263C();
  }
  else
  {
    sub_253462A5C(&qword_269CE0388);
    sub_2535782A8();
    if (*(_DWORD *)(v6 + 84) == v0)
    {
      sub_2535E2560();
    }
    else
    {
      sub_253B07160();
      sub_2535E256C();
    }
  }
  uint64_t v7 = sub_2535E22C8(v5);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, v8, v9);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoExternalAgentOutcome(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25381C888);
}

void sub_25381C888()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E2538();
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_26B249528);
    sub_2535782A8();
    if (*(_DWORD *)(v2 + 84) == v0)
    {
      sub_2535E272C();
    }
    else
    {
      sub_253462A5C(&qword_269CE0388);
      sub_2535782A8();
      if (*(_DWORD *)(v4 + 84) == v0)
      {
        sub_2535E26D8();
      }
      else
      {
        sub_253B07160();
        sub_2535E26E4();
      }
    }
    uint64_t v5 = sub_2535E2234(v3);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v5, v6, v7, v8);
  }
}

void sub_25381C93C()
{
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionStepResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253943C8C);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionStepResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253943C38);
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoStatementResultPayload(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = type metadata accessor for TranscriptProtoStatementOutcome(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v3, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE0388);
      memcpy(a1, v3, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v3, 1, v10))
      {
        uint64_t v11 = sub_253462A5C(&qword_269CE04B0);
        memcpy(a1, v3, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v320 = v6;
            *a1 = *v3;
            uint64_t v18 = type metadata accessor for TranscriptProtoActionConfirmation(0);
            uint64_t v19 = *(int *)(v18 + 20);
            uint64_t v20 = a1;
            int v21 = (void *)((char *)a1 + v19);
            int v22 = (void *)((char *)v3 + v19);
            uint64_t v23 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v23))
            {
              uint64_t v24 = sub_253462A5C(&qword_269CE0480);
              memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
            }
            else
            {
              uint64_t v304 = v3;
              uint64_t v74 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v74))
              {
                uint64_t v75 = sub_253462A5C(&qword_269CE0478);
                memcpy(v21, v22, *(void *)(*(void *)(v75 - 8) + 64));
              }
              else
              {
                uint64_t v296 = (void *)v74;
                uint64_t v107 = v22[1];
                void *v21 = *v22;
                v21[1] = v107;
                *((unsigned char *)v21 + 16) = *((unsigned char *)v22 + 16);
                uint64_t v316 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
                uint64_t v108 = *(int *)(v316 + 24);
                __dst = (char *)v21 + v108;
                uint64_t v109 = (char *)v22 + v108;
                uint64_t v110 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
                swift_bridgeObjectRetain();
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v109, 1, v110))
                {
                  uint64_t v111 = sub_253462A5C(&qword_269CE0470);
                  memcpy(__dst, v109, *(void *)(*(void *)(v111 - 8) + 64));
                }
                else
                {
                  unsigned char *__dst = *v109;
                  uint64_t v133 = *(int *)(v110 + 20);
                  uint64_t v285 = &__dst[v133];
                  uint64_t v134 = &v109[v133];
                  uint64_t v135 = sub_253B07160();
                  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v135 - 8) + 16))(v285, v134, v135);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v110);
                }
                uint64_t v136 = *(int *)(v316 + 28);
                uint64_t v137 = (char *)v21 + v136;
                uint64_t v138 = (char *)v22 + v136;
                uint64_t v139 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 16))(v137, v138, v139);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v21, 0, 1, (uint64_t)v296);
              }
              uint64_t v140 = *(int *)(v23 + 20);
              uint64_t v141 = (char *)v21 + v140;
              uint64_t v142 = (char *)v22 + v140;
              uint64_t v143 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 16))(v141, v142, v143);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v21, 0, 1, v23);
              uint64_t v3 = v304;
            }
            uint64_t v144 = *(int *)(v18 + 24);
            a1 = v20;
            uint64_t v145 = (char *)v20 + v144;
            uint64_t v146 = (char *)v3 + v144;
            uint64_t v147 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 16))(v145, v146, v147);
            goto LABEL_69;
          case 2u:
            uint64_t v25 = v3[1];
            *a1 = *v3;
            a1[1] = v25;
            uint64_t v26 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
            uint64_t v310 = (char *)a1 + v26;
            uint64_t v27 = (char *)v3 + v26;
            uint64_t v28 = sub_253B07160();
            uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
            swift_bridgeObjectRetain();
            v29(v310, v27, v28);
            goto LABEL_83;
          case 3u:
            uint64_t v30 = v6;
            uint64_t v31 = v3[1];
            *a1 = *v3;
            a1[1] = v31;
            a1[2] = v3[2];
            *((unsigned char *)a1 + 24) = *((unsigned char *)v3 + 24);
            uint64_t v32 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
            uint64_t v33 = *(int *)(v32 + 24);
            uint64_t v34 = (char *)a1 + v33;
            uint64_t v35 = (char *)v3 + v33;
            uint64_t v36 = sub_253B08E50();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v35, 1, v36)) {
              goto LABEL_14;
            }
            goto LABEL_31;
          case 4u:
            uint64_t v38 = v3[1];
            *a1 = *v3;
            a1[1] = v38;
            uint64_t v39 = v3[3];
            a1[2] = v3[2];
            a1[3] = v39;
            *((unsigned char *)a1 + 32) = *((unsigned char *)v3 + 32);
            uint64_t v40 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
            uint64_t v302 = (char *)v3 + v40;
            uint64_t v311 = (char *)a1 + v40;
            uint64_t v41 = v6;
            uint64_t v42 = sub_253B07160();
            uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v44 = v42;
            uint64_t v6 = v41;
            v43(v311, v302, v44);
            goto LABEL_83;
          case 5u:
            uint64_t v30 = v6;
            uint64_t v45 = v3[1];
            *a1 = *v3;
            a1[1] = v45;
            *((unsigned char *)a1 + 16) = *((unsigned char *)v3 + 16);
            uint64_t v32 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
            uint64_t v46 = *(int *)(v32 + 24);
            uint64_t v34 = (char *)a1 + v46;
            uint64_t v35 = (char *)v3 + v46;
            uint64_t v36 = sub_253B08E50();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v35, 1, v36))
            {
LABEL_14:
              uint64_t v37 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
            }
            else
            {
LABEL_31:
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v34, 0, 1, v36);
            }
            uint64_t v6 = v30;
            uint64_t v76 = *(int *)(v32 + 28);
            uint64_t v77 = (char *)a1 + v76;
            uint64_t v78 = (char *)v3 + v76;
            uint64_t v79 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v77, v78, v79);
            goto LABEL_83;
          case 6u:
            uint64_t v47 = v6;
            uint64_t v48 = v3[1];
            *a1 = *v3;
            a1[1] = v48;
            uint64_t v49 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
            uint64_t v50 = *(int *)(v49 + 20);
            uint64_t v51 = (char *)a1 + v50;
            uint64_t v52 = (char *)v3 + v50;
            uint64_t v53 = sub_253B08E50();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v53))
            {
              uint64_t v54 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v51, 0, 1, v53);
            }
            uint64_t v6 = v47;
            uint64_t v80 = *(int *)(v49 + 24);
            uint64_t v81 = (char *)a1 + v80;
            uint64_t v82 = (char *)v3 + v80;
            uint64_t v83 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
            goto LABEL_83;
          case 7u:
            uint64_t v55 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v3, 1, v55))
            {
              uint64_t v56 = sub_253462A5C(&qword_269CE0498);
              memcpy(a1, v3, *(void *)(*(void *)(v56 - 8) + 64));
              goto LABEL_82;
            }
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 2)
            {
              uint64_t v114 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v3, 1, v114))
              {
                uint64_t v115 = sub_253462A5C(&qword_269CE0490);
                memcpy(a1, v3, *(void *)(*(void *)(v115 - 8) + 64));
              }
              else
              {
                int v172 = swift_getEnumCaseMultiPayload();
                if (v172 == 1)
                {
                  uint64_t v178 = v6;
                  uint64_t v179 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
                  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v3, 1, v179))
                  {
                    uint64_t v180 = sub_253462A5C(&qword_269CE0488);
                    memcpy(a1, v3, *(void *)(*(void *)(v180 - 8) + 64));
                  }
                  else
                  {
                    *(unsigned char *)a1 = *(unsigned char *)v3;
                    uint64_t v181 = *(int *)(v179 + 20);
                    uint64_t v182 = (char *)a1 + v181;
                    uint64_t v183 = (char *)v3 + v181;
                    uint64_t v184 = sub_253B07160();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 16))(v182, v183, v184);
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v179);
                  }
                  uint64_t v185 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0)
                                + 20);
                  uint64_t v186 = (char *)a1 + v185;
                  uint64_t v187 = (char *)v3 + v185;
                  uint64_t v188 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v188 - 8) + 16))(v186, v187, v188);
                  swift_storeEnumTagMultiPayload();
                  uint64_t v6 = v178;
                }
                else if (v172)
                {
                  memcpy(a1, v3, *(void *)(*(void *)(v114 - 8) + 64));
                }
                else
                {
                  uint64_t v173 = v3[1];
                  *a1 = *v3;
                  a1[1] = v173;
                  uint64_t v174 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0)
                                + 20);
                  uint64_t v298 = (char *)v3 + v174;
                  uint64_t v307 = (char *)a1 + v174;
                  uint64_t v318 = a1;
                  uint64_t v175 = sub_253B07160();
                  uint64_t v176 = *(void (**)(char *, char *, uint64_t))(*(void *)(v175 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v177 = v175;
                  a1 = v318;
                  v176(v307, v298, v177);
                  swift_storeEnumTagMultiPayload();
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v114);
              }
              uint64_t v189 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
              uint64_t v190 = (char *)a1 + v189;
              uint64_t v191 = (char *)v3 + v189;
              uint64_t v192 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 16))(v190, v191, v192);
            }
            else if (EnumCaseMultiPayload == 1)
            {
              *(unsigned char *)a1 = *(unsigned char *)v3;
              uint64_t v116 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
              uint64_t v117 = (char *)a1 + v116;
              uint64_t v118 = (char *)v3 + v116;
              uint64_t v119 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16))(v117, v118, v119);
            }
            else
            {
              if (EnumCaseMultiPayload)
              {
                memcpy(a1, v3, *(void *)(*(void *)(v55 - 8) + 64));
                goto LABEL_81;
              }
              *(unsigned char *)a1 = *(unsigned char *)v3;
              uint64_t v85 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
              uint64_t v86 = (char *)a1 + v85;
              uint64_t v87 = (char *)v3 + v85;
              uint64_t v88 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v86, v87, v88);
            }
            swift_storeEnumTagMultiPayload();
LABEL_81:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v55);
LABEL_82:
            uint64_t v193 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
            uint64_t v194 = (char *)a1 + v193;
            uint64_t v195 = (char *)v3 + v193;
            uint64_t v196 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 16))(v194, v195, v196);
LABEL_83:
            swift_storeEnumTagMultiPayload();
LABEL_84:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v10);
            break;
          case 8u:
            uint64_t v57 = v3[1];
            *a1 = *v3;
            a1[1] = v57;
            a1[2] = v3[2];
            uint64_t v58 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
            uint64_t v303 = (char *)v3 + v58;
            uint64_t v312 = (char *)a1 + v58;
            uint64_t v59 = v6;
            uint64_t v60 = sub_253B07160();
            uint64_t v61 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v62 = v60;
            uint64_t v6 = v59;
            v61(v312, v303, v62);
            goto LABEL_83;
          case 9u:
            uint64_t v63 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v3, 1, v63))
            {
              uint64_t v64 = sub_253462A5C(&qword_269CE04A8);
              memcpy(a1, v3, *(void *)(*(void *)(v64 - 8) + 64));
            }
            else
            {
              uint64_t v89 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v3, 1, v89))
              {
                uint64_t v90 = sub_253462A5C(&qword_269CE04A0);
                memcpy(a1, v3, *(void *)(*(void *)(v90 - 8) + 64));
              }
              else
              {
                uint64_t v105 = v6;
                uint64_t v106 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v3, 16, v106))
                {
                  memcpy(a1, v3, *(void *)(*(void *)(v89 - 8) + 64));
                }
                else
                {
                  uint64_t v120 = v3[1];
                  *a1 = *v3;
                  a1[1] = v120;
                  uint64_t v121 = v3[3];
                  a1[2] = v3[2];
                  a1[3] = v121;
                  a1[4] = v3[4];
                  uint64_t v122 = *(int *)(v106 + 28);
                  __dstb = (char *)v3 + v122;
                  uint64_t v297 = (char *)a1 + v122;
                  uint64_t v317 = (uint64_t)a1;
                  uint64_t v123 = sub_253B07160();
                  uint64_t v284 = *(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 16);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  uint64_t v124 = v123;
                  a1 = (void *)v317;
                  v284(v297, __dstb, v124);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v317, 0, 16, v106);
                }
                uint64_t v6 = v105;
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v89);
              }
              uint64_t v125 = *(int *)(v63 + 20);
              uint64_t v126 = (char *)a1 + v125;
              uint64_t v127 = (char *)v3 + v125;
              uint64_t v128 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 16))(v126, v127, v128);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v63);
            }
            uint64_t v129 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
            uint64_t v130 = (char *)a1 + v129;
            uint64_t v131 = (char *)v3 + v129;
            uint64_t v132 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 16))(v130, v131, v132);
            goto LABEL_83;
          case 0xAu:
            *a1 = *v3;
            uint64_t v65 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
            uint64_t v313 = (char *)a1 + v65;
            uint64_t v66 = (char *)v3 + v65;
            uint64_t v67 = sub_253B07160();
            uint64_t v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
            swift_bridgeObjectRetain();
            v68(v313, v66, v67);
            goto LABEL_83;
          default:
            *(unsigned char *)a1 = *(unsigned char *)v3;
            *(_WORD *)((char *)a1 + 1) = *(_WORD *)((char *)v3 + 1);
            uint64_t v12 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
            uint64_t v13 = v12[7];
            uint64_t v14 = (char *)a1 + v13;
            uint64_t v15 = (char *)v3 + v13;
            uint64_t v16 = sub_253B08E50();
            uint64_t v320 = v6;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16))
            {
              uint64_t v17 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v14, 0, 1, v16);
            }
            uint64_t v69 = v12[8];
            uint64_t v70 = (void *)((char *)a1 + v69);
            uint64_t v71 = (void *)((char *)v3 + v69);
            uint64_t v72 = type metadata accessor for TranscriptProtoUndoContext(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v71, 1, v72))
            {
              uint64_t v73 = sub_253462A5C(&qword_269CE0450);
              memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
            }
            else
            {
              uint64_t v91 = v71[1];
              void *v70 = *v71;
              v70[1] = v91;
              uint64_t v305 = v3;
              uint64_t v314 = a1;
              uint64_t v92 = v71[3];
              v70[2] = v71[2];
              v70[3] = v92;
              uint64_t v93 = v71[5];
              v70[4] = v71[4];
              v70[5] = v93;
              uint64_t v94 = *(int *)(v72 + 28);
              __dsta = (char *)v71 + v94;
              uint64_t v295 = (char *)v70 + v94;
              uint64_t v95 = sub_253B07160();
              uint64_t v283 = *(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16);
              swift_bridgeObjectRetain();
              a1 = v314;
              swift_bridgeObjectRetain();
              uint64_t v3 = v305;
              swift_bridgeObjectRetain();
              v283(v295, __dsta, v95);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v70, 0, 1, v72);
            }
            uint64_t v96 = v12[9];
            uint64_t v97 = a1;
            uint64_t v98 = (void *)((char *)a1 + v96);
            uint64_t v99 = (void *)((char *)v3 + v96);
            uint64_t v100 = type metadata accessor for TranscriptProtoFollowUpAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v99, 1, v100))
            {
              uint64_t v101 = sub_253462A5C(&qword_269CE0468);
              memcpy(v98, v99, *(void *)(*(void *)(v101 - 8) + 64));
            }
            else
            {
              uint64_t v315 = v12;
              uint64_t v102 = v3;
              uint64_t v103 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v99, 1, v103))
              {
                uint64_t v104 = sub_253462A5C(&qword_269CE0460);
                memcpy(v98, v99, *(void *)(*(void *)(v104 - 8) + 64));
              }
              else
              {
                uint64_t v112 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v99, 1, v112))
                {
                  uint64_t v113 = sub_253462A5C(&qword_269CE0458);
                  memcpy(v98, v99, *(void *)(*(void *)(v113 - 8) + 64));
                }
                else
                {
                  uint64_t v148 = v99[1];
                  *uint64_t v98 = *v99;
                  v98[1] = v148;
                  uint64_t v306 = v112;
                  uint64_t v149 = v99[2];
                  unint64_t v150 = v99[3];
                  swift_bridgeObjectRetain();
                  sub_25348A9C8(v149, v150);
                  v98[2] = v149;
                  v98[3] = v150;
                  v98[4] = v99[4];
                  uint64_t v151 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                                + 28);
                  uint64_t v152 = (char *)v98 + v151;
                  uint64_t v153 = (char *)v99 + v151;
                  uint64_t v154 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 16))(v152, v153, v154);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v98, 0, 1, v306);
                }
                uint64_t v155 = *(int *)(v103 + 20);
                uint64_t v156 = (char *)v98 + v155;
                uint64_t v157 = (char *)v99 + v155;
                uint64_t v158 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 16))(v156, v157, v158);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v98, 0, 1, v103);
              }
              uint64_t v159 = *(int *)(v100 + 20);
              uint64_t v160 = (char *)v98 + v159;
              uint64_t v161 = (char *)v99 + v159;
              uint64_t v162 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 16))(v160, v161, v162);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v98, 0, 1, v100);
              uint64_t v3 = v102;
              uint64_t v12 = v315;
            }
            uint64_t v163 = v12[10];
            a1 = v97;
            uint64_t v164 = (void *)((char *)v97 + v163);
            uint64_t v165 = (void *)((char *)v3 + v163);
            uint64_t v166 = v165[1];
            void *v164 = *v165;
            v164[1] = v166;
            uint64_t v167 = v12[11];
            uint64_t v168 = (char *)v97 + v167;
            uint64_t v169 = (char *)v3 + v167;
            uint64_t v170 = sub_253B07160();
            uint64_t v171 = *(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 16);
            swift_bridgeObjectRetain();
            v171(v168, v169, v170);
LABEL_69:
            swift_storeEnumTagMultiPayload();
            uint64_t v6 = v320;
            goto LABEL_84;
        }
      }
      uint64_t v197 = *(int *)(v7 + 20);
      uint64_t v198 = (char *)a1 + v197;
      uint64_t v199 = (char *)v3 + v197;
      uint64_t v200 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 16))(v198, v199, v200);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v201 = *(int *)(v6 + 20);
    uint64_t v202 = (void *)((char *)a1 + v201);
    uint64_t v203 = (void *)((char *)v3 + v201);
    uint64_t v204 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v203, 1, (uint64_t)v204))
    {
      uint64_t v205 = sub_253462A5C(&qword_269CE0378);
      memcpy(v202, v203, *(void *)(*(void *)(v205 - 8) + 64));
    }
    else
    {
      uint64_t v319 = a1;
      uint64_t v321 = v6;
      *uint64_t v202 = *v203;
      uint64_t v206 = v204[5];
      uint64_t v207 = (void *)((char *)v202 + v206);
      uint64_t v208 = (void *)((char *)v203 + v206);
      uint64_t v209 = type metadata accessor for TranscriptProtoResponseDialog(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v208, 1, v209))
      {
        uint64_t v210 = sub_253462A5C(&qword_269CE04B8);
        memcpy(v207, v208, *(void *)(*(void *)(v210 - 8) + 64));
      }
      else
      {
        uint64_t v211 = v208[1];
        *uint64_t v207 = *v208;
        v207[1] = v211;
        uint64_t v212 = v208[3];
        v207[2] = v208[2];
        v207[3] = v212;
        uint64_t v308 = v3;
        uint64_t v213 = v208[5];
        v207[4] = v208[4];
        v207[5] = v213;
        uint64_t v214 = v208[7];
        v207[6] = v208[6];
        v207[7] = v214;
        uint64_t v215 = *(int *)(v209 + 32);
        __dstc = (char *)v208 + v215;
        long long v299 = (char *)v207 + v215;
        uint64_t v216 = sub_253B07160();
        uint64_t v286 = *(void (**)(char *, char *, uint64_t))(*(void *)(v216 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v3 = v308;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v286(v299, __dstc, v216);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v207, 0, 1, v209);
      }
      uint64_t v217 = v204[6];
      uint64_t v218 = (void *)((char *)v202 + v217);
      uint64_t v219 = (void *)((char *)v203 + v217);
      uint64_t v220 = type metadata accessor for TranscriptProtoResponseVisual(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v219, 1, v220))
      {
        uint64_t v221 = sub_253462A5C(&qword_269CE04C8);
        memcpy(v218, v219, *(void *)(*(void *)(v221 - 8) + 64));
      }
      else
      {
        uint64_t v309 = v3;
        uint64_t v222 = v219[1];
        *uint64_t v218 = *v219;
        v218[1] = v222;
        uint64_t v223 = *(int *)(v220 + 24);
        uint64_t v300 = (char *)v218 + v223;
        uint64_t v224 = (char *)v219 + v223;
        uint64_t v225 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v224, 1, v225))
        {
          uint64_t v226 = sub_253462A5C(&qword_269CE04C0);
          memcpy(v300, v224, *(void *)(*(void *)(v226 - 8) + 64));
        }
        else
        {
          unsigned char *v300 = *v224;
          uint64_t v227 = *(int *)(v225 + 20);
          uint64_t v228 = &v300[v227];
          uint64_t v229 = &v224[v227];
          uint64_t v230 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v230 - 8) + 16))(v228, v229, v230);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v300, 0, 1, v225);
        }
        uint64_t v231 = *(int *)(v220 + 28);
        uint64_t v232 = (char *)v218 + v231;
        uint64_t v233 = (char *)v219 + v231;
        uint64_t v234 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v234 - 8) + 16))(v232, v233, v234);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v218, 0, 1, v220);
        uint64_t v3 = v309;
      }
      uint64_t v235 = v204[7];
      uint64_t v236 = (void *)((char *)v202 + v235);
      uint64_t v237 = (void *)((char *)v203 + v235);
      uint64_t v238 = v237[1];
      *uint64_t v236 = *v237;
      v236[1] = v238;
      uint64_t v239 = v204[8];
      uint64_t v240 = (void *)((char *)v202 + v239);
      uint64_t v241 = (void *)((char *)v203 + v239);
      uint64_t v242 = v241[1];
      void *v240 = *v241;
      v240[1] = v242;
      *((unsigned char *)v202 + v204[9]) = *((unsigned char *)v203 + v204[9]);
      *((unsigned char *)v202 + v204[10]) = *((unsigned char *)v203 + v204[10]);
      uint64_t v243 = v204[11];
      uint64_t v244 = (void *)((char *)v202 + v243);
      uint64_t v245 = (void *)((char *)v203 + v243);
      uint64_t v246 = type metadata accessor for TranscriptProtoUIType(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v245, 1, v246))
      {
        uint64_t v247 = sub_253462A5C(&qword_269CE04D0);
        memcpy(v244, v245, *(void *)(*(void *)(v247 - 8) + 64));
      }
      else
      {
        uint64_t v248 = v3;
        uint64_t v249 = type metadata accessor for TranscriptProtoUitype(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v245, 1, v249))
        {
          uint64_t v250 = sub_253462A5C(&qword_269CDCC08);
          memcpy(v244, v245, *(void *)(*(void *)(v250 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v257 = v245[1];
              void *v244 = *v245;
              v244[1] = v257;
              uint64_t v258 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
              goto LABEL_105;
            case 2u:
              uint64_t v259 = *v245;
              unint64_t v260 = v245[1];
              sub_25348A9C8(*v245, v260);
              void *v244 = v259;
              v244[1] = v260;
              uint64_t v261 = v245[3];
              v244[2] = v245[2];
              v244[3] = v261;
              uint64_t v258 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
LABEL_105:
              __dste = (char *)v245 + v258;
              uint64_t v301 = (char *)v244 + v258;
              uint64_t v262 = sub_253B07160();
              uint64_t v288 = *(void (**)(char *, char *, uint64_t))(*(void *)(v262 - 8) + 16);
              swift_bridgeObjectRetain();
              v288(v301, __dste, v262);
              break;
            case 3u:
              uint64_t v263 = *v245;
              unint64_t v264 = v245[1];
              sub_25348A9C8(*v245, v264);
              void *v244 = v263;
              v244[1] = v264;
              uint64_t v265 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
              uint64_t v266 = (char *)v244 + v265;
              uint64_t v267 = (char *)v245 + v265;
              uint64_t v268 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v268 - 8) + 16))(v266, v267, v268);
              break;
            default:
              uint64_t v251 = *v245;
              unint64_t v252 = v245[1];
              sub_25348A9C8(*v245, v252);
              void *v244 = v251;
              v244[1] = v252;
              uint64_t v253 = v245[3];
              v244[2] = v245[2];
              v244[3] = v253;
              uint64_t v254 = v245[5];
              v244[4] = v245[4];
              v244[5] = v254;
              uint64_t v255 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
              uint64_t v287 = (char *)v245 + v255;
              __dstd = (char *)v244 + v255;
              uint64_t v256 = sub_253B07160();
              uint64_t v282 = *(void (**)(char *, char *, uint64_t))(*(void *)(v256 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v282(__dstd, v287, v256);
              break;
          }
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v244, 0, 1, v249);
        }
        uint64_t v3 = v248;
        uint64_t v269 = *(int *)(v246 + 20);
        uint64_t v270 = (char *)v244 + v269;
        uint64_t v271 = (char *)v245 + v269;
        uint64_t v272 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v272 - 8) + 16))(v270, v271, v272);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v244, 0, 1, v246);
      }
      uint64_t v273 = v204[12];
      uint64_t v274 = (char *)v202 + v273;
      uint64_t v275 = (char *)v203 + v273;
      uint64_t v276 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v276 - 8) + 16))(v274, v275, v276);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v202, 0, 1, (uint64_t)v204);
      a1 = v319;
      uint64_t v6 = v321;
    }
    uint64_t v277 = *(int *)(v6 + 24);
    uint64_t v278 = (char *)a1 + v277;
    uint64_t v279 = (char *)v3 + v277;
    uint64_t v280 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v280 - 8) + 16))(v278, v279, v280);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoStatementResultPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    uint64_t v5 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v5))
    {
LABEL_58:
      uint64_t v66 = a1 + *(int *)(v4 + 20);
      uint64_t v67 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v67 - 8) + 8))(v66, v67);
      goto LABEL_59;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v7 = a1 + v6[7];
        uint64_t v8 = sub_253B08E50();
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, 1, v8)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
        }
        uint64_t v9 = a1 + v6[8];
        uint64_t v10 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, 1, v10))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v11 = v9 + *(int *)(v10 + 28);
          uint64_t v12 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
        }
        uint64_t v13 = a1 + v6[9];
        uint64_t v14 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v13, 1, v14))
        {
          uint64_t v15 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v13, 1, v15))
          {
            uint64_t v16 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v13, 1, v16))
            {
              swift_bridgeObjectRelease();
              sub_253487D84(*(void *)(v13 + 16), *(void *)(v13 + 24));
              uint64_t v17 = v13
                  + *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
              uint64_t v18 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
            }
            uint64_t v19 = v13 + *(int *)(v15 + 20);
            uint64_t v20 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
          }
          uint64_t v21 = v13 + *(int *)(v14 + 20);
          uint64_t v22 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
        }
        swift_bridgeObjectRelease();
        uint64_t v23 = v6[11];
        goto LABEL_57;
      case 1u:
        swift_bridgeObjectRelease();
        uint64_t v24 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v25 = a1 + *(int *)(v24 + 20);
        uint64_t v26 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v25, 1, v26))
        {
          uint64_t v27 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v25, 1, v27))
          {
            swift_bridgeObjectRelease();
            uint64_t v28 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v29 = v25 + *(int *)(v28 + 24);
            uint64_t v30 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v29, 1, v30))
            {
              uint64_t v31 = v29 + *(int *)(v30 + 20);
              uint64_t v32 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
            }
            uint64_t v33 = v25 + *(int *)(v28 + 28);
            uint64_t v34 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
          }
          uint64_t v35 = v25 + *(int *)(v26 + 20);
          uint64_t v36 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
        }
        goto LABEL_30;
      case 2u:
        swift_bridgeObjectRelease();
        uint64_t v37 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_56;
      case 3u:
        swift_bridgeObjectRelease();
        uint64_t v38 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_25;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_57;
      case 5u:
        swift_bridgeObjectRelease();
        uint64_t v38 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_25:
        uint64_t v39 = v38;
        uint64_t v40 = a1 + *(int *)(v38 + 24);
        uint64_t v41 = sub_253B08E50();
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v40, 1, v41)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
        }
        uint64_t v23 = *(int *)(v39 + 28);
        goto LABEL_57;
      case 6u:
        swift_bridgeObjectRelease();
        uint64_t v24 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v42 = a1 + *(int *)(v24 + 20);
        uint64_t v43 = sub_253B08E50();
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v42, 1, v43)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v42, v43);
        }
LABEL_30:
        uint64_t v23 = *(int *)(v24 + 24);
        goto LABEL_57;
      case 7u:
        uint64_t v44 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v44)) {
          goto LABEL_55;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v46 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
          }
          else
          {
            if (EnumCaseMultiPayload) {
              goto LABEL_55;
            }
            uint64_t v46 = type metadata accessor for TranscriptProtoAppRequirement(0);
          }
LABEL_54:
          uint64_t v62 = a1 + *(int *)(v46 + 20);
          uint64_t v63 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8))(v62, v63);
LABEL_55:
          uint64_t v37 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_56:
          uint64_t v23 = *(int *)(v37 + 20);
LABEL_57:
          uint64_t v64 = a1 + v23;
          uint64_t v65 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v65 - 8) + 8))(v64, v65);
          goto LABEL_58;
        }
        uint64_t v54 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v54)) {
          goto LABEL_53;
        }
        int v55 = swift_getEnumCaseMultiPayload();
        if (v55 == 1)
        {
          uint64_t v57 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v57))
          {
            uint64_t v58 = a1 + *(int *)(v57 + 20);
            uint64_t v59 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v59 - 8) + 8))(v58, v59);
          }
          uint64_t v56 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
        }
        else
        {
          if (v55)
          {
LABEL_53:
            uint64_t v46 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
            goto LABEL_54;
          }
          swift_bridgeObjectRelease();
          uint64_t v56 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
        }
        uint64_t v60 = a1 + *(int *)(v56 + 20);
        uint64_t v61 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v60, v61);
        goto LABEL_53;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        goto LABEL_57;
      case 9u:
        uint64_t v47 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v47))
        {
          uint64_t v48 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v48))
          {
            uint64_t v49 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 16, v49))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v50 = a1 + *(int *)(v49 + 28);
              uint64_t v51 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v51 - 8) + 8))(v50, v51);
            }
          }
          uint64_t v52 = a1 + *(int *)(v47 + 20);
          uint64_t v53 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v52, v53);
        }
        uint64_t v37 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_56;
      case 0xAu:
        swift_bridgeObjectRelease();
        uint64_t v37 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
        goto LABEL_56;
      default:
        goto LABEL_58;
    }
  }
LABEL_59:
  uint64_t v68 = a1 + *(int *)(a2 + 20);
  uint64_t v69 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v68, 1, (uint64_t)v69))
  {
    swift_bridgeObjectRelease();
    uint64_t v70 = v68 + v69[5];
    uint64_t v71 = type metadata accessor for TranscriptProtoResponseDialog(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v70, 1, v71))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v72 = v70 + *(int *)(v71 + 32);
      uint64_t v73 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v73 - 8) + 8))(v72, v73);
    }
    uint64_t v74 = v68 + v69[6];
    uint64_t v75 = type metadata accessor for TranscriptProtoResponseVisual(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v74, 1, v75))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v76 = v74 + *(int *)(v75 + 24);
      uint64_t v77 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v76, 1, v77))
      {
        uint64_t v78 = v76 + *(int *)(v77 + 20);
        uint64_t v79 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v78, v79);
      }
      uint64_t v80 = v74 + *(int *)(v75 + 28);
      uint64_t v81 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v80, v81);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v82 = v68 + v69[11];
    uint64_t v83 = type metadata accessor for TranscriptProtoUIType(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v82, 1, v83))
    {
      uint64_t v84 = type metadata accessor for TranscriptProtoUitype(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v82, 1, v84))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            sub_253487D84(*(void *)v82, *(void *)(v82 + 8));
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v85 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
            goto LABEL_74;
          case 1u:
            swift_bridgeObjectRelease();
            uint64_t v86 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
            goto LABEL_73;
          case 2u:
            sub_253487D84(*(void *)v82, *(void *)(v82 + 8));
            swift_bridgeObjectRelease();
            uint64_t v85 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
            goto LABEL_74;
          case 3u:
            sub_253487D84(*(void *)v82, *(void *)(v82 + 8));
            uint64_t v86 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_73:
            uint64_t v85 = *(int *)(v86 + 20);
LABEL_74:
            uint64_t v87 = v82 + v85;
            uint64_t v88 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v88 - 8) + 8))(v87, v88);
            break;
          default:
            break;
        }
      }
      uint64_t v89 = v82 + *(int *)(v83 + 20);
      uint64_t v90 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v90 - 8) + 8))(v89, v90);
    }
    uint64_t v91 = v68 + v69[12];
    uint64_t v92 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v92 - 8) + 8))(v91, v92);
  }
  uint64_t v93 = a1 + *(int *)(a2 + 24);
  uint64_t v94 = sub_253B07160();
  uint64_t v95 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v94 - 8) + 8);
  return v95(v93, v94);
}

void *initializeWithCopy for TranscriptProtoStatementResultPayload(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE0388);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v8))
    {
      uint64_t v9 = sub_253462A5C(&qword_269CE04B0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v318 = a3;
          *a1 = *a2;
          uint64_t v16 = type metadata accessor for TranscriptProtoActionConfirmation(0);
          uint64_t v17 = *(int *)(v16 + 20);
          uint64_t v18 = a1;
          uint64_t v19 = (void *)((char *)a1 + v17);
          uint64_t v20 = (void *)((char *)a2 + v17);
          uint64_t v21 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21))
          {
            uint64_t v22 = sub_253462A5C(&qword_269CE0480);
            memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
          }
          else
          {
            uint64_t v302 = a2;
            uint64_t v72 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v72))
            {
              uint64_t v73 = sub_253462A5C(&qword_269CE0478);
              memcpy(v19, v20, *(void *)(*(void *)(v73 - 8) + 64));
            }
            else
            {
              uint64_t v294 = (void *)v72;
              uint64_t v105 = v20[1];
              *uint64_t v19 = *v20;
              v19[1] = v105;
              *((unsigned char *)v19 + 16) = *((unsigned char *)v20 + 16);
              uint64_t v314 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
              uint64_t v106 = *(int *)(v314 + 24);
              __dst = (char *)v19 + v106;
              uint64_t v107 = (char *)v20 + v106;
              uint64_t v108 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
              swift_bridgeObjectRetain();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v107, 1, v108))
              {
                uint64_t v109 = sub_253462A5C(&qword_269CE0470);
                memcpy(__dst, v107, *(void *)(*(void *)(v109 - 8) + 64));
              }
              else
              {
                unsigned char *__dst = *v107;
                uint64_t v131 = *(int *)(v108 + 20);
                uint64_t v283 = &__dst[v131];
                uint64_t v132 = &v107[v131];
                uint64_t v133 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v133 - 8) + 16))(v283, v132, v133);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v108);
              }
              uint64_t v134 = *(int *)(v314 + 28);
              uint64_t v135 = (char *)v19 + v134;
              uint64_t v136 = (char *)v20 + v134;
              uint64_t v137 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16))(v135, v136, v137);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, (uint64_t)v294);
            }
            uint64_t v138 = *(int *)(v21 + 20);
            uint64_t v139 = (char *)v19 + v138;
            uint64_t v140 = (char *)v20 + v138;
            uint64_t v141 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 16))(v139, v140, v141);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v21);
            a2 = v302;
          }
          uint64_t v142 = *(int *)(v16 + 24);
          a1 = v18;
          uint64_t v143 = (char *)v18 + v142;
          uint64_t v144 = (char *)a2 + v142;
          uint64_t v145 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 16))(v143, v144, v145);
          goto LABEL_67;
        case 2u:
          uint64_t v23 = a2[1];
          *a1 = *a2;
          a1[1] = v23;
          uint64_t v24 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
          uint64_t v308 = (char *)a1 + v24;
          uint64_t v25 = (char *)a2 + v24;
          uint64_t v26 = sub_253B07160();
          uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
          swift_bridgeObjectRetain();
          v27(v308, v25, v26);
          goto LABEL_81;
        case 3u:
          uint64_t v28 = a3;
          uint64_t v29 = a2[1];
          *a1 = *a2;
          a1[1] = v29;
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          uint64_t v30 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
          uint64_t v31 = *(int *)(v30 + 24);
          uint64_t v32 = (char *)a1 + v31;
          uint64_t v33 = (char *)a2 + v31;
          uint64_t v34 = sub_253B08E50();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v33, 1, v34)) {
            goto LABEL_12;
          }
          goto LABEL_29;
        case 4u:
          uint64_t v36 = a2[1];
          *a1 = *a2;
          a1[1] = v36;
          uint64_t v37 = a2[3];
          a1[2] = a2[2];
          a1[3] = v37;
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          uint64_t v38 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
          uint64_t v300 = (char *)a2 + v38;
          uint64_t v309 = (char *)a1 + v38;
          uint64_t v39 = a3;
          uint64_t v40 = sub_253B07160();
          uint64_t v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v42 = v40;
          a3 = v39;
          v41(v309, v300, v42);
          goto LABEL_81;
        case 5u:
          uint64_t v28 = a3;
          uint64_t v43 = a2[1];
          *a1 = *a2;
          a1[1] = v43;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v30 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
          uint64_t v44 = *(int *)(v30 + 24);
          uint64_t v32 = (char *)a1 + v44;
          uint64_t v33 = (char *)a2 + v44;
          uint64_t v34 = sub_253B08E50();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v33, 1, v34))
          {
LABEL_12:
            uint64_t v35 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
          }
          else
          {
LABEL_29:
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v32, 0, 1, v34);
          }
          a3 = v28;
          uint64_t v74 = *(int *)(v30 + 28);
          uint64_t v75 = (char *)a1 + v74;
          uint64_t v76 = (char *)a2 + v74;
          uint64_t v77 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v75, v76, v77);
          goto LABEL_81;
        case 6u:
          uint64_t v45 = a3;
          uint64_t v46 = a2[1];
          *a1 = *a2;
          a1[1] = v46;
          uint64_t v47 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
          uint64_t v48 = *(int *)(v47 + 20);
          uint64_t v49 = (char *)a1 + v48;
          uint64_t v50 = (char *)a2 + v48;
          uint64_t v51 = sub_253B08E50();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v50, 1, v51))
          {
            uint64_t v52 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v49, 0, 1, v51);
          }
          a3 = v45;
          uint64_t v78 = *(int *)(v47 + 24);
          uint64_t v79 = (char *)a1 + v78;
          uint64_t v80 = (char *)a2 + v78;
          uint64_t v81 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v79, v80, v81);
          goto LABEL_81;
        case 7u:
          uint64_t v53 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v53))
          {
            uint64_t v54 = sub_253462A5C(&qword_269CE0498);
            memcpy(a1, a2, *(void *)(*(void *)(v54 - 8) + 64));
            goto LABEL_80;
          }
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2)
          {
            uint64_t v112 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v112))
            {
              uint64_t v113 = sub_253462A5C(&qword_269CE0490);
              memcpy(a1, a2, *(void *)(*(void *)(v113 - 8) + 64));
            }
            else
            {
              int v170 = swift_getEnumCaseMultiPayload();
              if (v170 == 1)
              {
                uint64_t v176 = a3;
                uint64_t v177 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v177))
                {
                  uint64_t v178 = sub_253462A5C(&qword_269CE0488);
                  memcpy(a1, a2, *(void *)(*(void *)(v178 - 8) + 64));
                }
                else
                {
                  *(unsigned char *)a1 = *(unsigned char *)a2;
                  uint64_t v179 = *(int *)(v177 + 20);
                  uint64_t v180 = (char *)a1 + v179;
                  uint64_t v181 = (char *)a2 + v179;
                  uint64_t v182 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 16))(v180, v181, v182);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v177);
                }
                uint64_t v183 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0)
                              + 20);
                uint64_t v184 = (char *)a1 + v183;
                uint64_t v185 = (char *)a2 + v183;
                uint64_t v186 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v186 - 8) + 16))(v184, v185, v186);
                swift_storeEnumTagMultiPayload();
                a3 = v176;
              }
              else if (v170)
              {
                memcpy(a1, a2, *(void *)(*(void *)(v112 - 8) + 64));
              }
              else
              {
                uint64_t v171 = a2[1];
                *a1 = *a2;
                a1[1] = v171;
                uint64_t v172 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
                uint64_t v296 = (char *)a2 + v172;
                uint64_t v305 = (char *)a1 + v172;
                uint64_t v316 = a1;
                uint64_t v173 = sub_253B07160();
                uint64_t v174 = *(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v175 = v173;
                a1 = v316;
                v174(v305, v296, v175);
                swift_storeEnumTagMultiPayload();
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v112);
            }
            uint64_t v187 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
            uint64_t v188 = (char *)a1 + v187;
            uint64_t v189 = (char *)a2 + v187;
            uint64_t v190 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v190 - 8) + 16))(v188, v189, v190);
          }
          else if (EnumCaseMultiPayload == 1)
          {
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v114 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v115 = (char *)a1 + v114;
            uint64_t v116 = (char *)a2 + v114;
            uint64_t v117 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16))(v115, v116, v117);
          }
          else
          {
            if (EnumCaseMultiPayload)
            {
              memcpy(a1, a2, *(void *)(*(void *)(v53 - 8) + 64));
              goto LABEL_79;
            }
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v83 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v84 = (char *)a1 + v83;
            uint64_t v85 = (char *)a2 + v83;
            uint64_t v86 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v84, v85, v86);
          }
          swift_storeEnumTagMultiPayload();
LABEL_79:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v53);
LABEL_80:
          uint64_t v191 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
          uint64_t v192 = (char *)a1 + v191;
          uint64_t v193 = (char *)a2 + v191;
          uint64_t v194 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v194 - 8) + 16))(v192, v193, v194);
LABEL_81:
          swift_storeEnumTagMultiPayload();
LABEL_82:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v8);
          break;
        case 8u:
          uint64_t v55 = a2[1];
          *a1 = *a2;
          a1[1] = v55;
          a1[2] = a2[2];
          uint64_t v56 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
          uint64_t v301 = (char *)a2 + v56;
          uint64_t v310 = (char *)a1 + v56;
          uint64_t v57 = a3;
          uint64_t v58 = sub_253B07160();
          uint64_t v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v60 = v58;
          a3 = v57;
          v59(v310, v301, v60);
          goto LABEL_81;
        case 9u:
          uint64_t v61 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v61))
          {
            uint64_t v62 = sub_253462A5C(&qword_269CE04A8);
            memcpy(a1, a2, *(void *)(*(void *)(v62 - 8) + 64));
          }
          else
          {
            uint64_t v87 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v87))
            {
              uint64_t v88 = sub_253462A5C(&qword_269CE04A0);
              memcpy(a1, a2, *(void *)(*(void *)(v88 - 8) + 64));
            }
            else
            {
              uint64_t v103 = a3;
              uint64_t v104 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v104))
              {
                memcpy(a1, a2, *(void *)(*(void *)(v87 - 8) + 64));
              }
              else
              {
                uint64_t v118 = a2[1];
                *a1 = *a2;
                a1[1] = v118;
                uint64_t v119 = a2[3];
                a1[2] = a2[2];
                a1[3] = v119;
                a1[4] = a2[4];
                uint64_t v120 = *(int *)(v104 + 28);
                __dstb = (char *)a2 + v120;
                uint64_t v295 = (char *)a1 + v120;
                uint64_t v315 = (uint64_t)a1;
                uint64_t v121 = sub_253B07160();
                uint64_t v282 = *(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v122 = v121;
                a1 = (void *)v315;
                v282(v295, __dstb, v122);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v315, 0, 16, v104);
              }
              a3 = v103;
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v87);
            }
            uint64_t v123 = *(int *)(v61 + 20);
            uint64_t v124 = (char *)a1 + v123;
            uint64_t v125 = (char *)a2 + v123;
            uint64_t v126 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 16))(v124, v125, v126);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v61);
          }
          uint64_t v127 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
          uint64_t v128 = (char *)a1 + v127;
          uint64_t v129 = (char *)a2 + v127;
          uint64_t v130 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16))(v128, v129, v130);
          goto LABEL_81;
        case 0xAu:
          *a1 = *a2;
          uint64_t v63 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
          uint64_t v311 = (char *)a1 + v63;
          uint64_t v64 = (char *)a2 + v63;
          uint64_t v65 = sub_253B07160();
          uint64_t v66 = *(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16);
          swift_bridgeObjectRetain();
          v66(v311, v64, v65);
          goto LABEL_81;
        default:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          *(_WORD *)((char *)a1 + 1) = *(_WORD *)((char *)a2 + 1);
          uint64_t v10 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
          uint64_t v11 = v10[7];
          uint64_t v12 = (char *)a1 + v11;
          uint64_t v13 = (char *)a2 + v11;
          uint64_t v14 = sub_253B08E50();
          uint64_t v318 = a3;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
          {
            uint64_t v15 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
          }
          uint64_t v67 = v10[8];
          uint64_t v68 = (void *)((char *)a1 + v67);
          uint64_t v69 = (void *)((char *)a2 + v67);
          uint64_t v70 = type metadata accessor for TranscriptProtoUndoContext(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v69, 1, v70))
          {
            uint64_t v71 = sub_253462A5C(&qword_269CE0450);
            memcpy(v68, v69, *(void *)(*(void *)(v71 - 8) + 64));
          }
          else
          {
            uint64_t v89 = v69[1];
            *uint64_t v68 = *v69;
            v68[1] = v89;
            uint64_t v303 = a2;
            uint64_t v312 = a1;
            uint64_t v90 = v69[3];
            v68[2] = v69[2];
            v68[3] = v90;
            uint64_t v91 = v69[5];
            v68[4] = v69[4];
            v68[5] = v91;
            uint64_t v92 = *(int *)(v70 + 28);
            __dsta = (char *)v69 + v92;
            uint64_t v293 = (char *)v68 + v92;
            uint64_t v93 = sub_253B07160();
            uint64_t v281 = *(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16);
            swift_bridgeObjectRetain();
            a1 = v312;
            swift_bridgeObjectRetain();
            a2 = v303;
            swift_bridgeObjectRetain();
            v281(v293, __dsta, v93);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v68, 0, 1, v70);
          }
          uint64_t v94 = v10[9];
          uint64_t v95 = a1;
          uint64_t v96 = (void *)((char *)a1 + v94);
          uint64_t v97 = (void *)((char *)a2 + v94);
          uint64_t v98 = type metadata accessor for TranscriptProtoFollowUpAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v97, 1, v98))
          {
            uint64_t v99 = sub_253462A5C(&qword_269CE0468);
            memcpy(v96, v97, *(void *)(*(void *)(v99 - 8) + 64));
          }
          else
          {
            uint64_t v313 = v10;
            uint64_t v100 = a2;
            uint64_t v101 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v97, 1, v101))
            {
              uint64_t v102 = sub_253462A5C(&qword_269CE0460);
              memcpy(v96, v97, *(void *)(*(void *)(v102 - 8) + 64));
            }
            else
            {
              uint64_t v110 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v97, 1, v110))
              {
                uint64_t v111 = sub_253462A5C(&qword_269CE0458);
                memcpy(v96, v97, *(void *)(*(void *)(v111 - 8) + 64));
              }
              else
              {
                uint64_t v146 = v97[1];
                *uint64_t v96 = *v97;
                v96[1] = v146;
                uint64_t v304 = v110;
                uint64_t v147 = v97[2];
                unint64_t v148 = v97[3];
                swift_bridgeObjectRetain();
                sub_25348A9C8(v147, v148);
                v96[2] = v147;
                v96[3] = v148;
                v96[4] = v97[4];
                uint64_t v149 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                              + 28);
                unint64_t v150 = (char *)v96 + v149;
                uint64_t v151 = (char *)v97 + v149;
                uint64_t v152 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 16))(v150, v151, v152);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v96, 0, 1, v304);
              }
              uint64_t v153 = *(int *)(v101 + 20);
              uint64_t v154 = (char *)v96 + v153;
              uint64_t v155 = (char *)v97 + v153;
              uint64_t v156 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 16))(v154, v155, v156);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v96, 0, 1, v101);
            }
            uint64_t v157 = *(int *)(v98 + 20);
            uint64_t v158 = (char *)v96 + v157;
            uint64_t v159 = (char *)v97 + v157;
            uint64_t v160 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 16))(v158, v159, v160);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v96, 0, 1, v98);
            a2 = v100;
            uint64_t v10 = v313;
          }
          uint64_t v161 = v10[10];
          a1 = v95;
          uint64_t v162 = (void *)((char *)v95 + v161);
          uint64_t v163 = (void *)((char *)a2 + v161);
          uint64_t v164 = v163[1];
          *uint64_t v162 = *v163;
          v162[1] = v164;
          uint64_t v165 = v10[11];
          uint64_t v166 = (char *)v95 + v165;
          uint64_t v167 = (char *)a2 + v165;
          uint64_t v168 = sub_253B07160();
          uint64_t v169 = *(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16);
          swift_bridgeObjectRetain();
          v169(v166, v167, v168);
LABEL_67:
          swift_storeEnumTagMultiPayload();
          a3 = v318;
          goto LABEL_82;
      }
    }
    uint64_t v195 = *(int *)(v6 + 20);
    uint64_t v196 = (char *)a1 + v195;
    uint64_t v197 = (char *)a2 + v195;
    uint64_t v198 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 16))(v196, v197, v198);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v199 = *(int *)(a3 + 20);
  uint64_t v200 = (void *)((char *)a1 + v199);
  uint64_t v201 = (void *)((char *)a2 + v199);
  uint64_t v202 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v201, 1, (uint64_t)v202))
  {
    uint64_t v203 = sub_253462A5C(&qword_269CE0378);
    memcpy(v200, v201, *(void *)(*(void *)(v203 - 8) + 64));
  }
  else
  {
    uint64_t v317 = a1;
    uint64_t v319 = a3;
    void *v200 = *v201;
    uint64_t v204 = v202[5];
    uint64_t v205 = (void *)((char *)v200 + v204);
    uint64_t v206 = (void *)((char *)v201 + v204);
    uint64_t v207 = type metadata accessor for TranscriptProtoResponseDialog(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v206, 1, v207))
    {
      uint64_t v208 = sub_253462A5C(&qword_269CE04B8);
      memcpy(v205, v206, *(void *)(*(void *)(v208 - 8) + 64));
    }
    else
    {
      uint64_t v209 = v206[1];
      *uint64_t v205 = *v206;
      v205[1] = v209;
      uint64_t v210 = v206[3];
      v205[2] = v206[2];
      v205[3] = v210;
      uint64_t v306 = a2;
      uint64_t v211 = v206[5];
      v205[4] = v206[4];
      v205[5] = v211;
      uint64_t v212 = v206[7];
      v205[6] = v206[6];
      v205[7] = v212;
      uint64_t v213 = *(int *)(v207 + 32);
      __dstc = (char *)v206 + v213;
      uint64_t v297 = (char *)v205 + v213;
      uint64_t v214 = sub_253B07160();
      uint64_t v284 = *(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a2 = v306;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v284(v297, __dstc, v214);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v205, 0, 1, v207);
    }
    uint64_t v215 = v202[6];
    uint64_t v216 = (void *)((char *)v200 + v215);
    uint64_t v217 = (void *)((char *)v201 + v215);
    uint64_t v218 = type metadata accessor for TranscriptProtoResponseVisual(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v217, 1, v218))
    {
      uint64_t v219 = sub_253462A5C(&qword_269CE04C8);
      memcpy(v216, v217, *(void *)(*(void *)(v219 - 8) + 64));
    }
    else
    {
      uint64_t v307 = a2;
      uint64_t v220 = v217[1];
      void *v216 = *v217;
      v216[1] = v220;
      uint64_t v221 = *(int *)(v218 + 24);
      uint64_t v298 = (char *)v216 + v221;
      uint64_t v222 = (char *)v217 + v221;
      uint64_t v223 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v222, 1, v223))
      {
        uint64_t v224 = sub_253462A5C(&qword_269CE04C0);
        memcpy(v298, v222, *(void *)(*(void *)(v224 - 8) + 64));
      }
      else
      {
        *uint64_t v298 = *v222;
        uint64_t v225 = *(int *)(v223 + 20);
        uint64_t v226 = &v298[v225];
        uint64_t v227 = &v222[v225];
        uint64_t v228 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v228 - 8) + 16))(v226, v227, v228);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v298, 0, 1, v223);
      }
      uint64_t v229 = *(int *)(v218 + 28);
      uint64_t v230 = (char *)v216 + v229;
      uint64_t v231 = (char *)v217 + v229;
      uint64_t v232 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v232 - 8) + 16))(v230, v231, v232);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v216, 0, 1, v218);
      a2 = v307;
    }
    uint64_t v233 = v202[7];
    uint64_t v234 = (void *)((char *)v200 + v233);
    uint64_t v235 = (void *)((char *)v201 + v233);
    uint64_t v236 = v235[1];
    void *v234 = *v235;
    v234[1] = v236;
    uint64_t v237 = v202[8];
    uint64_t v238 = (void *)((char *)v200 + v237);
    uint64_t v239 = (void *)((char *)v201 + v237);
    uint64_t v240 = v239[1];
    *uint64_t v238 = *v239;
    v238[1] = v240;
    *((unsigned char *)v200 + v202[9]) = *((unsigned char *)v201 + v202[9]);
    *((unsigned char *)v200 + v202[10]) = *((unsigned char *)v201 + v202[10]);
    uint64_t v241 = v202[11];
    uint64_t v242 = (void *)((char *)v200 + v241);
    uint64_t v243 = (void *)((char *)v201 + v241);
    uint64_t v244 = type metadata accessor for TranscriptProtoUIType(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v243, 1, v244))
    {
      uint64_t v245 = sub_253462A5C(&qword_269CE04D0);
      memcpy(v242, v243, *(void *)(*(void *)(v245 - 8) + 64));
    }
    else
    {
      uint64_t v246 = a2;
      uint64_t v247 = type metadata accessor for TranscriptProtoUitype(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v243, 1, v247))
      {
        uint64_t v248 = sub_253462A5C(&qword_269CDCC08);
        memcpy(v242, v243, *(void *)(*(void *)(v248 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v255 = v243[1];
            *uint64_t v242 = *v243;
            v242[1] = v255;
            uint64_t v256 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
            goto LABEL_103;
          case 2u:
            uint64_t v257 = *v243;
            unint64_t v258 = v243[1];
            sub_25348A9C8(*v243, v258);
            *uint64_t v242 = v257;
            v242[1] = v258;
            uint64_t v259 = v243[3];
            v242[2] = v243[2];
            v242[3] = v259;
            uint64_t v256 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
LABEL_103:
            __dste = (char *)v243 + v256;
            long long v299 = (char *)v242 + v256;
            uint64_t v260 = sub_253B07160();
            uint64_t v286 = *(void (**)(char *, char *, uint64_t))(*(void *)(v260 - 8) + 16);
            swift_bridgeObjectRetain();
            v286(v299, __dste, v260);
            break;
          case 3u:
            uint64_t v261 = *v243;
            unint64_t v262 = v243[1];
            sub_25348A9C8(*v243, v262);
            *uint64_t v242 = v261;
            v242[1] = v262;
            uint64_t v263 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
            unint64_t v264 = (char *)v242 + v263;
            uint64_t v265 = (char *)v243 + v263;
            uint64_t v266 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v266 - 8) + 16))(v264, v265, v266);
            break;
          default:
            uint64_t v249 = *v243;
            unint64_t v250 = v243[1];
            sub_25348A9C8(*v243, v250);
            *uint64_t v242 = v249;
            v242[1] = v250;
            uint64_t v251 = v243[3];
            v242[2] = v243[2];
            v242[3] = v251;
            uint64_t v252 = v243[5];
            v242[4] = v243[4];
            v242[5] = v252;
            uint64_t v253 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
            uint64_t v285 = (char *)v243 + v253;
            __dstd = (char *)v242 + v253;
            uint64_t v254 = sub_253B07160();
            uint64_t v280 = *(void (**)(char *, char *, uint64_t))(*(void *)(v254 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v280(__dstd, v285, v254);
            break;
        }
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v242, 0, 1, v247);
      }
      a2 = v246;
      uint64_t v267 = *(int *)(v244 + 20);
      uint64_t v268 = (char *)v242 + v267;
      uint64_t v269 = (char *)v243 + v267;
      uint64_t v270 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v270 - 8) + 16))(v268, v269, v270);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v242, 0, 1, v244);
    }
    uint64_t v271 = v202[12];
    uint64_t v272 = (char *)v200 + v271;
    uint64_t v273 = (char *)v201 + v271;
    uint64_t v274 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v274 - 8) + 16))(v272, v273, v274);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v200, 0, 1, (uint64_t)v202);
    a1 = v317;
    a3 = v319;
  }
  uint64_t v275 = *(int *)(a3 + 24);
  uint64_t v276 = (char *)a1 + v275;
  uint64_t v277 = (char *)a2 + v275;
  uint64_t v278 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v278 - 8) + 16))(v276, v277, v278);
  return a1;
}

void *assignWithCopy for TranscriptProtoStatementResultPayload(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v9))
      {
        uint64_t v10 = sub_253462A5C(&qword_269CE04B0);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_229:
        uint64_t v558 = *(int *)(v6 + 20);
        v559 = (char *)a1 + v558;
        uint64_t v560 = (char *)a2 + v558;
        uint64_t v561 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v561 - 8) + 16))(v559, v560, v561);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
        goto LABEL_252;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v917 = a3;
          *a1 = *a2;
          uint64_t v34 = type metadata accessor for TranscriptProtoActionConfirmation(0);
          uint64_t v35 = a1;
          uint64_t v36 = v34;
          uint64_t v37 = *(int *)(v34 + 20);
          uint64_t v38 = v35;
          uint64_t v39 = (void *)((char *)v35 + v37);
          uint64_t v40 = (void *)((char *)a2 + v37);
          uint64_t v41 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v40, 1, v41))
          {
            uint64_t v42 = sub_253462A5C(&qword_269CE0480);
            memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
          }
          else
          {
            uint64_t v164 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v40, 1, v164))
            {
              uint64_t v165 = sub_253462A5C(&qword_269CE0478);
              memcpy(v39, v40, *(void *)(*(void *)(v165 - 8) + 64));
            }
            else
            {
              __src = a2;
              uint64_t v878 = v164;
              void *v39 = *v40;
              v39[1] = v40[1];
              *((unsigned char *)v39 + 16) = *((unsigned char *)v40 + 16);
              uint64_t v900 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
              uint64_t v283 = *(int *)(v900 + 24);
              __dst = (char *)v39 + v283;
              uint64_t v284 = (char *)v40 + v283;
              uint64_t v285 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
              swift_bridgeObjectRetain();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v284, 1, v285))
              {
                uint64_t v286 = sub_253462A5C(&qword_269CE0470);
                memcpy(__dst, v284, *(void *)(*(void *)(v286 - 8) + 64));
              }
              else
              {
                unsigned char *__dst = *v284;
                uint64_t v341 = *(int *)(v285 + 20);
                v830 = &__dst[v341];
                uint64_t v342 = &v284[v341];
                uint64_t v343 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v343 - 8) + 16))(v830, v342, v343);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v285);
              }
              uint64_t v344 = *(int *)(v900 + 28);
              uint64_t v345 = (char *)v39 + v344;
              long long v346 = (char *)v40 + v344;
              uint64_t v347 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v347 - 8) + 16))(v345, v346, v347);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v39, 0, 1, v878);
              a2 = __src;
            }
            uint64_t v348 = *(int *)(v41 + 20);
            uint64_t v349 = (char *)v39 + v348;
            uint64_t v350 = (char *)v40 + v348;
            uint64_t v351 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v351 - 8) + 16))(v349, v350, v351);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v39, 0, 1, v41);
          }
          uint64_t v352 = *(int *)(v36 + 24);
          a1 = v38;
          uint64_t v353 = (char *)v38 + v352;
          uint64_t v354 = (char *)a2 + v352;
          uint64_t v355 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v355 - 8) + 16))(v353, v354, v355);
          goto LABEL_155;
        case 2u:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v43 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
          uint64_t v44 = (char *)a1 + v43;
          __dstd = a1;
          uint64_t v45 = (char *)a2 + v43;
          uint64_t v46 = a3;
          uint64_t v47 = sub_253B07160();
          uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v49 = v45;
          a1 = __dstd;
          uint64_t v50 = v47;
          a3 = v46;
          v48(v44, v49, v50);
          goto LABEL_227;
        case 3u:
          uint64_t v51 = a3;
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v52 = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          a1[2] = v52;
          uint64_t v53 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
          uint64_t v54 = *(int *)(v53 + 24);
          uint64_t v55 = a1;
          uint64_t v56 = (char *)a1 + v54;
          uint64_t v57 = (char *)a2 + v54;
          uint64_t v58 = sub_253B08E50();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v57, 1, v58)) {
            goto LABEL_27;
          }
          goto LABEL_60;
        case 4u:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          uint64_t v60 = a2[3];
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          a1[3] = v60;
          uint64_t v61 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
          uint64_t v919 = a3;
          uint64_t v62 = a2;
          uint64_t v63 = a1;
          uint64_t v64 = (char *)a1 + v61;
          v893 = (char *)v62 + v61;
          uint64_t v65 = sub_253B07160();
          uint64_t v66 = *(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v67 = v64;
          a1 = v63;
          a2 = v62;
          a3 = v919;
          v66(v67, v893, v65);
          goto LABEL_227;
        case 5u:
          uint64_t v51 = a3;
          *a1 = *a2;
          a1[1] = a2[1];
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v53 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
          uint64_t v68 = *(int *)(v53 + 24);
          uint64_t v55 = a1;
          uint64_t v56 = (char *)a1 + v68;
          uint64_t v57 = (char *)a2 + v68;
          uint64_t v58 = sub_253B08E50();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v57, 1, v58))
          {
LABEL_27:
            uint64_t v59 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
          }
          else
          {
LABEL_60:
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v56, 0, 1, v58);
          }
          a3 = v51;
          uint64_t v166 = *(int *)(v53 + 28);
          a1 = v55;
          uint64_t v167 = (char *)v55 + v166;
          uint64_t v168 = (char *)a2 + v166;
          uint64_t v169 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 16))(v167, v168, v169);
          goto LABEL_227;
        case 6u:
          uint64_t v69 = a3;
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v70 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
          uint64_t v71 = *(int *)(v70 + 20);
          uint64_t v72 = a1;
          uint64_t v73 = (char *)a1 + v71;
          uint64_t v74 = (char *)a2 + v71;
          uint64_t v75 = sub_253B08E50();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v74, 1, v75))
          {
            uint64_t v76 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v73, v74, *(void *)(*(void *)(v76 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v73, v74, v75);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v73, 0, 1, v75);
          }
          a3 = v69;
          uint64_t v170 = *(int *)(v70 + 24);
          a1 = v72;
          uint64_t v171 = (char *)v72 + v170;
          uint64_t v172 = (char *)a2 + v170;
          uint64_t v173 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 16))(v171, v172, v173);
          goto LABEL_227;
        case 7u:
          uint64_t v77 = a1;
          uint64_t v78 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v78))
          {
            uint64_t v79 = sub_253462A5C(&qword_269CE0498);
            a1 = v77;
            memcpy(v77, a2, *(void *)(*(void *)(v79 - 8) + 64));
            goto LABEL_226;
          }
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload != 2)
          {
            if (EnumCaseMultiPayload == 1)
            {
              *(unsigned char *)uint64_t v77 = *(unsigned char *)a2;
              uint64_t v306 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
              uint64_t v307 = (char *)v77 + v306;
              uint64_t v308 = (char *)a2 + v306;
              uint64_t v309 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v309 - 8) + 16))(v307, v308, v309);
            }
            else
            {
              if (EnumCaseMultiPayload)
              {
                memcpy(v77, a2, *(void *)(*(void *)(v78 - 8) + 64));
                goto LABEL_225;
              }
              *(unsigned char *)uint64_t v77 = *(unsigned char *)a2;
              uint64_t v175 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
              uint64_t v176 = (char *)v77 + v175;
              uint64_t v177 = (char *)a2 + v175;
              uint64_t v178 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 16))(v176, v177, v178);
            }
LABEL_224:
            swift_storeEnumTagMultiPayload();
LABEL_225:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v77, 0, 1, v78);
            a1 = v77;
LABEL_226:
            uint64_t v554 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
            uint64_t v555 = (char *)a1 + v554;
            uint64_t v556 = (char *)a2 + v554;
            uint64_t v557 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v557 - 8) + 16))(v555, v556, v557);
LABEL_227:
            swift_storeEnumTagMultiPayload();
LABEL_228:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v9);
            goto LABEL_229;
          }
          uint64_t v303 = a3;
          uint64_t v304 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v304))
          {
            uint64_t v305 = sub_253462A5C(&qword_269CE0490);
            memcpy(v77, a2, *(void *)(*(void *)(v305 - 8) + 64));
LABEL_223:
            a3 = v303;
            uint64_t v550 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
            uint64_t v551 = (char *)v77 + v550;
            uint64_t v552 = (char *)a2 + v550;
            uint64_t v553 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v553 - 8) + 16))(v551, v552, v553);
            goto LABEL_224;
          }
          int v412 = swift_getEnumCaseMultiPayload();
          if (v412 == 1)
          {
            uint64_t v483 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v483))
            {
              uint64_t v484 = sub_253462A5C(&qword_269CE0488);
              memcpy(v77, a2, *(void *)(*(void *)(v484 - 8) + 64));
            }
            else
            {
              *(unsigned char *)uint64_t v77 = *(unsigned char *)a2;
              uint64_t v542 = *(int *)(v483 + 20);
              uint64_t v543 = (char *)v77 + v542;
              v544 = (char *)a2 + v542;
              uint64_t v545 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v545 - 8) + 16))(v543, v544, v545);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v77, 0, 1, v483);
            }
            uint64_t v546 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
            uint64_t v547 = (char *)v77 + v546;
            uint64_t v548 = (char *)a2 + v546;
            uint64_t v549 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v549 - 8) + 16))(v547, v548, v549);
          }
          else
          {
            if (v412)
            {
              memcpy(v77, a2, *(void *)(*(void *)(v304 - 8) + 64));
LABEL_222:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v77, 0, 1, v304);
              goto LABEL_223;
            }
            *uint64_t v77 = *a2;
            v77[1] = a2[1];
            uint64_t v413 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
            int v907 = (char *)a2 + v413;
            uint64_t v927 = (char *)v77 + v413;
            uint64_t v414 = sub_253B07160();
            uint64_t v883 = *(void (**)(char *, char *, uint64_t))(*(void *)(v414 - 8) + 16);
            swift_bridgeObjectRetain();
            v883(v927, v907, v414);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_222;
        case 8u:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          uint64_t v80 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
          uint64_t v920 = a3;
          uint64_t v81 = a2;
          uint64_t v82 = a1;
          uint64_t v83 = (char *)a1 + v80;
          uint64_t v894 = (char *)v81 + v80;
          uint64_t v84 = sub_253B07160();
          uint64_t v85 = *(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v86 = v83;
          a1 = v82;
          a2 = v81;
          a3 = v920;
          v85(v86, v894, v84);
          goto LABEL_227;
        case 9u:
          uint64_t v87 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v87))
          {
            uint64_t v88 = sub_253462A5C(&qword_269CE04A8);
            memcpy(a1, a2, *(void *)(*(void *)(v88 - 8) + 64));
          }
          else
          {
            uint64_t v179 = a2;
            uint64_t v180 = a1;
            uint64_t v181 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v179, 1, v181))
            {
              uint64_t v182 = sub_253462A5C(&qword_269CE04A0);
              uint64_t v183 = v180;
              memcpy(v180, v179, *(void *)(*(void *)(v182 - 8) + 64));
            }
            else
            {
              uint64_t v925 = a3;
              uint64_t v287 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
              uint64_t v183 = v180;
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v179, 16, v287))
              {
                uint64_t v288 = v179;
                memcpy(v180, v179, *(void *)(*(void *)(v181 - 8) + 64));
              }
              else
              {
                *uint64_t v180 = *v179;
                v180[1] = v179[1];
                v180[2] = v179[2];
                v180[3] = v179[3];
                v180[4] = v179[4];
                uint64_t v356 = *(int *)(v287 + 28);
                uint64_t v288 = v179;
                uint64_t v881 = (char *)v179 + v356;
                v904 = (char *)v180 + v356;
                uint64_t v357 = sub_253B07160();
                __dstl = *(void (**)(char *, char *, uint64_t))(*(void *)(v357 - 8) + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                __dstl(v904, v881, v357);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v180, 0, 16, v287);
              }
              a3 = v925;
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v180, 0, 1, v181);
              uint64_t v179 = v288;
            }
            uint64_t v358 = *(int *)(v87 + 20);
            uint64_t v359 = (char *)v183 + v358;
            uint64_t v360 = (char *)v179 + v358;
            uint64_t v361 = sub_253B07160();
            uint64_t v362 = v360;
            a1 = v180;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v361 - 8) + 16))(v359, v362, v361);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v180, 0, 1, v87);
            a2 = v179;
          }
          uint64_t v363 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
          uint64_t v364 = (char *)a1 + v363;
          uint64_t v365 = (char *)a2 + v363;
          uint64_t v366 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v366 - 8) + 16))(v364, v365, v366);
          goto LABEL_227;
        case 0xAu:
          *a1 = *a2;
          uint64_t v89 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
          uint64_t v90 = (char *)a1 + v89;
          __dste = a1;
          uint64_t v91 = (char *)a2 + v89;
          uint64_t v92 = a3;
          uint64_t v93 = sub_253B07160();
          uint64_t v94 = *(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v95 = v91;
          a1 = __dste;
          uint64_t v96 = v93;
          a3 = v92;
          v94(v90, v95, v96);
          goto LABEL_227;
        default:
          uint64_t v917 = a3;
          *(unsigned char *)a1 = *(unsigned char *)a2;
          *((unsigned char *)a1 + 1) = *((unsigned char *)a2 + 1);
          *((unsigned char *)a1 + 2) = *((unsigned char *)a2 + 2);
          uint64_t v21 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
          uint64_t v22 = v21[7];
          uint64_t v23 = (char *)a1 + v22;
          uint64_t v24 = (char *)a2 + v22;
          uint64_t v25 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
          {
            uint64_t v26 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v25);
          }
          uint64_t v159 = v21[8];
          uint64_t v160 = (void *)((char *)a1 + v159);
          uint64_t v161 = (void *)((char *)a2 + v159);
          uint64_t v162 = type metadata accessor for TranscriptProtoUndoContext(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v161, 1, v162))
          {
            uint64_t v163 = sub_253462A5C(&qword_269CE0450);
            memcpy(v160, v161, *(void *)(*(void *)(v163 - 8) + 64));
          }
          else
          {
            *uint64_t v160 = *v161;
            v160[1] = v161[1];
            v160[2] = v161[2];
            v160[3] = v161[3];
            v160[4] = v161[4];
            v160[5] = v161[5];
            uint64_t v184 = *(int *)(v162 + 28);
            uint64_t v877 = (char *)v160 + v184;
            uint64_t v828 = (char *)v161 + v184;
            __dsth = a1;
            uint64_t v185 = sub_253B07160();
            v897 = v21;
            uint64_t v186 = *(void (**)(char *, char *, uint64_t))(*(void *)(v185 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v187 = v185;
            a1 = __dsth;
            v186(v877, v828, v187);
            uint64_t v21 = v897;
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v160, 0, 1, v162);
          }
          uint64_t v188 = v21[9];
          uint64_t v189 = (void *)((char *)a1 + v188);
          uint64_t v190 = (void *)((char *)a2 + v188);
          uint64_t v191 = type metadata accessor for TranscriptProtoFollowUpAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v190, 1, v191))
          {
            uint64_t v192 = sub_253462A5C(&qword_269CE0468);
            memcpy(v189, v190, *(void *)(*(void *)(v192 - 8) + 64));
          }
          else
          {
            uint64_t v193 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v190, 1, v193))
            {
              uint64_t v194 = sub_253462A5C(&qword_269CE0460);
              memcpy(v189, v190, *(void *)(*(void *)(v194 - 8) + 64));
            }
            else
            {
              uint64_t v901 = v21;
              __srca = a2;
              uint64_t v289 = a1;
              uint64_t v290 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v190, 1, v290))
              {
                uint64_t v291 = sub_253462A5C(&qword_269CE0458);
                memcpy(v189, v190, *(void *)(*(void *)(v291 - 8) + 64));
              }
              else
              {
                *uint64_t v189 = *v190;
                v189[1] = v190[1];
                uint64_t v367 = v190[2];
                unint64_t v368 = v190[3];
                swift_bridgeObjectRetain();
                sub_25348A9C8(v367, v368);
                v189[2] = v367;
                v189[3] = v368;
                v189[4] = v190[4];
                uint64_t v369 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                              + 28);
                uint64_t v370 = (char *)v189 + v369;
                uint64_t v371 = (char *)v190 + v369;
                uint64_t v372 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v372 - 8) + 16))(v370, v371, v372);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v189, 0, 1, v290);
              }
              uint64_t v373 = *(int *)(v193 + 20);
              uint64_t v374 = (char *)v189 + v373;
              uint64_t v375 = (char *)v190 + v373;
              uint64_t v376 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v376 - 8) + 16))(v374, v375, v376);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v189, 0, 1, v193);
              a1 = v289;
              a2 = __srca;
              uint64_t v21 = v901;
            }
            uint64_t v377 = *(int *)(v191 + 20);
            uint64_t v378 = (char *)v189 + v377;
            uint64_t v379 = (char *)v190 + v377;
            uint64_t v380 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v380 - 8) + 16))(v378, v379, v380);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v189, 0, 1, v191);
          }
          uint64_t v381 = v21[10];
          uint64_t v382 = (void *)((char *)a1 + v381);
          uint64_t v383 = (void *)((char *)a2 + v381);
          *uint64_t v382 = *v383;
          v382[1] = v383[1];
          uint64_t v384 = v21[11];
          uint64_t v385 = (char *)a1 + v384;
          uint64_t v386 = a1;
          uint64_t v387 = (char *)a2 + v384;
          uint64_t v388 = sub_253B07160();
          uint64_t v389 = *(void (**)(char *, char *, uint64_t))(*(void *)(v388 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v390 = v387;
          a1 = v386;
          v389(v385, v390, v388);
LABEL_155:
          swift_storeEnumTagMultiPayload();
          a3 = v917;
          goto LABEL_228;
      }
    }
LABEL_7:
    uint64_t v11 = sub_253462A5C(&qword_269CE0388);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_252;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  uint64_t v12 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v12);
  int v14 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v12);
  if (v13)
  {
    if (!v14)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v916 = a3;
          *a1 = *a2;
          uint64_t v97 = type metadata accessor for TranscriptProtoActionConfirmation(0);
          uint64_t v98 = a1;
          uint64_t v99 = v97;
          uint64_t v100 = *(int *)(v97 + 20);
          uint64_t v101 = v98;
          uint64_t v102 = (void *)((char *)v98 + v100);
          uint64_t v103 = (void *)((char *)a2 + v100);
          uint64_t v104 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v103, 1, v104))
          {
            uint64_t v105 = sub_253462A5C(&qword_269CE0480);
            memcpy(v102, v103, *(void *)(*(void *)(v105 - 8) + 64));
          }
          else
          {
            uint64_t v263 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v103, 1, v263))
            {
              uint64_t v264 = sub_253462A5C(&qword_269CE0478);
              memcpy(v102, v103, *(void *)(*(void *)(v264 - 8) + 64));
            }
            else
            {
              __srcb = a2;
              uint64_t v880 = v263;
              void *v102 = *v103;
              v102[1] = v103[1];
              *((unsigned char *)v102 + 16) = *((unsigned char *)v103 + 16);
              uint64_t v903 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
              uint64_t v335 = *(int *)(v903 + 24);
              __dsta = (char *)v102 + v335;
              uint64_t v336 = (char *)v103 + v335;
              uint64_t v337 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
              swift_bridgeObjectRetain();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v336, 1, v337))
              {
                uint64_t v338 = sub_253462A5C(&qword_269CE0470);
                memcpy(__dsta, v336, *(void *)(*(void *)(v338 - 8) + 64));
              }
              else
              {
                unsigned char *__dsta = *v336;
                uint64_t v432 = *(int *)(v337 + 20);
                uint64_t v832 = &__dsta[v432];
                uint64_t v433 = &v336[v432];
                uint64_t v434 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v434 - 8) + 16))(v832, v433, v434);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v337);
              }
              uint64_t v435 = *(int *)(v903 + 28);
              uint64_t v436 = (char *)v102 + v435;
              uint64_t v437 = (char *)v103 + v435;
              uint64_t v438 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v438 - 8) + 16))(v436, v437, v438);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v102, 0, 1, v880);
              a2 = __srcb;
            }
            uint64_t v439 = *(int *)(v104 + 20);
            uint64_t v440 = (char *)v102 + v439;
            uint64_t v441 = (char *)v103 + v439;
            uint64_t v442 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v442 - 8) + 16))(v440, v441, v442);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v102, 0, 1, v104);
          }
          uint64_t v443 = *(int *)(v99 + 24);
          a1 = v101;
          uint64_t v444 = (char *)v101 + v443;
          uint64_t v445 = (char *)a2 + v443;
          uint64_t v446 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v446 - 8) + 16))(v444, v445, v446);
          goto LABEL_186;
        case 2u:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v106 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
          uint64_t v107 = (char *)a1 + v106;
          __dstf = a1;
          uint64_t v108 = (char *)a2 + v106;
          uint64_t v109 = a3;
          uint64_t v110 = sub_253B07160();
          uint64_t v111 = *(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v112 = v108;
          a1 = __dstf;
          uint64_t v113 = v110;
          a3 = v109;
          v111(v107, v112, v113);
          goto LABEL_241;
        case 3u:
          uint64_t v114 = a3;
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v115 = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          a1[2] = v115;
          uint64_t v116 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
          uint64_t v117 = *(int *)(v116 + 24);
          uint64_t v118 = a1;
          uint64_t v119 = (char *)a1 + v117;
          uint64_t v120 = (char *)a2 + v117;
          uint64_t v121 = sub_253B08E50();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v120, 1, v121)) {
            goto LABEL_43;
          }
          goto LABEL_97;
        case 4u:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          uint64_t v123 = a2[3];
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          a1[3] = v123;
          uint64_t v124 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
          uint64_t v921 = a3;
          uint64_t v125 = a2;
          uint64_t v126 = a1;
          uint64_t v127 = (char *)a1 + v124;
          uint64_t v895 = (char *)v125 + v124;
          uint64_t v128 = sub_253B07160();
          uint64_t v129 = *(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v130 = v127;
          a1 = v126;
          a2 = v125;
          a3 = v921;
          v129(v130, v895, v128);
          goto LABEL_241;
        case 5u:
          uint64_t v114 = a3;
          *a1 = *a2;
          a1[1] = a2[1];
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v116 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
          uint64_t v131 = *(int *)(v116 + 24);
          uint64_t v118 = a1;
          uint64_t v119 = (char *)a1 + v131;
          uint64_t v120 = (char *)a2 + v131;
          uint64_t v121 = sub_253B08E50();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v120, 1, v121))
          {
LABEL_43:
            uint64_t v122 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v119, v120, *(void *)(*(void *)(v122 - 8) + 64));
          }
          else
          {
LABEL_97:
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 16))(v119, v120, v121);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v119, 0, 1, v121);
          }
          a3 = v114;
          uint64_t v265 = *(int *)(v116 + 28);
          a1 = v118;
          uint64_t v266 = (char *)v118 + v265;
          uint64_t v267 = (char *)a2 + v265;
          uint64_t v268 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v268 - 8) + 16))(v266, v267, v268);
          goto LABEL_241;
        case 6u:
          uint64_t v132 = a3;
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v133 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
          uint64_t v134 = *(int *)(v133 + 20);
          uint64_t v135 = a1;
          uint64_t v136 = (char *)a1 + v134;
          uint64_t v137 = (char *)a2 + v134;
          uint64_t v138 = sub_253B08E50();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v137, 1, v138))
          {
            uint64_t v139 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v136, v137, *(void *)(*(void *)(v139 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16))(v136, v137, v138);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v136, 0, 1, v138);
          }
          a3 = v132;
          uint64_t v269 = *(int *)(v133 + 24);
          a1 = v135;
          uint64_t v270 = (char *)v135 + v269;
          uint64_t v271 = (char *)a2 + v269;
          uint64_t v272 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v272 - 8) + 16))(v270, v271, v272);
          goto LABEL_241;
        case 7u:
          uint64_t v140 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v140))
          {
            uint64_t v141 = sub_253462A5C(&qword_269CE0498);
            memcpy(a1, a2, *(void *)(*(void *)(v141 - 8) + 64));
            goto LABEL_240;
          }
          int v273 = swift_getEnumCaseMultiPayload();
          if (v273 != 2)
          {
            if (v273 == 1)
            {
              *(unsigned char *)a1 = *(unsigned char *)a2;
              uint64_t v408 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
              uint64_t v409 = (char *)a1 + v408;
              uint64_t v410 = (char *)a2 + v408;
              uint64_t v411 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v411 - 8) + 16))(v409, v410, v411);
            }
            else
            {
              if (v273)
              {
                memcpy(a1, a2, *(void *)(*(void *)(v140 - 8) + 64));
                goto LABEL_239;
              }
              *(unsigned char *)a1 = *(unsigned char *)a2;
              uint64_t v274 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
              uint64_t v275 = (char *)a1 + v274;
              uint64_t v276 = (char *)a2 + v274;
              uint64_t v277 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v277 - 8) + 16))(v275, v276, v277);
            }
LABEL_238:
            swift_storeEnumTagMultiPayload();
LABEL_239:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v140);
LABEL_240:
            uint64_t v575 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
            uint64_t v576 = (char *)a1 + v575;
            v577 = (char *)a2 + v575;
            uint64_t v578 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v578 - 8) + 16))(v576, v577, v578);
LABEL_241:
            swift_storeEnumTagMultiPayload();
LABEL_242:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v12);
            goto LABEL_251;
          }
          uint64_t v405 = a3;
          uint64_t v406 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v406))
          {
            uint64_t v407 = sub_253462A5C(&qword_269CE0490);
            memcpy(a1, a2, *(void *)(*(void *)(v407 - 8) + 64));
LABEL_237:
            a3 = v405;
            uint64_t v571 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
            int v572 = (char *)a1 + v571;
            uint64_t v573 = (char *)a2 + v571;
            uint64_t v574 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v574 - 8) + 16))(v572, v573, v574);
            goto LABEL_238;
          }
          int v480 = swift_getEnumCaseMultiPayload();
          if (v480 == 1)
          {
            uint64_t v539 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
            uint64_t v540 = a2;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v539))
            {
              uint64_t v541 = sub_253462A5C(&qword_269CE0488);
              memcpy(a1, a2, *(void *)(*(void *)(v541 - 8) + 64));
            }
            else
            {
              *(unsigned char *)a1 = *(unsigned char *)a2;
              uint64_t v564 = *(int *)(v539 + 20);
              uint64_t v565 = (char *)a1 + v564;
              uint64_t v931 = (char *)v540 + v564;
              uint64_t v566 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v566 - 8) + 16))(v565, v931, v566);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v539);
            }
            uint64_t v567 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
            uint64_t v568 = (char *)a1 + v567;
            a2 = v540;
            uint64_t v569 = (char *)v540 + v567;
            uint64_t v570 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v570 - 8) + 16))(v568, v569, v570);
          }
          else
          {
            if (v480)
            {
              memcpy(a1, a2, *(void *)(*(void *)(v406 - 8) + 64));
LABEL_236:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v406);
              goto LABEL_237;
            }
            *a1 = *a2;
            a1[1] = a2[1];
            uint64_t v481 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
            int v911 = (char *)a2 + v481;
            uint64_t v930 = (char *)a1 + v481;
            uint64_t v482 = sub_253B07160();
            uint64_t v886 = *(void (**)(char *, char *, uint64_t))(*(void *)(v482 - 8) + 16);
            swift_bridgeObjectRetain();
            v886(v930, v911, v482);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_236;
        case 8u:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          uint64_t v142 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
          uint64_t v922 = a3;
          uint64_t v143 = a2;
          uint64_t v144 = a1;
          uint64_t v145 = (char *)a1 + v142;
          v896 = (char *)v143 + v142;
          uint64_t v146 = sub_253B07160();
          uint64_t v147 = *(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v148 = v145;
          a1 = v144;
          a2 = v143;
          a3 = v922;
          v147(v148, v896, v146);
          goto LABEL_241;
        case 9u:
          uint64_t v149 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v149))
          {
            uint64_t v150 = sub_253462A5C(&qword_269CE04A8);
            memcpy(a1, a2, *(void *)(*(void *)(v150 - 8) + 64));
          }
          else
          {
            uint64_t v278 = a2;
            uint64_t v279 = a1;
            uint64_t v280 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v278, 1, v280))
            {
              uint64_t v281 = sub_253462A5C(&qword_269CE04A0);
              uint64_t v282 = v279;
              memcpy(v279, v278, *(void *)(*(void *)(v281 - 8) + 64));
            }
            else
            {
              uint64_t v926 = a3;
              uint64_t v339 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
              uint64_t v282 = v279;
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v278, 16, v339))
              {
                uint64_t v340 = v278;
                memcpy(v279, v278, *(void *)(*(void *)(v280 - 8) + 64));
              }
              else
              {
                *uint64_t v279 = *v278;
                v279[1] = v278[1];
                v279[2] = v278[2];
                v279[3] = v278[3];
                v279[4] = v278[4];
                uint64_t v417 = *(int *)(v339 + 28);
                uint64_t v340 = v278;
                v884 = (char *)v278 + v417;
                uint64_t v908 = (char *)v279 + v417;
                uint64_t v418 = sub_253B07160();
                __dstn = *(void (**)(char *, char *, uint64_t))(*(void *)(v418 - 8) + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                __dstn(v908, v884, v418);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v279, 0, 16, v339);
              }
              a3 = v926;
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v279, 0, 1, v280);
              uint64_t v278 = v340;
            }
            uint64_t v419 = *(int *)(v149 + 20);
            uint64_t v420 = (char *)v282 + v419;
            uint64_t v421 = (char *)v278 + v419;
            uint64_t v422 = sub_253B07160();
            uint64_t v423 = v421;
            a1 = v279;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v422 - 8) + 16))(v420, v423, v422);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v279, 0, 1, v149);
            a2 = v278;
          }
          uint64_t v424 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
          uint64_t v425 = (char *)a1 + v424;
          uint64_t v426 = (char *)a2 + v424;
          uint64_t v427 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v427 - 8) + 16))(v425, v426, v427);
          goto LABEL_241;
        case 0xAu:
          *a1 = *a2;
          uint64_t v151 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
          uint64_t v152 = (char *)a1 + v151;
          __dstg = a1;
          uint64_t v153 = (char *)a2 + v151;
          uint64_t v154 = a3;
          uint64_t v155 = sub_253B07160();
          uint64_t v156 = *(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v157 = v153;
          a1 = __dstg;
          uint64_t v158 = v155;
          a3 = v154;
          v156(v152, v157, v158);
          goto LABEL_241;
        default:
          uint64_t v916 = a3;
          *(unsigned char *)a1 = *(unsigned char *)a2;
          *((unsigned char *)a1 + 1) = *((unsigned char *)a2 + 1);
          *((unsigned char *)a1 + 2) = *((unsigned char *)a2 + 2);
          uint64_t v15 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
          uint64_t v16 = v15[7];
          uint64_t v17 = (char *)a1 + v16;
          uint64_t v18 = (char *)a2 + v16;
          uint64_t v19 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
          {
            uint64_t v20 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
          }
          uint64_t v195 = v15[8];
          uint64_t v196 = (void *)((char *)a1 + v195);
          uint64_t v197 = (void *)((char *)a2 + v195);
          uint64_t v198 = type metadata accessor for TranscriptProtoUndoContext(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v197, 1, v198))
          {
            uint64_t v199 = sub_253462A5C(&qword_269CE0450);
            memcpy(v196, v197, *(void *)(*(void *)(v199 - 8) + 64));
          }
          else
          {
            void *v196 = *v197;
            v196[1] = v197[1];
            v196[2] = v197[2];
            v196[3] = v197[3];
            v196[4] = v197[4];
            v196[5] = v197[5];
            uint64_t v292 = *(int *)(v198 + 28);
            v879 = (char *)v196 + v292;
            uint64_t v829 = (char *)v197 + v292;
            __dstk = a1;
            uint64_t v293 = sub_253B07160();
            uint64_t v902 = v15;
            uint64_t v294 = *(void (**)(char *, char *, uint64_t))(*(void *)(v293 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v295 = v293;
            a1 = __dstk;
            v294(v879, v829, v295);
            uint64_t v15 = v902;
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v196, 0, 1, v198);
          }
          uint64_t v296 = v15[9];
          uint64_t v297 = (void *)((char *)a1 + v296);
          uint64_t v298 = (void *)((char *)a2 + v296);
          uint64_t v299 = type metadata accessor for TranscriptProtoFollowUpAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v298, 1, v299))
          {
            uint64_t v300 = sub_253462A5C(&qword_269CE0468);
            memcpy(v297, v298, *(void *)(*(void *)(v300 - 8) + 64));
          }
          else
          {
            uint64_t v301 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v298, 1, v301))
            {
              uint64_t v302 = sub_253462A5C(&qword_269CE0460);
              memcpy(v297, v298, *(void *)(*(void *)(v302 - 8) + 64));
            }
            else
            {
              v905 = v15;
              __srcc = a2;
              uint64_t v391 = a1;
              uint64_t v392 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v298, 1, v392))
              {
                uint64_t v393 = sub_253462A5C(&qword_269CE0458);
                memcpy(v297, v298, *(void *)(*(void *)(v393 - 8) + 64));
              }
              else
              {
                *uint64_t v297 = *v298;
                v297[1] = v298[1];
                uint64_t v447 = v298[2];
                unint64_t v448 = v298[3];
                swift_bridgeObjectRetain();
                sub_25348A9C8(v447, v448);
                v297[2] = v447;
                v297[3] = v448;
                v297[4] = v298[4];
                uint64_t v449 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                              + 28);
                uint64_t v450 = (char *)v297 + v449;
                uint64_t v451 = (char *)v298 + v449;
                uint64_t v452 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v452 - 8) + 16))(v450, v451, v452);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v297, 0, 1, v392);
              }
              uint64_t v453 = *(int *)(v301 + 20);
              uint64_t v454 = (char *)v297 + v453;
              uint64_t v455 = (char *)v298 + v453;
              uint64_t v456 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v456 - 8) + 16))(v454, v455, v456);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v297, 0, 1, v301);
              a1 = v391;
              a2 = __srcc;
              uint64_t v15 = v905;
            }
            uint64_t v457 = *(int *)(v299 + 20);
            uint64_t v458 = (char *)v297 + v457;
            uint64_t v459 = (char *)v298 + v457;
            uint64_t v460 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v460 - 8) + 16))(v458, v459, v460);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v297, 0, 1, v299);
          }
          uint64_t v461 = v15[10];
          uint64_t v462 = (void *)((char *)a1 + v461);
          uint64_t v463 = (void *)((char *)a2 + v461);
          void *v462 = *v463;
          v462[1] = v463[1];
          uint64_t v464 = v15[11];
          v465 = (char *)a1 + v464;
          uint64_t v466 = a1;
          uint64_t v467 = (char *)a2 + v464;
          uint64_t v468 = sub_253B07160();
          uint64_t v469 = *(void (**)(char *, char *, uint64_t))(*(void *)(v468 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v470 = v467;
          a1 = v466;
          v469(v465, v470, v468);
LABEL_186:
          swift_storeEnumTagMultiPayload();
          a3 = v916;
          goto LABEL_242;
      }
    }
    goto LABEL_18;
  }
  if (!v14)
  {
    if (a1 == a2) {
      goto LABEL_251;
    }
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v918 = a3;
        *a1 = *a2;
        uint64_t v200 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v201 = a1;
        uint64_t v202 = v200;
        uint64_t v203 = *(int *)(v200 + 20);
        uint64_t v204 = v201;
        uint64_t v205 = (void *)((char *)v201 + v203);
        uint64_t v206 = (void *)((char *)a2 + v203);
        uint64_t v207 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v206, 1, v207))
        {
          uint64_t v208 = sub_253462A5C(&qword_269CE0480);
          memcpy(v205, v206, *(void *)(*(void *)(v208 - 8) + 64));
        }
        else
        {
          uint64_t v315 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v206, 1, v315))
          {
            uint64_t v316 = sub_253462A5C(&qword_269CE0478);
            memcpy(v205, v206, *(void *)(*(void *)(v316 - 8) + 64));
          }
          else
          {
            __srcd = a2;
            uint64_t v885 = v315;
            *uint64_t v205 = *v206;
            v205[1] = v206[1];
            *((unsigned char *)v205 + 16) = *((unsigned char *)v206 + 16);
            uint64_t v909 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v428 = *(int *)(v909 + 24);
            __dstb = (char *)v205 + v428;
            uint64_t v429 = (char *)v206 + v428;
            uint64_t v430 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v429, 1, v430))
            {
              uint64_t v431 = sub_253462A5C(&qword_269CE0470);
              memcpy(__dstb, v429, *(void *)(*(void *)(v431 - 8) + 64));
            }
            else
            {
              unsigned char *__dstb = *v429;
              uint64_t v496 = *(int *)(v430 + 20);
              v833 = &__dstb[v496];
              uint64_t v497 = &v429[v496];
              uint64_t v498 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v498 - 8) + 16))(v833, v497, v498);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstb, 0, 1, v430);
            }
            uint64_t v499 = *(int *)(v909 + 28);
            uint64_t v500 = (char *)v205 + v499;
            uint64_t v501 = (char *)v206 + v499;
            uint64_t v502 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v502 - 8) + 16))(v500, v501, v502);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v205, 0, 1, v885);
            a2 = __srcd;
          }
          uint64_t v503 = *(int *)(v207 + 20);
          uint64_t v504 = (char *)v205 + v503;
          uint64_t v505 = (char *)v206 + v503;
          uint64_t v506 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v506 - 8) + 16))(v504, v505, v506);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v205, 0, 1, v207);
        }
        uint64_t v507 = *(int *)(v202 + 24);
        a1 = v204;
        uint64_t v508 = (char *)v204 + v507;
        uint64_t v509 = (char *)a2 + v507;
        uint64_t v510 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v510 - 8) + 16))(v508, v509, v510);
        goto LABEL_212;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v209 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
        uint64_t v210 = (char *)a1 + v209;
        __dsti = a1;
        uint64_t v211 = (char *)a2 + v209;
        uint64_t v212 = a3;
        uint64_t v213 = sub_253B07160();
        uint64_t v214 = *(void (**)(char *, char *, uint64_t))(*(void *)(v213 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v215 = v211;
        a1 = __dsti;
        uint64_t v216 = v213;
        a3 = v212;
        v214(v210, v215, v216);
        goto LABEL_250;
      case 3u:
        uint64_t v217 = a3;
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v218 = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        a1[2] = v218;
        uint64_t v219 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        uint64_t v220 = *(int *)(v219 + 24);
        uint64_t v221 = a1;
        uint64_t v222 = (char *)a1 + v220;
        uint64_t v223 = (char *)a2 + v220;
        uint64_t v224 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v223, 1, v224)) {
          goto LABEL_83;
        }
        goto LABEL_128;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v226 = a2[3];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        a1[3] = v226;
        uint64_t v227 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        uint64_t v923 = a3;
        uint64_t v228 = a2;
        uint64_t v229 = a1;
        uint64_t v230 = (char *)a1 + v227;
        uint64_t v898 = (char *)v228 + v227;
        uint64_t v231 = sub_253B07160();
        uint64_t v232 = *(void (**)(char *, char *, uint64_t))(*(void *)(v231 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v233 = v230;
        a1 = v229;
        a2 = v228;
        a3 = v923;
        v232(v233, v898, v231);
        goto LABEL_250;
      case 5u:
        uint64_t v217 = a3;
        *a1 = *a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v219 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
        uint64_t v234 = *(int *)(v219 + 24);
        uint64_t v221 = a1;
        uint64_t v222 = (char *)a1 + v234;
        uint64_t v223 = (char *)a2 + v234;
        uint64_t v224 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v223, 1, v224))
        {
LABEL_83:
          uint64_t v225 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v222, v223, *(void *)(*(void *)(v225 - 8) + 64));
        }
        else
        {
LABEL_128:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 16))(v222, v223, v224);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v222, 0, 1, v224);
        }
        a3 = v217;
        uint64_t v317 = *(int *)(v219 + 28);
        a1 = v221;
        uint64_t v318 = (char *)v221 + v317;
        uint64_t v319 = (char *)a2 + v317;
        uint64_t v320 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v320 - 8) + 16))(v318, v319, v320);
        goto LABEL_250;
      case 6u:
        uint64_t v235 = a3;
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v236 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v237 = *(int *)(v236 + 20);
        uint64_t v238 = a1;
        uint64_t v239 = (char *)a1 + v237;
        uint64_t v240 = (char *)a2 + v237;
        uint64_t v241 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v240, 1, v241))
        {
          uint64_t v242 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v239, v240, *(void *)(*(void *)(v242 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v241 - 8) + 16))(v239, v240, v241);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v239, 0, 1, v241);
        }
        a3 = v235;
        uint64_t v321 = *(int *)(v236 + 24);
        a1 = v238;
        uint64_t v322 = (char *)v238 + v321;
        long long v323 = (char *)a2 + v321;
        uint64_t v324 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v324 - 8) + 16))(v322, v323, v324);
        goto LABEL_250;
      case 7u:
        uint64_t v243 = a1;
        uint64_t v244 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v244))
        {
          uint64_t v245 = sub_253462A5C(&qword_269CE0498);
          a1 = v243;
          memcpy(v243, a2, *(void *)(*(void *)(v245 - 8) + 64));
          goto LABEL_249;
        }
        int v325 = swift_getEnumCaseMultiPayload();
        if (v325 != 2)
        {
          if (v325 == 1)
          {
            *(unsigned char *)uint64_t v243 = *(unsigned char *)a2;
            uint64_t v476 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v477 = (char *)v243 + v476;
            uint64_t v478 = (char *)a2 + v476;
            uint64_t v479 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v479 - 8) + 16))(v477, v478, v479);
            goto LABEL_192;
          }
          if (!v325)
          {
            *(unsigned char *)uint64_t v243 = *(unsigned char *)a2;
            uint64_t v326 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v327 = (char *)v243 + v326;
            uint64_t v328 = (char *)a2 + v326;
            uint64_t v329 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v329 - 8) + 16))(v327, v328, v329);
LABEL_192:
            swift_storeEnumTagMultiPayload();
            goto LABEL_248;
          }
          memcpy(v243, a2, *(void *)(*(void *)(v244 - 8) + 64));
LABEL_248:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v243, 0, 1, v244);
          a1 = v243;
LABEL_249:
          uint64_t v591 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
          uint64_t v592 = (char *)a1 + v591;
          uint64_t v593 = (char *)a2 + v591;
          uint64_t v594 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v594 - 8) + 16))(v592, v593, v594);
LABEL_250:
          swift_storeEnumTagMultiPayload();
          goto LABEL_251;
        }
        uint64_t v929 = a3;
        uint64_t v474 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v474))
        {
          uint64_t v475 = sub_253462A5C(&qword_269CE0490);
          memcpy(v243, a2, *(void *)(*(void *)(v475 - 8) + 64));
LABEL_247:
          uint64_t v587 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v588 = (char *)v243 + v587;
          uint64_t v589 = (char *)a2 + v587;
          uint64_t v590 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v590 - 8) + 16))(v588, v589, v590);
          swift_storeEnumTagMultiPayload();
          a3 = v929;
          goto LABEL_248;
        }
        int v535 = swift_getEnumCaseMultiPayload();
        if (v535 == 1)
        {
          uint64_t v562 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v562))
          {
            uint64_t v563 = sub_253462A5C(&qword_269CE0488);
            memcpy(v243, a2, *(void *)(*(void *)(v563 - 8) + 64));
          }
          else
          {
            *(unsigned char *)uint64_t v243 = *(unsigned char *)a2;
            uint64_t v579 = *(int *)(v562 + 20);
            uint64_t v580 = (char *)v243 + v579;
            uint64_t v581 = (char *)a2 + v579;
            uint64_t v582 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v582 - 8) + 16))(v580, v581, v582);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v243, 0, 1, v562);
          }
          uint64_t v583 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v584 = (char *)v243 + v583;
          uint64_t v585 = (char *)a2 + v583;
          uint64_t v586 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v586 - 8) + 16))(v584, v585, v586);
        }
        else
        {
          if (v535)
          {
            memcpy(v243, a2, *(void *)(*(void *)(v474 - 8) + 64));
LABEL_246:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v243, 0, 1, v474);
            goto LABEL_247;
          }
          *uint64_t v243 = *a2;
          v243[1] = a2[1];
          uint64_t v536 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          v888 = (char *)a2 + v536;
          uint64_t v913 = (char *)v243 + v536;
          uint64_t v537 = sub_253B07160();
          uint64_t v538 = *(void (**)(char *, char *, uint64_t))(*(void *)(v537 - 8) + 16);
          swift_bridgeObjectRetain();
          v538(v913, v888, v537);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_246;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v246 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        uint64_t v924 = a3;
        uint64_t v247 = a2;
        uint64_t v248 = a1;
        uint64_t v249 = (char *)a1 + v246;
        uint64_t v899 = (char *)v247 + v246;
        uint64_t v250 = sub_253B07160();
        uint64_t v251 = *(void (**)(char *, char *, uint64_t))(*(void *)(v250 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v252 = v249;
        a1 = v248;
        a2 = v247;
        a3 = v924;
        v251(v252, v899, v250);
        goto LABEL_250;
      case 9u:
        uint64_t v253 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v253))
        {
          uint64_t v254 = sub_253462A5C(&qword_269CE04A8);
          memcpy(a1, a2, *(void *)(*(void *)(v254 - 8) + 64));
        }
        else
        {
          uint64_t v330 = a2;
          uint64_t v331 = a1;
          uint64_t v332 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v330, 1, v332))
          {
            uint64_t v333 = sub_253462A5C(&qword_269CE04A0);
            uint64_t v334 = v331;
            memcpy(v331, v330, *(void *)(*(void *)(v333 - 8) + 64));
          }
          else
          {
            uint64_t v928 = a3;
            uint64_t v415 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            uint64_t v334 = v331;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v330, 16, v415))
            {
              uint64_t v416 = v330;
              memcpy(v331, v330, *(void *)(*(void *)(v332 - 8) + 64));
            }
            else
            {
              void *v331 = *v330;
              v331[1] = v330[1];
              v331[2] = v330[2];
              v331[3] = v330[3];
              v331[4] = v330[4];
              uint64_t v485 = *(int *)(v415 + 28);
              uint64_t v416 = v330;
              uint64_t v887 = (char *)v330 + v485;
              uint64_t v912 = (char *)v331 + v485;
              uint64_t v486 = sub_253B07160();
              __dsto = *(void (**)(char *, char *, uint64_t))(*(void *)(v486 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __dsto(v912, v887, v486);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v331, 0, 16, v415);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v331, 0, 1, v332);
            uint64_t v330 = v416;
            a3 = v928;
          }
          uint64_t v487 = *(int *)(v253 + 20);
          uint64_t v488 = (char *)v334 + v487;
          uint64_t v489 = (char *)v330 + v487;
          uint64_t v490 = sub_253B07160();
          uint64_t v491 = v489;
          a1 = v331;
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v490 - 8) + 16))(v488, v491, v490);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v331, 0, 1, v253);
          a2 = v330;
        }
        uint64_t v492 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
        uint64_t v493 = (char *)a1 + v492;
        uint64_t v494 = (char *)a2 + v492;
        uint64_t v495 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v495 - 8) + 16))(v493, v494, v495);
        goto LABEL_250;
      case 0xAu:
        *a1 = *a2;
        uint64_t v255 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
        uint64_t v256 = (char *)a1 + v255;
        __dstj = a1;
        uint64_t v257 = (char *)a2 + v255;
        uint64_t v258 = a3;
        uint64_t v259 = sub_253B07160();
        uint64_t v260 = *(void (**)(char *, char *, uint64_t))(*(void *)(v259 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v261 = v257;
        a1 = __dstj;
        uint64_t v262 = v259;
        a3 = v258;
        v260(v256, v261, v262);
        goto LABEL_250;
      default:
        uint64_t v918 = a3;
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *((unsigned char *)a1 + 1) = *((unsigned char *)a2 + 1);
        *((unsigned char *)a1 + 2) = *((unsigned char *)a2 + 2);
        uint64_t v28 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v29 = v28[7];
        uint64_t v30 = (char *)a1 + v29;
        uint64_t v31 = (char *)a2 + v29;
        uint64_t v32 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v31, 1, v32))
        {
          uint64_t v33 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v30, 0, 1, v32);
        }
        uint64_t v310 = v28[8];
        uint64_t v311 = (void *)((char *)a1 + v310);
        uint64_t v312 = (void *)((char *)a2 + v310);
        uint64_t v313 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v312, 1, v313))
        {
          uint64_t v314 = sub_253462A5C(&qword_269CE0450);
          memcpy(v311, v312, *(void *)(*(void *)(v314 - 8) + 64));
        }
        else
        {
          *uint64_t v311 = *v312;
          v311[1] = v312[1];
          v311[2] = v312[2];
          v311[3] = v312[3];
          v311[4] = v312[4];
          v311[5] = v312[5];
          uint64_t v394 = *(int *)(v313 + 28);
          uint64_t v882 = (char *)v311 + v394;
          uint64_t v831 = (char *)v312 + v394;
          __dstm = a1;
          uint64_t v395 = sub_253B07160();
          uint64_t v906 = v28;
          uint64_t v396 = *(void (**)(char *, char *, uint64_t))(*(void *)(v395 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v397 = v395;
          a1 = __dstm;
          v396(v882, v831, v397);
          uint64_t v28 = v906;
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v311, 0, 1, v313);
        }
        uint64_t v398 = v28[9];
        uint64_t v399 = (void *)((char *)a1 + v398);
        uint64_t v400 = (void *)((char *)a2 + v398);
        uint64_t v401 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v400, 1, v401))
        {
          uint64_t v402 = sub_253462A5C(&qword_269CE0468);
          memcpy(v399, v400, *(void *)(*(void *)(v402 - 8) + 64));
        }
        else
        {
          uint64_t v403 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v400, 1, v403))
          {
            uint64_t v404 = sub_253462A5C(&qword_269CE0460);
            memcpy(v399, v400, *(void *)(*(void *)(v404 - 8) + 64));
          }
          else
          {
            uint64_t v910 = v28;
            __srce = a2;
            uint64_t v471 = a1;
            uint64_t v472 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v400, 1, v472))
            {
              uint64_t v473 = sub_253462A5C(&qword_269CE0458);
              memcpy(v399, v400, *(void *)(*(void *)(v473 - 8) + 64));
            }
            else
            {
              *uint64_t v399 = *v400;
              v399[1] = v400[1];
              uint64_t v511 = v400[2];
              unint64_t v512 = v400[3];
              swift_bridgeObjectRetain();
              sub_25348A9C8(v511, v512);
              v399[2] = v511;
              v399[3] = v512;
              v399[4] = v400[4];
              uint64_t v513 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              uint64_t v514 = (char *)v399 + v513;
              v515 = (char *)v400 + v513;
              uint64_t v516 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v516 - 8) + 16))(v514, v515, v516);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v399, 0, 1, v472);
            }
            uint64_t v517 = *(int *)(v403 + 20);
            uint64_t v518 = (char *)v399 + v517;
            v519 = (char *)v400 + v517;
            uint64_t v520 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v520 - 8) + 16))(v518, v519, v520);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v399, 0, 1, v403);
            a1 = v471;
            a2 = __srce;
            uint64_t v28 = v910;
          }
          uint64_t v521 = *(int *)(v401 + 20);
          v522 = (char *)v399 + v521;
          v523 = (char *)v400 + v521;
          uint64_t v524 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v524 - 8) + 16))(v522, v523, v524);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v399, 0, 1, v401);
        }
        uint64_t v525 = v28[10];
        v526 = (void *)((char *)a1 + v525);
        v527 = (void *)((char *)a2 + v525);
        void *v526 = *v527;
        v526[1] = v527[1];
        uint64_t v528 = v28[11];
        uint64_t v529 = (char *)a1 + v528;
        uint64_t v530 = a1;
        v531 = (char *)a2 + v528;
        uint64_t v532 = sub_253B07160();
        uint64_t v533 = *(void (**)(char *, char *, uint64_t))(*(void *)(v532 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v534 = v531;
        a1 = v530;
        v533(v529, v534, v532);
LABEL_212:
        swift_storeEnumTagMultiPayload();
        a3 = v918;
        goto LABEL_251;
    }
  }
  sub_2536FA73C();
LABEL_18:
  uint64_t v27 = sub_253462A5C(&qword_269CE04B0);
  memcpy(a1, a2, *(void *)(*(void *)(v27 - 8) + 64));
LABEL_251:
  uint64_t v595 = *(int *)(v6 + 20);
  uint64_t v596 = (char *)a1 + v595;
  uint64_t v597 = (char *)a2 + v595;
  uint64_t v598 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v598 - 8) + 24))(v596, v597, v598);
LABEL_252:
  uint64_t v599 = *(int *)(a3 + 20);
  v600 = (void *)((char *)a1 + v599);
  uint64_t v601 = (void *)((char *)a2 + v599);
  uint64_t v602 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  int v603 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v600, 1, (uint64_t)v602);
  int v604 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v601, 1, (uint64_t)v602);
  if (!v603)
  {
    if (v604)
    {
      sub_2536FA73C();
      goto LABEL_258;
    }
    uint64_t v932 = a3;
    void *v600 = *v601;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v611 = v602[5];
    uint64_t v612 = (void *)((char *)v600 + v611);
    uint64_t v613 = (void *)((char *)v601 + v611);
    uint64_t v614 = type metadata accessor for TranscriptProtoResponseDialog(0);
    int v615 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v612, 1, v614);
    int v616 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v613, 1, v614);
    long long v914 = v602;
    if (v615)
    {
      if (!v616)
      {
        *uint64_t v612 = *v613;
        v612[1] = v613[1];
        v612[2] = v613[2];
        v612[3] = v613[3];
        v612[4] = v613[4];
        v612[5] = v613[5];
        v612[6] = v613[6];
        v612[7] = v613[7];
        uint64_t v617 = *(int *)(v614 + 32);
        __dstp = (char *)v612 + v617;
        v819 = (char *)v613 + v617;
        uint64_t v618 = sub_253B07160();
        uint64_t v834 = v600;
        v619 = *(void (**)(char *, char *, uint64_t))(*(void *)(v618 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v619(__dstp, v819, v618);
        v600 = v834;
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v612, 0, 1, v614);
        goto LABEL_270;
      }
    }
    else
    {
      if (!v616)
      {
        *uint64_t v612 = *v613;
        v612[1] = v613[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v612[2] = v613[2];
        v612[3] = v613[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v612[4] = v613[4];
        v612[5] = v613[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v612[6] = v613[6];
        v612[7] = v613[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v676 = *(int *)(v614 + 32);
        uint64_t v677 = (char *)v612 + v676;
        uint64_t v678 = (char *)v613 + v676;
        uint64_t v679 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v679 - 8) + 24))(v677, v678, v679);
LABEL_270:
        uint64_t v636 = v602[6];
        uint64_t v637 = (void *)((char *)v600 + v636);
        v638 = (void *)((char *)v601 + v636);
        uint64_t v639 = type metadata accessor for TranscriptProtoResponseVisual(0);
        int v640 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v637, 1, v639);
        int v641 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v638, 1, v639);
        if (v640)
        {
          if (!v641)
          {
            __srcf = a2;
            uint64_t v890 = v601;
            *uint64_t v637 = *v638;
            v637[1] = v638[1];
            uint64_t v642 = *(int *)(v639 + 24);
            uint64_t v643 = (char *)v637 + v642;
            long long v644 = (char *)v638 + v642;
            uint64_t v645 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v644, 1, v645))
            {
              uint64_t v646 = sub_253462A5C(&qword_269CE04C0);
              memcpy(v643, v644, *(void *)(*(void *)(v646 - 8) + 64));
            }
            else
            {
              *uint64_t v643 = *v644;
              uint64_t v690 = *(int *)(v645 + 20);
              v691 = &v643[v690];
              v692 = &v644[v690];
              uint64_t v693 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v693 - 8) + 16))(v691, v692, v693);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v643, 0, 1, v645);
            }
            a2 = __srcf;
            uint64_t v694 = *(int *)(v639 + 28);
            uint64_t v695 = (char *)v637 + v694;
            uint64_t v696 = (char *)v638 + v694;
            uint64_t v697 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v697 - 8) + 16))(v695, v696, v697);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v637, 0, 1, v639);
            uint64_t v601 = v890;
LABEL_302:
            uint64_t v723 = v914[7];
            uint64_t v724 = (void *)((char *)v600 + v723);
            v725 = (void *)((char *)v601 + v723);
            *uint64_t v724 = *v725;
            v724[1] = v725[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v726 = v914[8];
            uint64_t v727 = (void *)((char *)v600 + v726);
            uint64_t v728 = (void *)((char *)v601 + v726);
            *uint64_t v727 = *v728;
            v727[1] = v728[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *((unsigned char *)v600 + v914[9]) = *((unsigned char *)v601 + v914[9]);
            *((unsigned char *)v600 + v914[10]) = *((unsigned char *)v601 + v914[10]);
            uint64_t v729 = v914[11];
            uint64_t v730 = (void *)((char *)v600 + v729);
            v731 = (void *)((char *)v601 + v729);
            uint64_t v732 = type metadata accessor for TranscriptProtoUIType(0);
            int v733 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v730, 1, v732);
            int v734 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v731, 1, v732);
            if (v733)
            {
              if (!v734)
              {
                v735 = v601;
                v736 = v600;
                uint64_t v737 = a2;
                uint64_t v738 = type metadata accessor for TranscriptProtoUitype(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v731, 1, v738))
                {
                  uint64_t v739 = sub_253462A5C(&qword_269CDCC08);
                  memcpy(v730, v731, *(void *)(*(void *)(v739 - 8) + 64));
                }
                else
                {
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 1u:
                      *uint64_t v730 = *v731;
                      v730[1] = v731[1];
                      uint64_t v755 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
                      goto LABEL_320;
                    case 2u:
                      uint64_t v756 = *v731;
                      unint64_t v757 = v731[1];
                      sub_25348A9C8(*v731, v757);
                      *uint64_t v730 = v756;
                      v730[1] = v757;
                      v730[2] = v731[2];
                      v730[3] = v731[3];
                      uint64_t v755 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
LABEL_320:
                      uint64_t v825 = (char *)v731 + v755;
                      v839 = (char *)v730 + v755;
                      uint64_t v758 = sub_253B07160();
                      uint64_t v818 = *(void (**)(char *, char *, uint64_t))(*(void *)(v758 - 8) + 16);
                      __dstc = a1;
                      swift_bridgeObjectRetain();
                      v818(v839, v825, v758);
                      goto LABEL_321;
                    case 3u:
                      uint64_t v759 = *v731;
                      unint64_t v760 = v731[1];
                      sub_25348A9C8(*v731, v760);
                      *uint64_t v730 = v759;
                      v730[1] = v760;
                      uint64_t v761 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
                      uint64_t v762 = (char *)v730 + v761;
                      v763 = (char *)v731 + v761;
                      uint64_t v764 = sub_253B07160();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v764 - 8) + 16))(v762, v763, v764);
                      goto LABEL_323;
                    default:
                      uint64_t v750 = *v731;
                      unint64_t v751 = v731[1];
                      sub_25348A9C8(*v731, v751);
                      *uint64_t v730 = v750;
                      v730[1] = v751;
                      v730[2] = v731[2];
                      v730[3] = v731[3];
                      v730[4] = v731[4];
                      v730[5] = v731[5];
                      uint64_t v752 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
                      uint64_t v817 = (char *)v731 + v752;
                      uint64_t v824 = (char *)v730 + v752;
                      uint64_t v753 = sub_253B07160();
                      long long v813 = *(void (**)(char *, char *, uint64_t))(*(void *)(v753 - 8) + 16);
                      __dstc = a1;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      v813(v824, v817, v753);
LABEL_321:
                      a1 = __dstc;
LABEL_323:
                      swift_storeEnumTagMultiPayload();
                      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v730, 0, 1, v738);
                      break;
                  }
                }
                a2 = v737;
                uint64_t v765 = *(int *)(v732 + 20);
                uint64_t v766 = (char *)v730 + v765;
                uint64_t v767 = (char *)v731 + v765;
                uint64_t v768 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v768 - 8) + 16))(v766, v767, v768);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v730, 0, 1, v732);
                v600 = v736;
                uint64_t v601 = v735;
                goto LABEL_339;
              }
              goto LABEL_308;
            }
            if (v734)
            {
              sub_2536FA73C();
LABEL_308:
              uint64_t v740 = sub_253462A5C(&qword_269CE04D0);
              memcpy(v730, v731, *(void *)(*(void *)(v740 - 8) + 64));
LABEL_339:
              uint64_t v803 = v914[12];
              v804 = (char *)v600 + v803;
              uint64_t v805 = (char *)v601 + v803;
              uint64_t v806 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v806 - 8) + 24))(v804, v805, v806);
LABEL_340:
              a3 = v932;
              goto LABEL_341;
            }
            v892 = v601;
            v741 = v600;
            uint64_t v742 = a2;
            uint64_t v743 = type metadata accessor for TranscriptProtoUitype(0);
            int v744 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v730, 1, v743);
            int v745 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v731, 1, v743);
            if (v744)
            {
              if (!v745)
              {
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 1u:
                    *uint64_t v730 = *v731;
                    v730[1] = v731[1];
                    uint64_t v777 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
                    goto LABEL_331;
                  case 2u:
                    uint64_t v778 = *v731;
                    unint64_t v779 = v731[1];
                    sub_25348A9C8(*v731, v779);
                    *uint64_t v730 = v778;
                    v730[1] = v779;
                    v730[2] = v731[2];
                    v730[3] = v731[3];
                    uint64_t v777 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
LABEL_331:
                    uint64_t v841 = (char *)v731 + v777;
                    __dsts = (char *)v730 + v777;
                    uint64_t v780 = sub_253B07160();
                    uint64_t v827 = *(void (**)(char *, char *, uint64_t))(*(void *)(v780 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v827(__dsts, v841, v780);
                    break;
                  case 3u:
                    uint64_t v781 = *v731;
                    unint64_t v782 = v731[1];
                    sub_25348A9C8(*v731, v782);
                    *uint64_t v730 = v781;
                    v730[1] = v782;
                    uint64_t v783 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
                    uint64_t v784 = (char *)v730 + v783;
                    uint64_t v785 = (char *)v731 + v783;
                    uint64_t v786 = sub_253B07160();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v786 - 8) + 16))(v784, v785, v786);
                    break;
                  default:
                    uint64_t v746 = *v731;
                    unint64_t v747 = v731[1];
                    sub_25348A9C8(*v731, v747);
                    *uint64_t v730 = v746;
                    v730[1] = v747;
                    v730[2] = v731[2];
                    v730[3] = v731[3];
                    v730[4] = v731[4];
                    v730[5] = v731[5];
                    uint64_t v748 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
                    uint64_t v823 = (char *)v731 + v748;
                    v838 = (char *)v730 + v748;
                    uint64_t v749 = sub_253B07160();
                    uint64_t v816 = *(void (**)(char *, char *, uint64_t))(*(void *)(v749 - 8) + 16);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    v816(v838, v823, v749);
                    break;
                }
                swift_storeEnumTagMultiPayload();
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v730, 0, 1, v743);
                goto LABEL_338;
              }
            }
            else
            {
              if (!v745)
              {
                if (a1 != v742)
                {
                  sub_2536FA73C();
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 1u:
                      *uint64_t v730 = *v731;
                      v730[1] = v731[1];
                      uint64_t v787 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
                      __dstt = (char *)v731 + v787;
                      __srci = (char *)v730 + v787;
                      uint64_t v788 = sub_253B07160();
                      v842 = *(void (**)(char *, char *, uint64_t))(*(void *)(v788 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v842(__srci, __dstt, v788);
                      break;
                    case 2u:
                      uint64_t v789 = *v731;
                      unint64_t v790 = v731[1];
                      sub_25348A9C8(*v731, v790);
                      *uint64_t v730 = v789;
                      v730[1] = v790;
                      v730[2] = v731[2];
                      v730[3] = v731[3];
                      uint64_t v791 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
                      __dstu = (char *)v731 + v791;
                      __srcj = (char *)v730 + v791;
                      uint64_t v792 = sub_253B07160();
                      v843 = *(void (**)(char *, char *, uint64_t))(*(void *)(v792 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v843(__srcj, __dstu, v792);
                      break;
                    case 3u:
                      uint64_t v793 = *v731;
                      unint64_t v794 = v731[1];
                      sub_25348A9C8(*v731, v794);
                      *uint64_t v730 = v793;
                      v730[1] = v794;
                      uint64_t v795 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
                      v796 = (char *)v730 + v795;
                      uint64_t v797 = (char *)v731 + v795;
                      uint64_t v798 = sub_253B07160();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v798 - 8) + 16))(v796, v797, v798);
                      break;
                    default:
                      uint64_t v773 = *v731;
                      unint64_t v774 = v731[1];
                      sub_25348A9C8(*v731, v774);
                      *uint64_t v730 = v773;
                      v730[1] = v774;
                      v730[2] = v731[2];
                      v730[3] = v731[3];
                      v730[4] = v731[4];
                      v730[5] = v731[5];
                      uint64_t v775 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
                      __srch = (char *)v730 + v775;
                      uint64_t v840 = (char *)v731 + v775;
                      uint64_t v776 = sub_253B07160();
                      uint64_t v826 = *(void (**)(char *, char *, uint64_t))(*(void *)(v776 - 8) + 16);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      v826(__srch, v840, v776);
                      break;
                  }
                  swift_storeEnumTagMultiPayload();
                }
                goto LABEL_338;
              }
              sub_2536FA73C();
            }
            uint64_t v754 = sub_253462A5C(&qword_269CDCC08);
            memcpy(v730, v731, *(void *)(*(void *)(v754 - 8) + 64));
LABEL_338:
            uint64_t v799 = *(int *)(v732 + 20);
            uint64_t v800 = (char *)v730 + v799;
            uint64_t v801 = (char *)v731 + v799;
            uint64_t v802 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v802 - 8) + 24))(v800, v801, v802);
            a2 = v742;
            v600 = v741;
            uint64_t v601 = v892;
            goto LABEL_339;
          }
LABEL_276:
          uint64_t v647 = sub_253462A5C(&qword_269CE04C8);
          memcpy(v637, v638, *(void *)(*(void *)(v647 - 8) + 64));
          goto LABEL_302;
        }
        if (v641)
        {
          sub_2536FA73C();
          goto LABEL_276;
        }
        __srcg = a2;
        uint64_t v891 = v601;
        *uint64_t v637 = *v638;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v637[1] = v638[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v680 = *(int *)(v639 + 24);
        uint64_t v681 = (char *)v637 + v680;
        uint64_t v682 = (char *)v638 + v680;
        uint64_t v683 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
        int v684 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v681, 1, v683);
        int v685 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v682, 1, v683);
        if (v684)
        {
          if (!v685)
          {
            *uint64_t v681 = *v682;
            uint64_t v686 = *(int *)(v683 + 20);
            v687 = &v681[v686];
            v688 = &v682[v686];
            uint64_t v689 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v689 - 8) + 16))(v687, v688, v689);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v681, 0, 1, v683);
LABEL_301:
            uint64_t v719 = *(int *)(v639 + 28);
            uint64_t v720 = (char *)v637 + v719;
            uint64_t v721 = (char *)v638 + v719;
            uint64_t v722 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v722 - 8) + 24))(v720, v721, v722);
            a2 = __srcg;
            uint64_t v601 = v891;
            goto LABEL_302;
          }
        }
        else
        {
          if (!v685)
          {
            *uint64_t v681 = *v682;
            uint64_t v769 = *(int *)(v683 + 20);
            uint64_t v770 = &v681[v769];
            uint64_t v771 = &v682[v769];
            uint64_t v772 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v772 - 8) + 24))(v770, v771, v772);
            goto LABEL_301;
          }
          sub_2536FA73C();
        }
        uint64_t v718 = sub_253462A5C(&qword_269CE04C0);
        memcpy(v681, v682, *(void *)(*(void *)(v718 - 8) + 64));
        goto LABEL_301;
      }
      sub_2536FA73C();
    }
    uint64_t v635 = sub_253462A5C(&qword_269CE04B8);
    memcpy(v612, v613, *(void *)(*(void *)(v635 - 8) + 64));
    goto LABEL_270;
  }
  if (!v604)
  {
    uint64_t v932 = a3;
    void *v600 = *v601;
    uint64_t v605 = v602[5];
    uint64_t v606 = (void *)((char *)v600 + v605);
    v607 = (void *)((char *)v601 + v605);
    uint64_t v608 = type metadata accessor for TranscriptProtoResponseDialog(0);
    swift_bridgeObjectRetain();
    v889 = v601;
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v607, 1, v608))
    {
      uint64_t v609 = sub_253462A5C(&qword_269CE04B8);
      memcpy(v606, v607, *(void *)(*(void *)(v609 - 8) + 64));
    }
    else
    {
      *uint64_t v606 = *v607;
      v606[1] = v607[1];
      v606[2] = v607[2];
      v606[3] = v607[3];
      v606[4] = v607[4];
      v606[5] = v607[5];
      v606[6] = v607[6];
      v606[7] = v607[7];
      uint64_t v620 = *(int *)(v608 + 32);
      uint64_t v820 = (char *)v607 + v620;
      uint64_t v835 = (char *)v606 + v620;
      __dstq = a1;
      uint64_t v621 = sub_253B07160();
      v622 = *(void (**)(char *, char *, uint64_t))(*(void *)(v621 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v623 = v621;
      a1 = __dstq;
      v622(v835, v820, v623);
      uint64_t v601 = v889;
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v606, 0, 1, v608);
    }
    uint64_t v624 = v602[6];
    uint64_t v625 = (void *)((char *)v600 + v624);
    uint64_t v626 = (void *)((char *)v601 + v624);
    uint64_t v627 = type metadata accessor for TranscriptProtoResponseVisual(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v626, 1, v627))
    {
      uint64_t v628 = sub_253462A5C(&qword_269CE04C8);
      memcpy(v625, v626, *(void *)(*(void *)(v628 - 8) + 64));
    }
    else
    {
      uint64_t v915 = v602;
      v629 = a2;
      *uint64_t v625 = *v626;
      v625[1] = v626[1];
      uint64_t v630 = *(int *)(v627 + 24);
      uint64_t v631 = (char *)v625 + v630;
      v632 = (char *)v626 + v630;
      uint64_t v633 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v632, 1, v633))
      {
        uint64_t v634 = sub_253462A5C(&qword_269CE04C0);
        memcpy(v631, v632, *(void *)(*(void *)(v634 - 8) + 64));
      }
      else
      {
        *uint64_t v631 = *v632;
        uint64_t v648 = *(int *)(v633 + 20);
        v649 = &v631[v648];
        v650 = &v632[v648];
        uint64_t v651 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v651 - 8) + 16))(v649, v650, v651);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v631, 0, 1, v633);
      }
      a2 = v629;
      uint64_t v652 = *(int *)(v627 + 28);
      uint64_t v653 = (char *)v625 + v652;
      uint64_t v654 = (char *)v626 + v652;
      uint64_t v655 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v655 - 8) + 16))(v653, v654, v655);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v625, 0, 1, v627);
      uint64_t v601 = v889;
      uint64_t v602 = v915;
    }
    uint64_t v656 = v602[7];
    uint64_t v657 = (void *)((char *)v600 + v656);
    v658 = (void *)((char *)v601 + v656);
    *uint64_t v657 = *v658;
    v657[1] = v658[1];
    uint64_t v659 = v602[8];
    uint64_t v660 = (void *)((char *)v600 + v659);
    uint64_t v661 = (void *)((char *)v601 + v659);
    *uint64_t v660 = *v661;
    v660[1] = v661[1];
    *((unsigned char *)v600 + v602[9]) = *((unsigned char *)v601 + v602[9]);
    *((unsigned char *)v600 + v602[10]) = *((unsigned char *)v601 + v602[10]);
    uint64_t v662 = (uint64_t)v602;
    uint64_t v663 = v602[11];
    int v664 = (void *)((char *)v600 + v663);
    uint64_t v665 = (void *)((char *)v601 + v663);
    uint64_t v666 = type metadata accessor for TranscriptProtoUIType(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v665, 1, v666))
    {
      uint64_t v667 = sub_253462A5C(&qword_269CE04D0);
      memcpy(v664, v665, *(void *)(*(void *)(v667 - 8) + 64));
    }
    else
    {
      uint64_t v668 = a2;
      uint64_t v669 = type metadata accessor for TranscriptProtoUitype(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v665, 1, v669))
      {
        uint64_t v670 = sub_253462A5C(&qword_269CDCC08);
        memcpy(v664, v665, *(void *)(*(void *)(v670 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *int v664 = *v665;
            v664[1] = v665[1];
            uint64_t v698 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
            goto LABEL_293;
          case 2u:
            uint64_t v699 = *v665;
            unint64_t v700 = v665[1];
            sub_25348A9C8(*v665, v700);
            *int v664 = v699;
            v664[1] = v700;
            v664[2] = v665[2];
            v664[3] = v665[3];
            uint64_t v698 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
LABEL_293:
            uint64_t v815 = (char *)v665 + v698;
            uint64_t v822 = (char *)v664 + v698;
            uint64_t v837 = v600;
            __dstr = a1;
            uint64_t v701 = sub_253B07160();
            uint64_t v702 = *(void (**)(char *, char *, uint64_t))(*(void *)(v701 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v703 = v701;
            a1 = __dstr;
            v702(v822, v815, v703);
            v600 = v837;
            break;
          case 3u:
            uint64_t v704 = *v665;
            unint64_t v705 = v665[1];
            sub_25348A9C8(*v665, v705);
            *int v664 = v704;
            v664[1] = v705;
            uint64_t v706 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
            v707 = (char *)v664 + v706;
            uint64_t v708 = (char *)v665 + v706;
            uint64_t v709 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v709 - 8) + 16))(v707, v708, v709);
            break;
          default:
            uint64_t v671 = *v665;
            unint64_t v672 = v665[1];
            sub_25348A9C8(*v665, v672);
            *int v664 = v671;
            v664[1] = v672;
            v664[2] = v665[2];
            v664[3] = v665[3];
            v664[4] = v665[4];
            v664[5] = v665[5];
            uint64_t v673 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
            uint64_t v814 = (char *)v665 + v673;
            long long v821 = (char *)v664 + v673;
            v836 = v600;
            uint64_t v674 = sub_253B07160();
            uint64_t v812 = *(void (**)(char *, char *, uint64_t))(*(void *)(v674 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v675 = v674;
            v600 = v836;
            v812(v821, v814, v675);
            break;
        }
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v664, 0, 1, v669);
      }
      a2 = v668;
      uint64_t v710 = *(int *)(v666 + 20);
      uint64_t v711 = (char *)v664 + v710;
      uint64_t v712 = (char *)v665 + v710;
      uint64_t v713 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v713 - 8) + 16))(v711, v712, v713);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v664, 0, 1, v666);
      uint64_t v601 = v889;
    }
    uint64_t v714 = *(int *)(v662 + 48);
    uint64_t v715 = (char *)v600 + v714;
    v716 = (char *)v601 + v714;
    uint64_t v717 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v717 - 8) + 16))(v715, v716, v717);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v600, 0, 1, v662);
    goto LABEL_340;
  }
LABEL_258:
  uint64_t v610 = sub_253462A5C(&qword_269CE0378);
  memcpy(v600, v601, *(void *)(*(void *)(v610 - 8) + 64));
LABEL_341:
  uint64_t v807 = *(int *)(a3 + 24);
  uint64_t v808 = (char *)a1 + v807;
  uint64_t v809 = (char *)a2 + v807;
  uint64_t v810 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v810 - 8) + 24))(v808, v809, v810);
  return a1;
}

void *initializeWithTake for TranscriptProtoStatementResultPayload(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE0388);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v8))
    {
      uint64_t v9 = sub_253462A5C(&qword_269CE04B0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v252 = a3;
          *a1 = *a2;
          uint64_t v16 = type metadata accessor for TranscriptProtoActionConfirmation(0);
          uint64_t v17 = *(int *)(v16 + 20);
          uint64_t v18 = (char *)a1 + v17;
          uint64_t v19 = a2;
          uint64_t v20 = (char *)a2 + v17;
          uint64_t v21 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21))
          {
            uint64_t v22 = sub_253462A5C(&qword_269CE0480);
            memcpy(v18, v20, *(void *)(*(void *)(v22 - 8) + 64));
          }
          else
          {
            uint64_t v245 = a1;
            uint64_t v63 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v63))
            {
              uint64_t v64 = sub_253462A5C(&qword_269CE0478);
              memcpy(v18, v20, *(void *)(*(void *)(v64 - 8) + 64));
            }
            else
            {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v20;
              v18[16] = v20[16];
              uint64_t v94 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
              uint64_t v95 = *(int *)(v94 + 24);
              __dst = &v18[v95];
              uint64_t v96 = &v20[v95];
              uint64_t v244 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v96, 1, v244))
              {
                uint64_t v97 = sub_253462A5C(&qword_269CE0470);
                memcpy(__dst, v96, *(void *)(*(void *)(v97 - 8) + 64));
              }
              else
              {
                unsigned char *__dst = *v96;
                uint64_t v119 = *(int *)(v244 + 20);
                uint64_t v243 = v94;
                uint64_t v120 = &__dst[v119];
                uint64_t v121 = &v96[v119];
                uint64_t v122 = sub_253B07160();
                uint64_t v123 = v120;
                uint64_t v94 = v243;
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v122 - 8) + 32))(v123, v121, v122);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v244);
              }
              uint64_t v124 = *(int *)(v94 + 28);
              uint64_t v125 = &v18[v124];
              uint64_t v126 = &v20[v124];
              uint64_t v127 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v127 - 8) + 32))(v125, v126, v127);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v63);
            }
            uint64_t v128 = *(int *)(v21 + 20);
            uint64_t v129 = &v18[v128];
            uint64_t v130 = &v20[v128];
            uint64_t v131 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v131 - 8) + 32))(v129, v130, v131);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v21);
            a1 = v245;
          }
          a3 = v252;
          uint64_t v132 = *(int *)(v16 + 24);
          uint64_t v133 = (char *)a1 + v132;
          a2 = v19;
          uint64_t v134 = (char *)v19 + v132;
          uint64_t v135 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 32))(v133, v134, v135);
          goto LABEL_80;
        case 2u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
          uint64_t v24 = (char *)a1 + v23;
          uint64_t v25 = (char *)a2 + v23;
          uint64_t v26 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
          goto LABEL_80;
        case 3u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          uint64_t v27 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
          uint64_t v28 = *(int *)(v27 + 24);
          uint64_t v29 = (char *)a1 + v28;
          uint64_t v30 = (char *)a2 + v28;
          uint64_t v31 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v30, 1, v31)) {
            goto LABEL_12;
          }
          goto LABEL_29;
        case 4u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v33 = a2[3];
          a1[2] = a2[2];
          a1[3] = v33;
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          uint64_t v34 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
          uint64_t v35 = (char *)a1 + v34;
          uint64_t v36 = (char *)a2 + v34;
          uint64_t v37 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
          goto LABEL_80;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v27 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
          uint64_t v38 = *(int *)(v27 + 24);
          uint64_t v29 = (char *)a1 + v38;
          uint64_t v30 = (char *)a2 + v38;
          uint64_t v31 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v30, 1, v31))
          {
LABEL_12:
            uint64_t v32 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
          }
          else
          {
LABEL_29:
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v29, 0, 1, v31);
          }
          uint64_t v65 = *(int *)(v27 + 28);
          uint64_t v66 = (char *)a1 + v65;
          uint64_t v67 = (char *)a2 + v65;
          uint64_t v68 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v66, v67, v68);
          goto LABEL_80;
        case 6u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v39 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
          uint64_t v40 = *(int *)(v39 + 20);
          uint64_t v41 = (char *)a1 + v40;
          uint64_t v42 = (char *)a2 + v40;
          uint64_t v43 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v42, 1, v43))
          {
            uint64_t v44 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v41, 0, 1, v43);
          }
          uint64_t v69 = *(int *)(v39 + 24);
          uint64_t v70 = (char *)a1 + v69;
          uint64_t v71 = (char *)a2 + v69;
          uint64_t v72 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v70, v71, v72);
          goto LABEL_80;
        case 7u:
          uint64_t v45 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v45))
          {
            uint64_t v46 = sub_253462A5C(&qword_269CE0498);
            memcpy(a1, a2, *(void *)(*(void *)(v46 - 8) + 64));
            goto LABEL_79;
          }
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2)
          {
            uint64_t v100 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v100))
            {
              uint64_t v101 = sub_253462A5C(&qword_269CE0490);
              memcpy(a1, a2, *(void *)(*(void *)(v101 - 8) + 64));
            }
            else
            {
              int v153 = swift_getEnumCaseMultiPayload();
              if (v153 == 1)
              {
                uint64_t v158 = a3;
                uint64_t v159 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v159))
                {
                  uint64_t v160 = sub_253462A5C(&qword_269CE0488);
                  memcpy(a1, a2, *(void *)(*(void *)(v160 - 8) + 64));
                }
                else
                {
                  *(unsigned char *)a1 = *(unsigned char *)a2;
                  uint64_t v161 = *(int *)(v159 + 20);
                  uint64_t v162 = (char *)a1 + v161;
                  uint64_t v163 = (char *)a2 + v161;
                  uint64_t v164 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 32))(v162, v163, v164);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v159);
                }
                uint64_t v165 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0)
                              + 20);
                uint64_t v166 = (char *)a1 + v165;
                uint64_t v167 = (char *)a2 + v165;
                uint64_t v168 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 32))(v166, v167, v168);
                swift_storeEnumTagMultiPayload();
                a3 = v158;
              }
              else if (v153)
              {
                memcpy(a1, a2, *(void *)(*(void *)(v100 - 8) + 64));
              }
              else
              {
                *(_OWORD *)a1 = *(_OWORD *)a2;
                uint64_t v154 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
                uint64_t v155 = (char *)a1 + v154;
                uint64_t v156 = (char *)a2 + v154;
                uint64_t v157 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 32))(v155, v156, v157);
                swift_storeEnumTagMultiPayload();
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v100);
            }
            uint64_t v169 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
            uint64_t v170 = (char *)a1 + v169;
            uint64_t v171 = (char *)a2 + v169;
            uint64_t v172 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v172 - 8) + 32))(v170, v171, v172);
          }
          else if (EnumCaseMultiPayload == 1)
          {
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v102 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v103 = (char *)a1 + v102;
            uint64_t v104 = (char *)a2 + v102;
            uint64_t v105 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 32))(v103, v104, v105);
          }
          else
          {
            if (EnumCaseMultiPayload)
            {
              memcpy(a1, a2, *(void *)(*(void *)(v45 - 8) + 64));
              goto LABEL_78;
            }
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v74 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v75 = (char *)a1 + v74;
            uint64_t v76 = (char *)a2 + v74;
            uint64_t v77 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 32))(v75, v76, v77);
          }
          swift_storeEnumTagMultiPayload();
LABEL_78:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v45);
LABEL_79:
          uint64_t v173 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
          uint64_t v174 = (char *)a1 + v173;
          uint64_t v175 = (char *)a2 + v173;
          uint64_t v176 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 32))(v174, v175, v176);
LABEL_80:
          swift_storeEnumTagMultiPayload();
LABEL_81:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v8);
          break;
        case 8u:
          *a1 = *a2;
          *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
          uint64_t v47 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
          uint64_t v48 = (char *)a1 + v47;
          uint64_t v49 = (char *)a2 + v47;
          uint64_t v50 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
          goto LABEL_80;
        case 9u:
          uint64_t v51 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v51))
          {
            uint64_t v52 = sub_253462A5C(&qword_269CE04A8);
            memcpy(a1, a2, *(void *)(*(void *)(v52 - 8) + 64));
          }
          else
          {
            uint64_t v78 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v78))
            {
              uint64_t v79 = sub_253462A5C(&qword_269CE04A0);
              memcpy(a1, a2, *(void *)(*(void *)(v79 - 8) + 64));
            }
            else
            {
              uint64_t v92 = a3;
              uint64_t v93 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v93))
              {
                memcpy(a1, a2, *(void *)(*(void *)(v78 - 8) + 64));
              }
              else
              {
                long long v106 = *((_OWORD *)a2 + 1);
                *(_OWORD *)a1 = *(_OWORD *)a2;
                *((_OWORD *)a1 + 1) = v106;
                a1[4] = a2[4];
                uint64_t v107 = *(int *)(v93 + 28);
                uint64_t v108 = (char *)a1 + v107;
                uint64_t v109 = (char *)a2 + v107;
                uint64_t v110 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 32))(v108, v109, v110);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v93);
              }
              a3 = v92;
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v78);
            }
            uint64_t v111 = *(int *)(v51 + 20);
            uint64_t v112 = (char *)a1 + v111;
            uint64_t v113 = (char *)a2 + v111;
            uint64_t v114 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32))(v112, v113, v114);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v51);
          }
          uint64_t v115 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
          uint64_t v116 = (char *)a1 + v115;
          uint64_t v117 = (char *)a2 + v115;
          uint64_t v118 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 32))(v116, v117, v118);
          goto LABEL_80;
        case 0xAu:
          *a1 = *a2;
          uint64_t v53 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
          uint64_t v54 = (char *)a1 + v53;
          uint64_t v55 = (char *)a2 + v53;
          uint64_t v56 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
          goto LABEL_80;
        default:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          *(_WORD *)((char *)a1 + 1) = *(_WORD *)((char *)a2 + 1);
          uint64_t v10 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
          uint64_t v11 = v10[7];
          uint64_t v12 = (char *)a1 + v11;
          int v13 = (char *)a2 + v11;
          uint64_t v14 = sub_253B08E50();
          uint64_t v251 = a3;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
          {
            uint64_t v15 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
          }
          uint64_t v57 = v10[8];
          uint64_t v58 = (_OWORD *)((char *)a1 + v57);
          uint64_t v59 = a2;
          uint64_t v60 = (_OWORD *)((char *)a2 + v57);
          uint64_t v61 = type metadata accessor for TranscriptProtoUndoContext(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v60, 1, v61))
          {
            uint64_t v62 = sub_253462A5C(&qword_269CE0450);
            memcpy(v58, v60, *(void *)(*(void *)(v62 - 8) + 64));
          }
          else
          {
            long long v80 = v60[1];
            *uint64_t v58 = *v60;
            v58[1] = v80;
            v58[2] = v60[2];
            uint64_t v81 = *(int *)(v61 + 28);
            uint64_t v82 = (char *)v58 + v81;
            uint64_t v83 = (char *)v60 + v81;
            uint64_t v84 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v82, v83, v84);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v58, 0, 1, v61);
          }
          uint64_t v85 = v10[9];
          uint64_t v86 = (_OWORD *)((char *)a1 + v85);
          uint64_t v87 = (_OWORD *)((char *)v59 + v85);
          uint64_t v88 = type metadata accessor for TranscriptProtoFollowUpAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v87, 1, v88))
          {
            uint64_t v89 = sub_253462A5C(&qword_269CE0468);
            memcpy(v86, v87, *(void *)(*(void *)(v89 - 8) + 64));
          }
          else
          {
            uint64_t v246 = a1;
            uint64_t v90 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v87, 1, v90))
            {
              uint64_t v91 = sub_253462A5C(&qword_269CE0460);
              memcpy(v86, v87, *(void *)(*(void *)(v91 - 8) + 64));
            }
            else
            {
              uint64_t v98 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v87, 1, v98))
              {
                uint64_t v99 = sub_253462A5C(&qword_269CE0458);
                memcpy(v86, v87, *(void *)(*(void *)(v99 - 8) + 64));
              }
              else
              {
                long long v136 = v87[1];
                *uint64_t v86 = *v87;
                v86[1] = v136;
                *((void *)v86 + 4) = *((void *)v87 + 4);
                uint64_t v137 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                              + 28);
                __dstb = (void *)v98;
                uint64_t v138 = (char *)v86 + v137;
                uint64_t v139 = (char *)v87 + v137;
                uint64_t v140 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v138, v139, v140);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v86, 0, 1, (uint64_t)__dstb);
              }
              uint64_t v141 = *(int *)(v90 + 20);
              uint64_t v142 = (char *)v86 + v141;
              uint64_t v143 = (char *)v87 + v141;
              uint64_t v144 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 32))(v142, v143, v144);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v86, 0, 1, v90);
            }
            uint64_t v145 = *(int *)(v88 + 20);
            uint64_t v146 = (char *)v86 + v145;
            uint64_t v147 = (char *)v87 + v145;
            uint64_t v148 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 32))(v146, v147, v148);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v86, 0, 1, v88);
            a1 = v246;
          }
          a2 = v59;
          *(_OWORD *)((char *)a1 + v10[10]) = *(_OWORD *)((char *)v59 + v10[10]);
          uint64_t v149 = v10[11];
          uint64_t v150 = (char *)a1 + v149;
          uint64_t v151 = (char *)v59 + v149;
          uint64_t v152 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 32))(v150, v151, v152);
          swift_storeEnumTagMultiPayload();
          a3 = v251;
          goto LABEL_81;
      }
    }
    uint64_t v177 = *(int *)(v6 + 20);
    uint64_t v178 = (char *)a1 + v177;
    uint64_t v179 = (char *)a2 + v177;
    uint64_t v180 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 32))(v178, v179, v180);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v181 = *(int *)(a3 + 20);
  uint64_t v182 = (void *)((char *)a1 + v181);
  uint64_t v183 = (void *)((char *)a2 + v181);
  uint64_t v184 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v183, 1, (uint64_t)v184))
  {
    uint64_t v185 = sub_253462A5C(&qword_269CE0378);
    memcpy(v182, v183, *(void *)(*(void *)(v185 - 8) + 64));
  }
  else
  {
    __dsta = a2;
    uint64_t v253 = a3;
    void *v182 = *v183;
    uint64_t v186 = v184[5];
    uint64_t v187 = (_OWORD *)((char *)v182 + v186);
    uint64_t v188 = (_OWORD *)((char *)v183 + v186);
    uint64_t v189 = type metadata accessor for TranscriptProtoResponseDialog(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v188, 1, v189))
    {
      uint64_t v190 = sub_253462A5C(&qword_269CE04B8);
      memcpy(v187, v188, *(void *)(*(void *)(v190 - 8) + 64));
    }
    else
    {
      long long v191 = v188[1];
      _OWORD *v187 = *v188;
      v187[1] = v191;
      long long v192 = v188[3];
      v187[2] = v188[2];
      v187[3] = v192;
      uint64_t v193 = *(int *)(v189 + 32);
      uint64_t v194 = (char *)v187 + v193;
      uint64_t v195 = (char *)v188 + v193;
      uint64_t v196 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 32))(v194, v195, v196);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v187, 0, 1, v189);
    }
    uint64_t v197 = v184[6];
    uint64_t v198 = (_OWORD *)((char *)v182 + v197);
    uint64_t v199 = (_OWORD *)((char *)v183 + v197);
    uint64_t v200 = type metadata accessor for TranscriptProtoResponseVisual(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v199, 1, v200))
    {
      uint64_t v201 = sub_253462A5C(&qword_269CE04C8);
      memcpy(v198, v199, *(void *)(*(void *)(v201 - 8) + 64));
    }
    else
    {
      uint64_t v247 = a1;
      *uint64_t v198 = *v199;
      uint64_t v202 = *(int *)(v200 + 24);
      uint64_t v203 = (char *)v198 + v202;
      uint64_t v204 = (char *)v199 + v202;
      uint64_t v205 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v204, 1, v205))
      {
        uint64_t v206 = sub_253462A5C(&qword_269CE04C0);
        memcpy(v203, v204, *(void *)(*(void *)(v206 - 8) + 64));
      }
      else
      {
        *uint64_t v203 = *v204;
        uint64_t v207 = *(int *)(v205 + 20);
        uint64_t v208 = &v203[v207];
        uint64_t v209 = &v204[v207];
        uint64_t v210 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v210 - 8) + 32))(v208, v209, v210);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v203, 0, 1, v205);
      }
      uint64_t v211 = *(int *)(v200 + 28);
      uint64_t v212 = (char *)v198 + v211;
      uint64_t v213 = (char *)v199 + v211;
      uint64_t v214 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 32))(v212, v213, v214);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v198, 0, 1, v200);
      a1 = v247;
    }
    *(_OWORD *)((char *)v182 + v184[7]) = *(_OWORD *)((char *)v183 + v184[7]);
    *(_OWORD *)((char *)v182 + v184[8]) = *(_OWORD *)((char *)v183 + v184[8]);
    *((unsigned char *)v182 + v184[9]) = *((unsigned char *)v183 + v184[9]);
    *((unsigned char *)v182 + v184[10]) = *((unsigned char *)v183 + v184[10]);
    uint64_t v215 = v184[11];
    uint64_t v216 = (_OWORD *)((char *)v182 + v215);
    uint64_t v217 = (_OWORD *)((char *)v183 + v215);
    uint64_t v218 = type metadata accessor for TranscriptProtoUIType(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v217, 1, v218))
    {
      uint64_t v219 = sub_253462A5C(&qword_269CE04D0);
      memcpy(v216, v217, *(void *)(*(void *)(v219 - 8) + 64));
    }
    else
    {
      uint64_t v220 = a1;
      uint64_t v221 = type metadata accessor for TranscriptProtoUitype(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v217, 1, v221))
      {
        uint64_t v222 = sub_253462A5C(&qword_269CDCC08);
        memcpy(v216, v217, *(void *)(*(void *)(v222 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            _OWORD *v216 = *v217;
            uint64_t v225 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
            goto LABEL_103;
          case 2u:
            long long v226 = v217[1];
            _OWORD *v216 = *v217;
            v216[1] = v226;
            uint64_t v224 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
            break;
          case 3u:
            _OWORD *v216 = *v217;
            uint64_t v225 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_103:
            uint64_t v224 = *(int *)(v225 + 20);
            break;
          default:
            long long v223 = v217[1];
            _OWORD *v216 = *v217;
            v216[1] = v223;
            v216[2] = v217[2];
            uint64_t v224 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
            break;
        }
        uint64_t v227 = (char *)v216 + v224;
        uint64_t v228 = (char *)v217 + v224;
        uint64_t v229 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v229 - 8) + 32))(v227, v228, v229);
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v216, 0, 1, v221);
      }
      a1 = v220;
      uint64_t v230 = *(int *)(v218 + 20);
      uint64_t v231 = (char *)v216 + v230;
      uint64_t v232 = (char *)v217 + v230;
      uint64_t v233 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v233 - 8) + 32))(v231, v232, v233);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v216, 0, 1, v218);
    }
    uint64_t v234 = v184[12];
    uint64_t v235 = (char *)v182 + v234;
    uint64_t v236 = (char *)v183 + v234;
    uint64_t v237 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v237 - 8) + 32))(v235, v236, v237);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v182, 0, 1, (uint64_t)v184);
    a2 = __dsta;
    a3 = v253;
  }
  uint64_t v238 = *(int *)(a3 + 24);
  uint64_t v239 = (char *)a1 + v238;
  uint64_t v240 = (char *)a2 + v238;
  uint64_t v241 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v241 - 8) + 32))(v239, v240, v241);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoStatementResultPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v12 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v12);
    int v14 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v741 = a3;
            *(void *)a1 = *(void *)a2;
            uint64_t v75 = type metadata accessor for TranscriptProtoActionConfirmation(0);
            uint64_t v76 = *(int *)(v75 + 20);
            uint64_t v77 = (unsigned char *)(a1 + v76);
            uint64_t v78 = a2;
            uint64_t v79 = (unsigned char *)(a2 + v76);
            uint64_t v80 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v79, 1, v80))
            {
              uint64_t v81 = sub_253462A5C(&qword_269CE0480);
              memcpy(v77, v79, *(void *)(*(void *)(v81 - 8) + 64));
            }
            else
            {
              uint64_t v197 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v79, 1, v197))
              {
                uint64_t v198 = sub_253462A5C(&qword_269CE0478);
                memcpy(v77, v79, *(void *)(*(void *)(v198 - 8) + 64));
              }
              else
              {
                uint64_t v726 = a1;
                *(_OWORD *)uint64_t v77 = *(_OWORD *)v79;
                v77[16] = v79[16];
                uint64_t v263 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
                uint64_t v264 = *(int *)(v263 + 24);
                uint64_t v716 = v263;
                __dsta = &v77[v264];
                uint64_t v265 = &v79[v264];
                uint64_t v266 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v265, 1, v266))
                {
                  uint64_t v267 = sub_253462A5C(&qword_269CE0470);
                  memcpy(__dsta, v265, *(void *)(*(void *)(v267 - 8) + 64));
                }
                else
                {
                  unsigned char *__dsta = *v265;
                  uint64_t v363 = *(int *)(v266 + 20);
                  uint64_t v713 = &__dsta[v363];
                  uint64_t v364 = &v265[v363];
                  uint64_t v365 = sub_253B07160();
                  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v365 - 8) + 32))(v713, v364, v365);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v266);
                }
                uint64_t v366 = *(int *)(v716 + 28);
                uint64_t v367 = &v77[v366];
                unint64_t v368 = &v79[v366];
                uint64_t v369 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v369 - 8) + 32))(v367, v368, v369);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v77, 0, 1, v197);
                a1 = v726;
              }
              uint64_t v370 = *(int *)(v80 + 20);
              uint64_t v371 = &v77[v370];
              uint64_t v372 = &v79[v370];
              uint64_t v373 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v373 - 8) + 32))(v371, v372, v373);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v77, 0, 1, v80);
            }
            a3 = v741;
            uint64_t v374 = *(int *)(v75 + 24);
            uint64_t v375 = a1 + v374;
            a2 = v78;
            uint64_t v376 = v78 + v374;
            uint64_t v377 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v377 - 8) + 32))(v375, v376, v377);
            goto LABEL_236;
          case 2u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            uint64_t v82 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
            uint64_t v83 = a1 + v82;
            uint64_t v84 = a2 + v82;
            uint64_t v85 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 32))(v83, v84, v85);
            goto LABEL_236;
          case 3u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
            uint64_t v86 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
            uint64_t v87 = *(int *)(v86 + 24);
            uint64_t v88 = (void *)(a1 + v87);
            uint64_t v89 = (const void *)(a2 + v87);
            uint64_t v90 = sub_253B08E50();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v89, 1, v90)) {
              goto LABEL_43;
            }
            goto LABEL_97;
          case 4u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            uint64_t v92 = *(void *)(a2 + 24);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(void *)(a1 + 24) = v92;
            *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
            uint64_t v93 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
            uint64_t v94 = a1 + v93;
            uint64_t v95 = a2 + v93;
            uint64_t v96 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 32))(v94, v95, v96);
            goto LABEL_236;
          case 5u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
            uint64_t v86 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
            uint64_t v97 = *(int *)(v86 + 24);
            uint64_t v88 = (void *)(a1 + v97);
            uint64_t v89 = (const void *)(a2 + v97);
            uint64_t v90 = sub_253B08E50();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v89, 1, v90))
            {
LABEL_43:
              uint64_t v91 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v88, v89, *(void *)(*(void *)(v91 - 8) + 64));
            }
            else
            {
LABEL_97:
              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v90 - 8) + 32))(v88, v89, v90);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v88, 0, 1, v90);
            }
            uint64_t v199 = *(int *)(v86 + 28);
            uint64_t v200 = a1 + v199;
            uint64_t v201 = a2 + v199;
            uint64_t v202 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v202 - 8) + 32))(v200, v201, v202);
            goto LABEL_236;
          case 6u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            uint64_t v98 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
            uint64_t v99 = *(int *)(v98 + 20);
            uint64_t v100 = (void *)(a1 + v99);
            uint64_t v101 = (const void *)(a2 + v99);
            uint64_t v102 = sub_253B08E50();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v101, 1, v102))
            {
              uint64_t v103 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v100, v101, *(void *)(*(void *)(v103 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v102 - 8) + 32))(v100, v101, v102);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v100, 0, 1, v102);
            }
            uint64_t v203 = *(int *)(v98 + 24);
            uint64_t v204 = a1 + v203;
            uint64_t v205 = a2 + v203;
            uint64_t v206 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v206 - 8) + 32))(v204, v205, v206);
            goto LABEL_236;
          case 7u:
            uint64_t v104 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v104))
            {
              uint64_t v105 = sub_253462A5C(&qword_269CE0498);
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v105 - 8) + 64));
              goto LABEL_235;
            }
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload != 2)
            {
              if (EnumCaseMultiPayload == 1)
              {
                *(unsigned char *)a1 = *(unsigned char *)a2;
                uint64_t v332 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
                uint64_t v333 = a1 + v332;
                uint64_t v334 = a2 + v332;
                uint64_t v335 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v335 - 8) + 32))(v333, v334, v335);
              }
              else
              {
                if (EnumCaseMultiPayload)
                {
                  memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v104 - 8) + 64));
                  goto LABEL_234;
                }
                *(unsigned char *)a1 = *(unsigned char *)a2;
                uint64_t v208 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
                uint64_t v209 = a1 + v208;
                uint64_t v210 = a2 + v208;
                uint64_t v211 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v211 - 8) + 32))(v209, v210, v211);
              }
LABEL_233:
              swift_storeEnumTagMultiPayload();
LABEL_234:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v104);
LABEL_235:
              uint64_t v497 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
              uint64_t v498 = a1 + v497;
              uint64_t v499 = a2 + v497;
              uint64_t v500 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v500 - 8) + 32))(v498, v499, v500);
LABEL_236:
              swift_storeEnumTagMultiPayload();
LABEL_237:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v12);
              goto LABEL_247;
            }
            uint64_t v330 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v330))
            {
              uint64_t v331 = sub_253462A5C(&qword_269CE0490);
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v331 - 8) + 64));
LABEL_232:
              uint64_t v493 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
              uint64_t v494 = a1 + v493;
              uint64_t v495 = a2 + v493;
              uint64_t v496 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v496 - 8) + 32))(v494, v495, v496);
              goto LABEL_233;
            }
            uint64_t v402 = a3;
            int v403 = swift_getEnumCaseMultiPayload();
            if (v403 == 1)
            {
              uint64_t v461 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
              uint64_t v462 = a2;
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v461))
              {
                uint64_t v463 = sub_253462A5C(&qword_269CE0488);
                memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v463 - 8) + 64));
              }
              else
              {
                *(unsigned char *)a1 = *(unsigned char *)a2;
                uint64_t v486 = *(int *)(v461 + 20);
                uint64_t v730 = a1 + v486;
                uint64_t v487 = a2 + v486;
                uint64_t v488 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v488 - 8) + 32))(v730, v487, v488);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v461);
              }
              uint64_t v489 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
              uint64_t v490 = a1 + v489;
              a2 = v462;
              uint64_t v491 = v462 + v489;
              uint64_t v492 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v492 - 8) + 32))(v490, v491, v492);
            }
            else
            {
              if (v403)
              {
                memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v330 - 8) + 64));
LABEL_231:
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v330);
                a3 = v402;
                goto LABEL_232;
              }
              *(_OWORD *)a1 = *(_OWORD *)a2;
              uint64_t v404 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
              uint64_t v405 = a1 + v404;
              uint64_t v406 = a2 + v404;
              uint64_t v407 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v407 - 8) + 32))(v405, v406, v407);
            }
            swift_storeEnumTagMultiPayload();
            goto LABEL_231;
          case 8u:
            *(void *)a1 = *(void *)a2;
            *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
            uint64_t v106 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
            uint64_t v107 = a1 + v106;
            uint64_t v108 = a2 + v106;
            uint64_t v109 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 32))(v107, v108, v109);
            goto LABEL_236;
          case 9u:
            uint64_t v110 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v110))
            {
              uint64_t v111 = sub_253462A5C(&qword_269CE04A8);
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v111 - 8) + 64));
            }
            else
            {
              uint64_t v212 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v212))
              {
                uint64_t v213 = sub_253462A5C(&qword_269CE04A0);
                memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v213 - 8) + 64));
              }
              else
              {
                uint64_t v268 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 16, v268))
                {
                  memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v212 - 8) + 64));
                }
                else
                {
                  long long v343 = *(_OWORD *)(a2 + 16);
                  *(_OWORD *)a1 = *(_OWORD *)a2;
                  *(_OWORD *)(a1 + 16) = v343;
                  *(void *)(a1 + 32) = *(void *)(a2 + 32);
                  uint64_t v344 = *(int *)(v268 + 28);
                  uint64_t v345 = a1 + v344;
                  uint64_t v346 = a3;
                  uint64_t v347 = a2 + v344;
                  uint64_t v348 = sub_253B07160();
                  uint64_t v349 = v347;
                  a3 = v346;
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v348 - 8) + 32))(v345, v349, v348);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 16, v268);
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v212);
              }
              uint64_t v350 = *(int *)(v110 + 20);
              uint64_t v351 = a1 + v350;
              uint64_t v352 = a2 + v350;
              uint64_t v353 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v353 - 8) + 32))(v351, v352, v353);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v110);
            }
            uint64_t v354 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
            uint64_t v355 = a1 + v354;
            uint64_t v356 = a2 + v354;
            uint64_t v357 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v357 - 8) + 32))(v355, v356, v357);
            goto LABEL_236;
          case 0xAu:
            *(void *)a1 = *(void *)a2;
            uint64_t v112 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
            uint64_t v113 = a1 + v112;
            uint64_t v114 = a2 + v112;
            uint64_t v115 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 32))(v113, v114, v115);
            goto LABEL_236;
          default:
            *(unsigned char *)a1 = *(unsigned char *)a2;
            *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
            uint64_t v15 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
            uint64_t v16 = v15[7];
            uint64_t v17 = (void *)(a1 + v16);
            uint64_t v18 = (const void *)(a2 + v16);
            uint64_t v19 = sub_253B08E50();
            uint64_t v737 = a3;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
            {
              uint64_t v20 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
            }
            uint64_t v151 = v15[8];
            uint64_t v152 = (_OWORD *)(a1 + v151);
            int v153 = (_OWORD *)(a2 + v151);
            uint64_t v154 = type metadata accessor for TranscriptProtoUndoContext(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v153, 1, v154))
            {
              uint64_t v155 = sub_253462A5C(&qword_269CE0450);
              memcpy(v152, v153, *(void *)(*(void *)(v155 - 8) + 64));
            }
            else
            {
              long long v222 = v153[1];
              _OWORD *v152 = *v153;
              v152[1] = v222;
              v152[2] = v153[2];
              uint64_t v223 = *(int *)(v154 + 28);
              uint64_t v224 = (char *)v152 + v223;
              uint64_t v225 = (char *)v153 + v223;
              uint64_t v226 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v226 - 8) + 32))(v224, v225, v226);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v152, 0, 1, v154);
            }
            uint64_t v227 = v15[9];
            uint64_t v228 = (_OWORD *)(a1 + v227);
            uint64_t v229 = a2;
            uint64_t v230 = (_OWORD *)(a2 + v227);
            uint64_t v231 = type metadata accessor for TranscriptProtoFollowUpAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v230, 1, v231))
            {
              uint64_t v232 = sub_253462A5C(&qword_269CE0468);
              memcpy(v228, v230, *(void *)(*(void *)(v232 - 8) + 64));
            }
            else
            {
              uint64_t v233 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v230, 1, v233))
              {
                uint64_t v234 = sub_253462A5C(&qword_269CE0460);
                memcpy(v228, v230, *(void *)(*(void *)(v234 - 8) + 64));
              }
              else
              {
                uint64_t v727 = a1;
                uint64_t v315 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v230, 1, v315))
                {
                  uint64_t v316 = sub_253462A5C(&qword_269CE0458);
                  memcpy(v228, v230, *(void *)(*(void *)(v316 - 8) + 64));
                }
                else
                {
                  long long v378 = v230[1];
                  *uint64_t v228 = *v230;
                  v228[1] = v378;
                  *((void *)v228 + 4) = *((void *)v230 + 4);
                  uint64_t v379 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                                + 28);
                  uint64_t v380 = (char *)v228 + v379;
                  __dstd = (char *)v230 + v379;
                  uint64_t v381 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v381 - 8) + 32))(v380, __dstd, v381);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v228, 0, 1, v315);
                }
                uint64_t v382 = *(int *)(v233 + 20);
                uint64_t v383 = (char *)v228 + v382;
                uint64_t v384 = (char *)v230 + v382;
                uint64_t v385 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v385 - 8) + 32))(v383, v384, v385);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v228, 0, 1, v233);
                a1 = v727;
              }
              uint64_t v386 = *(int *)(v231 + 20);
              uint64_t v387 = (char *)v228 + v386;
              uint64_t v388 = (char *)v230 + v386;
              uint64_t v389 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v389 - 8) + 32))(v387, v388, v389);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v228, 0, 1, v231);
            }
            a2 = v229;
            *(_OWORD *)(a1 + v15[10]) = *(_OWORD *)(v229 + v15[10]);
            uint64_t v390 = v15[11];
            uint64_t v391 = a1 + v390;
            uint64_t v392 = v229 + v390;
            uint64_t v393 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v393 - 8) + 32))(v391, v392, v393);
            swift_storeEnumTagMultiPayload();
            a3 = v737;
            goto LABEL_237;
        }
      }
      goto LABEL_18;
    }
    if (v14)
    {
      sub_2536FA73C();
LABEL_18:
      uint64_t v27 = sub_253462A5C(&qword_269CE04B0);
      memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v27 - 8) + 64));
LABEL_247:
      uint64_t v516 = *(int *)(v6 + 20);
      uint64_t v517 = a1 + v516;
      uint64_t v518 = a2 + v516;
      uint64_t v519 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v519 - 8) + 40))(v517, v518, v519);
      goto LABEL_248;
    }
    if (a1 == a2) {
      goto LABEL_247;
    }
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v742 = a3;
        *(void *)a1 = *(void *)a2;
        uint64_t v156 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v157 = *(int *)(v156 + 20);
        uint64_t v158 = (unsigned char *)(a1 + v157);
        uint64_t v159 = a2;
        uint64_t v160 = (unsigned char *)(a2 + v157);
        uint64_t v161 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v160, 1, v161))
        {
          uint64_t v162 = sub_253462A5C(&qword_269CE0480);
          memcpy(v158, v160, *(void *)(*(void *)(v162 - 8) + 64));
        }
        else
        {
          uint64_t v246 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v160, 1, v246))
          {
            uint64_t v247 = sub_253462A5C(&qword_269CE0478);
            memcpy(v158, v160, *(void *)(*(void *)(v247 - 8) + 64));
          }
          else
          {
            uint64_t v728 = a1;
            *(_OWORD *)uint64_t v158 = *(_OWORD *)v160;
            v158[16] = v160[16];
            uint64_t v358 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v359 = *(int *)(v358 + 24);
            uint64_t v717 = v358;
            __dstb = &v158[v359];
            uint64_t v360 = &v160[v359];
            uint64_t v361 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v360, 1, v361))
            {
              uint64_t v362 = sub_253462A5C(&qword_269CE0470);
              memcpy(__dstb, v360, *(void *)(*(void *)(v362 - 8) + 64));
            }
            else
            {
              unsigned char *__dstb = *v360;
              uint64_t v424 = *(int *)(v361 + 20);
              uint64_t v714 = &__dstb[v424];
              uint64_t v425 = &v360[v424];
              uint64_t v426 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v426 - 8) + 32))(v714, v425, v426);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstb, 0, 1, v361);
            }
            uint64_t v427 = *(int *)(v717 + 28);
            uint64_t v428 = &v158[v427];
            uint64_t v429 = &v160[v427];
            uint64_t v430 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v430 - 8) + 32))(v428, v429, v430);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v158, 0, 1, v246);
            a1 = v728;
          }
          uint64_t v431 = *(int *)(v161 + 20);
          uint64_t v432 = &v158[v431];
          uint64_t v433 = &v160[v431];
          uint64_t v434 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v434 - 8) + 32))(v432, v433, v434);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v158, 0, 1, v161);
        }
        a3 = v742;
        uint64_t v435 = *(int *)(v156 + 24);
        uint64_t v436 = a1 + v435;
        a2 = v159;
        uint64_t v437 = v159 + v435;
        uint64_t v438 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v438 - 8) + 32))(v436, v437, v438);
        goto LABEL_246;
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v163 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
        uint64_t v164 = a1 + v163;
        uint64_t v165 = a2 + v163;
        uint64_t v166 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v166 - 8) + 32))(v164, v165, v166);
        goto LABEL_246;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        uint64_t v167 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        uint64_t v168 = *(int *)(v167 + 24);
        uint64_t v169 = (void *)(a1 + v168);
        uint64_t v170 = (const void *)(a2 + v168);
        uint64_t v171 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v170, 1, v171)) {
          goto LABEL_83;
        }
        goto LABEL_128;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v173 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v173;
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        uint64_t v174 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        uint64_t v175 = a1 + v174;
        uint64_t v176 = a2 + v174;
        uint64_t v177 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v177 - 8) + 32))(v175, v176, v177);
        goto LABEL_246;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v167 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
        uint64_t v178 = *(int *)(v167 + 24);
        uint64_t v169 = (void *)(a1 + v178);
        uint64_t v170 = (const void *)(a2 + v178);
        uint64_t v171 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v170, 1, v171))
        {
LABEL_83:
          uint64_t v172 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v169, v170, *(void *)(*(void *)(v172 - 8) + 64));
        }
        else
        {
LABEL_128:
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v171 - 8) + 32))(v169, v170, v171);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v169, 0, 1, v171);
        }
        uint64_t v248 = *(int *)(v167 + 28);
        uint64_t v249 = a1 + v248;
        uint64_t v250 = a2 + v248;
        uint64_t v251 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v251 - 8) + 32))(v249, v250, v251);
        goto LABEL_246;
      case 6u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v179 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v180 = *(int *)(v179 + 20);
        uint64_t v181 = (void *)(a1 + v180);
        uint64_t v182 = (const void *)(a2 + v180);
        uint64_t v183 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v182, 1, v183))
        {
          uint64_t v184 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v181, v182, *(void *)(*(void *)(v184 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v183 - 8) + 32))(v181, v182, v183);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v181, 0, 1, v183);
        }
        uint64_t v252 = *(int *)(v179 + 24);
        uint64_t v253 = a1 + v252;
        uint64_t v254 = a2 + v252;
        uint64_t v255 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v255 - 8) + 32))(v253, v254, v255);
        goto LABEL_246;
      case 7u:
        uint64_t v185 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v185))
        {
          uint64_t v186 = sub_253462A5C(&qword_269CE0498);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v186 - 8) + 64));
          goto LABEL_245;
        }
        int v256 = swift_getEnumCaseMultiPayload();
        if (v256 != 2)
        {
          if (v256 == 1)
          {
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v398 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v399 = a1 + v398;
            uint64_t v400 = a2 + v398;
            uint64_t v401 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v401 - 8) + 32))(v399, v400, v401);
          }
          else
          {
            if (v256)
            {
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v185 - 8) + 64));
              goto LABEL_244;
            }
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v257 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v258 = a1 + v257;
            uint64_t v259 = a2 + v257;
            uint64_t v260 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v260 - 8) + 32))(v258, v259, v260);
          }
LABEL_243:
          swift_storeEnumTagMultiPayload();
LABEL_244:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v185);
LABEL_245:
          uint64_t v512 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
          uint64_t v513 = a1 + v512;
          uint64_t v514 = a2 + v512;
          uint64_t v515 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v515 - 8) + 32))(v513, v514, v515);
LABEL_246:
          swift_storeEnumTagMultiPayload();
          goto LABEL_247;
        }
        uint64_t v396 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v396))
        {
          uint64_t v397 = sub_253462A5C(&qword_269CE0490);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v397 - 8) + 64));
LABEL_242:
          uint64_t v508 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v509 = a1 + v508;
          uint64_t v510 = a2 + v508;
          uint64_t v511 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v511 - 8) + 32))(v509, v510, v511);
          goto LABEL_243;
        }
        uint64_t v455 = a2;
        int v456 = swift_getEnumCaseMultiPayload();
        if (v456 == 1)
        {
          uint64_t v484 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v484))
          {
            uint64_t v485 = sub_253462A5C(&qword_269CE0488);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v485 - 8) + 64));
          }
          else
          {
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v501 = *(int *)(v484 + 20);
            uint64_t v731 = a1 + v501;
            uint64_t v502 = a2 + v501;
            uint64_t v503 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v503 - 8) + 32))(v731, v502, v503);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v484);
          }
          uint64_t v504 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v505 = a1 + v504;
          uint64_t v506 = v455 + v504;
          uint64_t v507 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v507 - 8) + 32))(v505, v506, v507);
        }
        else
        {
          if (v456)
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v396 - 8) + 64));
LABEL_241:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v396);
            a2 = v455;
            goto LABEL_242;
          }
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v457 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v458 = a1 + v457;
          uint64_t v459 = v455 + v457;
          uint64_t v460 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v460 - 8) + 32))(v458, v459, v460);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_241;
      case 8u:
        *(void *)a1 = *(void *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        uint64_t v187 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        uint64_t v188 = a1 + v187;
        uint64_t v189 = a2 + v187;
        uint64_t v190 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v190 - 8) + 32))(v188, v189, v190);
        goto LABEL_246;
      case 9u:
        uint64_t v191 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v191))
        {
          uint64_t v192 = sub_253462A5C(&qword_269CE04A8);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v192 - 8) + 64));
        }
        else
        {
          uint64_t v261 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v261))
          {
            uint64_t v262 = sub_253462A5C(&qword_269CE04A0);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v262 - 8) + 64));
          }
          else
          {
            uint64_t v341 = a3;
            uint64_t v342 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 16, v342))
            {
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v261 - 8) + 64));
            }
            else
            {
              long long v411 = *(_OWORD *)(a2 + 16);
              *(_OWORD *)a1 = *(_OWORD *)a2;
              *(_OWORD *)(a1 + 16) = v411;
              *(void *)(a1 + 32) = *(void *)(a2 + 32);
              uint64_t v412 = *(int *)(v342 + 28);
              uint64_t v413 = a1 + v412;
              uint64_t v414 = a2 + v412;
              uint64_t v415 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v415 - 8) + 32))(v413, v414, v415);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 16, v342);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v261);
            a3 = v341;
          }
          uint64_t v416 = *(int *)(v191 + 20);
          uint64_t v417 = a1 + v416;
          uint64_t v418 = a2 + v416;
          uint64_t v419 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v419 - 8) + 32))(v417, v418, v419);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v191);
        }
        uint64_t v420 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
        uint64_t v421 = a1 + v420;
        uint64_t v422 = a2 + v420;
        uint64_t v423 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v423 - 8) + 32))(v421, v422, v423);
        goto LABEL_246;
      case 0xAu:
        *(void *)a1 = *(void *)a2;
        uint64_t v193 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
        uint64_t v194 = a1 + v193;
        uint64_t v195 = a2 + v193;
        uint64_t v196 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v196 - 8) + 32))(v194, v195, v196);
        goto LABEL_246;
      default:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
        uint64_t v28 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v29 = v28[7];
        uint64_t v30 = (void *)(a1 + v29);
        uint64_t v31 = (const void *)(a2 + v29);
        uint64_t v32 = sub_253B08E50();
        uint64_t v739 = a3;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v31, 1, v32))
        {
          uint64_t v33 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v30, 0, 1, v32);
        }
        uint64_t v241 = v28[8];
        uint64_t v242 = (_OWORD *)(a1 + v241);
        uint64_t v243 = (_OWORD *)(a2 + v241);
        uint64_t v244 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v243, 1, v244))
        {
          uint64_t v245 = sub_253462A5C(&qword_269CE0450);
          memcpy(v242, v243, *(void *)(*(void *)(v245 - 8) + 64));
        }
        else
        {
          long long v317 = v243[1];
          *uint64_t v242 = *v243;
          v242[1] = v317;
          v242[2] = v243[2];
          uint64_t v318 = *(int *)(v244 + 28);
          uint64_t v319 = (char *)v242 + v318;
          uint64_t v320 = (char *)v243 + v318;
          uint64_t v321 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v321 - 8) + 32))(v319, v320, v321);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v242, 0, 1, v244);
        }
        uint64_t v322 = v28[9];
        long long v323 = (_OWORD *)(a1 + v322);
        uint64_t v324 = a2;
        int v325 = (_OWORD *)(a2 + v322);
        uint64_t v326 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v325, 1, v326))
        {
          uint64_t v327 = sub_253462A5C(&qword_269CE0468);
          memcpy(v323, v325, *(void *)(*(void *)(v327 - 8) + 64));
        }
        else
        {
          uint64_t v328 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v325, 1, v328))
          {
            uint64_t v329 = sub_253462A5C(&qword_269CE0460);
            memcpy(v323, v325, *(void *)(*(void *)(v329 - 8) + 64));
          }
          else
          {
            uint64_t v729 = a1;
            uint64_t v394 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v325, 1, v394))
            {
              uint64_t v395 = sub_253462A5C(&qword_269CE0458);
              memcpy(v323, v325, *(void *)(*(void *)(v395 - 8) + 64));
            }
            else
            {
              long long v439 = v325[1];
              _OWORD *v323 = *v325;
              v323[1] = v439;
              *((void *)v323 + 4) = *((void *)v325 + 4);
              uint64_t v440 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              uint64_t v441 = (char *)v323 + v440;
              __dste = (char *)v325 + v440;
              uint64_t v442 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v442 - 8) + 32))(v441, __dste, v442);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v323, 0, 1, v394);
            }
            uint64_t v443 = *(int *)(v328 + 20);
            uint64_t v444 = (char *)v323 + v443;
            uint64_t v445 = (char *)v325 + v443;
            uint64_t v446 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v446 - 8) + 32))(v444, v445, v446);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v323, 0, 1, v328);
            a1 = v729;
          }
          uint64_t v447 = *(int *)(v326 + 20);
          unint64_t v448 = (char *)v323 + v447;
          uint64_t v449 = (char *)v325 + v447;
          uint64_t v450 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v450 - 8) + 32))(v448, v449, v450);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v323, 0, 1, v326);
        }
        a2 = v324;
        *(_OWORD *)(a1 + v28[10]) = *(_OWORD *)(v324 + v28[10]);
        uint64_t v451 = v28[11];
        uint64_t v452 = a1 + v451;
        uint64_t v453 = v324 + v451;
        uint64_t v454 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v454 - 8) + 32))(v452, v453, v454);
        swift_storeEnumTagMultiPayload();
        a3 = v739;
        goto LABEL_247;
    }
  }
  if (v8)
  {
LABEL_7:
    uint64_t v11 = sub_253462A5C(&qword_269CE0388);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_248;
  }
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE04B0);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v740 = a3;
        *(void *)a1 = *(void *)a2;
        uint64_t v34 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v35 = *(int *)(v34 + 20);
        uint64_t v36 = (unsigned char *)(a1 + v35);
        uint64_t v37 = a2;
        uint64_t v38 = (unsigned char *)(a2 + v35);
        uint64_t v39 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, v39))
        {
          uint64_t v40 = sub_253462A5C(&qword_269CE0480);
          memcpy(v36, v38, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          uint64_t v121 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, v121))
          {
            uint64_t v122 = sub_253462A5C(&qword_269CE0478);
            memcpy(v36, v38, *(void *)(*(void *)(v122 - 8) + 64));
          }
          else
          {
            uint64_t v724 = a1;
            *(_OWORD *)uint64_t v36 = *(_OWORD *)v38;
            v36[16] = v38[16];
            uint64_t v214 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v215 = *(int *)(v214 + 24);
            uint64_t v715 = v214;
            __dst = &v36[v215];
            uint64_t v216 = &v38[v215];
            uint64_t v217 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v216, 1, v217))
            {
              uint64_t v218 = sub_253462A5C(&qword_269CE0470);
              memcpy(__dst, v216, *(void *)(*(void *)(v218 - 8) + 64));
            }
            else
            {
              unsigned char *__dst = *v216;
              uint64_t v269 = *(int *)(v217 + 20);
              uint64_t v712 = &__dst[v269];
              uint64_t v270 = &v216[v269];
              uint64_t v271 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v271 - 8) + 32))(v712, v270, v271);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v217);
            }
            uint64_t v272 = *(int *)(v715 + 28);
            int v273 = &v36[v272];
            uint64_t v274 = &v38[v272];
            uint64_t v275 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v275 - 8) + 32))(v273, v274, v275);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v36, 0, 1, v121);
            a1 = v724;
          }
          uint64_t v276 = *(int *)(v39 + 20);
          uint64_t v277 = &v36[v276];
          uint64_t v278 = &v38[v276];
          uint64_t v279 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v279 - 8) + 32))(v277, v278, v279);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v36, 0, 1, v39);
        }
        a3 = v740;
        uint64_t v280 = *(int *)(v34 + 24);
        uint64_t v281 = a1 + v280;
        a2 = v37;
        uint64_t v282 = v37 + v280;
        uint64_t v283 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v283 - 8) + 32))(v281, v282, v283);
        goto LABEL_222;
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
        uint64_t v42 = a1 + v41;
        uint64_t v43 = a2 + v41;
        uint64_t v44 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
        goto LABEL_222;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        uint64_t v45 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        uint64_t v46 = *(int *)(v45 + 24);
        uint64_t v47 = (void *)(a1 + v46);
        uint64_t v48 = (const void *)(a2 + v46);
        uint64_t v49 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v48, 1, v49)) {
          goto LABEL_27;
        }
        goto LABEL_60;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v51 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v51;
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        uint64_t v52 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        uint64_t v53 = a1 + v52;
        uint64_t v54 = a2 + v52;
        uint64_t v55 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
        goto LABEL_222;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v45 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
        uint64_t v56 = *(int *)(v45 + 24);
        uint64_t v47 = (void *)(a1 + v56);
        uint64_t v48 = (const void *)(a2 + v56);
        uint64_t v49 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v48, 1, v49))
        {
LABEL_27:
          uint64_t v50 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
LABEL_60:
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v47, 0, 1, v49);
        }
        uint64_t v123 = *(int *)(v45 + 28);
        uint64_t v124 = a1 + v123;
        uint64_t v125 = a2 + v123;
        uint64_t v126 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v126 - 8) + 32))(v124, v125, v126);
        goto LABEL_222;
      case 6u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v57 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v58 = *(int *)(v57 + 20);
        uint64_t v59 = (void *)(a1 + v58);
        uint64_t v60 = (const void *)(a2 + v58);
        uint64_t v61 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v60, 1, v61))
        {
          uint64_t v62 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v59, v60, *(void *)(*(void *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v59, 0, 1, v61);
        }
        uint64_t v127 = *(int *)(v57 + 24);
        uint64_t v128 = a1 + v127;
        uint64_t v129 = a2 + v127;
        uint64_t v130 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v130 - 8) + 32))(v128, v129, v130);
        goto LABEL_222;
      case 7u:
        uint64_t v63 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v63))
        {
          uint64_t v64 = sub_253462A5C(&qword_269CE0498);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v64 - 8) + 64));
          goto LABEL_221;
        }
        int v131 = swift_getEnumCaseMultiPayload();
        if (v131 == 2)
        {
          uint64_t v235 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v235))
          {
            uint64_t v236 = sub_253462A5C(&qword_269CE0490);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v236 - 8) + 64));
          }
          else
          {
            int v336 = swift_getEnumCaseMultiPayload();
            if (v336 == 1)
            {
              uint64_t v408 = a3;
              uint64_t v409 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v409))
              {
                uint64_t v410 = sub_253462A5C(&qword_269CE0488);
                memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v410 - 8) + 64));
              }
              else
              {
                *(unsigned char *)a1 = *(unsigned char *)a2;
                uint64_t v464 = *(int *)(v409 + 20);
                uint64_t v465 = a1 + v464;
                uint64_t v466 = a2 + v464;
                uint64_t v467 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v467 - 8) + 32))(v465, v466, v467);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v409);
              }
              uint64_t v468 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
              uint64_t v469 = a1 + v468;
              uint64_t v470 = a2 + v468;
              uint64_t v471 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v471 - 8) + 32))(v469, v470, v471);
              swift_storeEnumTagMultiPayload();
              a3 = v408;
            }
            else if (v336)
            {
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v235 - 8) + 64));
            }
            else
            {
              *(_OWORD *)a1 = *(_OWORD *)a2;
              uint64_t v337 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
              uint64_t v338 = a1 + v337;
              uint64_t v339 = a2 + v337;
              uint64_t v340 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v340 - 8) + 32))(v338, v339, v340);
              swift_storeEnumTagMultiPayload();
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v235);
          }
          uint64_t v472 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v473 = a1 + v472;
          uint64_t v474 = a2 + v472;
          uint64_t v475 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v475 - 8) + 32))(v473, v474, v475);
        }
        else if (v131 == 1)
        {
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v237 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
          uint64_t v238 = a1 + v237;
          uint64_t v239 = a2 + v237;
          uint64_t v240 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v240 - 8) + 32))(v238, v239, v240);
        }
        else
        {
          if (v131)
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v63 - 8) + 64));
            goto LABEL_220;
          }
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v132 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
          uint64_t v133 = a1 + v132;
          uint64_t v134 = a2 + v132;
          uint64_t v135 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v135 - 8) + 32))(v133, v134, v135);
        }
        swift_storeEnumTagMultiPayload();
LABEL_220:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v63);
LABEL_221:
        uint64_t v476 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
        uint64_t v477 = a1 + v476;
        uint64_t v478 = a2 + v476;
        uint64_t v479 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v479 - 8) + 32))(v477, v478, v479);
LABEL_222:
        swift_storeEnumTagMultiPayload();
LABEL_223:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v9);
        break;
      case 8u:
        *(void *)a1 = *(void *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        uint64_t v65 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        uint64_t v66 = a1 + v65;
        uint64_t v67 = a2 + v65;
        uint64_t v68 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 32))(v66, v67, v68);
        goto LABEL_222;
      case 9u:
        uint64_t v69 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v69))
        {
          uint64_t v70 = sub_253462A5C(&qword_269CE04A8);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v70 - 8) + 64));
        }
        else
        {
          uint64_t v136 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v136))
          {
            uint64_t v137 = sub_253462A5C(&qword_269CE04A0);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v137 - 8) + 64));
          }
          else
          {
            uint64_t v219 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 16, v219))
            {
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v136 - 8) + 64));
            }
            else
            {
              long long v284 = *(_OWORD *)(a2 + 16);
              *(_OWORD *)a1 = *(_OWORD *)a2;
              *(_OWORD *)(a1 + 16) = v284;
              *(void *)(a1 + 32) = *(void *)(a2 + 32);
              uint64_t v285 = *(int *)(v219 + 28);
              uint64_t v286 = a1 + v285;
              uint64_t v287 = a3;
              uint64_t v288 = a2 + v285;
              uint64_t v289 = sub_253B07160();
              uint64_t v290 = v288;
              a3 = v287;
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v289 - 8) + 32))(v286, v290, v289);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 16, v219);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v136);
          }
          uint64_t v291 = *(int *)(v69 + 20);
          uint64_t v292 = a1 + v291;
          uint64_t v293 = a2 + v291;
          uint64_t v294 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v294 - 8) + 32))(v292, v293, v294);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v69);
        }
        uint64_t v295 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
        uint64_t v296 = a1 + v295;
        uint64_t v297 = a2 + v295;
        uint64_t v298 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v298 - 8) + 32))(v296, v297, v298);
        goto LABEL_222;
      case 0xAu:
        *(void *)a1 = *(void *)a2;
        uint64_t v71 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
        uint64_t v72 = a1 + v71;
        uint64_t v73 = a2 + v71;
        uint64_t v74 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
        goto LABEL_222;
      default:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
        uint64_t v21 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v22 = v21[7];
        uint64_t v23 = (void *)(a1 + v22);
        uint64_t v24 = (const void *)(a2 + v22);
        uint64_t v25 = sub_253B08E50();
        uint64_t v738 = a3;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
        {
          uint64_t v26 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v25);
        }
        uint64_t v116 = v21[8];
        uint64_t v117 = (_OWORD *)(a1 + v116);
        uint64_t v118 = (_OWORD *)(a2 + v116);
        uint64_t v119 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v118, 1, v119))
        {
          uint64_t v120 = sub_253462A5C(&qword_269CE0450);
          memcpy(v117, v118, *(void *)(*(void *)(v120 - 8) + 64));
        }
        else
        {
          long long v138 = v118[1];
          _OWORD *v117 = *v118;
          v117[1] = v138;
          v117[2] = v118[2];
          uint64_t v139 = *(int *)(v119 + 28);
          uint64_t v140 = (char *)v117 + v139;
          uint64_t v141 = (char *)v118 + v139;
          uint64_t v142 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v140, v141, v142);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v117, 0, 1, v119);
        }
        uint64_t v143 = v21[9];
        uint64_t v144 = (_OWORD *)(a1 + v143);
        uint64_t v145 = a2;
        uint64_t v146 = (_OWORD *)(a2 + v143);
        uint64_t v147 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v146, 1, v147))
        {
          uint64_t v148 = sub_253462A5C(&qword_269CE0468);
          memcpy(v144, v146, *(void *)(*(void *)(v148 - 8) + 64));
        }
        else
        {
          uint64_t v149 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v146, 1, v149))
          {
            uint64_t v150 = sub_253462A5C(&qword_269CE0460);
            memcpy(v144, v146, *(void *)(*(void *)(v150 - 8) + 64));
          }
          else
          {
            uint64_t v725 = a1;
            uint64_t v220 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v146, 1, v220))
            {
              uint64_t v221 = sub_253462A5C(&qword_269CE0458);
              memcpy(v144, v146, *(void *)(*(void *)(v221 - 8) + 64));
            }
            else
            {
              long long v299 = v146[1];
              *uint64_t v144 = *v146;
              v144[1] = v299;
              *((void *)v144 + 4) = *((void *)v146 + 4);
              uint64_t v300 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              uint64_t v301 = (char *)v144 + v300;
              __dstc = (char *)v146 + v300;
              uint64_t v302 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v302 - 8) + 32))(v301, __dstc, v302);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v144, 0, 1, v220);
            }
            uint64_t v303 = *(int *)(v149 + 20);
            uint64_t v304 = (char *)v144 + v303;
            uint64_t v305 = (char *)v146 + v303;
            uint64_t v306 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v306 - 8) + 32))(v304, v305, v306);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v144, 0, 1, v149);
            a1 = v725;
          }
          uint64_t v307 = *(int *)(v147 + 20);
          uint64_t v308 = (char *)v144 + v307;
          uint64_t v309 = (char *)v146 + v307;
          uint64_t v310 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v310 - 8) + 32))(v308, v309, v310);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v144, 0, 1, v147);
        }
        a2 = v145;
        *(_OWORD *)(a1 + v21[10]) = *(_OWORD *)(v145 + v21[10]);
        uint64_t v311 = v21[11];
        uint64_t v312 = a1 + v311;
        uint64_t v313 = v145 + v311;
        uint64_t v314 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v314 - 8) + 32))(v312, v313, v314);
        swift_storeEnumTagMultiPayload();
        a3 = v738;
        goto LABEL_223;
    }
  }
  uint64_t v480 = *(int *)(v6 + 20);
  uint64_t v481 = a1 + v480;
  uint64_t v482 = a2 + v480;
  uint64_t v483 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v483 - 8) + 32))(v481, v482, v483);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v6);
LABEL_248:
  uint64_t v520 = *(int *)(a3 + 20);
  uint64_t v521 = (void *)(a1 + v520);
  v522 = (void *)(a2 + v520);
  v523 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  int v524 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v521, 1, (uint64_t)v523);
  int v525 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v522, 1, (uint64_t)v523);
  if (!v524)
  {
    if (v525)
    {
      sub_2536FA73C();
      goto LABEL_254;
    }
    uint64_t v743 = a3;
    *uint64_t v521 = *v522;
    swift_bridgeObjectRelease();
    uint64_t v532 = v523[5];
    uint64_t v533 = (char *)v521 + v532;
    uint64_t v534 = (char *)v522 + v532;
    uint64_t v535 = type metadata accessor for TranscriptProtoResponseDialog(0);
    int v536 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v533, 1, v535);
    int v537 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v534, 1, v535);
    uint64_t v736 = a2;
    if (v536)
    {
      if (!v537)
      {
        long long v538 = *((_OWORD *)v534 + 1);
        *(_OWORD *)uint64_t v533 = *(_OWORD *)v534;
        *((_OWORD *)v533 + 1) = v538;
        long long v539 = *((_OWORD *)v534 + 3);
        *((_OWORD *)v533 + 2) = *((_OWORD *)v534 + 2);
        *((_OWORD *)v533 + 3) = v539;
        uint64_t v540 = *(int *)(v535 + 32);
        uint64_t v541 = &v533[v540];
        uint64_t v542 = &v534[v540];
        uint64_t v543 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v543 - 8) + 32))(v541, v542, v543);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v533, 0, 1, v535);
        goto LABEL_266;
      }
    }
    else
    {
      if (!v537)
      {
        uint64_t v592 = *((void *)v534 + 1);
        *(void *)uint64_t v533 = *(void *)v534;
        *((void *)v533 + 1) = v592;
        swift_bridgeObjectRelease();
        uint64_t v593 = *((void *)v534 + 3);
        *((void *)v533 + 2) = *((void *)v534 + 2);
        *((void *)v533 + 3) = v593;
        swift_bridgeObjectRelease();
        uint64_t v594 = *((void *)v534 + 5);
        *((void *)v533 + 4) = *((void *)v534 + 4);
        *((void *)v533 + 5) = v594;
        swift_bridgeObjectRelease();
        uint64_t v595 = *((void *)v534 + 7);
        *((void *)v533 + 6) = *((void *)v534 + 6);
        *((void *)v533 + 7) = v595;
        swift_bridgeObjectRelease();
        uint64_t v596 = *(int *)(v535 + 32);
        uint64_t v597 = &v533[v596];
        uint64_t v598 = &v534[v596];
        uint64_t v599 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v599 - 8) + 40))(v597, v598, v599);
LABEL_266:
        uint64_t v562 = v523[6];
        uint64_t v563 = (void *)((char *)v521 + v562);
        uint64_t v564 = (void *)((char *)v522 + v562);
        uint64_t v565 = type metadata accessor for TranscriptProtoResponseVisual(0);
        int v566 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v563, 1, v565);
        int v567 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v564, 1, v565);
        if (v566)
        {
          if (!v567)
          {
            uint64_t v568 = a1;
            *(_OWORD *)uint64_t v563 = *(_OWORD *)v564;
            uint64_t v569 = *(int *)(v565 + 24);
            uint64_t v570 = (char *)v563 + v569;
            uint64_t v571 = (char *)v564 + v569;
            uint64_t v572 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v571, 1, v572))
            {
              uint64_t v573 = sub_253462A5C(&qword_269CE04C0);
              memcpy(v570, v571, *(void *)(*(void *)(v573 - 8) + 64));
            }
            else
            {
              *uint64_t v570 = *v571;
              uint64_t v610 = *(int *)(v572 + 20);
              int v734 = &v570[v610];
              uint64_t v611 = &v571[v610];
              uint64_t v612 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v612 - 8) + 32))(v734, v611, v612);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v570, 0, 1, v572);
            }
            a1 = v568;
            uint64_t v613 = *(int *)(v565 + 28);
            uint64_t v614 = (char *)v563 + v613;
            int v615 = (char *)v564 + v613;
            uint64_t v616 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v616 - 8) + 32))(v614, v615, v616);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v563, 0, 1, v565);
LABEL_298:
            uint64_t v634 = v523[7];
            uint64_t v635 = (void *)((char *)v521 + v634);
            uint64_t v636 = (void *)((char *)v522 + v634);
            uint64_t v638 = *v636;
            uint64_t v637 = v636[1];
            *uint64_t v635 = v638;
            v635[1] = v637;
            swift_bridgeObjectRelease();
            uint64_t v639 = v523[8];
            int v640 = (void *)((char *)v521 + v639);
            int v641 = (void *)((char *)v522 + v639);
            uint64_t v643 = *v641;
            uint64_t v642 = v641[1];
            *int v640 = v643;
            v640[1] = v642;
            swift_bridgeObjectRelease();
            *((unsigned char *)v521 + v523[9]) = *((unsigned char *)v522 + v523[9]);
            *((unsigned char *)v521 + v523[10]) = *((unsigned char *)v522 + v523[10]);
            uint64_t v644 = v523[11];
            uint64_t v645 = (_OWORD *)((char *)v521 + v644);
            uint64_t v646 = (_OWORD *)((char *)v522 + v644);
            uint64_t v647 = type metadata accessor for TranscriptProtoUIType(0);
            int v648 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v645, 1, v647);
            int v649 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v646, 1, v647);
            if (v648)
            {
              if (!v649)
              {
                uint64_t v650 = a1;
                uint64_t v651 = type metadata accessor for TranscriptProtoUitype(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v646, 1, v651))
                {
                  uint64_t v652 = sub_253462A5C(&qword_269CDCC08);
                  memcpy(v645, v646, *(void *)(*(void *)(v652 - 8) + 64));
                }
                else
                {
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 1u:
                      *uint64_t v645 = *v646;
                      uint64_t v663 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
                      goto LABEL_317;
                    case 2u:
                      long long v664 = v646[1];
                      *uint64_t v645 = *v646;
                      v645[1] = v664;
                      uint64_t v661 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
                      break;
                    case 3u:
                      *uint64_t v645 = *v646;
                      uint64_t v663 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_317:
                      uint64_t v661 = *(int *)(v663 + 20);
                      break;
                    default:
                      long long v660 = v646[1];
                      *uint64_t v645 = *v646;
                      v645[1] = v660;
                      v645[2] = v646[2];
                      uint64_t v661 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
                      break;
                  }
                  uint64_t v665 = (char *)v645 + v661;
                  uint64_t v666 = (char *)v646 + v661;
                  uint64_t v667 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v667 - 8) + 32))(v665, v666, v667);
                  swift_storeEnumTagMultiPayload();
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v645, 0, 1, v651);
                }
                a1 = v650;
                uint64_t v668 = *(int *)(v647 + 20);
                uint64_t v669 = (char *)v645 + v668;
                uint64_t v670 = (char *)v646 + v668;
                uint64_t v671 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 32))(v669, v670, v671);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v645, 0, 1, v647);
                goto LABEL_334;
              }
              goto LABEL_304;
            }
            if (v649)
            {
              sub_2536FA73C();
LABEL_304:
              uint64_t v653 = sub_253462A5C(&qword_269CE04D0);
              memcpy(v645, v646, *(void *)(*(void *)(v653 - 8) + 64));
LABEL_334:
              uint64_t v703 = v523[12];
              uint64_t v704 = (char *)v521 + v703;
              unint64_t v705 = (char *)v522 + v703;
              uint64_t v706 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v706 - 8) + 40))(v704, v705, v706);
LABEL_335:
              a2 = v736;
              a3 = v743;
              goto LABEL_336;
            }
            uint64_t v654 = a1;
            uint64_t v655 = type metadata accessor for TranscriptProtoUitype(0);
            int v656 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v645, 1, v655);
            int v657 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v646, 1, v655);
            if (v656)
            {
              if (!v657)
              {
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 1u:
                    *uint64_t v645 = *v646;
                    uint64_t v681 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
                    goto LABEL_327;
                  case 2u:
                    long long v682 = v646[1];
                    *uint64_t v645 = *v646;
                    v645[1] = v682;
                    uint64_t v659 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
                    break;
                  case 3u:
                    *uint64_t v645 = *v646;
                    uint64_t v681 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_327:
                    uint64_t v659 = *(int *)(v681 + 20);
                    break;
                  default:
                    long long v658 = v646[1];
                    *uint64_t v645 = *v646;
                    v645[1] = v658;
                    v645[2] = v646[2];
                    uint64_t v659 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
                    break;
                }
                uint64_t v683 = (char *)v645 + v659;
                int v684 = (char *)v646 + v659;
                uint64_t v685 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v685 - 8) + 32))(v683, v684, v685);
                swift_storeEnumTagMultiPayload();
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v645, 0, 1, v655);
                goto LABEL_333;
              }
            }
            else
            {
              if (!v657)
              {
                if (v654 != v736)
                {
                  sub_2536FA73C();
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 1u:
                      *uint64_t v645 = *v646;
                      uint64_t v686 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
                      v687 = (char *)v645 + v686;
                      v688 = (char *)v646 + v686;
                      uint64_t v689 = sub_253B07160();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v689 - 8) + 32))(v687, v688, v689);
                      break;
                    case 2u:
                      long long v690 = v646[1];
                      *uint64_t v645 = *v646;
                      v645[1] = v690;
                      uint64_t v691 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
                      v692 = (char *)v645 + v691;
                      uint64_t v693 = (char *)v646 + v691;
                      uint64_t v694 = sub_253B07160();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v694 - 8) + 32))(v692, v693, v694);
                      break;
                    case 3u:
                      *uint64_t v645 = *v646;
                      uint64_t v695 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
                      uint64_t v696 = (char *)v645 + v695;
                      uint64_t v697 = (char *)v646 + v695;
                      uint64_t v698 = sub_253B07160();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v698 - 8) + 32))(v696, v697, v698);
                      break;
                    default:
                      long long v676 = v646[1];
                      *uint64_t v645 = *v646;
                      v645[1] = v676;
                      v645[2] = v646[2];
                      uint64_t v677 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
                      uint64_t v678 = (char *)v645 + v677;
                      uint64_t v679 = (char *)v646 + v677;
                      uint64_t v680 = sub_253B07160();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v680 - 8) + 32))(v678, v679, v680);
                      break;
                  }
                  swift_storeEnumTagMultiPayload();
                }
                goto LABEL_333;
              }
              sub_2536FA73C();
            }
            uint64_t v662 = sub_253462A5C(&qword_269CDCC08);
            memcpy(v645, v646, *(void *)(*(void *)(v662 - 8) + 64));
LABEL_333:
            uint64_t v699 = *(int *)(v647 + 20);
            unint64_t v700 = (char *)v645 + v699;
            uint64_t v701 = (char *)v646 + v699;
            uint64_t v702 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v702 - 8) + 40))(v700, v701, v702);
            a1 = v654;
            goto LABEL_334;
          }
LABEL_272:
          uint64_t v574 = sub_253462A5C(&qword_269CE04C8);
          memcpy(v563, v564, *(void *)(*(void *)(v574 - 8) + 64));
          goto LABEL_298;
        }
        if (v567)
        {
          sub_2536FA73C();
          goto LABEL_272;
        }
        uint64_t v733 = a1;
        *uint64_t v563 = *v564;
        swift_bridgeObjectRelease();
        v563[1] = v564[1];
        swift_bridgeObjectRelease();
        uint64_t v600 = *(int *)(v565 + 24);
        uint64_t v601 = (uint64_t)v563 + v600;
        uint64_t v602 = (char *)v564 + v600;
        uint64_t v603 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
        int v604 = (unsigned char *)v601;
        LODWORD(v601) = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v601, 1, v603);
        int v605 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v602, 1, v603);
        if (v601)
        {
          if (!v605)
          {
            unsigned char *v604 = *v602;
            uint64_t v606 = *(int *)(v603 + 20);
            v607 = &v604[v606];
            uint64_t v608 = &v602[v606];
            uint64_t v609 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v609 - 8) + 32))(v607, v608, v609);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v604, 0, 1, v603);
LABEL_297:
            uint64_t v630 = *(int *)(v565 + 28);
            uint64_t v631 = (char *)v563 + v630;
            v632 = (char *)v564 + v630;
            uint64_t v633 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v633 - 8) + 40))(v631, v632, v633);
            a1 = v733;
            goto LABEL_298;
          }
        }
        else
        {
          if (!v605)
          {
            unsigned char *v604 = *v602;
            uint64_t v672 = *(int *)(v603 + 20);
            uint64_t v673 = &v604[v672];
            uint64_t v674 = &v602[v672];
            uint64_t v675 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v675 - 8) + 40))(v673, v674, v675);
            goto LABEL_297;
          }
          sub_2536FA73C();
        }
        uint64_t v629 = sub_253462A5C(&qword_269CE04C0);
        memcpy(v604, v602, *(void *)(*(void *)(v629 - 8) + 64));
        goto LABEL_297;
      }
      sub_2536FA73C();
    }
    uint64_t v561 = sub_253462A5C(&qword_269CE04B8);
    memcpy(v533, v534, *(void *)(*(void *)(v561 - 8) + 64));
    goto LABEL_266;
  }
  if (!v525)
  {
    uint64_t v743 = a3;
    *uint64_t v521 = *v522;
    uint64_t v526 = v523[5];
    v527 = (_OWORD *)((char *)v521 + v526);
    uint64_t v528 = (_OWORD *)((char *)v522 + v526);
    uint64_t v529 = type metadata accessor for TranscriptProtoResponseDialog(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v528, 1, v529))
    {
      uint64_t v530 = sub_253462A5C(&qword_269CE04B8);
      memcpy(v527, v528, *(void *)(*(void *)(v530 - 8) + 64));
    }
    else
    {
      long long v544 = v528[1];
      _OWORD *v527 = *v528;
      v527[1] = v544;
      long long v545 = v528[3];
      v527[2] = v528[2];
      v527[3] = v545;
      uint64_t v546 = *(int *)(v529 + 32);
      uint64_t v547 = (char *)v527 + v546;
      uint64_t v548 = (char *)v528 + v546;
      uint64_t v549 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v549 - 8) + 32))(v547, v548, v549);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v527, 0, 1, v529);
    }
    uint64_t v550 = v523[6];
    uint64_t v551 = (_OWORD *)((char *)v521 + v550);
    uint64_t v552 = (_OWORD *)((char *)v522 + v550);
    uint64_t v553 = type metadata accessor for TranscriptProtoResponseVisual(0);
    uint64_t v736 = a2;
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v552, 1, v553))
    {
      uint64_t v554 = sub_253462A5C(&qword_269CE04C8);
      memcpy(v551, v552, *(void *)(*(void *)(v554 - 8) + 64));
    }
    else
    {
      uint64_t v555 = a1;
      *uint64_t v551 = *v552;
      uint64_t v556 = *(int *)(v553 + 24);
      uint64_t v557 = (char *)v551 + v556;
      uint64_t v558 = (char *)v552 + v556;
      uint64_t v559 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v558, 1, v559))
      {
        uint64_t v560 = sub_253462A5C(&qword_269CE04C0);
        memcpy(v557, v558, *(void *)(*(void *)(v560 - 8) + 64));
      }
      else
      {
        *uint64_t v557 = *v558;
        uint64_t v575 = *(int *)(v559 + 20);
        uint64_t v732 = &v557[v575];
        uint64_t v576 = &v558[v575];
        uint64_t v577 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v577 - 8) + 32))(v732, v576, v577);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v557, 0, 1, v559);
      }
      a1 = v555;
      uint64_t v578 = *(int *)(v553 + 28);
      uint64_t v579 = (char *)v551 + v578;
      uint64_t v580 = (char *)v552 + v578;
      uint64_t v581 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v581 - 8) + 32))(v579, v580, v581);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v551, 0, 1, v553);
    }
    *(_OWORD *)((char *)v521 + v523[7]) = *(_OWORD *)((char *)v522 + v523[7]);
    *(_OWORD *)((char *)v521 + v523[8]) = *(_OWORD *)((char *)v522 + v523[8]);
    *((unsigned char *)v521 + v523[9]) = *((unsigned char *)v522 + v523[9]);
    *((unsigned char *)v521 + v523[10]) = *((unsigned char *)v522 + v523[10]);
    uint64_t v582 = v523[11];
    uint64_t v583 = (_OWORD *)((char *)v521 + v582);
    uint64_t v584 = (_OWORD *)((char *)v522 + v582);
    uint64_t v585 = type metadata accessor for TranscriptProtoUIType(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v584, 1, v585))
    {
      uint64_t v586 = sub_253462A5C(&qword_269CE04D0);
      memcpy(v583, v584, *(void *)(*(void *)(v586 - 8) + 64));
    }
    else
    {
      uint64_t v587 = a1;
      uint64_t v588 = type metadata accessor for TranscriptProtoUitype(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v584, 1, v588))
      {
        uint64_t v589 = sub_253462A5C(&qword_269CDCC08);
        memcpy(v583, v584, *(void *)(*(void *)(v589 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            _OWORD *v583 = *v584;
            uint64_t v617 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
            goto LABEL_290;
          case 2u:
            long long v618 = v584[1];
            _OWORD *v583 = *v584;
            v583[1] = v618;
            uint64_t v591 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
            break;
          case 3u:
            _OWORD *v583 = *v584;
            uint64_t v617 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_290:
            uint64_t v591 = *(int *)(v617 + 20);
            break;
          default:
            long long v590 = v584[1];
            _OWORD *v583 = *v584;
            v583[1] = v590;
            v583[2] = v584[2];
            uint64_t v591 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
            break;
        }
        v735 = (char *)v583 + v591;
        v619 = (char *)v584 + v591;
        uint64_t v620 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v620 - 8) + 32))(v735, v619, v620);
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v583, 0, 1, v588);
      }
      a1 = v587;
      uint64_t v621 = *(int *)(v585 + 20);
      v622 = (char *)v583 + v621;
      uint64_t v623 = (char *)v584 + v621;
      uint64_t v624 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v624 - 8) + 32))(v622, v623, v624);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v583, 0, 1, v585);
    }
    uint64_t v625 = v523[12];
    uint64_t v626 = (char *)v521 + v625;
    uint64_t v627 = (char *)v522 + v625;
    uint64_t v628 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v628 - 8) + 32))(v626, v627, v628);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v521, 0, 1, (uint64_t)v523);
    goto LABEL_335;
  }
LABEL_254:
  uint64_t v531 = sub_253462A5C(&qword_269CE0378);
  memcpy(v521, v522, *(void *)(*(void *)(v531 - 8) + 64));
LABEL_336:
  uint64_t v707 = *(int *)(a3 + 24);
  uint64_t v708 = a1 + v707;
  uint64_t v709 = a2 + v707;
  uint64_t v710 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v710 - 8) + 40))(v708, v709, v710);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoStatementResultPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25382D324);
}

uint64_t sub_25382D324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2538A7E84(a1, a2, a3, &qword_269CE0388, &qword_269CE0378);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoStatementResultPayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25382D34C);
}

uint64_t sub_25382D34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2538A7F3C(a1, a2, a3, a4, &qword_269CE0388, &qword_269CE0378);
}

void sub_25382D360(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoStatementResult(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  uint64_t v6 = a3;
  uint64_t v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  uint64_t v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  uint64_t v9 = a3[6];
  uint64_t v10 = (uint64_t *)((char *)a1 + v9);
  uint64_t v11 = (uint64_t *)((char *)a2 + v9);
  uint64_t v12 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v374 = v6;
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
  {
    uint64_t v15 = type metadata accessor for TranscriptProtoStatementOutcome(0);
    __src = v11;
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v15))
    {
      uint64_t v16 = sub_253462A5C(&qword_269CE0388);
      memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
LABEL_91:
      uint64_t v180 = *(int *)(v12 + 20);
      uint64_t v181 = (void *)((char *)v10 + v180);
      uint64_t v182 = (void *)((char *)v11 + v180);
      uint64_t v183 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v182, 1, (uint64_t)v183))
      {
        uint64_t v184 = sub_253462A5C(&qword_269CE0378);
        memcpy(v181, v182, *(void *)(*(void *)(v184 - 8) + 64));
      }
      else
      {
        __dstb = v10;
        uint64_t v371 = v12;
        *uint64_t v181 = *v182;
        uint64_t v185 = v183[5];
        uint64_t v186 = (void *)((char *)v181 + v185);
        uint64_t v187 = (void *)((char *)v182 + v185);
        uint64_t v188 = type metadata accessor for TranscriptProtoResponseDialog(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v187, 1, v188))
        {
          uint64_t v189 = sub_253462A5C(&qword_269CE04B8);
          memcpy(v186, v187, *(void *)(*(void *)(v189 - 8) + 64));
        }
        else
        {
          uint64_t v190 = v187[1];
          void *v186 = *v187;
          v186[1] = v190;
          uint64_t v191 = v187[3];
          v186[2] = v187[2];
          v186[3] = v191;
          uint64_t v192 = v187[5];
          v186[4] = v187[4];
          v186[5] = v192;
          uint64_t v193 = v187[7];
          v186[6] = v187[6];
          v186[7] = v193;
          uint64_t v194 = *(int *)(v188 + 32);
          uint64_t v350 = (char *)v187 + v194;
          uint64_t v353 = (char *)v186 + v194;
          uint64_t v195 = sub_253B07160();
          uint64_t v321 = *(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v321(v353, v350, v195);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v186, 0, 1, v188);
        }
        uint64_t v196 = v183[6];
        uint64_t v197 = (char *)v181 + v196;
        uint64_t v198 = (void *)((char *)v182 + v196);
        uint64_t v199 = type metadata accessor for TranscriptProtoResponseVisual(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v198, 1, v199))
        {
          uint64_t v200 = sub_253462A5C(&qword_269CE04C8);
          memcpy(v197, v198, *(void *)(*(void *)(v200 - 8) + 64));
        }
        else
        {
          uint64_t v201 = v197;
          uint64_t v202 = v198[1];
          *uint64_t v201 = *v198;
          v201[1] = v202;
          uint64_t v203 = *(int *)(v199 + 24);
          uint64_t v354 = (uint64_t)v201;
          uint64_t v341 = v199;
          uint64_t v351 = (char *)v201 + v203;
          uint64_t v333 = (char *)v198 + v203;
          uint64_t v204 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v333, 1, v204))
          {
            uint64_t v205 = sub_253462A5C(&qword_269CE04C0);
            memcpy(v351, v333, *(void *)(*(void *)(v205 - 8) + 64));
          }
          else
          {
            *uint64_t v351 = *v333;
            uint64_t v206 = *(int *)(v204 + 20);
            uint64_t v327 = &v351[v206];
            uint64_t v207 = &v333[v206];
            uint64_t v208 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v208 - 8) + 16))(v327, v207, v208);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v351, 0, 1, v204);
          }
          uint64_t v209 = *(int *)(v341 + 28);
          uint64_t v210 = v354 + v209;
          uint64_t v211 = (char *)v198 + v209;
          uint64_t v212 = sub_253B07160();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v212 - 8) + 16))(v210, v211, v212);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v354, 0, 1, v341);
        }
        uint64_t v213 = v183[7];
        uint64_t v214 = (void *)((char *)v181 + v213);
        uint64_t v215 = (void *)((char *)v182 + v213);
        uint64_t v216 = v215[1];
        *uint64_t v214 = *v215;
        v214[1] = v216;
        uint64_t v217 = v183[8];
        uint64_t v218 = (void *)((char *)v181 + v217);
        uint64_t v219 = (void *)((char *)v182 + v217);
        uint64_t v220 = v219[1];
        *uint64_t v218 = *v219;
        v218[1] = v220;
        *((unsigned char *)v181 + v183[9]) = *((unsigned char *)v182 + v183[9]);
        *((unsigned char *)v181 + v183[10]) = *((unsigned char *)v182 + v183[10]);
        uint64_t v221 = v183[11];
        long long v222 = (void *)((char *)v181 + v221);
        uint64_t v223 = (void *)((char *)v182 + v221);
        uint64_t v224 = type metadata accessor for TranscriptProtoUIType(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v223, 1, v224))
        {
          uint64_t v225 = sub_253462A5C(&qword_269CE04D0);
          memcpy(v222, v223, *(void *)(*(void *)(v225 - 8) + 64));
          uint64_t v12 = v371;
        }
        else
        {
          uint64_t v352 = v181;
          uint64_t v226 = type metadata accessor for TranscriptProtoUitype(0);
          uint64_t v12 = v371;
          uint64_t v355 = v224;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v223, 1, v226))
          {
            uint64_t v227 = sub_253462A5C(&qword_269CDCC08);
            memcpy(v222, v223, *(void *)(*(void *)(v227 - 8) + 64));
            uint64_t v181 = v352;
          }
          else
          {
            uint64_t v342 = v223;
            uint64_t v334 = v226;
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                uint64_t v236 = v223[1];
                uint64_t v230 = v222;
                uint64_t *v222 = *v223;
                v222[1] = v236;
                uint64_t v237 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
                uint64_t v238 = (char *)v222 + v237;
                uint64_t v239 = (char *)v223 + v237;
                uint64_t v240 = sub_253B07160();
                long long v323 = *(void (**)(char *, char *, uint64_t))(*(void *)(v240 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v241 = v238;
                uint64_t v242 = v239;
                goto LABEL_110;
              case 2u:
                uint64_t v243 = *v223;
                uint64_t v244 = v223[1];
                sub_25348A9C8(*v342, v342[1]);
                uint64_t v230 = v222;
                uint64_t *v222 = v243;
                v222[1] = v244;
                uint64_t v245 = v342[3];
                v222[2] = v342[2];
                v222[3] = v245;
                uint64_t v246 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
                uint64_t v247 = (char *)v222 + v246;
                uint64_t v248 = (char *)v342 + v246;
                uint64_t v240 = sub_253B07160();
                long long v323 = *(void (**)(char *, char *, uint64_t))(*(void *)(v240 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v241 = v247;
                uint64_t v242 = v248;
LABEL_110:
                v323(v241, v242, v240);
                break;
              case 3u:
                uint64_t v249 = *v223;
                uint64_t v250 = v223[1];
                sub_25348A9C8(*v342, v342[1]);
                uint64_t v230 = v222;
                uint64_t *v222 = v249;
                v222[1] = v250;
                uint64_t v251 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
                uint64_t v252 = (char *)v222 + v251;
                uint64_t v253 = (char *)v342 + v251;
                uint64_t v254 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v254 - 8) + 16))(v252, v253, v254);
                break;
              default:
                uint64_t v228 = *v223;
                uint64_t v229 = v223[1];
                sub_25348A9C8(*v342, v342[1]);
                uint64_t v230 = v222;
                uint64_t *v222 = v228;
                v222[1] = v229;
                uint64_t v231 = v342[3];
                v230[2] = v342[2];
                v230[3] = v231;
                uint64_t v232 = v342[5];
                v230[4] = v342[4];
                v230[5] = v232;
                uint64_t v233 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
                uint64_t v322 = (char *)v230 + v233;
                uint64_t v234 = (char *)v342 + v233;
                uint64_t v235 = sub_253B07160();
                long long v317 = *(void (**)(char *, char *, uint64_t))(*(void *)(v235 - 8) + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v317(v322, v234, v235);
                break;
            }
            uint64_t v181 = v352;
            swift_storeEnumTagMultiPayload();
            long long v222 = v230;
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v230, 0, 1, v334);
            uint64_t v12 = v371;
            uint64_t v224 = v355;
            uint64_t v223 = v342;
          }
          uint64_t v255 = *(int *)(v224 + 20);
          int v256 = (char *)v222 + v255;
          uint64_t v257 = (char *)v223 + v255;
          uint64_t v258 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v258 - 8) + 16))(v256, v257, v258);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v222, 0, 1, v355);
        }
        uint64_t v259 = v183[12];
        uint64_t v260 = (char *)v181 + v259;
        uint64_t v261 = (char *)v182 + v259;
        uint64_t v262 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v262 - 8) + 16))(v260, v261, v262);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v181, 0, 1, (uint64_t)v183);
        uint64_t v10 = __dstb;
      }
      uint64_t v263 = *(int *)(v12 + 24);
      uint64_t v264 = (char *)v10 + v263;
      uint64_t v265 = (char *)__src + v263;
      uint64_t v266 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v266 - 8) + 16))(v264, v265, v266);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
      goto LABEL_116;
    }
    uint64_t v17 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v17))
    {
      uint64_t v18 = sub_253462A5C(&qword_269CE04B0);
      memcpy(v10, v11, *(void *)(*(void *)(v18 - 8) + 64));
LABEL_90:
      uint64_t v176 = *(int *)(v15 + 20);
      uint64_t v177 = (char *)v10 + v176;
      uint64_t v178 = (char *)v11 + v176;
      uint64_t v179 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 16))(v177, v178, v179);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v15);
      goto LABEL_91;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v366 = v12;
        void *v10 = *v11;
        uint64_t v336 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v24 = *(int *)(v336 + 20);
        __dst = v10;
        uint64_t v25 = (void *)((char *)v10 + v24);
        uint64_t v26 = (void *)((char *)v11 + v24);
        uint64_t v27 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v26, 1, v27))
        {
          uint64_t v28 = sub_253462A5C(&qword_269CE0480);
          memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          uint64_t v70 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v26, 1, v70))
          {
            uint64_t v71 = sub_253462A5C(&qword_269CE0478);
            memcpy(v25, v26, *(void *)(*(void *)(v71 - 8) + 64));
          }
          else
          {
            uint64_t v325 = v70;
            uint64_t v330 = v27;
            uint64_t v349 = (void *)v17;
            uint64_t v92 = v26[1];
            *uint64_t v25 = *v26;
            v25[1] = v92;
            *((unsigned char *)v25 + 16) = *((unsigned char *)v26 + 16);
            uint64_t v93 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v94 = *(int *)(v93 + 24);
            uint64_t v316 = (char *)v25 + v94;
            uint64_t v318 = v93;
            uint64_t v95 = (char *)v26 + v94;
            uint64_t v96 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v95, 1, v96))
            {
              uint64_t v97 = sub_253462A5C(&qword_269CE0470);
              memcpy(v316, v95, *(void *)(*(void *)(v97 - 8) + 64));
            }
            else
            {
              *uint64_t v316 = *v95;
              uint64_t v116 = *(int *)(v96 + 20);
              uint64_t v314 = &v316[v116];
              uint64_t v117 = &v95[v116];
              uint64_t v118 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v118 - 8) + 16))(v314, v117, v118);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v316, 0, 1, v96);
            }
            uint64_t v119 = *(int *)(v318 + 28);
            uint64_t v120 = (char *)v25 + v119;
            uint64_t v121 = (char *)v26 + v119;
            uint64_t v122 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 16))(v120, v121, v122);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v25, 0, 1, v325);
            uint64_t v17 = (uint64_t)v349;
            uint64_t v27 = v330;
          }
          uint64_t v123 = *(int *)(v27 + 20);
          uint64_t v124 = v27;
          uint64_t v125 = (char *)v25 + v123;
          uint64_t v126 = (char *)v26 + v123;
          uint64_t v127 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16))(v125, v126, v127);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v25, 0, 1, v124);
        }
        uint64_t v64 = *(int *)(v336 + 24);
        goto LABEL_69;
      case 2u:
        uint64_t v29 = v11[1];
        void *v10 = *v11;
        v10[1] = v29;
        uint64_t v30 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_29;
      case 3u:
        long long v343 = (void *)v17;
        uint64_t v366 = v12;
        uint64_t v31 = v11[1];
        void *v10 = *v11;
        v10[1] = v31;
        v10[2] = v11[2];
        *((unsigned char *)v10 + 24) = *((unsigned char *)v11 + 24);
        uint64_t v32 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_18;
      case 4u:
        uint64_t v33 = v11[1];
        void *v10 = *v11;
        v10[1] = v33;
        uint64_t v34 = v11[3];
        v10[2] = v11[2];
        v10[3] = v34;
        *((unsigned char *)v10 + 32) = *((unsigned char *)v11 + 32);
        uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_25;
      case 5u:
        long long v343 = (void *)v17;
        uint64_t v366 = v12;
        uint64_t v36 = v11[1];
        void *v10 = *v11;
        v10[1] = v36;
        *((unsigned char *)v10 + 16) = *((unsigned char *)v11 + 16);
        uint64_t v32 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_18:
        uint64_t v37 = v32;
        uint64_t v38 = *(int *)(v32 + 24);
        __dst = v10;
        uint64_t v39 = (char *)v10 + v38;
        uint64_t v40 = (char *)v11 + v38;
        uint64_t v41 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v40, 1, v41))
        {
          uint64_t v42 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v39, 0, 1, v41);
        }
        uint64_t v17 = (uint64_t)v343;
        uint64_t v64 = *(int *)(v37 + 28);
        goto LABEL_69;
      case 6u:
        uint64_t v344 = (void *)v17;
        uint64_t v366 = v12;
        uint64_t v43 = v11[1];
        void *v10 = *v11;
        v10[1] = v43;
        uint64_t v44 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v45 = *(int *)(v44 + 20);
        __dst = v10;
        uint64_t v46 = (char *)v10 + v45;
        uint64_t v47 = (char *)v11 + v45;
        uint64_t v48 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v47, 1, v48))
        {
          uint64_t v49 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v46, 0, 1, v48);
        }
        uint64_t v17 = (uint64_t)v344;
        uint64_t v64 = *(int *)(v44 + 24);
LABEL_69:
        uint64_t v10 = __dst;
        uint64_t v128 = (char *)__dst + v64;
        uint64_t v129 = (char *)v11 + v64;
        uint64_t v130 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16))(v128, v129, v130);
        uint64_t v12 = v366;
        goto LABEL_89;
      case 7u:
        uint64_t v345 = (void *)v17;
        uint64_t v50 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v50))
        {
          uint64_t v51 = sub_253462A5C(&qword_269CE0498);
          memcpy(v10, v11, *(void *)(*(void *)(v51 - 8) + 64));
          goto LABEL_87;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            *(unsigned char *)uint64_t v10 = *(unsigned char *)v11;
            uint64_t v102 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v103 = (char *)v10 + v102;
            uint64_t v104 = (char *)v11 + v102;
            uint64_t v105 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16))(v103, v104, v105);
          }
          else
          {
            if (EnumCaseMultiPayload)
            {
              memcpy(v10, v11, *(void *)(*(void *)(v50 - 8) + 64));
              goto LABEL_86;
            }
            *(unsigned char *)uint64_t v10 = *(unsigned char *)v11;
            uint64_t v73 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v74 = (char *)v10 + v73;
            uint64_t v75 = (char *)v11 + v73;
            uint64_t v76 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
          }
LABEL_85:
          swift_storeEnumTagMultiPayload();
LABEL_86:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v50);
LABEL_87:
          uint64_t v17 = (uint64_t)v345;
          uint64_t v115 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_88:
          uint64_t v172 = *(int *)(v115 + 20);
          uint64_t v173 = (char *)v10 + v172;
          uint64_t v174 = (char *)v11 + v172;
          uint64_t v175 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v175 - 8) + 16))(v173, v174, v175);
LABEL_89:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v17);
          goto LABEL_90;
        }
        uint64_t v100 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v100))
        {
          uint64_t v101 = sub_253462A5C(&qword_269CE0490);
          memcpy(v10, v11, *(void *)(*(void *)(v101 - 8) + 64));
LABEL_84:
          uint64_t v168 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v169 = (char *)v10 + v168;
          uint64_t v170 = (char *)v11 + v168;
          uint64_t v171 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 16))(v169, v170, v171);
          goto LABEL_85;
        }
        uint64_t v370 = v12;
        int v154 = swift_getEnumCaseMultiPayload();
        if (v154 == 1)
        {
          uint64_t v158 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v158))
          {
            uint64_t v159 = sub_253462A5C(&qword_269CE0488);
            memcpy(v10, v11, *(void *)(*(void *)(v159 - 8) + 64));
          }
          else
          {
            *(unsigned char *)uint64_t v10 = *(unsigned char *)v11;
            uint64_t v160 = *(int *)(v158 + 20);
            uint64_t v161 = (char *)v10 + v160;
            uint64_t v162 = (char *)v11 + v160;
            uint64_t v163 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 16))(v161, v162, v163);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v158);
          }
          uint64_t v164 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v165 = (char *)v10 + v164;
          uint64_t v11 = __src;
          uint64_t v166 = (char *)__src + v164;
          uint64_t v167 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 16))(v165, v166, v167);
        }
        else
        {
          if (v154)
          {
            memcpy(v10, v11, *(void *)(*(void *)(v100 - 8) + 64));
LABEL_83:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v100);
            uint64_t v12 = v370;
            goto LABEL_84;
          }
          uint64_t v155 = v11[1];
          void *v10 = *v11;
          v10[1] = v155;
          uint64_t v156 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          __dsth = (char *)v10 + v156;
          uint64_t v340 = (char *)v11 + v156;
          uint64_t v157 = sub_253B07160();
          uint64_t v332 = *(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 16);
          swift_bridgeObjectRetain();
          v332(__dsth, v340, v157);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_83;
      case 8u:
        uint64_t v52 = v11[1];
        void *v10 = *v11;
        v10[1] = v52;
        v10[2] = v11[2];
        uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
LABEL_25:
        uint64_t v328 = (char *)v11 + v35;
        uint64_t v337 = (char *)v10 + v35;
        __dstc = v10;
        uint64_t v367 = v12;
        uint64_t v53 = sub_253B07160();
        uint64_t v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v55 = v53;
        uint64_t v10 = __dstc;
        v54(v337, v328, v55);
        uint64_t v12 = v367;
        goto LABEL_30;
      case 9u:
        uint64_t v56 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v56))
        {
          uint64_t v57 = sub_253462A5C(&qword_269CE04A8);
          memcpy(v10, v11, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          uint64_t v77 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          uint64_t v348 = (void *)v17;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v77))
          {
            uint64_t v78 = v12;
            uint64_t v79 = sub_253462A5C(&qword_269CE04A0);
            memcpy(v10, v11, *(void *)(*(void *)(v79 - 8) + 64));
          }
          else
          {
            uint64_t v91 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 16, v91))
            {
              uint64_t v78 = v12;
              memcpy(v10, v11, *(void *)(*(void *)(v77 - 8) + 64));
            }
            else
            {
              uint64_t v106 = v91;
              uint64_t v369 = v91;
              uint64_t v78 = v12;
              uint64_t v107 = v11[1];
              void *v10 = *v11;
              v10[1] = v107;
              uint64_t v108 = v11[3];
              v10[2] = v11[2];
              v10[3] = v108;
              v10[4] = v11[4];
              uint64_t v109 = *(int *)(v106 + 28);
              __dstf = (char *)v10 + v109;
              uint64_t v338 = (char *)v11 + v109;
              uint64_t v110 = sub_253B07160();
              uint64_t v319 = *(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v319(__dstf, v338, v110);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 16, v369);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v77);
          }
          uint64_t v111 = *(int *)(v56 + 20);
          uint64_t v112 = (char *)v10 + v111;
          uint64_t v113 = (char *)v11 + v111;
          uint64_t v114 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 16))(v112, v113, v114);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v56);
          uint64_t v12 = v78;
          uint64_t v17 = (uint64_t)v348;
        }
        uint64_t v115 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_88;
      case 0xAu:
        void *v10 = *v11;
        uint64_t v30 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
LABEL_29:
        uint64_t v58 = *(int *)(v30 + 20);
        __dstd = (char *)v11 + v58;
        unint64_t v368 = (char *)v10 + v58;
        uint64_t v346 = (void *)v17;
        uint64_t v59 = sub_253B07160();
        uint64_t v60 = v12;
        uint64_t v61 = v10;
        uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v63 = v59;
        uint64_t v17 = (uint64_t)v346;
        v62(v368, __dstd, v63);
        uint64_t v10 = v61;
        uint64_t v12 = v60;
LABEL_30:
        uint64_t v11 = __src;
        goto LABEL_89;
      default:
        uint64_t v365 = v12;
        *(unsigned char *)uint64_t v10 = *(unsigned char *)v11;
        *(_WORD *)((char *)v10 + 1) = *(_WORD *)((char *)v11 + 1);
        uint64_t v335 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v19 = v335[7];
        uint64_t v20 = (char *)v10 + v19;
        uint64_t v21 = (char *)v11 + v19;
        uint64_t v22 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v22))
        {
          uint64_t v23 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, v22);
        }
        uint64_t v65 = v335[8];
        uint64_t v66 = (void *)((char *)v10 + v65);
        uint64_t v67 = (void *)((char *)v11 + v65);
        uint64_t v68 = type metadata accessor for TranscriptProtoUndoContext(0);
        uint64_t v347 = (void *)v17;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v67, 1, v68))
        {
          uint64_t v69 = sub_253462A5C(&qword_269CE0450);
          memcpy(v66, v67, *(void *)(*(void *)(v69 - 8) + 64));
        }
        else
        {
          __dste = v10;
          uint64_t v80 = v67[1];
          void *v66 = *v67;
          v66[1] = v80;
          uint64_t v81 = v67[3];
          v66[2] = v67[2];
          v66[3] = v81;
          uint64_t v82 = v67[5];
          v66[4] = v67[4];
          v66[5] = v82;
          uint64_t v83 = *(int *)(v68 + 28);
          uint64_t v324 = (char *)v67 + v83;
          uint64_t v329 = (char *)v66 + v83;
          uint64_t v84 = sub_253B07160();
          uint64_t v315 = *(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16);
          uint64_t v10 = __dste;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v315(v329, v324, v84);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v66, 0, 1, v68);
        }
        uint64_t v85 = v335[9];
        __dsta = (void *)((char *)v10 + v85);
        uint64_t v86 = (void *)((char *)v11 + v85);
        uint64_t v87 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v86, 1, v87))
        {
          uint64_t v88 = sub_253462A5C(&qword_269CE0468);
          memcpy(__dsta, v86, *(void *)(*(void *)(v88 - 8) + 64));
        }
        else
        {
          uint64_t v89 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v86, 1, v89))
          {
            uint64_t v90 = sub_253462A5C(&qword_269CE0460);
            memcpy(__dsta, v86, *(void *)(*(void *)(v90 - 8) + 64));
          }
          else
          {
            uint64_t v326 = v89;
            uint64_t v331 = v87;
            uint64_t v98 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v86, 1, v98))
            {
              uint64_t v99 = sub_253462A5C(&qword_269CE0458);
              memcpy(__dsta, v86, *(void *)(*(void *)(v99 - 8) + 64));
            }
            else
            {
              uint64_t v131 = v86[1];
              void *__dsta = *v86;
              __dsta[1] = v131;
              uint64_t v132 = v86[2];
              unint64_t v133 = v86[3];
              swift_bridgeObjectRetain();
              sub_25348A9C8(v132, v133);
              __dsta[2] = v132;
              __dsta[3] = v133;
              __dsta[4] = v86[4];
              uint64_t v134 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              uint64_t v135 = (char *)__dsta + v134;
              uint64_t v136 = (char *)v86 + v134;
              uint64_t v137 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16))(v135, v136, v137);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v98);
            }
            uint64_t v138 = *(int *)(v326 + 20);
            uint64_t v320 = (char *)__dsta + v138;
            uint64_t v139 = (char *)v86 + v138;
            uint64_t v140 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v320, v139, v140);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v326);
            uint64_t v87 = v331;
          }
          uint64_t v141 = *(int *)(v87 + 20);
          uint64_t v142 = v87;
          uint64_t v143 = (char *)__dsta + v141;
          uint64_t v144 = (char *)v86 + v141;
          uint64_t v145 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 16))(v143, v144, v145);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v142);
        }
        uint64_t v146 = v335[10];
        uint64_t v147 = (void *)((char *)v10 + v146);
        uint64_t v148 = (void *)((char *)v11 + v146);
        uint64_t v149 = v148[1];
        *uint64_t v147 = *v148;
        v147[1] = v149;
        uint64_t v150 = v335[11];
        __dstg = (char *)v10 + v150;
        uint64_t v339 = (char *)v11 + v150;
        uint64_t v151 = sub_253B07160();
        uint64_t v152 = v10;
        int v153 = *(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 16);
        swift_bridgeObjectRetain();
        v153(__dstg, v339, v151);
        uint64_t v10 = v152;
        uint64_t v12 = v365;
        uint64_t v17 = (uint64_t)v347;
        goto LABEL_89;
    }
  }
  uint64_t v13 = sub_253462A5C(&qword_269CE1C80);
  memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
LABEL_116:
  uint64_t v267 = v6[7];
  uint64_t v268 = (uint64_t *)((char *)v4 + v267);
  uint64_t v269 = (uint64_t *)((char *)a2 + v267);
  uint64_t v270 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v269, 1, v270))
  {
    uint64_t v271 = sub_253462A5C(&qword_26B249528);
    memcpy(v268, v269, *(void *)(*(void *)(v271 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v268 = *(_DWORD *)v269;
    uint64_t v272 = v269[2];
    v268[1] = v269[1];
    v268[2] = v272;
    uint64_t v273 = *(int *)(v270 + 24);
    uint64_t v274 = (char *)v268 + v273;
    uint64_t v275 = (char *)v269 + v273;
    uint64_t v276 = sub_253B07160();
    uint64_t v277 = *(void (**)(char *, char *, uint64_t))(*(void *)(v276 - 8) + 16);
    swift_bridgeObjectRetain();
    v277(v274, v275, v276);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v268, 0, 1, v270);
  }
  uint64_t v278 = v6[8];
  uint64_t v279 = (uint64_t *)((char *)v4 + v278);
  uint64_t v280 = (uint64_t *)((char *)a2 + v278);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v278, 1, v270))
  {
    uint64_t v281 = sub_253462A5C(&qword_26B249528);
    memcpy(v279, v280, *(void *)(*(void *)(v281 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v279 = *(_DWORD *)v280;
    uint64_t v282 = v280[2];
    v279[1] = v280[1];
    v279[2] = v282;
    uint64_t v283 = *(int *)(v270 + 24);
    long long v284 = (char *)v279 + v283;
    uint64_t v285 = (char *)v280 + v283;
    uint64_t v286 = sub_253B07160();
    uint64_t v287 = *(void (**)(char *, char *, uint64_t))(*(void *)(v286 - 8) + 16);
    swift_bridgeObjectRetain();
    v287(v284, v285, v286);
    uint64_t v6 = v374;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v279, 0, 1, v270);
  }
  uint64_t v288 = v6[9];
  uint64_t v289 = (uint64_t *)((char *)v4 + v288);
  uint64_t v290 = (uint64_t *)((char *)a2 + v288);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v288, 1, v270))
  {
    uint64_t v291 = sub_253462A5C(&qword_26B249528);
    memcpy(v289, v290, *(void *)(*(void *)(v291 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v289 = *(_DWORD *)v290;
    uint64_t v292 = v290[2];
    v289[1] = v290[1];
    v289[2] = v292;
    uint64_t v293 = *(int *)(v270 + 24);
    uint64_t v294 = (char *)v289 + v293;
    uint64_t v295 = (char *)v290 + v293;
    uint64_t v296 = sub_253B07160();
    uint64_t v297 = *(void (**)(char *, char *, uint64_t))(*(void *)(v296 - 8) + 16);
    swift_bridgeObjectRetain();
    v297(v294, v295, v296);
    uint64_t v6 = v374;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v289, 0, 1, v270);
  }
  uint64_t v298 = v6[10];
  long long v299 = (uint64_t *)((char *)v4 + v298);
  uint64_t v300 = (uint64_t *)((char *)a2 + v298);
  uint64_t v301 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v300, 1, v301))
  {
    uint64_t v302 = sub_253462A5C(&qword_269CE0448);
    memcpy(v299, v300, *(void *)(*(void *)(v302 - 8) + 64));
  }
  else
  {
    uint64_t v303 = v300[1];
    *long long v299 = *v300;
    v299[1] = v303;
    uint64_t v304 = v300[3];
    v299[2] = v300[2];
    v299[3] = v304;
    uint64_t v305 = *(int *)(v301 + 24);
    uint64_t v306 = (char *)v299 + v305;
    __srca = (char *)v300 + v305;
    uint64_t v307 = sub_253B07160();
    uint64_t v308 = *(void (**)(char *, char *, uint64_t))(*(void *)(v307 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v308(v306, __srca, v307);
    uint64_t v6 = v374;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v299, 0, 1, v301);
  }
  uint64_t v309 = v6[11];
  uint64_t v310 = (char *)v4 + v309;
  uint64_t v311 = (char *)a2 + v309;
  uint64_t v312 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v312 - 8) + 16))(v310, v311, v312);
  return v4;
}

uint64_t destroy for TranscriptProtoStatementResult(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5)) {
    goto LABEL_79;
  }
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v6))
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v7))
    {
LABEL_59:
      uint64_t v67 = v4 + *(int *)(v6 + 20);
      uint64_t v68 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v68 - 8) + 8))(v67, v68);
      goto LABEL_60;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v8 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v9 = v4 + v8[7];
        uint64_t v10 = sub_253B08E50();
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, 1, v10)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
        }
        uint64_t v11 = v4 + v8[8];
        uint64_t v12 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v11, 1, v12))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v13 = v11 + *(int *)(v12 + 28);
          uint64_t v14 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
        }
        uint64_t v15 = v4 + v8[9];
        uint64_t v16 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v15, 1, v16))
        {
          uint64_t v17 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v15, 1, v17))
          {
            uint64_t v18 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v15, 1, v18))
            {
              swift_bridgeObjectRelease();
              sub_253487D84(*(void *)(v15 + 16), *(void *)(v15 + 24));
              uint64_t v19 = v15
                  + *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
              uint64_t v20 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
            }
            uint64_t v21 = v15 + *(int *)(v17 + 20);
            uint64_t v22 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
          }
          uint64_t v23 = v15 + *(int *)(v16 + 20);
          uint64_t v24 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
        }
        swift_bridgeObjectRelease();
        uint64_t v25 = v8[11];
        goto LABEL_58;
      case 1u:
        swift_bridgeObjectRelease();
        uint64_t v26 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v27 = v4 + *(int *)(v26 + 20);
        uint64_t v28 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v27, 1, v28))
        {
          uint64_t v29 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v27, 1, v29))
          {
            swift_bridgeObjectRelease();
            uint64_t v114 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v30 = v27 + *(int *)(v114 + 24);
            uint64_t v31 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v30, 1, v31))
            {
              uint64_t v32 = v30 + *(int *)(v31 + 20);
              uint64_t v33 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
            }
            uint64_t v34 = v27 + *(int *)(v114 + 28);
            uint64_t v35 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
          }
          uint64_t v36 = v27 + *(int *)(v28 + 20);
          uint64_t v37 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
        }
        goto LABEL_31;
      case 2u:
        swift_bridgeObjectRelease();
        uint64_t v38 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_57;
      case 3u:
        swift_bridgeObjectRelease();
        uint64_t v39 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_26;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v25 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_58;
      case 5u:
        swift_bridgeObjectRelease();
        uint64_t v39 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_26:
        uint64_t v40 = v39;
        uint64_t v41 = v4 + *(int *)(v39 + 24);
        uint64_t v42 = sub_253B08E50();
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v41, 1, v42)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
        }
        uint64_t v25 = *(int *)(v40 + 28);
        goto LABEL_58;
      case 6u:
        swift_bridgeObjectRelease();
        uint64_t v26 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v43 = v4 + *(int *)(v26 + 20);
        uint64_t v44 = sub_253B08E50();
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v43, 1, v44)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v43, v44);
        }
LABEL_31:
        uint64_t v25 = *(int *)(v26 + 24);
        goto LABEL_58;
      case 7u:
        uint64_t v45 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v45)) {
          goto LABEL_56;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v47 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
          }
          else
          {
            if (EnumCaseMultiPayload) {
              goto LABEL_56;
            }
            uint64_t v47 = type metadata accessor for TranscriptProtoAppRequirement(0);
          }
LABEL_55:
          uint64_t v63 = v4 + *(int *)(v47 + 20);
          uint64_t v64 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v64 - 8) + 8))(v63, v64);
LABEL_56:
          uint64_t v38 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_57:
          uint64_t v25 = *(int *)(v38 + 20);
LABEL_58:
          uint64_t v65 = v4 + v25;
          uint64_t v66 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v66 - 8) + 8))(v65, v66);
          goto LABEL_59;
        }
        uint64_t v55 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v55)) {
          goto LABEL_54;
        }
        int v56 = swift_getEnumCaseMultiPayload();
        if (v56 == 1)
        {
          uint64_t v58 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v58))
          {
            uint64_t v59 = v4 + *(int *)(v58 + 20);
            uint64_t v60 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8))(v59, v60);
          }
          uint64_t v57 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
        }
        else
        {
          if (v56)
          {
LABEL_54:
            uint64_t v47 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
            goto LABEL_55;
          }
          swift_bridgeObjectRelease();
          uint64_t v57 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
        }
        uint64_t v61 = v4 + *(int *)(v57 + 20);
        uint64_t v62 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v61, v62);
        goto LABEL_54;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v25 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        goto LABEL_58;
      case 9u:
        uint64_t v48 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v48))
        {
          uint64_t v49 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v49))
          {
            uint64_t v50 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 16, v50))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v51 = v4 + *(int *)(v50 + 28);
              uint64_t v52 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v51, v52);
            }
          }
          uint64_t v53 = v4 + *(int *)(v48 + 20);
          uint64_t v54 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v53, v54);
        }
        uint64_t v38 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_57;
      case 0xAu:
        swift_bridgeObjectRelease();
        uint64_t v38 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
        goto LABEL_57;
      default:
        goto LABEL_59;
    }
  }
LABEL_60:
  uint64_t v69 = v4 + *(int *)(v5 + 20);
  uint64_t v70 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v69, 1, (uint64_t)v70))
  {
    swift_bridgeObjectRelease();
    uint64_t v71 = v69 + v70[5];
    uint64_t v72 = type metadata accessor for TranscriptProtoResponseDialog(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v71, 1, v72))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v73 = v71 + *(int *)(v72 + 32);
      uint64_t v74 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v74 - 8) + 8))(v73, v74);
    }
    uint64_t v75 = v69 + v70[6];
    uint64_t v76 = type metadata accessor for TranscriptProtoResponseVisual(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v75, 1, v76))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v77 = v75 + *(int *)(v76 + 24);
      uint64_t v78 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v77, 1, v78))
      {
        uint64_t v79 = v77 + *(int *)(v78 + 20);
        uint64_t v80 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v79, v80);
      }
      uint64_t v81 = v75 + *(int *)(v76 + 28);
      uint64_t v82 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v81, v82);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v83 = v69 + v70[11];
    uint64_t v84 = type metadata accessor for TranscriptProtoUIType(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v83, 1, v84))
    {
      uint64_t v85 = type metadata accessor for TranscriptProtoUitype(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v83, 1, v85))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            sub_253487D84(*(void *)v83, *(void *)(v83 + 8));
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v86 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
            goto LABEL_75;
          case 1u:
            swift_bridgeObjectRelease();
            uint64_t v87 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
            goto LABEL_74;
          case 2u:
            sub_253487D84(*(void *)v83, *(void *)(v83 + 8));
            swift_bridgeObjectRelease();
            uint64_t v86 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
            goto LABEL_75;
          case 3u:
            sub_253487D84(*(void *)v83, *(void *)(v83 + 8));
            uint64_t v87 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_74:
            uint64_t v86 = *(int *)(v87 + 20);
LABEL_75:
            uint64_t v88 = v83 + v86;
            uint64_t v89 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v89 - 8) + 8))(v88, v89);
            break;
          default:
            break;
        }
      }
      uint64_t v90 = v83 + *(int *)(v84 + 20);
      uint64_t v91 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v91 - 8) + 8))(v90, v91);
    }
    uint64_t v92 = v69 + v70[12];
    uint64_t v93 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v93 - 8) + 8))(v92, v93);
  }
  uint64_t v94 = v4 + *(int *)(v5 + 24);
  uint64_t v95 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v95 - 8) + 8))(v94, v95);
LABEL_79:
  uint64_t v96 = a1 + a2[7];
  uint64_t v97 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v96, 1, v97))
  {
    swift_bridgeObjectRelease();
    uint64_t v98 = v96 + *(int *)(v97 + 24);
    uint64_t v99 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v99 - 8) + 8))(v98, v99);
  }
  uint64_t v100 = a1 + a2[8];
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v100, 1, v97))
  {
    swift_bridgeObjectRelease();
    uint64_t v101 = v100 + *(int *)(v97 + 24);
    uint64_t v102 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v102 - 8) + 8))(v101, v102);
  }
  uint64_t v103 = a1 + a2[9];
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v103, 1, v97))
  {
    swift_bridgeObjectRelease();
    uint64_t v104 = v103 + *(int *)(v97 + 24);
    uint64_t v105 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v105 - 8) + 8))(v104, v105);
  }
  uint64_t v106 = a1 + a2[10];
  uint64_t v107 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v106, 1, v107))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v108 = v106 + *(int *)(v107 + 24);
    uint64_t v109 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v109 - 8) + 8))(v108, v109);
  }
  uint64_t v110 = a1 + a2[11];
  uint64_t v111 = sub_253B07160();
  uint64_t v112 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v111 - 8) + 8);
  return v112(v110, v111);
}

void *initializeWithCopy for TranscriptProtoStatementResult(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a3;
  uint64_t v5 = a1;
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  uint64_t v11 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v387 = v3;
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_253462A5C(&qword_269CE1C80);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = type metadata accessor for TranscriptProtoStatementOutcome(0);
    uint64_t v384 = v10;
    uint64_t v385 = v11;
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v13))
    {
      uint64_t v14 = sub_253462A5C(&qword_269CE0388);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v15 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v15))
      {
        uint64_t v16 = sub_253462A5C(&qword_269CE04B0);
        memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *uint64_t v9 = *v10;
            uint64_t v359 = type metadata accessor for TranscriptProtoActionConfirmation(0);
            uint64_t v22 = *(int *)(v359 + 20);
            uint64_t v23 = (void *)((char *)v9 + v22);
            uint64_t v24 = (char *)v10 + v22;
            uint64_t v25 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
            {
              uint64_t v26 = sub_253462A5C(&qword_269CE0480);
              memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
            }
            else
            {
              uint64_t v71 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
              uint64_t v72 = (uint64_t)v24;
              uint64_t v73 = v71;
              __src = (void *)v72;
              uint64_t v351 = v25;
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v72, 1, v71))
              {
                uint64_t v74 = sub_253462A5C(&qword_269CE0478);
                uint64_t v75 = __src;
                memcpy(v23, __src, *(void *)(*(void *)(v74 - 8) + 64));
              }
              else
              {
                uint64_t v342 = v73;
                uint64_t v368 = v15;
                uint64_t v379 = v9;
                uint64_t v75 = __src;
                uint64_t v100 = __src[1];
                *uint64_t v23 = *__src;
                v23[1] = v100;
                *((unsigned char *)v23 + 16) = *((unsigned char *)__src + 16);
                uint64_t v341 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
                uint64_t v101 = *(int *)(v341 + 24);
                uint64_t v102 = (uint64_t)v23;
                uint64_t v103 = (char *)v23 + v101;
                uint64_t v104 = (char *)__src + v101;
                uint64_t v105 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
                swift_bridgeObjectRetain();
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v104, 1, v105))
                {
                  uint64_t v106 = sub_253462A5C(&qword_269CE0470);
                  memcpy(v103, v104, *(void *)(*(void *)(v106 - 8) + 64));
                }
                else
                {
                  *uint64_t v103 = *v104;
                  uint64_t v131 = *(int *)(v105 + 20);
                  uint64_t v132 = &v103[v131];
                  unint64_t v133 = &v104[v131];
                  uint64_t v134 = sub_253B07160();
                  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v134 - 8) + 16))(v132, v133, v134);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v103, 0, 1, v105);
                }
                uint64_t v11 = v385;
                uint64_t v135 = *(int *)(v341 + 28);
                uint64_t v23 = (void *)v102;
                uint64_t v136 = v102 + v135;
                uint64_t v137 = (char *)__src + v135;
                uint64_t v138 = sub_253B07160();
                (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v138 - 8) + 16))(v136, v137, v138);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v102, 0, 1, v342);
                uint64_t v9 = v379;
                uint64_t v15 = v368;
                uint64_t v25 = v351;
              }
              uint64_t v139 = *(int *)(v25 + 20);
              uint64_t v140 = (char *)v23 + v139;
              uint64_t v141 = (char *)v75 + v139;
              uint64_t v142 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 16))(v140, v141, v142);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v351);
            }
            uint64_t v143 = *(int *)(v359 + 24);
            goto LABEL_85;
          case 2u:
            uint64_t v27 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v27;
            uint64_t v28 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
            goto LABEL_27;
          case 3u:
            uint64_t v365 = v15;
            uint64_t v29 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v29;
            v9[2] = v10[2];
            *((unsigned char *)v9 + 24) = *((unsigned char *)v10 + 24);
            uint64_t v30 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
            goto LABEL_16;
          case 4u:
            uint64_t v31 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v31;
            uint64_t v32 = v10[3];
            v9[2] = v10[2];
            v9[3] = v32;
            *((unsigned char *)v9 + 32) = *((unsigned char *)v10 + 32);
            uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
            goto LABEL_23;
          case 5u:
            uint64_t v365 = v15;
            uint64_t v34 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v34;
            *((unsigned char *)v9 + 16) = *((unsigned char *)v10 + 16);
            uint64_t v30 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_16:
            uint64_t v35 = v30;
            uint64_t v36 = *(int *)(v30 + 24);
            uint64_t v37 = v9;
            uint64_t v38 = (char *)v9 + v36;
            uint64_t v39 = (char *)v10 + v36;
            uint64_t v40 = sub_253B08E50();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v39, 1, v40))
            {
              uint64_t v41 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v38, 0, 1, v40);
            }
            uint64_t v11 = v385;
            uint64_t v65 = *(int *)(v35 + 28);
            goto LABEL_37;
          case 6u:
            uint64_t v365 = v15;
            uint64_t v42 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v42;
            uint64_t v43 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
            uint64_t v44 = *(int *)(v43 + 20);
            uint64_t v37 = v9;
            uint64_t v45 = (char *)v9 + v44;
            uint64_t v46 = (char *)v10 + v44;
            uint64_t v47 = sub_253B08E50();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v46, 1, v47))
            {
              uint64_t v48 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v45, 0, 1, v47);
            }
            uint64_t v11 = v385;
            uint64_t v65 = *(int *)(v43 + 24);
LABEL_37:
            uint64_t v9 = v37;
            uint64_t v76 = (char *)v37 + v65;
            uint64_t v77 = (char *)v10 + v65;
            uint64_t v78 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
            uint64_t v3 = v387;
            goto LABEL_71;
          case 7u:
            uint64_t v49 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v49))
            {
              uint64_t v50 = sub_253462A5C(&qword_269CE0498);
              memcpy(v9, v10, *(void *)(*(void *)(v50 - 8) + 64));
              goto LABEL_84;
            }
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 2)
            {
              uint64_t v110 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v110))
              {
                uint64_t v111 = sub_253462A5C(&qword_269CE0490);
                memcpy(v9, v10, *(void *)(*(void *)(v111 - 8) + 64));
              }
              else
              {
                int v172 = swift_getEnumCaseMultiPayload();
                uint64_t v369 = v15;
                if (v172 == 1)
                {
                  uint64_t v382 = v5;
                  uint64_t v178 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
                  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v178))
                  {
                    uint64_t v179 = sub_253462A5C(&qword_269CE0488);
                    memcpy(v9, v10, *(void *)(*(void *)(v179 - 8) + 64));
                  }
                  else
                  {
                    *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
                    uint64_t v180 = *(int *)(v178 + 20);
                    uint64_t v181 = (char *)v9 + v180;
                    uint64_t v182 = (char *)v10 + v180;
                    uint64_t v183 = sub_253B07160();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v183 - 8) + 16))(v181, v182, v183);
                    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v178);
                  }
                  uint64_t v184 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0)
                                + 20);
                  uint64_t v185 = v9;
                  uint64_t v186 = (char *)v9 + v184;
                  uint64_t v187 = (char *)v10 + v184;
                  uint64_t v188 = sub_253B07160();
                  uint64_t v189 = v187;
                  uint64_t v9 = v185;
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v188 - 8) + 16))(v186, v189, v188);
                  swift_storeEnumTagMultiPayload();
                  uint64_t v5 = v382;
                }
                else if (v172)
                {
                  memcpy(v9, v10, *(void *)(*(void *)(v110 - 8) + 64));
                }
                else
                {
                  uint64_t v173 = v10[1];
                  *uint64_t v9 = *v10;
                  v9[1] = v173;
                  uint64_t v174 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0)
                                + 20);
                  uint64_t v355 = (char *)v10 + v174;
                  uint64_t v363 = (char *)v9 + v174;
                  uint64_t v381 = v9;
                  uint64_t v175 = sub_253B07160();
                  uint64_t v176 = *(void (**)(char *, char *, uint64_t))(*(void *)(v175 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v177 = v175;
                  uint64_t v9 = v381;
                  v176(v363, v355, v177);
                  swift_storeEnumTagMultiPayload();
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v110);
                uint64_t v11 = v385;
                uint64_t v15 = v369;
              }
              uint64_t v190 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
              uint64_t v191 = (char *)v9 + v190;
              uint64_t v192 = (char *)v10 + v190;
              uint64_t v193 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 16))(v191, v192, v193);
            }
            else if (EnumCaseMultiPayload == 1)
            {
              *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
              uint64_t v112 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
              uint64_t v113 = (char *)v9 + v112;
              uint64_t v114 = (char *)v10 + v112;
              uint64_t v115 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16))(v113, v114, v115);
            }
            else
            {
              if (EnumCaseMultiPayload)
              {
                memcpy(v9, v10, *(void *)(*(void *)(v49 - 8) + 64));
                goto LABEL_83;
              }
              *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
              uint64_t v80 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
              uint64_t v81 = (char *)v9 + v80;
              uint64_t v82 = (char *)v10 + v80;
              uint64_t v83 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
            }
            swift_storeEnumTagMultiPayload();
LABEL_83:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v49);
LABEL_84:
            uint64_t v143 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
LABEL_85:
            uint64_t v194 = (char *)v9 + v143;
            uint64_t v195 = (char *)v10 + v143;
            uint64_t v196 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 16))(v194, v195, v196);
LABEL_86:
            uint64_t v3 = v387;
LABEL_87:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v15);
            break;
          case 8u:
            uint64_t v51 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v51;
            v9[2] = v10[2];
            uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
LABEL_23:
            uint64_t v377 = (char *)v9 + v33;
            uint64_t v360 = (char *)v10 + v33;
            uint64_t v52 = sub_253B07160();
            uint64_t v366 = v15;
            uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v54 = v52;
            uint64_t v3 = v387;
            v53(v377, v360, v54);
            uint64_t v15 = v366;
            goto LABEL_87;
          case 9u:
            uint64_t v55 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v55))
            {
              uint64_t v56 = sub_253462A5C(&qword_269CE04A8);
              memcpy(v9, v10, *(void *)(*(void *)(v56 - 8) + 64));
            }
            else
            {
              uint64_t v84 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
              uint64_t v367 = v15;
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v84))
              {
                uint64_t v85 = sub_253462A5C(&qword_269CE04A0);
                memcpy(v9, v10, *(void *)(*(void *)(v85 - 8) + 64));
              }
              else
              {
                uint64_t v99 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 16, v99))
                {
                  memcpy(v9, v10, *(void *)(*(void *)(v84 - 8) + 64));
                }
                else
                {
                  uint64_t v116 = v10[1];
                  *uint64_t v9 = *v10;
                  v9[1] = v116;
                  uint64_t v117 = v10[3];
                  v9[2] = v10[2];
                  v9[3] = v117;
                  v9[4] = v10[4];
                  uint64_t v118 = *(int *)(v99 + 28);
                  uint64_t v354 = (char *)v10 + v118;
                  uint64_t v362 = (char *)v9 + v118;
                  uint64_t v380 = (uint64_t)v9;
                  uint64_t v119 = sub_253B07160();
                  long long v343 = *(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v11 = v385;
                  swift_bridgeObjectRetain();
                  uint64_t v120 = v119;
                  uint64_t v9 = (void *)v380;
                  v343(v362, v354, v120);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v380, 0, 16, v99);
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v84);
                uint64_t v3 = v387;
              }
              uint64_t v121 = *(int *)(v55 + 20);
              uint64_t v122 = (char *)v9 + v121;
              uint64_t v123 = (uint64_t)v9;
              uint64_t v124 = (char *)v10 + v121;
              uint64_t v125 = sub_253B07160();
              uint64_t v126 = v124;
              uint64_t v9 = (void *)v123;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 16))(v122, v126, v125);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v123, 0, 1, v55);
              uint64_t v15 = v367;
            }
            uint64_t v127 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
            uint64_t v128 = (char *)v9 + v127;
            uint64_t v129 = (char *)v10 + v127;
            uint64_t v130 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16))(v128, v129, v130);
            goto LABEL_87;
          case 0xAu:
            *uint64_t v9 = *v10;
            uint64_t v28 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
LABEL_27:
            uint64_t v57 = *(int *)(v28 + 20);
            uint64_t v361 = (char *)v9 + v57;
            long long v378 = v9;
            uint64_t v58 = (char *)v10 + v57;
            uint64_t v59 = v11;
            uint64_t v60 = sub_253B07160();
            uint64_t v61 = v15;
            uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v63 = v58;
            uint64_t v64 = v60;
            uint64_t v11 = v59;
            uint64_t v9 = v378;
            uint64_t v10 = v384;
            v62(v361, v63, v64);
            uint64_t v15 = v61;
            goto LABEL_86;
          default:
            *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
            *(_WORD *)((char *)v9 + 1) = *(_WORD *)((char *)v10 + 1);
            uint64_t v358 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
            uint64_t v17 = v358[7];
            uint64_t v376 = v9;
            uint64_t v18 = (char *)v9 + v17;
            uint64_t v19 = (char *)v10 + v17;
            uint64_t v20 = sub_253B08E50();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
            {
              uint64_t v21 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
            }
            uint64_t v365 = v15;
            uint64_t v66 = v358[8];
            uint64_t v67 = (void *)((char *)v376 + v66);
            uint64_t v68 = (void *)((char *)v10 + v66);
            uint64_t v69 = type metadata accessor for TranscriptProtoUndoContext(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v68, 1, v69))
            {
              uint64_t v70 = sub_253462A5C(&qword_269CE0450);
              memcpy(v67, v68, *(void *)(*(void *)(v70 - 8) + 64));
            }
            else
            {
              uint64_t v86 = v68[1];
              void *v67 = *v68;
              v67[1] = v86;
              uint64_t v87 = v68[3];
              v67[2] = v68[2];
              v67[3] = v87;
              uint64_t v88 = v68[5];
              v67[4] = v68[4];
              v67[5] = v88;
              uint64_t v89 = *(int *)(v69 + 28);
              __srca = (char *)v68 + v89;
              uint64_t v352 = (char *)v67 + v89;
              uint64_t v90 = sub_253B07160();
              uint64_t v340 = *(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v340(v352, __srca, v90);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v67, 0, 1, v69);
            }
            uint64_t v91 = v358[9];
            uint64_t v92 = v376;
            uint64_t v93 = (void *)((char *)v376 + v91);
            uint64_t v94 = (void *)((char *)v10 + v91);
            uint64_t v95 = type metadata accessor for TranscriptProtoFollowUpAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v94, 1, v95))
            {
              uint64_t v96 = sub_253462A5C(&qword_269CE0468);
              memcpy(v93, v94, *(void *)(*(void *)(v96 - 8) + 64));
            }
            else
            {
              uint64_t v97 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v94, 1, v97))
              {
                uint64_t v98 = sub_253462A5C(&qword_269CE0460);
                memcpy(v93, v94, *(void *)(*(void *)(v98 - 8) + 64));
              }
              else
              {
                uint64_t v353 = v95;
                uint64_t v107 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
                uint64_t v108 = v93;
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v94, 1, v107))
                {
                  uint64_t v109 = sub_253462A5C(&qword_269CE0458);
                  memcpy(v93, v94, *(void *)(*(void *)(v109 - 8) + 64));
                }
                else
                {
                  uint64_t v144 = v94[1];
                  void *v93 = *v94;
                  v93[1] = v144;
                  uint64_t v145 = v94[2];
                  unint64_t v146 = v94[3];
                  swift_bridgeObjectRetain();
                  sub_25348A9C8(v145, v146);
                  v108[2] = v145;
                  v108[3] = v146;
                  v108[4] = v94[4];
                  uint64_t v147 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                                + 28);
                  uint64_t v148 = (char *)v108 + v147;
                  uint64_t v149 = (char *)v94 + v147;
                  uint64_t v150 = sub_253B07160();
                  uint64_t v151 = v148;
                  uint64_t v93 = v108;
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 16))(v151, v149, v150);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v108, 0, 1, v107);
                }
                uint64_t v152 = *(int *)(v97 + 20);
                int v153 = (char *)v93 + v152;
                int v154 = (char *)v94 + v152;
                uint64_t v155 = sub_253B07160();
                uint64_t v156 = v154;
                uint64_t v93 = v108;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 16))(v153, v156, v155);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v108, 0, 1, v97);
                uint64_t v92 = v376;
                uint64_t v95 = v353;
              }
              uint64_t v157 = *(int *)(v95 + 20);
              uint64_t v158 = v95;
              uint64_t v159 = (char *)v93 + v157;
              uint64_t v160 = (char *)v94 + v157;
              uint64_t v161 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 16))(v159, v160, v161);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v93, 0, 1, v158);
            }
            uint64_t v162 = v358[10];
            uint64_t v163 = (void *)((char *)v92 + v162);
            uint64_t v164 = (void *)((char *)v10 + v162);
            uint64_t v165 = v164[1];
            void *v163 = *v164;
            v163[1] = v165;
            uint64_t v166 = v358[11];
            uint64_t v167 = (uint64_t)v92 + v166;
            uint64_t v168 = (char *)v10 + v166;
            uint64_t v169 = sub_253B07160();
            uint64_t v170 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v169 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v171 = v168;
            uint64_t v9 = v376;
            v170(v167, v171, v169);
            uint64_t v11 = v385;
            uint64_t v3 = v387;
LABEL_71:
            uint64_t v15 = v365;
            goto LABEL_87;
        }
      }
      uint64_t v197 = *(int *)(v13 + 20);
      uint64_t v198 = (char *)v9 + v197;
      uint64_t v199 = (char *)v10 + v197;
      uint64_t v200 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 16))(v198, v199, v200);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v13);
    }
    uint64_t v201 = *(int *)(v11 + 20);
    uint64_t v202 = (void *)((char *)v9 + v201);
    uint64_t v203 = (void *)((char *)v10 + v201);
    uint64_t v204 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v203, 1, (uint64_t)v204))
    {
      uint64_t v205 = sub_253462A5C(&qword_269CE0378);
      memcpy(v202, v203, *(void *)(*(void *)(v205 - 8) + 64));
    }
    else
    {
      uint64_t v383 = v9;
      *uint64_t v202 = *v203;
      uint64_t v206 = v204[5];
      uint64_t v207 = (void *)((char *)v202 + v206);
      uint64_t v208 = (void *)((char *)v203 + v206);
      uint64_t v209 = type metadata accessor for TranscriptProtoResponseDialog(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v208, 1, v209))
      {
        uint64_t v210 = sub_253462A5C(&qword_269CE04B8);
        memcpy(v207, v208, *(void *)(*(void *)(v210 - 8) + 64));
      }
      else
      {
        uint64_t v211 = v208[1];
        *uint64_t v207 = *v208;
        v207[1] = v211;
        uint64_t v212 = v208[3];
        v207[2] = v208[2];
        v207[3] = v212;
        uint64_t v213 = v208[5];
        v207[4] = v208[4];
        v207[5] = v213;
        uint64_t v214 = v208[7];
        v207[6] = v208[6];
        v207[7] = v214;
        uint64_t v215 = *(int *)(v209 + 32);
        uint64_t v370 = (char *)v208 + v215;
        __dstb = (char *)v207 + v215;
        uint64_t v216 = sub_253B07160();
        __srcb = *(void (**)(char *, char *, uint64_t))(*(void *)(v216 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __srcb(__dstb, v370, v216);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v207, 0, 1, v209);
      }
      uint64_t v217 = v204[6];
      uint64_t v218 = (void *)((char *)v202 + v217);
      uint64_t v219 = (void *)((char *)v203 + v217);
      uint64_t v220 = type metadata accessor for TranscriptProtoResponseVisual(0);
      uint64_t v9 = v383;
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v219, 1, v220))
      {
        uint64_t v221 = sub_253462A5C(&qword_269CE04C8);
        memcpy(v218, v219, *(void *)(*(void *)(v221 - 8) + 64));
      }
      else
      {
        uint64_t v222 = v219[1];
        *uint64_t v218 = *v219;
        v218[1] = v222;
        uint64_t v364 = v220;
        uint64_t v371 = (uint64_t)v218;
        uint64_t v223 = *(int *)(v220 + 24);
        __dst = (char *)v218 + v223;
        uint64_t v224 = (char *)v219 + v223;
        uint64_t v225 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v224, 1, v225))
        {
          uint64_t v226 = sub_253462A5C(&qword_269CE04C0);
          memcpy(__dst, v224, *(void *)(*(void *)(v226 - 8) + 64));
        }
        else
        {
          uint64_t v227 = v224;
          unsigned char *__dst = *v224;
          uint64_t v228 = *(int *)(v225 + 20);
          uint64_t v229 = &__dst[v228];
          uint64_t v230 = &v227[v228];
          uint64_t v231 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v231 - 8) + 16))(v229, v230, v231);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v225);
        }
        uint64_t v9 = v383;
        uint64_t v232 = *(int *)(v364 + 28);
        uint64_t v233 = v371 + v232;
        uint64_t v234 = (char *)v219 + v232;
        uint64_t v235 = sub_253B07160();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v235 - 8) + 16))(v233, v234, v235);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v371, 0, 1, v364);
      }
      uint64_t v236 = v204[7];
      uint64_t v237 = (void *)((char *)v202 + v236);
      uint64_t v238 = (void *)((char *)v203 + v236);
      uint64_t v239 = v238[1];
      *uint64_t v237 = *v238;
      v237[1] = v239;
      uint64_t v240 = v204[8];
      uint64_t v241 = (void *)((char *)v202 + v240);
      uint64_t v242 = (void *)((char *)v203 + v240);
      uint64_t v243 = v242[1];
      void *v241 = *v242;
      v241[1] = v243;
      *((unsigned char *)v202 + v204[9]) = *((unsigned char *)v203 + v204[9]);
      *((unsigned char *)v202 + v204[10]) = *((unsigned char *)v203 + v204[10]);
      uint64_t v244 = v204[11];
      uint64_t v245 = (void *)((char *)v202 + v244);
      uint64_t v246 = (void *)((char *)v203 + v244);
      uint64_t v247 = type metadata accessor for TranscriptProtoUIType(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v246, 1, v247))
      {
        uint64_t v248 = sub_253462A5C(&qword_269CE04D0);
        memcpy(v245, v246, *(void *)(*(void *)(v248 - 8) + 64));
      }
      else
      {
        uint64_t v249 = type metadata accessor for TranscriptProtoUitype(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v246, 1, v249))
        {
          uint64_t v250 = sub_253462A5C(&qword_269CDCC08);
          memcpy(v245, v246, *(void *)(*(void *)(v250 - 8) + 64));
          uint64_t v251 = v245;
          uint64_t v252 = v246;
        }
        else
        {
          uint64_t v372 = v249;
          __dsta = (void *)v247;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v264 = v246[1];
              void *v245 = *v246;
              v245[1] = v264;
              uint64_t v265 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
              goto LABEL_108;
            case 2u:
              uint64_t v266 = *v246;
              unint64_t v267 = v246[1];
              sub_25348A9C8(*v246, v267);
              void *v245 = v266;
              v245[1] = v267;
              uint64_t v268 = v246[3];
              v245[2] = v246[2];
              v245[3] = v268;
              uint64_t v265 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
LABEL_108:
              uint64_t v269 = v246;
              uint64_t v259 = (uint64_t)v245;
              uint64_t v270 = (char *)v245 + v265;
              uint64_t v261 = v269;
              __srcd = (char *)v269 + v265;
              uint64_t v357 = v270;
              uint64_t v271 = sub_253B07160();
              uint64_t v345 = *(void (**)(char *, char *, uint64_t))(*(void *)(v271 - 8) + 16);
              swift_bridgeObjectRetain();
              v345(v357, __srcd, v271);
              uint64_t v9 = v383;
              break;
            case 3u:
              uint64_t v272 = *v246;
              unint64_t v273 = v246[1];
              sub_25348A9C8(*v246, v273);
              void *v245 = v272;
              v245[1] = v273;
              uint64_t v274 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
              uint64_t v275 = v246;
              uint64_t v259 = (uint64_t)v245;
              uint64_t v276 = (char *)v245 + v274;
              uint64_t v261 = v275;
              uint64_t v277 = (char *)v275 + v274;
              uint64_t v278 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v278 - 8) + 16))(v276, v277, v278);
              break;
            default:
              uint64_t v253 = *v246;
              unint64_t v254 = v246[1];
              sub_25348A9C8(*v246, v254);
              void *v245 = v253;
              v245[1] = v254;
              uint64_t v255 = v246[3];
              v245[2] = v246[2];
              v245[3] = v255;
              uint64_t v256 = v246[5];
              v245[4] = v246[4];
              v245[5] = v256;
              uint64_t v257 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
              uint64_t v258 = v246;
              uint64_t v259 = (uint64_t)v245;
              uint64_t v260 = (char *)v245 + v257;
              uint64_t v261 = v258;
              __srcc = (char *)v258 + v257;
              uint64_t v356 = v260;
              uint64_t v262 = sub_253B07160();
              uint64_t v344 = *(void (**)(char *, char *, uint64_t))(*(void *)(v262 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v263 = v262;
              uint64_t v9 = v383;
              v344(v356, __srcc, v263);
              break;
          }
          uint64_t v251 = (void *)v259;
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v259, 0, 1, v372);
          uint64_t v247 = (uint64_t)__dsta;
          uint64_t v252 = v261;
        }
        uint64_t v279 = *(int *)(v247 + 20);
        uint64_t v280 = v247;
        uint64_t v281 = (char *)v251 + v279;
        uint64_t v282 = (uint64_t)v251;
        uint64_t v283 = (char *)v252 + v279;
        uint64_t v284 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v284 - 8) + 16))(v281, v283, v284);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v282, 0, 1, v280);
      }
      uint64_t v285 = v204[12];
      uint64_t v286 = (char *)v202 + v285;
      uint64_t v287 = (char *)v203 + v285;
      uint64_t v288 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v288 - 8) + 16))(v286, v287, v288);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v202, 0, 1, (uint64_t)v204);
      uint64_t v3 = v387;
    }
    uint64_t v289 = *(int *)(v385 + 24);
    uint64_t v290 = (char *)v9 + v289;
    uint64_t v291 = (char *)v384 + v289;
    uint64_t v292 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v292 - 8) + 16))(v290, v291, v292);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v385);
  }
  uint64_t v293 = v3[7];
  uint64_t v294 = (void *)((char *)v5 + v293);
  uint64_t v295 = (void *)((char *)a2 + v293);
  uint64_t v296 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v295, 1, v296))
  {
    uint64_t v297 = sub_253462A5C(&qword_26B249528);
    memcpy(v294, v295, *(void *)(*(void *)(v297 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v294 = *(_DWORD *)v295;
    uint64_t v298 = v295[2];
    v294[1] = v295[1];
    v294[2] = v298;
    uint64_t v299 = *(int *)(v296 + 24);
    uint64_t v300 = (char *)v294 + v299;
    uint64_t v301 = (char *)v295 + v299;
    uint64_t v302 = sub_253B07160();
    uint64_t v303 = *(void (**)(char *, char *, uint64_t))(*(void *)(v302 - 8) + 16);
    swift_bridgeObjectRetain();
    v303(v300, v301, v302);
    uint64_t v3 = v387;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v294, 0, 1, v296);
  }
  uint64_t v304 = v3[8];
  uint64_t v305 = (void *)((char *)v5 + v304);
  uint64_t v306 = (void *)((char *)a2 + v304);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v304, 1, v296))
  {
    uint64_t v307 = sub_253462A5C(&qword_26B249528);
    memcpy(v305, v306, *(void *)(*(void *)(v307 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v305 = *(_DWORD *)v306;
    uint64_t v308 = v306[2];
    v305[1] = v306[1];
    v305[2] = v308;
    uint64_t v309 = *(int *)(v296 + 24);
    uint64_t v310 = (char *)v305 + v309;
    uint64_t v311 = (char *)v306 + v309;
    uint64_t v312 = sub_253B07160();
    uint64_t v313 = *(void (**)(char *, char *, uint64_t))(*(void *)(v312 - 8) + 16);
    swift_bridgeObjectRetain();
    v313(v310, v311, v312);
    uint64_t v3 = v387;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v305, 0, 1, v296);
  }
  uint64_t v314 = v3[9];
  uint64_t v315 = (void *)((char *)v5 + v314);
  uint64_t v316 = (void *)((char *)a2 + v314);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v314, 1, v296))
  {
    uint64_t v317 = sub_253462A5C(&qword_26B249528);
    memcpy(v315, v316, *(void *)(*(void *)(v317 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v315 = *(_DWORD *)v316;
    uint64_t v318 = v316[2];
    v315[1] = v316[1];
    v315[2] = v318;
    uint64_t v319 = *(int *)(v296 + 24);
    uint64_t v320 = (char *)v315 + v319;
    uint64_t v321 = (char *)v316 + v319;
    uint64_t v322 = sub_253B07160();
    long long v323 = *(void (**)(char *, char *, uint64_t))(*(void *)(v322 - 8) + 16);
    swift_bridgeObjectRetain();
    v323(v320, v321, v322);
    uint64_t v3 = v387;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v315, 0, 1, v296);
  }
  uint64_t v324 = v3[10];
  uint64_t v325 = (void *)((char *)v5 + v324);
  uint64_t v326 = (void *)((char *)a2 + v324);
  uint64_t v327 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v326, 1, v327))
  {
    uint64_t v328 = sub_253462A5C(&qword_269CE0448);
    memcpy(v325, v326, *(void *)(*(void *)(v328 - 8) + 64));
  }
  else
  {
    uint64_t v329 = v326[1];
    *uint64_t v325 = *v326;
    v325[1] = v329;
    uint64_t v330 = v326[3];
    v325[2] = v326[2];
    v325[3] = v330;
    uint64_t v331 = *(int *)(v327 + 24);
    uint64_t v332 = (char *)v325 + v331;
    uint64_t v386 = (char *)v326 + v331;
    uint64_t v333 = sub_253B07160();
    uint64_t v334 = *(void (**)(char *, char *, uint64_t))(*(void *)(v333 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v334(v332, v386, v333);
    uint64_t v3 = v387;
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v325, 0, 1, v327);
  }
  uint64_t v335 = v3[11];
  uint64_t v336 = (char *)v5 + v335;
  uint64_t v337 = (char *)a2 + v335;
  uint64_t v338 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v338 - 8) + 16))(v336, v337, v338);
  return v5;
}

void *assignWithCopy for TranscriptProtoStatementResult(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[2] = v4[2];
  v5[3] = v4[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)((char *)v5 + v6);
  uint64_t v8 = (void *)((char *)v4 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v16 = type metadata accessor for TranscriptProtoStatementOutcome(0);
    int v17 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v16);
    int v18 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v16);
    if (v17)
    {
      if (!v18)
      {
        uint64_t v19 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v19))
        {
          uint64_t v20 = sub_253462A5C(&qword_269CE04B0);
          memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
LABEL_348:
          uint64_t v755 = *(int *)(v16 + 20);
          uint64_t v756 = (char *)v7 + v755;
          unint64_t v757 = (char *)v8 + v755;
          uint64_t v758 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v758 - 8) + 16))(v756, v757, v758);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v16);
          goto LABEL_361;
        }
        uint64_t v1183 = (void *)v19;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v1191 = a3;
            v1277 = v5;
            *uint64_t v7 = *v8;
            uint64_t v105 = type metadata accessor for TranscriptProtoActionConfirmation(0);
            uint64_t v106 = *(int *)(v105 + 20);
            uint64_t v107 = v7;
            uint64_t v108 = (void *)((char *)v7 + v106);
            __srcf = v8;
            uint64_t v109 = (void *)((char *)v8 + v106);
            uint64_t v110 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v109, 1, v110))
            {
              uint64_t v111 = sub_253462A5C(&qword_269CE0480);
              memcpy(v108, v109, *(void *)(*(void *)(v111 - 8) + 64));
            }
            else
            {
              uint64_t v228 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v109, 1, v228))
              {
                uint64_t v229 = sub_253462A5C(&qword_269CE0478);
                memcpy(v108, v109, *(void *)(*(void *)(v229 - 8) + 64));
              }
              else
              {
                __dstb = (void *)v228;
                v1221 = (void *)v105;
                uint64_t v1249 = v9;
                *uint64_t v108 = *v109;
                v108[1] = v109[1];
                *((unsigned char *)v108 + 16) = *((unsigned char *)v109 + 16);
                uint64_t v1132 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
                uint64_t v343 = *(int *)(v1132 + 24);
                uint64_t v344 = (char *)v108 + v343;
                uint64_t v345 = (char *)v109 + v343;
                uint64_t v346 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
                swift_bridgeObjectRetain();
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v345, 1, v346))
                {
                  uint64_t v347 = sub_253462A5C(&qword_269CE0470);
                  memcpy(v344, v345, *(void *)(*(void *)(v347 - 8) + 64));
                }
                else
                {
                  unsigned char *v344 = *v345;
                  uint64_t v453 = *(int *)(v346 + 20);
                  uint64_t v454 = &v344[v453];
                  uint64_t v455 = &v345[v453];
                  uint64_t v456 = sub_253B07160();
                  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v456 - 8) + 16))(v454, v455, v456);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v344, 0, 1, v346);
                }
                uint64_t v457 = *(int *)(v1132 + 28);
                uint64_t v458 = (char *)v108 + v457;
                uint64_t v459 = (char *)v109 + v457;
                uint64_t v460 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v460 - 8) + 16))(v458, v459, v460);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v108, 0, 1, (uint64_t)__dstb);
                uint64_t v105 = (uint64_t)v1221;
                uint64_t v9 = v1249;
              }
              uint64_t v461 = *(int *)(v110 + 20);
              uint64_t v462 = (char *)v108 + v461;
              uint64_t v463 = (char *)v109 + v461;
              uint64_t v464 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v464 - 8) + 16))(v462, v463, v464);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v108, 0, 1, v110);
            }
            uint64_t v465 = *(int *)(v105 + 24);
            uint64_t v7 = v107;
            uint64_t v466 = (char *)v107 + v465;
            uint64_t v8 = __srcf;
            uint64_t v467 = (char *)__srcf + v465;
            uint64_t v468 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v468 - 8) + 16))(v466, v467, v468);
            uint64_t v5 = v1277;
            a3 = v1191;
            goto LABEL_347;
          case 2u:
            *uint64_t v7 = *v8;
            v7[1] = v8[1];
            uint64_t v112 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
            goto LABEL_75;
          case 3u:
            v1278 = v5;
            uint64_t v113 = v9;
            *uint64_t v7 = *v8;
            uint64_t v114 = v7;
            v7[1] = v8[1];
            uint64_t v115 = v8[2];
            *((unsigned char *)v7 + 24) = *((unsigned char *)v8 + 24);
            v7[2] = v115;
            uint64_t v116 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
            goto LABEL_64;
          case 4u:
            *uint64_t v7 = *v8;
            v7[1] = v8[1];
            v7[2] = v8[2];
            uint64_t v117 = v8[3];
            *((unsigned char *)v7 + 32) = *((unsigned char *)v8 + 32);
            v7[3] = v117;
            uint64_t v118 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
            goto LABEL_71;
          case 5u:
            v1278 = v5;
            uint64_t v113 = v9;
            *uint64_t v7 = *v8;
            uint64_t v114 = v7;
            v7[1] = v8[1];
            *((unsigned char *)v7 + 16) = *((unsigned char *)v8 + 16);
            uint64_t v116 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_64:
            uint64_t v119 = v116;
            uint64_t v120 = *(int *)(v116 + 24);
            uint64_t v121 = v114;
            uint64_t v122 = v8;
            uint64_t v123 = (char *)v114 + v120;
            __srcg = v122;
            uint64_t v124 = (char *)v122 + v120;
            uint64_t v125 = sub_253B08E50();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v124, 1, v125))
            {
              uint64_t v126 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v123, v124, *(void *)(*(void *)(v126 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 16))(v123, v124, v125);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v123, 0, 1, v125);
            }
            uint64_t v175 = *(int *)(v119 + 28);
            goto LABEL_119;
          case 6u:
            v1278 = v5;
            uint64_t v113 = v9;
            *uint64_t v7 = *v8;
            v7[1] = v8[1];
            uint64_t v127 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
            uint64_t v128 = *(int *)(v127 + 20);
            uint64_t v121 = v7;
            uint64_t v129 = v8;
            uint64_t v130 = (char *)v7 + v128;
            __srcg = v129;
            uint64_t v131 = (char *)v129 + v128;
            uint64_t v132 = sub_253B08E50();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v131, 1, v132))
            {
              uint64_t v133 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v130, v131, *(void *)(*(void *)(v133 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 16))(v130, v131, v132);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v130, 0, 1, v132);
            }
            uint64_t v175 = *(int *)(v127 + 24);
LABEL_119:
            uint64_t v7 = v121;
            uint64_t v230 = (char *)v121 + v175;
            uint64_t v8 = __srcg;
            uint64_t v231 = (char *)__srcg + v175;
            uint64_t v232 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v232 - 8) + 16))(v230, v231, v232);
            uint64_t v9 = v113;
            uint64_t v5 = v1278;
            goto LABEL_347;
          case 7u:
            uint64_t v134 = v5;
            uint64_t v135 = v9;
            uint64_t v136 = a3;
            uint64_t v137 = v134;
            uint64_t v138 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v138))
            {
              uint64_t v139 = sub_253462A5C(&qword_269CE0498);
              memcpy(v7, v8, *(void *)(*(void *)(v139 - 8) + 64));
              goto LABEL_346;
            }
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload != 2)
            {
              if (EnumCaseMultiPayload == 1)
              {
                *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
                uint64_t v414 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
                uint64_t v415 = (char *)v7 + v414;
                uint64_t v416 = (char *)v8 + v414;
                uint64_t v417 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v417 - 8) + 16))(v415, v416, v417);
              }
              else
              {
                if (EnumCaseMultiPayload)
                {
                  memcpy(v7, v8, *(void *)(*(void *)(v138 - 8) + 64));
                  goto LABEL_345;
                }
                *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
                uint64_t v234 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
                uint64_t v235 = (char *)v7 + v234;
                uint64_t v236 = (char *)v8 + v234;
                uint64_t v237 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v237 - 8) + 16))(v235, v236, v237);
              }
LABEL_344:
              swift_storeEnumTagMultiPayload();
LABEL_345:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v138);
LABEL_346:
              uint64_t v750 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
              unint64_t v751 = (char *)v7 + v750;
              uint64_t v752 = (char *)v8 + v750;
              uint64_t v753 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v753 - 8) + 16))(v751, v752, v753);
              uint64_t v754 = v137;
              a3 = v136;
              uint64_t v9 = v135;
              uint64_t v5 = v754;
LABEL_347:
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, (uint64_t)v1183);
              goto LABEL_348;
            }
            long long v411 = v8;
            uint64_t v412 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v411, 1, v412))
            {
              uint64_t v413 = sub_253462A5C(&qword_269CE0490);
              memcpy(v7, v411, *(void *)(*(void *)(v413 - 8) + 64));
              uint64_t v8 = v411;
LABEL_343:
              uint64_t v746 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
              unint64_t v747 = (char *)v7 + v746;
              uint64_t v748 = (char *)v8 + v746;
              uint64_t v749 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v749 - 8) + 16))(v747, v748, v749);
              goto LABEL_344;
            }
            v1228 = v7;
            __srcq = v411;
            int v523 = swift_getEnumCaseMultiPayload();
            if (v523 == 1)
            {
              uint64_t v593 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__srcq, 1, v593))
              {
                uint64_t v594 = sub_253462A5C(&qword_269CE0488);
                memcpy(v7, __srcq, *(void *)(*(void *)(v594 - 8) + 64));
              }
              else
              {
                *(unsigned char *)uint64_t v7 = *__srcq;
                uint64_t v739 = *(int *)(v593 + 20);
                v1296 = (char *)v7 + v739;
                uint64_t v740 = &__srcq[v739];
                uint64_t v741 = sub_253B07160();
                (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v741 - 8) + 16))(v1296, v740, v741);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1228, 0, 1, v593);
              }
              uint64_t v742 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
              uint64_t v743 = (char *)v1228 + v742;
              int v744 = &__srcq[v742];
              uint64_t v745 = sub_253B07160();
              (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v745 - 8) + 16))(v743, v744, v745);
            }
            else
            {
              if (v523)
              {
                memcpy(v7, v411, *(void *)(*(void *)(v412 - 8) + 64));
LABEL_342:
                uint64_t v7 = v1228;
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1228, 0, 1, v412);
                uint64_t v8 = __srcq;
                goto LABEL_343;
              }
              *uint64_t v7 = *v411;
              v7[1] = v411[1];
              uint64_t v524 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
              v1254 = (char *)v411 + v524;
              v1290 = (char *)v7 + v524;
              uint64_t v525 = sub_253B07160();
              v1203 = *(void (**)(char *, char *, uint64_t))(*(void *)(v525 - 8) + 16);
              swift_bridgeObjectRetain();
              v1203(v1290, v1254, v525);
            }
            swift_storeEnumTagMultiPayload();
            goto LABEL_342;
          case 8u:
            *uint64_t v7 = *v8;
            v7[1] = v8[1];
            v7[2] = v8[2];
            uint64_t v118 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
LABEL_71:
            v1279 = (char *)v7 + v118;
            v1192 = (char *)v8 + v118;
            uint64_t v1210 = v7;
            uint64_t v140 = sub_253B07160();
            uint64_t v141 = *(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v142 = v140;
            uint64_t v7 = v1210;
            v141(v1279, v1192, v142);
            goto LABEL_347;
          case 9u:
            uint64_t v143 = v9;
            uint64_t v144 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v144))
            {
              uint64_t v145 = sub_253462A5C(&qword_269CE04A8);
              memcpy(v7, v8, *(void *)(*(void *)(v145 - 8) + 64));
            }
            else
            {
              uint64_t v238 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v238))
              {
                uint64_t v239 = sub_253462A5C(&qword_269CE04A0);
                memcpy(v7, v8, *(void *)(*(void *)(v239 - 8) + 64));
              }
              else
              {
                uint64_t v348 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
                __srcn = v8;
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 16, v348))
                {
                  memcpy(v7, v8, *(void *)(*(void *)(v238 - 8) + 64));
                }
                else
                {
                  *uint64_t v7 = *v8;
                  v7[1] = v8[1];
                  v7[2] = v8[2];
                  v7[3] = v8[3];
                  v7[4] = v8[4];
                  uint64_t v469 = *(int *)(v348 + 28);
                  v1253 = (char *)v7 + v469;
                  uint64_t v470 = (char *)v8 + v469;
                  v1202 = a3;
                  uint64_t v471 = sub_253B07160();
                  __dstj = *(void (**)(char *, char *, uint64_t))(*(void *)(v471 - 8) + 16);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  uint64_t v472 = v471;
                  a3 = v1202;
                  __dstj(v1253, v470, v472);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 16, v348);
                }
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v238);
                uint64_t v8 = __srcn;
              }
              uint64_t v473 = *(int *)(v144 + 20);
              uint64_t v474 = (char *)v7 + v473;
              uint64_t v475 = (char *)v8 + v473;
              uint64_t v476 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v476 - 8) + 16))(v474, v475, v476);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v144);
            }
            uint64_t v477 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
            uint64_t v478 = (char *)v7 + v477;
            uint64_t v479 = (char *)v8 + v477;
            uint64_t v480 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v480 - 8) + 16))(v478, v479, v480);
            uint64_t v9 = v143;
            goto LABEL_347;
          case 0xAu:
            *uint64_t v7 = *v8;
            uint64_t v112 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
LABEL_75:
            uint64_t v146 = *(int *)(v112 + 20);
            uint64_t v1211 = (char *)v8 + v146;
            v1241 = (char *)v7 + v146;
            v1280 = v5;
            uint64_t v147 = v9;
            uint64_t v148 = v8;
            uint64_t v149 = sub_253B07160();
            uint64_t v150 = *(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v151 = v149;
            uint64_t v8 = v148;
            uint64_t v9 = v147;
            uint64_t v5 = v1280;
            v150(v1241, v1211, v151);
            goto LABEL_347;
          default:
            uint64_t v1238 = v9;
            v1272 = v5;
            *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
            *((unsigned char *)v7 + 1) = *((unsigned char *)v8 + 1);
            *((unsigned char *)v7 + 2) = *((unsigned char *)v8 + 2);
            uint64_t v38 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
            uint64_t v39 = v38[7];
            uint64_t v40 = (char *)v7 + v39;
            uint64_t v41 = (char *)v8 + v39;
            uint64_t v42 = sub_253B08E50();
            __srcb = v8;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v41, 1, v42))
            {
              uint64_t v43 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v40, 0, 1, v42);
            }
            uint64_t v223 = v38[8];
            uint64_t v224 = (void *)((char *)v7 + v223);
            uint64_t v225 = (void *)((char *)__srcb + v223);
            uint64_t v226 = type metadata accessor for TranscriptProtoUndoContext(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v225, 1, v226))
            {
              uint64_t v227 = sub_253462A5C(&qword_269CE0450);
              memcpy(v224, v225, *(void *)(*(void *)(v227 - 8) + 64));
            }
            else
            {
              *uint64_t v224 = *v225;
              v224[1] = v225[1];
              v224[2] = v225[2];
              v224[3] = v225[3];
              v224[4] = v225[4];
              v224[5] = v225[5];
              uint64_t v248 = *(int *)(v226 + 28);
              v1131 = (char *)v225 + v248;
              __dsti = (char *)v224 + v248;
              uint64_t v249 = sub_253B07160();
              uint64_t v1123 = *(void (**)(char *, char *, uint64_t))(*(void *)(v249 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1123(__dsti, v1131, v249);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v224, 0, 1, v226);
            }
            uint64_t v250 = v38;
            uint64_t v251 = v38[9];
            uint64_t v252 = v7;
            uint64_t v253 = (void *)((char *)v7 + v251);
            unint64_t v254 = (void *)((char *)__srcb + v251);
            uint64_t v255 = type metadata accessor for TranscriptProtoFollowUpAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v254, 1, v255))
            {
              uint64_t v256 = sub_253462A5C(&qword_269CE0468);
              memcpy(v253, v254, *(void *)(*(void *)(v256 - 8) + 64));
            }
            else
            {
              uint64_t v257 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v254, 1, v257))
              {
                uint64_t v258 = sub_253462A5C(&qword_269CE0460);
                memcpy(v253, v254, *(void *)(*(void *)(v258 - 8) + 64));
              }
              else
              {
                uint64_t v1198 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
                uint64_t v1223 = (void *)v257;
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v254, 1, v1198))
                {
                  uint64_t v400 = sub_253462A5C(&qword_269CE0458);
                  memcpy(v253, v254, *(void *)(*(void *)(v400 - 8) + 64));
                }
                else
                {
                  *uint64_t v253 = *v254;
                  v253[1] = v254[1];
                  uint64_t v481 = v254[2];
                  unint64_t v482 = v254[3];
                  swift_bridgeObjectRetain();
                  sub_25348A9C8(v481, v482);
                  v253[2] = v481;
                  v253[3] = v482;
                  v253[4] = v254[4];
                  uint64_t v483 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                                + 28);
                  uint64_t v484 = (char *)v253 + v483;
                  uint64_t v485 = (char *)v254 + v483;
                  uint64_t v486 = sub_253B07160();
                  uint64_t v487 = v484;
                  uint64_t v257 = (uint64_t)v1223;
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v486 - 8) + 16))(v487, v485, v486);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v253, 0, 1, v1198);
                }
                uint64_t v488 = *(int *)(v257 + 20);
                uint64_t v489 = (char *)v253 + v488;
                uint64_t v490 = (char *)v254 + v488;
                uint64_t v491 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v491 - 8) + 16))(v489, v490, v491);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v253, 0, 1, (uint64_t)v1223);
              }
              uint64_t v492 = *(int *)(v255 + 20);
              uint64_t v493 = (char *)v253 + v492;
              uint64_t v494 = (char *)v254 + v492;
              uint64_t v495 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v495 - 8) + 16))(v493, v494, v495);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v253, 0, 1, v255);
            }
            uint64_t v496 = v250[10];
            uint64_t v7 = v252;
            uint64_t v497 = (void *)((char *)v252 + v496);
            uint64_t v498 = (void *)((char *)__srcb + v496);
            *uint64_t v497 = *v498;
            v497[1] = v498[1];
            uint64_t v499 = v250[11];
            uint64_t v500 = (char *)v252 + v499;
            v1226 = (char *)__srcb + v499;
            uint64_t v501 = sub_253B07160();
            uint64_t v502 = *(void (**)(char *, char *, uint64_t))(*(void *)(v501 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v503 = v501;
            uint64_t v8 = __srcb;
            v502(v500, v1226, v503);
            uint64_t v9 = v1238;
            uint64_t v5 = v1272;
            goto LABEL_347;
        }
      }
LABEL_16:
      uint64_t v23 = sub_253462A5C(&qword_269CE0388);
      memcpy(v7, v8, *(void *)(*(void *)(v23 - 8) + 64));
      goto LABEL_361;
    }
    if (v18)
    {
      sub_2536FA73C();
      goto LABEL_16;
    }
    uint64_t v30 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    int v31 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v30);
    int v32 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v30);
    if (v31)
    {
      if (!v32)
      {
        v1182 = (void *)v30;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            v1193 = a3;
            v1281 = v5;
            *uint64_t v7 = *v8;
            uint64_t v176 = type metadata accessor for TranscriptProtoActionConfirmation(0);
            uint64_t v177 = *(int *)(v176 + 20);
            uint64_t v178 = v7;
            uint64_t v179 = (void *)((char *)v7 + v177);
            __srch = v8;
            uint64_t v180 = (void *)((char *)v8 + v177);
            uint64_t v181 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v180, 1, v181))
            {
              uint64_t v182 = sub_253462A5C(&qword_269CE0480);
              memcpy(v179, v180, *(void *)(*(void *)(v182 - 8) + 64));
            }
            else
            {
              v1220 = (void *)type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v180, 1, (uint64_t)v1220))
              {
                uint64_t v330 = sub_253462A5C(&qword_269CE0478);
                memcpy(v179, v180, *(void *)(*(void *)(v330 - 8) + 64));
              }
              else
              {
                __dstc = (void *)v176;
                uint64_t v1252 = v9;
                v1333 = v4;
                *uint64_t v179 = *v180;
                v179[1] = v180[1];
                *((unsigned char *)v179 + 16) = *((unsigned char *)v180 + 16);
                uint64_t v446 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
                uint64_t v447 = *(int *)(v446 + 24);
                unint64_t v448 = (char *)v179 + v447;
                uint64_t v449 = (char *)v180 + v447;
                uint64_t v450 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
                swift_bridgeObjectRetain();
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v449, 1, v450))
                {
                  uint64_t v451 = sub_253462A5C(&qword_269CE0470);
                  memcpy(v448, v449, *(void *)(*(void *)(v451 - 8) + 64));
                }
                else
                {
                  *unint64_t v448 = *v449;
                  uint64_t v545 = *(int *)(v450 + 20);
                  uint64_t v546 = &v448[v545];
                  uint64_t v547 = &v449[v545];
                  uint64_t v548 = sub_253B07160();
                  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v548 - 8) + 16))(v546, v547, v548);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v448, 0, 1, v450);
                }
                uint64_t v549 = *(int *)(v446 + 28);
                uint64_t v550 = (char *)v179 + v549;
                uint64_t v551 = (char *)v180 + v549;
                uint64_t v552 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v552 - 8) + 16))(v550, v551, v552);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v179, 0, 1, (uint64_t)v1220);
                uint64_t v4 = v1333;
                uint64_t v9 = v1252;
                uint64_t v176 = (uint64_t)__dstc;
              }
              uint64_t v553 = *(int *)(v181 + 20);
              uint64_t v554 = (char *)v179 + v553;
              uint64_t v555 = (char *)v180 + v553;
              uint64_t v556 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v556 - 8) + 16))(v554, v555, v556);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v179, 0, 1, v181);
            }
            a3 = v1193;
            uint64_t v557 = *(int *)(v176 + 24);
            uint64_t v7 = v178;
            uint64_t v558 = (char *)v178 + v557;
            uint64_t v8 = __srch;
            uint64_t v559 = (char *)__srch + v557;
            uint64_t v560 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v560 - 8) + 16))(v558, v559, v560);
            goto LABEL_267;
          case 2u:
            *uint64_t v7 = *v8;
            v7[1] = v8[1];
            uint64_t v183 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
            goto LABEL_111;
          case 3u:
            v1281 = v5;
            uint64_t v184 = v9;
            *uint64_t v7 = *v8;
            uint64_t v185 = v7;
            v7[1] = v8[1];
            uint64_t v186 = v8[2];
            *((unsigned char *)v7 + 24) = *((unsigned char *)v8 + 24);
            v7[2] = v186;
            uint64_t v187 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
            goto LABEL_100;
          case 4u:
            *uint64_t v7 = *v8;
            v7[1] = v8[1];
            v7[2] = v8[2];
            uint64_t v188 = v8[3];
            *((unsigned char *)v7 + 32) = *((unsigned char *)v8 + 32);
            v7[3] = v188;
            uint64_t v189 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
            goto LABEL_107;
          case 5u:
            v1281 = v5;
            uint64_t v184 = v9;
            *uint64_t v7 = *v8;
            uint64_t v185 = v7;
            v7[1] = v8[1];
            *((unsigned char *)v7 + 16) = *((unsigned char *)v8 + 16);
            uint64_t v187 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_100:
            uint64_t v190 = v187;
            uint64_t v191 = *(int *)(v187 + 24);
            uint64_t v192 = v185;
            uint64_t v193 = v8;
            uint64_t v194 = (char *)v185 + v191;
            __srci = v193;
            uint64_t v195 = (char *)v193 + v191;
            uint64_t v196 = sub_253B08E50();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v195, 1, v196))
            {
              uint64_t v197 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v194, v195, *(void *)(*(void *)(v197 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 16))(v194, v195, v196);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v194, 0, 1, v196);
            }
            uint64_t v259 = *(int *)(v190 + 28);
            goto LABEL_167;
          case 6u:
            v1281 = v5;
            uint64_t v184 = v9;
            *uint64_t v7 = *v8;
            v7[1] = v8[1];
            uint64_t v198 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
            uint64_t v199 = *(int *)(v198 + 20);
            uint64_t v192 = v7;
            uint64_t v200 = v8;
            uint64_t v201 = (char *)v7 + v199;
            __srci = v200;
            uint64_t v202 = (char *)v200 + v199;
            uint64_t v203 = sub_253B08E50();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v202, 1, v203))
            {
              uint64_t v204 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v201, v202, *(void *)(*(void *)(v204 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v203 - 8) + 16))(v201, v202, v203);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v201, 0, 1, v203);
            }
            uint64_t v259 = *(int *)(v198 + 24);
LABEL_167:
            uint64_t v7 = v192;
            uint64_t v331 = (char *)v192 + v259;
            uint64_t v8 = __srci;
            uint64_t v332 = (char *)__srci + v259;
            uint64_t v333 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v333 - 8) + 16))(v331, v332, v333);
            uint64_t v9 = v184;
LABEL_267:
            uint64_t v5 = v1281;
            goto LABEL_359;
          case 7u:
            uint64_t v205 = v5;
            uint64_t v206 = v9;
            uint64_t v207 = a3;
            uint64_t v208 = v205;
            uint64_t v209 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v209))
            {
              uint64_t v210 = sub_253462A5C(&qword_269CE0498);
              memcpy(v7, v8, *(void *)(*(void *)(v210 - 8) + 64));
              goto LABEL_358;
            }
            uint64_t v334 = v8;
            int v335 = swift_getEnumCaseMultiPayload();
            if (v335 != 2)
            {
              if (v335 == 1)
              {
                *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
                uint64_t v519 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
                uint64_t v520 = (char *)v7 + v519;
                uint64_t v521 = (char *)v8 + v519;
                uint64_t v522 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v522 - 8) + 16))(v520, v521, v522);
                goto LABEL_247;
              }
              if (!v335)
              {
                *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
                uint64_t v336 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
                uint64_t v337 = (char *)v7 + v336;
                uint64_t v338 = (char *)v8 + v336;
                uint64_t v339 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v339 - 8) + 16))(v337, v338, v339);
LABEL_247:
                swift_storeEnumTagMultiPayload();
                goto LABEL_357;
              }
              memcpy(v7, v8, *(void *)(*(void *)(v209 - 8) + 64));
              goto LABEL_357;
            }
            uint64_t v517 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v334, 1, v517))
            {
              uint64_t v518 = sub_253462A5C(&qword_269CE0490);
              memcpy(v7, v334, *(void *)(*(void *)(v518 - 8) + 64));
LABEL_356:
              uint64_t v766 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
              uint64_t v767 = (char *)v7 + v766;
              uint64_t v8 = v334;
              uint64_t v768 = (char *)v334 + v766;
              uint64_t v769 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v769 - 8) + 16))(v767, v768, v769);
              swift_storeEnumTagMultiPayload();
LABEL_357:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v209);
LABEL_358:
              a3 = v207;
              uint64_t v770 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
              uint64_t v771 = (char *)v7 + v770;
              uint64_t v772 = (char *)v8 + v770;
              uint64_t v773 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v773 - 8) + 16))(v771, v772, v773);
              unint64_t v774 = v208;
              uint64_t v9 = v206;
              uint64_t v5 = v774;
LABEL_359:
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, (uint64_t)v1182);
              goto LABEL_360;
            }
            int v590 = swift_getEnumCaseMultiPayload();
            if (v590 == 1)
            {
              uint64_t v737 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v334, 1, v737))
              {
                uint64_t v738 = sub_253462A5C(&qword_269CE0488);
                memcpy(v7, v334, *(void *)(*(void *)(v738 - 8) + 64));
              }
              else
              {
                *(unsigned char *)uint64_t v7 = *(unsigned char *)v334;
                uint64_t v761 = *(int *)(v737 + 20);
                v1259 = (char *)v334 + v761;
                v1297 = (char *)v7 + v761;
                uint64_t v762 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v762 - 8) + 16))(v1297, v1259, v762);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v737);
              }
              uint64_t v763 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
              uint64_t v764 = (char *)v7 + v763;
              v1298 = (char *)v334 + v763;
              uint64_t v765 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v765 - 8) + 16))(v764, v1298, v765);
            }
            else
            {
              if (v590)
              {
                memcpy(v7, v334, *(void *)(*(void *)(v517 - 8) + 64));
LABEL_355:
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v517);
                goto LABEL_356;
              }
              *uint64_t v7 = *v334;
              v7[1] = v334[1];
              uint64_t v591 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
              v1231 = (char *)v334 + v591;
              v1256 = (char *)v7 + v591;
              uint64_t v592 = sub_253B07160();
              v1204 = *(void (**)(char *, char *, uint64_t))(*(void *)(v592 - 8) + 16);
              swift_bridgeObjectRetain();
              v1204(v1256, v1231, v592);
            }
            swift_storeEnumTagMultiPayload();
            goto LABEL_355;
          case 8u:
            *uint64_t v7 = *v8;
            v7[1] = v8[1];
            v7[2] = v8[2];
            uint64_t v189 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
LABEL_107:
            v1282 = (char *)v7 + v189;
            v1194 = (char *)v8 + v189;
            uint64_t v1212 = v7;
            uint64_t v211 = sub_253B07160();
            uint64_t v212 = *(void (**)(char *, char *, uint64_t))(*(void *)(v211 - 8) + 16);
            uint64_t v1237 = v9;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v213 = v211;
            uint64_t v7 = v1212;
            v212(v1282, v1194, v213);
            goto LABEL_272;
          case 9u:
            uint64_t v214 = v9;
            uint64_t v215 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v215))
            {
              uint64_t v216 = sub_253462A5C(&qword_269CE04A8);
              memcpy(v7, v8, *(void *)(*(void *)(v216 - 8) + 64));
            }
            else
            {
              uint64_t v340 = v7;
              uint64_t v341 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v341))
              {
                uint64_t v342 = sub_253462A5C(&qword_269CE04A0);
                uint64_t v7 = v340;
                memcpy(v340, v8, *(void *)(*(void *)(v342 - 8) + 64));
              }
              else
              {
                v1201 = a3;
                v1334 = v4;
                uint64_t v452 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 16, v452))
                {
                  memcpy(v340, v8, *(void *)(*(void *)(v341 - 8) + 64));
                }
                else
                {
                  *uint64_t v340 = *v8;
                  v340[1] = v8[1];
                  v340[2] = v8[2];
                  v340[3] = v8[3];
                  v340[4] = v8[4];
                  uint64_t v529 = *(int *)(v452 + 28);
                  v1229 = (char *)v8 + v529;
                  v1255 = (char *)v340 + v529;
                  uint64_t v530 = sub_253B07160();
                  v1135 = *(void (**)(char *, char *, uint64_t))(*(void *)(v530 - 8) + 16);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v1135(v1255, v1229, v530);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v340, 0, 16, v452);
                }
                uint64_t v531 = v341;
                uint64_t v7 = v340;
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v340, 0, 1, v531);
                uint64_t v4 = v1334;
                a3 = v1201;
              }
              uint64_t v532 = *(int *)(v215 + 20);
              uint64_t v533 = (char *)v7 + v532;
              uint64_t v534 = (char *)v8 + v532;
              uint64_t v535 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v535 - 8) + 16))(v533, v534, v535);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v215);
            }
            uint64_t v536 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
            int v537 = (char *)v7 + v536;
            long long v538 = (char *)v8 + v536;
            uint64_t v539 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v539 - 8) + 16))(v537, v538, v539);
            uint64_t v9 = v214;
            goto LABEL_359;
          case 0xAu:
            *uint64_t v7 = *v8;
            uint64_t v183 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
LABEL_111:
            uint64_t v217 = *(int *)(v183 + 20);
            uint64_t v1213 = (char *)v8 + v217;
            v1242 = (char *)v7 + v217;
            v1283 = v5;
            uint64_t v218 = v9;
            uint64_t v219 = v8;
            uint64_t v220 = sub_253B07160();
            uint64_t v221 = *(void (**)(char *, char *, uint64_t))(*(void *)(v220 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v222 = v220;
            uint64_t v8 = v219;
            uint64_t v9 = v218;
            uint64_t v5 = v1283;
            v221(v1242, v1213, v222);
            goto LABEL_359;
          default:
            uint64_t v1237 = v9;
            *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
            *((unsigned char *)v7 + 1) = *((unsigned char *)v8 + 1);
            *((unsigned char *)v7 + 2) = *((unsigned char *)v8 + 2);
            __dst = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
            uint64_t v33 = __dst[7];
            uint64_t v34 = (char *)v7 + v33;
            uint64_t v35 = (char *)v8 + v33;
            uint64_t v36 = sub_253B08E50();
            __srca = v8;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v35, 1, v36))
            {
              uint64_t v37 = sub_253462A5C(&qword_269CDCBC8);
              memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v34, 0, 1, v36);
            }
            uint64_t v267 = __dst[8];
            uint64_t v268 = (void *)((char *)v7 + v267);
            uint64_t v269 = (void *)((char *)__srca + v267);
            uint64_t v270 = type metadata accessor for TranscriptProtoUndoContext(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v269, 1, v270))
            {
              uint64_t v271 = sub_253462A5C(&qword_269CE0450);
              memcpy(v268, v269, *(void *)(*(void *)(v271 - 8) + 64));
            }
            else
            {
              *uint64_t v268 = *v269;
              v268[1] = v269[1];
              v268[2] = v269[2];
              v268[3] = v269[3];
              v268[4] = v269[4];
              v268[5] = v269[5];
              uint64_t v401 = *(int *)(v270 + 28);
              uint64_t v1124 = (char *)v269 + v401;
              v1134 = (char *)v268 + v401;
              uint64_t v402 = sub_253B07160();
              uint64_t v1117 = *(void (**)(char *, char *, uint64_t))(*(void *)(v402 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1117(v1134, v1124, v402);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v268, 0, 1, v270);
            }
            uint64_t v403 = __dst[9];
            uint64_t v404 = v7;
            uint64_t v405 = (void *)((char *)v7 + v403);
            uint64_t v406 = (void *)((char *)__srca + v403);
            uint64_t v407 = type metadata accessor for TranscriptProtoFollowUpAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v406, 1, v407))
            {
              uint64_t v408 = sub_253462A5C(&qword_269CE0468);
              memcpy(v405, v406, *(void *)(*(void *)(v408 - 8) + 64));
            }
            else
            {
              uint64_t v409 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v406, 1, v409))
              {
                uint64_t v410 = sub_253462A5C(&qword_269CE0460);
                memcpy(v405, v406, *(void *)(*(void *)(v410 - 8) + 64));
              }
              else
              {
                v1227 = (int *)v409;
                uint64_t v1289 = v407;
                uint64_t v504 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v406, 1, v504))
                {
                  uint64_t v505 = sub_253462A5C(&qword_269CE0458);
                  memcpy(v405, v406, *(void *)(*(void *)(v505 - 8) + 64));
                }
                else
                {
                  *uint64_t v405 = *v406;
                  v405[1] = v406[1];
                  uint64_t v561 = v406[2];
                  unint64_t v562 = v406[3];
                  swift_bridgeObjectRetain();
                  sub_25348A9C8(v561, v562);
                  v405[2] = v561;
                  v405[3] = v562;
                  v405[4] = v406[4];
                  uint64_t v563 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                                + 28);
                  uint64_t v564 = (char *)v405 + v563;
                  uint64_t v565 = (char *)v406 + v563;
                  uint64_t v566 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v566 - 8) + 16))(v564, v565, v566);
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v405, 0, 1, v504);
                }
                uint64_t v567 = v1227[5];
                uint64_t v568 = (char *)v405 + v567;
                uint64_t v569 = (char *)v406 + v567;
                uint64_t v570 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v570 - 8) + 16))(v568, v569, v570);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v405, 0, 1, (uint64_t)v1227);
                uint64_t v407 = v1289;
              }
              uint64_t v571 = *(int *)(v407 + 20);
              uint64_t v572 = (char *)v405 + v571;
              uint64_t v573 = (char *)v406 + v571;
              uint64_t v574 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v574 - 8) + 16))(v572, v573, v574);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v405, 0, 1, v407);
            }
            uint64_t v575 = __dst[10];
            uint64_t v7 = v404;
            uint64_t v576 = (void *)((char *)v404 + v575);
            uint64_t v577 = (void *)((char *)__srca + v575);
            *uint64_t v576 = *v577;
            v576[1] = v577[1];
            uint64_t v578 = __dst[11];
            v1291 = (char *)v404 + v578;
            v1230 = (char *)__srca + v578;
            uint64_t v579 = sub_253B07160();
            uint64_t v580 = *(void (**)(char *, char *, uint64_t))(*(void *)(v579 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v581 = v579;
            uint64_t v8 = __srca;
            v580(v1291, v1230, v581);
LABEL_272:
            uint64_t v9 = v1237;
            goto LABEL_359;
        }
      }
      goto LABEL_30;
    }
    if (v32)
    {
      sub_2536FA73C();
LABEL_30:
      uint64_t v44 = sub_253462A5C(&qword_269CE04B0);
      memcpy(v7, v8, *(void *)(*(void *)(v44 - 8) + 64));
LABEL_360:
      uint64_t v775 = *(int *)(v16 + 20);
      uint64_t v776 = (char *)v7 + v775;
      uint64_t v777 = (char *)v8 + v775;
      uint64_t v778 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v778 - 8) + 24))(v776, v777, v778);
LABEL_361:
      uint64_t v779 = *(int *)(v9 + 20);
      uint64_t v780 = (void *)((char *)v7 + v779);
      uint64_t v781 = (void *)((char *)v8 + v779);
      unint64_t v782 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
      int v783 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v780, 1, (uint64_t)v782);
      int v784 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v781, 1, (uint64_t)v782);
      if (v783)
      {
        if (!v784)
        {
          v1234 = v7;
          uint64_t v1260 = v9;
          v1299 = v5;
          __srcs = v8;
          v1206 = a3;
          void *v780 = *v781;
          uint64_t v785 = v782[5];
          uint64_t v786 = (void *)((char *)v780 + v785);
          uint64_t v787 = (void *)((char *)v781 + v785);
          uint64_t v788 = type metadata accessor for TranscriptProtoResponseDialog(0);
          swift_bridgeObjectRetain();
          v1186 = v782;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v787, 1, v788))
          {
            uint64_t v789 = sub_253462A5C(&qword_269CE04B8);
            memcpy(v786, v787, *(void *)(*(void *)(v789 - 8) + 64));
          }
          else
          {
            void *v786 = *v787;
            v786[1] = v787[1];
            v786[2] = v787[2];
            v786[3] = v787[3];
            v786[4] = v787[4];
            v786[5] = v787[5];
            v786[6] = v787[6];
            v786[7] = v787[7];
            uint64_t v800 = *(int *)(v788 + 32);
            v1335 = v4;
            uint64_t v801 = (char *)v786 + v800;
            uint64_t v1141 = (char *)v787 + v800;
            __dstq = v780;
            long long v1171 = v781;
            uint64_t v802 = sub_253B07160();
            uint64_t v803 = *(void (**)(char *, char *, uint64_t))(*(void *)(v802 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v804 = v801;
            uint64_t v4 = v1335;
            uint64_t v805 = v802;
            uint64_t v781 = v1171;
            v803(v804, v1141, v805);
            uint64_t v780 = __dstq;
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v786, 0, 1, v788);
          }
          uint64_t v806 = v782[6];
          uint64_t v807 = (void *)((char *)v780 + v806);
          uint64_t v808 = (void *)((char *)v781 + v806);
          uint64_t v809 = type metadata accessor for TranscriptProtoResponseVisual(0);
          uint64_t v9 = v1260;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v808, 1, v809))
          {
            uint64_t v810 = sub_253462A5C(&qword_269CE04C8);
            memcpy(v807, v808, *(void *)(*(void *)(v810 - 8) + 64));
          }
          else
          {
            *uint64_t v807 = *v808;
            v807[1] = v808[1];
            uint64_t v811 = *(int *)(v809 + 24);
            uint64_t v812 = (char *)v807 + v811;
            long long v813 = (char *)v808 + v811;
            uint64_t v814 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v813, 1, v814))
            {
              uint64_t v815 = sub_253462A5C(&qword_269CE04C0);
              memcpy(v812, v813, *(void *)(*(void *)(v815 - 8) + 64));
            }
            else
            {
              *uint64_t v812 = *v813;
              uint64_t v831 = *(int *)(v814 + 20);
              uint64_t v832 = &v812[v831];
              v833 = &v813[v831];
              uint64_t v834 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v834 - 8) + 16))(v832, v833, v834);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v812, 0, 1, v814);
            }
            uint64_t v9 = v1260;
            uint64_t v835 = *(int *)(v809 + 28);
            v836 = (char *)v807 + v835;
            uint64_t v837 = (char *)v808 + v835;
            uint64_t v838 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v838 - 8) + 16))(v836, v837, v838);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v807, 0, 1, v809);
            unint64_t v782 = v1186;
          }
          uint64_t v839 = v782[7];
          uint64_t v840 = (void *)((char *)v780 + v839);
          uint64_t v841 = (void *)((char *)v781 + v839);
          *uint64_t v840 = *v841;
          v840[1] = v841[1];
          uint64_t v842 = v782[8];
          v843 = (void *)((char *)v780 + v842);
          uint64_t v844 = (void *)((char *)v781 + v842);
          void *v843 = *v844;
          v843[1] = v844[1];
          *((unsigned char *)v780 + v782[9]) = *((unsigned char *)v781 + v782[9]);
          *((unsigned char *)v780 + v782[10]) = *((unsigned char *)v781 + v782[10]);
          uint64_t v845 = v782[11];
          v846 = (void *)((char *)v780 + v845);
          v847 = (void *)((char *)v781 + v845);
          uint64_t v848 = type metadata accessor for TranscriptProtoUIType(0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v8 = __srcs;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v847, 1, v848))
          {
            uint64_t v849 = sub_253462A5C(&qword_269CE04D0);
            memcpy(v846, v847, *(void *)(*(void *)(v849 - 8) + 64));
          }
          else
          {
            uint64_t v850 = type metadata accessor for TranscriptProtoUitype(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v847, 1, v850))
            {
              uint64_t v851 = sub_253462A5C(&qword_269CDCC08);
              memcpy(v846, v847, *(void *)(*(void *)(v851 - 8) + 64));
              uint64_t v8 = __srcs;
            }
            else
            {
              uint64_t v1142 = v848;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  void *v846 = *v847;
                  v846[1] = v847[1];
                  uint64_t v885 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
                  goto LABEL_402;
                case 2u:
                  uint64_t v886 = *v847;
                  unint64_t v887 = v847[1];
                  sub_25348A9C8(*v847, v887);
                  void *v846 = v886;
                  v846[1] = v887;
                  v846[2] = v847[2];
                  v846[3] = v847[3];
                  uint64_t v885 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
LABEL_402:
                  v1127 = (char *)v846 + v885;
                  v888 = (char *)v847 + v885;
                  __dsts = v780;
                  uint64_t v1175 = v781;
                  uint64_t v889 = sub_253B07160();
                  uint64_t v890 = *(void (**)(char *, char *, uint64_t))(*(void *)(v889 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v891 = v888;
                  uint64_t v9 = v1260;
                  uint64_t v892 = v889;
                  uint64_t v781 = v1175;
                  v890(v1127, v891, v892);
                  uint64_t v780 = __dsts;
                  break;
                case 3u:
                  uint64_t v893 = *v847;
                  unint64_t v894 = v847[1];
                  sub_25348A9C8(*v847, v894);
                  void *v846 = v893;
                  v846[1] = v894;
                  uint64_t v895 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
                  v896 = (char *)v846 + v895;
                  v897 = (char *)v847 + v895;
                  uint64_t v898 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v898 - 8) + 16))(v896, v897, v898);
                  break;
                default:
                  uint64_t v852 = *v847;
                  unint64_t v853 = v847[1];
                  sub_25348A9C8(*v847, v853);
                  void *v846 = v852;
                  v846[1] = v853;
                  v846[2] = v847[2];
                  v846[3] = v847[3];
                  v846[4] = v847[4];
                  v846[5] = v847[5];
                  uint64_t v854 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
                  __dstr = (char *)v846 + v854;
                  v1126 = (char *)v847 + v854;
                  uint64_t v855 = sub_253B07160();
                  v1173 = v781;
                  uint64_t v856 = v780;
                  uint64_t v857 = *(void (**)(char *, char *, uint64_t))(*(void *)(v855 - 8) + 16);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v857(__dstr, v1126, v855);
                  uint64_t v780 = v856;
                  uint64_t v781 = v1173;
                  uint64_t v9 = v1260;
                  break;
              }
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v846, 0, 1, v850);
              uint64_t v8 = __srcs;
              uint64_t v848 = v1142;
            }
            uint64_t v899 = *(int *)(v848 + 20);
            uint64_t v900 = v848;
            uint64_t v901 = (char *)v846 + v899;
            uint64_t v902 = (char *)v847 + v899;
            uint64_t v903 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v903 - 8) + 16))(v901, v902, v903);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v846, 0, 1, v900);
          }
          uint64_t v904 = v1186[12];
          v905 = (char *)v780 + v904;
          uint64_t v906 = (char *)v781 + v904;
          uint64_t v907 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v907 - 8) + 16))(v905, v906, v907);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v780, 0, 1, (uint64_t)v1186);
          uint64_t v5 = v1299;
          a3 = v1206;
          uint64_t v7 = v1234;
          goto LABEL_453;
        }
        goto LABEL_367;
      }
      if (v784)
      {
        sub_2536FA73C();
LABEL_367:
        uint64_t v790 = sub_253462A5C(&qword_269CE0378);
        memcpy(v780, v781, *(void *)(*(void *)(v790 - 8) + 64));
LABEL_453:
        uint64_t v1031 = *(int *)(v9 + 24);
        uint64_t v1032 = (char *)v7 + v1031;
        v1033 = (char *)v8 + v1031;
        uint64_t v1034 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v1034 - 8) + 24))(v1032, v1033, v1034);
        goto LABEL_454;
      }
      v1300 = v5;
      __srct = v8;
      v1207 = a3;
      v1235 = v7;
      void *v780 = *v781;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v791 = v782[5];
      uint64_t v792 = (void *)((char *)v780 + v791);
      uint64_t v793 = (void *)((char *)v781 + v791);
      uint64_t v794 = type metadata accessor for TranscriptProtoResponseDialog(0);
      int v795 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v792, 1, v794);
      int v796 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v793, 1, v794);
      if (v795)
      {
        if (!v796)
        {
          void *v792 = *v793;
          v792[1] = v793[1];
          v792[2] = v793[2];
          v792[3] = v793[3];
          v792[4] = v793[4];
          v792[5] = v793[5];
          v792[6] = v793[6];
          v792[7] = v793[7];
          uint64_t v797 = *(int *)(v794 + 32);
          uint64_t v1170 = (char *)v792 + v797;
          uint64_t v1140 = (char *)v793 + v797;
          uint64_t v798 = sub_253B07160();
          __dstp = v780;
          uint64_t v799 = *(void (**)(char *, char *, uint64_t))(*(void *)(v798 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v799(v1170, v1140, v798);
          uint64_t v780 = __dstp;
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v792, 0, 1, v794);
          goto LABEL_379;
        }
      }
      else
      {
        if (!v796)
        {
          void *v792 = *v793;
          v792[1] = v793[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v792[2] = v793[2];
          v792[3] = v793[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v792[4] = v793[4];
          v792[5] = v793[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v792[6] = v793[6];
          v792[7] = v793[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v858 = *(int *)(v794 + 32);
          uint64_t v859 = (char *)v792 + v858;
          v860 = v782;
          v861 = (char *)v793 + v858;
          uint64_t v862 = sub_253B07160();
          uint64_t v863 = v861;
          unint64_t v782 = v860;
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v862 - 8) + 24))(v859, v863, v862);
LABEL_379:
          uint64_t v817 = v782[6];
          uint64_t v818 = (void *)((char *)v780 + v817);
          v819 = (void *)((char *)v781 + v817);
          uint64_t v820 = type metadata accessor for TranscriptProtoResponseVisual(0);
          int v821 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v818, 1, v820);
          uint64_t v1261 = v820;
          int v822 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v819, 1, v820);
          uint64_t v7 = v1235;
          uint64_t v8 = __srct;
          if (v821)
          {
            if (!v822)
            {
              uint64_t v1172 = v781;
              uint64_t v1187 = v782;
              uint64_t v823 = v780;
              uint64_t v824 = v9;
              *uint64_t v818 = *v819;
              v818[1] = v819[1];
              uint64_t v825 = *(int *)(v1261 + 24);
              uint64_t v826 = (char *)v818 + v825;
              uint64_t v827 = (char *)v819 + v825;
              uint64_t v828 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v827, 1, v828))
              {
                uint64_t v829 = sub_253462A5C(&qword_269CE04C0);
                memcpy(v826, v827, *(void *)(*(void *)(v829 - 8) + 64));
              }
              else
              {
                *uint64_t v826 = *v827;
                uint64_t v877 = *(int *)(v828 + 20);
                uint64_t v878 = &v826[v877];
                v879 = &v827[v877];
                uint64_t v880 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v880 - 8) + 16))(v878, v879, v880);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v826, 0, 1, v828);
              }
              uint64_t v9 = v824;
              uint64_t v7 = v1235;
              uint64_t v881 = *(int *)(v1261 + 28);
              uint64_t v882 = (char *)v818 + v881;
              uint64_t v883 = (char *)v819 + v881;
              uint64_t v884 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v884 - 8) + 16))(v882, v883, v884);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v818, 0, 1, v1261);
              uint64_t v8 = __srct;
              uint64_t v780 = v823;
              uint64_t v781 = v1172;
              unint64_t v782 = v1187;
LABEL_411:
              uint64_t v913 = v782[7];
              long long v914 = (void *)((char *)v780 + v913);
              uint64_t v915 = (void *)((char *)v781 + v913);
              *long long v914 = *v915;
              v914[1] = v915[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              uint64_t v916 = v782[8];
              uint64_t v917 = (void *)((char *)v780 + v916);
              uint64_t v918 = (void *)((char *)v781 + v916);
              *uint64_t v917 = *v918;
              v917[1] = v918[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *((unsigned char *)v780 + v782[9]) = *((unsigned char *)v781 + v782[9]);
              *((unsigned char *)v780 + v782[10]) = *((unsigned char *)v781 + v782[10]);
              uint64_t v919 = v782[11];
              uint64_t v920 = (uint64_t)v780 + v919;
              uint64_t v921 = (void *)((char *)v781 + v919);
              uint64_t v922 = type metadata accessor for TranscriptProtoUIType(0);
              v1143 = (void *)v920;
              LODWORD(v920) = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v920, 1, v922);
              uint64_t v1128 = v922;
              int v923 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v921, 1, v922);
              if (v920)
              {
                if (v923)
                {
                  size_t v924 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE04D0) - 8) + 64);
                  uint64_t v925 = v1143;
LABEL_416:
                  memcpy(v925, v921, v924);
LABEL_452:
                  uint64_t v1027 = v782[12];
                  uint64_t v1028 = (char *)v780 + v1027;
                  v1029 = (char *)v781 + v1027;
                  uint64_t v1030 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v1030 - 8) + 24))(v1028, v1029, v1030);
                  uint64_t v5 = v1300;
                  a3 = v1207;
                  goto LABEL_453;
                }
                uint64_t v926 = type metadata accessor for TranscriptProtoUitype(0);
                uint64_t v1188 = v782;
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v921, 1, v926))
                {
                  uint64_t v927 = sub_253462A5C(&qword_269CDCC08);
                  memcpy(v1143, v921, *(void *)(*(void *)(v927 - 8) + 64));
                  uint64_t v8 = __srct;
                }
                else
                {
                  uint64_t v1176 = v921;
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 1u:
                      void *v1143 = *v921;
                      v1143[1] = v921[1];
                      uint64_t v950 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
                      uint64_t v951 = (char *)v1143 + v950;
                      uint64_t v1264 = v9;
                      uint64_t v952 = (char *)v1176 + v950;
                      uint64_t v953 = sub_253B07160();
                      __dstf = v780;
                      uint64_t v1120 = *(void (**)(char *, char *, uint64_t))(*(void *)(v953 - 8) + 16);
                      uint64_t v940 = v781;
                      swift_bridgeObjectRetain();
                      uint64_t v954 = v952;
                      uint64_t v9 = v1264;
                      v1120(v951, v954, v953);
                      goto LABEL_432;
                    case 2u:
                      uint64_t v955 = *v921;
                      unint64_t v956 = v921[1];
                      sub_25348A9C8(*v921, v956);
                      void *v1143 = v955;
                      v1143[1] = v956;
                      v1143[2] = v921[2];
                      v1143[3] = v921[3];
                      uint64_t v957 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
                      v1121 = (char *)v1143 + v957;
                      uint64_t v1265 = v9;
                      uint64_t v958 = (char *)v921 + v957;
                      uint64_t v959 = sub_253B07160();
                      __dstf = v780;
                      v960 = *(void (**)(char *, char *, uint64_t))(*(void *)(v959 - 8) + 16);
                      uint64_t v940 = v781;
                      swift_bridgeObjectRetain();
                      v961 = v958;
                      uint64_t v9 = v1265;
                      v960(v1121, v961, v959);
                      goto LABEL_432;
                    case 3u:
                      uint64_t v962 = *v921;
                      unint64_t v963 = v921[1];
                      sub_25348A9C8(*v921, v963);
                      void *v1143 = v962;
                      v1143[1] = v963;
                      uint64_t v964 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
                      uint64_t v965 = (char *)v1143 + v964;
                      uint64_t v966 = (char *)v921 + v964;
                      uint64_t v967 = sub_253B07160();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v967 - 8) + 16))(v965, v966, v967);
                      goto LABEL_434;
                    default:
                      uint64_t v935 = *v921;
                      unint64_t v936 = v921[1];
                      sub_25348A9C8(*v921, v936);
                      void *v1143 = v935;
                      v1143[1] = v936;
                      v1143[2] = v921[2];
                      v1143[3] = v921[3];
                      v1143[4] = v921[4];
                      v1143[5] = v921[5];
                      uint64_t v937 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
                      uint64_t v1119 = (char *)v1143 + v937;
                      uint64_t v938 = (char *)v921 + v937;
                      uint64_t v1262 = v9;
                      uint64_t v939 = sub_253B07160();
                      __dstf = v780;
                      uint64_t v1114 = *(void (**)(char *, char *, uint64_t))(*(void *)(v939 - 8) + 16);
                      uint64_t v940 = v781;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      uint64_t v941 = v939;
                      uint64_t v9 = v1262;
                      v1114(v1119, v938, v941);
LABEL_432:
                      uint64_t v781 = v940;
                      uint64_t v780 = __dstf;
LABEL_434:
                      swift_storeEnumTagMultiPayload();
                      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1143, 0, 1, v926);
                      uint64_t v7 = v1235;
                      uint64_t v8 = __srct;
                      uint64_t v921 = v1176;
                      break;
                  }
                }
                uint64_t v968 = *(int *)(v922 + 20);
                v1266 = (char *)v1143 + v968;
                uint64_t v969 = (char *)v921 + v968;
                uint64_t v970 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v970 - 8) + 16))(v1266, v969, v970);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1143, 0, 1, v922);
LABEL_451:
                unint64_t v782 = v1188;
                goto LABEL_452;
              }
              if (v923)
              {
                sub_2536FA73C();
                size_t v924 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE04D0) - 8) + 64);
                uint64_t v925 = v1143;
                goto LABEL_416;
              }
              uint64_t v928 = type metadata accessor for TranscriptProtoUitype(0);
              int v929 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1143, 1, v928);
              uint64_t v1118 = v928;
              int v930 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v921, 1, v928);
              uint64_t v1188 = v782;
              if (v929)
              {
                if (!v930)
                {
                  v1177 = v921;
                  uint64_t v942 = v928;
                  uint64_t v932 = v1143;
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 1u:
                      void *v1143 = *v1177;
                      v1143[1] = v1177[1];
                      uint64_t v984 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
                      v1116 = (char *)v1143 + v984;
                      uint64_t v1268 = v9;
                      v985 = (char *)v1177 + v984;
                      goto LABEL_442;
                    case 2u:
                      uint64_t v986 = *v1177;
                      unint64_t v987 = v1177[1];
                      sub_25348A9C8(*v1177, v987);
                      void *v1143 = v986;
                      v1143[1] = v987;
                      v1143[2] = v1177[2];
                      v1143[3] = v1177[3];
                      uint64_t v988 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
                      v1116 = (char *)v1143 + v988;
                      uint64_t v1268 = v9;
                      v985 = (char *)v1177 + v988;
LABEL_442:
                      uint64_t v989 = sub_253B07160();
                      __dstg = v780;
                      v990 = *(void (**)(char *, char *, uint64_t))(*(void *)(v989 - 8) + 16);
                      swift_bridgeObjectRetain();
                      uint64_t v991 = v985;
                      uint64_t v992 = v989;
                      uint64_t v7 = v1235;
                      uint64_t v9 = v1268;
                      v990(v1116, v991, v992);
                      goto LABEL_443;
                    case 3u:
                      uint64_t v993 = *v1177;
                      unint64_t v994 = v1177[1];
                      sub_25348A9C8(*v1177, v994);
                      void *v1143 = v993;
                      v1143[1] = v994;
                      uint64_t v995 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
                      uint64_t v996 = (char *)v1143 + v995;
                      uint64_t v997 = (char *)v1177 + v995;
                      uint64_t v942 = v1118;
                      uint64_t v998 = sub_253B07160();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v998 - 8) + 16))(v996, v997, v998);
                      goto LABEL_445;
                    default:
                      uint64_t v943 = *v1177;
                      unint64_t v944 = v1177[1];
                      sub_25348A9C8(*v1177, v944);
                      void *v1143 = v943;
                      v1143[1] = v944;
                      v1143[2] = v1177[2];
                      v1143[3] = v1177[3];
                      v1143[4] = v1177[4];
                      v1143[5] = v1177[5];
                      uint64_t v945 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
                      v1115 = (char *)v1143 + v945;
                      uint64_t v946 = (char *)v1177 + v945;
                      uint64_t v1263 = v9;
                      uint64_t v947 = sub_253B07160();
                      __dstg = v780;
                      uint64_t v1113 = *(void (**)(char *, char *, uint64_t))(*(void *)(v947 - 8) + 16);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      uint64_t v948 = v946;
                      uint64_t v949 = v947;
                      uint64_t v7 = v1235;
                      uint64_t v9 = v1263;
                      v1113(v1115, v948, v949);
LABEL_443:
                      uint64_t v780 = __dstg;
LABEL_445:
                      swift_storeEnumTagMultiPayload();
                      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1143, 0, 1, v942);
                      uint64_t v8 = __srct;
                      uint64_t v921 = v1177;
                      break;
                  }
                  goto LABEL_450;
                }
                size_t v931 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCC08) - 8) + 64);
                uint64_t v932 = v1143;
                v933 = v1143;
                uint64_t v934 = v921;
              }
              else
              {
                if (!v930)
                {
                  uint64_t v932 = v1143;
                  if (v1300 != v4)
                  {
                    sub_2536FA73C();
                    switch(swift_getEnumCaseMultiPayload())
                    {
                      case 1u:
                        void *v1143 = *v921;
                        v1143[1] = v921[1];
                        uint64_t v999 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
                        v1269 = (char *)v1143 + v999;
                        uint64_t v1179 = v781;
                        uint64_t v1000 = v9;
                        v1001 = (char *)v921 + v999;
                        uint64_t v1002 = sub_253B07160();
                        v1003 = v780;
                        uint64_t v1004 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1002 - 8) + 16);
                        swift_bridgeObjectRetain();
                        v1005 = v1001;
                        uint64_t v9 = v1000;
                        uint64_t v781 = v1179;
                        uint64_t v1006 = v1002;
                        uint64_t v8 = __srct;
                        v1004(v1269, v1005, v1006);
                        uint64_t v780 = v1003;
                        uint64_t v7 = v1235;
                        break;
                      case 2u:
                        uint64_t v1007 = *v921;
                        unint64_t v1008 = v921[1];
                        sub_25348A9C8(*v921, v1008);
                        void *v1143 = v1007;
                        v1143[1] = v1008;
                        v1143[2] = v921[2];
                        v1143[3] = v921[3];
                        uint64_t v1009 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
                        v1270 = (char *)v1143 + v1009;
                        v1180 = v781;
                        uint64_t v1010 = v9;
                        uint64_t v1011 = (char *)v921 + v1009;
                        uint64_t v1012 = sub_253B07160();
                        uint64_t v1013 = v780;
                        v1014 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1012 - 8) + 16);
                        swift_bridgeObjectRetain();
                        v1015 = v1011;
                        uint64_t v9 = v1010;
                        uint64_t v781 = v1180;
                        uint64_t v1016 = v1012;
                        uint64_t v8 = __srct;
                        v1014(v1270, v1015, v1016);
                        uint64_t v780 = v1013;
                        uint64_t v7 = v1235;
                        break;
                      case 3u:
                        uint64_t v1017 = *v921;
                        unint64_t v1018 = v921[1];
                        sub_25348A9C8(*v921, v1018);
                        void *v1143 = v1017;
                        v1143[1] = v1018;
                        uint64_t v1019 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
                        uint64_t v1020 = (char *)v1143 + v1019;
                        uint64_t v1021 = (char *)v921 + v1019;
                        uint64_t v1022 = sub_253B07160();
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v1022 - 8) + 16))(v1020, v1021, v1022);
                        break;
                      default:
                        uint64_t v975 = *v921;
                        unint64_t v976 = v921[1];
                        sub_25348A9C8(*v921, v976);
                        void *v1143 = v975;
                        v1143[1] = v976;
                        v1143[2] = v921[2];
                        v1143[3] = v921[3];
                        v1143[4] = v921[4];
                        v1143[5] = v921[5];
                        uint64_t v977 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
                        uint64_t v1267 = v9;
                        uint64_t v978 = (char *)v1143 + v977;
                        uint64_t v979 = (char *)v921 + v977;
                        uint64_t v980 = sub_253B07160();
                        v1178 = *(void (**)(char *, char *, uint64_t))(*(void *)(v980 - 8) + 16);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        uint64_t v981 = v978;
                        uint64_t v982 = v979;
                        uint64_t v8 = __srct;
                        uint64_t v983 = v980;
                        uint64_t v7 = v1235;
                        uint64_t v9 = v1267;
                        v1178(v981, v982, v983);
                        break;
                    }
                    swift_storeEnumTagMultiPayload();
                  }
                  goto LABEL_450;
                }
                uint64_t v932 = v1143;
                sub_2536FA73C();
                size_t v931 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCC08) - 8) + 64);
                v933 = v1143;
                uint64_t v934 = v921;
              }
              memcpy(v933, v934, v931);
LABEL_450:
              uint64_t v1023 = *(int *)(v1128 + 20);
              uint64_t v1024 = (char *)v932 + v1023;
              uint64_t v1025 = (char *)v921 + v1023;
              uint64_t v1026 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1026 - 8) + 24))(v1024, v1025, v1026);
              goto LABEL_451;
            }
LABEL_385:
            uint64_t v830 = sub_253462A5C(&qword_269CE04C8);
            memcpy(v818, v819, *(void *)(*(void *)(v830 - 8) + 64));
            goto LABEL_411;
          }
          if (v822)
          {
            sub_2536FA73C();
            goto LABEL_385;
          }
          __dste = v780;
          v1174 = v781;
          uint64_t v864 = v9;
          *uint64_t v818 = *v819;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v818[1] = v819[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v865 = *(int *)(v1261 + 24);
          v866 = (char *)v818 + v865;
          uint64_t v867 = v819;
          uint64_t v868 = (char *)v819 + v865;
          uint64_t v869 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
          int v870 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v866, 1, v869);
          int v871 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v868, 1, v869);
          uint64_t v872 = v782;
          if (v870)
          {
            if (!v871)
            {
              unsigned char *v866 = *v868;
              uint64_t v873 = *(int *)(v869 + 20);
              v874 = &v866[v873];
              v875 = &v868[v873];
              uint64_t v876 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v876 - 8) + 16))(v874, v875, v876);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v866, 0, 1, v869);
LABEL_410:
              uint64_t v9 = v864;
              uint64_t v909 = *(int *)(v1261 + 28);
              uint64_t v910 = (char *)v818 + v909;
              int v911 = (char *)v867 + v909;
              uint64_t v912 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v912 - 8) + 24))(v910, v911, v912);
              uint64_t v7 = v1235;
              uint64_t v8 = __srct;
              uint64_t v780 = __dste;
              uint64_t v781 = v1174;
              unint64_t v782 = v872;
              goto LABEL_411;
            }
          }
          else
          {
            if (!v871)
            {
              unsigned char *v866 = *v868;
              uint64_t v971 = *(int *)(v869 + 20);
              v972 = &v866[v971];
              v973 = &v868[v971];
              uint64_t v974 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v974 - 8) + 24))(v972, v973, v974);
              goto LABEL_410;
            }
            sub_2536FA73C();
          }
          uint64_t v908 = sub_253462A5C(&qword_269CE04C0);
          memcpy(v866, v868, *(void *)(*(void *)(v908 - 8) + 64));
          goto LABEL_410;
        }
        sub_2536FA73C();
      }
      uint64_t v816 = sub_253462A5C(&qword_269CE04B8);
      memcpy(v792, v793, *(void *)(*(void *)(v816 - 8) + 64));
      goto LABEL_379;
    }
    if (v5 == v4) {
      goto LABEL_360;
    }
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v1195 = a3;
        v1331 = v4;
        *uint64_t v7 = *v8;
        uint64_t v272 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        unint64_t v273 = v8;
        uint64_t v274 = v272;
        uint64_t v275 = *(int *)(v272 + 20);
        uint64_t v276 = v7;
        uint64_t v277 = (void *)((char *)v7 + v275);
        __srck = v273;
        uint64_t v278 = (void *)((char *)v273 + v275);
        uint64_t v279 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v278, 1, v279))
        {
          uint64_t v280 = sub_253462A5C(&qword_269CE0480);
          memcpy(v277, v278, *(void *)(*(void *)(v280 - 8) + 64));
        }
        else
        {
          v1225 = (void *)type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v278, 1, (uint64_t)v1225))
          {
            uint64_t v426 = sub_253462A5C(&qword_269CE0478);
            memcpy(v277, v278, *(void *)(*(void *)(v426 - 8) + 64));
          }
          else
          {
            *uint64_t v277 = *v278;
            v277[1] = v278[1];
            *((unsigned char *)v277 + 16) = *((unsigned char *)v278 + 16);
            uint64_t v540 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v541 = *(int *)(v540 + 24);
            __dstd = (char *)v277 + v541;
            uint64_t v1165 = v540;
            uint64_t v542 = (char *)v278 + v541;
            uint64_t v543 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v542, 1, v543))
            {
              uint64_t v544 = sub_253462A5C(&qword_269CE0470);
              memcpy(__dstd, v542, *(void *)(*(void *)(v544 - 8) + 64));
            }
            else
            {
              unsigned char *__dstd = *v542;
              uint64_t v695 = *(int *)(v543 + 20);
              v1139 = &__dstd[v695];
              uint64_t v696 = &v542[v695];
              uint64_t v697 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v697 - 8) + 16))(v1139, v696, v697);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dstd, 0, 1, v543);
            }
            uint64_t v698 = *(int *)(v1165 + 28);
            uint64_t v699 = (char *)v277 + v698;
            unint64_t v700 = (char *)v278 + v698;
            uint64_t v701 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v701 - 8) + 16))(v699, v700, v701);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v277, 0, 1, (uint64_t)v1225);
          }
          uint64_t v702 = *(int *)(v279 + 20);
          uint64_t v703 = (char *)v277 + v702;
          uint64_t v704 = (char *)v278 + v702;
          uint64_t v705 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v705 - 8) + 16))(v703, v704, v705);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v277, 0, 1, v279);
        }
        uint64_t v706 = *(int *)(v274 + 24);
        uint64_t v7 = v276;
        uint64_t v707 = (char *)v276 + v706;
        uint64_t v8 = __srck;
        uint64_t v708 = (char *)__srck + v706;
        uint64_t v709 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v709 - 8) + 16))(v707, v708, v709);
        swift_storeEnumTagMultiPayload();
        uint64_t v4 = v1331;
        goto LABEL_332;
      case 2u:
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        uint64_t v281 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
        v1216 = (char *)v8 + v281;
        v1244 = (char *)v7 + v281;
        v1284 = v5;
        uint64_t v282 = v9;
        uint64_t v283 = v8;
        uint64_t v284 = sub_253B07160();
        uint64_t v285 = *(void (**)(char *, char *, uint64_t))(*(void *)(v284 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v286 = v284;
        uint64_t v8 = v283;
        uint64_t v9 = v282;
        uint64_t v5 = v1284;
        v285(v1244, v1216, v286);
        goto LABEL_162;
      case 3u:
        v1285 = v5;
        uint64_t v287 = v9;
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        uint64_t v288 = v8[2];
        *((unsigned char *)v7 + 24) = *((unsigned char *)v8 + 24);
        v7[2] = v288;
        uint64_t v289 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        uint64_t v290 = *(int *)(v289 + 24);
        uint64_t v291 = v7;
        uint64_t v292 = v8;
        uint64_t v293 = (char *)v7 + v290;
        __srcl = v292;
        uint64_t v294 = (char *)v292 + v290;
        uint64_t v295 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v294, 1, v295)) {
          goto LABEL_150;
        }
        goto LABEL_209;
      case 4u:
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        uint64_t v297 = v8[3];
        *((unsigned char *)v7 + 32) = *((unsigned char *)v8 + 32);
        v7[3] = v297;
        uint64_t v298 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        v1217 = (char *)v8 + v298;
        v1245 = (char *)v7 + v298;
        __srcu = v8;
        uint64_t v299 = v7;
        uint64_t v300 = sub_253B07160();
        uint64_t v301 = *(void (**)(char *, char *, uint64_t))(*(void *)(v300 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v302 = v300;
        uint64_t v7 = v299;
        uint64_t v8 = __srcu;
        v301(v1245, v1217, v302);
        goto LABEL_162;
      case 5u:
        v1285 = v5;
        uint64_t v287 = v9;
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        *((unsigned char *)v7 + 16) = *((unsigned char *)v8 + 16);
        uint64_t v289 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
        uint64_t v303 = *(int *)(v289 + 24);
        uint64_t v291 = v7;
        uint64_t v304 = v8;
        uint64_t v293 = (char *)v7 + v303;
        __srcl = v304;
        uint64_t v294 = (char *)v304 + v303;
        uint64_t v295 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v294, 1, v295))
        {
LABEL_150:
          uint64_t v296 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v293, v294, *(void *)(*(void *)(v296 - 8) + 64));
        }
        else
        {
LABEL_209:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v295 - 8) + 16))(v293, v294, v295);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v293, 0, 1, v295);
        }
        uint64_t v427 = *(int *)(v289 + 28);
        uint64_t v7 = v291;
        uint64_t v428 = (char *)v291 + v427;
        uint64_t v8 = __srcl;
        uint64_t v429 = (char *)__srcl + v427;
        uint64_t v430 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v430 - 8) + 16))(v428, v429, v430);
        goto LABEL_214;
      case 6u:
        v1285 = v5;
        uint64_t v287 = v9;
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        uint64_t v305 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v306 = *(int *)(v305 + 20);
        uint64_t v307 = v8;
        uint64_t v308 = (char *)v7 + v306;
        __srcm = v307;
        uint64_t v309 = (char *)v307 + v306;
        uint64_t v310 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v309, 1, v310))
        {
          uint64_t v311 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v308, v309, *(void *)(*(void *)(v311 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v310 - 8) + 16))(v308, v309, v310);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v308, 0, 1, v310);
        }
        uint64_t v431 = *(int *)(v305 + 24);
        uint64_t v432 = (char *)v7 + v431;
        uint64_t v8 = __srcm;
        uint64_t v433 = (char *)__srcm + v431;
        uint64_t v434 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v434 - 8) + 16))(v432, v433, v434);
LABEL_214:
        swift_storeEnumTagMultiPayload();
        uint64_t v9 = v287;
        uint64_t v5 = v1285;
        goto LABEL_360;
      case 7u:
        uint64_t v1246 = v9;
        uint64_t v312 = v4;
        uint64_t v313 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v313))
        {
          uint64_t v314 = sub_253462A5C(&qword_269CE0498);
          memcpy(v7, v8, *(void *)(*(void *)(v314 - 8) + 64));
          goto LABEL_490;
        }
        v1199 = a3;
        uint64_t v435 = v5;
        __srcp = v8;
        int v436 = swift_getEnumCaseMultiPayload();
        if (v436 != 2)
        {
          if (v436 == 1)
          {
            *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
            uint64_t v586 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v587 = (char *)v7 + v586;
            uint64_t v588 = (char *)v8 + v586;
            uint64_t v589 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v589 - 8) + 16))(v587, v588, v589);
          }
          else
          {
            if (v436)
            {
              memcpy(v7, v8, *(void *)(*(void *)(v313 - 8) + 64));
              goto LABEL_489;
            }
            *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
            uint64_t v437 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v438 = (char *)v7 + v437;
            long long v439 = (char *)v8 + v437;
            uint64_t v440 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v440 - 8) + 16))(v438, v439, v440);
          }
LABEL_488:
          swift_storeEnumTagMultiPayload();
LABEL_489:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v313);
          uint64_t v5 = v435;
          a3 = v1199;
          uint64_t v8 = __srcp;
LABEL_490:
          uint64_t v1109 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
          uint64_t v1110 = (char *)v7 + v1109;
          v1111 = (char *)v8 + v1109;
          uint64_t v1112 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1112 - 8) + 16))(v1110, v1111, v1112);
          swift_storeEnumTagMultiPayload();
          uint64_t v4 = v312;
          uint64_t v9 = v1246;
          goto LABEL_360;
        }
        uint64_t v584 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__srcp, 1, v584))
        {
          uint64_t v585 = sub_253462A5C(&qword_269CE0490);
          memcpy(v7, __srcp, *(void *)(*(void *)(v585 - 8) + 64));
LABEL_487:
          uint64_t v1105 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v1106 = (char *)v7 + v1105;
          uint64_t v1107 = (char *)__srcp + v1105;
          uint64_t v1108 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1108 - 8) + 16))(v1106, v1107, v1108);
          goto LABEL_488;
        }
        int v734 = swift_getEnumCaseMultiPayload();
        if (v734 == 1)
        {
          uint64_t v759 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__srcp, 1, v759))
          {
            uint64_t v760 = sub_253462A5C(&qword_269CE0488);
            memcpy(v7, __srcp, *(void *)(*(void *)(v760 - 8) + 64));
          }
          else
          {
            *(unsigned char *)uint64_t v7 = *(unsigned char *)__srcp;
            uint64_t v1098 = *(int *)(v759 + 20);
            uint64_t v1099 = (char *)v7 + v1098;
            v1302 = (char *)__srcp + v1098;
            uint64_t v1100 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1100 - 8) + 16))(v1099, v1302, v1100);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v759);
          }
          uint64_t v1101 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v1102 = (char *)v7 + v1101;
          uint64_t v1103 = (char *)__srcp + v1101;
          uint64_t v1104 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v1104 - 8) + 16))(v1102, v1103, v1104);
        }
        else
        {
          if (v734)
          {
            memcpy(v7, __srcp, *(void *)(*(void *)(v584 - 8) + 64));
LABEL_486:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v584);
            goto LABEL_487;
          }
          *uint64_t v7 = *__srcp;
          v7[1] = __srcp[1];
          uint64_t v735 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          v1295 = (char *)v7 + v735;
          v1233 = (char *)__srcp + v735;
          uint64_t v736 = sub_253B07160();
          uint64_t v1169 = *(void (**)(char *, char *, uint64_t))(*(void *)(v736 - 8) + 16);
          swift_bridgeObjectRetain();
          v1169(v1295, v1233, v736);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_486;
      case 8u:
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        uint64_t v315 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        uint64_t v1218 = (char *)v8 + v315;
        v1247 = (char *)v7 + v315;
        __srcv = v8;
        uint64_t v316 = v7;
        uint64_t v317 = sub_253B07160();
        uint64_t v318 = *(void (**)(char *, char *, uint64_t))(*(void *)(v317 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v319 = v317;
        uint64_t v7 = v316;
        uint64_t v8 = __srcv;
        v318(v1247, v1218, v319);
        goto LABEL_162;
      case 9u:
        uint64_t v320 = v5;
        uint64_t v321 = v8;
        uint64_t v322 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v321, 1, v322))
        {
          uint64_t v323 = sub_253462A5C(&qword_269CE04A8);
          memcpy(v7, v321, *(void *)(*(void *)(v323 - 8) + 64));
          uint64_t v8 = v321;
        }
        else
        {
          uint64_t v441 = v9;
          v1200 = a3;
          uint64_t v442 = v320;
          uint64_t v443 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          uint64_t v444 = v321;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v321, 1, v443))
          {
            uint64_t v445 = sub_253462A5C(&qword_269CE04A0);
            memcpy(v7, v321, *(void *)(*(void *)(v445 - 8) + 64));
          }
          else
          {
            uint64_t v528 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v321, 16, v528))
            {
              memcpy(v7, v321, *(void *)(*(void *)(v443 - 8) + 64));
            }
            else
            {
              *uint64_t v7 = *v321;
              v7[1] = v321[1];
              v7[2] = v321[2];
              v7[3] = v321[3];
              v7[4] = v321[4];
              uint64_t v685 = *(int *)(v528 + 28);
              v1258 = (char *)v321 + v685;
              v1294 = (char *)v7 + v685;
              __dsto = (void *)sub_253B07160();
              v1138 = *(void (**)(char *, char *, void *))(*(__dsto - 1) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1138(v1294, v1258, __dsto);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 16, v528);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v443);
          }
          uint64_t v686 = *(int *)(v322 + 20);
          v687 = (char *)v7 + v686;
          v688 = (char *)v444 + v686;
          uint64_t v689 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v689 - 8) + 16))(v687, v688, v689);
          uint64_t v690 = v322;
          uint64_t v8 = v444;
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v690);
          uint64_t v320 = v442;
          a3 = v1200;
          uint64_t v9 = v441;
        }
        uint64_t v691 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
        v692 = (char *)v7 + v691;
        uint64_t v693 = (char *)v8 + v691;
        uint64_t v694 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v694 - 8) + 16))(v692, v693, v694);
        swift_storeEnumTagMultiPayload();
        uint64_t v5 = v320;
        goto LABEL_360;
      case 0xAu:
        *uint64_t v7 = *v8;
        uint64_t v324 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
        v1219 = (char *)v8 + v324;
        v1248 = (char *)v7 + v324;
        v1286 = v5;
        uint64_t v325 = v9;
        uint64_t v326 = v8;
        uint64_t v327 = sub_253B07160();
        uint64_t v328 = *(void (**)(char *, char *, uint64_t))(*(void *)(v327 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v329 = v327;
        uint64_t v8 = v326;
        uint64_t v9 = v325;
        uint64_t v5 = v1286;
        v328(v1248, v1219, v329);
LABEL_162:
        swift_storeEnumTagMultiPayload();
        goto LABEL_360;
      default:
        uint64_t v92 = v5;
        uint64_t v1240 = v9;
        *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
        *((unsigned char *)v7 + 1) = *((unsigned char *)v8 + 1);
        *((unsigned char *)v7 + 2) = *((unsigned char *)v8 + 2);
        uint64_t v93 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v94 = v93[7];
        uint64_t v95 = (char *)v7 + v94;
        uint64_t v96 = (char *)v8 + v94;
        uint64_t v97 = sub_253B08E50();
        __srce = v8;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v96, 1, v97))
        {
          uint64_t v98 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v95, v96, *(void *)(*(void *)(v98 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16))(v95, v96, v97);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v95, 0, 1, v97);
        }
        uint64_t v1195 = a3;
        v1332 = v4;
        v1288 = v92;
        uint64_t v421 = v93[8];
        uint64_t v422 = (void *)((char *)v7 + v421);
        uint64_t v423 = (void *)((char *)__srce + v421);
        uint64_t v424 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v423, 1, v424))
        {
          uint64_t v425 = sub_253462A5C(&qword_269CE0450);
          memcpy(v422, v423, *(void *)(*(void *)(v425 - 8) + 64));
        }
        else
        {
          *uint64_t v422 = *v423;
          v422[1] = v423[1];
          v422[2] = v423[2];
          v422[3] = v423[3];
          v422[4] = v423[4];
          v422[5] = v423[5];
          uint64_t v506 = *(int *)(v424 + 28);
          __dstk = (char *)v423 + v506;
          v1164 = (char *)v422 + v506;
          uint64_t v507 = sub_253B07160();
          uint64_t v508 = *(void (**)(char *, char *, uint64_t))(*(void *)(v507 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v508(v1164, __dstk, v507);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v422, 0, 1, v424);
        }
        uint64_t v509 = v93[9];
        uint64_t v510 = v7;
        uint64_t v511 = (void *)((char *)v7 + v509);
        uint64_t v512 = (void *)((char *)__srce + v509);
        uint64_t v513 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v512, 1, v513))
        {
          uint64_t v514 = sub_253462A5C(&qword_269CE0468);
          memcpy(v511, v512, *(void *)(*(void *)(v514 - 8) + 64));
        }
        else
        {
          uint64_t v515 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v512, 1, v515))
          {
            uint64_t v516 = sub_253462A5C(&qword_269CE0460);
            memcpy(v511, v512, *(void *)(*(void *)(v516 - 8) + 64));
          }
          else
          {
            uint64_t v582 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v512, 1, v582))
            {
              uint64_t v583 = sub_253462A5C(&qword_269CE0458);
              memcpy(v511, v512, *(void *)(*(void *)(v583 - 8) + 64));
            }
            else
            {
              *uint64_t v511 = *v512;
              v511[1] = v512[1];
              uint64_t v710 = v512[2];
              unint64_t v711 = v512[3];
              swift_bridgeObjectRetain();
              sub_25348A9C8(v710, v711);
              v511[2] = v710;
              v511[3] = v711;
              v511[4] = v512[4];
              uint64_t v712 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              uint64_t v713 = (char *)v511 + v712;
              uint64_t v714 = (char *)v512 + v712;
              uint64_t v715 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v715 - 8) + 16))(v713, v714, v715);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v511, 0, 1, v582);
            }
            uint64_t v716 = *(int *)(v515 + 20);
            uint64_t v717 = (char *)v511 + v716;
            uint64_t v718 = (char *)v512 + v716;
            uint64_t v719 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v719 - 8) + 16))(v717, v718, v719);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v511, 0, 1, v515);
          }
          uint64_t v720 = *(int *)(v513 + 20);
          uint64_t v721 = (char *)v511 + v720;
          uint64_t v722 = (char *)v512 + v720;
          uint64_t v723 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v723 - 8) + 16))(v721, v722, v723);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v511, 0, 1, v513);
        }
        uint64_t v4 = v1332;
        uint64_t v724 = v93[10];
        uint64_t v725 = v510;
        uint64_t v726 = (void *)((char *)v510 + v724);
        uint64_t v727 = (void *)((char *)__srce + v724);
        *uint64_t v726 = *v727;
        v726[1] = v727[1];
        uint64_t v728 = v93[11];
        uint64_t v729 = (char *)v510 + v728;
        uint64_t v730 = (char *)__srce + v728;
        uint64_t v731 = sub_253B07160();
        uint64_t v732 = *(void (**)(char *, char *, uint64_t))(*(void *)(v731 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v733 = v731;
        uint64_t v8 = __srce;
        v732(v729, v730, v733);
        uint64_t v7 = v725;
        swift_storeEnumTagMultiPayload();
        uint64_t v9 = v1240;
        uint64_t v5 = v1288;
LABEL_332:
        a3 = v1195;
        goto LABEL_360;
    }
  }
  if (v11)
  {
LABEL_7:
    uint64_t v15 = sub_253462A5C(&qword_269CE1C80);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_454;
  }
  uint64_t v12 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v1330 = v4;
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v12))
  {
    uint64_t v21 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v21))
    {
      uint64_t v22 = sub_253462A5C(&qword_269CE04B0);
      memcpy(v7, v8, *(void *)(*(void *)(v22 - 8) + 64));
LABEL_294:
      uint64_t v13 = v5;
      uint64_t v611 = *(int *)(v12 + 20);
      uint64_t v612 = (char *)v7 + v611;
      uint64_t v613 = (char *)v8 + v611;
      uint64_t v614 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v614 - 8) + 16))(v612, v613, v614);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v12);
      goto LABEL_295;
    }
    v1181 = (void *)v21;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v1189 = a3;
        v1273 = v5;
        *uint64_t v7 = *v8;
        uint64_t v45 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v46 = *(int *)(v45 + 20);
        uint64_t v47 = v7;
        uint64_t v48 = (void *)((char *)v7 + v46);
        __srcc = v8;
        uint64_t v49 = (void *)((char *)v8 + v46);
        uint64_t v50 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v49, 1, v50))
        {
          uint64_t v51 = sub_253462A5C(&qword_269CE0480);
          memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
        }
        else
        {
          uint64_t v152 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v49, 1, v152))
          {
            uint64_t v153 = sub_253462A5C(&qword_269CE0478);
            memcpy(v48, v49, *(void *)(*(void *)(v153 - 8) + 64));
          }
          else
          {
            __dsta = (void *)v152;
            v1214 = (void *)v45;
            uint64_t v1243 = v9;
            *uint64_t v48 = *v49;
            v48[1] = v49[1];
            *((unsigned char *)v48 + 16) = *((unsigned char *)v49 + 16);
            uint64_t v1130 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v240 = *(int *)(v1130 + 24);
            uint64_t v241 = (char *)v48 + v240;
            uint64_t v242 = (char *)v49 + v240;
            uint64_t v243 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v242, 1, v243))
            {
              uint64_t v244 = sub_253462A5C(&qword_269CE0470);
              memcpy(v241, v242, *(void *)(*(void *)(v244 - 8) + 64));
            }
            else
            {
              unsigned char *v241 = *v242;
              uint64_t v349 = *(int *)(v243 + 20);
              uint64_t v350 = &v241[v349];
              uint64_t v351 = &v242[v349];
              uint64_t v352 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v352 - 8) + 16))(v350, v351, v352);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v241, 0, 1, v243);
            }
            uint64_t v9 = v1243;
            uint64_t v353 = *(int *)(v1130 + 28);
            uint64_t v354 = (char *)v48 + v353;
            uint64_t v355 = (char *)v49 + v353;
            uint64_t v356 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v356 - 8) + 16))(v354, v355, v356);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v48, 0, 1, (uint64_t)__dsta);
            uint64_t v45 = (uint64_t)v1214;
          }
          uint64_t v357 = *(int *)(v50 + 20);
          uint64_t v358 = (char *)v48 + v357;
          uint64_t v359 = (char *)v49 + v357;
          uint64_t v360 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v360 - 8) + 16))(v358, v359, v360);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v48, 0, 1, v50);
        }
        uint64_t v361 = *(int *)(v45 + 24);
        uint64_t v7 = v47;
        uint64_t v362 = (char *)v47 + v361;
        uint64_t v8 = __srcc;
        uint64_t v363 = (char *)__srcc + v361;
        uint64_t v364 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v364 - 8) + 16))(v362, v363, v364);
        uint64_t v5 = v1273;
        a3 = v1189;
        goto LABEL_293;
      case 2u:
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        uint64_t v52 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_48;
      case 3u:
        v1274 = v5;
        uint64_t v53 = v9;
        *uint64_t v7 = *v8;
        uint64_t v54 = v7;
        v7[1] = v8[1];
        uint64_t v55 = v8[2];
        *((unsigned char *)v7 + 24) = *((unsigned char *)v8 + 24);
        v7[2] = v55;
        uint64_t v56 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_37;
      case 4u:
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        uint64_t v57 = v8[3];
        *((unsigned char *)v7 + 32) = *((unsigned char *)v8 + 32);
        v7[3] = v57;
        uint64_t v58 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_44;
      case 5u:
        v1274 = v5;
        uint64_t v53 = v9;
        *uint64_t v7 = *v8;
        uint64_t v54 = v7;
        v7[1] = v8[1];
        *((unsigned char *)v7 + 16) = *((unsigned char *)v8 + 16);
        uint64_t v56 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_37:
        uint64_t v59 = v56;
        uint64_t v60 = *(int *)(v56 + 24);
        uint64_t v61 = v54;
        uint64_t v62 = v8;
        uint64_t v63 = (char *)v54 + v60;
        __srcd = v62;
        uint64_t v64 = (char *)v62 + v60;
        uint64_t v65 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v64, 1, v65))
        {
          uint64_t v66 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v64, v65);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v63, 0, 1, v65);
        }
        uint64_t v99 = *(int *)(v59 + 28);
        goto LABEL_80;
      case 6u:
        v1274 = v5;
        uint64_t v53 = v9;
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        uint64_t v67 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v68 = *(int *)(v67 + 20);
        uint64_t v61 = v7;
        uint64_t v69 = v8;
        uint64_t v70 = (char *)v7 + v68;
        __srcd = v69;
        uint64_t v71 = (char *)v69 + v68;
        uint64_t v72 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v71, 1, v72))
        {
          uint64_t v73 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v70, 0, 1, v72);
        }
        uint64_t v99 = *(int *)(v67 + 24);
LABEL_80:
        uint64_t v7 = v61;
        int v154 = (char *)v61 + v99;
        uint64_t v8 = __srcd;
        uint64_t v155 = (char *)__srcd + v99;
        uint64_t v156 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 16))(v154, v155, v156);
        uint64_t v9 = v53;
        uint64_t v5 = v1274;
        goto LABEL_293;
      case 7u:
        uint64_t v74 = v5;
        uint64_t v75 = v9;
        uint64_t v76 = a3;
        uint64_t v77 = v74;
        uint64_t v78 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v78))
        {
          uint64_t v79 = sub_253462A5C(&qword_269CE0498);
          memcpy(v7, v8, *(void *)(*(void *)(v79 - 8) + 64));
          goto LABEL_292;
        }
        int v157 = swift_getEnumCaseMultiPayload();
        if (v157 != 2)
        {
          if (v157 == 1)
          {
            *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
            uint64_t v263 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v264 = (char *)v7 + v263;
            uint64_t v265 = (char *)v8 + v263;
            uint64_t v266 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v266 - 8) + 16))(v264, v265, v266);
          }
          else
          {
            if (v157)
            {
              memcpy(v7, v8, *(void *)(*(void *)(v78 - 8) + 64));
              goto LABEL_291;
            }
            *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
            uint64_t v158 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v159 = (char *)v7 + v158;
            uint64_t v160 = (char *)v8 + v158;
            uint64_t v161 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 16))(v159, v160, v161);
          }
LABEL_290:
          swift_storeEnumTagMultiPayload();
LABEL_291:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v78);
LABEL_292:
          uint64_t v606 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
          v607 = (char *)v7 + v606;
          uint64_t v608 = (char *)v8 + v606;
          uint64_t v609 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v609 - 8) + 16))(v607, v608, v609);
          uint64_t v610 = v77;
          a3 = v76;
          uint64_t v9 = v75;
          uint64_t v5 = v610;
LABEL_293:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, (uint64_t)v1181);
          goto LABEL_294;
        }
        uint64_t v260 = v8;
        uint64_t v261 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v260, 1, v261))
        {
          uint64_t v262 = sub_253462A5C(&qword_269CE0490);
          memcpy(v7, v260, *(void *)(*(void *)(v262 - 8) + 64));
          uint64_t v8 = v260;
LABEL_289:
          uint64_t v602 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v603 = (char *)v7 + v602;
          int v604 = (char *)v8 + v602;
          uint64_t v605 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v605 - 8) + 16))(v603, v604, v605);
          goto LABEL_290;
        }
        __srco = v260;
        int v418 = swift_getEnumCaseMultiPayload();
        if (v418 == 1)
        {
          uint64_t v526 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__srco, 1, v526))
          {
            uint64_t v527 = sub_253462A5C(&qword_269CE0488);
            memcpy(v7, __srco, *(void *)(*(void *)(v527 - 8) + 64));
          }
          else
          {
            *(unsigned char *)uint64_t v7 = *__srco;
            uint64_t v595 = *(int *)(v526 + 20);
            uint64_t v596 = (char *)v7 + v595;
            v1292 = &__srco[v595];
            uint64_t v597 = sub_253B07160();
            (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v597 - 8) + 16))(v596, v1292, v597);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v526);
          }
          uint64_t v598 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v599 = (char *)v7 + v598;
          uint64_t v600 = &__srco[v598];
          uint64_t v601 = sub_253B07160();
          (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v601 - 8) + 16))(v599, v600, v601);
        }
        else
        {
          if (v418)
          {
            memcpy(v7, v260, *(void *)(*(void *)(v261 - 8) + 64));
LABEL_288:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v261);
            uint64_t v8 = __srco;
            goto LABEL_289;
          }
          *uint64_t v7 = *v260;
          v7[1] = v260[1];
          uint64_t v419 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          v1251 = (char *)v260 + v419;
          v1287 = (char *)v7 + v419;
          uint64_t v420 = sub_253B07160();
          uint64_t v1224 = *(void (**)(char *, char *, uint64_t))(*(void *)(v420 - 8) + 16);
          swift_bridgeObjectRetain();
          v1224(v1287, v1251, v420);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_288;
      case 8u:
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        uint64_t v58 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
LABEL_44:
        v1275 = (char *)v7 + v58;
        uint64_t v1190 = (char *)v8 + v58;
        uint64_t v1208 = v7;
        uint64_t v80 = sub_253B07160();
        uint64_t v81 = *(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v82 = v80;
        uint64_t v7 = v1208;
        v81(v1275, v1190, v82);
        goto LABEL_293;
      case 9u:
        uint64_t v83 = v9;
        uint64_t v84 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v84))
        {
          uint64_t v85 = sub_253462A5C(&qword_269CE04A8);
          memcpy(v7, v8, *(void *)(*(void *)(v85 - 8) + 64));
        }
        else
        {
          uint64_t v162 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v162))
          {
            uint64_t v163 = sub_253462A5C(&qword_269CE04A0);
            memcpy(v7, v8, *(void *)(*(void *)(v163 - 8) + 64));
          }
          else
          {
            uint64_t v245 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            __srcj = v8;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 16, v245))
            {
              memcpy(v7, v8, *(void *)(*(void *)(v162 - 8) + 64));
            }
            else
            {
              *uint64_t v7 = *v8;
              v7[1] = v8[1];
              v7[2] = v8[2];
              v7[3] = v8[3];
              v7[4] = v8[4];
              uint64_t v365 = *(int *)(v245 + 28);
              v1250 = (char *)v7 + v365;
              uint64_t v366 = (char *)v8 + v365;
              v1196 = a3;
              uint64_t v367 = sub_253B07160();
              uint64_t v1133 = *(void (**)(char *, char *, uint64_t))(*(void *)(v367 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v368 = v367;
              a3 = v1196;
              v1133(v1250, v366, v368);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 16, v245);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v162);
            uint64_t v8 = __srcj;
          }
          uint64_t v369 = *(int *)(v84 + 20);
          uint64_t v370 = (char *)v7 + v369;
          uint64_t v371 = (char *)v8 + v369;
          uint64_t v372 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v372 - 8) + 16))(v370, v371, v372);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v84);
        }
        uint64_t v373 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
        uint64_t v374 = (char *)v7 + v373;
        uint64_t v375 = (char *)v8 + v373;
        uint64_t v376 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v376 - 8) + 16))(v374, v375, v376);
        uint64_t v9 = v83;
        goto LABEL_293;
      case 0xAu:
        *uint64_t v7 = *v8;
        uint64_t v52 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
LABEL_48:
        uint64_t v86 = *(int *)(v52 + 20);
        uint64_t v1209 = (char *)v8 + v86;
        v1239 = (char *)v7 + v86;
        v1276 = v5;
        uint64_t v87 = v9;
        uint64_t v88 = v8;
        uint64_t v89 = sub_253B07160();
        uint64_t v90 = *(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v91 = v89;
        uint64_t v8 = v88;
        uint64_t v9 = v87;
        uint64_t v5 = v1276;
        v90(v1239, v1209, v91);
        goto LABEL_293;
      default:
        uint64_t v1236 = v9;
        v1271 = v5;
        *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
        *((unsigned char *)v7 + 1) = *((unsigned char *)v8 + 1);
        *((unsigned char *)v7 + 2) = *((unsigned char *)v8 + 2);
        uint64_t v24 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v25 = v24[7];
        uint64_t v26 = (char *)v7 + v25;
        uint64_t v27 = (char *)v8 + v25;
        uint64_t v28 = sub_253B08E50();
        __src = v8;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v28))
        {
          uint64_t v29 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v28);
        }
        uint64_t v100 = v24[8];
        uint64_t v101 = (void *)((char *)v7 + v100);
        uint64_t v102 = (void *)((char *)__src + v100);
        uint64_t v103 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v102, 1, v103))
        {
          uint64_t v104 = sub_253462A5C(&qword_269CE0450);
          memcpy(v101, v102, *(void *)(*(void *)(v104 - 8) + 64));
        }
        else
        {
          *uint64_t v101 = *v102;
          v101[1] = v102[1];
          v101[2] = v102[2];
          v101[3] = v102[3];
          v101[4] = v102[4];
          v101[5] = v102[5];
          uint64_t v164 = *(int *)(v103 + 28);
          uint64_t v1129 = (char *)v102 + v164;
          __dsth = (char *)v101 + v164;
          uint64_t v165 = sub_253B07160();
          long long v1122 = *(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v1122(__dsth, v1129, v165);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v101, 0, 1, v103);
        }
        uint64_t v166 = v24;
        uint64_t v167 = v24[9];
        uint64_t v168 = v7;
        uint64_t v169 = (void *)((char *)v7 + v167);
        uint64_t v170 = (void *)((char *)__src + v167);
        uint64_t v171 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v170, 1, v171))
        {
          uint64_t v172 = sub_253462A5C(&qword_269CE0468);
          memcpy(v169, v170, *(void *)(*(void *)(v172 - 8) + 64));
        }
        else
        {
          uint64_t v173 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v170, 1, v173))
          {
            uint64_t v174 = sub_253462A5C(&qword_269CE0460);
            memcpy(v169, v170, *(void *)(*(void *)(v174 - 8) + 64));
          }
          else
          {
            uint64_t v246 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            v1215 = (void *)v173;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v170, 1, v246))
            {
              uint64_t v247 = sub_253462A5C(&qword_269CE0458);
              memcpy(v169, v170, *(void *)(*(void *)(v247 - 8) + 64));
            }
            else
            {
              *uint64_t v169 = *v170;
              v169[1] = v170[1];
              uint64_t v1197 = v246;
              uint64_t v377 = v170[2];
              unint64_t v378 = v170[3];
              swift_bridgeObjectRetain();
              sub_25348A9C8(v377, v378);
              v169[2] = v377;
              v169[3] = v378;
              v169[4] = v170[4];
              uint64_t v379 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              uint64_t v380 = (char *)v169 + v379;
              uint64_t v381 = (char *)v170 + v379;
              uint64_t v382 = sub_253B07160();
              uint64_t v383 = v380;
              uint64_t v173 = (uint64_t)v1215;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v382 - 8) + 16))(v383, v381, v382);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v169, 0, 1, v1197);
            }
            uint64_t v384 = *(int *)(v173 + 20);
            uint64_t v385 = (char *)v169 + v384;
            uint64_t v386 = (char *)v170 + v384;
            uint64_t v387 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v387 - 8) + 16))(v385, v386, v387);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v169, 0, 1, (uint64_t)v1215);
          }
          uint64_t v388 = *(int *)(v171 + 20);
          uint64_t v389 = (char *)v169 + v388;
          uint64_t v390 = (char *)v170 + v388;
          uint64_t v391 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v391 - 8) + 16))(v389, v390, v391);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v169, 0, 1, v171);
        }
        uint64_t v392 = v166[10];
        uint64_t v7 = v168;
        uint64_t v393 = (void *)((char *)v168 + v392);
        uint64_t v394 = (void *)((char *)__src + v392);
        void *v393 = *v394;
        v393[1] = v394[1];
        uint64_t v395 = v166[11];
        uint64_t v396 = (char *)v168 + v395;
        v1222 = (char *)__src + v395;
        uint64_t v397 = sub_253B07160();
        uint64_t v398 = *(void (**)(char *, char *, uint64_t))(*(void *)(v397 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v399 = v397;
        uint64_t v8 = __src;
        v398(v396, v1222, v399);
        uint64_t v9 = v1236;
        uint64_t v5 = v1271;
        goto LABEL_293;
    }
  }
  uint64_t v13 = v5;
  uint64_t v14 = sub_253462A5C(&qword_269CE0388);
  memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_295:
  uint64_t v615 = *(int *)(v9 + 20);
  uint64_t v616 = (void *)((char *)v7 + v615);
  uint64_t v617 = (void *)((char *)v8 + v615);
  long long v618 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v617, 1, (uint64_t)v618))
  {
    uint64_t v619 = sub_253462A5C(&qword_269CE0378);
    memcpy(v616, v617, *(void *)(*(void *)(v619 - 8) + 64));
    uint64_t v5 = v13;
  }
  else
  {
    v1232 = v7;
    uint64_t v1257 = v9;
    v1293 = v13;
    __srcr = v8;
    v1205 = a3;
    void *v616 = *v617;
    uint64_t v620 = v618[5];
    uint64_t v621 = (void *)((char *)v616 + v620);
    v622 = (void *)((char *)v617 + v620);
    uint64_t v623 = type metadata accessor for TranscriptProtoResponseDialog(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v622, 1, v623))
    {
      uint64_t v624 = sub_253462A5C(&qword_269CE04B8);
      memcpy(v621, v622, *(void *)(*(void *)(v624 - 8) + 64));
    }
    else
    {
      *uint64_t v621 = *v622;
      v621[1] = v622[1];
      v621[2] = v622[2];
      v621[3] = v622[3];
      v621[4] = v622[4];
      v621[5] = v622[5];
      v621[6] = v622[6];
      v621[7] = v622[7];
      uint64_t v625 = *(int *)(v623 + 32);
      uint64_t v1166 = (char *)v622 + v625;
      uint64_t v1184 = (char *)v621 + v625;
      uint64_t v626 = sub_253B07160();
      __dstl = *(void (**)(char *, char *, uint64_t))(*(void *)(v626 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __dstl(v1184, v1166, v626);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v621, 0, 1, v623);
    }
    uint64_t v627 = v618[6];
    uint64_t v628 = (void *)((char *)v616 + v627);
    uint64_t v629 = (void *)((char *)v617 + v627);
    uint64_t v630 = type metadata accessor for TranscriptProtoResponseVisual(0);
    uint64_t v9 = v1257;
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v629, 1, v630))
    {
      uint64_t v631 = sub_253462A5C(&qword_269CE04C8);
      memcpy(v628, v629, *(void *)(*(void *)(v631 - 8) + 64));
    }
    else
    {
      *uint64_t v628 = *v629;
      v628[1] = v629[1];
      uint64_t v632 = *(int *)(v630 + 24);
      v1185 = (char *)v628 + v632;
      uint64_t v633 = (char *)v629 + v632;
      uint64_t v634 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v633, 1, v634))
      {
        uint64_t v635 = sub_253462A5C(&qword_269CE04C0);
        memcpy(v1185, v633, *(void *)(*(void *)(v635 - 8) + 64));
      }
      else
      {
        unsigned char *v1185 = *v633;
        uint64_t v636 = *(int *)(v634 + 20);
        uint64_t v637 = &v1185[v636];
        uint64_t v638 = &v633[v636];
        uint64_t v639 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v639 - 8) + 16))(v637, v638, v639);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1185, 0, 1, v634);
      }
      uint64_t v9 = v1257;
      uint64_t v640 = *(int *)(v630 + 28);
      int v641 = (char *)v628 + v640;
      uint64_t v642 = (char *)v629 + v640;
      uint64_t v643 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v643 - 8) + 16))(v641, v642, v643);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v628, 0, 1, v630);
    }
    uint64_t v644 = v618[7];
    uint64_t v645 = (void *)((char *)v616 + v644);
    uint64_t v646 = (void *)((char *)v617 + v644);
    *uint64_t v645 = *v646;
    v645[1] = v646[1];
    uint64_t v647 = v618[8];
    int v648 = (void *)((char *)v616 + v647);
    int v649 = (void *)((char *)v617 + v647);
    *int v648 = *v649;
    v648[1] = v649[1];
    *((unsigned char *)v616 + v618[9]) = *((unsigned char *)v617 + v618[9]);
    *((unsigned char *)v616 + v618[10]) = *((unsigned char *)v617 + v618[10]);
    uint64_t v650 = v618[11];
    uint64_t v651 = (void *)((char *)v616 + v650);
    uint64_t v652 = (void *)((char *)v617 + v650);
    uint64_t v653 = type metadata accessor for TranscriptProtoUIType(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v652, 1, v653))
    {
      uint64_t v654 = sub_253462A5C(&qword_269CE04D0);
      memcpy(v651, v652, *(void *)(*(void *)(v654 - 8) + 64));
    }
    else
    {
      uint64_t v655 = type metadata accessor for TranscriptProtoUitype(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v652, 1, v655))
      {
        uint64_t v656 = sub_253462A5C(&qword_269CDCC08);
        memcpy(v651, v652, *(void *)(*(void *)(v656 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *uint64_t v651 = *v652;
            v651[1] = v652[1];
            uint64_t v662 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
            goto LABEL_314;
          case 2u:
            uint64_t v663 = *v652;
            unint64_t v664 = v652[1];
            sub_25348A9C8(*v652, v664);
            *uint64_t v651 = v663;
            v651[1] = v664;
            v651[2] = v652[2];
            v651[3] = v652[3];
            uint64_t v662 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
LABEL_314:
            __dstn = (char *)v652 + v662;
            v1168 = (char *)v651 + v662;
            uint64_t v665 = sub_253B07160();
            uint64_t v1137 = *(void (**)(char *, char *, uint64_t))(*(void *)(v665 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v666 = v665;
            uint64_t v9 = v1257;
            v1137(v1168, __dstn, v666);
            break;
          case 3u:
            uint64_t v667 = *v652;
            unint64_t v668 = v652[1];
            sub_25348A9C8(*v652, v668);
            *uint64_t v651 = v667;
            v651[1] = v668;
            uint64_t v669 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
            uint64_t v670 = (char *)v651 + v669;
            uint64_t v671 = (char *)v652 + v669;
            uint64_t v672 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v672 - 8) + 16))(v670, v671, v672);
            break;
          default:
            uint64_t v657 = *v652;
            unint64_t v658 = v652[1];
            sub_25348A9C8(*v652, v658);
            *uint64_t v651 = v657;
            v651[1] = v658;
            v651[2] = v652[2];
            v651[3] = v652[3];
            v651[4] = v652[4];
            v651[5] = v652[5];
            uint64_t v659 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
            uint64_t v1136 = (char *)v652 + v659;
            __dstm = (char *)v651 + v659;
            uint64_t v1167 = v655;
            uint64_t v660 = sub_253B07160();
            long long v1125 = *(void (**)(char *, char *, uint64_t))(*(void *)(v660 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v661 = v660;
            uint64_t v655 = v1167;
            v1125(__dstm, v1136, v661);
            uint64_t v9 = v1257;
            break;
        }
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v651, 0, 1, v655);
      }
      uint64_t v673 = *(int *)(v653 + 20);
      uint64_t v674 = (char *)v651 + v673;
      uint64_t v675 = (char *)v652 + v673;
      uint64_t v676 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v676 - 8) + 16))(v674, v675, v676);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v651, 0, 1, v653);
    }
    uint64_t v677 = v618[12];
    uint64_t v678 = (char *)v616 + v677;
    uint64_t v679 = (char *)v617 + v677;
    uint64_t v680 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v680 - 8) + 16))(v678, v679, v680);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v616, 0, 1, (uint64_t)v618);
    uint64_t v5 = v1293;
    uint64_t v8 = __srcr;
    a3 = v1205;
    uint64_t v7 = v1232;
  }
  uint64_t v681 = *(int *)(v9 + 24);
  long long v682 = (char *)v7 + v681;
  uint64_t v683 = (char *)v8 + v681;
  uint64_t v684 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v684 - 8) + 16))(v682, v683, v684);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  uint64_t v4 = v1330;
LABEL_454:
  uint64_t v1035 = a3[7];
  uint64_t v1036 = (void *)((char *)v5 + v1035);
  v1037 = (void *)((char *)v4 + v1035);
  uint64_t v1038 = type metadata accessor for TranscriptProtoStatementID(0);
  int v1039 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1036, 1, v1038);
  int v1040 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1037, 1, v1038);
  if (v1039)
  {
    if (!v1040)
    {
      *(_DWORD *)uint64_t v1036 = *(_DWORD *)v1037;
      v1036[1] = v1037[1];
      v1036[2] = v1037[2];
      uint64_t v1041 = *(int *)(v1038 + 24);
      __srcw = (char *)v1036 + v1041;
      v1042 = (char *)v1037 + v1041;
      uint64_t v1043 = sub_253B07160();
      uint64_t v1044 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1043 - 8) + 16);
      swift_bridgeObjectRetain();
      v1044(__srcw, v1042, v1043);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1036, 0, 1, v1038);
      goto LABEL_460;
    }
    goto LABEL_459;
  }
  if (v1040)
  {
    sub_2536FA73C();
LABEL_459:
    uint64_t v1045 = sub_253462A5C(&qword_26B249528);
    memcpy(v1036, v1037, *(void *)(*(void *)(v1045 - 8) + 64));
    goto LABEL_460;
  }
  *(_DWORD *)uint64_t v1036 = *(_DWORD *)v1037;
  v1036[1] = v1037[1];
  v1036[2] = v1037[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v1082 = *(int *)(v1038 + 24);
  uint64_t v1083 = (char *)v1036 + v1082;
  v1084 = (char *)v1037 + v1082;
  uint64_t v1085 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v1085 - 8) + 24))(v1083, v1084, v1085);
LABEL_460:
  uint64_t v1046 = a3[8];
  v1047 = (void *)((char *)v5 + v1046);
  uint64_t v1048 = (void *)((char *)v4 + v1046);
  int v1049 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v5 + v1046, 1, v1038);
  int v1050 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1048, 1, v1038);
  if (v1049)
  {
    if (!v1050)
    {
      *(_DWORD *)v1047 = *(_DWORD *)v1048;
      v1047[1] = v1048[1];
      v1047[2] = v1048[2];
      uint64_t v1051 = *(int *)(v1038 + 24);
      __srcx = (char *)v1047 + v1051;
      uint64_t v1052 = (char *)v1048 + v1051;
      uint64_t v1053 = sub_253B07160();
      v1054 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1053 - 8) + 16);
      swift_bridgeObjectRetain();
      v1054(__srcx, v1052, v1053);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1047, 0, 1, v1038);
      goto LABEL_466;
    }
    goto LABEL_465;
  }
  if (v1050)
  {
    sub_2536FA73C();
LABEL_465:
    uint64_t v1055 = sub_253462A5C(&qword_26B249528);
    memcpy(v1047, v1048, *(void *)(*(void *)(v1055 - 8) + 64));
    goto LABEL_466;
  }
  *(_DWORD *)v1047 = *(_DWORD *)v1048;
  v1047[1] = v1048[1];
  v1047[2] = v1048[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v1086 = *(int *)(v1038 + 24);
  uint64_t v1087 = (char *)v1047 + v1086;
  uint64_t v1088 = (char *)v1048 + v1086;
  uint64_t v1089 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v1089 - 8) + 24))(v1087, v1088, v1089);
LABEL_466:
  uint64_t v1056 = a3[9];
  v1057 = (void *)((char *)v5 + v1056);
  uint64_t v1058 = (void *)((char *)v4 + v1056);
  int v1059 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v5 + v1056, 1, v1038);
  int v1060 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1058, 1, v1038);
  if (v1059)
  {
    if (!v1060)
    {
      *(_DWORD *)v1057 = *(_DWORD *)v1058;
      v1057[1] = v1058[1];
      v1057[2] = v1058[2];
      uint64_t v1061 = *(int *)(v1038 + 24);
      __srcy = (char *)v1057 + v1061;
      uint64_t v1062 = (char *)v1058 + v1061;
      uint64_t v1063 = sub_253B07160();
      v1064 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1063 - 8) + 16);
      swift_bridgeObjectRetain();
      v1064(__srcy, v1062, v1063);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1057, 0, 1, v1038);
      goto LABEL_472;
    }
    goto LABEL_471;
  }
  if (v1060)
  {
    sub_2536FA73C();
LABEL_471:
    uint64_t v1065 = sub_253462A5C(&qword_26B249528);
    memcpy(v1057, v1058, *(void *)(*(void *)(v1065 - 8) + 64));
    goto LABEL_472;
  }
  *(_DWORD *)v1057 = *(_DWORD *)v1058;
  v1057[1] = v1058[1];
  v1057[2] = v1058[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v1090 = *(int *)(v1038 + 24);
  uint64_t v1091 = (char *)v1057 + v1090;
  uint64_t v1092 = (char *)v1058 + v1090;
  uint64_t v1093 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v1093 - 8) + 24))(v1091, v1092, v1093);
LABEL_472:
  uint64_t v1066 = a3[10];
  uint64_t v1067 = (void *)((char *)v5 + v1066);
  uint64_t v1068 = (void *)((char *)v4 + v1066);
  uint64_t v1069 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  int v1070 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1067, 1, v1069);
  int v1071 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1068, 1, v1069);
  if (!v1070)
  {
    if (!v1071)
    {
      *uint64_t v1067 = *v1068;
      v1067[1] = v1068[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1067[2] = v1068[2];
      v1067[3] = v1068[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v1094 = *(int *)(v1069 + 24);
      uint64_t v1095 = (char *)v1067 + v1094;
      v1096 = (char *)v1068 + v1094;
      uint64_t v1097 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v1097 - 8) + 24))(v1095, v1096, v1097);
      goto LABEL_478;
    }
    sub_2536FA73C();
    goto LABEL_477;
  }
  if (v1071)
  {
LABEL_477:
    uint64_t v1076 = sub_253462A5C(&qword_269CE0448);
    memcpy(v1067, v1068, *(void *)(*(void *)(v1076 - 8) + 64));
    goto LABEL_478;
  }
  *uint64_t v1067 = *v1068;
  v1067[1] = v1068[1];
  v1067[2] = v1068[2];
  v1067[3] = v1068[3];
  uint64_t v1072 = *(int *)(v1069 + 24);
  v1301 = (char *)v1068 + v1072;
  __srcz = (char *)v1067 + v1072;
  uint64_t v1073 = sub_253B07160();
  v1074 = v5;
  uint64_t v1075 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1073 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v1075(__srcz, v1301, v1073);
  uint64_t v5 = v1074;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1067, 0, 1, v1069);
LABEL_478:
  uint64_t v1077 = a3[11];
  v1078 = (char *)v5 + v1077;
  v1079 = (char *)v4 + v1077;
  uint64_t v1080 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v1080 - 8) + 24))(v1078, v1079, v1080);
  return v5;
}

_OWORD *initializeWithTake for TranscriptProtoStatementResult(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v3 = a3;
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_269CE1C80);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_115;
  }
  uint64_t v12 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v12))
  {
    uint64_t v14 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v14))
    {
      uint64_t v15 = sub_253462A5C(&qword_269CE04B0);
      memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
LABEL_89:
      uint64_t v156 = *(int *)(v12 + 20);
      int v157 = (char *)v8 + v156;
      uint64_t v158 = v9;
      uint64_t v159 = (char *)v9 + v156;
      uint64_t v160 = sub_253B07160();
      uint64_t v161 = v159;
      uint64_t v9 = v158;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 32))(v157, v161, v160);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v12);
      goto LABEL_90;
    }
    uint64_t v289 = v9;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        void *v8 = *v9;
        uint64_t v270 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v21 = *(int *)(v270 + 20);
        uint64_t v283 = v8;
        uint64_t v22 = v9;
        uint64_t v23 = (char *)v8 + v21;
        uint64_t v24 = (char *)v22 + v21;
        uint64_t v25 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
        {
          uint64_t v26 = sub_253462A5C(&qword_269CE0480);
          memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          uint64_t v279 = v10;
          uint64_t v55 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v55))
          {
            uint64_t v56 = sub_253462A5C(&qword_269CE0478);
            memcpy(v23, v24, *(void *)(*(void *)(v56 - 8) + 64));
          }
          else
          {
            *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
            v23[16] = v24[16];
            uint64_t v83 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v84 = *(int *)(v83 + 24);
            uint64_t v263 = v83;
            __srca = &v23[v84];
            uint64_t v85 = &v24[v84];
            uint64_t v261 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v85, 1, v261))
            {
              uint64_t v86 = sub_253462A5C(&qword_269CE0470);
              memcpy(__srca, v85, *(void *)(*(void *)(v86 - 8) + 64));
            }
            else
            {
              unsigned char *__srca = *v85;
              uint64_t v107 = *(int *)(v261 + 20);
              uint64_t v260 = &__srca[v107];
              uint64_t v108 = &v85[v107];
              uint64_t v109 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v109 - 8) + 32))(v260, v108, v109);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__srca, 0, 1, v261);
            }
            uint64_t v110 = *(int *)(v263 + 28);
            uint64_t v111 = &v23[v110];
            __srcb = &v24[v110];
            uint64_t v112 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v112 - 8) + 32))(v111, __srcb, v112);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v55);
          }
          uint64_t v113 = *(int *)(v25 + 20);
          uint64_t v114 = &v23[v113];
          uint64_t v115 = &v24[v113];
          uint64_t v116 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v116 - 8) + 32))(v114, v115, v116);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v25);
          uint64_t v10 = v279;
        }
        uint64_t v117 = *(int *)(v270 + 24);
        uint64_t v8 = v283;
        uint64_t v118 = v289;
        goto LABEL_71;
      case 2u:
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        uint64_t v27 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_61;
      case 3u:
        uint64_t v278 = v10;
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        v8[2] = v9[2];
        *((unsigned char *)v8 + 24) = *((unsigned char *)v9 + 24);
        uint64_t v28 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_16;
      case 4u:
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        uint64_t v29 = v9[3];
        v8[2] = v9[2];
        v8[3] = v29;
        *((unsigned char *)v8 + 32) = *((unsigned char *)v9 + 32);
        uint64_t v30 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_62;
      case 5u:
        uint64_t v278 = v10;
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        *((unsigned char *)v8 + 16) = *((unsigned char *)v9 + 16);
        uint64_t v28 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_16:
        uint64_t v31 = v28;
        uint64_t v32 = *(int *)(v28 + 24);
        uint64_t v284 = v8;
        uint64_t v33 = v9;
        uint64_t v34 = (char *)v8 + v32;
        uint64_t v35 = (char *)v33 + v32;
        uint64_t v36 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v35, 1, v36))
        {
          uint64_t v37 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v34, 0, 1, v36);
        }
        uint64_t v49 = *(int *)(v31 + 28);
        goto LABEL_35;
      case 6u:
        uint64_t v278 = v10;
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        uint64_t v38 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v39 = *(int *)(v38 + 20);
        uint64_t v284 = v8;
        uint64_t v40 = v9;
        uint64_t v41 = (char *)v8 + v39;
        uint64_t v42 = (char *)v40 + v39;
        uint64_t v43 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v42, 1, v43))
        {
          uint64_t v44 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v41, 0, 1, v43);
        }
        uint64_t v49 = *(int *)(v38 + 24);
LABEL_35:
        uint64_t v8 = v284;
        uint64_t v57 = (char *)v284 + v49;
        uint64_t v58 = &v289[v49];
        goto LABEL_87;
      case 7u:
        uint64_t v278 = v10;
        uint64_t v45 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v45))
        {
          uint64_t v46 = sub_253462A5C(&qword_269CE0498);
          memcpy(v8, v9, *(void *)(*(void *)(v46 - 8) + 64));
          goto LABEL_86;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
            uint64_t v91 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v92 = (char *)v8 + v91;
            uint64_t v93 = v9;
            uint64_t v94 = (char *)v9 + v91;
            uint64_t v95 = sub_253B07160();
            uint64_t v96 = v94;
            uint64_t v9 = v93;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 32))(v92, v96, v95);
          }
          else
          {
            if (EnumCaseMultiPayload)
            {
              memcpy(v8, v9, *(void *)(*(void *)(v45 - 8) + 64));
              goto LABEL_85;
            }
            *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
            uint64_t v60 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v61 = (char *)v8 + v60;
            uint64_t v62 = v9;
            uint64_t v63 = (char *)v9 + v60;
            uint64_t v64 = sub_253B07160();
            uint64_t v65 = v63;
            uint64_t v9 = v62;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v61, v65, v64);
          }
LABEL_84:
          swift_storeEnumTagMultiPayload();
LABEL_85:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v45);
LABEL_86:
          uint64_t v154 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
          uint64_t v57 = (char *)v8 + v154;
          uint64_t v58 = (char *)v9 + v154;
LABEL_87:
          uint64_t v155 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 32))(v57, v58, v155);
          uint64_t v10 = v278;
LABEL_88:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v14);
          uint64_t v9 = v289;
          goto LABEL_89;
        }
        uint64_t v89 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v89))
        {
          uint64_t v90 = sub_253462A5C(&qword_269CE0490);
          memcpy(v8, v9, *(void *)(*(void *)(v90 - 8) + 64));
LABEL_83:
          uint64_t v148 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v149 = (char *)v8 + v148;
          uint64_t v150 = v9;
          uint64_t v151 = (char *)v9 + v148;
          uint64_t v152 = sub_253B07160();
          uint64_t v153 = v151;
          uint64_t v9 = v150;
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 32))(v149, v153, v152);
          goto LABEL_84;
        }
        int v135 = swift_getEnumCaseMultiPayload();
        if (v135 == 1)
        {
          uint64_t v140 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v289, 1, v140))
          {
            uint64_t v141 = sub_253462A5C(&qword_269CE0488);
            memcpy(v8, v289, *(void *)(*(void *)(v141 - 8) + 64));
          }
          else
          {
            *(unsigned char *)uint64_t v8 = *v289;
            uint64_t v142 = *(int *)(v140 + 20);
            uint64_t v287 = (char *)v8 + v142;
            uint64_t v271 = &v289[v142];
            uint64_t v143 = sub_253B07160();
            (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v143 - 8) + 32))(v287, v271, v143);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v140);
          }
          uint64_t v144 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v145 = (char *)v8 + v144;
          uint64_t v146 = &v289[v144];
          uint64_t v147 = sub_253B07160();
          (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v147 - 8) + 32))(v145, v146, v147);
        }
        else
        {
          if (v135)
          {
            memcpy(v8, v9, *(void *)(*(void *)(v89 - 8) + 64));
LABEL_82:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v89);
            uint64_t v9 = v289;
            goto LABEL_83;
          }
          *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
          uint64_t v136 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v137 = (char *)v8 + v136;
          uint64_t v138 = &v289[v136];
          uint64_t v139 = sub_253B07160();
          (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v139 - 8) + 32))(v137, v138, v139);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_82;
      case 8u:
        void *v8 = *v9;
        *(_OWORD *)(v8 + 1) = *(_OWORD *)(v9 + 1);
        uint64_t v30 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        goto LABEL_62;
      case 9u:
        uint64_t v47 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v47))
        {
          uint64_t v48 = sub_253462A5C(&qword_269CE04A8);
          memcpy(v8, v9, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          uint64_t v280 = v10;
          uint64_t v66 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v66))
          {
            uint64_t v67 = sub_253462A5C(&qword_269CE04A0);
            memcpy(v8, v9, *(void *)(*(void *)(v67 - 8) + 64));
          }
          else
          {
            uint64_t v82 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 16, v82))
            {
              memcpy(v8, v9, *(void *)(*(void *)(v66 - 8) + 64));
            }
            else
            {
              long long v97 = *((_OWORD *)v9 + 1);
              *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
              *((_OWORD *)v8 + 1) = v97;
              v8[4] = v9[4];
              uint64_t v98 = *(int *)(v82 + 28);
              uint64_t v286 = (char *)v8 + v98;
              uint64_t v99 = (char *)v9 + v98;
              uint64_t v100 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v286, v99, v100);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 16, v82);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v66);
            uint64_t v9 = v289;
          }
          uint64_t v101 = *(int *)(v47 + 20);
          uint64_t v102 = (char *)v8 + v101;
          uint64_t v103 = (char *)v9 + v101;
          uint64_t v104 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 32))(v102, v103, v104);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v47);
          uint64_t v10 = v280;
        }
        uint64_t v27 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_61;
      case 0xAu:
        void *v8 = *v9;
        uint64_t v27 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
LABEL_61:
        uint64_t v30 = *(int *)(v27 + 20);
LABEL_62:
        uint64_t v105 = (char *)v8 + v30;
        uint64_t v106 = (char *)v9 + v30;
        goto LABEL_72;
      default:
        uint64_t v277 = v10;
        *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
        *(_WORD *)((char *)v8 + 1) = *(_WORD *)((char *)v9 + 1);
        uint64_t v269 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v16 = v269[7];
        int v17 = (char *)v8 + v16;
        int v18 = (char *)v9 + v16;
        uint64_t v19 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
        {
          uint64_t v20 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
        }
        uint64_t v50 = v269[8];
        uint64_t v285 = v8;
        uint64_t v51 = (_OWORD *)((char *)v8 + v50);
        uint64_t v52 = &v289[v50];
        uint64_t v53 = type metadata accessor for TranscriptProtoUndoContext(0);
        uint64_t v10 = v277;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v52, 1, v53))
        {
          uint64_t v54 = sub_253462A5C(&qword_269CE0450);
          memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          long long v68 = v52[1];
          *uint64_t v51 = *v52;
          v51[1] = v68;
          v51[2] = v52[2];
          uint64_t v69 = *(int *)(v53 + 28);
          uint64_t v70 = (char *)v51 + v69;
          uint64_t v71 = (char *)v52 + v69;
          uint64_t v72 = sub_253B07160();
          uint64_t v73 = v70;
          uint64_t v10 = v277;
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v73, v71, v72);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v51, 0, 1, v53);
        }
        uint64_t v74 = v269[9];
        uint64_t v8 = v285;
        uint64_t v75 = (_OWORD *)((char *)v285 + v74);
        uint64_t v76 = &v289[v74];
        uint64_t v77 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        __src = v76;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v76, 1, v77))
        {
          uint64_t v78 = sub_253462A5C(&qword_269CE0468);
          memcpy(v75, v76, *(void *)(*(void *)(v78 - 8) + 64));
        }
        else
        {
          uint64_t v79 = (uint64_t)v75;
          uint64_t v80 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__src, 1, v80))
          {
            uint64_t v81 = sub_253462A5C(&qword_269CE0460);
            memcpy(v75, __src, *(void *)(*(void *)(v81 - 8) + 64));
          }
          else
          {
            uint64_t v87 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__src, 1, v87))
            {
              uint64_t v88 = sub_253462A5C(&qword_269CE0458);
              memcpy(v75, __src, *(void *)(*(void *)(v88 - 8) + 64));
            }
            else
            {
              long long v119 = __src[1];
              _OWORD *v75 = *__src;
              v75[1] = v119;
              *((void *)v75 + 4) = *((void *)__src + 4);
              uint64_t v120 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              uint64_t v121 = (char *)v75 + v120;
              uint64_t v262 = v87;
              uint64_t v122 = (char *)__src + v120;
              uint64_t v123 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 32))(v121, v122, v123);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v79, 0, 1, v262);
            }
            uint64_t v124 = *(int *)(v80 + 20);
            uint64_t v125 = v79 + v124;
            uint64_t v126 = (char *)__src + v124;
            uint64_t v127 = sub_253B07160();
            uint64_t v128 = v125;
            uint64_t v75 = (_OWORD *)v79;
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v127 - 8) + 32))(v128, v126, v127);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v79, 0, 1, v80);
            uint64_t v8 = v285;
          }
          uint64_t v129 = v77;
          uint64_t v130 = *(int *)(v77 + 20);
          uint64_t v131 = (char *)v75 + v130;
          uint64_t v132 = (char *)__src + v130;
          uint64_t v133 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 32))(v131, v132, v133);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v75, 0, 1, v129);
          uint64_t v10 = v277;
        }
        uint64_t v118 = v289;
        *(_OWORD *)((char *)v8 + v269[10]) = *(_OWORD *)&v289[v269[10]];
        uint64_t v117 = v269[11];
LABEL_71:
        uint64_t v105 = (char *)v8 + v117;
        uint64_t v106 = &v118[v117];
LABEL_72:
        uint64_t v134 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 32))(v105, v106, v134);
        goto LABEL_88;
    }
  }
  uint64_t v13 = sub_253462A5C(&qword_269CE0388);
  memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
LABEL_90:
  uint64_t v162 = *(int *)(v10 + 20);
  uint64_t v163 = (void *)((char *)v8 + v162);
  uint64_t v164 = (void *)((char *)v9 + v162);
  uint64_t v165 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v164, 1, (uint64_t)v165))
  {
    uint64_t v166 = sub_253462A5C(&qword_269CE0378);
    memcpy(v163, v164, *(void *)(*(void *)(v166 - 8) + 64));
  }
  else
  {
    uint64_t v288 = v8;
    uint64_t v290 = v9;
    void *v163 = *v164;
    uint64_t v167 = v165[5];
    uint64_t v168 = (_OWORD *)((char *)v163 + v167);
    uint64_t v169 = (_OWORD *)((char *)v164 + v167);
    uint64_t v170 = type metadata accessor for TranscriptProtoResponseDialog(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v169, 1, v170))
    {
      uint64_t v171 = sub_253462A5C(&qword_269CE04B8);
      memcpy(v168, v169, *(void *)(*(void *)(v171 - 8) + 64));
    }
    else
    {
      long long v172 = v169[1];
      _OWORD *v168 = *v169;
      v168[1] = v172;
      long long v173 = v169[3];
      v168[2] = v169[2];
      v168[3] = v173;
      uint64_t v174 = *(int *)(v170 + 32);
      __dstb = v3;
      uint64_t v175 = v10;
      uint64_t v176 = (char *)v168 + v174;
      uint64_t v177 = (char *)v169 + v174;
      uint64_t v178 = sub_253B07160();
      uint64_t v179 = v176;
      uint64_t v10 = v175;
      uint64_t v3 = __dstb;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 32))(v179, v177, v178);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v168, 0, 1, v170);
    }
    uint64_t v180 = v165[6];
    uint64_t v181 = (_OWORD *)((char *)v163 + v180);
    uint64_t v182 = (_OWORD *)((char *)v164 + v180);
    uint64_t v183 = type metadata accessor for TranscriptProtoResponseVisual(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v182, 1, v183))
    {
      uint64_t v184 = sub_253462A5C(&qword_269CE04C8);
      memcpy(v181, v182, *(void *)(*(void *)(v184 - 8) + 64));
    }
    else
    {
      *uint64_t v181 = *v182;
      uint64_t v185 = *(int *)(v183 + 24);
      __dst = (char *)v181 + v185;
      uint64_t v281 = v10;
      uint64_t v186 = (char *)v182 + v185;
      uint64_t v272 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v186, 1, v272))
      {
        uint64_t v187 = sub_253462A5C(&qword_269CE04C0);
        memcpy(__dst, v186, *(void *)(*(void *)(v187 - 8) + 64));
      }
      else
      {
        unsigned char *__dst = *v186;
        uint64_t v188 = *(int *)(v272 + 20);
        __srcc = &__dst[v188];
        uint64_t v189 = &v186[v188];
        uint64_t v190 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v190 - 8) + 32))(__srcc, v189, v190);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v272);
      }
      uint64_t v191 = *(int *)(v183 + 28);
      uint64_t v192 = (char *)v181 + v191;
      uint64_t v193 = (char *)v182 + v191;
      uint64_t v194 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v194 - 8) + 32))(v192, v193, v194);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v181, 0, 1, v183);
      uint64_t v10 = v281;
    }
    *(_OWORD *)((char *)v163 + v165[7]) = *(_OWORD *)((char *)v164 + v165[7]);
    *(_OWORD *)((char *)v163 + v165[8]) = *(_OWORD *)((char *)v164 + v165[8]);
    *((unsigned char *)v163 + v165[9]) = *((unsigned char *)v164 + v165[9]);
    *((unsigned char *)v163 + v165[10]) = *((unsigned char *)v164 + v165[10]);
    uint64_t v195 = v165[11];
    uint64_t v196 = (_OWORD *)((char *)v163 + v195);
    uint64_t v197 = (_OWORD *)((char *)v164 + v195);
    uint64_t v198 = type metadata accessor for TranscriptProtoUIType(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v197, 1, v198))
    {
      uint64_t v199 = sub_253462A5C(&qword_269CE04D0);
      memcpy(v196, v197, *(void *)(*(void *)(v199 - 8) + 64));
    }
    else
    {
      __dsta = (int *)v198;
      uint64_t v200 = type metadata accessor for TranscriptProtoUitype(0);
      uint64_t v282 = v10;
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v197, 1, v200))
      {
        uint64_t v201 = sub_253462A5C(&qword_269CDCC08);
        memcpy(v196, v197, *(void *)(*(void *)(v201 - 8) + 64));
      }
      else
      {
        uint64_t v273 = v200;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            _OWORD *v196 = *v197;
            uint64_t v204 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
            goto LABEL_110;
          case 2u:
            long long v205 = v197[1];
            _OWORD *v196 = *v197;
            v196[1] = v205;
            uint64_t v203 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
            break;
          case 3u:
            _OWORD *v196 = *v197;
            uint64_t v204 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_110:
            uint64_t v203 = *(int *)(v204 + 20);
            break;
          default:
            long long v202 = v197[1];
            _OWORD *v196 = *v197;
            v196[1] = v202;
            v196[2] = v197[2];
            uint64_t v203 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
            break;
        }
        uint64_t v206 = (char *)v196 + v203;
        __srcd = (char *)v197 + v203;
        uint64_t v207 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v207 - 8) + 32))(v206, __srcd, v207);
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v196, 0, 1, v273);
      }
      uint64_t v208 = __dsta[5];
      uint64_t v209 = (char *)v196 + v208;
      uint64_t v210 = (char *)v197 + v208;
      uint64_t v211 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v211 - 8) + 32))(v209, v210, v211);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v196, 0, 1, (uint64_t)__dsta);
      uint64_t v10 = v282;
    }
    uint64_t v212 = v165[12];
    uint64_t v213 = (char *)v163 + v212;
    uint64_t v214 = (char *)v164 + v212;
    uint64_t v215 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v215 - 8) + 32))(v213, v214, v215);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v163, 0, 1, (uint64_t)v165);
    uint64_t v8 = v288;
    uint64_t v9 = v290;
  }
  uint64_t v216 = *(int *)(v10 + 24);
  uint64_t v217 = (char *)v8 + v216;
  uint64_t v218 = (char *)v9 + v216;
  uint64_t v219 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 32))(v217, v218, v219);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_115:
  uint64_t v220 = v3[7];
  uint64_t v221 = (_DWORD *)((char *)a1 + v220);
  uint64_t v222 = (_DWORD *)((char *)a2 + v220);
  uint64_t v223 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v222, 1, v223))
  {
    uint64_t v224 = sub_253462A5C(&qword_26B249528);
    memcpy(v221, v222, *(void *)(*(void *)(v224 - 8) + 64));
  }
  else
  {
    _DWORD *v221 = *v222;
    *(_OWORD *)(v221 + 2) = *(_OWORD *)(v222 + 2);
    uint64_t v225 = *(int *)(v223 + 24);
    uint64_t v226 = (char *)v221 + v225;
    uint64_t v227 = (char *)v222 + v225;
    uint64_t v228 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v228 - 8) + 32))(v226, v227, v228);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v221, 0, 1, v223);
  }
  uint64_t v229 = v3[8];
  uint64_t v230 = (_DWORD *)((char *)a1 + v229);
  uint64_t v231 = (_DWORD *)((char *)a2 + v229);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v229, 1, v223))
  {
    uint64_t v232 = sub_253462A5C(&qword_26B249528);
    memcpy(v230, v231, *(void *)(*(void *)(v232 - 8) + 64));
  }
  else
  {
    *uint64_t v230 = *v231;
    *(_OWORD *)(v230 + 2) = *(_OWORD *)(v231 + 2);
    uint64_t v233 = *(int *)(v223 + 24);
    uint64_t v234 = (char *)v230 + v233;
    uint64_t v235 = (char *)v231 + v233;
    uint64_t v236 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v236 - 8) + 32))(v234, v235, v236);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v230, 0, 1, v223);
  }
  uint64_t v237 = v3[9];
  uint64_t v238 = (_DWORD *)((char *)a1 + v237);
  uint64_t v239 = (_DWORD *)((char *)a2 + v237);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2 + v237, 1, v223))
  {
    uint64_t v240 = sub_253462A5C(&qword_26B249528);
    memcpy(v238, v239, *(void *)(*(void *)(v240 - 8) + 64));
  }
  else
  {
    *uint64_t v238 = *v239;
    *(_OWORD *)(v238 + 2) = *(_OWORD *)(v239 + 2);
    uint64_t v241 = *(int *)(v223 + 24);
    uint64_t v242 = (char *)v238 + v241;
    uint64_t v243 = (char *)v239 + v241;
    uint64_t v244 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v244 - 8) + 32))(v242, v243, v244);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v238, 0, 1, v223);
  }
  uint64_t v245 = v3[10];
  uint64_t v246 = (_OWORD *)((char *)a1 + v245);
  uint64_t v247 = (_OWORD *)((char *)a2 + v245);
  uint64_t v248 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v247, 1, v248))
  {
    uint64_t v249 = sub_253462A5C(&qword_269CE0448);
    memcpy(v246, v247, *(void *)(*(void *)(v249 - 8) + 64));
  }
  else
  {
    long long v250 = v247[1];
    *uint64_t v246 = *v247;
    v246[1] = v250;
    uint64_t v251 = *(int *)(v248 + 24);
    uint64_t v252 = (char *)v246 + v251;
    uint64_t v253 = (char *)v247 + v251;
    uint64_t v254 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v254 - 8) + 32))(v252, v253, v254);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v246, 0, 1, v248);
  }
  uint64_t v255 = v3[11];
  uint64_t v256 = (char *)a1 + v255;
  uint64_t v257 = (char *)a2 + v255;
  uint64_t v258 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v258 - 8) + 32))(v256, v257, v258);
  return a1;
}

void *assignWithTake for TranscriptProtoStatementResult(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = v4[3];
  a1[2] = v4[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)v4 + v8);
  uint64_t v11 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v11);
  int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11);
  if (v12)
  {
    if (!v13)
    {
      int v1071 = a3;
      uint64_t v14 = type metadata accessor for TranscriptProtoStatementOutcome(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v14))
      {
        uint64_t v15 = sub_253462A5C(&qword_269CE0388);
        memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
LABEL_291:
        uint64_t v554 = *(int *)(v11 + 20);
        uint64_t v555 = (void *)((char *)v9 + v554);
        uint64_t v556 = (void *)((char *)v10 + v554);
        uint64_t v557 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v556, 1, (uint64_t)v557))
        {
          uint64_t v558 = sub_253462A5C(&qword_269CE0378);
          memcpy(v555, v556, *(void *)(*(void *)(v558 - 8) + 64));
        }
        else
        {
          __srcm = v10;
          uint64_t v1063 = v11;
          v1014 = v9;
          *uint64_t v555 = *v556;
          uint64_t v559 = v557[5];
          uint64_t v560 = (_OWORD *)((char *)v555 + v559);
          uint64_t v561 = (_OWORD *)((char *)v556 + v559);
          uint64_t v562 = type metadata accessor for TranscriptProtoResponseDialog(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v561, 1, v562))
          {
            uint64_t v563 = sub_253462A5C(&qword_269CE04B8);
            memcpy(v560, v561, *(void *)(*(void *)(v563 - 8) + 64));
          }
          else
          {
            long long v564 = v561[1];
            *uint64_t v560 = *v561;
            v560[1] = v564;
            long long v565 = v561[3];
            v560[2] = v561[2];
            v560[3] = v565;
            uint64_t v566 = *(int *)(v562 + 32);
            uint64_t v567 = (char *)v560 + v566;
            uint64_t v568 = (char *)v561 + v566;
            uint64_t v569 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v569 - 8) + 32))(v567, v568, v569);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v560, 0, 1, v562);
          }
          uint64_t v1026 = v4;
          uint64_t v570 = v557[6];
          uint64_t v571 = (_OWORD *)((char *)v555 + v570);
          uint64_t v572 = (_OWORD *)((char *)v556 + v570);
          uint64_t v573 = type metadata accessor for TranscriptProtoResponseVisual(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v572, 1, v573))
          {
            uint64_t v574 = sub_253462A5C(&qword_269CE04C8);
            memcpy(v571, v572, *(void *)(*(void *)(v574 - 8) + 64));
          }
          else
          {
            *uint64_t v571 = *v572;
            uint64_t v575 = *(int *)(v573 + 24);
            uint64_t v576 = (char *)v571 + v575;
            uint64_t v577 = (char *)v572 + v575;
            uint64_t v578 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v577, 1, v578))
            {
              uint64_t v579 = sub_253462A5C(&qword_269CE04C0);
              memcpy(v576, v577, *(void *)(*(void *)(v579 - 8) + 64));
            }
            else
            {
              *uint64_t v576 = *v577;
              uint64_t v580 = *(int *)(v578 + 20);
              uint64_t v1002 = &v576[v580];
              uint64_t v581 = &v577[v580];
              uint64_t v582 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v582 - 8) + 32))(v1002, v581, v582);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v576, 0, 1, v578);
            }
            uint64_t v583 = *(int *)(v573 + 28);
            uint64_t v584 = (char *)v571 + v583;
            uint64_t v585 = (char *)v572 + v583;
            uint64_t v586 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v586 - 8) + 32))(v584, v585, v586);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v571, 0, 1, v573);
          }
          *(_OWORD *)((char *)v555 + v557[7]) = *(_OWORD *)((char *)v556 + v557[7]);
          *(_OWORD *)((char *)v555 + v557[8]) = *(_OWORD *)((char *)v556 + v557[8]);
          *((unsigned char *)v555 + v557[9]) = *((unsigned char *)v556 + v557[9]);
          *((unsigned char *)v555 + v557[10]) = *((unsigned char *)v556 + v557[10]);
          uint64_t v587 = v557[11];
          uint64_t v588 = (_OWORD *)((char *)v555 + v587);
          uint64_t v589 = (_OWORD *)((char *)v556 + v587);
          uint64_t v590 = type metadata accessor for TranscriptProtoUIType(0);
          uint64_t v11 = v1063;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v589, 1, v590))
          {
            uint64_t v591 = sub_253462A5C(&qword_269CE04D0);
            memcpy(v588, v589, *(void *)(*(void *)(v591 - 8) + 64));
          }
          else
          {
            uint64_t v592 = type metadata accessor for TranscriptProtoUitype(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v589, 1, v592))
            {
              uint64_t v593 = sub_253462A5C(&qword_269CDCC08);
              memcpy(v588, v589, *(void *)(*(void *)(v593 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  _OWORD *v588 = *v589;
                  uint64_t v596 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
                  goto LABEL_311;
                case 2u:
                  long long v597 = v589[1];
                  _OWORD *v588 = *v589;
                  v588[1] = v597;
                  uint64_t v595 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
                  break;
                case 3u:
                  _OWORD *v588 = *v589;
                  uint64_t v596 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_311:
                  uint64_t v595 = *(int *)(v596 + 20);
                  break;
                default:
                  long long v594 = v589[1];
                  _OWORD *v588 = *v589;
                  v588[1] = v594;
                  v588[2] = v589[2];
                  uint64_t v595 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
                  break;
              }
              uint64_t v598 = (char *)v588 + v595;
              uint64_t v599 = (char *)v589 + v595;
              uint64_t v600 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v600 - 8) + 32))(v598, v599, v600);
              swift_storeEnumTagMultiPayload();
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v588, 0, 1, v592);
            }
            uint64_t v11 = v1063;
            uint64_t v601 = *(int *)(v590 + 20);
            uint64_t v602 = (char *)v588 + v601;
            uint64_t v603 = (char *)v589 + v601;
            uint64_t v604 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v604 - 8) + 32))(v602, v603, v604);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v588, 0, 1, v590);
          }
          uint64_t v605 = v557[12];
          uint64_t v606 = (char *)v555 + v605;
          v607 = (char *)v556 + v605;
          uint64_t v608 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v608 - 8) + 32))(v606, v607, v608);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v555, 0, 1, (uint64_t)v557);
          uint64_t v9 = v1014;
          uint64_t v4 = v1026;
          uint64_t v10 = __srcm;
        }
        uint64_t v609 = *(int *)(v11 + 24);
        uint64_t v610 = (char *)v9 + v609;
        uint64_t v611 = (char *)v10 + v609;
        uint64_t v612 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v612 - 8) + 32))(v610, v611, v612);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
        goto LABEL_451;
      }
      uint64_t v22 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v22))
      {
        uint64_t v23 = sub_253462A5C(&qword_269CE04B0);
        memcpy(v9, v10, *(void *)(*(void *)(v23 - 8) + 64));
LABEL_290:
        uint64_t v550 = *(int *)(v14 + 20);
        uint64_t v551 = (char *)v9 + v550;
        uint64_t v552 = (char *)v10 + v550;
        uint64_t v553 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v553 - 8) + 32))(v551, v552, v553);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v14);
        goto LABEL_291;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v50 = v11;
          uint64_t v1020 = v4;
          *uint64_t v9 = *v10;
          uint64_t v51 = type metadata accessor for TranscriptProtoActionConfirmation(0);
          uint64_t v52 = *(int *)(v51 + 20);
          uint64_t v53 = v9;
          uint64_t v54 = (char *)v9 + v52;
          __src = v10;
          uint64_t v55 = (char *)v10 + v52;
          uint64_t v56 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v55, 1, v56))
          {
            uint64_t v57 = sub_253462A5C(&qword_269CE0480);
            memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
          }
          else
          {
            uint64_t v132 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
            uint64_t v1048 = v51;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v55, 1, v132))
            {
              uint64_t v133 = sub_253462A5C(&qword_269CE0478);
              memcpy(v54, v55, *(void *)(*(void *)(v133 - 8) + 64));
            }
            else
            {
              uint64_t v984 = (void *)v132;
              *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
              v54[16] = v55[16];
              uint64_t v212 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
              uint64_t v213 = *(int *)(v212 + 24);
              __dst = &v54[v213];
              uint64_t v980 = v212;
              uint64_t v214 = &v55[v213];
              uint64_t v970 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v214, 1, v970))
              {
                uint64_t v215 = sub_253462A5C(&qword_269CE0470);
                memcpy(__dst, v214, *(void *)(*(void *)(v215 - 8) + 64));
              }
              else
              {
                unsigned char *__dst = *v214;
                uint64_t v311 = *(int *)(v970 + 20);
                uint64_t v968 = &__dst[v311];
                uint64_t v312 = &v214[v311];
                uint64_t v313 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v313 - 8) + 32))(v968, v312, v313);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v970);
              }
              uint64_t v314 = *(int *)(v980 + 28);
              uint64_t v315 = &v54[v314];
              uint64_t v316 = &v55[v314];
              uint64_t v317 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v317 - 8) + 32))(v315, v316, v317);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v54, 0, 1, (uint64_t)v984);
            }
            uint64_t v318 = *(int *)(v56 + 20);
            uint64_t v319 = &v54[v318];
            uint64_t v320 = &v55[v318];
            uint64_t v321 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v321 - 8) + 32))(v319, v320, v321);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v54, 0, 1, v56);
            uint64_t v51 = v1048;
          }
          uint64_t v322 = *(int *)(v51 + 24);
          uint64_t v9 = v53;
          uint64_t v323 = (char *)v53 + v322;
          uint64_t v10 = __src;
          uint64_t v324 = (char *)__src + v322;
          uint64_t v325 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v325 - 8) + 32))(v323, v324, v325);
          uint64_t v4 = v1020;
          goto LABEL_288;
        case 2u:
          *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
          uint64_t v58 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
          goto LABEL_47;
        case 3u:
          uint64_t v1045 = v11;
          *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
          v9[2] = v10[2];
          *((unsigned char *)v9 + 24) = *((unsigned char *)v10 + 24);
          uint64_t v59 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
          goto LABEL_37;
        case 4u:
          *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
          uint64_t v60 = v10[3];
          v9[2] = v10[2];
          v9[3] = v60;
          *((unsigned char *)v9 + 32) = *((unsigned char *)v10 + 32);
          uint64_t v61 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
          goto LABEL_48;
        case 5u:
          uint64_t v1045 = v11;
          *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
          *((unsigned char *)v9 + 16) = *((unsigned char *)v10 + 16);
          uint64_t v59 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_37:
          uint64_t v62 = v59;
          uint64_t v63 = *(int *)(v59 + 24);
          uint64_t v64 = v10;
          uint64_t v65 = (char *)v9 + v63;
          uint64_t v66 = v64;
          uint64_t v67 = (char *)v64 + v63;
          uint64_t v68 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v67, 1, v68))
          {
            uint64_t v69 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v65, v67, *(void *)(*(void *)(v69 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v65, v67, v68);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v65, 0, 1, v68);
          }
          uint64_t v91 = *(int *)(v62 + 28);
          goto LABEL_80;
        case 6u:
          uint64_t v1045 = v11;
          *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
          uint64_t v70 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
          uint64_t v71 = *(int *)(v70 + 20);
          uint64_t v72 = v10;
          uint64_t v73 = (char *)v9 + v71;
          uint64_t v66 = v72;
          uint64_t v74 = (char *)v72 + v71;
          uint64_t v75 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v74, 1, v75))
          {
            uint64_t v76 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v73, v74, *(void *)(*(void *)(v76 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v73, 0, 1, v75);
          }
          uint64_t v91 = *(int *)(v70 + 24);
LABEL_80:
          uint64_t v134 = (char *)v9 + v91;
          uint64_t v10 = v66;
          int v135 = (char *)v66 + v91;
          uint64_t v136 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 32))(v134, v135, v136);
          uint64_t v11 = v1045;
          goto LABEL_289;
        case 7u:
          uint64_t v1021 = v4;
          uint64_t v77 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v77))
          {
            uint64_t v50 = v11;
            uint64_t v78 = sub_253462A5C(&qword_269CE0498);
            uint64_t v79 = (uint64_t)v9;
            memcpy(v9, v10, *(void *)(*(void *)(v78 - 8) + 64));
            goto LABEL_287;
          }
          __srcc = v10;
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v50 = v11;
          if (EnumCaseMultiPayload != 2)
          {
            if (EnumCaseMultiPayload == 1)
            {
              uint64_t v79 = (uint64_t)v9;
              *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
              uint64_t v235 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
              uint64_t v236 = (char *)v9 + v235;
              uint64_t v237 = (char *)v10 + v235;
              uint64_t v238 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v238 - 8) + 32))(v236, v237, v238);
            }
            else
            {
              if (EnumCaseMultiPayload)
              {
                uint64_t v79 = (uint64_t)v9;
                memcpy(v9, v10, *(void *)(*(void *)(v77 - 8) + 64));
                goto LABEL_286;
              }
              uint64_t v79 = (uint64_t)v9;
              *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
              uint64_t v138 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
              uint64_t v139 = (char *)v9 + v138;
              uint64_t v140 = (char *)v10 + v138;
              uint64_t v141 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 32))(v139, v140, v141);
            }
LABEL_285:
            swift_storeEnumTagMultiPayload();
LABEL_286:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v79, 0, 1, v77);
            uint64_t v10 = __srcc;
LABEL_287:
            uint64_t v546 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
            uint64_t v547 = v79 + v546;
            uint64_t v548 = (char *)v10 + v546;
            uint64_t v549 = sub_253B07160();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v549 - 8) + 32))(v547, v548, v549);
            uint64_t v4 = v1021;
            uint64_t v9 = (void *)v79;
LABEL_288:
            uint64_t v11 = v50;
LABEL_289:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v22);
            goto LABEL_290;
          }
          uint64_t v232 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
          uint64_t v233 = v10;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v232))
          {
            uint64_t v234 = sub_253462A5C(&qword_269CE0490);
            uint64_t v79 = (uint64_t)v9;
            memcpy(v9, v10, *(void *)(*(void *)(v234 - 8) + 64));
LABEL_284:
            uint64_t v542 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
            uint64_t v543 = v79 + v542;
            uint64_t v544 = (char *)v233 + v542;
            uint64_t v545 = sub_253B07160();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v545 - 8) + 32))(v543, v544, v545);
            goto LABEL_285;
          }
          int v376 = swift_getEnumCaseMultiPayload();
          if (v376 == 1)
          {
            uint64_t v473 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v473))
            {
              uint64_t v474 = sub_253462A5C(&qword_269CE0488);
              memcpy(v9, v10, *(void *)(*(void *)(v474 - 8) + 64));
            }
            else
            {
              *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
              uint64_t v535 = *(int *)(v473 + 20);
              uint64_t v536 = (char *)v9 + v535;
              uint64_t v1062 = (char *)__srcc + v535;
              uint64_t v537 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v537 - 8) + 32))(v536, v1062, v537);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v473);
            }
            uint64_t v538 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
            uint64_t v79 = (uint64_t)v9;
            uint64_t v539 = (char *)v9 + v538;
            uint64_t v540 = (char *)__srcc + v538;
            uint64_t v541 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v541 - 8) + 32))(v539, v540, v541);
          }
          else
          {
            if (v376)
            {
              uint64_t v79 = (uint64_t)v9;
              memcpy(v9, v10, *(void *)(*(void *)(v232 - 8) + 64));
LABEL_283:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v79, 0, 1, v232);
              uint64_t v233 = __srcc;
              goto LABEL_284;
            }
            uint64_t v79 = (uint64_t)v9;
            *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
            uint64_t v377 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
            unint64_t v378 = (char *)v9 + v377;
            uint64_t v379 = (char *)v10 + v377;
            uint64_t v380 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v380 - 8) + 32))(v378, v379, v380);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_283;
        case 8u:
          *uint64_t v9 = *v10;
          *(_OWORD *)(v9 + 1) = *(_OWORD *)(v10 + 1);
          uint64_t v61 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
          goto LABEL_48;
        case 9u:
          uint64_t v50 = v11;
          uint64_t v80 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v80))
          {
            uint64_t v81 = sub_253462A5C(&qword_269CE04A8);
            memcpy(v9, v10, *(void *)(*(void *)(v81 - 8) + 64));
          }
          else
          {
            uint64_t v142 = v10;
            uint64_t v143 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v142, 1, v143))
            {
              uint64_t v144 = sub_253462A5C(&qword_269CE04A0);
              memcpy(v9, v142, *(void *)(*(void *)(v144 - 8) + 64));
              uint64_t v10 = v142;
            }
            else
            {
              uint64_t v216 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
              __srcf = v142;
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v142, 16, v216))
              {
                memcpy(v9, v142, *(void *)(*(void *)(v143 - 8) + 64));
              }
              else
              {
                long long v326 = v142[1];
                *(_OWORD *)uint64_t v9 = *v142;
                *((_OWORD *)v9 + 1) = v326;
                v9[4] = *((void *)v142 + 4);
                uint64_t v327 = *(int *)(v216 + 28);
                v1054 = (char *)v9 + v327;
                uint64_t v328 = (char *)v142 + v327;
                uint64_t v329 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v329 - 8) + 32))(v1054, v328, v329);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 16, v216);
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v143);
              uint64_t v10 = __srcf;
            }
            uint64_t v330 = *(int *)(v80 + 20);
            uint64_t v331 = (char *)v9 + v330;
            uint64_t v332 = (char *)v10 + v330;
            uint64_t v333 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v333 - 8) + 32))(v331, v332, v333);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v80);
          }
          uint64_t v334 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
          int v335 = (char *)v9 + v334;
          uint64_t v336 = (char *)v10 + v334;
          uint64_t v337 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v337 - 8) + 32))(v335, v336, v337);
          goto LABEL_288;
        case 0xAu:
          *uint64_t v9 = *v10;
          uint64_t v58 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
LABEL_47:
          uint64_t v61 = *(int *)(v58 + 20);
LABEL_48:
          uint64_t v82 = (char *)v9 + v61;
          uint64_t v83 = (char *)v10 + v61;
          uint64_t v84 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v82, v83, v84);
          goto LABEL_289;
        default:
          uint64_t v25 = v11;
          uint64_t v1017 = v4;
          *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
          *(_WORD *)((char *)v9 + 1) = *(_WORD *)((char *)v10 + 1);
          uint64_t v26 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
          uint64_t v27 = v26[7];
          uint64_t v28 = (char *)v9 + v27;
          uint64_t v29 = (char *)v10 + v27;
          uint64_t v30 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v30))
          {
            uint64_t v31 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v28, 0, 1, v30);
          }
          uint64_t v92 = v26[8];
          uint64_t v1009 = v9;
          uint64_t v93 = (_OWORD *)((char *)v9 + v92);
          __srca = v10;
          uint64_t v94 = (_OWORD *)((char *)v10 + v92);
          uint64_t v95 = type metadata accessor for TranscriptProtoUndoContext(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v94, 1, v95))
          {
            uint64_t v96 = sub_253462A5C(&qword_269CE0450);
            memcpy(v93, v94, *(void *)(*(void *)(v96 - 8) + 64));
          }
          else
          {
            long long v145 = v94[1];
            _OWORD *v93 = *v94;
            v93[1] = v145;
            v93[2] = v94[2];
            uint64_t v146 = *(int *)(v95 + 28);
            uint64_t v147 = (char *)v93 + v146;
            uint64_t v148 = (char *)v94 + v146;
            uint64_t v149 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 32))(v147, v148, v149);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v93, 0, 1, v95);
          }
          uint64_t v150 = v26[9];
          uint64_t v151 = (_OWORD *)((char *)v1009 + v150);
          uint64_t v152 = (_OWORD *)((char *)__srca + v150);
          uint64_t v153 = type metadata accessor for TranscriptProtoFollowUpAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v152, 1, v153))
          {
            uint64_t v11 = v25;
            uint64_t v154 = sub_253462A5C(&qword_269CE0468);
            memcpy(v151, v152, *(void *)(*(void *)(v154 - 8) + 64));
          }
          else
          {
            uint64_t v155 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v152, 1, v155))
            {
              uint64_t v156 = sub_253462A5C(&qword_269CE0460);
              memcpy(v151, v152, *(void *)(*(void *)(v156 - 8) + 64));
              uint64_t v11 = v25;
            }
            else
            {
              uint64_t v1051 = v153;
              uint64_t v217 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v152, 1, v217))
              {
                uint64_t v218 = sub_253462A5C(&qword_269CE0458);
                memcpy(v151, v152, *(void *)(*(void *)(v218 - 8) + 64));
              }
              else
              {
                long long v338 = v152[1];
                *uint64_t v151 = *v152;
                v151[1] = v338;
                *((void *)v151 + 4) = *((void *)v152 + 4);
                uint64_t v339 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                              + 28);
                uint64_t v986 = (void *)v217;
                uint64_t v340 = (char *)v151 + v339;
                uint64_t v341 = (char *)v152 + v339;
                uint64_t v342 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v342 - 8) + 32))(v340, v341, v342);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v151, 0, 1, (uint64_t)v986);
              }
              uint64_t v343 = *(int *)(v155 + 20);
              uint64_t v344 = (char *)v151 + v343;
              uint64_t v345 = (char *)v152 + v343;
              uint64_t v346 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v346 - 8) + 32))(v344, v345, v346);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v151, 0, 1, v155);
              uint64_t v11 = v25;
              uint64_t v153 = v1051;
            }
            uint64_t v347 = *(int *)(v153 + 20);
            uint64_t v348 = v153;
            uint64_t v349 = (char *)v151 + v347;
            uint64_t v350 = (char *)v152 + v347;
            uint64_t v351 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v351 - 8) + 32))(v349, v350, v351);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v151, 0, 1, v348);
          }
          uint64_t v10 = __srca;
          uint64_t v9 = v1009;
          *(_OWORD *)((char *)v1009 + v26[10]) = *(_OWORD *)((char *)__srca + v26[10]);
          uint64_t v352 = v26[11];
          uint64_t v353 = (char *)v1009 + v352;
          uint64_t v354 = (char *)__srca + v352;
          uint64_t v355 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v355 - 8) + 32))(v353, v354, v355);
          uint64_t v4 = v1017;
          goto LABEL_289;
      }
    }
LABEL_7:
    uint64_t v16 = sub_253462A5C(&qword_269CE1C80);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_452;
  }
  if (v13)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  uint64_t v17 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  int v18 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v17);
  int v19 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v17);
  int v1071 = a3;
  if (v18)
  {
    if (!v19)
    {
      uint64_t v20 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v20))
      {
        uint64_t v21 = sub_253462A5C(&qword_269CE04B0);
        memcpy(v9, v10, *(void *)(*(void *)(v21 - 8) + 64));
LABEL_347:
        uint64_t v674 = *(int *)(v17 + 20);
        uint64_t v675 = (char *)v9 + v674;
        uint64_t v676 = (char *)v10 + v674;
        uint64_t v677 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v677 - 8) + 32))(v675, v676, v677);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v17);
        goto LABEL_362;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v97 = v11;
          uint64_t v1022 = v4;
          *uint64_t v9 = *v10;
          uint64_t v98 = type metadata accessor for TranscriptProtoActionConfirmation(0);
          uint64_t v99 = *(int *)(v98 + 20);
          uint64_t v100 = v9;
          uint64_t v101 = (char *)v9 + v99;
          __srcb = v10;
          uint64_t v102 = (char *)v10 + v99;
          uint64_t v103 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v102, 1, v103))
          {
            uint64_t v104 = sub_253462A5C(&qword_269CE0480);
            memcpy(v101, v102, *(void *)(*(void *)(v104 - 8) + 64));
            uint64_t v4 = v1022;
          }
          else
          {
            uint64_t v1050 = v98;
            uint64_t v199 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v102, 1, v199))
            {
              uint64_t v200 = sub_253462A5C(&qword_269CE0478);
              memcpy(v101, v102, *(void *)(*(void *)(v200 - 8) + 64));
            }
            else
            {
              uint64_t v981 = v199;
              *(_OWORD *)uint64_t v101 = *(_OWORD *)v102;
              v101[16] = v102[16];
              uint64_t v306 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
              uint64_t v307 = *(int *)(v306 + 24);
              v985 = &v101[v307];
              uint64_t v308 = &v102[v307];
              __dsta = (int *)type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v308, 1, (uint64_t)__dsta))
              {
                uint64_t v309 = sub_253462A5C(&qword_269CE0470);
                memcpy(v985, v308, *(void *)(*(void *)(v309 - 8) + 64));
              }
              else
              {
                unsigned char *v985 = *v308;
                uint64_t v408 = __dsta[5];
                uint64_t v971 = v306;
                uint64_t v409 = &v985[v408];
                uint64_t v410 = &v308[v408];
                uint64_t v411 = sub_253B07160();
                uint64_t v412 = v409;
                uint64_t v306 = v971;
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v411 - 8) + 32))(v412, v410, v411);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v985, 0, 1, (uint64_t)__dsta);
              }
              uint64_t v413 = *(int *)(v306 + 28);
              uint64_t v414 = &v101[v413];
              uint64_t v415 = &v102[v413];
              uint64_t v416 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v416 - 8) + 32))(v414, v415, v416);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v101, 0, 1, v981);
            }
            uint64_t v417 = *(int *)(v103 + 20);
            int v418 = &v101[v417];
            uint64_t v419 = &v102[v417];
            uint64_t v420 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v420 - 8) + 32))(v418, v419, v420);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v101, 0, 1, v103);
            uint64_t v4 = v1022;
            uint64_t v98 = v1050;
          }
          uint64_t v421 = *(int *)(v98 + 24);
          uint64_t v9 = v100;
          uint64_t v422 = (char *)v100 + v421;
          uint64_t v10 = __srcb;
          goto LABEL_345;
        case 2u:
          *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
          uint64_t v105 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
          goto LABEL_74;
        case 3u:
          uint64_t v1047 = v11;
          *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
          v9[2] = v10[2];
          *((unsigned char *)v9 + 24) = *((unsigned char *)v10 + 24);
          uint64_t v106 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
          goto LABEL_64;
        case 4u:
          *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
          uint64_t v107 = v10[3];
          v9[2] = v10[2];
          v9[3] = v107;
          *((unsigned char *)v9 + 32) = *((unsigned char *)v10 + 32);
          uint64_t v108 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
          goto LABEL_75;
        case 5u:
          uint64_t v1047 = v11;
          *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
          *((unsigned char *)v9 + 16) = *((unsigned char *)v10 + 16);
          uint64_t v106 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_64:
          uint64_t v109 = v106;
          uint64_t v110 = *(int *)(v106 + 24);
          uint64_t v111 = v10;
          uint64_t v112 = (char *)v9 + v110;
          uint64_t v113 = v111;
          uint64_t v114 = (char *)v111 + v110;
          uint64_t v115 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v114, 1, v115))
          {
            uint64_t v116 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v112, v114, *(void *)(*(void *)(v116 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 32))(v112, v114, v115);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v112, 0, 1, v115);
          }
          uint64_t v157 = *(int *)(v109 + 28);
          goto LABEL_119;
        case 6u:
          uint64_t v1047 = v11;
          *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
          uint64_t v117 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
          uint64_t v118 = *(int *)(v117 + 20);
          long long v119 = v10;
          uint64_t v120 = (char *)v9 + v118;
          uint64_t v113 = v119;
          uint64_t v121 = (char *)v119 + v118;
          uint64_t v122 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v121, 1, v122))
          {
            uint64_t v123 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v120, v121, *(void *)(*(void *)(v123 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 32))(v120, v121, v122);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v120, 0, 1, v122);
          }
          uint64_t v157 = *(int *)(v117 + 24);
LABEL_119:
          uint64_t v201 = (char *)v9 + v157;
          uint64_t v10 = v113;
          long long v202 = (char *)v113 + v157;
          uint64_t v203 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v203 - 8) + 32))(v201, v202, v203);
          uint64_t v11 = v1047;
          goto LABEL_346;
        case 7u:
          uint64_t v97 = v11;
          uint64_t v124 = v4;
          uint64_t v125 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v125))
          {
            uint64_t v126 = sub_253462A5C(&qword_269CE0498);
            memcpy(v9, v10, *(void *)(*(void *)(v126 - 8) + 64));
            goto LABEL_343;
          }
          int v204 = swift_getEnumCaseMultiPayload();
          if (v204 != 2)
          {
            if (v204 == 1)
            {
              *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
              uint64_t v372 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
              uint64_t v373 = (char *)v9 + v372;
              uint64_t v374 = (char *)v10 + v372;
              uint64_t v375 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v375 - 8) + 32))(v373, v374, v375);
            }
            else
            {
              if (v204)
              {
                memcpy(v9, v10, *(void *)(*(void *)(v125 - 8) + 64));
                goto LABEL_342;
              }
              *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
              uint64_t v205 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
              uint64_t v206 = (char *)v9 + v205;
              uint64_t v207 = (char *)v10 + v205;
              uint64_t v208 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v208 - 8) + 32))(v206, v207, v208);
            }
LABEL_341:
            swift_storeEnumTagMultiPayload();
LABEL_342:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v125);
LABEL_343:
            uint64_t v4 = v124;
            uint64_t v431 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_344:
            uint64_t v421 = *(int *)(v431 + 20);
            uint64_t v422 = (char *)v9 + v421;
LABEL_345:
            uint64_t v672 = (char *)v10 + v421;
            uint64_t v673 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v673 - 8) + 32))(v422, v672, v673);
            uint64_t v11 = v97;
LABEL_346:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v20);
            goto LABEL_347;
          }
          uint64_t v369 = v10;
          uint64_t v370 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v369, 1, v370))
          {
            uint64_t v371 = sub_253462A5C(&qword_269CE0490);
            memcpy(v9, v369, *(void *)(*(void *)(v371 - 8) + 64));
            uint64_t v10 = v369;
LABEL_340:
            uint64_t v668 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
            uint64_t v669 = (char *)v9 + v668;
            uint64_t v670 = (char *)v10 + v668;
            uint64_t v671 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 32))(v669, v670, v671);
            goto LABEL_341;
          }
          __srcl = v369;
          int v469 = swift_getEnumCaseMultiPayload();
          if (v469 == 1)
          {
            uint64_t v533 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__srcl, 1, v533))
            {
              uint64_t v534 = sub_253462A5C(&qword_269CE0488);
              memcpy(v9, __srcl, *(void *)(*(void *)(v534 - 8) + 64));
            }
            else
            {
              *(unsigned char *)uint64_t v9 = *__srcl;
              uint64_t v663 = *(int *)(v533 + 20);
              v1064 = (char *)v9 + v663;
              unint64_t v994 = &__srcl[v663];
              uint64_t v664 = sub_253B07160();
              (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v664 - 8) + 32))(v1064, v994, v664);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v533);
            }
            uint64_t v665 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
            uint64_t v666 = (char *)v9 + v665;
            uint64_t v1065 = &__srcl[v665];
            uint64_t v667 = sub_253B07160();
            (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v667 - 8) + 32))(v666, v1065, v667);
          }
          else
          {
            if (v469)
            {
              memcpy(v9, v369, *(void *)(*(void *)(v370 - 8) + 64));
LABEL_339:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v370);
              uint64_t v10 = __srcl;
              goto LABEL_340;
            }
            *(_OWORD *)uint64_t v9 = *v369;
            uint64_t v470 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
            int v1059 = (char *)v9 + v470;
            uint64_t v471 = (char *)v369 + v470;
            uint64_t v472 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v472 - 8) + 32))(v1059, v471, v472);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_339;
        case 8u:
          *uint64_t v9 = *v10;
          *(_OWORD *)(v9 + 1) = *(_OWORD *)(v10 + 1);
          uint64_t v108 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
          goto LABEL_75;
        case 9u:
          uint64_t v97 = v11;
          uint64_t v127 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v127))
          {
            uint64_t v128 = sub_253462A5C(&qword_269CE04A8);
            memcpy(v9, v10, *(void *)(*(void *)(v128 - 8) + 64));
          }
          else
          {
            uint64_t v209 = v10;
            uint64_t v210 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v209, 1, v210))
            {
              uint64_t v211 = sub_253462A5C(&qword_269CE04A0);
              memcpy(v9, v209, *(void *)(*(void *)(v211 - 8) + 64));
              uint64_t v10 = v209;
            }
            else
            {
              uint64_t v310 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
              __srci = v209;
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v209, 16, v310))
              {
                memcpy(v9, v209, *(void *)(*(void *)(v210 - 8) + 64));
              }
              else
              {
                long long v423 = v209[1];
                *(_OWORD *)uint64_t v9 = *v209;
                *((_OWORD *)v9 + 1) = v423;
                v9[4] = *((void *)v209 + 4);
                uint64_t v424 = *(int *)(v310 + 28);
                v1057 = (char *)v9 + v424;
                uint64_t v425 = (char *)v209 + v424;
                uint64_t v426 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v426 - 8) + 32))(v1057, v425, v426);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 16, v310);
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v210);
              uint64_t v10 = __srci;
            }
            uint64_t v427 = *(int *)(v127 + 20);
            uint64_t v428 = (char *)v9 + v427;
            uint64_t v429 = (char *)v10 + v427;
            uint64_t v430 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v430 - 8) + 32))(v428, v429, v430);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v127);
          }
          uint64_t v431 = type metadata accessor for TranscriptProtoActionFailure(0);
          goto LABEL_344;
        case 0xAu:
          *uint64_t v9 = *v10;
          uint64_t v105 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
LABEL_74:
          uint64_t v108 = *(int *)(v105 + 20);
LABEL_75:
          uint64_t v129 = (char *)v9 + v108;
          uint64_t v130 = (char *)v10 + v108;
          uint64_t v131 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 32))(v129, v130, v131);
          goto LABEL_346;
        default:
          uint64_t v42 = v11;
          uint64_t v1019 = v4;
          *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
          *(_WORD *)((char *)v9 + 1) = *(_WORD *)((char *)v10 + 1);
          uint64_t v43 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
          uint64_t v44 = v43[7];
          uint64_t v45 = (char *)v9 + v44;
          uint64_t v46 = (char *)v10 + v44;
          uint64_t v47 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v46, 1, v47))
          {
            uint64_t v48 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v45, 0, 1, v47);
          }
          uint64_t v194 = v43[8];
          uint64_t v1010 = v9;
          uint64_t v195 = (_OWORD *)((char *)v9 + v194);
          __srce = v10;
          uint64_t v196 = (_OWORD *)((char *)v10 + v194);
          uint64_t v197 = type metadata accessor for TranscriptProtoUndoContext(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v196, 1, v197))
          {
            uint64_t v198 = sub_253462A5C(&qword_269CE0450);
            memcpy(v195, v196, *(void *)(*(void *)(v198 - 8) + 64));
          }
          else
          {
            long long v219 = v196[1];
            _OWORD *v195 = *v196;
            v195[1] = v219;
            v195[2] = v196[2];
            uint64_t v220 = *(int *)(v197 + 28);
            uint64_t v221 = (char *)v195 + v220;
            uint64_t v222 = (char *)v196 + v220;
            uint64_t v223 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v223 - 8) + 32))(v221, v222, v223);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v195, 0, 1, v197);
          }
          uint64_t v224 = v43[9];
          uint64_t v225 = (_OWORD *)((char *)v1010 + v224);
          uint64_t v226 = (_OWORD *)((char *)__srce + v224);
          uint64_t v227 = type metadata accessor for TranscriptProtoFollowUpAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v226, 1, v227))
          {
            uint64_t v11 = v42;
            uint64_t v228 = sub_253462A5C(&qword_269CE0468);
            memcpy(v225, v226, *(void *)(*(void *)(v228 - 8) + 64));
          }
          else
          {
            uint64_t v229 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v226, 1, v229))
            {
              uint64_t v230 = sub_253462A5C(&qword_269CE0460);
              memcpy(v225, v226, *(void *)(*(void *)(v230 - 8) + 64));
              uint64_t v11 = v42;
            }
            else
            {
              uint64_t v1055 = v227;
              unint64_t v987 = (void *)type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v226, 1, (uint64_t)v987))
              {
                uint64_t v356 = sub_253462A5C(&qword_269CE0458);
                memcpy(v225, v226, *(void *)(*(void *)(v356 - 8) + 64));
              }
              else
              {
                long long v432 = v226[1];
                *uint64_t v225 = *v226;
                v225[1] = v432;
                *((void *)v225 + 4) = *((void *)v226 + 4);
                uint64_t v433 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                              + 28);
                uint64_t v434 = (char *)v225 + v433;
                uint64_t v435 = (char *)v226 + v433;
                uint64_t v436 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v436 - 8) + 32))(v434, v435, v436);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v225, 0, 1, (uint64_t)v987);
              }
              uint64_t v437 = *(int *)(v229 + 20);
              uint64_t v438 = (char *)v225 + v437;
              long long v439 = (char *)v226 + v437;
              uint64_t v440 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v440 - 8) + 32))(v438, v439, v440);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v225, 0, 1, v229);
              uint64_t v11 = v42;
              uint64_t v227 = v1055;
            }
            uint64_t v441 = *(int *)(v227 + 20);
            uint64_t v442 = v227;
            uint64_t v443 = (char *)v225 + v441;
            uint64_t v444 = (char *)v226 + v441;
            uint64_t v445 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v445 - 8) + 32))(v443, v444, v445);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v225, 0, 1, v442);
          }
          uint64_t v10 = __srce;
          uint64_t v9 = v1010;
          *(_OWORD *)((char *)v1010 + v43[10]) = *(_OWORD *)((char *)__srce + v43[10]);
          uint64_t v446 = v43[11];
          uint64_t v447 = (char *)v1010 + v446;
          unint64_t v448 = (char *)__srce + v446;
          uint64_t v449 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v449 - 8) + 32))(v447, v448, v449);
          uint64_t v4 = v1019;
          goto LABEL_346;
      }
    }
LABEL_16:
    uint64_t v24 = sub_253462A5C(&qword_269CE0388);
    memcpy(v9, v10, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_362;
  }
  if (v19)
  {
    sub_2536FA73C();
    goto LABEL_16;
  }
  uint64_t v32 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  int v33 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v32);
  int v34 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v32);
  if (v33)
  {
    if (!v34)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v158 = v11;
          uint64_t v1023 = v4;
          *uint64_t v9 = *v10;
          uint64_t v159 = type metadata accessor for TranscriptProtoActionConfirmation(0);
          uint64_t v160 = *(int *)(v159 + 20);
          uint64_t v161 = v9;
          uint64_t v162 = (char *)v9 + v160;
          __srcd = v10;
          uint64_t v163 = (char *)v10 + v160;
          uint64_t v164 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v163, 1, v164))
          {
            uint64_t v165 = sub_253462A5C(&qword_269CE0480);
            memcpy(v162, v163, *(void *)(*(void *)(v165 - 8) + 64));
            uint64_t v4 = v1023;
          }
          else
          {
            uint64_t v292 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
            uint64_t v1053 = v159;
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v163, 1, v292))
            {
              uint64_t v293 = sub_253462A5C(&qword_269CE0478);
              memcpy(v162, v163, *(void *)(*(void *)(v293 - 8) + 64));
            }
            else
            {
              uint64_t v982 = v292;
              *(_OWORD *)uint64_t v162 = *(_OWORD *)v163;
              v162[16] = v163[16];
              __dstb = (int *)type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
              uint64_t v403 = __dstb[6];
              uint64_t v988 = &v162[v403];
              uint64_t v404 = &v163[v403];
              uint64_t v405 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v404, 1, v405))
              {
                uint64_t v406 = sub_253462A5C(&qword_269CE0470);
                memcpy(v988, v404, *(void *)(*(void *)(v406 - 8) + 64));
              }
              else
              {
                *uint64_t v988 = *v404;
                uint64_t v492 = *(int *)(v405 + 20);
                v972 = &v988[v492];
                uint64_t v493 = &v404[v492];
                uint64_t v494 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v494 - 8) + 32))(v972, v493, v494);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v988, 0, 1, v405);
              }
              uint64_t v495 = __dstb[7];
              uint64_t v496 = &v162[v495];
              uint64_t v497 = &v163[v495];
              uint64_t v498 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v498 - 8) + 32))(v496, v497, v498);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v162, 0, 1, v982);
            }
            uint64_t v499 = *(int *)(v164 + 20);
            uint64_t v500 = &v162[v499];
            uint64_t v501 = &v163[v499];
            uint64_t v502 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v502 - 8) + 32))(v500, v501, v502);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v162, 0, 1, v164);
            uint64_t v4 = v1023;
            uint64_t v159 = v1053;
          }
          uint64_t v503 = *(int *)(v159 + 24);
          uint64_t v9 = v161;
          uint64_t v504 = (char *)v161 + v503;
          uint64_t v10 = __srcd;
          goto LABEL_359;
        case 2u:
          *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
          uint64_t v166 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
          goto LABEL_110;
        case 3u:
          uint64_t v1049 = v11;
          *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
          v9[2] = v10[2];
          *((unsigned char *)v9 + 24) = *((unsigned char *)v10 + 24);
          uint64_t v167 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
          goto LABEL_100;
        case 4u:
          *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
          uint64_t v168 = v10[3];
          v9[2] = v10[2];
          v9[3] = v168;
          *((unsigned char *)v9 + 32) = *((unsigned char *)v10 + 32);
          uint64_t v169 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
          goto LABEL_111;
        case 5u:
          uint64_t v1049 = v11;
          *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
          *((unsigned char *)v9 + 16) = *((unsigned char *)v10 + 16);
          uint64_t v167 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_100:
          uint64_t v170 = v167;
          uint64_t v171 = *(int *)(v167 + 24);
          long long v172 = v10;
          long long v173 = (char *)v9 + v171;
          uint64_t v174 = v172;
          uint64_t v175 = (char *)v172 + v171;
          uint64_t v176 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v175, 1, v176))
          {
            uint64_t v177 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v173, v175, *(void *)(*(void *)(v177 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 32))(v173, v175, v176);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v173, 0, 1, v176);
          }
          uint64_t v231 = *(int *)(v170 + 28);
          goto LABEL_166;
        case 6u:
          uint64_t v1049 = v11;
          *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
          uint64_t v178 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
          uint64_t v179 = *(int *)(v178 + 20);
          uint64_t v180 = v10;
          uint64_t v181 = (char *)v9 + v179;
          uint64_t v174 = v180;
          uint64_t v182 = (char *)v180 + v179;
          uint64_t v183 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v182, 1, v183))
          {
            uint64_t v184 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v181, v182, *(void *)(*(void *)(v184 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v183 - 8) + 32))(v181, v182, v183);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v181, 0, 1, v183);
          }
          uint64_t v231 = *(int *)(v178 + 24);
LABEL_166:
          uint64_t v294 = (char *)v9 + v231;
          uint64_t v10 = v174;
          uint64_t v295 = (char *)v174 + v231;
          uint64_t v296 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v296 - 8) + 32))(v294, v295, v296);
          uint64_t v11 = v1049;
          goto LABEL_360;
        case 7u:
          uint64_t v158 = v11;
          uint64_t v185 = v4;
          uint64_t v186 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v186))
          {
            uint64_t v187 = sub_253462A5C(&qword_269CE0498);
            memcpy(v9, v10, *(void *)(*(void *)(v187 - 8) + 64));
            goto LABEL_358;
          }
          uint64_t v297 = v10;
          int v298 = swift_getEnumCaseMultiPayload();
          if (v298 != 2)
          {
            if (v298 == 1)
            {
              *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
              uint64_t v465 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
              uint64_t v466 = (char *)v9 + v465;
              uint64_t v467 = (char *)v10 + v465;
              uint64_t v468 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v468 - 8) + 32))(v466, v467, v468);
            }
            else
            {
              if (v298)
              {
                memcpy(v9, v10, *(void *)(*(void *)(v186 - 8) + 64));
                goto LABEL_357;
              }
              *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
              uint64_t v299 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
              uint64_t v300 = (char *)v9 + v299;
              uint64_t v301 = (char *)v10 + v299;
              uint64_t v302 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v302 - 8) + 32))(v300, v301, v302);
            }
LABEL_356:
            swift_storeEnumTagMultiPayload();
LABEL_357:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v186);
LABEL_358:
            uint64_t v4 = v185;
            uint64_t v503 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
            uint64_t v504 = (char *)v9 + v503;
LABEL_359:
            v688 = (char *)v10 + v503;
            uint64_t v689 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v689 - 8) + 32))(v504, v688, v689);
            uint64_t v11 = v158;
LABEL_360:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v32);
            goto LABEL_361;
          }
          uint64_t v463 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v297, 1, v463))
          {
            uint64_t v464 = sub_253462A5C(&qword_269CE0490);
            memcpy(v9, v297, *(void *)(*(void *)(v464 - 8) + 64));
LABEL_355:
            uint64_t v684 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
            uint64_t v685 = (char *)v9 + v684;
            uint64_t v10 = v297;
            uint64_t v686 = &v297[v684];
            uint64_t v687 = sub_253B07160();
            (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v687 - 8) + 32))(v685, v686, v687);
            goto LABEL_356;
          }
          int v530 = swift_getEnumCaseMultiPayload();
          if (v530 == 1)
          {
            uint64_t v661 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v297, 1, v661))
            {
              uint64_t v662 = sub_253462A5C(&qword_269CE0488);
              memcpy(v9, v297, *(void *)(*(void *)(v662 - 8) + 64));
            }
            else
            {
              *(unsigned char *)uint64_t v9 = *v297;
              uint64_t v680 = *(int *)(v661 + 20);
              uint64_t v1066 = (char *)v9 + v680;
              uint64_t v995 = &v297[v680];
              uint64_t v681 = sub_253B07160();
              (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v681 - 8) + 32))(v1066, v995, v681);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v661);
            }
            uint64_t v682 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
            uint64_t v1067 = (char *)v9 + v682;
            uint64_t v996 = &v297[v682];
            uint64_t v683 = sub_253B07160();
            (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v683 - 8) + 32))(v1067, v996, v683);
          }
          else
          {
            if (v530)
            {
              memcpy(v9, v297, *(void *)(*(void *)(v463 - 8) + 64));
LABEL_354:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v463);
              goto LABEL_355;
            }
            *(_OWORD *)uint64_t v9 = *(_OWORD *)v297;
            uint64_t v531 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
            uint64_t v1061 = (char *)v9 + v531;
            uint64_t v992 = &v297[v531];
            uint64_t v532 = sub_253B07160();
            (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v532 - 8) + 32))(v1061, v992, v532);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_354;
        case 8u:
          *uint64_t v9 = *v10;
          *(_OWORD *)(v9 + 1) = *(_OWORD *)(v10 + 1);
          uint64_t v169 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
          goto LABEL_111;
        case 9u:
          uint64_t v188 = v11;
          uint64_t v189 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v189))
          {
            uint64_t v190 = sub_253462A5C(&qword_269CE04A8);
            memcpy(v9, v10, *(void *)(*(void *)(v190 - 8) + 64));
          }
          else
          {
            uint64_t v303 = v10;
            uint64_t v304 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v303, 1, v304))
            {
              uint64_t v305 = sub_253462A5C(&qword_269CE04A0);
              memcpy(v9, v303, *(void *)(*(void *)(v305 - 8) + 64));
              uint64_t v10 = v303;
            }
            else
            {
              uint64_t v1013 = v9;
              uint64_t v407 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v303, 16, v407))
              {
                memcpy(v1013, v303, *(void *)(*(void *)(v304 - 8) + 64));
              }
              else
              {
                long long v476 = v303[1];
                *uint64_t v1013 = *v303;
                v1013[1] = v476;
                *((void *)v1013 + 4) = *((void *)v303 + 4);
                uint64_t v477 = *(int *)(v407 + 28);
                int v1060 = (char *)v1013 + v477;
                v990 = (char *)v303 + v477;
                uint64_t v478 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v478 - 8) + 32))(v1060, v990, v478);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1013, 0, 16, v407);
              }
              uint64_t v9 = v1013;
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v1013, 0, 1, v304);
              uint64_t v10 = v303;
            }
            uint64_t v479 = *(int *)(v189 + 20);
            uint64_t v480 = (char *)v9 + v479;
            uint64_t v481 = (char *)v10 + v479;
            uint64_t v482 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v482 - 8) + 32))(v480, v481, v482);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v189);
          }
          uint64_t v11 = v188;
          uint64_t v483 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
          uint64_t v484 = (char *)v9 + v483;
          uint64_t v485 = (char *)v10 + v483;
          uint64_t v486 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v486 - 8) + 32))(v484, v485, v486);
          goto LABEL_360;
        case 0xAu:
          *uint64_t v9 = *v10;
          uint64_t v166 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
LABEL_110:
          uint64_t v169 = *(int *)(v166 + 20);
LABEL_111:
          uint64_t v191 = (char *)v9 + v169;
          uint64_t v192 = (char *)v10 + v169;
          uint64_t v193 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 32))(v191, v192, v193);
          goto LABEL_360;
        default:
          uint64_t v35 = v11;
          unint64_t v1018 = v4;
          *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
          *(_WORD *)((char *)v9 + 1) = *(_WORD *)((char *)v10 + 1);
          uint64_t v36 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
          uint64_t v37 = v36[7];
          uint64_t v38 = (char *)v9 + v37;
          uint64_t v39 = (char *)v10 + v37;
          uint64_t v40 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v39, 1, v40))
          {
            uint64_t v41 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v38, 0, 1, v40);
          }
          uint64_t v239 = v36[8];
          uint64_t v1011 = v9;
          uint64_t v240 = (_OWORD *)((char *)v9 + v239);
          __srcg = v10;
          uint64_t v241 = (_OWORD *)((char *)v10 + v239);
          uint64_t v242 = type metadata accessor for TranscriptProtoUndoContext(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v241, 1, v242))
          {
            uint64_t v243 = sub_253462A5C(&qword_269CE0450);
            memcpy(v240, v241, *(void *)(*(void *)(v243 - 8) + 64));
          }
          else
          {
            long long v357 = v241[1];
            _OWORD *v240 = *v241;
            v240[1] = v357;
            v240[2] = v241[2];
            uint64_t v358 = *(int *)(v242 + 28);
            uint64_t v359 = (char *)v240 + v358;
            uint64_t v360 = (char *)v241 + v358;
            uint64_t v361 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v361 - 8) + 32))(v359, v360, v361);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v240, 0, 1, v242);
          }
          uint64_t v362 = v36[9];
          uint64_t v363 = (_OWORD *)((char *)v1011 + v362);
          uint64_t v364 = (_OWORD *)((char *)__srcg + v362);
          uint64_t v365 = type metadata accessor for TranscriptProtoFollowUpAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v364, 1, v365))
          {
            uint64_t v366 = sub_253462A5C(&qword_269CE0468);
            memcpy(v363, v364, *(void *)(*(void *)(v366 - 8) + 64));
          }
          else
          {
            uint64_t v367 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v364, 1, v367))
            {
              uint64_t v368 = sub_253462A5C(&qword_269CE0460);
              memcpy(v363, v364, *(void *)(*(void *)(v368 - 8) + 64));
            }
            else
            {
              uint64_t v1058 = v365;
              uint64_t v989 = (void *)type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v364, 1, (uint64_t)v989))
              {
                uint64_t v450 = sub_253462A5C(&qword_269CE0458);
                memcpy(v363, v364, *(void *)(*(void *)(v450 - 8) + 64));
              }
              else
              {
                long long v505 = v364[1];
                _OWORD *v363 = *v364;
                v363[1] = v505;
                *((void *)v363 + 4) = *((void *)v364 + 4);
                uint64_t v506 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                              + 28);
                uint64_t v507 = (char *)v363 + v506;
                uint64_t v508 = (char *)v364 + v506;
                uint64_t v509 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v509 - 8) + 32))(v507, v508, v509);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v363, 0, 1, (uint64_t)v989);
              }
              uint64_t v510 = *(int *)(v367 + 20);
              uint64_t v511 = (char *)v363 + v510;
              uint64_t v512 = (char *)v364 + v510;
              uint64_t v513 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v513 - 8) + 32))(v511, v512, v513);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v363, 0, 1, v367);
              uint64_t v365 = v1058;
            }
            uint64_t v514 = *(int *)(v365 + 20);
            uint64_t v515 = v365;
            uint64_t v516 = (char *)v363 + v514;
            uint64_t v517 = (char *)v364 + v514;
            uint64_t v518 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v518 - 8) + 32))(v516, v517, v518);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v363, 0, 1, v515);
          }
          uint64_t v11 = v35;
          uint64_t v10 = __srcg;
          uint64_t v9 = v1011;
          *(_OWORD *)((char *)v1011 + v36[10]) = *(_OWORD *)((char *)__srcg + v36[10]);
          uint64_t v519 = v36[11];
          uint64_t v520 = (char *)v1011 + v519;
          uint64_t v521 = (char *)__srcg + v519;
          uint64_t v522 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v522 - 8) + 32))(v520, v521, v522);
          uint64_t v4 = v1018;
          goto LABEL_360;
      }
    }
    goto LABEL_30;
  }
  if (!v34)
  {
    if (a1 == v4) {
      goto LABEL_361;
    }
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v1052 = v11;
        uint64_t v1024 = v4;
        *uint64_t v9 = *v10;
        uint64_t v244 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v245 = v10;
        uint64_t v246 = v244;
        uint64_t v247 = *(int *)(v244 + 20);
        uint64_t v248 = v9;
        uint64_t v249 = (char *)v9 + v247;
        __srch = v245;
        long long v250 = (char *)v245 + v247;
        uint64_t v251 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v250, 1, v251))
        {
          uint64_t v252 = sub_253462A5C(&qword_269CE0480);
          memcpy(v249, v250, *(void *)(*(void *)(v252 - 8) + 64));
        }
        else
        {
          uint64_t v1000 = (void *)type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v250, 1, (uint64_t)v1000))
          {
            uint64_t v386 = sub_253462A5C(&qword_269CE0478);
            memcpy(v249, v250, *(void *)(*(void *)(v386 - 8) + 64));
          }
          else
          {
            *(_OWORD *)uint64_t v249 = *(_OWORD *)v250;
            v249[16] = v250[16];
            uint64_t v487 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v488 = *(int *)(v487 + 24);
            uint64_t v983 = v487;
            uint64_t v991 = &v249[v488];
            uint64_t v489 = &v250[v488];
            uint64_t v490 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v489, 1, v490))
            {
              uint64_t v491 = sub_253462A5C(&qword_269CE0470);
              memcpy(v991, v489, *(void *)(*(void *)(v491 - 8) + 64));
            }
            else
            {
              *uint64_t v991 = *v489;
              uint64_t v624 = *(int *)(v490 + 20);
              __dstd = &v991[v624];
              uint64_t v625 = &v489[v624];
              uint64_t v626 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v626 - 8) + 32))(__dstd, v625, v626);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v991, 0, 1, v490);
            }
            uint64_t v627 = *(int *)(v983 + 28);
            uint64_t v628 = &v249[v627];
            uint64_t v629 = &v250[v627];
            uint64_t v630 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v630 - 8) + 32))(v628, v629, v630);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v249, 0, 1, (uint64_t)v1000);
          }
          uint64_t v631 = *(int *)(v251 + 20);
          uint64_t v632 = &v249[v631];
          uint64_t v633 = &v250[v631];
          uint64_t v634 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v634 - 8) + 32))(v632, v633, v634);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v249, 0, 1, v251);
        }
        uint64_t v635 = *(int *)(v246 + 24);
        uint64_t v9 = v248;
        uint64_t v636 = (char *)v248 + v635;
        uint64_t v10 = __srch;
        uint64_t v637 = (char *)__srch + v635;
        uint64_t v638 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v638 - 8) + 32))(v636, v637, v638);
        swift_storeEnumTagMultiPayload();
        uint64_t v4 = v1024;
        goto LABEL_321;
      case 2u:
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
        uint64_t v253 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
        uint64_t v254 = (char *)v9 + v253;
        uint64_t v255 = (char *)v10 + v253;
        uint64_t v256 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v256 - 8) + 32))(v254, v255, v256);
        goto LABEL_489;
      case 3u:
        uint64_t v1052 = v11;
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
        v9[2] = v10[2];
        *((unsigned char *)v9 + 24) = *((unsigned char *)v10 + 24);
        uint64_t v257 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        uint64_t v258 = *(int *)(v257 + 24);
        uint64_t v259 = v10;
        uint64_t v260 = (char *)v9 + v258;
        uint64_t v261 = v259;
        uint64_t v262 = (char *)v259 + v258;
        uint64_t v263 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v262, 1, v263)) {
          goto LABEL_150;
        }
        goto LABEL_208;
      case 4u:
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
        uint64_t v265 = v10[3];
        v9[2] = v10[2];
        v9[3] = v265;
        *((unsigned char *)v9 + 32) = *((unsigned char *)v10 + 32);
        uint64_t v266 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        uint64_t v267 = (char *)v9 + v266;
        uint64_t v268 = (char *)v10 + v266;
        uint64_t v269 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v269 - 8) + 32))(v267, v268, v269);
        goto LABEL_489;
      case 5u:
        uint64_t v1052 = v11;
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
        *((unsigned char *)v9 + 16) = *((unsigned char *)v10 + 16);
        uint64_t v257 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
        uint64_t v270 = *(int *)(v257 + 24);
        uint64_t v271 = v10;
        uint64_t v260 = (char *)v9 + v270;
        uint64_t v261 = v271;
        uint64_t v262 = (char *)v271 + v270;
        uint64_t v263 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v262, 1, v263))
        {
LABEL_150:
          uint64_t v264 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v260, v262, *(void *)(*(void *)(v264 - 8) + 64));
        }
        else
        {
LABEL_208:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v263 - 8) + 32))(v260, v262, v263);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v260, 0, 1, v263);
        }
        uint64_t v387 = *(int *)(v257 + 28);
        uint64_t v388 = (char *)v9 + v387;
        uint64_t v10 = v261;
        uint64_t v389 = (char *)v261 + v387;
        uint64_t v390 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v390 - 8) + 32))(v388, v389, v390);
        goto LABEL_320;
      case 6u:
        uint64_t v1052 = v11;
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
        uint64_t v272 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v273 = *(int *)(v272 + 20);
        uint64_t v274 = v10;
        uint64_t v275 = (char *)v9 + v273;
        uint64_t v276 = v274;
        uint64_t v277 = (char *)v274 + v273;
        uint64_t v278 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v277, 1, v278))
        {
          uint64_t v279 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v275, v277, *(void *)(*(void *)(v279 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v278 - 8) + 32))(v275, v277, v278);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v275, 0, 1, v278);
        }
        uint64_t v391 = *(int *)(v272 + 24);
        uint64_t v392 = (char *)v9 + v391;
        uint64_t v10 = v276;
        uint64_t v393 = (char *)v276 + v391;
        uint64_t v394 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v394 - 8) + 32))(v392, v393, v394);
        goto LABEL_320;
      case 7u:
        uint64_t v280 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v280))
        {
          uint64_t v281 = sub_253462A5C(&qword_269CE0498);
          memcpy(v9, v10, *(void *)(*(void *)(v281 - 8) + 64));
          goto LABEL_488;
        }
        __srck = v10;
        uint64_t v1056 = v11;
        int v395 = swift_getEnumCaseMultiPayload();
        if (v395 != 2)
        {
          if (v395 == 1)
          {
            *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
            uint64_t v526 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v527 = (char *)v9 + v526;
            uint64_t v528 = (char *)v10 + v526;
            uint64_t v529 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v529 - 8) + 32))(v527, v528, v529);
          }
          else
          {
            if (v395)
            {
              memcpy(v9, v10, *(void *)(*(void *)(v280 - 8) + 64));
              goto LABEL_487;
            }
            *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
            uint64_t v396 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v397 = (char *)v9 + v396;
            uint64_t v398 = (char *)v10 + v396;
            uint64_t v399 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v399 - 8) + 32))(v397, v398, v399);
          }
LABEL_486:
          swift_storeEnumTagMultiPayload();
LABEL_487:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v280);
          uint64_t v10 = __srck;
          uint64_t v11 = v1056;
LABEL_488:
          uint64_t v964 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
          uint64_t v965 = (char *)v9 + v964;
          uint64_t v966 = (char *)v10 + v964;
          uint64_t v967 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v967 - 8) + 32))(v965, v966, v967);
LABEL_489:
          swift_storeEnumTagMultiPayload();
          goto LABEL_361;
        }
        uint64_t v524 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__srck, 1, v524))
        {
          uint64_t v525 = sub_253462A5C(&qword_269CE0490);
          memcpy(v9, __srck, *(void *)(*(void *)(v525 - 8) + 64));
LABEL_485:
          uint64_t v960 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          v961 = (char *)v9 + v960;
          uint64_t v962 = &__srck[v960];
          uint64_t v963 = sub_253B07160();
          (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v963 - 8) + 32))(v961, v962, v963);
          goto LABEL_486;
        }
        int v656 = swift_getEnumCaseMultiPayload();
        if (v656 == 1)
        {
          uint64_t v678 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)__srck, 1, v678))
          {
            uint64_t v679 = sub_253462A5C(&qword_269CE0488);
            memcpy(v9, __srck, *(void *)(*(void *)(v679 - 8) + 64));
          }
          else
          {
            *(unsigned char *)uint64_t v9 = *__srck;
            uint64_t v953 = *(int *)(v678 + 20);
            unint64_t v1008 = (char *)v9 + v953;
            uint64_t v954 = &__srck[v953];
            uint64_t v955 = sub_253B07160();
            (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v955 - 8) + 32))(v1008, v954, v955);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v678);
          }
          uint64_t v956 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v957 = (char *)v9 + v956;
          uint64_t v958 = &__srck[v956];
          uint64_t v959 = sub_253B07160();
          (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v959 - 8) + 32))(v957, v958, v959);
        }
        else
        {
          if (v656)
          {
            memcpy(v9, __srck, *(void *)(*(void *)(v524 - 8) + 64));
LABEL_484:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v524);
            goto LABEL_485;
          }
          *(_OWORD *)uint64_t v9 = *(_OWORD *)__srck;
          uint64_t v657 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          unint64_t v658 = (char *)v9 + v657;
          uint64_t v659 = &__srck[v657];
          uint64_t v660 = sub_253B07160();
          (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v660 - 8) + 32))(v658, v659, v660);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_484;
      case 8u:
        *uint64_t v9 = *v10;
        *(_OWORD *)(v9 + 1) = *(_OWORD *)(v10 + 1);
        uint64_t v282 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        uint64_t v283 = (char *)v9 + v282;
        uint64_t v284 = (char *)v10 + v282;
        uint64_t v285 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v285 - 8) + 32))(v283, v284, v285);
        goto LABEL_489;
      case 9u:
        uint64_t v1052 = v11;
        uint64_t v286 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v286))
        {
          uint64_t v287 = sub_253462A5C(&qword_269CE04A8);
          memcpy(v9, v10, *(void *)(*(void *)(v287 - 8) + 64));
        }
        else
        {
          uint64_t v400 = v9;
          uint64_t v401 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v401))
          {
            uint64_t v402 = sub_253462A5C(&qword_269CE04A0);
            memcpy(v9, v10, *(void *)(*(void *)(v402 - 8) + 64));
          }
          else
          {
            uint64_t v475 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 16, v475))
            {
              memcpy(v400, v10, *(void *)(*(void *)(v401 - 8) + 64));
            }
            else
            {
              long long v613 = *((_OWORD *)v10 + 1);
              *uint64_t v400 = *(_OWORD *)v10;
              v400[1] = v613;
              *((void *)v400 + 4) = v10[4];
              uint64_t v614 = *(int *)(v475 + 28);
              uint64_t v993 = (char *)v10 + v614;
              v1003 = (char *)v400 + v614;
              uint64_t v615 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v615 - 8) + 32))(v1003, v993, v615);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v400, 0, 16, v475);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v400, 0, 1, v401);
          }
          uint64_t v616 = *(int *)(v286 + 20);
          uint64_t v9 = v400;
          uint64_t v617 = (char *)v400 + v616;
          long long v618 = (char *)v10 + v616;
          uint64_t v619 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v619 - 8) + 32))(v617, v618, v619);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v400, 0, 1, v286);
        }
        uint64_t v620 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
        uint64_t v621 = (char *)v9 + v620;
        v622 = (char *)v10 + v620;
        uint64_t v623 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v623 - 8) + 32))(v621, v622, v623);
LABEL_320:
        swift_storeEnumTagMultiPayload();
LABEL_321:
        uint64_t v11 = v1052;
        goto LABEL_361;
      case 0xAu:
        *uint64_t v9 = *v10;
        uint64_t v288 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
        uint64_t v289 = (char *)v9 + v288;
        uint64_t v290 = (char *)v10 + v288;
        uint64_t v291 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v291 - 8) + 32))(v289, v290, v291);
        goto LABEL_489;
      default:
        uint64_t v1046 = v11;
        *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
        *(_WORD *)((char *)v9 + 1) = *(_WORD *)((char *)v10 + 1);
        uint64_t v85 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v86 = v85[7];
        uint64_t v87 = (char *)v9 + v86;
        uint64_t v88 = (char *)v10 + v86;
        uint64_t v89 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v88, 1, v89))
        {
          uint64_t v90 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v87, v88, *(void *)(*(void *)(v90 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32))(v87, v88, v89);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v87, 0, 1, v89);
        }
        uint64_t v381 = v85[8];
        uint64_t v1012 = v9;
        uint64_t v382 = (_OWORD *)((char *)v9 + v381);
        __srcj = v10;
        uint64_t v383 = (_OWORD *)((char *)v10 + v381);
        uint64_t v384 = type metadata accessor for TranscriptProtoUndoContext(0);
        uint64_t v1025 = v4;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v383, 1, v384))
        {
          uint64_t v385 = sub_253462A5C(&qword_269CE0450);
          memcpy(v382, v383, *(void *)(*(void *)(v385 - 8) + 64));
        }
        else
        {
          long long v451 = v383[1];
          *uint64_t v382 = *v383;
          v382[1] = v451;
          v382[2] = v383[2];
          uint64_t v452 = *(int *)(v384 + 28);
          uint64_t v453 = (char *)v382 + v452;
          uint64_t v454 = (char *)v383 + v452;
          uint64_t v455 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v455 - 8) + 32))(v453, v454, v455);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v382, 0, 1, v384);
        }
        uint64_t v456 = v85[9];
        uint64_t v457 = (_OWORD *)((char *)v1012 + v456);
        uint64_t v458 = (_OWORD *)((char *)__srcj + v456);
        uint64_t v459 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v458, 1, v459))
        {
          uint64_t v460 = sub_253462A5C(&qword_269CE0468);
          memcpy(v457, v458, *(void *)(*(void *)(v460 - 8) + 64));
        }
        else
        {
          uint64_t v461 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v458, 1, v461))
          {
            uint64_t v462 = sub_253462A5C(&qword_269CE0460);
            memcpy(v457, v458, *(void *)(*(void *)(v462 - 8) + 64));
          }
          else
          {
            v1001 = (void *)type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v458, 1, (uint64_t)v1001))
            {
              uint64_t v523 = sub_253462A5C(&qword_269CE0458);
              memcpy(v457, v458, *(void *)(*(void *)(v523 - 8) + 64));
            }
            else
            {
              long long v639 = v458[1];
              *uint64_t v457 = *v458;
              v457[1] = v639;
              *((void *)v457 + 4) = *((void *)v458 + 4);
              uint64_t v640 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              int v641 = (char *)v457 + v640;
              uint64_t v642 = (char *)v458 + v640;
              uint64_t v643 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v643 - 8) + 32))(v641, v642, v643);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v457, 0, 1, (uint64_t)v1001);
            }
            uint64_t v644 = *(int *)(v461 + 20);
            uint64_t v645 = (char *)v457 + v644;
            uint64_t v646 = (char *)v458 + v644;
            uint64_t v647 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v647 - 8) + 32))(v645, v646, v647);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v457, 0, 1, v461);
          }
          uint64_t v648 = *(int *)(v459 + 20);
          int v649 = (char *)v457 + v648;
          uint64_t v650 = (char *)v458 + v648;
          uint64_t v651 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v651 - 8) + 32))(v649, v650, v651);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v457, 0, 1, v459);
        }
        uint64_t v10 = __srcj;
        uint64_t v11 = v1046;
        uint64_t v9 = v1012;
        *(_OWORD *)((char *)v1012 + v85[10]) = *(_OWORD *)((char *)__srcj + v85[10]);
        uint64_t v652 = v85[11];
        uint64_t v653 = (char *)v1012 + v652;
        uint64_t v654 = (char *)__srcj + v652;
        uint64_t v655 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v655 - 8) + 32))(v653, v654, v655);
        swift_storeEnumTagMultiPayload();
        uint64_t v4 = v1025;
        goto LABEL_361;
    }
  }
  sub_2536FA73C();
LABEL_30:
  uint64_t v49 = sub_253462A5C(&qword_269CE04B0);
  memcpy(v9, v10, *(void *)(*(void *)(v49 - 8) + 64));
LABEL_361:
  uint64_t v690 = *(int *)(v17 + 20);
  uint64_t v691 = (char *)v9 + v690;
  v692 = (char *)v10 + v690;
  uint64_t v693 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v693 - 8) + 40))(v691, v692, v693);
LABEL_362:
  uint64_t v694 = *(int *)(v11 + 20);
  uint64_t v695 = (void *)((char *)v9 + v694);
  uint64_t v696 = (void *)((char *)v10 + v694);
  uint64_t v697 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  int v698 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v695, 1, (uint64_t)v697);
  int v699 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v696, 1, (uint64_t)v697);
  if (v698)
  {
    if (!v699)
    {
      __srcn = v10;
      uint64_t v1068 = v11;
      v1015 = v9;
      *uint64_t v695 = *v696;
      uint64_t v700 = v697[5];
      uint64_t v701 = (_OWORD *)((char *)v695 + v700);
      uint64_t v702 = (_OWORD *)((char *)v696 + v700);
      uint64_t v703 = type metadata accessor for TranscriptProtoResponseDialog(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v702, 1, v703))
      {
        uint64_t v704 = sub_253462A5C(&qword_269CE04B8);
        memcpy(v701, v702, *(void *)(*(void *)(v704 - 8) + 64));
      }
      else
      {
        long long v718 = v702[1];
        *uint64_t v701 = *v702;
        v701[1] = v718;
        long long v719 = v702[3];
        v701[2] = v702[2];
        v701[3] = v719;
        uint64_t v720 = *(int *)(v703 + 32);
        uint64_t v721 = (char *)v701 + v720;
        uint64_t v722 = (char *)v702 + v720;
        uint64_t v723 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v723 - 8) + 32))(v721, v722, v723);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v701, 0, 1, v703);
      }
      uint64_t v1028 = v4;
      uint64_t v724 = v697[6];
      uint64_t v725 = (_OWORD *)((char *)v695 + v724);
      uint64_t v726 = (_OWORD *)((char *)v696 + v724);
      uint64_t v727 = type metadata accessor for TranscriptProtoResponseVisual(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v726, 1, v727))
      {
        uint64_t v728 = sub_253462A5C(&qword_269CE04C8);
        memcpy(v725, v726, *(void *)(*(void *)(v728 - 8) + 64));
      }
      else
      {
        _OWORD *v725 = *v726;
        uint64_t v729 = *(int *)(v727 + 24);
        uint64_t v730 = (char *)v725 + v729;
        uint64_t v731 = (char *)v726 + v729;
        uint64_t v732 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v731, 1, v732))
        {
          uint64_t v733 = sub_253462A5C(&qword_269CE04C0);
          memcpy(v730, v731, *(void *)(*(void *)(v733 - 8) + 64));
        }
        else
        {
          *uint64_t v730 = *v731;
          uint64_t v747 = *(int *)(v732 + 20);
          v1005 = &v730[v747];
          uint64_t v748 = &v731[v747];
          uint64_t v749 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v749 - 8) + 32))(v1005, v748, v749);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v730, 0, 1, v732);
        }
        uint64_t v750 = *(int *)(v727 + 28);
        unint64_t v751 = (char *)v725 + v750;
        uint64_t v752 = (char *)v726 + v750;
        uint64_t v753 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v753 - 8) + 32))(v751, v752, v753);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v725, 0, 1, v727);
      }
      *(_OWORD *)((char *)v695 + v697[7]) = *(_OWORD *)((char *)v696 + v697[7]);
      *(_OWORD *)((char *)v695 + v697[8]) = *(_OWORD *)((char *)v696 + v697[8]);
      *((unsigned char *)v695 + v697[9]) = *((unsigned char *)v696 + v697[9]);
      *((unsigned char *)v695 + v697[10]) = *((unsigned char *)v696 + v697[10]);
      uint64_t v754 = v697[11];
      uint64_t v755 = (_OWORD *)((char *)v695 + v754);
      uint64_t v756 = (_OWORD *)((char *)v696 + v754);
      uint64_t v757 = type metadata accessor for TranscriptProtoUIType(0);
      uint64_t v10 = __srcn;
      uint64_t v11 = v1068;
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v756, 1, v757))
      {
        uint64_t v758 = sub_253462A5C(&qword_269CE04D0);
        memcpy(v755, v756, *(void *)(*(void *)(v758 - 8) + 64));
      }
      else
      {
        uint64_t v759 = type metadata accessor for TranscriptProtoUitype(0);
        __dstc = v696;
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v756, 1, v759))
        {
          uint64_t v760 = sub_253462A5C(&qword_269CDCC08);
          memcpy(v755, v756, *(void *)(*(void *)(v760 - 8) + 64));
          uint64_t v10 = __srcn;
        }
        else
        {
          uint64_t v1006 = (void *)v757;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *uint64_t v755 = *v756;
              uint64_t v790 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
              goto LABEL_404;
            case 2u:
              long long v791 = v756[1];
              *uint64_t v755 = *v756;
              v755[1] = v791;
              uint64_t v762 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
              break;
            case 3u:
              *uint64_t v755 = *v756;
              uint64_t v790 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_404:
              uint64_t v762 = *(int *)(v790 + 20);
              break;
            default:
              long long v761 = v756[1];
              *uint64_t v755 = *v756;
              v755[1] = v761;
              v755[2] = v756[2];
              uint64_t v762 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
              break;
          }
          uint64_t v792 = (char *)v755 + v762;
          uint64_t v793 = (char *)v756 + v762;
          uint64_t v794 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v794 - 8) + 32))(v792, v793, v794);
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v755, 0, 1, v759);
          uint64_t v10 = __srcn;
          uint64_t v11 = v1068;
          uint64_t v757 = (uint64_t)v1006;
        }
        uint64_t v795 = *(int *)(v757 + 20);
        int v796 = (char *)v755 + v795;
        uint64_t v797 = (uint64_t)v755;
        uint64_t v798 = (char *)v756 + v795;
        uint64_t v799 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v799 - 8) + 32))(v796, v798, v799);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v797, 0, 1, v757);
        uint64_t v696 = __dstc;
      }
      uint64_t v800 = v697[12];
      uint64_t v801 = (char *)v695 + v800;
      uint64_t v802 = (char *)v696 + v800;
      uint64_t v803 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v803 - 8) + 32))(v801, v802, v803);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v695, 0, 1, (uint64_t)v697);
      uint64_t v9 = v1015;
      uint64_t v4 = v1028;
      goto LABEL_450;
    }
    goto LABEL_368;
  }
  if (!v699)
  {
    __srco = v10;
    uint64_t v1069 = v11;
    uint64_t v1016 = v9;
    *uint64_t v695 = *v696;
    swift_bridgeObjectRelease();
    uint64_t v706 = v697[5];
    uint64_t v707 = (char *)v695 + v706;
    uint64_t v708 = (char *)v696 + v706;
    uint64_t v709 = type metadata accessor for TranscriptProtoResponseDialog(0);
    int v710 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v707, 1, v709);
    int v711 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v708, 1, v709);
    uint64_t v1027 = v4;
    if (v710)
    {
      if (!v711)
      {
        long long v712 = *((_OWORD *)v708 + 1);
        *(_OWORD *)uint64_t v707 = *(_OWORD *)v708;
        *((_OWORD *)v707 + 1) = v712;
        long long v713 = *((_OWORD *)v708 + 3);
        *((_OWORD *)v707 + 2) = *((_OWORD *)v708 + 2);
        *((_OWORD *)v707 + 3) = v713;
        uint64_t v714 = *(int *)(v709 + 32);
        uint64_t v715 = &v707[v714];
        uint64_t v716 = &v708[v714];
        uint64_t v717 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v717 - 8) + 32))(v715, v716, v717);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v707, 0, 1, v709);
        goto LABEL_380;
      }
    }
    else
    {
      if (!v711)
      {
        uint64_t v763 = *((void *)v708 + 1);
        *(void *)uint64_t v707 = *(void *)v708;
        *((void *)v707 + 1) = v763;
        swift_bridgeObjectRelease();
        uint64_t v764 = *((void *)v708 + 3);
        *((void *)v707 + 2) = *((void *)v708 + 2);
        *((void *)v707 + 3) = v764;
        swift_bridgeObjectRelease();
        uint64_t v765 = *((void *)v708 + 5);
        *((void *)v707 + 4) = *((void *)v708 + 4);
        *((void *)v707 + 5) = v765;
        swift_bridgeObjectRelease();
        uint64_t v766 = *((void *)v708 + 7);
        *((void *)v707 + 6) = *((void *)v708 + 6);
        *((void *)v707 + 7) = v766;
        swift_bridgeObjectRelease();
        uint64_t v767 = *(int *)(v709 + 32);
        uint64_t v768 = &v707[v767];
        uint64_t v769 = &v708[v767];
        uint64_t v770 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v770 - 8) + 40))(v768, v769, v770);
LABEL_380:
        uint64_t v9 = v1016;
        uint64_t v735 = v697[6];
        uint64_t v736 = (void *)((char *)v695 + v735);
        uint64_t v737 = (char *)v696 + v735;
        uint64_t v738 = type metadata accessor for TranscriptProtoResponseVisual(0);
        int v739 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v736, 1, v738);
        uint64_t v1004 = (int *)v738;
        int v740 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v737, 1, v738);
        uint64_t v10 = __srco;
        uint64_t v11 = v1069;
        if (v739)
        {
          if (!v740)
          {
            *(_OWORD *)uint64_t v736 = *(_OWORD *)v737;
            uint64_t v741 = v1004[6];
            uint64_t v742 = (char *)v736 + v741;
            uint64_t v997 = v737;
            uint64_t v743 = &v737[v741];
            uint64_t v744 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v743, 1, v744))
            {
              uint64_t v745 = sub_253462A5C(&qword_269CE04C0);
              memcpy(v742, v743, *(void *)(*(void *)(v745 - 8) + 64));
            }
            else
            {
              *uint64_t v742 = *v743;
              uint64_t v782 = *(int *)(v744 + 20);
              int v783 = &v742[v782];
              int v784 = &v743[v782];
              uint64_t v785 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v785 - 8) + 32))(v783, v784, v785);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v742, 0, 1, v744);
            }
            uint64_t v10 = __srco;
            uint64_t v786 = v1004[7];
            uint64_t v787 = (char *)v736 + v786;
            uint64_t v788 = &v997[v786];
            uint64_t v789 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v789 - 8) + 32))(v787, v788, v789);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v736, 0, 1, (uint64_t)v1004);
            uint64_t v11 = v1069;
LABEL_412:
            uint64_t v809 = v697[7];
            uint64_t v810 = (void *)((char *)v695 + v809);
            uint64_t v811 = (void *)((char *)v696 + v809);
            uint64_t v813 = *v811;
            uint64_t v812 = v811[1];
            *uint64_t v810 = v813;
            v810[1] = v812;
            swift_bridgeObjectRelease();
            uint64_t v814 = v697[8];
            uint64_t v815 = (void *)((char *)v695 + v814);
            uint64_t v816 = (void *)((char *)v696 + v814);
            uint64_t v818 = *v816;
            uint64_t v817 = v816[1];
            *uint64_t v815 = v818;
            v815[1] = v817;
            swift_bridgeObjectRelease();
            *((unsigned char *)v695 + v697[9]) = *((unsigned char *)v696 + v697[9]);
            *((unsigned char *)v695 + v697[10]) = *((unsigned char *)v696 + v697[10]);
            uint64_t v819 = v697[11];
            uint64_t v820 = (uint64_t)v695 + v819;
            int v821 = (_OWORD *)((char *)v696 + v819);
            uint64_t v822 = type metadata accessor for TranscriptProtoUIType(0);
            uint64_t v999 = (_OWORD *)v820;
            LODWORD(v820) = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v820, 1, v822);
            uint64_t v1007 = v821;
            int v823 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v821, 1, v822);
            if (v820)
            {
              if (!v823)
              {
                uint64_t v826 = type metadata accessor for TranscriptProtoUitype(0);
                if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v821, 1, v826))
                {
                  uint64_t v827 = sub_253462A5C(&qword_269CDCC08);
                  memcpy(v999, v821, *(void *)(*(void *)(v827 - 8) + 64));
                  uint64_t v10 = __srco;
                }
                else
                {
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 1u:
                      *uint64_t v999 = *v821;
                      uint64_t v837 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
                      goto LABEL_432;
                    case 2u:
                      long long v838 = v821[1];
                      *uint64_t v999 = *v821;
                      v999[1] = v838;
                      uint64_t v835 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
                      break;
                    case 3u:
                      *uint64_t v999 = *v821;
                      uint64_t v837 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_432:
                      uint64_t v835 = *(int *)(v837 + 20);
                      break;
                    default:
                      long long v834 = v821[1];
                      *uint64_t v999 = *v821;
                      v999[1] = v834;
                      v999[2] = v821[2];
                      uint64_t v835 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
                      break;
                  }
                  uint64_t v974 = (char *)v999 + v835;
                  uint64_t v839 = (char *)v821 + v835;
                  uint64_t v840 = sub_253B07160();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v840 - 8) + 32))(v974, v839, v840);
                  swift_storeEnumTagMultiPayload();
                  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v999, 0, 1, v826);
                  uint64_t v10 = __srco;
                  uint64_t v11 = v1069;
                }
                uint64_t v841 = *(int *)(v822 + 20);
                int v1070 = (char *)v999 + v841;
                uint64_t v842 = (char *)v1007 + v841;
                uint64_t v843 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v843 - 8) + 32))(v1070, v842, v843);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v999, 0, 1, v822);
                goto LABEL_449;
              }
              size_t v824 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE04D0) - 8) + 64);
              uint64_t v825 = v999;
              goto LABEL_417;
            }
            if (v823)
            {
              sub_2536FA73C();
              size_t v824 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE04D0) - 8) + 64);
              uint64_t v825 = v999;
LABEL_417:
              memcpy(v825, v821, v824);
LABEL_449:
              uint64_t v876 = v697[12];
              uint64_t v877 = (char *)v695 + v876;
              uint64_t v878 = (char *)v696 + v876;
              uint64_t v879 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v879 - 8) + 40))(v877, v878, v879);
              uint64_t v4 = v1027;
              goto LABEL_450;
            }
            uint64_t v828 = type metadata accessor for TranscriptProtoUitype(0);
            int v829 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v999, 1, v828);
            int v830 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v1007, 1, v828);
            if (v829)
            {
              if (!v830)
              {
                uint64_t v973 = v828;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 1u:
                    uint64_t v831 = v1007;
                    *uint64_t v999 = *v1007;
                    uint64_t v855 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
                    goto LABEL_442;
                  case 2u:
                    uint64_t v831 = v1007;
                    long long v856 = v1007[1];
                    *uint64_t v999 = *v1007;
                    v999[1] = v856;
                    uint64_t v833 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
                    break;
                  case 3u:
                    uint64_t v831 = v1007;
                    *uint64_t v999 = *v1007;
                    uint64_t v855 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_442:
                    uint64_t v833 = *(int *)(v855 + 20);
                    break;
                  default:
                    uint64_t v831 = v1007;
                    long long v832 = v1007[1];
                    *uint64_t v999 = *v1007;
                    v999[1] = v832;
                    v999[2] = v1007[2];
                    uint64_t v833 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
                    break;
                }
                uint64_t v969 = (char *)v999 + v833;
                uint64_t v857 = (char *)v831 + v833;
                uint64_t v858 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v858 - 8) + 32))(v969, v857, v858);
                swift_storeEnumTagMultiPayload();
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v999, 0, 1, v973);
                uint64_t v11 = v1069;
                goto LABEL_448;
              }
            }
            else
            {
              if (!v830)
              {
                if (a1 != v1027)
                {
                  sub_2536FA73C();
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 1u:
                      *uint64_t v999 = *v1007;
                      uint64_t v859 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityPayload(0) + 20);
                      v860 = (char *)v999 + v859;
                      v861 = (char *)v1007 + v859;
                      uint64_t v862 = sub_253B07160();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v862 - 8) + 32))(v860, v861, v862);
                      break;
                    case 2u:
                      long long v863 = v1007[1];
                      *uint64_t v999 = *v1007;
                      v999[1] = v863;
                      uint64_t v864 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
                      uint64_t v865 = (char *)v999 + v864;
                      v866 = (char *)v1007 + v864;
                      uint64_t v867 = sub_253B07160();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v867 - 8) + 32))(v865, v866, v867);
                      break;
                    case 3u:
                      *uint64_t v999 = *v1007;
                      uint64_t v868 = *(int *)(type metadata accessor for TranscriptProtoControlPayload(0) + 20);
                      uint64_t v869 = (char *)v999 + v868;
                      int v870 = (char *)v1007 + v868;
                      uint64_t v871 = sub_253B07160();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v871 - 8) + 32))(v869, v870, v871);
                      break;
                    default:
                      long long v850 = v1007[1];
                      *uint64_t v999 = *v1007;
                      v999[1] = v850;
                      v999[2] = v1007[2];
                      uint64_t v851 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
                      uint64_t v852 = (char *)v999 + v851;
                      unint64_t v853 = (char *)v1007 + v851;
                      uint64_t v854 = sub_253B07160();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v854 - 8) + 32))(v852, v853, v854);
                      break;
                  }
                  swift_storeEnumTagMultiPayload();
                }
                goto LABEL_448;
              }
              sub_2536FA73C();
            }
            uint64_t v836 = sub_253462A5C(&qword_269CDCC08);
            memcpy(v999, v1007, *(void *)(*(void *)(v836 - 8) + 64));
LABEL_448:
            uint64_t v872 = *(int *)(v822 + 20);
            uint64_t v873 = (char *)v999 + v872;
            v874 = (char *)v1007 + v872;
            uint64_t v875 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v875 - 8) + 40))(v873, v874, v875);
            goto LABEL_449;
          }
LABEL_386:
          uint64_t v746 = sub_253462A5C(&qword_269CE04C8);
          memcpy(v736, v737, *(void *)(*(void *)(v746 - 8) + 64));
          goto LABEL_412;
        }
        if (v740)
        {
          sub_2536FA73C();
          goto LABEL_386;
        }
        void *v736 = *(void *)v737;
        swift_bridgeObjectRelease();
        v736[1] = *((void *)v737 + 1);
        swift_bridgeObjectRelease();
        uint64_t v771 = v1004[6];
        uint64_t v772 = (char *)v736 + v771;
        uint64_t v773 = &v737[v771];
        uint64_t v774 = type metadata accessor for TranscriptProtoResponseVisualOptions(0);
        int v775 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v772, 1, v774);
        int v776 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v773, 1, v774);
        if (v775)
        {
          if (!v776)
          {
            *uint64_t v772 = *v773;
            uint64_t v777 = *(int *)(v774 + 20);
            uint64_t v778 = &v772[v777];
            uint64_t v998 = v737;
            uint64_t v779 = &v773[v777];
            uint64_t v780 = sub_253B07160();
            uint64_t v781 = v779;
            uint64_t v737 = v998;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v780 - 8) + 32))(v778, v781, v780);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v772, 0, 1, v774);
LABEL_411:
            uint64_t v9 = v1016;
            uint64_t v805 = v1004[7];
            uint64_t v806 = (char *)v736 + v805;
            uint64_t v807 = &v737[v805];
            uint64_t v808 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v808 - 8) + 40))(v806, v807, v808);
            uint64_t v10 = __srco;
            uint64_t v11 = v1069;
            goto LABEL_412;
          }
        }
        else
        {
          if (!v776)
          {
            *uint64_t v772 = *v773;
            uint64_t v844 = *(int *)(v774 + 20);
            uint64_t v845 = &v772[v844];
            v846 = v737;
            v847 = &v773[v844];
            uint64_t v848 = sub_253B07160();
            uint64_t v849 = v847;
            uint64_t v737 = v846;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v848 - 8) + 40))(v845, v849, v848);
            goto LABEL_411;
          }
          sub_2536FA73C();
        }
        uint64_t v804 = sub_253462A5C(&qword_269CE04C0);
        memcpy(v772, v773, *(void *)(*(void *)(v804 - 8) + 64));
        goto LABEL_411;
      }
      sub_2536FA73C();
    }
    uint64_t v734 = sub_253462A5C(&qword_269CE04B8);
    memcpy(v707, v708, *(void *)(*(void *)(v734 - 8) + 64));
    goto LABEL_380;
  }
  sub_2536FA73C();
LABEL_368:
  uint64_t v705 = sub_253462A5C(&qword_269CE0378);
  memcpy(v695, v696, *(void *)(*(void *)(v705 - 8) + 64));
LABEL_450:
  uint64_t v880 = *(int *)(v11 + 24);
  uint64_t v881 = (char *)v9 + v880;
  uint64_t v882 = (char *)v10 + v880;
  uint64_t v883 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v883 - 8) + 40))(v881, v882, v883);
LABEL_451:
  a3 = v1071;
LABEL_452:
  uint64_t v884 = a3[7];
  uint64_t v885 = (void *)((char *)a1 + v884);
  uint64_t v886 = (void *)((char *)v4 + v884);
  uint64_t v887 = type metadata accessor for TranscriptProtoStatementID(0);
  int v888 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v885, 1, v887);
  int v889 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v886, 1, v887);
  if (v888)
  {
    if (!v889)
    {
      *(_DWORD *)uint64_t v885 = *(_DWORD *)v886;
      *(_OWORD *)(v885 + 1) = *(_OWORD *)(v886 + 1);
      uint64_t v890 = *(int *)(v887 + 24);
      uint64_t v891 = (char *)v885 + v890;
      uint64_t v892 = (char *)v886 + v890;
      uint64_t v893 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v893 - 8) + 32))(v891, v892, v893);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v885, 0, 1, v887);
      goto LABEL_458;
    }
    goto LABEL_457;
  }
  if (v889)
  {
    sub_2536FA73C();
LABEL_457:
    uint64_t v894 = sub_253462A5C(&qword_26B249528);
    memcpy(v885, v886, *(void *)(*(void *)(v894 - 8) + 64));
    goto LABEL_458;
  }
  *(_DWORD *)uint64_t v885 = *(_DWORD *)v886;
  uint64_t v932 = v886[2];
  v885[1] = v886[1];
  v885[2] = v932;
  swift_bridgeObjectRelease();
  uint64_t v933 = *(int *)(v887 + 24);
  uint64_t v934 = (char *)v885 + v933;
  uint64_t v935 = (char *)v886 + v933;
  uint64_t v936 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v936 - 8) + 40))(v934, v935, v936);
LABEL_458:
  uint64_t v895 = a3[8];
  v896 = (void *)((char *)a1 + v895);
  v897 = (void *)((char *)v4 + v895);
  int v898 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1 + v895, 1, v887);
  int v899 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v897, 1, v887);
  if (v898)
  {
    if (!v899)
    {
      *(_DWORD *)v896 = *(_DWORD *)v897;
      *(_OWORD *)(v896 + 1) = *(_OWORD *)(v897 + 1);
      uint64_t v900 = *(int *)(v887 + 24);
      uint64_t v901 = (char *)v896 + v900;
      uint64_t v902 = (char *)v897 + v900;
      uint64_t v903 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v903 - 8) + 32))(v901, v902, v903);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v896, 0, 1, v887);
      goto LABEL_464;
    }
    goto LABEL_463;
  }
  if (v899)
  {
    sub_2536FA73C();
LABEL_463:
    uint64_t v904 = sub_253462A5C(&qword_26B249528);
    memcpy(v896, v897, *(void *)(*(void *)(v904 - 8) + 64));
    goto LABEL_464;
  }
  *(_DWORD *)v896 = *(_DWORD *)v897;
  uint64_t v937 = v897[2];
  v896[1] = v897[1];
  v896[2] = v937;
  swift_bridgeObjectRelease();
  uint64_t v938 = *(int *)(v887 + 24);
  uint64_t v939 = (char *)v896 + v938;
  uint64_t v940 = (char *)v897 + v938;
  uint64_t v941 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v941 - 8) + 40))(v939, v940, v941);
LABEL_464:
  uint64_t v905 = a3[9];
  uint64_t v906 = (void *)((char *)a1 + v905);
  uint64_t v907 = (void *)((char *)v4 + v905);
  int v908 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1 + v905, 1, v887);
  int v909 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v907, 1, v887);
  if (v908)
  {
    if (!v909)
    {
      *(_DWORD *)uint64_t v906 = *(_DWORD *)v907;
      *(_OWORD *)(v906 + 1) = *(_OWORD *)(v907 + 1);
      uint64_t v910 = *(int *)(v887 + 24);
      int v911 = (char *)v906 + v910;
      uint64_t v912 = (char *)v907 + v910;
      uint64_t v913 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v913 - 8) + 32))(v911, v912, v913);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v906, 0, 1, v887);
      goto LABEL_470;
    }
    goto LABEL_469;
  }
  if (v909)
  {
    sub_2536FA73C();
LABEL_469:
    uint64_t v914 = sub_253462A5C(&qword_26B249528);
    memcpy(v906, v907, *(void *)(*(void *)(v914 - 8) + 64));
    goto LABEL_470;
  }
  *(_DWORD *)uint64_t v906 = *(_DWORD *)v907;
  uint64_t v942 = v907[2];
  v906[1] = v907[1];
  v906[2] = v942;
  swift_bridgeObjectRelease();
  uint64_t v943 = *(int *)(v887 + 24);
  unint64_t v944 = (char *)v906 + v943;
  uint64_t v945 = (char *)v907 + v943;
  uint64_t v946 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v946 - 8) + 40))(v944, v945, v946);
LABEL_470:
  uint64_t v915 = a3[10];
  uint64_t v916 = (void *)((char *)a1 + v915);
  uint64_t v917 = (void *)((char *)v4 + v915);
  uint64_t v918 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  int v919 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v916, 1, v918);
  int v920 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v917, 1, v918);
  if (!v919)
  {
    if (!v920)
    {
      uint64_t v947 = v917[1];
      *uint64_t v916 = *v917;
      v916[1] = v947;
      swift_bridgeObjectRelease();
      uint64_t v948 = v917[3];
      v916[2] = v917[2];
      v916[3] = v948;
      swift_bridgeObjectRelease();
      uint64_t v949 = *(int *)(v918 + 24);
      uint64_t v950 = (char *)v916 + v949;
      uint64_t v951 = (char *)v917 + v949;
      uint64_t v952 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v952 - 8) + 40))(v950, v951, v952);
      goto LABEL_476;
    }
    sub_2536FA73C();
    goto LABEL_475;
  }
  if (v920)
  {
LABEL_475:
    uint64_t v926 = sub_253462A5C(&qword_269CE0448);
    memcpy(v916, v917, *(void *)(*(void *)(v926 - 8) + 64));
    goto LABEL_476;
  }
  long long v921 = *((_OWORD *)v917 + 1);
  *(_OWORD *)uint64_t v916 = *(_OWORD *)v917;
  *((_OWORD *)v916 + 1) = v921;
  uint64_t v922 = *(int *)(v918 + 24);
  int v923 = (char *)v916 + v922;
  size_t v924 = (char *)v917 + v922;
  uint64_t v925 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v925 - 8) + 32))(v923, v924, v925);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v916, 0, 1, v918);
LABEL_476:
  uint64_t v927 = a3[11];
  uint64_t v928 = (char *)a1 + v927;
  int v929 = (char *)v4 + v927;
  uint64_t v930 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v930 - 8) + 40))(v928, v929, v930);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoStatementResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25384242C);
}

uint64_t sub_25384242C()
{
  sub_2535E240C();
  if (v2) {
    return sub_2535E2258(*(void *)(v1 + 8));
  }
  sub_2535E2460();
  sub_253462A5C(&qword_269CE1C80);
  sub_2535782A8();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    sub_2535E2560();
  }
  else
  {
    sub_253462A5C(&qword_26B249528);
    sub_2535782A8();
    if (*(_DWORD *)(v6 + 84) == v0)
    {
      sub_2535E256C();
    }
    else
    {
      sub_253462A5C(&qword_269CE0448);
      sub_2535782A8();
      if (*(_DWORD *)(v7 + 84) == v0)
      {
        sub_2539455B8();
      }
      else
      {
        sub_253B07160();
        sub_25394532C();
      }
    }
  }
  uint64_t v8 = sub_2535E22C8(v5);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, v9, v10);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoStatementResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253842520);
}

void sub_253842520()
{
  sub_2535E2308();
  if (v3)
  {
    *(void *)(v1 + 8) = v0;
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_269CE1C80);
    sub_2535782A8();
    if (*(_DWORD *)(v4 + 84) == v2)
    {
      sub_2535E26D8();
    }
    else
    {
      sub_253462A5C(&qword_26B249528);
      sub_2535782A8();
      if (*(_DWORD *)(v6 + 84) == v2)
      {
        sub_2535E26E4();
      }
      else
      {
        sub_253462A5C(&qword_269CE0448);
        sub_2535782A8();
        if (*(_DWORD *)(v7 + 84) == v2)
        {
          sub_253945614();
        }
        else
        {
          sub_253B07160();
          sub_2539453D4();
        }
      }
    }
    uint64_t v8 = sub_2535E2234(v5);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v8, v9, v10, v11);
  }
}

void sub_253842600()
{
  sub_253760A08(319, &qword_26B249BE8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementResultPayload);
  if (v0 <= 0x3F)
  {
    sub_253760A08(319, &qword_26B249530, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
    if (v1 <= 0x3F)
    {
      sub_253760A08(319, &qword_26B249A78, (void (*)(uint64_t))type metadata accessor for TranscriptProtoGlobalToolIdentifier);
      if (v2 <= 0x3F)
      {
        sub_253B07160();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for TranscriptProtoResponseGenerationRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538427B8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoResponseGenerationRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538427D0);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoCandidate(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_253B08E50();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
    }
    uint64_t v13 = a3[6];
    uint64_t v14 = (_WORD *)((char *)v4 + v13);
    uint64_t v15 = (_WORD *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16))
    {
      uint64_t v17 = sub_253462A5C(&qword_269CE1CB0);
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v14 = *(void *)v15;
      v14[4] = v15[4];
      uint64_t v18 = *(int *)(v16 + 20);
      int v19 = (char *)v14 + v18;
      uint64_t v20 = (char *)v15 + v18;
      uint64_t v21 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v14, 0, 1, v16);
    }
    uint64_t v22 = a3[7];
    uint64_t v23 = (uint64_t *)((char *)v4 + v22);
    uint64_t v24 = (uint64_t *)((char *)a2 + v22);
    uint64_t v25 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v24, 1, v25))
    {
      uint64_t v26 = sub_253462A5C(&qword_26B249528);
      memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
      uint64_t v27 = v24[2];
      v23[1] = v24[1];
      v23[2] = v27;
      uint64_t v28 = *(int *)(v25 + 24);
      uint64_t v29 = (char *)v23 + v28;
      uint64_t v37 = (char *)v24 + v28;
      uint64_t v30 = sub_253B07160();
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
      swift_bridgeObjectRetain();
      v31(v29, v37, v30);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v23, 0, 1, v25);
    }
    uint64_t v32 = a3[8];
    int v33 = (char *)v4 + v32;
    int v34 = (char *)a2 + v32;
    uint64_t v35 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoCandidate(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_253B08E50();
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, 1, v7))
  {
    uint64_t v8 = v6 + *(int *)(v7 + 20);
    uint64_t v9 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = a1 + a2[7];
  uint64_t v11 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, 1, v11))
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = v10 + *(int *)(v11 + 24);
    uint64_t v13 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  uint64_t v14 = a1 + a2[8];
  uint64_t v15 = sub_253B07160();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
  return v16(v14, v15);
}

unsigned char *initializeWithCopy for TranscriptProtoCandidate(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_253B08E50();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_253462A5C(&qword_269CE1CB0);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v12 = *(void *)v13;
    v12[4] = v13[4];
    uint64_t v16 = *(int *)(v14 + 20);
    uint64_t v17 = (char *)v12 + v16;
    uint64_t v18 = (char *)v13 + v16;
    uint64_t v19 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v20 = a3[7];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v23))
  {
    uint64_t v24 = sub_253462A5C(&qword_26B249528);
    memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
    uint64_t v25 = v22[2];
    v21[1] = v22[1];
    v21[2] = v25;
    uint64_t v26 = *(int *)(v23 + 24);
    uint64_t v27 = (char *)v21 + v26;
    uint64_t v35 = (char *)v22 + v26;
    uint64_t v28 = sub_253B07160();
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    v29(v27, v35, v28);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v21, 0, 1, v23);
  }
  uint64_t v30 = a3[8];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  return a1;
}

unsigned char *assignWithCopy for TranscriptProtoCandidate(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_253B08E50();
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  int v18 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v17);
  int v19 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v17);
  if (v18)
  {
    if (!v19)
    {
      uint64_t v20 = *(void *)v16;
      v15[4] = v16[4];
      *(void *)uint64_t v15 = v20;
      uint64_t v21 = *(int *)(v17 + 20);
      uint64_t v22 = (char *)v15 + v21;
      uint64_t v23 = (char *)v16 + v21;
      uint64_t v24 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    sub_2536FA73C();
LABEL_12:
    uint64_t v25 = sub_253462A5C(&qword_269CE1CB0);
    memcpy(v15, v16, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v42 = *(void *)v16;
  v15[4] = v16[4];
  *(void *)uint64_t v15 = v42;
  uint64_t v43 = *(int *)(v17 + 20);
  uint64_t v44 = (char *)v15 + v43;
  uint64_t v45 = (char *)v16 + v43;
  uint64_t v46 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
LABEL_13:
  uint64_t v26 = a3[7];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v29 = type metadata accessor for TranscriptProtoStatementID(0);
  int v30 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v29);
  int v31 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v29);
  if (!v30)
  {
    if (!v31)
    {
      *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
      v27[1] = v28[1];
      v27[2] = v28[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v47 = *(int *)(v29 + 24);
      uint64_t v48 = (char *)v27 + v47;
      uint64_t v49 = (char *)v28 + v47;
      uint64_t v50 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
      goto LABEL_19;
    }
    sub_2536FA73C();
    goto LABEL_18;
  }
  if (v31)
  {
LABEL_18:
    uint64_t v36 = sub_253462A5C(&qword_26B249528);
    memcpy(v27, v28, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_19;
  }
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  v27[1] = v28[1];
  v27[2] = v28[2];
  uint64_t v32 = *(int *)(v29 + 24);
  uint64_t v33 = (char *)v27 + v32;
  uint64_t v51 = (char *)v28 + v32;
  uint64_t v34 = sub_253B07160();
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
  swift_bridgeObjectRetain();
  v35(v33, v51, v34);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v27, 0, 1, v29);
LABEL_19:
  uint64_t v37 = a3[8];
  uint64_t v38 = &a1[v37];
  uint64_t v39 = &a2[v37];
  uint64_t v40 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v40 - 8) + 24))(v38, v39, v40);
  return a1;
}

unsigned char *initializeWithTake for TranscriptProtoCandidate(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_253B08E50();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_253462A5C(&qword_269CE1CB0);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v12 = *(void *)v13;
    v12[4] = v13[4];
    uint64_t v16 = *(int *)(v14 + 20);
    uint64_t v17 = (char *)v12 + v16;
    int v18 = (char *)v13 + v16;
    uint64_t v19 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v20 = a3[7];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v23))
  {
    uint64_t v24 = sub_253462A5C(&qword_26B249528);
    memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    _DWORD *v21 = *v22;
    *(_OWORD *)(v21 + 2) = *(_OWORD *)(v22 + 2);
    uint64_t v25 = *(int *)(v23 + 24);
    uint64_t v26 = (char *)v21 + v25;
    uint64_t v27 = (char *)v22 + v25;
    uint64_t v28 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v21, 0, 1, v23);
  }
  uint64_t v29 = a3[8];
  int v30 = &a1[v29];
  int v31 = &a2[v29];
  uint64_t v32 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
  return a1;
}

unsigned char *assignWithTake for TranscriptProtoCandidate(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_253B08E50();
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  int v18 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v17);
  int v19 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v17);
  if (v18)
  {
    if (!v19)
    {
      *(void *)uint64_t v15 = *(void *)v16;
      v15[4] = v16[4];
      uint64_t v20 = *(int *)(v17 + 20);
      uint64_t v21 = (char *)v15 + v20;
      uint64_t v22 = (char *)v16 + v20;
      uint64_t v23 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    sub_2536FA73C();
LABEL_12:
    uint64_t v24 = sub_253462A5C(&qword_269CE1CB0);
    memcpy(v15, v16, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  *(void *)uint64_t v15 = *(void *)v16;
  v15[4] = v16[4];
  uint64_t v41 = *(int *)(v17 + 20);
  uint64_t v42 = (char *)v15 + v41;
  uint64_t v43 = (char *)v16 + v41;
  uint64_t v44 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 40))(v42, v43, v44);
LABEL_13:
  uint64_t v25 = a3[7];
  uint64_t v26 = (uint64_t)&a1[v25];
  uint64_t v27 = (uint64_t)&a2[v25];
  uint64_t v28 = type metadata accessor for TranscriptProtoStatementID(0);
  int v29 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v26, 1, v28);
  int v30 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v27, 1, v28);
  if (!v29)
  {
    if (!v30)
    {
      *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
      uint64_t v45 = *(void *)(v27 + 16);
      *(void *)(v26 + 8) = *(void *)(v27 + 8);
      *(void *)(v26 + 16) = v45;
      swift_bridgeObjectRelease();
      uint64_t v46 = *(int *)(v28 + 24);
      uint64_t v47 = v26 + v46;
      uint64_t v48 = v27 + v46;
      uint64_t v49 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 40))(v47, v48, v49);
      goto LABEL_19;
    }
    sub_2536FA73C();
    goto LABEL_18;
  }
  if (v30)
  {
LABEL_18:
    uint64_t v35 = sub_253462A5C(&qword_26B249528);
    memcpy((void *)v26, (const void *)v27, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_19;
  }
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(_OWORD *)(v26 + 8) = *(_OWORD *)(v27 + 8);
  uint64_t v31 = *(int *)(v28 + 24);
  uint64_t v32 = v26 + v31;
  uint64_t v33 = v27 + v31;
  uint64_t v34 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v26, 0, 1, v28);
LABEL_19:
  uint64_t v36 = a3[8];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  uint64_t v39 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v39 - 8) + 40))(v37, v38, v39);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoCandidate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253843BA0);
}

uint64_t sub_253843BA0(unsigned __int8 *a1, int a2)
{
  if (a2 == 248)
  {
    unsigned int v3 = *a1;
    if (v3 >= 8) {
      return v3 - 7;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_2535E2460();
    sub_253462A5C(&qword_269CDCBC8);
    sub_2535782A8();
    if (*(_DWORD *)(v5 + 84) == v2)
    {
      sub_2535E263C();
    }
    else
    {
      sub_253462A5C(&qword_269CE1CB0);
      sub_2535782A8();
      if (*(_DWORD *)(v7 + 84) == v2)
      {
        sub_2535E2560();
      }
      else
      {
        sub_253462A5C(&qword_26B249528);
        sub_2535782A8();
        if (*(_DWORD *)(v8 + 84) == v2)
        {
          sub_2535E256C();
        }
        else
        {
          sub_253B07160();
          sub_2535E27E4();
        }
      }
    }
    uint64_t v9 = sub_2535E22C8(v6);
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, v10, v11);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoCandidate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253843CA0);
}

void sub_253843CA0()
{
  sub_2534DA0C4();
  if (v3 == 248)
  {
    *unint64_t v1 = v0 + 7;
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_269CDCBC8);
    sub_2535782A8();
    if (*(_DWORD *)(v4 + 84) == v2)
    {
      sub_2535E272C();
    }
    else
    {
      sub_253462A5C(&qword_269CE1CB0);
      sub_2535782A8();
      if (*(_DWORD *)(v6 + 84) == v2)
      {
        sub_2535E26D8();
      }
      else
      {
        sub_253462A5C(&qword_26B249528);
        sub_2535782A8();
        if (*(_DWORD *)(v7 + 84) == v2)
        {
          sub_2535E26E4();
        }
        else
        {
          sub_253B07160();
          sub_2535E2830();
        }
      }
    }
    uint64_t v8 = sub_2535E2234(v5);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v8, v9, v10, v11);
  }
}

void sub_253843D84()
{
  sub_253760A08(319, &qword_26B24A358, MEMORY[0x263F802B0]);
  if (v0 <= 0x3F)
  {
    sub_253760A08(319, &qword_26B249B08, (void (*)(uint64_t))type metadata accessor for TranscriptProtoCandidatePromptStatus);
    if (v1 <= 0x3F)
    {
      sub_253760A08(319, &qword_26B249530, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
      if (v2 <= 0x3F)
      {
        sub_253B07160();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t _s30IntelligenceFlowPlannerSupport30TranscriptProtoPromptSelectionVwCP_0(uint64_t a1)
{
  sub_2535782A8();
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    sub_2539442C0(*(void *)v2);
  }
  else
  {
    *(void *)a1 = *(void *)v2;
    *(_WORD *)(a1 + 8) = *(_WORD *)(v2 + 8);
    sub_25394540C();
    sub_25346CAF4();
    sub_2534B3428();
    v4();
  }
  return a1;
}

uint64_t _s30IntelligenceFlowPlannerSupport30TranscriptProtoPromptSelectionVwcp_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  sub_253944340();
  sub_25346CAF4();
  sub_2534B3428();
  v3();
  return a1;
}

uint64_t _s30IntelligenceFlowPlannerSupport30TranscriptProtoPromptSelectionVwca_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
  *(void *)a1 = v3;
  sub_253944340();
  sub_25346CAF4();
  sub_253944540();
  v4();
  return a1;
}

uint64_t _s30IntelligenceFlowPlannerSupport30TranscriptProtoPromptSelectionVwtk_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  sub_253944340();
  sub_25346CAF4();
  sub_2534D8E14();
  v3();
  return a1;
}

uint64_t _s30IntelligenceFlowPlannerSupport30TranscriptProtoPromptSelectionVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  sub_253944340();
  sub_25346CAF4();
  sub_253944534();
  v3();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoCandidatePromptStatus(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25384415C);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoCandidatePromptStatus(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253844174);
}

void type metadata accessor for TranscriptProtoCandidatePromptStatusEnum()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoClientAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v10 = *(int *)(a3 + 40);
    __dst = (uint64_t *)((char *)a1 + v10);
    uint64_t v11 = (uint64_t *)((char *)a2 + v10);
    a1[8] = a2[8];
    uint64_t v12 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
    {
      uint64_t v13 = sub_253462A5C(&qword_26B249528);
      memcpy(__dst, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      *(_DWORD *)__dst = *(_DWORD *)v11;
      uint64_t v15 = v11[2];
      __dst[1] = v11[1];
      __dst[2] = v15;
      uint64_t v16 = *(int *)(v12 + 24);
      uint64_t v17 = (char *)__dst + v16;
      int v18 = (char *)v11 + v16;
      uint64_t v19 = sub_253B07160();
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v17, v18, v19);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v12);
    }
    uint64_t v21 = *(int *)(a3 + 44);
    uint64_t v22 = (char *)v4 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoClientAction(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 44);
  uint64_t v9 = sub_253B07160();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  return v10(v8, v9);
}

void *initializeWithCopy for TranscriptProtoClientAction(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = *(int *)(a3 + 40);
  __dst = (void *)((char *)a1 + v9);
  uint64_t v10 = (void *)((char *)a2 + v9);
  a1[8] = a2[8];
  uint64_t v11 = type metadata accessor for TranscriptProtoStatementID(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_253462A5C(&qword_26B249528);
    memcpy(__dst, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *(_DWORD *)__dst = *(_DWORD *)v10;
    uint64_t v13 = v10[2];
    __dst[1] = v10[1];
    __dst[2] = v13;
    uint64_t v14 = *(int *)(v11 + 24);
    uint64_t v15 = (char *)__dst + v14;
    uint64_t v16 = (char *)v10 + v14;
    uint64_t v17 = sub_253B07160();
    int v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    v18(v15, v16, v17);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v11);
  }
  uint64_t v19 = *(int *)(a3 + 44);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

void *assignWithCopy for TranscriptProtoClientAction(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v22 = *(int *)(v9 + 24);
      uint64_t v23 = (char *)v7 + v22;
      uint64_t v24 = (char *)v8 + v22;
      uint64_t v25 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  uint64_t v12 = *(int *)(v9 + 24);
  uint64_t v13 = (char *)v7 + v12;
  uint64_t v26 = (char *)v8 + v12;
  uint64_t v14 = sub_253B07160();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v13, v26, v14);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 44);
  int v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoClientAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v7 = *(int *)(a3 + 40);
  uint64_t v8 = (_DWORD *)(a1 + v7);
  uint64_t v9 = (_DWORD *)(a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_26B249528);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    _DWORD *v8 = *v9;
    *(_OWORD *)(v8 + 2) = *(_OWORD *)(v9 + 2);
    uint64_t v12 = *(int *)(v10 + 24);
    uint64_t v13 = (char *)v8 + v12;
    uint64_t v14 = (char *)v9 + v12;
    uint64_t v15 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v16 = *(int *)(a3 + 44);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

void *assignWithTake for TranscriptProtoClientAction(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[6];
  a1[5] = a2[5];
  a1[6] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[8];
  a1[7] = a2[7];
  a1[8] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v10 = (uint64_t)a1 + v9;
  uint64_t v11 = (uint64_t)a2 + v9;
  uint64_t v12 = type metadata accessor for TranscriptProtoStatementID(0);
  int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, 1, v12);
  int v14 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v11, 1, v12);
  if (!v13)
  {
    if (!v14)
    {
      *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
      uint64_t v25 = *(void *)(v11 + 16);
      *(void *)(v10 + 8) = *(void *)(v11 + 8);
      *(void *)(v10 + 16) = v25;
      swift_bridgeObjectRelease();
      uint64_t v26 = *(int *)(v12 + 24);
      uint64_t v27 = v10 + v26;
      uint64_t v28 = v11 + v26;
      uint64_t v29 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 40))(v27, v28, v29);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v19 = sub_253462A5C(&qword_26B249528);
    memcpy((void *)v10, (const void *)v11, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
  *(_OWORD *)(v10 + 8) = *(_OWORD *)(v11 + 8);
  uint64_t v15 = *(int *)(v12 + 24);
  uint64_t v16 = v10 + v15;
  uint64_t v17 = v11 + v15;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v10, 0, 1, v12);
LABEL_7:
  uint64_t v20 = *(int *)(a3 + 44);
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoClientAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253844D40);
}

uint64_t sub_253844D40()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*(void *)(v1 + 8));
  }
  sub_2535E2460();
  sub_253462A5C(&qword_26B249528);
  sub_2535782A8();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    sub_2539455B8();
  }
  else
  {
    sub_253B07160();
    sub_25394532C();
  }
  uint64_t v6 = sub_2535E22C8(v5);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, v7, v8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoClientAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253844DE4);
}

void sub_253844DE4()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E24BC();
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_26B249528);
    sub_2535782A8();
    if (*(_DWORD *)(v2 + 84) == v0)
    {
      sub_253945614();
    }
    else
    {
      sub_253B07160();
      sub_2539453D4();
    }
    uint64_t v4 = sub_2535E2234(v3);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, v5, v6, v7);
  }
}

void sub_253844E70()
{
  sub_253760A08(319, &qword_26B249530, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
  if (v0 <= 0x3F)
  {
    sub_253B07160();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoShimParameterResolution(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CDCC60);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        uint64_t v10 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
        uint64_t v11 = *(int *)(v10 + 20);
        uint64_t v12 = (char *)a1 + v11;
        int v13 = (char *)a2 + v11;
        uint64_t v14 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
        {
          uint64_t v15 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
        }
        uint64_t v17 = *(int *)(v10 + 24);
        uint64_t v18 = (char *)a1 + v17;
        uint64_t v19 = (char *)a2 + v17;
        uint64_t v20 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      }
      else
      {
        uint64_t v16 = sub_253B08E50();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v21 = *(int *)(a3 + 20);
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoShimParameterResolution(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v5 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
      uint64_t v6 = a1 + *(int *)(v5 + 20);
      uint64_t v7 = sub_253B08E50();
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      }
      uint64_t v8 = a1 + *(int *)(v5 + 24);
      uint64_t v9 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    }
    else
    {
      uint64_t v10 = sub_253B08E50();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
    }
  }
  uint64_t v11 = a1 + *(int *)(a2 + 20);
  uint64_t v12 = sub_253B07160();
  int v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  return v13(v11, v12);
}

void *initializeWithCopy for TranscriptProtoShimParameterResolution(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CDCC60);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v8 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
      uint64_t v9 = *(int *)(v8 + 20);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
      {
        uint64_t v13 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
      }
      uint64_t v15 = *(int *)(v8 + 24);
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      uint64_t v14 = sub_253B08E50();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

void *assignWithCopy for TranscriptProtoShimParameterResolution(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        uint64_t v9 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
        uint64_t v10 = *(int *)(v9 + 20);
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13))
        {
          uint64_t v14 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v11, 0, 1, v13);
        }
        uint64_t v23 = *(int *)(v9 + 24);
        uint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
      }
      else
      {
        uint64_t v22 = sub_253B08E50();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_21;
    }
LABEL_8:
    uint64_t v15 = sub_253462A5C(&qword_269CDCC60);
    memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_21;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v16 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
      uint64_t v17 = *(int *)(v16 + 20);
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
      {
        uint64_t v21 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
      }
      uint64_t v28 = *(int *)(v16 + 24);
      uint64_t v29 = (char *)a1 + v28;
      int v30 = (char *)a2 + v28;
      uint64_t v31 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      uint64_t v27 = sub_253B08E50();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_21:
  uint64_t v32 = *(int *)(a3 + 20);
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 24))(v33, v34, v35);
  return a1;
}

void *initializeWithTake for TranscriptProtoShimParameterResolution(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CDCC60);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v8 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
      uint64_t v9 = *(int *)(v8 + 20);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
      {
        uint64_t v13 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
      }
      uint64_t v15 = *(int *)(v8 + 24);
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    }
    else
    {
      uint64_t v14 = sub_253B08E50();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

void *assignWithTake for TranscriptProtoShimParameterResolution(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        uint64_t v9 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
        uint64_t v10 = *(int *)(v9 + 20);
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13))
        {
          uint64_t v14 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v11, 0, 1, v13);
        }
        uint64_t v23 = *(int *)(v9 + 24);
        uint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      }
      else
      {
        uint64_t v22 = sub_253B08E50();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 32))(a1, a2, v22);
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_21;
    }
LABEL_8:
    uint64_t v15 = sub_253462A5C(&qword_269CDCC60);
    memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_21;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v16 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
      uint64_t v17 = *(int *)(v16 + 20);
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
      {
        uint64_t v21 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
      }
      uint64_t v28 = *(int *)(v16 + 24);
      uint64_t v29 = (char *)a1 + v28;
      int v30 = (char *)a2 + v28;
      uint64_t v31 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
    }
    else
    {
      uint64_t v27 = sub_253B08E50();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 32))(a1, a2, v27);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_21:
  uint64_t v32 = *(int *)(a3 + 20);
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 40))(v33, v34, v35);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoShimParameterResolution(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253846128);
}

uint64_t sub_253846128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CDCC60);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoShimParameterResolution(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253846148);
}

uint64_t sub_253846148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CDCC60);
}

void sub_253846154(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoShimParameterResolutionEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
      uint64_t v7 = *(int *)(v6 + 20);
      int v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
      {
        uint64_t v11 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
      }
      uint64_t v14 = *(int *)(v6 + 24);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      uint64_t v13 = sub_253B08E50();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TranscriptProtoShimParameterResolutionEnum(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
    uint64_t v3 = a1 + *(int *)(v2 + 20);
    uint64_t v4 = sub_253B08E50();
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
    }
    a1 += *(int *)(v2 + 24);
    uint64_t v5 = sub_253B07160();
  }
  else
  {
    uint64_t v5 = sub_253B08E50();
  }
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(a1, v5);
}

void *initializeWithCopy for TranscriptProtoShimParameterResolutionEnum(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v4 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
    uint64_t v5 = *(int *)(v4 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_253B08E50();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v8))
    {
      uint64_t v9 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v6, 0, 1, v8);
    }
    uint64_t v11 = *(int *)(v4 + 24);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    uint64_t v10 = sub_253B08E50();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for TranscriptProtoShimParameterResolutionEnum(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v4 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
      uint64_t v5 = *(int *)(v4 + 20);
      uint64_t v6 = (char *)a1 + v5;
      uint64_t v7 = (char *)a2 + v5;
      uint64_t v8 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v8))
      {
        uint64_t v9 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v6, 0, 1, v8);
      }
      uint64_t v11 = *(int *)(v4 + 24);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      uint64_t v10 = sub_253B08E50();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for TranscriptProtoShimParameterResolutionEnum(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v4 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
    uint64_t v5 = *(int *)(v4 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_253B08E50();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v8))
    {
      uint64_t v9 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v6, 0, 1, v8);
    }
    uint64_t v11 = *(int *)(v4 + 24);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  }
  else
  {
    uint64_t v10 = sub_253B08E50();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithTake for TranscriptProtoShimParameterResolutionEnum(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v4 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
      uint64_t v5 = *(int *)(v4 + 20);
      uint64_t v6 = (char *)a1 + v5;
      uint64_t v7 = (char *)a2 + v5;
      uint64_t v8 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v8))
      {
        uint64_t v9 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v6, 0, 1, v8);
      }
      uint64_t v11 = *(int *)(v4 + 24);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    }
    else
    {
      uint64_t v10 = sub_253B08E50();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253846BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2538586EC(a1, a2, a3, MEMORY[0x263F802B0], type metadata accessor for TranscriptProtoUnresolvedParameterValue);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoShimParameter(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoShimParameterEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CDCC38);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v12 = a2[2];
        a1[1] = a2[1];
        a1[2] = v12;
        uint64_t v13 = type metadata accessor for TranscriptProtoPersonQuery(0);
        uint64_t v14 = *(int *)(v13 + 24);
        uint64_t v15 = (uint64_t *)((char *)a1 + v14);
        uint64_t v16 = (uint64_t *)((char *)a2 + v14);
        uint64_t v17 = type metadata accessor for TranscriptProtoHandle(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v17))
        {
          uint64_t v18 = sub_253462A5C(&qword_269CE1D00);
          memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
          uint64_t v20 = v16[2];
          v15[1] = v16[1];
          v15[2] = v20;
          uint64_t v21 = v16[4];
          v15[3] = v16[3];
          v15[4] = v21;
          uint64_t v22 = *(int *)(v17 + 28);
          uint64_t v34 = (char *)v16 + v22;
          uint64_t v35 = (char *)v15 + v22;
          uint64_t v23 = sub_253B07160();
          uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v33(v35, v34, v23);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v17);
        }
        uint64_t v24 = *(int *)(v13 + 28);
        uint64_t v25 = (char *)a1 + v24;
        uint64_t v26 = (char *)a2 + v24;
        uint64_t v27 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v19 = sub_253B08E50();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v28 = *(int *)(a3 + 20);
    uint64_t v29 = (char *)a1 + v28;
    int v30 = (char *)a2 + v28;
    uint64_t v31 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoShimParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoShimParameterEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        swift_bridgeObjectRelease();
        uint64_t v7 = type metadata accessor for TranscriptProtoPersonQuery(0);
        uint64_t v8 = a1 + *(int *)(v7 + 24);
        uint64_t v9 = type metadata accessor for TranscriptProtoHandle(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v9))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v10 = v8 + *(int *)(v9 + 28);
          uint64_t v11 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
        }
        uint64_t v12 = a1 + *(int *)(v7 + 28);
        uint64_t v13 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
        break;
      case 1:
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v6 = sub_253B08E50();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
        break;
    }
  }
  uint64_t v14 = a1 + *(int *)(a2 + 20);
  uint64_t v15 = sub_253B07160();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
  return v16(v14, v15);
}

void *initializeWithCopy for TranscriptProtoShimParameter(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoShimParameterEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CDCC38);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v10 = a2[2];
      a1[1] = a2[1];
      a1[2] = v10;
      uint64_t v11 = type metadata accessor for TranscriptProtoPersonQuery(0);
      uint64_t v12 = *(int *)(v11 + 24);
      uint64_t v13 = (void *)((char *)a1 + v12);
      uint64_t v14 = (void *)((char *)a2 + v12);
      uint64_t v15 = type metadata accessor for TranscriptProtoHandle(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v14, 1, v15))
      {
        uint64_t v16 = sub_253462A5C(&qword_269CE1D00);
        memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        *(unsigned char *)uint64_t v13 = *(unsigned char *)v14;
        uint64_t v18 = v14[2];
        v13[1] = v14[1];
        v13[2] = v18;
        uint64_t v19 = v14[4];
        v13[3] = v14[3];
        v13[4] = v19;
        uint64_t v20 = *(int *)(v15 + 28);
        uint64_t v32 = (char *)v14 + v20;
        uint64_t v33 = (char *)v13 + v20;
        uint64_t v21 = sub_253B07160();
        uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v31(v33, v32, v21);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v13, 0, 1, v15);
      }
      uint64_t v22 = *(int *)(v11 + 28);
      uint64_t v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      uint64_t v25 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v17 = sub_253B08E50();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v26 = *(int *)(a3 + 20);
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  return a1;
}

void *assignWithCopy for TranscriptProtoShimParameter(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoShimParameterEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v12 = type metadata accessor for TranscriptProtoPersonQuery(0);
        uint64_t v13 = *(int *)(v12 + 24);
        uint64_t v14 = (void *)((char *)a1 + v13);
        uint64_t v15 = (void *)((char *)a2 + v13);
        uint64_t v16 = type metadata accessor for TranscriptProtoHandle(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16))
        {
          uint64_t v17 = sub_253462A5C(&qword_269CE1D00);
          memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
          v14[1] = v15[1];
          v14[2] = v15[2];
          v14[3] = v15[3];
          v14[4] = v15[4];
          uint64_t v26 = *(int *)(v16 + 28);
          uint64_t v45 = (char *)v15 + v26;
          uint64_t v47 = (char *)v14 + v26;
          uint64_t v27 = sub_253B07160();
          uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v43(v47, v45, v27);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v14, 0, 1, v16);
        }
        uint64_t v28 = *(int *)(v12 + 28);
        uint64_t v29 = (char *)a1 + v28;
        int v30 = (char *)a2 + v28;
        uint64_t v31 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v18 = sub_253B08E50();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_25;
    }
LABEL_8:
    uint64_t v10 = sub_253462A5C(&qword_269CDCC38);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_25;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    int v11 = swift_getEnumCaseMultiPayload();
    if (v11 == 2)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      uint64_t v19 = type metadata accessor for TranscriptProtoPersonQuery(0);
      uint64_t v20 = *(int *)(v19 + 24);
      uint64_t v21 = (void *)((char *)a1 + v20);
      uint64_t v22 = (void *)((char *)a2 + v20);
      uint64_t v23 = type metadata accessor for TranscriptProtoHandle(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v23))
      {
        uint64_t v24 = sub_253462A5C(&qword_269CE1D00);
        memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        *(unsigned char *)uint64_t v21 = *(unsigned char *)v22;
        v21[1] = v22[1];
        v21[2] = v22[2];
        v21[3] = v22[3];
        v21[4] = v22[4];
        uint64_t v32 = *(int *)(v23 + 28);
        uint64_t v46 = (char *)v22 + v32;
        uint64_t v48 = (char *)v21 + v32;
        uint64_t v33 = sub_253B07160();
        uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v44(v48, v46, v33);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v21, 0, 1, v23);
      }
      uint64_t v34 = *(int *)(v19 + 28);
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      uint64_t v37 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
    }
    else if (v11 == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v25 = sub_253B08E50();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_25:
  uint64_t v38 = *(int *)(a3 + 20);
  uint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  uint64_t v41 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 24))(v39, v40, v41);
  return a1;
}

char *initializeWithTake for TranscriptProtoShimParameter(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoShimParameterEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      uint64_t v10 = type metadata accessor for TranscriptProtoPersonQuery(0);
      uint64_t v11 = *(int *)(v10 + 24);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = type metadata accessor for TranscriptProtoHandle(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
      {
        uint64_t v15 = sub_253462A5C(&qword_269CE1D00);
        memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        *uint64_t v12 = *v13;
        *(_OWORD *)(v12 + 8) = *(_OWORD *)(v13 + 8);
        *(_OWORD *)(v12 + 24) = *(_OWORD *)(v13 + 24);
        uint64_t v16 = *(int *)(v14 + 28);
        uint64_t v17 = &v12[v16];
        uint64_t v18 = &v13[v16];
        uint64_t v19 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
      }
      uint64_t v20 = *(int *)(v10 + 28);
      uint64_t v21 = &a1[v20];
      uint64_t v22 = &a2[v20];
      uint64_t v23 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_12:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
        goto LABEL_13;
      }
      uint64_t v9 = sub_253B08E50();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_12;
  }
  uint64_t v7 = sub_253462A5C(&qword_269CDCC38);
  memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_13:
  uint64_t v24 = *(int *)(a3 + 20);
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoShimParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoShimParameterEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        uint64_t v14 = type metadata accessor for TranscriptProtoPersonQuery(0);
        uint64_t v15 = *(int *)(v14 + 24);
        uint64_t v16 = (unsigned char *)(a1 + v15);
        uint64_t v17 = (unsigned char *)(a2 + v15);
        uint64_t v18 = type metadata accessor for TranscriptProtoHandle(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18))
        {
          uint64_t v19 = sub_253462A5C(&qword_269CE1D00);
          memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          unsigned char *v16 = *v17;
          *(_OWORD *)(v16 + 8) = *(_OWORD *)(v17 + 8);
          *(_OWORD *)(v16 + 24) = *(_OWORD *)(v17 + 24);
          uint64_t v26 = *(int *)(v18 + 28);
          uint64_t v27 = &v16[v26];
          uint64_t v28 = &v17[v26];
          uint64_t v29 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v18);
        }
        uint64_t v30 = *(int *)(v14 + 28);
        uint64_t v31 = a1 + v30;
        uint64_t v32 = a2 + v30;
        uint64_t v33 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_23:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v6);
          goto LABEL_24;
        }
        uint64_t v10 = sub_253B08E50();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2) {
        goto LABEL_24;
      }
      sub_2536FA73C();
      int v12 = swift_getEnumCaseMultiPayload();
      if (v12 == 2)
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        uint64_t v20 = type metadata accessor for TranscriptProtoPersonQuery(0);
        uint64_t v21 = *(int *)(v20 + 24);
        uint64_t v22 = (unsigned char *)(a1 + v21);
        uint64_t v23 = (unsigned char *)(a2 + v21);
        uint64_t v24 = type metadata accessor for TranscriptProtoHandle(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, v24))
        {
          uint64_t v25 = sub_253462A5C(&qword_269CE1D00);
          memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          *uint64_t v22 = *v23;
          *(_OWORD *)(v22 + 8) = *(_OWORD *)(v23 + 8);
          *(_OWORD *)(v22 + 24) = *(_OWORD *)(v23 + 24);
          uint64_t v39 = *(int *)(v24 + 28);
          uint64_t v40 = &v22[v39];
          uint64_t v41 = &v23[v39];
          uint64_t v42 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v22, 0, 1, v24);
        }
        uint64_t v43 = *(int *)(v20 + 28);
        uint64_t v44 = a1 + v43;
        uint64_t v45 = a2 + v43;
        uint64_t v46 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
      }
      else
      {
        if (v12)
        {
          size_t v11 = *(void *)(*(void *)(v6 - 8) + 64);
          goto LABEL_9;
        }
        uint64_t v13 = sub_253B08E50();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
    }
    sub_2536FA73C();
  }
  size_t v11 = *(void *)(*(void *)(sub_253462A5C(&qword_269CDCC38) - 8) + 64);
LABEL_9:
  memcpy((void *)a1, (const void *)a2, v11);
LABEL_24:
  uint64_t v34 = *(int *)(a3 + 20);
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 40))(v35, v36, v37);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoShimParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538480E8);
}

uint64_t sub_2538480E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CDCC38);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoShimParameter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253848108);
}

uint64_t sub_253848108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CDCC38);
}

void sub_253848114(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoShimParameterEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v9 = a2[2];
      a1[1] = a2[1];
      a1[2] = v9;
      uint64_t v10 = type metadata accessor for TranscriptProtoPersonQuery(0);
      uint64_t v11 = *(int *)(v10 + 24);
      int v12 = (uint64_t *)((char *)a1 + v11);
      uint64_t v13 = (uint64_t *)((char *)a2 + v11);
      uint64_t v14 = type metadata accessor for TranscriptProtoHandle(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
      {
        uint64_t v15 = sub_253462A5C(&qword_269CE1D00);
        memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        *(unsigned char *)int v12 = *(unsigned char *)v13;
        uint64_t v17 = v13[2];
        v12[1] = v13[1];
        v12[2] = v17;
        uint64_t v18 = v13[4];
        v12[3] = v13[3];
        v12[4] = v18;
        uint64_t v19 = *(int *)(v14 + 28);
        uint64_t v27 = (char *)v13 + v19;
        uint64_t v28 = (char *)v12 + v19;
        uint64_t v20 = sub_253B07160();
        uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v26(v28, v27, v20);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
      }
      uint64_t v21 = *(int *)(v10 + 28);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v16 = sub_253B08E50();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TranscriptProtoShimParameterEnum(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = type metadata accessor for TranscriptProtoPersonQuery(0);
    uint64_t v5 = a1 + *(int *)(v4 + 24);
    uint64_t v6 = type metadata accessor for TranscriptProtoHandle(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v5, 1, v6))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = v5 + *(int *)(v6 + 28);
      uint64_t v8 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    }
    a1 += *(int *)(v4 + 28);
    uint64_t v3 = sub_253B07160();
LABEL_8:
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v9(a1, v3);
  }
  if (result != 1)
  {
    if (result) {
      return result;
    }
    uint64_t v3 = sub_253B08E50();
    goto LABEL_8;
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TranscriptProtoShimParameterEnum(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v6 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v6;
    uint64_t v7 = type metadata accessor for TranscriptProtoPersonQuery(0);
    uint64_t v8 = *(int *)(v7 + 24);
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (void *)(a2 + v8);
    uint64_t v11 = type metadata accessor for TranscriptProtoHandle(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CE1D00);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
      uint64_t v14 = v10[2];
      v9[1] = v10[1];
      v9[2] = v14;
      uint64_t v15 = v10[4];
      v9[3] = v10[3];
      v9[4] = v15;
      uint64_t v16 = *(int *)(v11 + 28);
      uint64_t v24 = (char *)v10 + v16;
      uint64_t v25 = (char *)v9 + v16;
      uint64_t v17 = sub_253B07160();
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23(v25, v24, v17);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v18 = *(int *)(v7 + 28);
    uint64_t v19 = a1 + v18;
    uint64_t v20 = a2 + v18;
    uint64_t v21 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v13 = sub_253B08E50();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoShimParameterEnum(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      uint64_t v5 = type metadata accessor for TranscriptProtoPersonQuery(0);
      uint64_t v6 = *(int *)(v5 + 24);
      uint64_t v7 = (void *)(a1 + v6);
      uint64_t v8 = (void *)(a2 + v6);
      uint64_t v9 = type metadata accessor for TranscriptProtoHandle(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
      {
        uint64_t v10 = sub_253462A5C(&qword_269CE1D00);
        memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        v7[3] = v8[3];
        v7[4] = v8[4];
        uint64_t v12 = *(int *)(v9 + 28);
        uint64_t v20 = (char *)v8 + v12;
        uint64_t v21 = (char *)v7 + v12;
        uint64_t v13 = sub_253B07160();
        uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v19(v21, v20, v13);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      }
      uint64_t v14 = *(int *)(v5 + 28);
      uint64_t v15 = a1 + v14;
      uint64_t v16 = a2 + v14;
      uint64_t v17 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v11 = sub_253B08E50();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for TranscriptProtoShimParameterEnum(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    uint64_t v8 = type metadata accessor for TranscriptProtoPersonQuery(0);
    uint64_t v9 = *(int *)(v8 + 24);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = type metadata accessor for TranscriptProtoHandle(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
    {
      uint64_t v13 = sub_253462A5C(&qword_269CE1D00);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      char *v10 = *v11;
      *(_OWORD *)(v10 + 8) = *(_OWORD *)(v11 + 8);
      *(_OWORD *)(v10 + 24) = *(_OWORD *)(v11 + 24);
      uint64_t v14 = *(int *)(v12 + 28);
      uint64_t v15 = &v10[v14];
      uint64_t v16 = &v11[v14];
      uint64_t v17 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
    }
    uint64_t v18 = *(int *)(v8 + 28);
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    goto LABEL_9;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = sub_253B08E50();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *assignWithTake for TranscriptProtoShimParameterEnum(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      uint64_t v8 = type metadata accessor for TranscriptProtoPersonQuery(0);
      uint64_t v9 = *(int *)(v8 + 24);
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      uint64_t v12 = type metadata accessor for TranscriptProtoHandle(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
      {
        uint64_t v13 = sub_253462A5C(&qword_269CE1D00);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        char *v10 = *v11;
        *(_OWORD *)(v10 + 8) = *(_OWORD *)(v11 + 8);
        *(_OWORD *)(v10 + 24) = *(_OWORD *)(v11 + 24);
        uint64_t v14 = *(int *)(v12 + 28);
        uint64_t v15 = &v10[v14];
        uint64_t v16 = &v11[v14];
        uint64_t v17 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
      }
      uint64_t v18 = *(int *)(v8 + 28);
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      uint64_t v21 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = sub_253B08E50();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_253848E24()
{
  uint64_t result = sub_253B08E50();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TranscriptProtoPersonQuery(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoPersonQuery(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for TranscriptProtoHandle(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CE1D00);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
      uint64_t v14 = v10[2];
      v9[1] = v10[1];
      v9[2] = v14;
      uint64_t v15 = v10[4];
      v9[3] = v10[3];
      v9[4] = v15;
      uint64_t v16 = *(int *)(v11 + 28);
      uint64_t v24 = (char *)v10 + v16;
      uint64_t v25 = (char *)v9 + v16;
      uint64_t v17 = sub_253B07160();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18(v25, v24, v17);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v19 = *(int *)(a3 + 28);
    uint64_t v20 = (char *)v4 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoPersonQuery(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for TranscriptProtoHandle(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 28);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  uint64_t v9 = sub_253B07160();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  return v10(v8, v9);
}

uint64_t initializeWithCopy for TranscriptProtoPersonQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoHandle(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_269CE1D00);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
    uint64_t v12 = v9[2];
    v8[1] = v9[1];
    v8[2] = v12;
    uint64_t v13 = v9[4];
    v8[3] = v9[3];
    v8[4] = v13;
    uint64_t v14 = *(int *)(v10 + 28);
    uint64_t v22 = (char *)v9 + v14;
    uint64_t v23 = (char *)v8 + v14;
    uint64_t v15 = sub_253B07160();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v23, v22, v15);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v17 = *(int *)(a3 + 28);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoPersonQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoHandle(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v7[3] = v8[3];
      v7[4] = v8[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v21 = *(int *)(v9 + 28);
      uint64_t v22 = (char *)v7 + v21;
      uint64_t v23 = (char *)v8 + v21;
      uint64_t v24 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v15 = sub_253462A5C(&qword_269CE1D00);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v7[3] = v8[3];
  v7[4] = v8[4];
  uint64_t v12 = *(int *)(v9 + 28);
  uint64_t v25 = (char *)v8 + v12;
  uint64_t v26 = (char *)v7 + v12;
  uint64_t v13 = sub_253B07160();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v26, v25, v13);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 28);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoPersonQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (unsigned char *)(a1 + v6);
  uint64_t v8 = (unsigned char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoHandle(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE1D00);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *uint64_t v7 = *v8;
    *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
    *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
    uint64_t v11 = *(int *)(v9 + 28);
    uint64_t v12 = &v7[v11];
    uint64_t v13 = &v8[v11];
    uint64_t v14 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v15 = *(int *)(a3 + 28);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoPersonQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for TranscriptProtoHandle(0);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v10);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v9, 1, v10);
  if (!v11)
  {
    if (!v12)
    {
      *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
      uint64_t v23 = *(void *)(v9 + 16);
      *(void *)(v8 + 8) = *(void *)(v9 + 8);
      *(void *)(v8 + 16) = v23;
      swift_bridgeObjectRelease();
      uint64_t v24 = *(void *)(v9 + 32);
      *(void *)(v8 + 24) = *(void *)(v9 + 24);
      *(void *)(v8 + 32) = v24;
      swift_bridgeObjectRelease();
      uint64_t v25 = *(int *)(v10 + 28);
      uint64_t v26 = v8 + v25;
      uint64_t v27 = v9 + v25;
      uint64_t v28 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v17 = sub_253462A5C(&qword_269CE1D00);
    memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
  uint64_t v13 = *(int *)(v10 + 28);
  uint64_t v14 = v8 + v13;
  uint64_t v15 = v9 + v13;
  uint64_t v16 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v8, 0, 1, v10);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 28);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPersonQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25384998C);
}

uint64_t sub_25384998C()
{
  sub_2535E240C();
  if (v2) {
    return sub_2535E2258(*(void *)(v1 + 16));
  }
  sub_2535E2460();
  sub_253462A5C(&qword_269CE1D00);
  sub_2535782A8();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    sub_2535E2560();
  }
  else
  {
    sub_253B07160();
    sub_2535E256C();
  }
  uint64_t v6 = sub_2535E22C8(v5);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, v7, v8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPersonQuery(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253849A30);
}

void sub_253849A30()
{
  sub_2535E2308();
  if (v3)
  {
    *(void *)(v1 + 16) = v0;
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_269CE1D00);
    sub_2535782A8();
    if (*(_DWORD *)(v4 + 84) == v2)
    {
      sub_2535E26D8();
    }
    else
    {
      sub_253B07160();
      sub_2535E26E4();
    }
    uint64_t v6 = sub_2535E2234(v5);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v6, v7, v8, v9);
  }
}

void sub_253849AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoHandle(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *char v3 = *a2;
    char v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = a2[2];
    a1[1] = a2[1];
    a1[2] = v5;
    uint64_t v6 = a2[4];
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    a1[3] = a2[3];
    a1[4] = v6;
    uint64_t v10 = sub_253B07160();
    int v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for TranscriptProtoHandle(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_253B07160();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for TranscriptProtoHandle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_253B07160();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoHandle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoHandle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoHandle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoHandle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253849F28);
}

uint64_t sub_253849F28()
{
  sub_2535E240C();
  if (v2) {
    return sub_2535E2258(*(void *)(v0 + 16));
  }
  sub_2535E22D4();
  uint64_t v4 = sub_2535E22C8(*(int *)(v1 + 28));
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoHandle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253849FA0);
}

void sub_253849FA0()
{
  sub_2535E2308();
  if (v3)
  {
    *(void *)(v1 + 16) = v0;
  }
  else
  {
    sub_2535E235C();
    uint64_t v4 = sub_2535E2234(*(int *)(v2 + 28));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, v5, v6, v7);
  }
}

uint64_t sub_25384A004()
{
  return sub_253942B08();
}

void type metadata accessor for TranscriptProtoHandle.Kind()
{
}

uint64_t getEnumTagSinglePayload for TranscriptProtoUnresolvedParameterValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25384A054);
}

uint64_t sub_25384A054()
{
  return sub_253903F38();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoUnresolvedParameterValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25384A074);
}

void sub_25384A074()
{
}

void sub_25384A080(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoClientCustom(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_25348A9C8(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = a2[2];
    unint64_t v10 = a2[3];
    sub_25348A9C8(v9, v10);
    a1[2] = v9;
    a1[3] = v10;
    uint64_t v11 = a2[5];
    a1[4] = a2[4];
    a1[5] = v11;
    uint64_t v12 = *(int *)(a3 + 28);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_253B07160();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoClientCustom(uint64_t a1, uint64_t a2)
{
  sub_253487D84(*(void *)a1, *(void *)(a1 + 8));
  sub_253487D84(*(void *)(a1 + 16), *(void *)(a1 + 24));
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_253B07160();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t *initializeWithCopy for TranscriptProtoClientCustom(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_25348A9C8(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = a2[2];
  unint64_t v9 = a2[3];
  sub_25348A9C8(v8, v9);
  a1[2] = v8;
  a1[3] = v9;
  uint64_t v10 = a2[5];
  a1[4] = a2[4];
  a1[5] = v10;
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_253B07160();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  return a1;
}

uint64_t *assignWithCopy for TranscriptProtoClientCustom(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_25348A9C8(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_253487D84(v8, v9);
  uint64_t v10 = a2[2];
  unint64_t v11 = a2[3];
  sub_25348A9C8(v10, v11);
  uint64_t v12 = a1[2];
  unint64_t v13 = a1[3];
  a1[2] = v10;
  a1[3] = v11;
  sub_253487D84(v12, v13);
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t *assignWithTake for TranscriptProtoClientCustom(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_253487D84(v6, v7);
  uint64_t v8 = a1[2];
  unint64_t v9 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_253487D84(v8, v9);
  uint64_t v10 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_253B07160();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoClientCustom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25384A4BC);
}

uint64_t sub_25384A4BC()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*(void *)(v0 + 40));
  }
  sub_2535E22D4();
  uint64_t v4 = sub_2535E22C8(*(int *)(v1 + 28));
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoClientCustom(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25384A534);
}

void sub_25384A534()
{
  sub_2535E2244();
  if (v3)
  {
    *(void *)(v1 + 40) = (v0 - 1);
  }
  else
  {
    sub_2535E235C();
    uint64_t v4 = sub_2535E2234(*(int *)(v2 + 28));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, v5, v6, v7);
  }
}

uint64_t sub_25384A598()
{
  return sub_253942B08();
}

void _s30IntelligenceFlowPlannerSupport33TranscriptProtoToolDisambiguationVwCP_0()
{
  sub_2535B3C98();
  sub_2535782A8();
  int v3 = *(_DWORD *)(v2 + 80);
  *int v0 = *v1;
  if ((v3 & 0x20000) != 0)
  {
    sub_253945A70();
  }
  else
  {
    uint64_t v4 = v1[2];
    v0[1] = v1[1];
    v0[2] = v4;
    sub_253944E74();
    sub_25346CAF4();
    uint64_t v6 = *(void (**)(uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_253944804();
    v6(v7);
  }
  sub_25346CD04();
}

uint64_t _s30IntelligenceFlowPlannerSupport33TranscriptProtoToolDisambiguationVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_253944E5C();
  sub_25346CAF4();
  uint64_t v0 = sub_2539446BC();
  return v1(v0);
}

void _s30IntelligenceFlowPlannerSupport33TranscriptProtoToolDisambiguationVwcp_0()
{
  sub_2535B3C98();
  uint64_t v1 = v0[1];
  *uint64_t v2 = *v0;
  v2[1] = v1;
  v2[2] = v0[2];
  sub_253944E74();
  sub_25346CAF4();
  uint64_t v4 = *(void (**)(uint64_t))(v3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_253944804();
  v4(v5);
  sub_25346CD04();
}

uint64_t _s30IntelligenceFlowPlannerSupport33TranscriptProtoToolDisambiguationVwca_0(void *a1, void *a2)
{
  sub_2539456FC(a1, a2);
  swift_bridgeObjectRelease();
  *(void *)(v3 + 8) = *(void *)(v2 + 8);
  *(void *)(v3 + 16) = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2535E22F0();
  sub_25346CAF4();
  sub_2539444A8();
  v4();
  return v3;
}

uint64_t _s30IntelligenceFlowPlannerSupport33TranscriptProtoToolDisambiguationVwtk_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_253944360();
  sub_25346CAF4();
  sub_2534D8E14();
  v3();
  return a1;
}

uint64_t _s30IntelligenceFlowPlannerSupport33TranscriptProtoToolDisambiguationVwta_0(void *a1, void *a2)
{
  sub_2539456D4(a1, a2);
  uint64_t v4 = *(void *)(v2 + 16);
  *(void *)(v3 + 8) = *(void *)(v2 + 8);
  *(void *)(v3 + 16) = v4;
  swift_bridgeObjectRelease();
  sub_2535E22F0();
  sub_25346CAF4();
  sub_253944438();
  v5();
  return v3;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoDecompositionResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25384A894);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoDecompositionResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25384A8AC);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoActionParameterContext(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
    {
      uint64_t v13 = sub_253462A5C(&qword_26B249528);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
      uint64_t v15 = v11[2];
      v10[1] = v11[1];
      v10[2] = v15;
      uint64_t v16 = *(int *)(v12 + 24);
      uint64_t v17 = (char *)v10 + v16;
      uint64_t v36 = (char *)v11 + v16;
      uint64_t v18 = sub_253B07160();
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v17, v36, v18);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
    }
    uint64_t v20 = a3[7];
    uint64_t v21 = (uint64_t *)((char *)v4 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    uint64_t v23 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v22, 1, v23))
    {
      uint64_t v24 = sub_253462A5C(&qword_269CE0448);
      memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      uint64_t v25 = v22[1];
      void *v21 = *v22;
      v21[1] = v25;
      uint64_t v26 = v22[3];
      v21[2] = v22[2];
      v21[3] = v26;
      uint64_t v27 = *(int *)(v23 + 24);
      uint64_t v35 = (char *)v22 + v27;
      uint64_t v37 = (char *)v21 + v27;
      uint64_t v28 = sub_253B07160();
      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29(v37, v35, v28);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v21, 0, 1, v23);
    }
    uint64_t v30 = a3[8];
    uint64_t v31 = (char *)v4 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoActionParameterContext(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + a2[7];
  uint64_t v9 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v8 + *(int *)(v9 + 24);
    uint64_t v11 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  uint64_t v12 = a1 + a2[8];
  uint64_t v13 = sub_253B07160();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
  return v14(v12, v13);
}

void *initializeWithCopy for TranscriptProtoActionParameterContext(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  uint64_t v11 = type metadata accessor for TranscriptProtoStatementID(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_253462A5C(&qword_26B249528);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
    uint64_t v13 = v10[2];
    v9[1] = v10[1];
    v9[2] = v13;
    uint64_t v14 = *(int *)(v11 + 24);
    uint64_t v15 = (char *)v9 + v14;
    uint64_t v34 = (char *)v10 + v14;
    uint64_t v16 = sub_253B07160();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v15, v34, v16);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v21 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v21))
  {
    uint64_t v22 = sub_253462A5C(&qword_269CE0448);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    uint64_t v23 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v23;
    uint64_t v24 = v20[3];
    v19[2] = v20[2];
    v19[3] = v24;
    uint64_t v25 = *(int *)(v21 + 24);
    uint64_t v33 = (char *)v20 + v25;
    uint64_t v35 = (char *)v19 + v25;
    uint64_t v26 = sub_253B07160();
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27(v35, v33, v26);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v19, 0, 1, v21);
  }
  uint64_t v28 = a3[8];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  return a1;
}

void *assignWithCopy for TranscriptProtoActionParameterContext(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for TranscriptProtoStatementID(0);
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      uint64_t v12 = *(int *)(v9 + 24);
      uint64_t v13 = (char *)v7 + v12;
      uint64_t v42 = (char *)v8 + v12;
      uint64_t v14 = sub_253B07160();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v13, v42, v14);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v16 = sub_253462A5C(&qword_26B249528);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = *(int *)(v9 + 24);
  uint64_t v34 = (char *)v7 + v33;
  uint64_t v35 = (char *)v8 + v33;
  uint64_t v36 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 24))(v34, v35, v36);
LABEL_7:
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  int v21 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v20);
  int v22 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20);
  if (!v21)
  {
    if (!v22)
    {
      void *v18 = *v19;
      v18[1] = v19[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v18[2] = v19[2];
      v18[3] = v19[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v37 = *(int *)(v20 + 24);
      uint64_t v38 = (char *)v18 + v37;
      uint64_t v39 = (char *)v19 + v37;
      uint64_t v40 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 24))(v38, v39, v40);
      goto LABEL_13;
    }
    sub_2536FA73C();
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v27 = sub_253462A5C(&qword_269CE0448);
    memcpy(v18, v19, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  void *v18 = *v19;
  v18[1] = v19[1];
  v18[2] = v19[2];
  v18[3] = v19[3];
  uint64_t v23 = *(int *)(v20 + 24);
  uint64_t v41 = (char *)v19 + v23;
  uint64_t v43 = (char *)v18 + v23;
  uint64_t v24 = sub_253B07160();
  uint64_t v25 = a3;
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26(v43, v41, v24);
  a3 = v25;
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
LABEL_13:
  uint64_t v28 = a3[8];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 24))(v29, v30, v31);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoActionParameterContext(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (_DWORD *)((char *)a1 + v7);
  uint64_t v9 = (_DWORD *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_26B249528);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    _DWORD *v8 = *v9;
    *(_OWORD *)(v8 + 2) = *(_OWORD *)(v9 + 2);
    uint64_t v12 = *(int *)(v10 + 24);
    uint64_t v13 = (char *)v8 + v12;
    uint64_t v14 = (char *)v9 + v12;
    uint64_t v15 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = (_OWORD *)((char *)a1 + v16);
  uint64_t v18 = (_OWORD *)((char *)a2 + v16);
  uint64_t v19 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v18, 1, v19))
  {
    uint64_t v20 = sub_253462A5C(&qword_269CE0448);
    memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    long long v21 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v21;
    uint64_t v22 = *(int *)(v19 + 24);
    uint64_t v23 = (char *)v17 + v22;
    uint64_t v24 = (char *)v18 + v22;
    uint64_t v25 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v17, 0, 1, v19);
  }
  uint64_t v26 = a3[8];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  return a1;
}

void *assignWithTake for TranscriptProtoActionParameterContext(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  uint64_t v11 = type metadata accessor for TranscriptProtoStatementID(0);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v11);
  int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11);
  if (v12)
  {
    if (!v13)
    {
      *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
      *(_OWORD *)(v9 + 1) = *(_OWORD *)(v10 + 1);
      uint64_t v14 = *(int *)(v11 + 24);
      uint64_t v15 = (char *)v9 + v14;
      uint64_t v16 = (char *)v10 + v14;
      uint64_t v17 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_2536FA73C();
LABEL_6:
    uint64_t v18 = sub_253462A5C(&qword_26B249528);
    memcpy(v9, v10, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  uint64_t v36 = v10[2];
  v9[1] = v10[1];
  v9[2] = v36;
  swift_bridgeObjectRelease();
  uint64_t v37 = *(int *)(v11 + 24);
  uint64_t v38 = (char *)v9 + v37;
  uint64_t v39 = (char *)v10 + v37;
  uint64_t v40 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 40))(v38, v39, v40);
LABEL_7:
  uint64_t v19 = a3[7];
  uint64_t v20 = (void *)((char *)a1 + v19);
  long long v21 = (void *)((char *)a2 + v19);
  uint64_t v22 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  int v23 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v20, 1, v22);
  int v24 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v21, 1, v22);
  if (!v23)
  {
    if (!v24)
    {
      uint64_t v41 = v21[1];
      void *v20 = *v21;
      v20[1] = v41;
      swift_bridgeObjectRelease();
      uint64_t v42 = v21[3];
      v20[2] = v21[2];
      v20[3] = v42;
      swift_bridgeObjectRelease();
      uint64_t v43 = *(int *)(v22 + 24);
      uint64_t v44 = (char *)v20 + v43;
      uint64_t v45 = (char *)v21 + v43;
      uint64_t v46 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
      goto LABEL_13;
    }
    sub_2536FA73C();
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    uint64_t v30 = sub_253462A5C(&qword_269CE0448);
    memcpy(v20, v21, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  long long v25 = *((_OWORD *)v21 + 1);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v25;
  uint64_t v26 = *(int *)(v22 + 24);
  uint64_t v27 = (char *)v20 + v26;
  uint64_t v28 = (char *)v21 + v26;
  uint64_t v29 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v20, 0, 1, v22);
LABEL_13:
  uint64_t v31 = a3[8];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionParameterContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25384B91C);
}

uint64_t sub_25384B91C()
{
  sub_2535E2298();
  if (v2) {
    return sub_2534F89A0(*(void *)(v1 + 8));
  }
  sub_2535E2460();
  sub_253462A5C(&qword_26B249528);
  sub_2535782A8();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    sub_2535E2560();
  }
  else
  {
    sub_253462A5C(&qword_269CE0448);
    sub_2535782A8();
    if (*(_DWORD *)(v6 + 84) == v0)
    {
      sub_2535E256C();
    }
    else
    {
      sub_253B07160();
      sub_2535E27E4();
    }
  }
  uint64_t v7 = sub_2535E22C8(v5);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v7, v8, v9);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionParameterContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25384B9E8);
}

void sub_25384B9E8()
{
  sub_2535E2244();
  if (v1)
  {
    sub_2535E24BC();
  }
  else
  {
    sub_2535E2438();
    sub_253462A5C(&qword_26B249528);
    sub_2535782A8();
    if (*(_DWORD *)(v2 + 84) == v0)
    {
      sub_2535E26D8();
    }
    else
    {
      sub_253462A5C(&qword_269CE0448);
      sub_2535782A8();
      if (*(_DWORD *)(v4 + 84) == v0)
      {
        sub_2535E26E4();
      }
      else
      {
        sub_253B07160();
        sub_2535E2830();
      }
    }
    uint64_t v5 = sub_2535E2234(v3);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v5, v6, v7, v8);
  }
}

void sub_25384BA9C()
{
  sub_253760A08(319, &qword_26B249530, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
  if (v0 <= 0x3F)
  {
    sub_253760A08(319, &qword_26B249A78, (void (*)(uint64_t))type metadata accessor for TranscriptProtoGlobalToolIdentifier);
    if (v1 <= 0x3F)
    {
      sub_253B07160();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoIntelligenceFlowError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_253B07160();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t _s30IntelligenceFlowPlannerSupport44TranscriptProtoRequestPrescribedPlanTextToolVwxx_0()
{
  sub_253944D98();
  sub_253944E5C();
  sub_25346CAF4();
  uint64_t v0 = sub_2539446BC();
  return v1(v0);
}

void *initializeWithCopy for TranscriptProtoIntelligenceFlowError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_253B07160();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for TranscriptProtoIntelligenceFlowError(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *assignWithTake for TranscriptProtoIntelligenceFlowError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoIntelligenceFlowError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25384BF18);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoIntelligenceFlowError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25384BF30);
}

uint64_t sub_25384BF34()
{
  return sub_2535DC13C();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoSessionError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE1D40);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v16 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v16))
          {
            uint64_t v17 = sub_253462A5C(&qword_269CE1D58);
            memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
          }
          else
          {
            swift_getEnumCaseMultiPayload();
            uint64_t v22 = a2[1];
            *a1 = *a2;
            a1[1] = v22;
            a1[2] = a2[2];
            uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
            uint64_t v53 = (char *)a2 + v23;
            uint64_t v56 = (char *)a1 + v23;
            uint64_t v24 = sub_253B07160();
            long long v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
            swift_bridgeObjectRetain();
            v25(v56, v53, v24);
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v16);
          }
          uint64_t v26 = *(int *)(type metadata accessor for TranscriptProtoSessionCoordinatorError(0) + 20);
          uint64_t v27 = (char *)a1 + v26;
          uint64_t v28 = (char *)a2 + v26;
          uint64_t v29 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
          break;
        case 2u:
          uint64_t v18 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v18))
          {
            uint64_t v19 = sub_253462A5C(&qword_269CE1D88);
            memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
          }
          else
          {
            uint64_t v30 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v30))
            {
              memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
            }
            else
            {
              uint64_t v32 = a2[1];
              *a1 = *a2;
              a1[1] = v32;
              a1[2] = a2[2];
              uint64_t v33 = *(int *)(v30 + 24);
              uint64_t v54 = (char *)a2 + v33;
              uint64_t v57 = (char *)a1 + v33;
              uint64_t v34 = sub_253B07160();
              uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
              swift_bridgeObjectRetain();
              v35(v57, v54, v34);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v30);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v18);
          }
          uint64_t v36 = *(int *)(type metadata accessor for TranscriptProtoPlannerError(0) + 20);
          uint64_t v37 = (char *)a1 + v36;
          uint64_t v38 = (char *)a2 + v36;
          uint64_t v39 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
          break;
        case 3u:
          uint64_t v20 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v20))
          {
            uint64_t v21 = sub_253462A5C(&qword_269CE1D70);
            memcpy(a1, a2, *(void *)(*(void *)(v21 - 8) + 64));
          }
          else
          {
            uint64_t v31 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v31))
            {
              memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
            }
            else
            {
              uint64_t v40 = a2[1];
              *a1 = *a2;
              a1[1] = v40;
              a1[2] = a2[2];
              uint64_t v41 = *(int *)(v31 + 24);
              uint64_t v55 = (char *)a2 + v41;
              uint64_t v58 = (char *)a1 + v41;
              uint64_t v42 = sub_253B07160();
              uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
              swift_bridgeObjectRetain();
              v43(v58, v55, v42);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v31);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v20);
          }
          uint64_t v44 = *(int *)(type metadata accessor for TranscriptProtoExecutorError(0) + 20);
          uint64_t v45 = (char *)a1 + v44;
          uint64_t v46 = (char *)a2 + v44;
          uint64_t v47 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
          break;
        default:
          uint64_t v10 = a2[1];
          *a1 = *a2;
          a1[1] = v10;
          a1[2] = a2[2];
          uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
          int v12 = (char *)a1 + v11;
          int v13 = (char *)a2 + v11;
          uint64_t v14 = sub_253B07160();
          uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
          swift_bridgeObjectRetain();
          v15(v12, v13, v14);
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v48 = *(int *)(a3 + 20);
    uint64_t v49 = (char *)a1 + v48;
    uint64_t v50 = (char *)a2 + v48;
    uint64_t v51 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoSessionError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        uint64_t v5 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
        goto LABEL_17;
      case 1u:
        uint64_t v6 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v6)
          && swift_getEnumCaseMultiPayload() <= 2)
        {
          swift_bridgeObjectRelease();
          uint64_t v7 = a1 + *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
          uint64_t v8 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
        }
        uint64_t v9 = type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
        goto LABEL_16;
      case 2u:
        uint64_t v10 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v10))
        {
          uint64_t v11 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v11))
          {
            swift_bridgeObjectRelease();
            uint64_t v12 = a1 + *(int *)(v11 + 24);
            uint64_t v13 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
          }
        }
        uint64_t v9 = type metadata accessor for TranscriptProtoPlannerError(0);
        goto LABEL_16;
      case 3u:
        uint64_t v14 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v14))
        {
          uint64_t v15 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v15))
          {
            swift_bridgeObjectRelease();
            uint64_t v16 = a1 + *(int *)(v15 + 24);
            uint64_t v17 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
          }
        }
        uint64_t v9 = type metadata accessor for TranscriptProtoExecutorError(0);
LABEL_16:
        uint64_t v5 = *(int *)(v9 + 20);
LABEL_17:
        uint64_t v18 = a1 + v5;
        uint64_t v19 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
        break;
      default:
        break;
    }
  }
  uint64_t v20 = a1 + *(int *)(a2 + 20);
  uint64_t v21 = sub_253B07160();
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);
  return v22(v20, v21);
}

void *initializeWithCopy for TranscriptProtoSessionError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE1D40);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v14 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v14))
        {
          uint64_t v15 = sub_253462A5C(&qword_269CE1D58);
          memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          uint64_t v20 = a2[1];
          *a1 = *a2;
          a1[1] = v20;
          a1[2] = a2[2];
          uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
          uint64_t v51 = (char *)a2 + v21;
          uint64_t v54 = (char *)a1 + v21;
          uint64_t v22 = sub_253B07160();
          uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
          swift_bridgeObjectRetain();
          v23(v54, v51, v22);
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v14);
        }
        uint64_t v24 = *(int *)(type metadata accessor for TranscriptProtoSessionCoordinatorError(0) + 20);
        long long v25 = (char *)a1 + v24;
        uint64_t v26 = (char *)a2 + v24;
        uint64_t v27 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
        break;
      case 2u:
        uint64_t v16 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v16))
        {
          uint64_t v17 = sub_253462A5C(&qword_269CE1D88);
          memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          uint64_t v28 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v28))
          {
            memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
          }
          else
          {
            uint64_t v30 = a2[1];
            *a1 = *a2;
            a1[1] = v30;
            a1[2] = a2[2];
            uint64_t v31 = *(int *)(v28 + 24);
            uint64_t v52 = (char *)a2 + v31;
            uint64_t v55 = (char *)a1 + v31;
            uint64_t v32 = sub_253B07160();
            uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
            swift_bridgeObjectRetain();
            v33(v55, v52, v32);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v28);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v16);
        }
        uint64_t v34 = *(int *)(type metadata accessor for TranscriptProtoPlannerError(0) + 20);
        uint64_t v35 = (char *)a1 + v34;
        uint64_t v36 = (char *)a2 + v34;
        uint64_t v37 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
        break;
      case 3u:
        uint64_t v18 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v18))
        {
          uint64_t v19 = sub_253462A5C(&qword_269CE1D70);
          memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          uint64_t v29 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v29))
          {
            memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
          }
          else
          {
            uint64_t v38 = a2[1];
            *a1 = *a2;
            a1[1] = v38;
            a1[2] = a2[2];
            uint64_t v39 = *(int *)(v29 + 24);
            uint64_t v53 = (char *)a2 + v39;
            uint64_t v56 = (char *)a1 + v39;
            uint64_t v40 = sub_253B07160();
            uint64_t v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
            swift_bridgeObjectRetain();
            v41(v56, v53, v40);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v29);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v18);
        }
        uint64_t v42 = *(int *)(type metadata accessor for TranscriptProtoExecutorError(0) + 20);
        uint64_t v43 = (char *)a1 + v42;
        uint64_t v44 = (char *)a2 + v42;
        uint64_t v45 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
        break;
      default:
        uint64_t v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        a1[2] = a2[2];
        uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_253B07160();
        uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v13(v10, v11, v12);
        break;
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v46 = *(int *)(a3 + 20);
  uint64_t v47 = (char *)a1 + v46;
  uint64_t v48 = (char *)a2 + v46;
  uint64_t v49 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
  return a1;
}

void *assignWithCopy for TranscriptProtoSessionError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v20 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v20))
          {
            uint64_t v21 = sub_253462A5C(&qword_269CE1D58);
            memcpy(a1, a2, *(void *)(*(void *)(v21 - 8) + 64));
          }
          else
          {
            swift_getEnumCaseMultiPayload();
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            uint64_t v32 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
            uint64_t v83 = (char *)a2 + v32;
            uint64_t v89 = (char *)a1 + v32;
            uint64_t v33 = sub_253B07160();
            uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
            swift_bridgeObjectRetain();
            v34(v89, v83, v33);
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v20);
          }
          uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoSessionCoordinatorError(0) + 20);
          uint64_t v36 = (char *)a1 + v35;
          uint64_t v37 = (char *)a2 + v35;
          uint64_t v38 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
          break;
        case 2u:
          uint64_t v22 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v22))
          {
            uint64_t v23 = sub_253462A5C(&qword_269CE1D88);
            memcpy(a1, a2, *(void *)(*(void *)(v23 - 8) + 64));
          }
          else
          {
            uint64_t v39 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v39))
            {
              memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
            }
            else
            {
              *a1 = *a2;
              a1[1] = a2[1];
              a1[2] = a2[2];
              uint64_t v50 = *(int *)(v39 + 24);
              uint64_t v85 = (char *)a2 + v50;
              uint64_t v91 = (char *)a1 + v50;
              uint64_t v51 = sub_253B07160();
              uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16);
              swift_bridgeObjectRetain();
              v52(v91, v85, v51);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v39);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v22);
          }
          uint64_t v53 = *(int *)(type metadata accessor for TranscriptProtoPlannerError(0) + 20);
          uint64_t v54 = (char *)a1 + v53;
          uint64_t v55 = (char *)a2 + v53;
          uint64_t v56 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
          break;
        case 3u:
          uint64_t v24 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v24))
          {
            uint64_t v25 = sub_253462A5C(&qword_269CE1D70);
            memcpy(a1, a2, *(void *)(*(void *)(v25 - 8) + 64));
          }
          else
          {
            uint64_t v40 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v40))
            {
              memcpy(a1, a2, *(void *)(*(void *)(v24 - 8) + 64));
            }
            else
            {
              *a1 = *a2;
              a1[1] = a2[1];
              a1[2] = a2[2];
              uint64_t v57 = *(int *)(v40 + 24);
              uint64_t v86 = (char *)a2 + v57;
              uint64_t v92 = (char *)a1 + v57;
              uint64_t v58 = sub_253B07160();
              uint64_t v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16);
              swift_bridgeObjectRetain();
              v59(v92, v86, v58);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v40);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v24);
          }
          uint64_t v60 = *(int *)(type metadata accessor for TranscriptProtoExecutorError(0) + 20);
          uint64_t v61 = (char *)a1 + v60;
          uint64_t v62 = (char *)a2 + v60;
          uint64_t v63 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
          break;
        default:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
          uint64_t v10 = (char *)a1 + v9;
          uint64_t v11 = (char *)a2 + v9;
          uint64_t v12 = sub_253B07160();
          uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
          swift_bridgeObjectRetain();
          v13(v10, v11, v12);
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_49;
    }
LABEL_7:
    uint64_t v14 = sub_253462A5C(&qword_269CE1D40);
    memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_49;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v26 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v26))
        {
          uint64_t v27 = sub_253462A5C(&qword_269CE1D58);
          memcpy(a1, a2, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
          uint64_t v84 = (char *)a2 + v41;
          uint64_t v90 = (char *)a1 + v41;
          uint64_t v42 = sub_253B07160();
          uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
          swift_bridgeObjectRetain();
          v43(v90, v84, v42);
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v26);
        }
        uint64_t v44 = *(int *)(type metadata accessor for TranscriptProtoSessionCoordinatorError(0) + 20);
        uint64_t v45 = (char *)a1 + v44;
        uint64_t v46 = (char *)a2 + v44;
        uint64_t v47 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
        break;
      case 2u:
        uint64_t v28 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v28))
        {
          uint64_t v29 = sub_253462A5C(&qword_269CE1D88);
          memcpy(a1, a2, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          uint64_t v48 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v48))
          {
            memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            uint64_t v64 = *(int *)(v48 + 24);
            uint64_t v87 = (char *)a2 + v64;
            uint64_t v93 = (char *)a1 + v64;
            uint64_t v65 = sub_253B07160();
            uint64_t v66 = *(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16);
            swift_bridgeObjectRetain();
            v66(v93, v87, v65);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v48);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v28);
        }
        uint64_t v67 = *(int *)(type metadata accessor for TranscriptProtoPlannerError(0) + 20);
        uint64_t v68 = (char *)a1 + v67;
        uint64_t v69 = (char *)a2 + v67;
        uint64_t v70 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
        break;
      case 3u:
        uint64_t v30 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v30))
        {
          uint64_t v31 = sub_253462A5C(&qword_269CE1D70);
          memcpy(a1, a2, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          uint64_t v49 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v49))
          {
            memcpy(a1, a2, *(void *)(*(void *)(v30 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            uint64_t v71 = *(int *)(v49 + 24);
            uint64_t v88 = (char *)a2 + v71;
            uint64_t v94 = (char *)a1 + v71;
            uint64_t v72 = sub_253B07160();
            uint64_t v73 = *(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16);
            swift_bridgeObjectRetain();
            v73(v94, v88, v72);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v49);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v30);
        }
        uint64_t v74 = *(int *)(type metadata accessor for TranscriptProtoExecutorError(0) + 20);
        uint64_t v75 = (char *)a1 + v74;
        uint64_t v76 = (char *)a2 + v74;
        uint64_t v77 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v75, v76, v77);
        break;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_253B07160();
        uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_49:
  uint64_t v78 = *(int *)(a3 + 20);
  uint64_t v79 = (char *)a1 + v78;
  uint64_t v80 = (char *)a2 + v78;
  uint64_t v81 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 24))(v79, v80, v81);
  return a1;
}

void *initializeWithTake for TranscriptProtoSessionError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE1D40);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v9 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v9))
        {
          uint64_t v10 = sub_253462A5C(&qword_269CE1D58);
          memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          *(_OWORD *)a1 = *(_OWORD *)a2;
          a1[2] = a2[2];
          uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
          uint64_t v16 = (char *)a1 + v15;
          uint64_t v17 = (char *)a2 + v15;
          uint64_t v18 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v9);
        }
        uint64_t v19 = type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
        goto LABEL_23;
      case 2u:
        uint64_t v11 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v11))
        {
          uint64_t v12 = sub_253462A5C(&qword_269CE1D88);
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          uint64_t v20 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v20))
          {
            memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
          }
          else
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
            a1[2] = a2[2];
            uint64_t v22 = *(int *)(v20 + 24);
            uint64_t v23 = (char *)a1 + v22;
            uint64_t v24 = (char *)a2 + v22;
            uint64_t v25 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v20);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v11);
        }
        uint64_t v19 = type metadata accessor for TranscriptProtoPlannerError(0);
        goto LABEL_23;
      case 3u:
        uint64_t v13 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v13))
        {
          uint64_t v14 = sub_253462A5C(&qword_269CE1D70);
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          uint64_t v21 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v21))
          {
            memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
          }
          else
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
            a1[2] = a2[2];
            uint64_t v26 = *(int *)(v21 + 24);
            uint64_t v27 = (char *)a1 + v26;
            uint64_t v28 = (char *)a2 + v26;
            uint64_t v29 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v21);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v13);
        }
        uint64_t v19 = type metadata accessor for TranscriptProtoExecutorError(0);
LABEL_23:
        uint64_t v8 = *(int *)(v19 + 20);
        break;
      default:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
        break;
    }
    uint64_t v30 = (char *)a1 + v8;
    uint64_t v31 = (char *)a2 + v8;
    uint64_t v32 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v33 = *(int *)(a3 + 20);
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
  return a1;
}

void *assignWithTake for TranscriptProtoSessionError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v15 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v15))
          {
            uint64_t v16 = sub_253462A5C(&qword_269CE1D58);
            memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
          }
          else
          {
            swift_getEnumCaseMultiPayload();
            *(_OWORD *)a1 = *(_OWORD *)a2;
            a1[2] = a2[2];
            uint64_t v27 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
            uint64_t v28 = (char *)a1 + v27;
            uint64_t v29 = (char *)a2 + v27;
            uint64_t v30 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v15);
          }
          uint64_t v31 = type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
          goto LABEL_41;
        case 2u:
          uint64_t v17 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v17))
          {
            uint64_t v18 = sub_253462A5C(&qword_269CE1D88);
            memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
          }
          else
          {
            uint64_t v32 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v32))
            {
              memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
            }
            else
            {
              *(_OWORD *)a1 = *(_OWORD *)a2;
              a1[2] = a2[2];
              uint64_t v44 = *(int *)(v32 + 24);
              uint64_t v45 = (char *)a1 + v44;
              uint64_t v46 = (char *)a2 + v44;
              uint64_t v47 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v32);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v17);
          }
          uint64_t v31 = type metadata accessor for TranscriptProtoPlannerError(0);
          goto LABEL_41;
        case 3u:
          uint64_t v19 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v19))
          {
            uint64_t v20 = sub_253462A5C(&qword_269CE1D70);
            memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
          }
          else
          {
            uint64_t v33 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v33))
            {
              memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
            }
            else
            {
              *(_OWORD *)a1 = *(_OWORD *)a2;
              a1[2] = a2[2];
              uint64_t v48 = *(int *)(v33 + 24);
              uint64_t v49 = (char *)a1 + v48;
              uint64_t v50 = (char *)a2 + v48;
              uint64_t v51 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v33);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v19);
          }
          uint64_t v31 = type metadata accessor for TranscriptProtoExecutorError(0);
LABEL_41:
          uint64_t v9 = *(int *)(v31 + 20);
          break;
        default:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          a1[2] = a2[2];
          uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
          break;
      }
      uint64_t v52 = (char *)a1 + v9;
      uint64_t v53 = (char *)a2 + v9;
      uint64_t v54 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_50;
    }
LABEL_7:
    uint64_t v10 = sub_253462A5C(&qword_269CE1D40);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_50;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v21 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v21))
        {
          uint64_t v22 = sub_253462A5C(&qword_269CE1D58);
          memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          *(_OWORD *)a1 = *(_OWORD *)a2;
          a1[2] = a2[2];
          uint64_t v34 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
          uint64_t v35 = (char *)a1 + v34;
          uint64_t v36 = (char *)a2 + v34;
          uint64_t v37 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v21);
        }
        uint64_t v38 = *(int *)(type metadata accessor for TranscriptProtoSessionCoordinatorError(0) + 20);
        uint64_t v39 = (char *)a1 + v38;
        uint64_t v40 = (char *)a2 + v38;
        uint64_t v41 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
        break;
      case 2u:
        uint64_t v23 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v23))
        {
          uint64_t v24 = sub_253462A5C(&qword_269CE1D88);
          memcpy(a1, a2, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          uint64_t v42 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v42))
          {
            memcpy(a1, a2, *(void *)(*(void *)(v23 - 8) + 64));
          }
          else
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
            a1[2] = a2[2];
            uint64_t v55 = *(int *)(v42 + 24);
            uint64_t v56 = (char *)a1 + v55;
            uint64_t v57 = (char *)a2 + v55;
            uint64_t v58 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v42);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v23);
        }
        uint64_t v59 = *(int *)(type metadata accessor for TranscriptProtoPlannerError(0) + 20);
        uint64_t v60 = (char *)a1 + v59;
        uint64_t v61 = (char *)a2 + v59;
        uint64_t v62 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
        break;
      case 3u:
        uint64_t v25 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v25))
        {
          uint64_t v26 = sub_253462A5C(&qword_269CE1D70);
          memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          uint64_t v43 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v43))
          {
            memcpy(a1, a2, *(void *)(*(void *)(v25 - 8) + 64));
          }
          else
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
            a1[2] = a2[2];
            uint64_t v63 = *(int *)(v43 + 24);
            uint64_t v64 = (char *)a1 + v63;
            uint64_t v65 = (char *)a2 + v63;
            uint64_t v66 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v43);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v25);
        }
        uint64_t v67 = *(int *)(type metadata accessor for TranscriptProtoExecutorError(0) + 20);
        uint64_t v68 = (char *)a1 + v67;
        uint64_t v69 = (char *)a2 + v67;
        uint64_t v70 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
        break;
      default:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_50:
  uint64_t v71 = *(int *)(a3 + 20);
  uint64_t v72 = (char *)a1 + v71;
  uint64_t v73 = (char *)a2 + v71;
  uint64_t v74 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 40))(v72, v73, v74);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSessionError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25384E9F8);
}

uint64_t sub_25384E9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE1D40);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSessionError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25384EA18);
}

uint64_t sub_25384EA18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE1D40);
}

void sub_25384EA24(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoSessionErrorEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v13 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v13))
        {
          uint64_t v14 = sub_253462A5C(&qword_269CE1D58);
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          uint64_t v19 = a2[1];
          *a1 = *a2;
          a1[1] = v19;
          a1[2] = a2[2];
          uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
          uint64_t v49 = (char *)a1 + v20;
          uint64_t v21 = (char *)a2 + v20;
          uint64_t v22 = sub_253B07160();
          uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
          swift_bridgeObjectRetain();
          v23(v49, v21, v22);
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v13);
        }
        uint64_t v24 = *(int *)(type metadata accessor for TranscriptProtoSessionCoordinatorError(0) + 20);
        uint64_t v25 = (char *)a1 + v24;
        uint64_t v26 = (char *)a2 + v24;
        uint64_t v27 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
        break;
      case 2u:
        uint64_t v15 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v15))
        {
          uint64_t v16 = sub_253462A5C(&qword_269CE1D88);
          memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          uint64_t v28 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v28))
          {
            memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
          }
          else
          {
            uint64_t v30 = a2[1];
            *a1 = *a2;
            a1[1] = v30;
            a1[2] = a2[2];
            uint64_t v31 = *(int *)(v28 + 24);
            uint64_t v50 = (char *)a1 + v31;
            uint64_t v32 = (char *)a2 + v31;
            uint64_t v33 = sub_253B07160();
            uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
            swift_bridgeObjectRetain();
            v34(v50, v32, v33);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v28);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v15);
        }
        uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoPlannerError(0) + 20);
        uint64_t v36 = (char *)a1 + v35;
        uint64_t v37 = (char *)a2 + v35;
        uint64_t v38 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
        break;
      case 3u:
        uint64_t v17 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v17))
        {
          uint64_t v18 = sub_253462A5C(&qword_269CE1D70);
          memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          uint64_t v29 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v29))
          {
            memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
          }
          else
          {
            uint64_t v39 = a2[1];
            *a1 = *a2;
            a1[1] = v39;
            a1[2] = a2[2];
            uint64_t v40 = *(int *)(v29 + 24);
            uint64_t v51 = (char *)a1 + v40;
            uint64_t v41 = (char *)a2 + v40;
            uint64_t v42 = sub_253B07160();
            uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
            swift_bridgeObjectRetain();
            v43(v51, v41, v42);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v29);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v17);
        }
        uint64_t v44 = *(int *)(type metadata accessor for TranscriptProtoExecutorError(0) + 20);
        uint64_t v45 = (char *)a1 + v44;
        uint64_t v46 = (char *)a2 + v44;
        uint64_t v47 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
        break;
      default:
        uint64_t v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        a1[2] = a2[2];
        uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
        int v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = sub_253B07160();
        uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
        swift_bridgeObjectRetain();
        v11(v8, v9, v10);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TranscriptProtoSessionErrorEnum(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      uint64_t v3 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
      goto LABEL_16;
    case 1:
      uint64_t v4 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4)
        && swift_getEnumCaseMultiPayload() <= 2)
      {
        swift_bridgeObjectRelease();
        uint64_t v5 = a1 + *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
        uint64_t v6 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      }
      uint64_t v7 = type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
      goto LABEL_15;
    case 2:
      uint64_t v8 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v8))
      {
        uint64_t v9 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v9))
        {
          swift_bridgeObjectRelease();
          uint64_t v10 = a1 + *(int *)(v9 + 24);
          uint64_t v11 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
        }
      }
      uint64_t v7 = type metadata accessor for TranscriptProtoPlannerError(0);
      goto LABEL_15;
    case 3:
      uint64_t v12 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v12))
      {
        uint64_t v13 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v13))
        {
          swift_bridgeObjectRelease();
          uint64_t v14 = a1 + *(int *)(v13 + 24);
          uint64_t v15 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
        }
      }
      uint64_t v7 = type metadata accessor for TranscriptProtoExecutorError(0);
LABEL_15:
      uint64_t v3 = *(int *)(v7 + 20);
LABEL_16:
      uint64_t v16 = a1 + v3;
      uint64_t v17 = sub_253B07160();
      uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8);
      uint64_t result = v18(v16, v17);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for TranscriptProtoSessionErrorEnum(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v10 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v10))
      {
        uint64_t v11 = sub_253462A5C(&qword_269CE1D58);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        uint64_t v16 = a2[1];
        *a1 = *a2;
        a1[1] = v16;
        a1[2] = a2[2];
        uint64_t v17 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
        uint64_t v46 = (char *)a1 + v17;
        uint64_t v18 = (char *)a2 + v17;
        uint64_t v19 = sub_253B07160();
        uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
        swift_bridgeObjectRetain();
        v20(v46, v18, v19);
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v10);
      }
      uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoSessionCoordinatorError(0) + 20);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      break;
    case 2u:
      uint64_t v12 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v12))
      {
        uint64_t v13 = sub_253462A5C(&qword_269CE1D88);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        uint64_t v25 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v25))
        {
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          uint64_t v27 = a2[1];
          *a1 = *a2;
          a1[1] = v27;
          a1[2] = a2[2];
          uint64_t v28 = *(int *)(v25 + 24);
          uint64_t v47 = (char *)a1 + v28;
          uint64_t v29 = (char *)a2 + v28;
          uint64_t v30 = sub_253B07160();
          uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
          swift_bridgeObjectRetain();
          v31(v47, v29, v30);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v25);
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v12);
      }
      uint64_t v32 = *(int *)(type metadata accessor for TranscriptProtoPlannerError(0) + 20);
      uint64_t v33 = (char *)a1 + v32;
      uint64_t v34 = (char *)a2 + v32;
      uint64_t v35 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
      break;
    case 3u:
      uint64_t v14 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v14))
      {
        uint64_t v15 = sub_253462A5C(&qword_269CE1D70);
        memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        uint64_t v26 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v26))
        {
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          uint64_t v36 = a2[1];
          *a1 = *a2;
          a1[1] = v36;
          a1[2] = a2[2];
          uint64_t v37 = *(int *)(v26 + 24);
          uint64_t v48 = (char *)a1 + v37;
          uint64_t v38 = (char *)a2 + v37;
          uint64_t v39 = sub_253B07160();
          uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
          swift_bridgeObjectRetain();
          v40(v48, v38, v39);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v26);
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v14);
      }
      uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoExecutorError(0) + 20);
      uint64_t v42 = (char *)a1 + v41;
      uint64_t v43 = (char *)a2 + v41;
      uint64_t v44 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
      break;
    default:
      uint64_t v4 = a2[1];
      *a1 = *a2;
      a1[1] = v4;
      a1[2] = a2[2];
      uint64_t v5 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
      uint64_t v6 = (char *)a1 + v5;
      uint64_t v7 = (char *)a2 + v5;
      uint64_t v8 = sub_253B07160();
      uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
      swift_bridgeObjectRetain();
      v9(v6, v7, v8);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for TranscriptProtoSessionErrorEnum(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v9 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v9))
        {
          uint64_t v10 = sub_253462A5C(&qword_269CE1D58);
          memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
          uint64_t v42 = (char *)a1 + v15;
          uint64_t v16 = (char *)a2 + v15;
          uint64_t v17 = sub_253B07160();
          uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
          swift_bridgeObjectRetain();
          v18(v42, v16, v17);
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v9);
        }
        uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoSessionCoordinatorError(0) + 20);
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        uint64_t v22 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
        break;
      case 2u:
        uint64_t v11 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v11))
        {
          uint64_t v12 = sub_253462A5C(&qword_269CE1D88);
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          uint64_t v23 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v23))
          {
            memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            uint64_t v25 = *(int *)(v23 + 24);
            uint64_t v43 = (char *)a1 + v25;
            uint64_t v26 = (char *)a2 + v25;
            uint64_t v27 = sub_253B07160();
            uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
            swift_bridgeObjectRetain();
            v28(v43, v26, v27);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v23);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v11);
        }
        uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoPlannerError(0) + 20);
        uint64_t v30 = (char *)a1 + v29;
        uint64_t v31 = (char *)a2 + v29;
        uint64_t v32 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
        break;
      case 3u:
        uint64_t v13 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v13))
        {
          uint64_t v14 = sub_253462A5C(&qword_269CE1D70);
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          uint64_t v24 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v24))
          {
            memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            uint64_t v33 = *(int *)(v24 + 24);
            uint64_t v44 = (char *)a1 + v33;
            uint64_t v34 = (char *)a2 + v33;
            uint64_t v35 = sub_253B07160();
            uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
            swift_bridgeObjectRetain();
            v36(v44, v34, v35);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v24);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v13);
        }
        uint64_t v37 = *(int *)(type metadata accessor for TranscriptProtoExecutorError(0) + 20);
        uint64_t v38 = (char *)a1 + v37;
        uint64_t v39 = (char *)a2 + v37;
        uint64_t v40 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
        break;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v4 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
        uint64_t v5 = (char *)a1 + v4;
        uint64_t v6 = (char *)a2 + v4;
        uint64_t v7 = sub_253B07160();
        uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
        swift_bridgeObjectRetain();
        v8(v5, v6, v7);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for TranscriptProtoSessionErrorEnum(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v5 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v5))
      {
        uint64_t v6 = sub_253462A5C(&qword_269CE1D58);
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v5);
      }
      uint64_t v15 = type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
      goto LABEL_21;
    case 2u:
      uint64_t v7 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
      {
        uint64_t v8 = sub_253462A5C(&qword_269CE1D88);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        uint64_t v16 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v16))
        {
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          a1[2] = a2[2];
          uint64_t v18 = *(int *)(v16 + 24);
          uint64_t v19 = (char *)a1 + v18;
          uint64_t v20 = (char *)a2 + v18;
          uint64_t v21 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v16);
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
      }
      uint64_t v15 = type metadata accessor for TranscriptProtoPlannerError(0);
      goto LABEL_21;
    case 3u:
      uint64_t v9 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v9))
      {
        uint64_t v10 = sub_253462A5C(&qword_269CE1D70);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        uint64_t v17 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v17))
        {
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          a1[2] = a2[2];
          uint64_t v22 = *(int *)(v17 + 24);
          uint64_t v23 = (char *)a1 + v22;
          uint64_t v24 = (char *)a2 + v22;
          uint64_t v25 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v17);
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v9);
      }
      uint64_t v15 = type metadata accessor for TranscriptProtoExecutorError(0);
LABEL_21:
      uint64_t v4 = *(int *)(v15 + 20);
      break;
    default:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      uint64_t v4 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
      break;
  }
  uint64_t v26 = (char *)a1 + v4;
  uint64_t v27 = (char *)a2 + v4;
  uint64_t v28 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithTake for TranscriptProtoSessionErrorEnum(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v5 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v5))
        {
          uint64_t v6 = sub_253462A5C(&qword_269CE1D58);
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          *(_OWORD *)a1 = *(_OWORD *)a2;
          a1[2] = a2[2];
          uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
          uint64_t v12 = (char *)a1 + v11;
          uint64_t v13 = (char *)a2 + v11;
          uint64_t v14 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v5);
        }
        uint64_t v15 = type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
        goto LABEL_22;
      case 2u:
        uint64_t v7 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
        {
          uint64_t v8 = sub_253462A5C(&qword_269CE1D88);
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
        else
        {
          uint64_t v16 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v16))
          {
            memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          }
          else
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
            a1[2] = a2[2];
            uint64_t v18 = *(int *)(v16 + 24);
            uint64_t v19 = (char *)a1 + v18;
            uint64_t v20 = (char *)a2 + v18;
            uint64_t v21 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v16);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
        }
        uint64_t v15 = type metadata accessor for TranscriptProtoPlannerError(0);
        goto LABEL_22;
      case 3u:
        uint64_t v9 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v9))
        {
          uint64_t v10 = sub_253462A5C(&qword_269CE1D70);
          memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
        }
        else
        {
          uint64_t v17 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v17))
          {
            memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
          }
          else
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
            a1[2] = a2[2];
            uint64_t v22 = *(int *)(v17 + 24);
            uint64_t v23 = (char *)a1 + v22;
            uint64_t v24 = (char *)a2 + v22;
            uint64_t v25 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v17);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v9);
        }
        uint64_t v15 = type metadata accessor for TranscriptProtoExecutorError(0);
LABEL_22:
        uint64_t v4 = *(int *)(v15 + 20);
        break;
      default:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        uint64_t v4 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
        break;
    }
    uint64_t v26 = (char *)a1 + v4;
    uint64_t v27 = (char *)a2 + v4;
    uint64_t v28 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253850684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2538506D8(a1, a2, a3, (uint64_t)type metadata accessor for TranscriptProtoIntelligenceFlowError, type metadata accessor for TranscriptProtoSessionCoordinatorError, type metadata accessor for TranscriptProtoPlannerError, type metadata accessor for TranscriptProtoExecutorError);
}

uint64_t sub_2538506D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t (*a6)(uint64_t), uint64_t (*a7)(uint64_t))
{
  uint64_t v10 = sub_2539461BC();
  uint64_t result = v11(v10);
  if (v13 <= 0x3F)
  {
    uint64_t v14 = sub_253945F00();
    uint64_t result = a5(v14);
    if (v15 <= 0x3F)
    {
      uint64_t result = a6(319);
      if (v16 <= 0x3F)
      {
        uint64_t result = a7(319);
        if (v17 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return sub_2535E2578();
        }
      }
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoSessionCoordinatorError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE1D58);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      swift_getEnumCaseMultiPayload();
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      a1[2] = a2[2];
      uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
      uint64_t v20 = (char *)a1 + v11;
      uint64_t v12 = (char *)a2 + v11;
      uint64_t v13 = sub_253B07160();
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v20, v12, v13);
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v15 = *(int *)(a3 + 20);
    unint64_t v16 = (char *)a1 + v15;
    unint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoSessionCoordinatorError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4)
    && swift_getEnumCaseMultiPayload() <= 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = a1 + *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
    uint64_t v6 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = sub_253B07160();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  return v9(v7, v8);
}

void *initializeWithCopy for TranscriptProtoSessionCoordinatorError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE1D58);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    a1[2] = a2[2];
    uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
    uint64_t v18 = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_253B07160();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v18, v10, v11);
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

void *assignWithCopy for TranscriptProtoSessionCoordinatorError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
      uint64_t v24 = (char *)a1 + v9;
      uint64_t v10 = (char *)a2 + v9;
      uint64_t v11 = sub_253B07160();
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v24, v10, v11);
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
LABEL_6:
    uint64_t v13 = sub_253462A5C(&qword_269CE1D58);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_253B07160();
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    v23(v20, v21, v22);
    swift_storeEnumTagMultiPayload();
  }
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

void *initializeWithTake for TranscriptProtoSessionCoordinatorError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE1D58);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

void *assignWithTake for TranscriptProtoSessionCoordinatorError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      swift_getEnumCaseMultiPayload();
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
LABEL_6:
    uint64_t v13 = sub_253462A5C(&qword_269CE1D58);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (a1 != a2)
  {
    sub_2536FA73C();
    swift_getEnumCaseMultiPayload();
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
    swift_storeEnumTagMultiPayload();
  }
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSessionCoordinatorError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253851540);
}

uint64_t sub_253851540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE1D58);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSessionCoordinatorError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253851560);
}

uint64_t sub_253851560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE1D58);
}

void sub_25385156C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoSessionCoordinatorErrorEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
    int v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_253B07160();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TranscriptProtoSessionCoordinatorErrorEnum(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = a1 + *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
    uint64_t v4 = sub_253B07160();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(v3, v4);
  }
  return result;
}

void *initializeWithCopy for TranscriptProtoSessionCoordinatorErrorEnum(void *a1, void *a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_253B07160();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for TranscriptProtoSessionCoordinatorErrorEnum(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    uint64_t v4 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
    uint64_t v5 = (char *)a1 + v4;
    uint64_t v6 = (char *)a2 + v4;
    uint64_t v7 = sub_253B07160();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    swift_bridgeObjectRetain();
    v8(v5, v6, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoSessionCoordinatorErrorEnum(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for TranscriptProtoSessionCoordinatorErrorEnum(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    swift_getEnumCaseMultiPayload();
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    uint64_t v4 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
    uint64_t v5 = a1 + v4;
    uint64_t v6 = a2 + v4;
    uint64_t v7 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253851BF8()
{
  uint64_t result = type metadata accessor for TranscriptProtoIntelligenceFlowError(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void initializeBufferWithCopyOfBuffer for TranscriptProtoExecutorError()
{
}

uint64_t destroy for TranscriptProtoExecutorError()
{
  return sub_253851F98();
}

void initializeWithCopy for TranscriptProtoExecutorError()
{
}

void assignWithCopy for TranscriptProtoExecutorError()
{
}

void initializeWithTake for TranscriptProtoExecutorError()
{
}

void assignWithTake for TranscriptProtoExecutorError()
{
}

uint64_t getEnumTagSinglePayload for TranscriptProtoExecutorError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253851D78);
}

uint64_t sub_253851D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE1D70);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoExecutorError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253851D98);
}

uint64_t sub_253851D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE1D70);
}

void sub_253851DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t getEnumTagSinglePayload for TranscriptProtoExecutorErrorEnum(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253851DF0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoExecutorErrorEnum(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253851E08);
}

uint64_t sub_253851E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253852E1C(a1, a2, a3, type metadata accessor for TranscriptProtoIntelligenceFlowError);
}

void initializeBufferWithCopyOfBuffer for TranscriptProtoPlannerError()
{
}

void sub_253851E48()
{
  sub_2535E2390();
  unint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_2535782A8();
  if ((*(_DWORD *)(v6 + 80) & 0x20000) != 0)
  {
    sub_2539442C0(*v1);
  }
  else
  {
    uint64_t v7 = v5;
    v4(0);
    if (sub_2539443F0((uint64_t)v1))
    {
      uint64_t v8 = sub_253462A5C(v7);
      uint64_t v9 = sub_25346CB4C(v8);
      sub_2539445E4(v9, v11, *(void *)(v10 + 64));
    }
    else
    {
      if (sub_253944884())
      {
        sub_25347B88C();
        sub_2539445E4(v13, v14, *(void *)(v12 + 64));
      }
      else
      {
        uint64_t v15 = v1[1];
        *uint64_t v3 = *v1;
        v3[1] = v15;
        sub_253944A9C();
        sub_25346CAF4();
        uint64_t v17 = *(void (**)(void))(v16 + 16);
        swift_bridgeObjectRetain();
        sub_253944AE4();
        v17();
        sub_2539446A0((uint64_t)v3);
      }
      sub_2536D4030((uint64_t)v3);
    }
    sub_25394426C();
    sub_25346CAF4();
    uint64_t v18 = sub_25354710C();
    v19(v18);
  }
  sub_2535E2374();
}

uint64_t destroy for TranscriptProtoPlannerError()
{
  return sub_253851F98();
}

uint64_t sub_253851F98()
{
  uint64_t v1 = sub_253944B4C();
  uint64_t v3 = v2(v1);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v0, 1, v3))
  {
    uint64_t v4 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
    if (!sub_253944F38(v4))
    {
      swift_bridgeObjectRelease();
      sub_253B07160();
      sub_25346CAF4();
      uint64_t v5 = sub_253945338();
      v6(v5);
    }
  }
  sub_253944D10();
  sub_25346CAF4();
  uint64_t v7 = sub_2539446BC();
  return v8(v7);
}

void initializeWithCopy for TranscriptProtoPlannerError()
{
}

void sub_25385207C()
{
  sub_2535E2390();
  uint64_t v3 = v2;
  uint64_t v4 = sub_253944B4C();
  v5(v4);
  if (sub_2539443F0((uint64_t)v1))
  {
    uint64_t v6 = sub_253462A5C(v3);
    uint64_t v7 = sub_25346CB4C(v6);
    sub_2539445E4(v7, v9, *(void *)(v8 + 64));
  }
  else
  {
    if (sub_253944884())
    {
      sub_25347B88C();
      sub_2539445E4(v11, v12, *(void *)(v10 + 64));
    }
    else
    {
      uint64_t v13 = v1[1];
      *uint64_t v0 = *v1;
      v0[1] = v13;
      sub_253944A9C();
      sub_25346CAF4();
      uint64_t v15 = *(void (**)(void))(v14 + 16);
      swift_bridgeObjectRetain();
      sub_253944AE4();
      v15();
      sub_2539446A0((uint64_t)v0);
    }
    sub_2536D4030((uint64_t)v0);
  }
  sub_25394426C();
  sub_25346CAF4();
  sub_2534B3428();
  v16();
  sub_2535E2374();
}

void assignWithCopy for TranscriptProtoPlannerError()
{
}

void sub_2538521C4()
{
  sub_2535E2390();
  uint64_t v3 = v2;
  uint64_t v4 = sub_253944B4C();
  uint64_t v6 = v5(v4);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v0, 1, v6);
  int v8 = sub_2539443F0((uint64_t)v1);
  if (v7)
  {
    if (!v8)
    {
      if (sub_253944884())
      {
        sub_25347B88C();
        sub_2539445E4(v10, v11, *(void *)(v9 + 64));
      }
      else
      {
        *uint64_t v0 = *v1;
        v0[1] = v1[1];
        sub_253944A9C();
        sub_25346CAF4();
        uint64_t v27 = *(void (**)(void))(v26 + 16);
        swift_bridgeObjectRetain();
        sub_253944AE4();
        v27();
        sub_2539446A0((uint64_t)v0);
      }
      uint64_t v22 = sub_2534B467C();
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_2536FA73C();
LABEL_7:
    uint64_t v12 = sub_253462A5C(v3);
    uint64_t v15 = *(void *)(v12 - 8);
    uint64_t v14 = v12 - 8;
    size_t v16 = *(void *)(v15 + 64);
    goto LABEL_8;
  }
  uint64_t v17 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  int v18 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v0, 1, v17);
  uint64_t v14 = sub_2539449E0();
  if (v18)
  {
    if (!v14)
    {
      sub_253945640();
      sub_2539448FC();
      sub_25346CAF4();
      uint64_t v20 = *(void (**)(uint64_t))(v19 + 16);
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_253944670();
      v20(v21);
      uint64_t v22 = sub_25394626C();
LABEL_14:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v22, v23, v24, v25);
      goto LABEL_15;
    }
  }
  else
  {
    if (!v14)
    {
      sub_2539459DC();
      swift_bridgeObjectRelease();
      v0[2] = v1[2];
      sub_2539454DC();
      sub_25346CAF4();
      sub_253944540();
      v29();
      goto LABEL_15;
    }
    uint64_t v14 = sub_2536FA73C();
  }
  size_t v16 = *(void *)(*(void *)(v6 - 8) + 64);
LABEL_8:
  sub_2539445E4(v14, v13, v16);
LABEL_15:
  sub_25394426C();
  sub_25346CAF4();
  sub_2539444A8();
  v28();
  sub_2535E2374();
}

void initializeWithTake for TranscriptProtoPlannerError()
{
}

void sub_253852414()
{
  sub_2535B3C98();
  uint64_t v3 = v2;
  uint64_t v4 = sub_253944B4C();
  v5(v4);
  if (sub_2539443F0(v1))
  {
    uint64_t v6 = sub_253462A5C(v3);
    uint64_t v7 = sub_25346CB4C(v6);
    sub_2539445E4(v7, v9, *(void *)(v8 + 64));
  }
  else
  {
    if (sub_253944884())
    {
      sub_25347B88C();
      sub_2539445E4(v11, v12, *(void *)(v10 + 64));
    }
    else
    {
      *(_OWORD *)uint64_t v0 = *(_OWORD *)v1;
      *(void *)(v0 + 16) = *(void *)(v1 + 16);
      sub_2539448FC();
      sub_25346CAF4();
      sub_2534D8E14();
      v13();
      sub_2539446A0(v0);
    }
    sub_2536D4030(v0);
  }
  sub_25394426C();
  sub_25346CAF4();
  sub_2534D8E14();
  v14();
  sub_25346CD04();
}

void assignWithTake for TranscriptProtoPlannerError()
{
}

void sub_25385255C()
{
  sub_2535B3C98();
  uint64_t v3 = v2;
  uint64_t v4 = sub_253944B4C();
  uint64_t v6 = v5(v4);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v0, 1, v6);
  int v8 = sub_2539443F0(v1);
  if (v7)
  {
    if (!v8)
    {
      if (sub_253944884())
      {
        sub_25347B88C();
        sub_2539445E4(v10, v11, *(void *)(v9 + 64));
      }
      else
      {
        *(_OWORD *)uint64_t v0 = *(_OWORD *)v1;
        *(void *)(v0 + 16) = *(void *)(v1 + 16);
        sub_2539448FC();
        sub_25346CAF4();
        sub_2534D8E14();
        v24();
        sub_2539446A0(v0);
      }
      uint64_t v20 = sub_2534B467C();
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_2536FA73C();
LABEL_7:
    uint64_t v12 = sub_253462A5C(v3);
    uint64_t v15 = *(void *)(v12 - 8);
    uint64_t v14 = v12 - 8;
    size_t v16 = *(void *)(v15 + 64);
    goto LABEL_8;
  }
  uint64_t v17 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  int v18 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v0, 1, v17);
  uint64_t v14 = sub_2539449E0();
  if (v18)
  {
    if (!v14)
    {
      *(_OWORD *)uint64_t v0 = *(_OWORD *)v1;
      *(void *)(v0 + 16) = *(void *)(v1 + 16);
      sub_253B07160();
      sub_25346CAF4();
      sub_2534D8E14();
      v19();
      uint64_t v20 = sub_25394626C();
LABEL_14:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v20, v21, v22, v23);
      goto LABEL_15;
    }
  }
  else
  {
    if (!v14)
    {
      uint64_t v26 = *(void *)(v1 + 8);
      *(void *)uint64_t v0 = *(void *)v1;
      *(void *)(v0 + 8) = v26;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 16) = *(void *)(v1 + 16);
      sub_2539454DC();
      sub_25346CAF4();
      sub_253944534();
      v27();
      goto LABEL_15;
    }
    uint64_t v14 = sub_2536FA73C();
  }
  size_t v16 = *(void *)(*(void *)(v6 - 8) + 64);
LABEL_8:
  sub_2539445E4(v14, v13, v16);
LABEL_15:
  sub_25394426C();
  sub_25346CAF4();
  sub_253944438();
  v25();
  sub_25346CD04();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPlannerError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538527B4);
}

uint64_t sub_2538527B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE1D88);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPlannerError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538527D4);
}

uint64_t sub_2538527D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE1D88);
}

void sub_2538527E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void _s30IntelligenceFlowPlannerSupport31TranscriptProtoPlannerErrorEnumOwCP_0()
{
  sub_2535B3C98();
  unint64_t v2 = v0;
  uint64_t v4 = v3;
  if ((*(_DWORD *)(*(void *)(v1 - 8) + 80) & 0x20000) != 0)
  {
    sub_2539442C0(*v0);
  }
  else
  {
    uint64_t v5 = *(void *)(v1 - 8);
    if (sub_2539451A8())
    {
      memcpy(v4, v2, *(void *)(v5 + 64));
    }
    else
    {
      uint64_t v6 = v2[1];
      *uint64_t v4 = *v2;
      v4[1] = v6;
      v4[2] = v2[2];
      sub_253945244();
      sub_25346CAF4();
      int v8 = *(void (**)(void))(v7 + 16);
      swift_bridgeObjectRetain();
      sub_2539448BC();
      v8();
      sub_253945580();
    }
  }
  sub_25346CD04();
}

uint64_t _s30IntelligenceFlowPlannerSupport31TranscriptProtoPlannerErrorEnumOwxx_0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  uint64_t result = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v2);
  if (!result)
  {
    swift_bridgeObjectRelease();
    sub_253944B84();
    sub_25346CAF4();
    uint64_t v4 = sub_2539446BC();
    return v5(v4);
  }
  return result;
}

void _s30IntelligenceFlowPlannerSupport31TranscriptProtoPlannerErrorEnumOwcp_0()
{
  sub_2535B3C98();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  if (sub_2539451A8())
  {
    memcpy(v5, v3, *(void *)(*(void *)(v1 - 8) + 64));
  }
  else
  {
    uint64_t v6 = v3[1];
    *uint64_t v5 = *v3;
    v5[1] = v6;
    v5[2] = v3[2];
    sub_253945244();
    sub_25346CAF4();
    int v8 = *(void (**)(void))(v7 + 16);
    swift_bridgeObjectRetain();
    sub_2539448BC();
    v8();
    sub_253945580();
  }
  sub_25346CD04();
}

void _s30IntelligenceFlowPlannerSupport31TranscriptProtoPlannerErrorEnumOwca_0()
{
  sub_2535B3C98();
  uint64_t v6 = sub_253944C54(v4, v5);
  if (!v3)
  {
    if (!v6)
    {
      sub_2539459DC();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 16) = *(void *)(v1 + 16);
      sub_25394426C();
      sub_25346CAF4();
      sub_2539444A8();
      v10();
      goto LABEL_7;
    }
    uint64_t v6 = sub_2536FA73C();
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    sub_2539445E4(v6, v7, *(void *)(*(void *)(v2 - 8) + 64));
    goto LABEL_7;
  }
  sub_253945640();
  sub_2535E22F0();
  sub_25346CAF4();
  uint64_t v9 = *(void (**)(void))(v8 + 16);
  swift_bridgeObjectRetain();
  sub_2539448BC();
  v9();
  sub_253946280();
LABEL_7:
  sub_25346CD04();
}

void *_s30IntelligenceFlowPlannerSupport31TranscriptProtoPlannerErrorEnumOwtk_0(void *a1, void *a2, uint64_t a3)
{
  if (sub_2539451A8())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    sub_253945244();
    sub_25346CAF4();
    sub_2534D973C();
    sub_2534D8E14();
    v6();
    sub_253945580();
  }
  return a1;
}

void *_s30IntelligenceFlowPlannerSupport31TranscriptProtoPlannerErrorEnumOwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_253944C54(a1, a2);
  if (!v5)
  {
    if (!v6)
    {
      uint64_t v10 = v3[1];
      *uint64_t v2 = *v3;
      v2[1] = v10;
      swift_bridgeObjectRelease();
      v2[2] = v3[2];
      sub_25394426C();
      sub_25346CAF4();
      sub_253944438();
      v11();
      return v2;
    }
    uint64_t v6 = sub_2536FA73C();
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    sub_2539445E4(v6, v7, *(void *)(*(void *)(v4 - 8) + 64));
    return v2;
  }
  *(_OWORD *)uint64_t v2 = *(_OWORD *)v3;
  v2[2] = v3[2];
  sub_2535E22F0();
  sub_25346CAF4();
  sub_2536D44B0();
  sub_2534D8E14();
  v8();
  sub_253946280();
  return v2;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPlannerErrorEnum(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253852CDC);
}

uint64_t sub_253852CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253578A1C();
  uint64_t v5 = type metadata accessor for TranscriptProtoIntelligenceFlowError(v4);
  unsigned int v6 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v2, a2, v5);
  if (v6 >= 2) {
    return v6 - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPlannerErrorEnum(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253852D38);
}

uint64_t sub_253852D3C()
{
  type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  uint64_t v0 = sub_253946310();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v0, v1, v2, v3);
}

uint64_t sub_253852D8C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v2);
}

uint64_t sub_253852DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, a2, 1, v4);
}

uint64_t sub_253852E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return sub_2535E2578();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionOutcome(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253943C94);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionOutcome(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253943C3C);
}

uint64_t type metadata accessor for TranscriptProtoActionOutcome(uint64_t a1)
{
  return sub_2534978CC(a1, (uint64_t *)&unk_269CE4970);
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoActionRequirement(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE0498);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_26:
      uint64_t v41 = *(int *)(a3 + 20);
      uint64_t v42 = (char *)a1 + v41;
      uint64_t v43 = (char *)a2 + v41;
      uint64_t v44 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
      return a1;
    }
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v17 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
        int v18 = (char *)a1 + v17;
        uint64_t v19 = (char *)a2 + v17;
        uint64_t v20 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_25:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
          goto LABEL_26;
        }
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      }
LABEL_24:
      swift_storeEnumTagMultiPayload();
      goto LABEL_25;
    }
    uint64_t v15 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v15))
    {
      uint64_t v16 = sub_253462A5C(&qword_269CE0490);
      memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
LABEL_23:
      uint64_t v37 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
      uint64_t v38 = (char *)a1 + v37;
      uint64_t v39 = (char *)a2 + v37;
      uint64_t v40 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
      goto LABEL_24;
    }
    int v21 = swift_getEnumCaseMultiPayload();
    if (v21 == 1)
    {
      uint64_t v27 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v27))
      {
        uint64_t v28 = sub_253462A5C(&qword_269CE0488);
        memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v29 = *(int *)(v27 + 20);
        uint64_t v30 = (char *)a1 + v29;
        uint64_t v31 = (char *)a2 + v29;
        uint64_t v32 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v27);
      }
      uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
      uint64_t v34 = (char *)a1 + v33;
      uint64_t v35 = (char *)a2 + v33;
      uint64_t v36 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
    }
    else
    {
      if (v21)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
LABEL_22:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v15);
        goto LABEL_23;
      }
      uint64_t v22 = a2[1];
      *a1 = *a2;
      a1[1] = v22;
      uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
      uint64_t v46 = (char *)a1 + v23;
      uint64_t v24 = (char *)a2 + v23;
      uint64_t v25 = sub_253B07160();
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
      swift_bridgeObjectRetain();
      v26(v46, v24, v25);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_22;
  }
  uint64_t v9 = *a2;
  *a1 = *a2;
  a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for TranscriptProtoActionRequirement(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v6 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
      }
      else
      {
        if (EnumCaseMultiPayload) {
          goto LABEL_17;
        }
        uint64_t v6 = type metadata accessor for TranscriptProtoAppRequirement(0);
      }
      goto LABEL_16;
    }
    uint64_t v7 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v7))
    {
      int v8 = swift_getEnumCaseMultiPayload();
      if (v8 == 1)
      {
        uint64_t v10 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v10))
        {
          uint64_t v11 = a1 + *(int *)(v10 + 20);
          uint64_t v12 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
        }
        uint64_t v9 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
        goto LABEL_14;
      }
      if (!v8)
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
LABEL_14:
        uint64_t v13 = a1 + *(int *)(v9 + 20);
        uint64_t v14 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
      }
    }
    uint64_t v6 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
LABEL_16:
    uint64_t v15 = a1 + *(int *)(v6 + 20);
    uint64_t v16 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
LABEL_17:
  uint64_t v17 = a1 + *(int *)(a2 + 20);
  uint64_t v18 = sub_253B07160();
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);
  return v19(v17, v18);
}

void *initializeWithCopy for TranscriptProtoActionRequirement(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_23:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
          goto LABEL_24;
        }
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      }
LABEL_22:
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
    }
    uint64_t v13 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v13))
    {
      uint64_t v14 = sub_253462A5C(&qword_269CE0490);
      memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_21:
      uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
      uint64_t v36 = (char *)a1 + v35;
      uint64_t v37 = (char *)a2 + v35;
      uint64_t v38 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
      goto LABEL_22;
    }
    int v19 = swift_getEnumCaseMultiPayload();
    if (v19 == 1)
    {
      uint64_t v25 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v25))
      {
        uint64_t v26 = sub_253462A5C(&qword_269CE0488);
        memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v27 = *(int *)(v25 + 20);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v25);
      }
      uint64_t v31 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      uint64_t v34 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
    }
    else
    {
      if (v19)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
LABEL_20:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v13);
        goto LABEL_21;
      }
      uint64_t v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
      uint64_t v44 = (char *)a1 + v21;
      uint64_t v22 = (char *)a2 + v21;
      uint64_t v23 = sub_253B07160();
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v24(v44, v22, v23);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_20;
  }
  uint64_t v7 = sub_253462A5C(&qword_269CE0498);
  memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_24:
  uint64_t v39 = *(int *)(a3 + 20);
  uint64_t v40 = (char *)a1 + v39;
  uint64_t v41 = (char *)a2 + v39;
  uint64_t v42 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

void *assignWithCopy for TranscriptProtoActionRequirement(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload != 2)
      {
        if (EnumCaseMultiPayload == 1)
        {
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v22 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
          uint64_t v23 = (char *)a1 + v22;
          uint64_t v24 = (char *)a2 + v22;
          uint64_t v25 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
        }
        else
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_42:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
            goto LABEL_49;
          }
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
          uint64_t v11 = (char *)a1 + v10;
          uint64_t v12 = (char *)a2 + v10;
          uint64_t v13 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
        }
LABEL_41:
        swift_storeEnumTagMultiPayload();
        goto LABEL_42;
      }
      uint64_t v20 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v20))
      {
        uint64_t v21 = sub_253462A5C(&qword_269CE0490);
        memcpy(a1, a2, *(void *)(*(void *)(v21 - 8) + 64));
LABEL_40:
        uint64_t v54 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
        uint64_t v55 = (char *)a1 + v54;
        uint64_t v56 = (char *)a2 + v54;
        uint64_t v57 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
        goto LABEL_41;
      }
      int v32 = swift_getEnumCaseMultiPayload();
      if (v32 == 1)
      {
        uint64_t v42 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v42))
        {
          uint64_t v43 = sub_253462A5C(&qword_269CE0488);
          memcpy(a1, a2, *(void *)(*(void *)(v43 - 8) + 64));
        }
        else
        {
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v46 = *(int *)(v42 + 20);
          uint64_t v47 = (char *)a1 + v46;
          uint64_t v48 = (char *)a2 + v46;
          uint64_t v49 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v42);
        }
        uint64_t v50 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
        uint64_t v51 = (char *)a1 + v50;
        uint64_t v52 = (char *)a2 + v50;
        uint64_t v53 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
      }
      else
      {
        if (v32)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
LABEL_39:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v20);
          goto LABEL_40;
        }
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
        uint64_t v75 = (char *)a1 + v33;
        uint64_t v34 = (char *)a2 + v33;
        uint64_t v35 = sub_253B07160();
        uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
        swift_bridgeObjectRetain();
        v36(v75, v34, v35);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_39;
    }
    goto LABEL_9;
  }
  if (!v8)
  {
    if (a1 == a2) {
      goto LABEL_49;
    }
    sub_2536FA73C();
    int v15 = swift_getEnumCaseMultiPayload();
    if (v15 != 2)
    {
      if (v15 == 1)
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v28 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
        uint64_t v29 = (char *)a1 + v28;
        uint64_t v30 = (char *)a2 + v28;
        uint64_t v31 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      }
      else
      {
        if (v15)
        {
          size_t v14 = *(void *)(*(void *)(v6 - 8) + 64);
          goto LABEL_10;
        }
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      }
LABEL_48:
      swift_storeEnumTagMultiPayload();
      goto LABEL_49;
    }
    uint64_t v26 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v26))
    {
      uint64_t v27 = sub_253462A5C(&qword_269CE0490);
      memcpy(a1, a2, *(void *)(*(void *)(v27 - 8) + 64));
LABEL_47:
      uint64_t v66 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
      uint64_t v67 = (char *)a1 + v66;
      uint64_t v68 = (char *)a2 + v66;
      uint64_t v69 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
      goto LABEL_48;
    }
    int v37 = swift_getEnumCaseMultiPayload();
    if (v37 == 1)
    {
      uint64_t v44 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v44))
      {
        uint64_t v45 = sub_253462A5C(&qword_269CE0488);
        memcpy(a1, a2, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v58 = *(int *)(v44 + 20);
        uint64_t v59 = (char *)a1 + v58;
        uint64_t v60 = (char *)a2 + v58;
        uint64_t v61 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v44);
      }
      uint64_t v62 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
      uint64_t v63 = (char *)a1 + v62;
      uint64_t v64 = (char *)a2 + v62;
      uint64_t v65 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v64, v65);
    }
    else
    {
      if (v37)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
LABEL_46:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v26);
        goto LABEL_47;
      }
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v38 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
      uint64_t v76 = (char *)a1 + v38;
      uint64_t v39 = (char *)a2 + v38;
      uint64_t v40 = sub_253B07160();
      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
      swift_bridgeObjectRetain();
      v41(v76, v39, v40);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_46;
  }
  sub_2536FA73C();
LABEL_9:
  size_t v14 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE0498) - 8) + 64);
LABEL_10:
  memcpy(a1, a2, v14);
LABEL_49:
  uint64_t v70 = *(int *)(a3 + 20);
  uint64_t v71 = (char *)a1 + v70;
  uint64_t v72 = (char *)a2 + v70;
  uint64_t v73 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 24))(v71, v72, v73);
  return a1;
}

unsigned char *initializeWithTake for TranscriptProtoActionRequirement(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        *a1 = *a2;
        uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
        uint64_t v16 = &a1[v15];
        uint64_t v17 = &a2[v15];
        uint64_t v18 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_23:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
          goto LABEL_24;
        }
        *a1 = *a2;
        uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
        uint64_t v10 = &a1[v9];
        uint64_t v11 = &a2[v9];
        uint64_t v12 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      }
LABEL_22:
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
    }
    uint64_t v13 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v13))
    {
      uint64_t v14 = sub_253462A5C(&qword_269CE0490);
      memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_21:
      uint64_t v34 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
      uint64_t v35 = &a1[v34];
      uint64_t v36 = &a2[v34];
      uint64_t v37 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
      goto LABEL_22;
    }
    int v19 = swift_getEnumCaseMultiPayload();
    if (v19 == 1)
    {
      uint64_t v24 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v24))
      {
        uint64_t v25 = sub_253462A5C(&qword_269CE0488);
        memcpy(a1, a2, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v26 = *(int *)(v24 + 20);
        uint64_t v27 = &a1[v26];
        uint64_t v28 = &a2[v26];
        uint64_t v29 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v24);
      }
      uint64_t v30 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
      uint64_t v31 = &a1[v30];
      int v32 = &a2[v30];
      uint64_t v33 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
    }
    else
    {
      if (v19)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
LABEL_20:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v13);
        goto LABEL_21;
      }
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
      uint64_t v21 = &a1[v20];
      uint64_t v22 = &a2[v20];
      uint64_t v23 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_20;
  }
  uint64_t v7 = sub_253462A5C(&qword_269CE0498);
  memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_24:
  uint64_t v38 = *(int *)(a3 + 20);
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  uint64_t v41 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
  return a1;
}

unsigned char *assignWithTake for TranscriptProtoActionRequirement(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload != 2)
      {
        if (EnumCaseMultiPayload == 1)
        {
          *a1 = *a2;
          uint64_t v22 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
          uint64_t v23 = &a1[v22];
          uint64_t v24 = &a2[v22];
          uint64_t v25 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
        }
        else
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_42:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
            goto LABEL_49;
          }
          *a1 = *a2;
          uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
          uint64_t v11 = &a1[v10];
          uint64_t v12 = &a2[v10];
          uint64_t v13 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
        }
LABEL_41:
        swift_storeEnumTagMultiPayload();
        goto LABEL_42;
      }
      uint64_t v20 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v20))
      {
        uint64_t v21 = sub_253462A5C(&qword_269CE0490);
        memcpy(a1, a2, *(void *)(*(void *)(v21 - 8) + 64));
LABEL_40:
        uint64_t v54 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
        uint64_t v55 = &a1[v54];
        uint64_t v56 = &a2[v54];
        uint64_t v57 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
        goto LABEL_41;
      }
      int v32 = swift_getEnumCaseMultiPayload();
      if (v32 == 1)
      {
        uint64_t v42 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v42))
        {
          uint64_t v43 = sub_253462A5C(&qword_269CE0488);
          memcpy(a1, a2, *(void *)(*(void *)(v43 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v46 = *(int *)(v42 + 20);
          uint64_t v47 = &a1[v46];
          uint64_t v48 = &a2[v46];
          uint64_t v49 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v42);
        }
        uint64_t v50 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
        uint64_t v51 = &a1[v50];
        uint64_t v52 = &a2[v50];
        uint64_t v53 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
      }
      else
      {
        if (v32)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
LABEL_39:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v20);
          goto LABEL_40;
        }
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
        uint64_t v34 = &a1[v33];
        uint64_t v35 = &a2[v33];
        uint64_t v36 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_39;
    }
    goto LABEL_9;
  }
  if (!v8)
  {
    if (a1 == a2) {
      goto LABEL_49;
    }
    sub_2536FA73C();
    int v15 = swift_getEnumCaseMultiPayload();
    if (v15 != 2)
    {
      if (v15 == 1)
      {
        *a1 = *a2;
        uint64_t v28 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
        uint64_t v29 = &a1[v28];
        uint64_t v30 = &a2[v28];
        uint64_t v31 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
      }
      else
      {
        if (v15)
        {
          size_t v14 = *(void *)(*(void *)(v6 - 8) + 64);
          goto LABEL_10;
        }
        *a1 = *a2;
        uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
        uint64_t v17 = &a1[v16];
        uint64_t v18 = &a2[v16];
        uint64_t v19 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      }
LABEL_48:
      swift_storeEnumTagMultiPayload();
      goto LABEL_49;
    }
    uint64_t v26 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v26))
    {
      uint64_t v27 = sub_253462A5C(&qword_269CE0490);
      memcpy(a1, a2, *(void *)(*(void *)(v27 - 8) + 64));
LABEL_47:
      uint64_t v66 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
      uint64_t v67 = &a1[v66];
      uint64_t v68 = &a2[v66];
      uint64_t v69 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v69 - 8) + 32))(v67, v68, v69);
      goto LABEL_48;
    }
    int v37 = swift_getEnumCaseMultiPayload();
    if (v37 == 1)
    {
      uint64_t v44 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v44))
      {
        uint64_t v45 = sub_253462A5C(&qword_269CE0488);
        memcpy(a1, a2, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v58 = *(int *)(v44 + 20);
        uint64_t v59 = &a1[v58];
        uint64_t v60 = &a2[v58];
        uint64_t v61 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v44);
      }
      uint64_t v62 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
      uint64_t v63 = &a1[v62];
      uint64_t v64 = &a2[v62];
      uint64_t v65 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v65 - 8) + 32))(v63, v64, v65);
    }
    else
    {
      if (v37)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
LABEL_46:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v26);
        goto LABEL_47;
      }
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v38 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
      uint64_t v39 = &a1[v38];
      uint64_t v40 = &a2[v38];
      uint64_t v41 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_46;
  }
  sub_2536FA73C();
LABEL_9:
  size_t v14 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE0498) - 8) + 64);
LABEL_10:
  memcpy(a1, a2, v14);
LABEL_49:
  uint64_t v70 = *(int *)(a3 + 20);
  uint64_t v71 = &a1[v70];
  uint64_t v72 = &a2[v70];
  uint64_t v73 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v73 - 8) + 40))(v71, v72, v73);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionRequirement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253855048);
}

uint64_t sub_253855048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE0498);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionRequirement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253855068);
}

uint64_t sub_253855068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE0498);
}

void sub_253855074(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoActionRequirementEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(a3 - 8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v13 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v13))
      {
        uint64_t v14 = sub_253462A5C(&qword_269CE0490);
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_21:
        uint64_t v36 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
        int v37 = (char *)a1 + v36;
        uint64_t v38 = (char *)a2 + v36;
        uint64_t v39 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
        goto LABEL_22;
      }
      int v19 = swift_getEnumCaseMultiPayload();
      if (v19 == 1)
      {
        uint64_t v26 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v26))
        {
          uint64_t v27 = sub_253462A5C(&qword_269CE0488);
          memcpy(a1, a2, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v28 = *(int *)(v26 + 20);
          uint64_t v29 = (char *)a1 + v28;
          uint64_t v30 = (char *)a2 + v28;
          uint64_t v31 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v26);
        }
        uint64_t v32 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
        uint64_t v33 = (char *)a1 + v32;
        uint64_t v34 = (char *)a2 + v32;
        uint64_t v35 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
      }
      else
      {
        if (v19)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
LABEL_20:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v13);
          goto LABEL_21;
        }
        uint64_t v20 = a2[1];
        *a1 = *a2;
        a1[1] = v20;
        uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        uint64_t v24 = sub_253B07160();
        uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v25(v22, v23, v24);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_20;
    case 1:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      goto LABEL_22;
    case 0:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
LABEL_22:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(v6 + 64));
  return a1;
}

uint64_t destroy for TranscriptProtoActionRequirementEnum(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v4 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v7 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v7))
        {
          uint64_t v8 = a1 + *(int *)(v7 + 20);
          uint64_t v9 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
        }
        uint64_t v6 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
        goto LABEL_14;
      }
      if (!EnumCaseMultiPayload)
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
LABEL_14:
        uint64_t v10 = a1 + *(int *)(v6 + 20);
        uint64_t v11 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      }
    }
    uint64_t v3 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
    goto LABEL_16;
  }
  if (result == 1)
  {
    uint64_t v3 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v3 = type metadata accessor for TranscriptProtoAppRequirement(0);
  }
LABEL_16:
  uint64_t v12 = a1 + *(int *)(v3 + 20);
  uint64_t v13 = sub_253B07160();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
  return v14(v12, v13);
}

void *initializeWithCopy for TranscriptProtoActionRequirementEnum(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v11 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v11))
      {
        uint64_t v12 = sub_253462A5C(&qword_269CE0490);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_19:
        uint64_t v34 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
        uint64_t v35 = (char *)a1 + v34;
        uint64_t v36 = (char *)a2 + v34;
        uint64_t v37 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
        goto LABEL_20;
      }
      int v17 = swift_getEnumCaseMultiPayload();
      if (v17 == 1)
      {
        uint64_t v24 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v24))
        {
          uint64_t v25 = sub_253462A5C(&qword_269CE0488);
          memcpy(a1, a2, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v26 = *(int *)(v24 + 20);
          uint64_t v27 = (char *)a1 + v26;
          uint64_t v28 = (char *)a2 + v26;
          uint64_t v29 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v24);
        }
        uint64_t v30 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
        uint64_t v31 = (char *)a1 + v30;
        uint64_t v32 = (char *)a2 + v30;
        uint64_t v33 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      }
      else
      {
        if (v17)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_18:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v11);
          goto LABEL_19;
        }
        uint64_t v18 = a2[1];
        *a1 = *a2;
        a1[1] = v18;
        uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        uint64_t v22 = sub_253B07160();
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v23(v20, v21, v22);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_18;
    case 1:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v13 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      goto LABEL_20;
    case 0:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
LABEL_20:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *assignWithCopy for TranscriptProtoActionRequirementEnum(void *a1, void *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_2536FA73C();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v11 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v11))
      {
        uint64_t v12 = sub_253462A5C(&qword_269CE0490);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_20:
        uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
        uint64_t v34 = (char *)a1 + v33;
        uint64_t v35 = (char *)a2 + v33;
        uint64_t v36 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        goto LABEL_21;
      }
      int v17 = swift_getEnumCaseMultiPayload();
      if (v17 == 1)
      {
        uint64_t v23 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v23))
        {
          uint64_t v24 = sub_253462A5C(&qword_269CE0488);
          memcpy(a1, a2, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v25 = *(int *)(v23 + 20);
          uint64_t v26 = (char *)a1 + v25;
          uint64_t v27 = (char *)a2 + v25;
          uint64_t v28 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v23);
        }
        uint64_t v29 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
        uint64_t v30 = (char *)a1 + v29;
        uint64_t v31 = (char *)a2 + v29;
        uint64_t v32 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      }
      else
      {
        if (v17)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_19:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v11);
          goto LABEL_20;
        }
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        uint64_t v21 = sub_253B07160();
        uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        v22(v19, v20, v21);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_19;
    case 1:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v13 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      goto LABEL_21;
    case 0:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
LABEL_21:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

unsigned char *initializeWithTake for TranscriptProtoActionRequirementEnum(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v11 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v11))
      {
        uint64_t v12 = sub_253462A5C(&qword_269CE0490);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_19:
        uint64_t v32 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
        uint64_t v33 = &a1[v32];
        uint64_t v34 = &a2[v32];
        uint64_t v35 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
        goto LABEL_20;
      }
      int v17 = swift_getEnumCaseMultiPayload();
      if (v17 == 1)
      {
        uint64_t v22 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v22))
        {
          uint64_t v23 = sub_253462A5C(&qword_269CE0488);
          memcpy(a1, a2, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v24 = *(int *)(v22 + 20);
          uint64_t v25 = &a1[v24];
          uint64_t v26 = &a2[v24];
          uint64_t v27 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v22);
        }
        uint64_t v28 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
        uint64_t v29 = &a1[v28];
        uint64_t v30 = &a2[v28];
        uint64_t v31 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
      }
      else
      {
        if (v17)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_18:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v11);
          goto LABEL_19;
        }
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
        uint64_t v19 = &a1[v18];
        uint64_t v20 = &a2[v18];
        uint64_t v21 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_18;
    case 1:
      *a1 = *a2;
      uint64_t v13 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      goto LABEL_20;
    case 0:
      *a1 = *a2;
      uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
LABEL_20:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

unsigned char *assignWithTake for TranscriptProtoActionRequirementEnum(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_2536FA73C();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v11 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v11))
      {
        uint64_t v12 = sub_253462A5C(&qword_269CE0490);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_20:
        uint64_t v32 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
        uint64_t v33 = &a1[v32];
        uint64_t v34 = &a2[v32];
        uint64_t v35 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
        goto LABEL_21;
      }
      int v17 = swift_getEnumCaseMultiPayload();
      if (v17 == 1)
      {
        uint64_t v22 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v22))
        {
          uint64_t v23 = sub_253462A5C(&qword_269CE0488);
          memcpy(a1, a2, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v24 = *(int *)(v22 + 20);
          uint64_t v25 = &a1[v24];
          uint64_t v26 = &a2[v24];
          uint64_t v27 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v22);
        }
        uint64_t v28 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
        uint64_t v29 = &a1[v28];
        uint64_t v30 = &a2[v28];
        uint64_t v31 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
      }
      else
      {
        if (v17)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_19:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v11);
          goto LABEL_20;
        }
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
        uint64_t v19 = &a1[v18];
        uint64_t v20 = &a2[v18];
        uint64_t v21 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_19;
    case 1:
      *a1 = *a2;
      uint64_t v13 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      goto LABEL_21;
    case 0:
      *a1 = *a2;
      uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
LABEL_21:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_253856640()
{
  uint64_t result = type metadata accessor for TranscriptProtoAppRequirement(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TranscriptProtoPermissionRequirement(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for TranscriptProtoSystemRequirementMessage(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoSystemRequirementMessage(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE0490);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_15:
      uint64_t v27 = *(int *)(a3 + 20);
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      uint64_t v30 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      return a1;
    }
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v17 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v17))
      {
        uint64_t v18 = sub_253462A5C(&qword_269CE0488);
        memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v19 = *(int *)(v17 + 20);
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        uint64_t v22 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v17);
      }
      uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_14:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
        goto LABEL_15;
      }
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      uint64_t v12 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_253B07160();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_14;
  }
  uint64_t v9 = *a2;
  *a1 = *a2;
  a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for TranscriptProtoSystemRequirementMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v7))
      {
        uint64_t v8 = a1 + *(int *)(v7 + 20);
        uint64_t v9 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      }
      uint64_t v6 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
    }
    else
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_9;
      }
      swift_bridgeObjectRelease();
      uint64_t v6 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
    }
    uint64_t v10 = a1 + *(int *)(v6 + 20);
    uint64_t v11 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
LABEL_9:
  uint64_t v12 = a1 + *(int *)(a2 + 20);
  uint64_t v13 = sub_253B07160();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
  return v14(v12, v13);
}

void *initializeWithCopy for TranscriptProtoSystemRequirementMessage(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v15))
      {
        uint64_t v16 = sub_253462A5C(&qword_269CE0488);
        memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v17 = *(int *)(v15 + 20);
        uint64_t v18 = (char *)a1 + v17;
        uint64_t v19 = (char *)a2 + v17;
        uint64_t v20 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v15);
      }
      uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_12:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
        goto LABEL_13;
      }
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_253B07160();
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_12;
  }
  uint64_t v7 = sub_253462A5C(&qword_269CE0490);
  memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_13:
  uint64_t v25 = *(int *)(a3 + 20);
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  return a1;
}

void *assignWithCopy for TranscriptProtoSystemRequirementMessage(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v22 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v22))
        {
          uint64_t v23 = sub_253462A5C(&qword_269CE0488);
          memcpy(a1, a2, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v26 = *(int *)(v22 + 20);
          uint64_t v27 = (char *)a1 + v26;
          uint64_t v28 = (char *)a2 + v26;
          uint64_t v29 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v22);
        }
        uint64_t v30 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
        uint64_t v31 = (char *)a1 + v30;
        uint64_t v32 = (char *)a2 + v30;
        uint64_t v33 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_23:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
          goto LABEL_24;
        }
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = sub_253B07160();
        uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        v14(v11, v12, v13);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2) {
        goto LABEL_24;
      }
      sub_2536FA73C();
      int v16 = swift_getEnumCaseMultiPayload();
      if (v16 == 1)
      {
        uint64_t v24 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v24))
        {
          uint64_t v25 = sub_253462A5C(&qword_269CE0488);
          memcpy(a1, a2, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v39 = *(int *)(v24 + 20);
          uint64_t v40 = (char *)a1 + v39;
          uint64_t v41 = (char *)a2 + v39;
          uint64_t v42 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v24);
        }
        uint64_t v43 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
        uint64_t v44 = (char *)a1 + v43;
        uint64_t v45 = (char *)a2 + v43;
        uint64_t v46 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
      }
      else
      {
        if (v16)
        {
          size_t v15 = *(void *)(*(void *)(v6 - 8) + 64);
          goto LABEL_9;
        }
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v17 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
        uint64_t v18 = (char *)a1 + v17;
        uint64_t v19 = (char *)a2 + v17;
        uint64_t v20 = sub_253B07160();
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v18, v19, v20);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
    }
    sub_2536FA73C();
  }
  size_t v15 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE0490) - 8) + 64);
LABEL_9:
  memcpy(a1, a2, v15);
LABEL_24:
  uint64_t v34 = *(int *)(a3 + 20);
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 24))(v35, v36, v37);
  return a1;
}

unsigned char *initializeWithTake for TranscriptProtoSystemRequirementMessage(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v13 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v13))
      {
        uint64_t v14 = sub_253462A5C(&qword_269CE0488);
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v15 = *(int *)(v13 + 20);
        int v16 = &a1[v15];
        uint64_t v17 = &a2[v15];
        uint64_t v18 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v13);
      }
      uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v22 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_12:
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
        goto LABEL_13;
      }
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      uint64_t v12 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_12;
  }
  uint64_t v7 = sub_253462A5C(&qword_269CE0490);
  memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_13:
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

unsigned char *assignWithTake for TranscriptProtoSystemRequirementMessage(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v20 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v20))
        {
          uint64_t v21 = sub_253462A5C(&qword_269CE0488);
          memcpy(a1, a2, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v24 = *(int *)(v20 + 20);
          uint64_t v25 = &a1[v24];
          uint64_t v26 = &a2[v24];
          uint64_t v27 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v20);
        }
        uint64_t v28 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
        uint64_t v29 = &a1[v28];
        uint64_t v30 = &a2[v28];
        uint64_t v31 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_23:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
          goto LABEL_24;
        }
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
        uint64_t v11 = &a1[v10];
        uint64_t v12 = &a2[v10];
        uint64_t v13 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2) {
        goto LABEL_24;
      }
      sub_2536FA73C();
      int v15 = swift_getEnumCaseMultiPayload();
      if (v15 == 1)
      {
        uint64_t v22 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v22))
        {
          uint64_t v23 = sub_253462A5C(&qword_269CE0488);
          memcpy(a1, a2, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v37 = *(int *)(v22 + 20);
          uint64_t v38 = &a1[v37];
          uint64_t v39 = &a2[v37];
          uint64_t v40 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v22);
        }
        uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
        uint64_t v42 = &a1[v41];
        uint64_t v43 = &a2[v41];
        uint64_t v44 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
      }
      else
      {
        if (v15)
        {
          size_t v14 = *(void *)(*(void *)(v6 - 8) + 64);
          goto LABEL_9;
        }
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
        uint64_t v17 = &a1[v16];
        uint64_t v18 = &a2[v16];
        uint64_t v19 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
    }
    sub_2536FA73C();
  }
  size_t v14 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE0490) - 8) + 64);
LABEL_9:
  memcpy(a1, a2, v14);
LABEL_24:
  uint64_t v32 = *(int *)(a3 + 20);
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v35 - 8) + 40))(v33, v34, v35);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemRequirementMessage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253857ADC);
}

uint64_t sub_253857ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE0490);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemRequirementMessage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253857AFC);
}

uint64_t sub_253857AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE0490);
}

void sub_253857B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoSystemRequirementMessageEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v15))
      {
        uint64_t v16 = sub_253462A5C(&qword_269CE0488);
        memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v17 = *(int *)(v15 + 20);
        uint64_t v18 = (char *)a1 + v17;
        uint64_t v19 = (char *)a2 + v17;
        uint64_t v20 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v15);
      }
      uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      goto LABEL_11;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_253B07160();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t destroy for TranscriptProtoSystemRequirementMessageEnum(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v4 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
    {
      uint64_t v5 = a1 + *(int *)(v4 + 20);
      uint64_t v6 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    }
    uint64_t v3 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
  }
  else
  {
    if (result) {
      return result;
    }
    swift_bridgeObjectRelease();
    uint64_t v3 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
  }
  uint64_t v7 = a1 + *(int *)(v3 + 20);
  uint64_t v8 = sub_253B07160();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  return v9(v7, v8);
}

void *initializeWithCopy for TranscriptProtoSystemRequirementMessageEnum(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v13 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v13))
    {
      uint64_t v14 = sub_253462A5C(&qword_269CE0488);
      memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v15 = *(int *)(v13 + 20);
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v13);
    }
    uint64_t v19 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    goto LABEL_9;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_253B07160();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *assignWithCopy for TranscriptProtoSystemRequirementMessageEnum(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v12 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v12))
      {
        uint64_t v13 = sub_253462A5C(&qword_269CE0488);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v14 = *(int *)(v12 + 20);
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v12);
      }
      uint64_t v18 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_253B07160();
      uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
      swift_bridgeObjectRetain();
      v11(v8, v9, v10);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *initializeWithTake for TranscriptProtoSystemRequirementMessageEnum(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v11 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CE0488);
      memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v13 = *(int *)(v11 + 20);
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v11);
    }
    uint64_t v17 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
    goto LABEL_9;
  }
  if (!EnumCaseMultiPayload)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

unsigned char *assignWithTake for TranscriptProtoSystemRequirementMessageEnum(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2536FA73C();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v11))
      {
        uint64_t v12 = sub_253462A5C(&qword_269CE0488);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v13 = *(int *)(v11 + 20);
        uint64_t v14 = &a1[v13];
        uint64_t v15 = &a2[v13];
        uint64_t v16 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v11);
      }
      uint64_t v17 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2538586C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2538586EC(a1, a2, a3, (uint64_t)type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest);
}

uint64_t sub_2538586EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = sub_2539461BC();
  uint64_t result = v7(v6);
  if (v9 <= 0x3F)
  {
    uint64_t v10 = sub_253945F00();
    uint64_t result = a5(v10);
    if (v11 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return sub_2535E2578();
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemRequirementProtectedAppRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538587C4);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemRequirementProtectedAppRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2538587DC);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoSystemRequirementAuthenticationRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE0488);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v10 = *(int *)(v7 + 20);
      unint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v14 = *(int *)(a3 + 20);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoSystemRequirementAuthenticationRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    uint64_t v5 = a1 + *(int *)(v4 + 20);
    uint64_t v6 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = sub_253B07160();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  return v9(v7, v8);
}

unsigned char *initializeWithCopy for TranscriptProtoSystemRequirementAuthenticationRequest(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE0488);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v8 = *(int *)(v6 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

unsigned char *assignWithCopy for TranscriptProtoSystemRequirementAuthenticationRequest(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      uint64_t v19 = *(int *)(v6 + 20);
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v22 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v13 = sub_253462A5C(&qword_269CE0488);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  uint64_t v9 = *(int *)(v6 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

unsigned char *initializeWithTake for TranscriptProtoSystemRequirementAuthenticationRequest(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE0488);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v8 = *(int *)(v6 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_253B07160();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

unsigned char *assignWithTake for TranscriptProtoSystemRequirementAuthenticationRequest(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      uint64_t v19 = *(int *)(v6 + 20);
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v22 = sub_253B07160();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v13 = sub_253462A5C(&qword_269CE0488);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  uint64_t v9 = *(int *)(v6 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemRequirementAuthenticationRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25385904C);
}

uint64_t sub_25385904C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE0488);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemRequirementAuthenticationRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25385906C);
}

uint64_t sub_25385906C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE0488);
}

void sub_253859078(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538590AC);
}

uint64_t sub_2538590AC(unsigned __int8 *a1, int a2)
{
  if (a2 == 253)
  {
    if (*a1 <= 2u) {
      int v3 = 2;
    }
    else {
      int v3 = *a1;
    }
    unsigned int v4 = v3 - 2;
    if (*a1 >= 2u) {
      return v4;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_2535E22D4();
    uint64_t v6 = sub_2535E22C8(*(int *)(v2 + 20));
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, v7, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25385913C);
}

void sub_25385913C()
{
  sub_253945ADC();
  if (v3)
  {
    *unint64_t v1 = v0 + 2;
  }
  else
  {
    sub_2535E235C();
    uint64_t v4 = sub_2535E2234(*(int *)(v2 + 20));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, v5, v6, v7);
  }
}

uint64_t sub_2538591A0()
{
  return sub_25393E9BC();
}

unsigned char *_s30IntelligenceFlowPlannerSupport76TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevelEnumOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)sub_2534DA378((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)sub_2534DA360((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253859268);
      case 4:
        uint64_t result = (unsigned char *)sub_2534DA368((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = sub_2534DA370(result, a2 + 1);
        break;
    }
  }
  return result;
}

void type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevelEnum()
{
}

uint64_t getEnumTagSinglePayload for TranscriptProtoAppRequirement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2538592B0);
}

uint64_t sub_2538592B0(unsigned __int8 *a1, int a2)
{
  if (a2 == 252)
  {
    if (*a1 <= 3u) {
      int v3 = 3;
    }
    else {
      int v3 = *a1;
    }
    unsigned int v4 = v3 - 3;
    if (*a1 >= 3u) {
      return v4;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_2535E22D4();
    uint64_t v6 = sub_2535E22C8(*(int *)(v2 + 20));
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, v7, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoAppRequirement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253859340);
}

void sub_253859340()
{
  sub_2534DA0C4();
  if (v3 == 252)
  {
    *unint64_t v1 = v0 + 3;
  }
  else
  {
    sub_2535E235C();
    uint64_t v4 = sub_2535E2234(*(int *)(v2 + 20));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, v5, v6, v7);
  }
}

uint64_t sub_2538593A8()
{
  return sub_25393E9BC();
}

void type metadata accessor for TranscriptProtoAppRequirementEnum()
{
}

unsigned char *_s30IntelligenceFlowPlannerSupport67TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSourceVwca_0(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  sub_253944340();
  sub_25346CAF4();
  sub_253944540();
  v3();
  return a1;
}

unsigned char *_s30IntelligenceFlowPlannerSupport67TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSourceVwta_0(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  sub_253944340();
  sub_25346CAF4();
  sub_253944534();
  v3();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPermissionRequirement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253859494);
}

uint64_t sub_253859494(unsigned __int8 *a1, int a2)
{
  if (a2 == 247)
  {
    if (*a1 <= 8u) {
      int v3 = 8;
    }
    else {
      int v3 = *a1;
    }
    unsigned int v4 = v3 - 8;
    if (*a1 >= 8u) {
      return v4;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_2535E22D4();
    uint64_t v6 = sub_2535E22C8(*(int *)(v2 + 20));
    return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, v7, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPermissionRequirement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253859524);
}

void sub_253859524()
{
  sub_2534DA0C4();
  if (v3 == 247)
  {
    *unint64_t v1 = v0 + 8;
  }
  else
  {
    sub_2535E235C();
    uint64_t v4 = sub_2535E2234(*(int *)(v2 + 20));
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v4, v5, v6, v7);
  }
}

uint64_t sub_25385958C()
{
  return sub_25393E9BC();
}

uint64_t _s30IntelligenceFlowPlannerSupport9CandidateV6SourceOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_2534DA394(-1);
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_2534DA394((*a1 | (v4 << 8)) - 8);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_2534DA394((*a1 | (v4 << 8)) - 8);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_2534DA394((*a1 | (v4 << 8)) - 8);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return sub_2534DA394(v8);
}

unsigned char *_s30IntelligenceFlowPlannerSupport40TranscriptProtoPermissionRequirementEnumOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)sub_2534DA378((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)sub_2534DA360((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2538596D8);
      case 4:
        uint64_t result = (unsigned char *)sub_2534DA368((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = sub_2534DA370(result, a2 + 7);
        break;
    }
  }
  return result;
}

void type metadata accessor for TranscriptProtoPermissionRequirementEnum()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoActionFailure(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE04A8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v10))
      {
        uint64_t v11 = sub_253462A5C(&qword_269CE04A0);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        uint64_t v12 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v12))
        {
          memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
        }
        else
        {
          uint64_t v13 = a2[1];
          *a1 = *a2;
          a1[1] = v13;
          uint64_t v14 = a2[3];
          a1[2] = a2[2];
          a1[3] = v14;
          a1[4] = a2[4];
          uint64_t v15 = *(int *)(v12 + 28);
          uint64_t v27 = (char *)a2 + v15;
          uint64_t v28 = (char *)a1 + v15;
          uint64_t v16 = sub_253B07160();
          uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v26(v28, v27, v16);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v12);
        }
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v10);
      }
      uint64_t v17 = *(int *)(v7 + 20);
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v21 = *(int *)(a3 + 20);
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoActionFailure(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    uint64_t v5 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v5))
    {
      uint64_t v6 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 16, v6))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v7 = a1 + *(int *)(v6 + 28);
        uint64_t v8 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
      }
    }
    uint64_t v9 = a1 + *(int *)(v4 + 20);
    uint64_t v10 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  uint64_t v11 = a1 + *(int *)(a2 + 20);
  uint64_t v12 = sub_253B07160();
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  return v13(v11, v12);
}

void *initializeWithCopy for TranscriptProtoActionFailure(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE04A8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v8))
    {
      uint64_t v9 = sub_253462A5C(&qword_269CE04A0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v10))
      {
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        uint64_t v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        uint64_t v12 = a2[3];
        a1[2] = a2[2];
        a1[3] = v12;
        a1[4] = a2[4];
        uint64_t v13 = *(int *)(v10 + 28);
        uint64_t v25 = (char *)a2 + v13;
        uint64_t v26 = (char *)a1 + v13;
        uint64_t v14 = sub_253B07160();
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v24(v26, v25, v14);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v10);
      }
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v8);
    }
    uint64_t v15 = *(int *)(v6 + 20);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

void *assignWithCopy for TranscriptProtoActionFailure(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v12);
    int v14 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        uint64_t v15 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v15))
        {
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          a1[3] = a2[3];
          a1[4] = a2[4];
          uint64_t v33 = *(int *)(v15 + 28);
          uint64_t v52 = (char *)a2 + v33;
          uint64_t v55 = (char *)a1 + v33;
          uint64_t v34 = sub_253B07160();
          uint64_t v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v49(v55, v52, v34);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v15);
        }
        uint64_t v30 = (uint64_t)a1;
        uint64_t v31 = 1;
        uint64_t v32 = v12;
        goto LABEL_26;
      }
    }
    else
    {
      if (!v14)
      {
        uint64_t v24 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
        int v25 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 16, v24);
        int v26 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v24);
        if (v25)
        {
          if (!v26)
          {
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            a1[3] = a2[3];
            a1[4] = a2[4];
            uint64_t v27 = *(int *)(v24 + 28);
            uint64_t v51 = (char *)a2 + v27;
            uint64_t v54 = (char *)a1 + v27;
            uint64_t v28 = sub_253B07160();
            uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v29(v54, v51, v28);
            uint64_t v30 = (uint64_t)a1;
            uint64_t v31 = 16;
            uint64_t v32 = v24;
LABEL_26:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v30, 0, v31, v32);
            goto LABEL_27;
          }
        }
        else
        {
          if (!v26)
          {
            *a1 = *a2;
            a1[1] = a2[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            a1[2] = a2[2];
            a1[3] = a2[3];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            a1[4] = a2[4];
            uint64_t v44 = *(int *)(v24 + 28);
            uint64_t v45 = (char *)a1 + v44;
            uint64_t v46 = (char *)a2 + v44;
            uint64_t v47 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 24))(v45, v46, v47);
            goto LABEL_27;
          }
          sub_2536FA73C();
        }
        size_t v17 = *(void *)(*(void *)(v12 - 8) + 64);
LABEL_17:
        memcpy(a1, a2, v17);
LABEL_27:
        uint64_t v35 = *(int *)(v6 + 20);
        uint64_t v36 = (char *)a1 + v35;
        uint64_t v37 = (char *)a2 + v35;
        uint64_t v38 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
        goto LABEL_28;
      }
      sub_2536FA73C();
    }
    size_t v17 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE04A0) - 8) + 64);
    goto LABEL_17;
  }
  if (v8)
  {
LABEL_7:
    uint64_t v11 = sub_253462A5C(&qword_269CE04A8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_28;
  }
  uint64_t v9 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE04A0);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v16 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v16))
    {
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      uint64_t v18 = *(int *)(v16 + 28);
      uint64_t v50 = (char *)a2 + v18;
      uint64_t v53 = (char *)a1 + v18;
      uint64_t v19 = sub_253B07160();
      uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v48(v53, v50, v19);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v16);
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v9);
  }
  uint64_t v20 = *(int *)(v6 + 20);
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_28:
  uint64_t v39 = *(int *)(a3 + 20);
  uint64_t v40 = (char *)a1 + v39;
  uint64_t v41 = (char *)a2 + v39;
  uint64_t v42 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoActionFailure(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE04A8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v8))
    {
      uint64_t v9 = sub_253462A5C(&qword_269CE04A0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v10))
      {
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        long long v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        *((void *)a1 + 4) = *((void *)a2 + 4);
        uint64_t v12 = *(int *)(v10 + 28);
        int v13 = (char *)a1 + v12;
        int v14 = (char *)a2 + v12;
        uint64_t v15 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v10);
      }
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v8);
    }
    uint64_t v16 = *(int *)(v6 + 20);
    size_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v20 = *(int *)(a3 + 20);
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  return a1;
}

_OWORD *assignWithTake for TranscriptProtoActionFailure(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v12);
    int v14 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        uint64_t v15 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v15))
        {
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          long long v38 = a2[1];
          *a1 = *a2;
          a1[1] = v38;
          *((void *)a1 + 4) = *((void *)a2 + 4);
          uint64_t v39 = *(int *)(v15 + 28);
          uint64_t v40 = (char *)a1 + v39;
          uint64_t v41 = (char *)a2 + v39;
          uint64_t v42 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v15);
        }
        uint64_t v35 = (uint64_t)a1;
        uint64_t v36 = 1;
        uint64_t v37 = v12;
        goto LABEL_26;
      }
    }
    else
    {
      if (!v14)
      {
        uint64_t v27 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
        int v28 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 16, v27);
        int v29 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v27);
        if (v28)
        {
          if (!v29)
          {
            long long v30 = a2[1];
            *a1 = *a2;
            a1[1] = v30;
            *((void *)a1 + 4) = *((void *)a2 + 4);
            uint64_t v31 = *(int *)(v27 + 28);
            uint64_t v32 = (char *)a1 + v31;
            uint64_t v33 = (char *)a2 + v31;
            uint64_t v34 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
            uint64_t v35 = (uint64_t)a1;
            uint64_t v36 = 16;
            uint64_t v37 = v27;
LABEL_26:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v35, 0, v36, v37);
            goto LABEL_27;
          }
        }
        else
        {
          if (!v29)
          {
            uint64_t v52 = *((void *)a2 + 1);
            *(void *)a1 = *(void *)a2;
            *((void *)a1 + 1) = v52;
            swift_bridgeObjectRelease();
            uint64_t v53 = *((void *)a2 + 3);
            *((void *)a1 + 2) = *((void *)a2 + 2);
            *((void *)a1 + 3) = v53;
            swift_bridgeObjectRelease();
            *((void *)a1 + 4) = *((void *)a2 + 4);
            uint64_t v54 = *(int *)(v27 + 28);
            uint64_t v55 = (char *)a1 + v54;
            uint64_t v56 = (char *)a2 + v54;
            uint64_t v57 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 40))(v55, v56, v57);
            goto LABEL_27;
          }
          sub_2536FA73C();
        }
        size_t v17 = *(void *)(*(void *)(v12 - 8) + 64);
LABEL_17:
        memcpy(a1, a2, v17);
LABEL_27:
        uint64_t v43 = *(int *)(v6 + 20);
        uint64_t v44 = (char *)a1 + v43;
        uint64_t v45 = (char *)a2 + v43;
        uint64_t v46 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
        goto LABEL_28;
      }
      sub_2536FA73C();
    }
    size_t v17 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE04A0) - 8) + 64);
    goto LABEL_17;
  }
  if (v8)
  {
LABEL_7:
    uint64_t v11 = sub_253462A5C(&qword_269CE04A8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_28;
  }
  uint64_t v9 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE04A0);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v16 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v16))
    {
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      long long v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      uint64_t v19 = *(int *)(v16 + 28);
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v16);
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v9);
  }
  uint64_t v23 = *(int *)(v6 + 20);
  uint64_t v24 = (char *)a1 + v23;
  int v25 = (char *)a2 + v23;
  uint64_t v26 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_28:
  uint64_t v47 = *(int *)(a3 + 20);
  uint64_t v48 = (char *)a1 + v47;
  uint64_t v49 = (char *)a2 + v47;
  uint64_t v50 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionFailure(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25385ABD8);
}

uint64_t sub_25385ABD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE04A8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionFailure(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25385ABF8);
}

uint64_t sub_25385ABF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE04A8);
}

void sub_25385AC04(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoActionFailureFailure(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE04A0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v10))
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        uint64_t v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        uint64_t v12 = a2[3];
        a1[2] = a2[2];
        a1[3] = v12;
        a1[4] = a2[4];
        uint64_t v13 = *(int *)(v10 + 28);
        uint64_t v21 = (char *)a2 + v13;
        uint64_t v22 = (char *)a1 + v13;
        uint64_t v14 = sub_253B07160();
        uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v15(v22, v21, v14);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v10);
      }
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v16 = *(int *)(a3 + 20);
    size_t v17 = (char *)a1 + v16;
    long long v18 = (char *)a2 + v16;
    uint64_t v19 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoActionFailureFailure(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    uint64_t v5 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 16, v5))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = a1 + *(int *)(v5 + 28);
      uint64_t v7 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    }
  }
  uint64_t v8 = a1 + *(int *)(a2 + 20);
  uint64_t v9 = sub_253B07160();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  return v10(v8, v9);
}

void *initializeWithCopy for TranscriptProtoActionFailureFailure(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE04A0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v8))
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      a1[4] = a2[4];
      uint64_t v11 = *(int *)(v8 + 28);
      uint64_t v19 = (char *)a2 + v11;
      uint64_t v20 = (char *)a1 + v11;
      uint64_t v12 = sub_253B07160();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13(v20, v19, v12);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v8);
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

void *assignWithCopy for TranscriptProtoActionFailureFailure(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v9))
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        uint64_t v21 = *(int *)(v9 + 28);
        uint64_t v33 = (char *)a2 + v21;
        uint64_t v35 = (char *)a1 + v21;
        uint64_t v22 = sub_253B07160();
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v23(v35, v33, v22);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v9);
      }
      uint64_t v18 = (uint64_t)a1;
      uint64_t v19 = 1;
      uint64_t v20 = v6;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_2536FA73C();
LABEL_7:
    size_t v10 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE04A0) - 8) + 64);
    goto LABEL_8;
  }
  uint64_t v11 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 16, v11);
  int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v11);
  if (v12)
  {
    if (!v13)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      uint64_t v14 = *(int *)(v11 + 28);
      uint64_t v34 = (char *)a1 + v14;
      uint64_t v15 = (char *)a2 + v14;
      uint64_t v16 = sub_253B07160();
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17(v34, v15, v16);
      uint64_t v18 = (uint64_t)a1;
      uint64_t v19 = 16;
      uint64_t v20 = v11;
LABEL_14:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v18, 0, v19, v20);
      goto LABEL_15;
    }
  }
  else
  {
    if (!v13)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      uint64_t v29 = *(int *)(v11 + 28);
      long long v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)a2 + v29;
      uint64_t v32 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 24))(v30, v31, v32);
      goto LABEL_15;
    }
    sub_2536FA73C();
  }
  size_t v10 = *(void *)(*(void *)(v6 - 8) + 64);
LABEL_8:
  memcpy(a1, a2, v10);
LABEL_15:
  uint64_t v24 = *(int *)(a3 + 20);
  int v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 24))(v25, v26, v27);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoActionFailureFailure(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE04A0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v8))
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      long long v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      uint64_t v10 = *(int *)(v8 + 28);
      uint64_t v11 = (char *)a1 + v10;
      int v12 = (char *)a2 + v10;
      uint64_t v13 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v8);
    }
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

_OWORD *assignWithTake for TranscriptProtoActionFailureFailure(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v9))
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        long long v22 = a2[1];
        *a1 = *a2;
        a1[1] = v22;
        *((void *)a1 + 4) = *((void *)a2 + 4);
        uint64_t v23 = *(int *)(v9 + 28);
        uint64_t v24 = (char *)a1 + v23;
        int v25 = (char *)a2 + v23;
        uint64_t v26 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v9);
      }
      uint64_t v19 = (uint64_t)a1;
      uint64_t v20 = 1;
      uint64_t v21 = v6;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_2536FA73C();
LABEL_7:
    size_t v10 = *(void *)(*(void *)(sub_253462A5C(&qword_269CE04A0) - 8) + 64);
    goto LABEL_8;
  }
  uint64_t v11 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 16, v11);
  int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v11);
  if (v12)
  {
    if (!v13)
    {
      long long v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      uint64_t v15 = *(int *)(v11 + 28);
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      uint64_t v19 = (uint64_t)a1;
      uint64_t v20 = 16;
      uint64_t v21 = v11;
LABEL_14:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v19, 0, v20, v21);
      goto LABEL_15;
    }
  }
  else
  {
    if (!v13)
    {
      uint64_t v32 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v32;
      swift_bridgeObjectRelease();
      uint64_t v33 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v33;
      swift_bridgeObjectRelease();
      *((void *)a1 + 4) = *((void *)a2 + 4);
      uint64_t v34 = *(int *)(v11 + 28);
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      uint64_t v37 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 40))(v35, v36, v37);
      goto LABEL_15;
    }
    sub_2536FA73C();
  }
  size_t v10 = *(void *)(*(void *)(v6 - 8) + 64);
LABEL_8:
  memcpy(a1, a2, v10);
LABEL_15:
  uint64_t v27 = *(int *)(a3 + 20);
  int v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionFailureFailure(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25385B9B4);
}

uint64_t sub_25385B9B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE04A0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionFailureFailure(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25385B9D4);
}

uint64_t sub_25385B9D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE04A0);
}

void sub_25385B9E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoActionFailureFailureEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      a1[4] = a2[4];
      uint64_t v11 = *(int *)(v7 + 28);
      int v12 = (char *)a1 + v11;
      int v13 = (char *)a2 + v11;
      uint64_t v14 = sub_253B07160();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v7);
    }
  }
  return a1;
}

uint64_t destroy for TranscriptProtoActionFailureFailureEnum(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  uint64_t result = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 16, v2);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + *(int *)(v2 + 28);
    uint64_t v5 = sub_253B07160();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  return result;
}

void *initializeWithCopy for TranscriptProtoActionFailureFailureEnum(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    a1[4] = a2[4];
    uint64_t v9 = *(int *)(v6 + 28);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_253B07160();
    int v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v6);
  }
  return a1;
}

void *assignWithCopy for TranscriptProtoActionFailureFailureEnum(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 16, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v6);
  if (!v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      uint64_t v15 = *(int *)(v6 + 28);
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
      return a1;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  uint64_t v9 = *(int *)(v6 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_253B07160();
  int v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v6);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoActionFailureFailureEnum(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    long long v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    *((void *)a1 + 4) = *((void *)a2 + 4);
    uint64_t v8 = *(int *)(v6 + 28);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v6);
  }
  return a1;
}

void *assignWithTake for TranscriptProtoActionFailureFailureEnum(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 16, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v6);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      swift_bridgeObjectRelease();
      uint64_t v16 = a2[3];
      a1[2] = a2[2];
      a1[3] = v16;
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      uint64_t v17 = *(int *)(v6 + 28);
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
      return a1;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  long long v9 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v9;
  a1[4] = a2[4];
  uint64_t v10 = *(int *)(v6 + 28);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionFailureFailureEnum(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25385C198);
}

uint64_t sub_25385C198(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253578A1C();
  uint64_t v5 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(v4);
  unsigned int v6 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v2, a2, v5);
  if (v6 >= 0x11) {
    return v6 - 16;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionFailureFailureEnum(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25385C1F0);
}

uint64_t sub_25385C1F0()
{
  type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  uint64_t v0 = sub_253946310();
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v0, v1, v2, v3);
}

uint64_t sub_25385C244(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 16, v2);
}

uint64_t sub_25385C288(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, a2, 16, v4);
}

uint64_t sub_25385C2D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253852E1C(a1, a2, a3, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoActionFailureDeveloperDefinedError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 28);
    int v8 = (char *)a1 + v7;
    long long v9 = (char *)a2 + v7;
    a1[4] = a2[4];
    uint64_t v10 = sub_253B07160();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for TranscriptProtoActionFailureDeveloperDefinedError(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_253B07160();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for TranscriptProtoActionFailureDeveloperDefinedError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  int v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B07160();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

void *assignWithCopy for TranscriptProtoActionFailureDeveloperDefinedError(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  int v8 = (char *)a2 + v6;
  uint64_t v9 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *assignWithTake for TranscriptProtoActionFailureDeveloperDefinedError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionFailureDeveloperDefinedError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25385C6A0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionFailureDeveloperDefinedError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25385C6B8);
}

uint64_t sub_25385C6BC()
{
  return sub_253942B08();
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoActionSuccess(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    uint64_t v7 = a3[7];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_253B08E50();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
    }
    uint64_t v13 = a3[8];
    uint64_t v14 = (void *)((char *)v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for TranscriptProtoUndoContext(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v16))
    {
      uint64_t v17 = sub_253462A5C(&qword_269CE0450);
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v18 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v18;
      uint64_t v19 = v15[3];
      v14[2] = v15[2];
      v14[3] = v19;
      uint64_t v20 = v15[5];
      v14[4] = v15[4];
      v14[5] = v20;
      uint64_t v21 = *(int *)(v16 + 28);
      uint64_t v58 = (char *)v15 + v21;
      uint64_t v59 = (char *)v14 + v21;
      uint64_t v22 = sub_253B07160();
      uint64_t v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v57(v59, v58, v22);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v14, 0, 1, v16);
    }
    uint64_t v23 = a3[9];
    uint64_t v24 = (void *)((char *)v4 + v23);
    int v25 = (uint64_t *)((char *)a2 + v23);
    uint64_t v26 = type metadata accessor for TranscriptProtoFollowUpAction(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v26))
    {
      uint64_t v27 = sub_253462A5C(&qword_269CE0468);
      memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      uint64_t v28 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v28))
      {
        uint64_t v29 = sub_253462A5C(&qword_269CE0460);
        memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        uint64_t v30 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v30))
        {
          uint64_t v31 = sub_253462A5C(&qword_269CE0458);
          memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          uint64_t v32 = v25[1];
          *uint64_t v24 = *v25;
          v24[1] = v32;
          uint64_t v33 = v25[2];
          unint64_t v34 = v25[3];
          swift_bridgeObjectRetain();
          sub_25348A9C8(v33, v34);
          v24[2] = v33;
          v24[3] = v34;
          v24[4] = v25[4];
          uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
          uint64_t v36 = (char *)v24 + v35;
          uint64_t v37 = (char *)v25 + v35;
          uint64_t v38 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v30);
        }
        uint64_t v39 = *(int *)(v28 + 20);
        uint64_t v40 = (char *)v24 + v39;
        uint64_t v41 = (char *)v25 + v39;
        uint64_t v42 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v28);
      }
      uint64_t v43 = *(int *)(v26 + 20);
      uint64_t v44 = (char *)v24 + v43;
      uint64_t v45 = (char *)v25 + v43;
      uint64_t v46 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v26);
    }
    uint64_t v47 = a3[10];
    uint64_t v48 = a3[11];
    uint64_t v49 = (void *)((char *)v4 + v47);
    uint64_t v50 = (uint64_t *)((char *)a2 + v47);
    uint64_t v51 = v50[1];
    *uint64_t v49 = *v50;
    v49[1] = v51;
    uint64_t v52 = (char *)v4 + v48;
    uint64_t v53 = (uint64_t)a2 + v48;
    uint64_t v54 = sub_253B07160();
    uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16);
    swift_bridgeObjectRetain();
    v55(v52, v53, v54);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoActionSuccess(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = sub_253B08E50();
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + a2[8];
  uint64_t v7 = type metadata accessor for TranscriptProtoUndoContext(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v6 + *(int *)(v7 + 28);
    uint64_t v9 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = a1 + a2[9];
  uint64_t v11 = type metadata accessor for TranscriptProtoFollowUpAction(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, 1, v11))
  {
    uint64_t v12 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, 1, v12))
    {
      uint64_t v13 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v10, 1, v13))
      {
        swift_bridgeObjectRelease();
        sub_253487D84(*(void *)(v10 + 16), *(void *)(v10 + 24));
        uint64_t v14 = v10
            + *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
        uint64_t v15 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
      }
      uint64_t v16 = v10 + *(int *)(v12 + 20);
      uint64_t v17 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    }
    uint64_t v18 = v10 + *(int *)(v11 + 20);
    uint64_t v19 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  }
  swift_bridgeObjectRelease();
  uint64_t v20 = a1 + a2[11];
  uint64_t v21 = sub_253B07160();
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);
  return v22(v20, v21);
}

uint64_t initializeWithCopy for TranscriptProtoActionSuccess(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_253B08E50();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[8];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for TranscriptProtoUndoContext(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_253462A5C(&qword_269CE0450);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v16 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v16;
    uint64_t v17 = v13[3];
    v12[2] = v13[2];
    v12[3] = v17;
    uint64_t v18 = v13[5];
    v12[4] = v13[4];
    v12[5] = v18;
    uint64_t v19 = *(int *)(v14 + 28);
    uint64_t v56 = (char *)v13 + v19;
    uint64_t v57 = (char *)v12 + v19;
    uint64_t v20 = sub_253B07160();
    uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v55(v57, v56, v20);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v21 = a3[9];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = type metadata accessor for TranscriptProtoFollowUpAction(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, v24))
  {
    uint64_t v25 = sub_253462A5C(&qword_269CE0468);
    memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    uint64_t v26 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, v26))
    {
      uint64_t v27 = sub_253462A5C(&qword_269CE0460);
      memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      uint64_t v28 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, v28))
      {
        uint64_t v29 = sub_253462A5C(&qword_269CE0458);
        memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        uint64_t v30 = v23[1];
        *uint64_t v22 = *v23;
        v22[1] = v30;
        uint64_t v31 = v23[2];
        unint64_t v32 = v23[3];
        swift_bridgeObjectRetain();
        sub_25348A9C8(v31, v32);
        v22[2] = v31;
        v22[3] = v32;
        v22[4] = v23[4];
        uint64_t v33 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
        unint64_t v34 = (char *)v22 + v33;
        uint64_t v35 = (char *)v23 + v33;
        uint64_t v36 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v22, 0, 1, v28);
      }
      uint64_t v37 = *(int *)(v26 + 20);
      uint64_t v38 = (char *)v22 + v37;
      uint64_t v39 = (char *)v23 + v37;
      uint64_t v40 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v22, 0, 1, v26);
    }
    uint64_t v41 = *(int *)(v24 + 20);
    uint64_t v42 = (char *)v22 + v41;
    uint64_t v43 = (char *)v23 + v41;
    uint64_t v44 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v22, 0, 1, v24);
  }
  uint64_t v45 = a3[10];
  uint64_t v46 = a3[11];
  uint64_t v47 = (void *)(a1 + v45);
  uint64_t v48 = (void *)(a2 + v45);
  uint64_t v49 = v48[1];
  *uint64_t v47 = *v48;
  v47[1] = v49;
  uint64_t v50 = a1 + v46;
  uint64_t v51 = a2 + v46;
  uint64_t v52 = sub_253B07160();
  uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16);
  swift_bridgeObjectRetain();
  v53(v50, v51, v52);
  return a1;
}

unsigned char *assignWithCopy for TranscriptProtoActionSuccess(unsigned char *a1, unsigned char *a2, int *a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v6 = a3[7];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_253B08E50();
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = v3[8];
  uint64_t v15 = &v5[v14];
  uint64_t v16 = &v4[v14];
  uint64_t v17 = type metadata accessor for TranscriptProtoUndoContext(0);
  int v18 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v17);
  int v19 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v17);
  if (v18)
  {
    if (!v19)
    {
      void *v15 = *v16;
      v15[1] = v16[1];
      v15[2] = v16[2];
      v15[3] = v16[3];
      v15[4] = v16[4];
      v15[5] = v16[5];
      uint64_t v20 = *(int *)(v17 + 28);
      uint64_t v105 = (char *)v16 + v20;
      uint64_t v106 = (char *)v15 + v20;
      uint64_t v21 = sub_253B07160();
      uint64_t v107 = v5;
      uint64_t v22 = v3;
      uint64_t v23 = v4;
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24(v106, v105, v21);
      uint64_t v4 = v23;
      uint64_t v3 = v22;
      uint64_t v5 = v107;
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    sub_2536FA73C();
LABEL_12:
    uint64_t v25 = sub_253462A5C(&qword_269CE0450);
    memcpy(v15, v16, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  void *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[2] = v16[2];
  v15[3] = v16[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[4] = v16[4];
  v15[5] = v16[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = *(int *)(v17 + 28);
  uint64_t v36 = (char *)v15 + v35;
  uint64_t v37 = (char *)v16 + v35;
  uint64_t v38 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
LABEL_13:
  uint64_t v26 = v3[9];
  uint64_t v27 = &v5[v26];
  uint64_t v28 = &v4[v26];
  uint64_t v29 = type metadata accessor for TranscriptProtoFollowUpAction(0);
  int v30 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v29);
  int v31 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v29);
  if (!v30)
  {
    if (v31)
    {
      sub_2536FA73C();
      goto LABEL_19;
    }
    uint64_t v39 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
    int v40 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v39);
    int v41 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v39);
    if (v40)
    {
      if (!v41)
      {
        uint64_t v42 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v42))
        {
          uint64_t v43 = sub_253462A5C(&qword_269CE0458);
          memcpy(v27, v28, *(void *)(*(void *)(v43 - 8) + 64));
        }
        else
        {
          void *v27 = *v28;
          v27[1] = v28[1];
          uint64_t v70 = v28[2];
          unint64_t v71 = v28[3];
          swift_bridgeObjectRetain();
          sub_25348A9C8(v70, v71);
          v27[2] = v70;
          v27[3] = v71;
          v27[4] = v28[4];
          uint64_t v72 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
          uint64_t v73 = (char *)v27 + v72;
          uint64_t v74 = (char *)v28 + v72;
          uint64_t v75 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v73, v74, v75);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v27, 0, 1, v42);
        }
        uint64_t v76 = *(int *)(v39 + 20);
        uint64_t v77 = (char *)v27 + v76;
        uint64_t v78 = (char *)v28 + v76;
        uint64_t v79 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v77, v78, v79);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v27, 0, 1, v39);
        goto LABEL_43;
      }
      goto LABEL_30;
    }
    if (v41)
    {
      sub_2536FA73C();
LABEL_30:
      uint64_t v46 = sub_253462A5C(&qword_269CE0460);
      memcpy(v27, v28, *(void *)(*(void *)(v46 - 8) + 64));
LABEL_43:
      uint64_t v85 = *(int *)(v29 + 20);
      uint64_t v86 = (char *)v27 + v85;
      uint64_t v87 = (char *)v28 + v85;
      uint64_t v88 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 24))(v86, v87, v88);
      goto LABEL_44;
    }
    uint64_t v61 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
    int v62 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v61);
    int v63 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v61);
    if (v62)
    {
      if (!v63)
      {
        void *v27 = *v28;
        v27[1] = v28[1];
        uint64_t v64 = v28[2];
        unint64_t v65 = v28[3];
        swift_bridgeObjectRetain();
        sub_25348A9C8(v64, v65);
        v27[2] = v64;
        v27[3] = v65;
        v27[4] = v28[4];
        uint64_t v66 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
        uint64_t v67 = (char *)v27 + v66;
        uint64_t v68 = (char *)v28 + v66;
        uint64_t v69 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v27, 0, 1, v61);
LABEL_42:
        uint64_t v81 = *(int *)(v39 + 20);
        uint64_t v82 = (char *)v27 + v81;
        uint64_t v83 = (char *)v28 + v81;
        uint64_t v84 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 24))(v82, v83, v84);
        goto LABEL_43;
      }
    }
    else
    {
      if (!v63)
      {
        void *v27 = *v28;
        v27[1] = v28[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v97 = v28[2];
        unint64_t v98 = v28[3];
        sub_25348A9C8(v97, v98);
        uint64_t v99 = v27[2];
        unint64_t v100 = v27[3];
        v27[2] = v97;
        v27[3] = v98;
        sub_253487D84(v99, v100);
        v27[4] = v28[4];
        uint64_t v101 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
        uint64_t v102 = (char *)v27 + v101;
        uint64_t v103 = (char *)v28 + v101;
        uint64_t v104 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 24))(v102, v103, v104);
        goto LABEL_42;
      }
      sub_2536FA73C();
    }
    uint64_t v80 = sub_253462A5C(&qword_269CE0458);
    memcpy(v27, v28, *(void *)(*(void *)(v80 - 8) + 64));
    goto LABEL_42;
  }
  if (v31)
  {
LABEL_19:
    uint64_t v34 = sub_253462A5C(&qword_269CE0468);
    memcpy(v27, v28, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_44;
  }
  uint64_t v32 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v32))
  {
    uint64_t v33 = sub_253462A5C(&qword_269CE0460);
    memcpy(v27, v28, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    uint64_t v44 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v44))
    {
      uint64_t v45 = sub_253462A5C(&qword_269CE0458);
      memcpy(v27, v28, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      void *v27 = *v28;
      v27[1] = v28[1];
      uint64_t v47 = v28[2];
      unint64_t v48 = v28[3];
      swift_bridgeObjectRetain();
      sub_25348A9C8(v47, v48);
      v27[2] = v47;
      v27[3] = v48;
      v27[4] = v28[4];
      uint64_t v49 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
      uint64_t v50 = (char *)v27 + v49;
      uint64_t v51 = (char *)v28 + v49;
      uint64_t v52 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v27, 0, 1, v44);
    }
    uint64_t v53 = *(int *)(v32 + 20);
    uint64_t v54 = (char *)v27 + v53;
    uint64_t v55 = (char *)v28 + v53;
    uint64_t v56 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v27, 0, 1, v32);
  }
  uint64_t v57 = *(int *)(v29 + 20);
  uint64_t v58 = (char *)v27 + v57;
  uint64_t v59 = (char *)v28 + v57;
  uint64_t v60 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v27, 0, 1, v29);
LABEL_44:
  uint64_t v89 = v3[10];
  uint64_t v90 = &v5[v89];
  uint64_t v91 = &v4[v89];
  *uint64_t v90 = *v91;
  v90[1] = v91[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v92 = v3[11];
  uint64_t v93 = &v5[v92];
  uint64_t v94 = &v4[v92];
  uint64_t v95 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v95 - 8) + 24))(v93, v94, v95);
  return v5;
}

uint64_t initializeWithTake for TranscriptProtoActionSuccess(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_253B08E50();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[8];
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  uint64_t v14 = type metadata accessor for TranscriptProtoUndoContext(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_253462A5C(&qword_269CE0450);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    long long v16 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v16;
    v12[2] = v13[2];
    uint64_t v17 = *(int *)(v14 + 28);
    int v18 = (char *)v12 + v17;
    int v19 = (char *)v13 + v17;
    uint64_t v20 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v21 = a3[9];
  uint64_t v22 = (_OWORD *)(a1 + v21);
  uint64_t v23 = (_OWORD *)(a2 + v21);
  uint64_t v24 = type metadata accessor for TranscriptProtoFollowUpAction(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, v24))
  {
    uint64_t v25 = sub_253462A5C(&qword_269CE0468);
    memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    uint64_t v26 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, v26))
    {
      uint64_t v27 = sub_253462A5C(&qword_269CE0460);
      memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      uint64_t v28 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v23, 1, v28))
      {
        uint64_t v29 = sub_253462A5C(&qword_269CE0458);
        memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        long long v30 = v23[1];
        *uint64_t v22 = *v23;
        v22[1] = v30;
        *((void *)v22 + 4) = *((void *)v23 + 4);
        uint64_t v31 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
        uint64_t v32 = (char *)v22 + v31;
        uint64_t v33 = (char *)v23 + v31;
        uint64_t v34 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v22, 0, 1, v28);
      }
      uint64_t v35 = *(int *)(v26 + 20);
      uint64_t v36 = (char *)v22 + v35;
      uint64_t v37 = (char *)v23 + v35;
      uint64_t v38 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v22, 0, 1, v26);
    }
    uint64_t v39 = *(int *)(v24 + 20);
    int v40 = (char *)v22 + v39;
    int v41 = (char *)v23 + v39;
    uint64_t v42 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v22, 0, 1, v24);
  }
  uint64_t v43 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  return a1;
}

unsigned char *assignWithTake for TranscriptProtoActionSuccess(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v6 = a3[7];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_253B08E50();
  int v10 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[8];
  uint64_t v15 = &a1[v14];
  long long v16 = &a2[v14];
  uint64_t v17 = type metadata accessor for TranscriptProtoUndoContext(0);
  int v18 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v15, 1, v17);
  int v19 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v17);
  if (v18)
  {
    if (!v19)
    {
      long long v20 = *((_OWORD *)v16 + 1);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v20;
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
      uint64_t v21 = *(int *)(v17 + 28);
      uint64_t v22 = (char *)v15 + v21;
      uint64_t v23 = (char *)v16 + v21;
      uint64_t v24 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    sub_2536FA73C();
LABEL_12:
    uint64_t v25 = sub_253462A5C(&qword_269CE0450);
    memcpy(v15, v16, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v35 = v16[1];
  void *v15 = *v16;
  v15[1] = v35;
  swift_bridgeObjectRelease();
  uint64_t v36 = v16[3];
  v15[2] = v16[2];
  v15[3] = v36;
  swift_bridgeObjectRelease();
  uint64_t v37 = v16[5];
  v15[4] = v16[4];
  v15[5] = v37;
  swift_bridgeObjectRelease();
  uint64_t v38 = *(int *)(v17 + 28);
  uint64_t v39 = (char *)v15 + v38;
  int v40 = (char *)v16 + v38;
  uint64_t v41 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 40))(v39, v40, v41);
LABEL_13:
  uint64_t v26 = a3[9];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v29 = type metadata accessor for TranscriptProtoFollowUpAction(0);
  int v30 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v29);
  int v31 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v29);
  if (!v30)
  {
    if (v31)
    {
      sub_2536FA73C();
      goto LABEL_19;
    }
    uint64_t v42 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
    int v43 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v42);
    int v44 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v42);
    if (v43)
    {
      if (!v44)
      {
        uint64_t v45 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v45))
        {
          uint64_t v46 = sub_253462A5C(&qword_269CE0458);
          memcpy(v27, v28, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          long long v71 = v28[1];
          _OWORD *v27 = *v28;
          v27[1] = v71;
          *((void *)v27 + 4) = *((void *)v28 + 4);
          uint64_t v72 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
          uint64_t v73 = (char *)v27 + v72;
          uint64_t v74 = (char *)v28 + v72;
          uint64_t v75 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v27, 0, 1, v45);
        }
        uint64_t v76 = *(int *)(v42 + 20);
        uint64_t v77 = (char *)v27 + v76;
        uint64_t v78 = (char *)v28 + v76;
        uint64_t v79 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v27, 0, 1, v42);
        goto LABEL_43;
      }
      goto LABEL_30;
    }
    if (v44)
    {
      sub_2536FA73C();
LABEL_30:
      uint64_t v49 = sub_253462A5C(&qword_269CE0460);
      memcpy(v27, v28, *(void *)(*(void *)(v49 - 8) + 64));
LABEL_43:
      uint64_t v85 = *(int *)(v29 + 20);
      uint64_t v86 = (char *)v27 + v85;
      uint64_t v87 = (char *)v28 + v85;
      uint64_t v88 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 40))(v86, v87, v88);
      goto LABEL_44;
    }
    uint64_t v63 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
    int v64 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v63);
    int v65 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v63);
    if (v64)
    {
      if (!v65)
      {
        long long v66 = v28[1];
        _OWORD *v27 = *v28;
        v27[1] = v66;
        *((void *)v27 + 4) = *((void *)v28 + 4);
        uint64_t v67 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
        uint64_t v68 = (char *)v27 + v67;
        uint64_t v69 = (char *)v28 + v67;
        uint64_t v70 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v27, 0, 1, v63);
LABEL_42:
        uint64_t v81 = *(int *)(v42 + 20);
        uint64_t v82 = (char *)v27 + v81;
        uint64_t v83 = (char *)v28 + v81;
        uint64_t v84 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 40))(v82, v83, v84);
        goto LABEL_43;
      }
    }
    else
    {
      if (!v65)
      {
        uint64_t v99 = *((void *)v28 + 1);
        *(void *)uint64_t v27 = *(void *)v28;
        *((void *)v27 + 1) = v99;
        swift_bridgeObjectRelease();
        uint64_t v100 = *((void *)v27 + 2);
        unint64_t v101 = *((void *)v27 + 3);
        v27[1] = v28[1];
        sub_253487D84(v100, v101);
        *((void *)v27 + 4) = *((void *)v28 + 4);
        uint64_t v102 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
        uint64_t v103 = (char *)v27 + v102;
        uint64_t v104 = (char *)v28 + v102;
        uint64_t v105 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 40))(v103, v104, v105);
        goto LABEL_42;
      }
      sub_2536FA73C();
    }
    uint64_t v80 = sub_253462A5C(&qword_269CE0458);
    memcpy(v27, v28, *(void *)(*(void *)(v80 - 8) + 64));
    goto LABEL_42;
  }
  if (v31)
  {
LABEL_19:
    uint64_t v34 = sub_253462A5C(&qword_269CE0468);
    memcpy(v27, v28, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_44;
  }
  uint64_t v32 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v32))
  {
    uint64_t v33 = sub_253462A5C(&qword_269CE0460);
    memcpy(v27, v28, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    uint64_t v47 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v28, 1, v47))
    {
      uint64_t v48 = sub_253462A5C(&qword_269CE0458);
      memcpy(v27, v28, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      long long v50 = v28[1];
      _OWORD *v27 = *v28;
      v27[1] = v50;
      *((void *)v27 + 4) = *((void *)v28 + 4);
      uint64_t v51 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
      uint64_t v52 = (char *)v27 + v51;
      uint64_t v53 = (char *)v28 + v51;
      uint64_t v54 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v27, 0, 1, v47);
    }
    uint64_t v55 = *(int *)(v32 + 20);
    uint64_t v56 = (char *)v27 + v55;
    uint64_t v57 = (char *)v28 + v55;
    uint64_t v58 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v27, 0, 1, v32);
  }
  uint64_t v59 = *(int *)(v29 + 20);
  uint64_t v60 = (char *)v27 + v59;
  uint64_t v61 = (char *)v28 + v59;
  uint64_t v62 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v27, 0, 1, v29);
LABEL_44:
  uint64_t v89 = a3[10];
  uint64_t v90 = &a1[v89];
  uint64_t v91 = (uint64_t *)&a2[v89];
  uint64_t v93 = *v91;
  uint64_t v92 = v91[1];
  *uint64_t v90 = v93;
  v90[1] = v92;
  swift_bridgeObjectRelease();
  uint64_t v94 = a3[11];
  uint64_t v95 = &a1[v94];
  uint64_t v96 = &a2[v94];
  uint64_t v97 = sub_253B07160();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v97 - 8) + 40))(v95, v96, v97);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionSuccess(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25385EB80);
}

uint64_t sub_25385EB80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2534DA0C4();
  sub_253462A5C(&qword_269CDCBC8);
  sub_2535782A8();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    sub_2535E256C();
  }
  else
  {
    sub_253462A5C(&qword_269CE0450);
    sub_2535782A8();
    if (*(_DWORD *)(v8 + 84) == v3)
    {
      sub_2535E27E4();
    }
    else
    {
      sub_253462A5C(&qword_269CE0468);
      sub_2535782A8();
      if (*(_DWORD *)(v9 + 84) == v3)
      {
        sub_253945148();
      }
      else
      {
        sub_253945F98();
        if (v10) {
          return sub_2535E2258(*(void *)(v4 + *(int *)(a3 + 40) + 8));
        }
        sub_253B07160();
        sub_25394532C();
      }
    }
  }
  uint64_t v12 = sub_2535E22C8(v7);
  return _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v12, v13, v14);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionSuccess(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25385EC80);
}

void sub_25385EC80(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_2534DA0C4();
  sub_253462A5C(&qword_269CDCBC8);
  sub_2535782A8();
  if (*(_DWORD *)(v6 + 84) == a3)
  {
    sub_2535E26E4();
  }
  else
  {
    sub_253462A5C(&qword_269CE0450);
    sub_2535782A8();
    if (*(_DWORD *)(v8 + 84) == a3)
    {
      sub_2535E2830();
    }
    else
    {
      sub_253462A5C(&qword_269CE0468);
      sub_2535782A8();
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        sub_25394519C();
      }
      else
      {
        sub_253945FA4();
        if (v10)
        {
          sub_253945524(*(int *)(a4 + 40));
          return;
        }
        sub_253B07160();
        sub_2539453D4();
      }
    }
  }
  uint64_t v11 = sub_2535E2234(v7);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(v11, v12, v13, v14);
}

void sub_25385ED68()
{
  sub_253760A08(319, &qword_26B24A358, MEMORY[0x263F802B0]);
  if (v0 <= 0x3F)
  {
    sub_253760A08(319, &qword_26B249558, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUndoContext);
    if (v1 <= 0x3F)
    {
      sub_253760A08(319, &qword_26B249758, (void (*)(uint64_t))type metadata accessor for TranscriptProtoFollowUpAction);
      if (v2 <= 0x3F)
      {
        sub_253B07160();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for TranscriptProtoUndoContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25385EF3C);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoUndoContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25385EF54);
}

uint64_t sub_25385EF58()
{
  return sub_253942B08();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoFollowUpAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE0460);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v10))
      {
        uint64_t v11 = sub_253462A5C(&qword_269CE0458);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        uint64_t v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        uint64_t v13 = a2[2];
        unint64_t v14 = a2[3];
        swift_bridgeObjectRetain();
        sub_25348A9C8(v13, v14);
        a1[2] = v13;
        a1[3] = v14;
        a1[4] = a2[4];
        uint64_t v15 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
        long long v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v10);
      }
      uint64_t v19 = *(int *)(v7 + 20);
      long long v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v23 = *(int *)(a3 + 20);
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoFollowUpAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    uint64_t v5 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v5))
    {
      swift_bridgeObjectRelease();
      sub_253487D84(*(void *)(a1 + 16), *(void *)(a1 + 24));
      uint64_t v6 = a1 + *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
      uint64_t v7 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    }
    uint64_t v8 = a1 + *(int *)(v4 + 20);
    uint64_t v9 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = a1 + *(int *)(a2 + 20);
  uint64_t v11 = sub_253B07160();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  return v12(v10, v11);
}

void *initializeWithCopy for TranscriptProtoFollowUpAction(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE0460);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v8))
    {
      uint64_t v9 = sub_253462A5C(&qword_269CE0458);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = a2[2];
      unint64_t v12 = a2[3];
      swift_bridgeObjectRetain();
      sub_25348A9C8(v11, v12);
      a1[2] = v11;
      a1[3] = v12;
      a1[4] = a2[4];
      uint64_t v13 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
      unint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v8);
    }
    uint64_t v17 = *(int *)(v6 + 20);
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v21 = *(int *)(a3 + 20);
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  return a1;
}

void *assignWithCopy for TranscriptProtoFollowUpAction(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v12 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
    int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v12);
    int v14 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v15 = a2[2];
        unint64_t v16 = a2[3];
        swift_bridgeObjectRetain();
        sub_25348A9C8(v15, v16);
        a1[2] = v15;
        a1[3] = v16;
        a1[4] = a2[4];
        uint64_t v17 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
        uint64_t v18 = (char *)a1 + v17;
        uint64_t v19 = (char *)a2 + v17;
        uint64_t v20 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v12);
LABEL_16:
        uint64_t v32 = *(int *)(v6 + 20);
        uint64_t v33 = (char *)a1 + v32;
        uint64_t v34 = (char *)a2 + v32;
        uint64_t v35 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 24))(v33, v34, v35);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v14)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v41 = a2[2];
        unint64_t v42 = a2[3];
        sub_25348A9C8(v41, v42);
        uint64_t v43 = a1[2];
        unint64_t v44 = a1[3];
        a1[2] = v41;
        a1[3] = v42;
        sub_253487D84(v43, v44);
        a1[4] = a2[4];
        uint64_t v45 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
        uint64_t v46 = (char *)a1 + v45;
        uint64_t v47 = (char *)a2 + v45;
        uint64_t v48 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 24))(v46, v47, v48);
        goto LABEL_16;
      }
      sub_2536FA73C();
    }
    uint64_t v31 = sub_253462A5C(&qword_269CE0458);
    memcpy(a1, a2, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_16;
  }
  if (v8)
  {
LABEL_7:
    uint64_t v11 = sub_253462A5C(&qword_269CE0460);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_17;
  }
  uint64_t v9 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE0458);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    a1[1] = a2[1];
    uint64_t v21 = a2[2];
    unint64_t v22 = a2[3];
    swift_bridgeObjectRetain();
    sub_25348A9C8(v21, v22);
    a1[2] = v21;
    a1[3] = v22;
    a1[4] = a2[4];
    uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v9);
  }
  uint64_t v27 = *(int *)(v6 + 20);
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_17:
  uint64_t v36 = *(int *)(a3 + 20);
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 24))(v37, v38, v39);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoFollowUpAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE0460);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v8))
    {
      uint64_t v9 = sub_253462A5C(&qword_269CE0458);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      long long v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
      uint64_t v12 = (char *)a1 + v11;
      int v13 = (char *)a2 + v11;
      uint64_t v14 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v8);
    }
    uint64_t v15 = *(int *)(v6 + 20);
    unint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoFollowUpAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_2536FA73C();
      goto LABEL_7;
    }
    uint64_t v12 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
    int v13 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v12);
    int v14 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        long long v15 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v15;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        uint64_t v16 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
        uint64_t v17 = a1 + v16;
        uint64_t v18 = a2 + v16;
        uint64_t v19 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v12);
LABEL_16:
        uint64_t v30 = *(int *)(v6 + 20);
        uint64_t v31 = a1 + v30;
        uint64_t v32 = a2 + v30;
        uint64_t v33 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v14)
      {
        uint64_t v39 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v39;
        swift_bridgeObjectRelease();
        uint64_t v40 = *(void *)(a1 + 16);
        unint64_t v41 = *(void *)(a1 + 24);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        sub_253487D84(v40, v41);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        uint64_t v42 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
        uint64_t v43 = a1 + v42;
        uint64_t v44 = a2 + v42;
        uint64_t v45 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 40))(v43, v44, v45);
        goto LABEL_16;
      }
      sub_2536FA73C();
    }
    uint64_t v29 = sub_253462A5C(&qword_269CE0458);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_16;
  }
  if (v8)
  {
LABEL_7:
    uint64_t v11 = sub_253462A5C(&qword_269CE0460);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_17;
  }
  uint64_t v9 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CE0458);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    long long v20 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v20;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
    uint64_t v22 = a1 + v21;
    uint64_t v23 = a2 + v21;
    uint64_t v24 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v9);
  }
  uint64_t v25 = *(int *)(v6 + 20);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v6);
LABEL_17:
  uint64_t v34 = *(int *)(a3 + 20);
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 40))(v35, v36, v37);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoFollowUpAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25385FF8C);
}

uint64_t sub_25385FF8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE0460);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoFollowUpAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25385FFAC);
}

uint64_t sub_25385FFAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE0460);
}

void sub_25385FFB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoFollowUpActionExecutableAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE0458);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = a2[2];
      unint64_t v12 = a2[3];
      swift_bridgeObjectRetain();
      sub_25348A9C8(v11, v12);
      a1[2] = v11;
      a1[3] = v12;
      a1[4] = a2[4];
      uint64_t v13 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
      int v14 = (char *)a1 + v13;
      long long v15 = (char *)a2 + v13;
      uint64_t v16 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v17 = *(int *)(a3 + 20);
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoFollowUpActionExecutableAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    sub_253487D84(*(void *)(a1 + 16), *(void *)(a1 + 24));
    uint64_t v5 = a1 + *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
    uint64_t v6 = sub_253B07160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = sub_253B07160();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  return v9(v7, v8);
}

void *initializeWithCopy for TranscriptProtoFollowUpActionExecutableAction(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE0458);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    uint64_t v9 = a2[2];
    unint64_t v10 = a2[3];
    swift_bridgeObjectRetain();
    sub_25348A9C8(v9, v10);
    a1[2] = v9;
    a1[3] = v10;
    a1[4] = a2[4];
    uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
    unint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

void *assignWithCopy for TranscriptProtoFollowUpActionExecutableAction(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v21 = a2[2];
      unint64_t v22 = a2[3];
      sub_25348A9C8(v21, v22);
      uint64_t v23 = a1[2];
      unint64_t v24 = a1[3];
      a1[2] = v21;
      a1[3] = v22;
      sub_253487D84(v23, v24);
      a1[4] = a2[4];
      uint64_t v25 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      uint64_t v28 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v15 = sub_253462A5C(&qword_269CE0458);
    memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v9 = a2[2];
  unint64_t v10 = a2[3];
  swift_bridgeObjectRetain();
  sub_25348A9C8(v9, v10);
  a1[2] = v9;
  a1[3] = v10;
  a1[4] = a2[4];
  uint64_t v11 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
  unint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 20);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoFollowUpActionExecutableAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE0458);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    long long v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    *((void *)a1 + 4) = *((void *)a2 + 4);
    uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
    unint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

void *assignWithTake for TranscriptProtoFollowUpActionExecutableAction(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v20 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v20;
      swift_bridgeObjectRelease();
      uint64_t v21 = a1[2];
      unint64_t v22 = a1[3];
      *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
      sub_253487D84(v21, v22);
      a1[4] = *(void *)(a2 + 32);
      uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
      unint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = a2 + v23;
      uint64_t v26 = sub_253B07160();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_2536FA73C();
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v14 = sub_253462A5C(&qword_269CE0458);
    memcpy(a1, (const void *)a2, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v9;
  a1[4] = *(void *)(a2 + 32);
  uint64_t v10 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_253B07160();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoFollowUpActionExecutableAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253860964);
}

uint64_t sub_253860964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE0458);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoFollowUpActionExecutableAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253860984);
}

uint64_t sub_253860984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE0458);
}

void sub_253860990(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoFollowUpActionExecutableActionEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[2];
    unint64_t v8 = a2[3];
    swift_bridgeObjectRetain();
    sub_25348A9C8(v7, v8);
    a1[2] = v7;
    a1[3] = v8;
    a1[4] = a2[4];
    uint64_t v9 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoFollowUpActionExecutableActionEnum(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_253487D84(*(void *)(a1 + 16), *(void *)(a1 + 24));
  uint64_t v2 = a1 + *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
  uint64_t v3 = sub_253B07160();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

void *initializeWithCopy for TranscriptProtoFollowUpActionExecutableActionEnum(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  swift_bridgeObjectRetain();
  sub_25348A9C8(v5, v6);
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = a2[4];
  uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
  unint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

void *assignWithCopy for TranscriptProtoFollowUpActionExecutableActionEnum(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  sub_25348A9C8(v4, v5);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  a1[2] = v4;
  a1[3] = v5;
  sub_253487D84(v6, v7);
  a1[4] = a2[4];
  uint64_t v8 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoFollowUpActionExecutableActionEnum(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *assignWithTake for TranscriptProtoFollowUpActionExecutableActionEnum(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a1[2];
  unint64_t v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_253487D84(v5, v6);
  a1[4] = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_253B07160();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoFollowUpActionExecutableActionEnum(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0);
  return MEMORY[0x270FA0340](a1, a2, v4, sub_253860E24);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoFollowUpActionExecutableActionEnum(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0);
  return MEMORY[0x270FA0580](a1, a2, a3, v6, sub_253860E90);
}

uint64_t sub_253860E94()
{
  return sub_253860EAC();
}

uint64_t sub_253860EAC()
{
  uint64_t v1 = sub_2539461BC();
  uint64_t result = v2(v1);
  if (v4 <= 0x3F)
  {
    uint64_t v5 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = sub_2535E2578();
    *(_DWORD *)(*(void *)(v0 - 8) + 84) = *(_DWORD *)(v5 + 84);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoFollowUpActionExecutableActionLinkAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[2];
    unint64_t v9 = a2[3];
    swift_bridgeObjectRetain();
    sub_25348A9C8(v8, v9);
    a1[2] = v8;
    a1[3] = v9;
    a1[4] = a2[4];
    uint64_t v10 = *(int *)(a3 + 28);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_253B07160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoFollowUpActionExecutableActionLinkAction(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  sub_253487D84(*(void *)(a1 + 16), *(void *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_253B07160();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for TranscriptProtoFollowUpActionExecutableActionLinkAction(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[2];
  unint64_t v8 = a2[3];
  swift_bridgeObjectRetain();
  sub_25348A9C8(v7, v8);
  a1[2] = v7;
  a1[3] = v8;
  a1[4] = a2[4];
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

void *assignWithCopy for TranscriptProtoFollowUpActionExecutableActionLinkAction(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  sub_25348A9C8(v6, v7);
  uint64_t v8 = a1[2];
  unint64_t v9 = a1[3];
  a1[2] = v6;
  a1[3] = v7;
  sub_253487D84(v8, v9);
  a1[4] = a2[4];
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_253B07160();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t _s30IntelligenceFlowPlannerSupport55TranscriptProtoFollowUpActionExecutableActionLinkActionVwtk_0(_OWORD *a1, uint64_t a2)
{
  sub_253945CB8(a1, a2);
  *(void *)(v4 + 32) = *(void *)(v3 + 32);
  sub_253944360();
  sub_25346CAF4();
  sub_2534D8E14();
  v5();
  return v2;
}

void *assignWithTake for TranscriptProtoFollowUpActionExecutableActionLinkAction(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a1[2];
  unint64_t v8 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_253487D84(v7, v8);
  a1[4] = *(void *)(a2 + 32);
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_253B07160();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoFollowUpActionExecutableActionLinkAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253861358);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoFollowUpActionExecutableActionLinkAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253861370);
}

uint64_t sub_253861374()
{
  return sub_253942B08();
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoParameterConfirmation(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_253B08E50();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253462A5C(&qword_269CDCBC8);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(a3 + 28);
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = sub_253B07160();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return v4;
}

uint64_t initializeWithCopy for TranscriptProtoParameterConfirmation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_253B08E50();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoParameterConfirmation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_253B08E50();
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 28);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoParameterConfirmation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_253B08E50();
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoParameterConfirmation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_253B08E50();
  int v11 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_253462A5C(&qword_269CDCBC8);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 28);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoParameterConfirmation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253861B8C);
}

uint64_t sub_253861B8C()
{
  return sub_253942490();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoParameterConfirmation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253861BAC);
}

void sub_253861BAC()
{
}

void sub_253861BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoParameterDisambiguation(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v10 = sub_253B07160();
    int v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for TranscriptProtoParameterDisambiguation(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_253B07160();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for TranscriptProtoParameterDisambiguation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_253B07160();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoParameterDisambiguation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoParameterDisambiguation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoParameterDisambiguation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_253B07160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoParameterDisambiguation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253862028);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoParameterDisambiguation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253862040);
}

uint64_t sub_253862044()
{
  return sub_253942B08();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoValueDisambiguation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253862078);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoValueDisambiguation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253862090);
}

void *initializeBufferWithCopyOfBuffer for TranscriptProtoStatementOutcome(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253462A5C(&qword_269CE04B0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_81:
      uint64_t v180 = *(int *)(a3 + 20);
      uint64_t v181 = (char *)a1 + v180;
      uint64_t v182 = (char *)a2 + v180;
      uint64_t v183 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v183 - 8) + 16))(v181, v182, v183);
      return a1;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v16 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        uint64_t v17 = *(int *)(v16 + 20);
        uint64_t v18 = (void *)((char *)a1 + v17);
        uint64_t v19 = (void *)((char *)a2 + v17);
        uint64_t v20 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
        {
          uint64_t v21 = sub_253462A5C(&qword_269CE0480);
          memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          uint64_t v68 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v68))
          {
            uint64_t v69 = sub_253462A5C(&qword_269CE0478);
            memcpy(v18, v19, *(void *)(*(void *)(v69 - 8) + 64));
          }
          else
          {
            uint64_t v199 = v68;
            uint64_t v98 = v19[1];
            void *v18 = *v19;
            v18[1] = v98;
            *((unsigned char *)v18 + 16) = *((unsigned char *)v19 + 16);
            uint64_t v192 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
            uint64_t v99 = *(int *)(v192 + 24);
            uint64_t v187 = (char *)v18 + v99;
            uint64_t v100 = (char *)v19 + v99;
            uint64_t v101 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v100, 1, v101))
            {
              uint64_t v102 = sub_253462A5C(&qword_269CE0470);
              memcpy(v187, v100, *(void *)(*(void *)(v102 - 8) + 64));
            }
            else
            {
              unsigned char *v187 = *v100;
              uint64_t v123 = *(int *)(v101 + 20);
              uint64_t v185 = &v187[v123];
              uint64_t v190 = &v100[v123];
              uint64_t v124 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v124 - 8) + 16))(v185, v190, v124);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v187, 0, 1, v101);
            }
            uint64_t v125 = *(int *)(v192 + 28);
            uint64_t v126 = (char *)v18 + v125;
            uint64_t v127 = (char *)v19 + v125;
            uint64_t v128 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 16))(v126, v127, v128);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v199);
          }
          uint64_t v129 = *(int *)(v20 + 20);
          uint64_t v130 = (char *)v18 + v129;
          uint64_t v131 = (char *)v19 + v129;
          uint64_t v132 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 16))(v130, v131, v132);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
        }
        goto LABEL_33;
      case 2u:
        uint64_t v22 = a2[1];
        *a1 = *a2;
        a1[1] = v22;
        uint64_t v23 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
        unint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = sub_253B07160();
        uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        v27(v24, v25, v26);
        goto LABEL_80;
      case 3u:
        uint64_t v28 = a2[1];
        *a1 = *a2;
        a1[1] = v28;
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        uint64_t v29 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        uint64_t v30 = *(int *)(v29 + 24);
        uint64_t v31 = (char *)a1 + v30;
        uint64_t v32 = (char *)a2 + v30;
        uint64_t v33 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v32, 1, v33)) {
          goto LABEL_12;
        }
        goto LABEL_29;
      case 4u:
        uint64_t v35 = a2[1];
        *a1 = *a2;
        a1[1] = v35;
        uint64_t v36 = a2[3];
        a1[2] = a2[2];
        a1[3] = v36;
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v37 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        uint64_t v196 = (char *)a1 + v37;
        uint64_t v38 = (char *)a2 + v37;
        uint64_t v39 = sub_253B07160();
        uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v40(v196, v38, v39);
        goto LABEL_80;
      case 5u:
        uint64_t v41 = a2[1];
        *a1 = *a2;
        a1[1] = v41;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v29 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
        uint64_t v42 = *(int *)(v29 + 24);
        uint64_t v31 = (char *)a1 + v42;
        uint64_t v32 = (char *)a2 + v42;
        uint64_t v33 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v32, 1, v33))
        {
LABEL_12:
          uint64_t v34 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
LABEL_29:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v31, 0, 1, v33);
        }
        uint64_t v70 = *(int *)(v29 + 28);
        long long v71 = (char *)a1 + v70;
        uint64_t v72 = (char *)a2 + v70;
        uint64_t v73 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
        goto LABEL_80;
      case 6u:
        uint64_t v43 = a2[1];
        *a1 = *a2;
        a1[1] = v43;
        uint64_t v16 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        uint64_t v44 = *(int *)(v16 + 20);
        uint64_t v45 = (char *)a1 + v44;
        uint64_t v46 = (char *)a2 + v44;
        uint64_t v47 = sub_253B08E50();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v46, 1, v47))
        {
          uint64_t v48 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v45, 0, 1, v47);
        }
LABEL_33:
        uint64_t v74 = *(int *)(v16 + 24);
        uint64_t v75 = (char *)a1 + v74;
        uint64_t v76 = (char *)a2 + v74;
        uint64_t v77 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v75, v76, v77);
        goto LABEL_80;
      case 7u:
        uint64_t v49 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v49))
        {
          uint64_t v50 = sub_253462A5C(&qword_269CE0498);
          memcpy(a1, a2, *(void *)(*(void *)(v50 - 8) + 64));
          goto LABEL_79;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v107 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
            uint64_t v108 = (char *)a1 + v107;
            uint64_t v109 = (char *)a2 + v107;
            uint64_t v110 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16))(v108, v109, v110);
          }
          else
          {
            if (EnumCaseMultiPayload)
            {
              memcpy(a1, a2, *(void *)(*(void *)(v49 - 8) + 64));
              goto LABEL_78;
            }
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v79 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
            uint64_t v80 = (char *)a1 + v79;
            uint64_t v81 = (char *)a2 + v79;
            uint64_t v82 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16))(v80, v81, v82);
          }
LABEL_77:
          swift_storeEnumTagMultiPayload();
LABEL_78:
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v49);
LABEL_79:
          uint64_t v176 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
          uint64_t v177 = (char *)a1 + v176;
          uint64_t v178 = (char *)a2 + v176;
          uint64_t v179 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 16))(v177, v178, v179);
LABEL_80:
          swift_storeEnumTagMultiPayload();
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v7);
          goto LABEL_81;
        }
        uint64_t v105 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v105))
        {
          uint64_t v106 = sub_253462A5C(&qword_269CE0490);
          memcpy(a1, a2, *(void *)(*(void *)(v106 - 8) + 64));
LABEL_76:
          uint64_t v172 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          long long v173 = (char *)a1 + v172;
          uint64_t v174 = (char *)a2 + v172;
          uint64_t v175 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v175 - 8) + 16))(v173, v174, v175);
          goto LABEL_77;
        }
        int v157 = swift_getEnumCaseMultiPayload();
        if (v157 == 1)
        {
          uint64_t v162 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v162))
          {
            uint64_t v163 = sub_253462A5C(&qword_269CE0488);
            memcpy(a1, a2, *(void *)(*(void *)(v163 - 8) + 64));
          }
          else
          {
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v164 = *(int *)(v162 + 20);
            uint64_t v165 = (char *)a1 + v164;
            uint64_t v166 = (char *)a2 + v164;
            uint64_t v167 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 16))(v165, v166, v167);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v162);
          }
          uint64_t v168 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v169 = (char *)a1 + v168;
          uint64_t v170 = (char *)a2 + v168;
          uint64_t v171 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 16))(v169, v170, v171);
        }
        else
        {
          if (v157)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v105 - 8) + 64));
LABEL_75:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v105);
            goto LABEL_76;
          }
          uint64_t v158 = a2[1];
          *a1 = *a2;
          a1[1] = v158;
          uint64_t v159 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v195 = (char *)a2 + v159;
          long long v202 = (char *)a1 + v159;
          uint64_t v160 = sub_253B07160();
          uint64_t v161 = *(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 16);
          swift_bridgeObjectRetain();
          v161(v202, v195, v160);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_75;
      case 8u:
        uint64_t v51 = a2[1];
        *a1 = *a2;
        a1[1] = v51;
        a1[2] = a2[2];
        uint64_t v52 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        uint64_t v197 = (char *)a1 + v52;
        uint64_t v53 = (char *)a2 + v52;
        uint64_t v54 = sub_253B07160();
        uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v55(v197, v53, v54);
        goto LABEL_80;
      case 9u:
        uint64_t v56 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v56))
        {
          uint64_t v57 = sub_253462A5C(&qword_269CE04A8);
          memcpy(a1, a2, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          uint64_t v83 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v83))
          {
            uint64_t v84 = sub_253462A5C(&qword_269CE04A0);
            memcpy(a1, a2, *(void *)(*(void *)(v84 - 8) + 64));
          }
          else
          {
            uint64_t v97 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v97))
            {
              memcpy(a1, a2, *(void *)(*(void *)(v83 - 8) + 64));
            }
            else
            {
              uint64_t v111 = a2[1];
              *a1 = *a2;
              a1[1] = v111;
              uint64_t v112 = a2[3];
              a1[2] = a2[2];
              a1[3] = v112;
              a1[4] = a2[4];
              uint64_t v113 = *(int *)(v97 + 28);
              uint64_t v193 = (char *)a2 + v113;
              uint64_t v201 = (char *)a1 + v113;
              uint64_t v114 = sub_253B07160();
              uint64_t v189 = *(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v189(v201, v193, v114);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v97);
            }
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v83);
          }
          uint64_t v115 = *(int *)(v56 + 20);
          uint64_t v116 = (char *)a1 + v115;
          uint64_t v117 = (char *)a2 + v115;
          uint64_t v118 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16))(v116, v117, v118);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v56);
        }
        uint64_t v119 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
        uint64_t v120 = (char *)a1 + v119;
        uint64_t v121 = (char *)a2 + v119;
        uint64_t v122 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 16))(v120, v121, v122);
        goto LABEL_80;
      case 0xAu:
        *a1 = *a2;
        uint64_t v58 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
        uint64_t v59 = (char *)a1 + v58;
        uint64_t v60 = (char *)a2 + v58;
        uint64_t v61 = sub_253B07160();
        uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
        swift_bridgeObjectRetain();
        v62(v59, v60, v61);
        goto LABEL_80;
      default:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(_WORD *)((char *)a1 + 1) = *(_WORD *)((char *)a2 + 1);
        uint64_t v10 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        uint64_t v11 = v10[7];
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = sub_253B08E50();
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v13, 1, v14))
        {
          uint64_t v15 = sub_253462A5C(&qword_269CDCBC8);
          memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v12, 0, 1, v14);
        }
        uint64_t v63 = v10[8];
        int v64 = (void *)((char *)a1 + v63);
        int v65 = (void *)((char *)a2 + v63);
        uint64_t v66 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v65, 1, v66))
        {
          uint64_t v67 = sub_253462A5C(&qword_269CE0450);
          memcpy(v64, v65, *(void *)(*(void *)(v67 - 8) + 64));
        }
        else
        {
          uint64_t v85 = v65[1];
          void *v64 = *v65;
          v64[1] = v85;
          uint64_t v198 = v10;
          uint64_t v86 = v65[3];
          v64[2] = v65[2];
          v64[3] = v86;
          uint64_t v87 = v65[5];
          v64[4] = v65[4];
          v64[5] = v87;
          uint64_t v88 = *(int *)(v66 + 28);
          uint64_t v188 = (char *)v65 + v88;
          uint64_t v191 = (char *)v64 + v88;
          uint64_t v89 = sub_253B07160();
          uint64_t v186 = *(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v10 = v198;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v186(v191, v188, v89);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v64, 0, 1, v66);
        }
        uint64_t v90 = v10[9];
        uint64_t v91 = (void *)((char *)a1 + v90);
        uint64_t v92 = (void *)((char *)a2 + v90);
        uint64_t v93 = type metadata accessor for TranscriptProtoFollowUpAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v92, 1, v93))
        {
          uint64_t v94 = sub_253462A5C(&qword_269CE0468);
          memcpy(v91, v92, *(void *)(*(void *)(v94 - 8) + 64));
        }
        else
        {
          uint64_t v95 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v92, 1, v95))
          {
            uint64_t v96 = sub_253462A5C(&qword_269CE0460);
            memcpy(v91, v92, *(void *)(*(void *)(v96 - 8) + 64));
          }
          else
          {
            uint64_t v200 = v10;
            uint64_t v103 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v92, 1, v103))
            {
              uint64_t v104 = sub_253462A5C(&qword_269CE0458);
              memcpy(v91, v92, *(void *)(*(void *)(v104 - 8) + 64));
            }
            else
            {
              uint64_t v133 = v92[1];
              *uint64_t v91 = *v92;
              v91[1] = v133;
              uint64_t v194 = v103;
              uint64_t v134 = v92[2];
              unint64_t v135 = v92[3];
              swift_bridgeObjectRetain();
              sub_25348A9C8(v134, v135);
              v91[2] = v134;
              v91[3] = v135;
              v91[4] = v92[4];
              uint64_t v136 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                            + 28);
              uint64_t v137 = (char *)v91 + v136;
              uint64_t v138 = (char *)v92 + v136;
              uint64_t v139 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 16))(v137, v138, v139);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v91, 0, 1, v194);
            }
            uint64_t v140 = *(int *)(v95 + 20);
            uint64_t v141 = (char *)v91 + v140;
            uint64_t v142 = (char *)v92 + v140;
            uint64_t v143 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 16))(v141, v142, v143);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v91, 0, 1, v95);
            uint64_t v10 = v200;
          }
          uint64_t v144 = *(int *)(v93 + 20);
          long long v145 = (char *)v91 + v144;
          uint64_t v146 = (char *)v92 + v144;
          uint64_t v147 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 16))(v145, v146, v147);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v91, 0, 1, v93);
        }
        uint64_t v148 = v10[10];
        uint64_t v149 = (void *)((char *)a1 + v148);
        uint64_t v150 = (void *)((char *)a2 + v148);
        uint64_t v151 = v150[1];
        *uint64_t v149 = *v150;
        v149[1] = v151;
        uint64_t v152 = v10[11];
        uint64_t v153 = (char *)a1 + v152;
        uint64_t v154 = (char *)a2 + v152;
        uint64_t v155 = sub_253B07160();
        uint64_t v156 = *(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 16);
        swift_bridgeObjectRetain();
        v156(v153, v154, v155);
        goto LABEL_80;
    }
  }
  uint64_t v9 = *a2;
  *a1 = *a2;
  a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for TranscriptProtoStatementOutcome(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v4)) {
    goto LABEL_57;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      int v5 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
      uint64_t v6 = a1 + v5[7];
      uint64_t v7 = sub_253B08E50();
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v6, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      }
      uint64_t v8 = a1 + v5[8];
      uint64_t v9 = type metadata accessor for TranscriptProtoUndoContext(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v8, 1, v9))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = v8 + *(int *)(v9 + 28);
        uint64_t v11 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      }
      uint64_t v12 = a1 + v5[9];
      uint64_t v13 = type metadata accessor for TranscriptProtoFollowUpAction(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v12, 1, v13))
      {
        uint64_t v14 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v12, 1, v14))
        {
          uint64_t v15 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v12, 1, v15))
          {
            swift_bridgeObjectRelease();
            sub_253487D84(*(void *)(v12 + 16), *(void *)(v12 + 24));
            uint64_t v16 = v12
                + *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
            uint64_t v17 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
          }
          uint64_t v18 = v12 + *(int *)(v14 + 20);
          uint64_t v19 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
        }
        uint64_t v20 = v12 + *(int *)(v13 + 20);
        uint64_t v21 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
      }
      swift_bridgeObjectRelease();
      uint64_t v22 = v5[11];
      goto LABEL_56;
    case 1u:
      swift_bridgeObjectRelease();
      uint64_t v23 = type metadata accessor for TranscriptProtoActionConfirmation(0);
      uint64_t v24 = a1 + *(int *)(v23 + 20);
      uint64_t v25 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v24, 1, v25))
      {
        uint64_t v26 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v24, 1, v26))
        {
          swift_bridgeObjectRelease();
          uint64_t v27 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
          uint64_t v28 = v24 + *(int *)(v27 + 24);
          uint64_t v29 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v28, 1, v29))
          {
            uint64_t v30 = v28 + *(int *)(v29 + 20);
            uint64_t v31 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
          }
          uint64_t v32 = v24 + *(int *)(v27 + 28);
          uint64_t v33 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
        }
        uint64_t v34 = v24 + *(int *)(v25 + 20);
        uint64_t v35 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
      }
      goto LABEL_29;
    case 2u:
      swift_bridgeObjectRelease();
      uint64_t v36 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
      goto LABEL_55;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v37 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
      goto LABEL_24;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v22 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
      goto LABEL_56;
    case 5u:
      swift_bridgeObjectRelease();
      uint64_t v37 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_24:
      uint64_t v38 = v37;
      uint64_t v39 = a1 + *(int *)(v37 + 24);
      uint64_t v40 = sub_253B08E50();
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v39, 1, v40)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
      }
      uint64_t v22 = *(int *)(v38 + 28);
      goto LABEL_56;
    case 6u:
      swift_bridgeObjectRelease();
      uint64_t v23 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
      uint64_t v41 = a1 + *(int *)(v23 + 20);
      uint64_t v42 = sub_253B08E50();
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(v41, 1, v42)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
      }
LABEL_29:
      uint64_t v22 = *(int *)(v23 + 24);
      goto LABEL_56;
    case 7u:
      uint64_t v43 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v43)) {
        goto LABEL_54;
      }
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v53 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v53))
        {
          int v54 = swift_getEnumCaseMultiPayload();
          if (v54 == 1)
          {
            uint64_t v56 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
            if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v56))
            {
              uint64_t v57 = a1 + *(int *)(v56 + 20);
              uint64_t v58 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v58 - 8) + 8))(v57, v58);
            }
            uint64_t v55 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
            goto LABEL_51;
          }
          if (!v54)
          {
            swift_bridgeObjectRelease();
            uint64_t v55 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
LABEL_51:
            uint64_t v59 = a1 + *(int *)(v55 + 20);
            uint64_t v60 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8))(v59, v60);
          }
        }
        uint64_t v45 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
        goto LABEL_53;
      }
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v45 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
      }
      else
      {
        if (EnumCaseMultiPayload) {
          goto LABEL_54;
        }
        uint64_t v45 = type metadata accessor for TranscriptProtoAppRequirement(0);
      }
LABEL_53:
      uint64_t v61 = a1 + *(int *)(v45 + 20);
      uint64_t v62 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v61, v62);
LABEL_54:
      uint64_t v36 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_55:
      uint64_t v22 = *(int *)(v36 + 20);
LABEL_56:
      uint64_t v63 = a1 + v22;
      uint64_t v64 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v64 - 8) + 8))(v63, v64);
LABEL_57:
      uint64_t v65 = a1 + *(int *)(a2 + 20);
      uint64_t v66 = sub_253B07160();
      uint64_t v67 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v66 - 8) + 8);
      return v67(v65, v66);
    case 8u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v22 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
      goto LABEL_56;
    case 9u:
      uint64_t v46 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
      if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v46))
      {
        uint64_t v47 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v47))
        {
          uint64_t v48 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
          if (!_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 16, v48))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v49 = a1 + *(int *)(v48 + 28);
            uint64_t v50 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v49, v50);
          }
        }
        uint64_t v51 = a1 + *(int *)(v46 + 20);
        uint64_t v52 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v51, v52);
      }
      uint64_t v36 = type metadata accessor for TranscriptProtoActionFailure(0);
      goto LABEL_55;
    case 0xAu:
      swift_bridgeObjectRelease();
      uint64_t v36 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
      goto LABEL_55;
    default:
      goto LABEL_57;
  }
}

void *initializeWithCopy for TranscriptProtoStatementOutcome(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE04B0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    goto LABEL_79;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *a1 = *a2;
      uint64_t v14 = type metadata accessor for TranscriptProtoActionConfirmation(0);
      uint64_t v15 = *(int *)(v14 + 20);
      uint64_t v16 = (void *)((char *)a1 + v15);
      uint64_t v17 = (void *)((char *)a2 + v15);
      uint64_t v18 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18))
      {
        uint64_t v19 = sub_253462A5C(&qword_269CE0480);
        memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        uint64_t v68 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v68))
        {
          uint64_t v69 = sub_253462A5C(&qword_269CE0478);
          memcpy(v16, v17, *(void *)(*(void *)(v69 - 8) + 64));
        }
        else
        {
          uint64_t v201 = v68;
          uint64_t v98 = v17[1];
          void *v16 = *v17;
          v16[1] = v98;
          *((unsigned char *)v16 + 16) = *((unsigned char *)v17 + 16);
          uint64_t v194 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
          uint64_t v99 = *(int *)(v194 + 24);
          uint64_t v188 = (char *)v16 + v99;
          uint64_t v100 = (char *)v17 + v99;
          uint64_t v101 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v100, 1, v101))
          {
            uint64_t v102 = sub_253462A5C(&qword_269CE0470);
            memcpy(v188, v100, *(void *)(*(void *)(v102 - 8) + 64));
          }
          else
          {
            *uint64_t v188 = *v100;
            uint64_t v123 = *(int *)(v101 + 20);
            uint64_t v186 = &v188[v123];
            uint64_t v192 = &v100[v123];
            uint64_t v124 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v124 - 8) + 16))(v186, v192, v124);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v188, 0, 1, v101);
          }
          uint64_t v125 = *(int *)(v194 + 28);
          uint64_t v126 = (char *)v16 + v125;
          uint64_t v127 = (char *)v17 + v125;
          uint64_t v128 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 16))(v126, v127, v128);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v201);
        }
        uint64_t v129 = *(int *)(v18 + 20);
        uint64_t v130 = (char *)v16 + v129;
        uint64_t v131 = (char *)v17 + v129;
        uint64_t v132 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 16))(v130, v131, v132);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v18);
      }
      goto LABEL_31;
    case 2u:
      uint64_t v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      uint64_t v21 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = sub_253B07160();
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v25(v22, v23, v24);
      goto LABEL_78;
    case 3u:
      uint64_t v26 = a2[1];
      *a1 = *a2;
      a1[1] = v26;
      a1[2] = a2[2];
      *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
      uint64_t v27 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
      uint64_t v28 = *(int *)(v27 + 24);
      uint64_t v29 = (char *)a1 + v28;
      uint64_t v30 = (char *)a2 + v28;
      uint64_t v31 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v30, 1, v31)) {
        goto LABEL_10;
      }
      goto LABEL_27;
    case 4u:
      uint64_t v33 = a2[1];
      *a1 = *a2;
      a1[1] = v33;
      uint64_t v34 = a2[3];
      a1[2] = a2[2];
      a1[3] = v34;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v35 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
      uint64_t v198 = (char *)a1 + v35;
      uint64_t v36 = (char *)a2 + v35;
      uint64_t v37 = sub_253B07160();
      uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38(v198, v36, v37);
      goto LABEL_78;
    case 5u:
      uint64_t v39 = a2[1];
      *a1 = *a2;
      a1[1] = v39;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v27 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
      uint64_t v40 = *(int *)(v27 + 24);
      uint64_t v29 = (char *)a1 + v40;
      uint64_t v30 = (char *)a2 + v40;
      uint64_t v31 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v30, 1, v31))
      {
LABEL_10:
        uint64_t v32 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
LABEL_27:
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v29, 0, 1, v31);
      }
      uint64_t v70 = *(int *)(v27 + 28);
      long long v71 = (char *)a1 + v70;
      uint64_t v72 = (char *)a2 + v70;
      uint64_t v73 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
      goto LABEL_78;
    case 6u:
      uint64_t v41 = a2[1];
      *a1 = *a2;
      a1[1] = v41;
      uint64_t v14 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
      uint64_t v42 = *(int *)(v14 + 20);
      uint64_t v43 = (char *)a1 + v42;
      uint64_t v44 = (char *)a2 + v42;
      uint64_t v45 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v44, 1, v45))
      {
        uint64_t v46 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v43, 0, 1, v45);
      }
LABEL_31:
      uint64_t v74 = *(int *)(v14 + 24);
      uint64_t v75 = (char *)a1 + v74;
      uint64_t v76 = (char *)a2 + v74;
      uint64_t v77 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v75, v76, v77);
      goto LABEL_78;
    case 7u:
      uint64_t v47 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v47))
      {
        uint64_t v48 = sub_253462A5C(&qword_269CE0498);
        memcpy(a1, a2, *(void *)(*(void *)(v48 - 8) + 64));
        goto LABEL_77;
      }
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v105 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v105))
        {
          uint64_t v106 = sub_253462A5C(&qword_269CE0490);
          memcpy(a1, a2, *(void *)(*(void *)(v106 - 8) + 64));
LABEL_74:
          uint64_t v173 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v174 = (char *)a1 + v173;
          uint64_t v175 = (char *)a2 + v173;
          uint64_t v176 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16))(v174, v175, v176);
          goto LABEL_75;
        }
        int v157 = swift_getEnumCaseMultiPayload();
        if (v157 == 1)
        {
          uint64_t v163 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v163))
          {
            uint64_t v164 = sub_253462A5C(&qword_269CE0488);
            memcpy(a1, a2, *(void *)(*(void *)(v164 - 8) + 64));
          }
          else
          {
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v165 = *(int *)(v163 + 20);
            uint64_t v166 = (char *)a1 + v165;
            uint64_t v167 = (char *)a2 + v165;
            uint64_t v168 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16))(v166, v167, v168);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v163);
          }
          uint64_t v169 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v170 = (char *)a1 + v169;
          uint64_t v171 = (char *)a2 + v169;
          uint64_t v172 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v172 - 8) + 16))(v170, v171, v172);
        }
        else
        {
          if (v157)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v105 - 8) + 64));
LABEL_73:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v105);
            goto LABEL_74;
          }
          uint64_t v158 = a2[1];
          *a1 = *a2;
          a1[1] = v158;
          uint64_t v159 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v197 = (char *)a2 + v159;
          uint64_t v203 = (char *)a1 + v159;
          uint64_t v160 = sub_253B07160();
          uint64_t v161 = a3;
          uint64_t v162 = *(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 16);
          swift_bridgeObjectRetain();
          v162(v203, v197, v160);
          a3 = v161;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_73;
      }
      if (EnumCaseMultiPayload == 1)
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v107 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
        uint64_t v108 = (char *)a1 + v107;
        uint64_t v109 = (char *)a2 + v107;
        uint64_t v110 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16))(v108, v109, v110);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v47 - 8) + 64));
          goto LABEL_76;
        }
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v79 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
        uint64_t v80 = (char *)a1 + v79;
        uint64_t v81 = (char *)a2 + v79;
        uint64_t v82 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16))(v80, v81, v82);
      }
LABEL_75:
      swift_storeEnumTagMultiPayload();
LABEL_76:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v47);
LABEL_77:
      uint64_t v177 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
      uint64_t v178 = (char *)a1 + v177;
      uint64_t v179 = (char *)a2 + v177;
      uint64_t v180 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 16))(v178, v179, v180);
LABEL_78:
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_79:
      uint64_t v181 = *(int *)(a3 + 20);
      uint64_t v182 = (char *)a1 + v181;
      uint64_t v183 = (char *)a2 + v181;
      uint64_t v184 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 16))(v182, v183, v184);
      return a1;
    case 8u:
      uint64_t v49 = a2[1];
      *a1 = *a2;
      a1[1] = v49;
      a1[2] = a2[2];
      uint64_t v50 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
      uint64_t v199 = (char *)a1 + v50;
      uint64_t v51 = (char *)a2 + v50;
      uint64_t v52 = sub_253B07160();
      uint64_t v53 = a3;
      int v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v54(v199, v51, v52);
      a3 = v53;
      goto LABEL_78;
    case 9u:
      uint64_t v55 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v55))
      {
        uint64_t v56 = sub_253462A5C(&qword_269CE04A8);
        memcpy(a1, a2, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        uint64_t v83 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v83))
        {
          uint64_t v84 = sub_253462A5C(&qword_269CE04A0);
          memcpy(a1, a2, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          uint64_t v97 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v97))
          {
            memcpy(a1, a2, *(void *)(*(void *)(v83 - 8) + 64));
          }
          else
          {
            uint64_t v111 = a2[1];
            *a1 = *a2;
            a1[1] = v111;
            uint64_t v112 = a2[3];
            a1[2] = a2[2];
            a1[3] = v112;
            a1[4] = a2[4];
            uint64_t v113 = *(int *)(v97 + 28);
            uint64_t v191 = (char *)a2 + v113;
            uint64_t v195 = (char *)a1 + v113;
            uint64_t v114 = sub_253B07160();
            uint64_t v189 = *(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v189(v195, v191, v114);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v97);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v83);
        }
        uint64_t v115 = *(int *)(v55 + 20);
        uint64_t v116 = (char *)a1 + v115;
        uint64_t v117 = (char *)a2 + v115;
        uint64_t v118 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16))(v116, v117, v118);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v55);
      }
      uint64_t v119 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
      uint64_t v120 = (char *)a1 + v119;
      uint64_t v121 = (char *)a2 + v119;
      uint64_t v122 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 16))(v120, v121, v122);
      goto LABEL_78;
    case 0xAu:
      *a1 = *a2;
      uint64_t v57 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
      uint64_t v58 = (char *)a1 + v57;
      uint64_t v59 = (char *)a2 + v57;
      uint64_t v60 = sub_253B07160();
      uint64_t v61 = a3;
      uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16);
      swift_bridgeObjectRetain();
      v62(v58, v59, v60);
      a3 = v61;
      goto LABEL_78;
    default:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(_WORD *)((char *)a1 + 1) = *(_WORD *)((char *)a2 + 1);
      uint64_t v8 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
      uint64_t v9 = v8[7];
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
      {
        uint64_t v13 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
      }
      uint64_t v63 = v8[8];
      uint64_t v64 = (void *)((char *)a1 + v63);
      uint64_t v65 = (void *)((char *)a2 + v63);
      uint64_t v66 = type metadata accessor for TranscriptProtoUndoContext(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v65, 1, v66))
      {
        uint64_t v67 = sub_253462A5C(&qword_269CE0450);
        memcpy(v64, v65, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        uint64_t v85 = v65[1];
        void *v64 = *v65;
        v64[1] = v85;
        uint64_t v200 = v8;
        uint64_t v86 = v65[3];
        v64[2] = v65[2];
        v64[3] = v86;
        uint64_t v87 = v65[5];
        v64[4] = v65[4];
        v64[5] = v87;
        uint64_t v88 = *(int *)(v66 + 28);
        uint64_t v190 = (char *)v65 + v88;
        uint64_t v193 = (char *)v64 + v88;
        uint64_t v89 = sub_253B07160();
        uint64_t v187 = *(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v8 = v200;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v187(v193, v190, v89);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v64, 0, 1, v66);
      }
      uint64_t v90 = v8[9];
      uint64_t v91 = (void *)((char *)a1 + v90);
      uint64_t v92 = (void *)((char *)a2 + v90);
      uint64_t v93 = type metadata accessor for TranscriptProtoFollowUpAction(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v92, 1, v93))
      {
        uint64_t v94 = sub_253462A5C(&qword_269CE0468);
        memcpy(v91, v92, *(void *)(*(void *)(v94 - 8) + 64));
      }
      else
      {
        uint64_t v95 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v92, 1, v95))
        {
          uint64_t v96 = sub_253462A5C(&qword_269CE0460);
          memcpy(v91, v92, *(void *)(*(void *)(v96 - 8) + 64));
        }
        else
        {
          long long v202 = v8;
          uint64_t v103 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v92, 1, v103))
          {
            uint64_t v104 = sub_253462A5C(&qword_269CE0458);
            memcpy(v91, v92, *(void *)(*(void *)(v104 - 8) + 64));
          }
          else
          {
            uint64_t v133 = v92[1];
            *uint64_t v91 = *v92;
            v91[1] = v133;
            uint64_t v196 = v103;
            uint64_t v134 = v92[2];
            unint64_t v135 = v92[3];
            swift_bridgeObjectRetain();
            sub_25348A9C8(v134, v135);
            v91[2] = v134;
            v91[3] = v135;
            v91[4] = v92[4];
            uint64_t v136 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
            uint64_t v137 = (char *)v91 + v136;
            uint64_t v138 = (char *)v92 + v136;
            uint64_t v139 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 16))(v137, v138, v139);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v91, 0, 1, v196);
          }
          uint64_t v140 = *(int *)(v95 + 20);
          uint64_t v141 = (char *)v91 + v140;
          uint64_t v142 = (char *)v92 + v140;
          uint64_t v143 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 16))(v141, v142, v143);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v91, 0, 1, v95);
          uint64_t v8 = v202;
        }
        uint64_t v144 = *(int *)(v93 + 20);
        long long v145 = (char *)v91 + v144;
        uint64_t v146 = (char *)v92 + v144;
        uint64_t v147 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 16))(v145, v146, v147);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v91, 0, 1, v93);
      }
      uint64_t v148 = v8[10];
      uint64_t v149 = (void *)((char *)a1 + v148);
      uint64_t v150 = (void *)((char *)a2 + v148);
      uint64_t v151 = v150[1];
      *uint64_t v149 = *v150;
      v149[1] = v151;
      uint64_t v152 = v8[11];
      uint64_t v153 = (char *)a1 + v152;
      uint64_t v154 = (char *)a2 + v152;
      uint64_t v155 = sub_253B07160();
      uint64_t v156 = *(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 16);
      swift_bridgeObjectRetain();
      v156(v153, v154, v155);
      goto LABEL_78;
  }
}

uint64_t assignWithCopy for TranscriptProtoStatementOutcome(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)a1 = *(void *)a2;
          uint64_t v22 = type metadata accessor for TranscriptProtoActionConfirmation(0);
          uint64_t v23 = *(int *)(v22 + 20);
          uint64_t v24 = (void *)(a1 + v23);
          uint64_t v25 = (void *)(a2 + v23);
          uint64_t v26 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v26))
          {
            uint64_t v27 = sub_253462A5C(&qword_269CE0480);
            memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
          }
          else
          {
            uint64_t v113 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v113))
            {
              uint64_t v114 = sub_253462A5C(&qword_269CE0478);
              memcpy(v24, v25, *(void *)(*(void *)(v114 - 8) + 64));
            }
            else
            {
              uint64_t v357 = v113;
              *uint64_t v24 = *v25;
              v24[1] = v25[1];
              *((unsigned char *)v24 + 16) = *((unsigned char *)v25 + 16);
              uint64_t v344 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
              uint64_t v161 = *(int *)(v344 + 24);
              uint64_t v333 = (char *)v24 + v161;
              uint64_t v162 = (char *)v25 + v161;
              uint64_t v163 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
              swift_bridgeObjectRetain();
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v162, 1, v163))
              {
                uint64_t v164 = sub_253462A5C(&qword_269CE0470);
                memcpy(v333, v162, *(void *)(*(void *)(v164 - 8) + 64));
              }
              else
              {
                *uint64_t v333 = *v162;
                uint64_t v198 = *(int *)(v163 + 20);
                uint64_t v330 = &v333[v198];
                uint64_t v340 = &v162[v198];
                uint64_t v199 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v199 - 8) + 16))(v330, v340, v199);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v333, 0, 1, v163);
              }
              uint64_t v200 = *(int *)(v344 + 28);
              uint64_t v201 = (char *)v24 + v200;
              long long v202 = (char *)v25 + v200;
              uint64_t v203 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v203 - 8) + 16))(v201, v202, v203);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v357);
            }
            uint64_t v204 = *(int *)(v26 + 20);
            uint64_t v205 = (char *)v24 + v204;
            uint64_t v206 = (char *)v25 + v204;
            uint64_t v207 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v207 - 8) + 16))(v205, v206, v207);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v26);
          }
          goto LABEL_54;
        case 2u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          uint64_t v28 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
          uint64_t v29 = a1 + v28;
          uint64_t v30 = a2 + v28;
          uint64_t v31 = sub_253B07160();
          uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16);
          swift_bridgeObjectRetain();
          v32(v29, v30, v31);
          goto LABEL_149;
        case 3u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          uint64_t v33 = *(void *)(a2 + 16);
          *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
          *(void *)(a1 + 16) = v33;
          uint64_t v34 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
          uint64_t v35 = *(int *)(v34 + 24);
          uint64_t v36 = (void *)(a1 + v35);
          uint64_t v37 = (const void *)(a2 + v35);
          uint64_t v38 = sub_253B08E50();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v37, 1, v38)) {
            goto LABEL_17;
          }
          goto LABEL_50;
        case 4u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          uint64_t v40 = *(void *)(a2 + 24);
          *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
          *(void *)(a1 + 24) = v40;
          uint64_t v41 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
          uint64_t v353 = a1 + v41;
          uint64_t v42 = a2 + v41;
          uint64_t v43 = sub_253B07160();
          uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v44(v353, v42, v43);
          goto LABEL_149;
        case 5u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          uint64_t v34 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
          uint64_t v45 = *(int *)(v34 + 24);
          uint64_t v36 = (void *)(a1 + v45);
          uint64_t v37 = (const void *)(a2 + v45);
          uint64_t v38 = sub_253B08E50();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v37, 1, v38))
          {
LABEL_17:
            uint64_t v39 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
          }
          else
          {
LABEL_50:
            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v36, 0, 1, v38);
          }
          uint64_t v115 = *(int *)(v34 + 28);
          uint64_t v116 = a1 + v115;
          uint64_t v117 = a2 + v115;
          uint64_t v118 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 16))(v116, v117, v118);
          goto LABEL_149;
        case 6u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          uint64_t v22 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
          uint64_t v46 = *(int *)(v22 + 20);
          uint64_t v47 = (void *)(a1 + v46);
          uint64_t v48 = (const void *)(a2 + v46);
          uint64_t v49 = sub_253B08E50();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v48, 1, v49))
          {
            uint64_t v50 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v47, 0, 1, v49);
          }
LABEL_54:
          uint64_t v119 = *(int *)(v22 + 24);
          uint64_t v120 = a1 + v119;
          uint64_t v121 = a2 + v119;
          uint64_t v122 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v122 - 8) + 16))(v120, v121, v122);
          goto LABEL_149;
        case 7u:
          uint64_t v51 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v51))
          {
            uint64_t v52 = sub_253462A5C(&qword_269CE0498);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v52 - 8) + 64));
            goto LABEL_148;
          }
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload != 2)
          {
            if (EnumCaseMultiPayload == 1)
            {
              *(unsigned char *)a1 = *(unsigned char *)a2;
              uint64_t v179 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
              uint64_t v180 = a1 + v179;
              uint64_t v181 = a2 + v179;
              uint64_t v182 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v182 - 8) + 16))(v180, v181, v182);
            }
            else
            {
              if (EnumCaseMultiPayload)
              {
                memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v51 - 8) + 64));
                goto LABEL_147;
              }
              *(unsigned char *)a1 = *(unsigned char *)a2;
              uint64_t v124 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
              uint64_t v125 = a1 + v124;
              uint64_t v126 = a2 + v124;
              uint64_t v127 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 16))(v125, v126, v127);
            }
LABEL_146:
            swift_storeEnumTagMultiPayload();
LABEL_147:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v51);
LABEL_148:
            uint64_t v305 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
            uint64_t v306 = a1 + v305;
            uint64_t v307 = a2 + v305;
            uint64_t v308 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v308 - 8) + 16))(v306, v307, v308);
LABEL_149:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v6);
            goto LABEL_159;
          }
          uint64_t v177 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v177))
          {
            uint64_t v178 = sub_253462A5C(&qword_269CE0490);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v178 - 8) + 64));
LABEL_145:
            uint64_t v301 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
            uint64_t v302 = a1 + v301;
            uint64_t v303 = a2 + v301;
            uint64_t v304 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v304 - 8) + 16))(v302, v303, v304);
            goto LABEL_146;
          }
          int v238 = swift_getEnumCaseMultiPayload();
          if (v238 == 1)
          {
            uint64_t v289 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v289))
            {
              uint64_t v290 = sub_253462A5C(&qword_269CE0488);
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v290 - 8) + 64));
            }
            else
            {
              *(unsigned char *)a1 = *(unsigned char *)a2;
              uint64_t v293 = *(int *)(v289 + 20);
              uint64_t v294 = a1 + v293;
              uint64_t v295 = a2 + v293;
              uint64_t v296 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v296 - 8) + 16))(v294, v295, v296);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v289);
            }
            uint64_t v297 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
            uint64_t v298 = a1 + v297;
            uint64_t v299 = a2 + v297;
            uint64_t v300 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v300 - 8) + 16))(v298, v299, v300);
          }
          else
          {
            if (v238)
            {
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v177 - 8) + 64));
LABEL_144:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v177);
              goto LABEL_145;
            }
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            uint64_t v239 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
            uint64_t v349 = a2 + v239;
            uint64_t v361 = a1 + v239;
            uint64_t v240 = sub_253B07160();
            uint64_t v241 = a3;
            uint64_t v242 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v240 - 8) + 16);
            swift_bridgeObjectRetain();
            v242(v361, v349, v240);
            a3 = v241;
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_144;
        case 8u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          uint64_t v53 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
          uint64_t v354 = a1 + v53;
          uint64_t v54 = a2 + v53;
          uint64_t v55 = sub_253B07160();
          uint64_t v56 = a3;
          uint64_t v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v57(v354, v54, v55);
          a3 = v56;
          goto LABEL_149;
        case 9u:
          uint64_t v58 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v58))
          {
            uint64_t v59 = sub_253462A5C(&qword_269CE04A8);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v59 - 8) + 64));
          }
          else
          {
            uint64_t v128 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v128))
            {
              uint64_t v129 = sub_253462A5C(&qword_269CE04A0);
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v129 - 8) + 64));
            }
            else
            {
              uint64_t v165 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 16, v165))
              {
                memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v128 - 8) + 64));
              }
              else
              {
                *(void *)a1 = *(void *)a2;
                *(void *)(a1 + 8) = *(void *)(a2 + 8);
                *(void *)(a1 + 16) = *(void *)(a2 + 16);
                *(void *)(a1 + 24) = *(void *)(a2 + 24);
                *(void *)(a1 + 32) = *(void *)(a2 + 32);
                uint64_t v184 = *(int *)(v165 + 28);
                uint64_t v339 = a2 + v184;
                uint64_t v346 = a1 + v184;
                uint64_t v185 = sub_253B07160();
                int v335 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v185 - 8) + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v335(v346, v339, v185);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 16, v165);
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v128);
            }
            uint64_t v186 = *(int *)(v58 + 20);
            uint64_t v187 = a1 + v186;
            uint64_t v188 = a2 + v186;
            uint64_t v189 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v189 - 8) + 16))(v187, v188, v189);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v58);
          }
          uint64_t v190 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
          uint64_t v191 = a1 + v190;
          uint64_t v192 = a2 + v190;
          uint64_t v193 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v193 - 8) + 16))(v191, v192, v193);
          goto LABEL_149;
        case 0xAu:
          *(void *)a1 = *(void *)a2;
          uint64_t v60 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
          uint64_t v61 = a1 + v60;
          uint64_t v62 = a2 + v60;
          uint64_t v63 = sub_253B07160();
          uint64_t v64 = a3;
          uint64_t v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 16);
          swift_bridgeObjectRetain();
          v65(v61, v62, v63);
          a3 = v64;
          goto LABEL_149;
        default:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
          *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
          uint64_t v9 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
          uint64_t v10 = v9[7];
          uint64_t v11 = (void *)(a1 + v10);
          uint64_t v12 = (const void *)(a2 + v10);
          uint64_t v13 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13))
          {
            uint64_t v14 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v11, 0, 1, v13);
          }
          uint64_t v66 = v9[8];
          uint64_t v67 = (void *)(a1 + v66);
          uint64_t v68 = (void *)(a2 + v66);
          uint64_t v69 = type metadata accessor for TranscriptProtoUndoContext(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v68, 1, v69))
          {
            uint64_t v70 = sub_253462A5C(&qword_269CE0450);
            memcpy(v67, v68, *(void *)(*(void *)(v70 - 8) + 64));
          }
          else
          {
            void *v67 = *v68;
            v67[1] = v68[1];
            v67[2] = v68[2];
            v67[3] = v68[3];
            v67[4] = v68[4];
            v67[5] = v68[5];
            uint64_t v130 = *(int *)(v69 + 28);
            uint64_t v337 = (char *)v68 + v130;
            uint64_t v343 = (char *)v67 + v130;
            uint64_t v131 = sub_253B07160();
            uint64_t v332 = *(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v332(v343, v337, v131);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v67, 0, 1, v69);
          }
          uint64_t v132 = v9[9];
          uint64_t v133 = (void *)(a1 + v132);
          uint64_t v134 = (void *)(a2 + v132);
          uint64_t v135 = type metadata accessor for TranscriptProtoFollowUpAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v134, 1, v135))
          {
            uint64_t v136 = sub_253462A5C(&qword_269CE0468);
            memcpy(v133, v134, *(void *)(*(void *)(v136 - 8) + 64));
          }
          else
          {
            uint64_t v137 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v134, 1, v137))
            {
              uint64_t v138 = sub_253462A5C(&qword_269CE0460);
              memcpy(v133, v134, *(void *)(*(void *)(v138 - 8) + 64));
            }
            else
            {
              uint64_t v358 = v9;
              uint64_t v166 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v134, 1, v166))
              {
                uint64_t v167 = sub_253462A5C(&qword_269CE0458);
                memcpy(v133, v134, *(void *)(*(void *)(v167 - 8) + 64));
              }
              else
              {
                *uint64_t v133 = *v134;
                v133[1] = v134[1];
                uint64_t v348 = v166;
                uint64_t v208 = v134[2];
                unint64_t v209 = v134[3];
                swift_bridgeObjectRetain();
                sub_25348A9C8(v208, v209);
                v133[2] = v208;
                v133[3] = v209;
                v133[4] = v134[4];
                uint64_t v210 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                              + 28);
                uint64_t v211 = (char *)v133 + v210;
                uint64_t v212 = (char *)v134 + v210;
                uint64_t v213 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v213 - 8) + 16))(v211, v212, v213);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v133, 0, 1, v348);
              }
              uint64_t v214 = *(int *)(v137 + 20);
              uint64_t v215 = (char *)v133 + v214;
              uint64_t v216 = (char *)v134 + v214;
              uint64_t v217 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v217 - 8) + 16))(v215, v216, v217);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v133, 0, 1, v137);
              uint64_t v9 = v358;
            }
            uint64_t v218 = *(int *)(v135 + 20);
            long long v219 = (char *)v133 + v218;
            uint64_t v220 = (char *)v134 + v218;
            uint64_t v221 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v221 - 8) + 16))(v219, v220, v221);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v133, 0, 1, v135);
          }
          uint64_t v222 = v9[10];
          uint64_t v223 = (void *)(a1 + v222);
          uint64_t v224 = (void *)(a2 + v222);
          *uint64_t v223 = *v224;
          v223[1] = v224[1];
          uint64_t v225 = v9[11];
          uint64_t v226 = a1 + v225;
          uint64_t v227 = a2 + v225;
          uint64_t v228 = sub_253B07160();
          uint64_t v229 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v228 - 8) + 16);
          swift_bridgeObjectRetain();
          v229(v226, v227, v228);
          goto LABEL_149;
      }
    }
LABEL_8:
    uint64_t v15 = sub_253462A5C(&qword_269CE04B0);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_159;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_8;
  }
  if (a1 == a2) {
    goto LABEL_159;
  }
  sub_2536FA73C();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(void *)a1 = *(void *)a2;
      uint64_t v71 = type metadata accessor for TranscriptProtoActionConfirmation(0);
      uint64_t v72 = *(int *)(v71 + 20);
      uint64_t v73 = (void *)(a1 + v72);
      uint64_t v74 = (void *)(a2 + v72);
      uint64_t v75 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v74, 1, v75))
      {
        uint64_t v76 = sub_253462A5C(&qword_269CE0480);
        memcpy(v73, v74, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        uint64_t v144 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v74, 1, v144))
        {
          uint64_t v145 = sub_253462A5C(&qword_269CE0478);
          memcpy(v73, v74, *(void *)(*(void *)(v145 - 8) + 64));
        }
        else
        {
          uint64_t v359 = v144;
          *uint64_t v73 = *v74;
          v73[1] = v74[1];
          *((unsigned char *)v73 + 16) = *((unsigned char *)v74 + 16);
          uint64_t v347 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
          uint64_t v194 = *(int *)(v347 + 24);
          uint64_t v336 = (char *)v73 + v194;
          uint64_t v195 = (char *)v74 + v194;
          uint64_t v196 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v195, 1, v196))
          {
            uint64_t v197 = sub_253462A5C(&qword_269CE0470);
            memcpy(v336, v195, *(void *)(*(void *)(v197 - 8) + 64));
          }
          else
          {
            *uint64_t v336 = *v195;
            uint64_t v253 = *(int *)(v196 + 20);
            uint64_t v331 = &v336[v253];
            uint64_t v342 = &v195[v253];
            uint64_t v254 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v254 - 8) + 16))(v331, v342, v254);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v336, 0, 1, v196);
          }
          uint64_t v255 = *(int *)(v347 + 28);
          uint64_t v256 = (char *)v73 + v255;
          uint64_t v257 = (char *)v74 + v255;
          uint64_t v258 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v258 - 8) + 16))(v256, v257, v258);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v73, 0, 1, v359);
        }
        uint64_t v259 = *(int *)(v75 + 20);
        uint64_t v260 = (char *)v73 + v259;
        uint64_t v261 = (char *)v74 + v259;
        uint64_t v262 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v262 - 8) + 16))(v260, v261, v262);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v73, 0, 1, v75);
      }
      goto LABEL_75;
    case 2u:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      uint64_t v77 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
      uint64_t v78 = a1 + v77;
      uint64_t v79 = a2 + v77;
      uint64_t v80 = sub_253B07160();
      uint64_t v81 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 16);
      swift_bridgeObjectRetain();
      v81(v78, v79, v80);
      goto LABEL_158;
    case 3u:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      uint64_t v82 = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(void *)(a1 + 16) = v82;
      uint64_t v83 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
      uint64_t v84 = *(int *)(v83 + 24);
      uint64_t v85 = (void *)(a1 + v84);
      uint64_t v86 = (const void *)(a2 + v84);
      uint64_t v87 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v86, 1, v87)) {
        goto LABEL_36;
      }
      goto LABEL_71;
    case 4u:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      uint64_t v89 = *(void *)(a2 + 24);
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(void *)(a1 + 24) = v89;
      uint64_t v90 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
      uint64_t v355 = a1 + v90;
      uint64_t v91 = a2 + v90;
      uint64_t v92 = sub_253B07160();
      uint64_t v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v93(v355, v91, v92);
      goto LABEL_158;
    case 5u:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v83 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
      uint64_t v94 = *(int *)(v83 + 24);
      uint64_t v85 = (void *)(a1 + v94);
      uint64_t v86 = (const void *)(a2 + v94);
      uint64_t v87 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v86, 1, v87))
      {
LABEL_36:
        uint64_t v88 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v85, v86, *(void *)(*(void *)(v88 - 8) + 64));
      }
      else
      {
LABEL_71:
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v85, 0, 1, v87);
      }
      uint64_t v146 = *(int *)(v83 + 28);
      uint64_t v147 = a1 + v146;
      uint64_t v148 = a2 + v146;
      uint64_t v149 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v149 - 8) + 16))(v147, v148, v149);
      goto LABEL_158;
    case 6u:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      uint64_t v71 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
      uint64_t v95 = *(int *)(v71 + 20);
      uint64_t v96 = (void *)(a1 + v95);
      uint64_t v97 = (const void *)(a2 + v95);
      uint64_t v98 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v97, 1, v98))
      {
        uint64_t v99 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v96, v97, *(void *)(*(void *)(v99 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v98 - 8) + 16))(v96, v97, v98);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v96, 0, 1, v98);
      }
LABEL_75:
      uint64_t v150 = *(int *)(v71 + 24);
      uint64_t v151 = a1 + v150;
      uint64_t v152 = a2 + v150;
      uint64_t v153 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v153 - 8) + 16))(v151, v152, v153);
      goto LABEL_158;
    case 7u:
      uint64_t v100 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v100))
      {
        uint64_t v101 = sub_253462A5C(&qword_269CE0498);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v101 - 8) + 64));
        goto LABEL_157;
      }
      int v154 = swift_getEnumCaseMultiPayload();
      if (v154 == 2)
      {
        uint64_t v232 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v232))
        {
          uint64_t v233 = sub_253462A5C(&qword_269CE0490);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v233 - 8) + 64));
LABEL_154:
          uint64_t v317 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v318 = a1 + v317;
          uint64_t v319 = a2 + v317;
          uint64_t v320 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v320 - 8) + 16))(v318, v319, v320);
          goto LABEL_155;
        }
        int v285 = swift_getEnumCaseMultiPayload();
        if (v285 == 1)
        {
          uint64_t v291 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v291))
          {
            uint64_t v292 = sub_253462A5C(&qword_269CE0488);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v292 - 8) + 64));
          }
          else
          {
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v309 = *(int *)(v291 + 20);
            uint64_t v310 = a1 + v309;
            uint64_t v311 = a2 + v309;
            uint64_t v312 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v312 - 8) + 16))(v310, v311, v312);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v291);
          }
          uint64_t v313 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v314 = a1 + v313;
          uint64_t v315 = a2 + v313;
          uint64_t v316 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v316 - 8) + 16))(v314, v315, v316);
        }
        else
        {
          if (v285)
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v232 - 8) + 64));
LABEL_153:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v232);
            goto LABEL_154;
          }
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          uint64_t v286 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v352 = a2 + v286;
          uint64_t v363 = a1 + v286;
          uint64_t v287 = sub_253B07160();
          uint64_t v288 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v287 - 8) + 16);
          swift_bridgeObjectRetain();
          v288(v363, v352, v287);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_153;
      }
      if (v154 == 1)
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v234 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
        uint64_t v235 = a1 + v234;
        uint64_t v236 = a2 + v234;
        uint64_t v237 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v237 - 8) + 16))(v235, v236, v237);
      }
      else
      {
        if (v154)
        {
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v100 - 8) + 64));
          goto LABEL_156;
        }
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v155 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
        uint64_t v156 = a1 + v155;
        uint64_t v157 = a2 + v155;
        uint64_t v158 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v158 - 8) + 16))(v156, v157, v158);
      }
LABEL_155:
      swift_storeEnumTagMultiPayload();
LABEL_156:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v100);
LABEL_157:
      uint64_t v321 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
      uint64_t v322 = a1 + v321;
      uint64_t v323 = a2 + v321;
      uint64_t v324 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v324 - 8) + 16))(v322, v323, v324);
LABEL_158:
      swift_storeEnumTagMultiPayload();
LABEL_159:
      uint64_t v325 = *(int *)(a3 + 20);
      uint64_t v326 = a1 + v325;
      uint64_t v327 = a2 + v325;
      uint64_t v328 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v328 - 8) + 24))(v326, v327, v328);
      return a1;
    case 8u:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      uint64_t v102 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
      uint64_t v356 = a1 + v102;
      uint64_t v103 = a2 + v102;
      uint64_t v104 = sub_253B07160();
      uint64_t v105 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v105(v356, v103, v104);
      goto LABEL_158;
    case 9u:
      uint64_t v106 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v106))
      {
        uint64_t v107 = sub_253462A5C(&qword_269CE04A8);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v107 - 8) + 64));
      }
      else
      {
        uint64_t v159 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v159))
        {
          uint64_t v160 = sub_253462A5C(&qword_269CE04A0);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v160 - 8) + 64));
        }
        else
        {
          uint64_t v183 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 16, v183))
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v159 - 8) + 64));
          }
          else
          {
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(void *)(a1 + 24) = *(void *)(a2 + 24);
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            uint64_t v243 = *(int *)(v183 + 28);
            uint64_t v350 = a2 + v243;
            uint64_t v362 = a1 + v243;
            uint64_t v244 = sub_253B07160();
            uint64_t v341 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v244 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v341(v362, v350, v244);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 16, v183);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v159);
        }
        uint64_t v245 = *(int *)(v106 + 20);
        uint64_t v246 = a1 + v245;
        uint64_t v247 = a2 + v245;
        uint64_t v248 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v248 - 8) + 16))(v246, v247, v248);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v106);
      }
      uint64_t v249 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
      uint64_t v250 = a1 + v249;
      uint64_t v251 = a2 + v249;
      uint64_t v252 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v252 - 8) + 16))(v250, v251, v252);
      goto LABEL_158;
    case 0xAu:
      *(void *)a1 = *(void *)a2;
      uint64_t v108 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
      uint64_t v109 = a1 + v108;
      uint64_t v110 = a2 + v108;
      uint64_t v111 = sub_253B07160();
      uint64_t v112 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v111 - 8) + 16);
      swift_bridgeObjectRetain();
      v112(v109, v110, v111);
      goto LABEL_158;
    default:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
      *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
      uint64_t v16 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
      uint64_t v17 = v16[7];
      uint64_t v18 = (void *)(a1 + v17);
      uint64_t v19 = (const void *)(a2 + v17);
      uint64_t v20 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
      {
        uint64_t v21 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
      }
      uint64_t v139 = v16[8];
      uint64_t v140 = (void *)(a1 + v139);
      uint64_t v141 = (void *)(a2 + v139);
      uint64_t v142 = type metadata accessor for TranscriptProtoUndoContext(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v141, 1, v142))
      {
        uint64_t v143 = sub_253462A5C(&qword_269CE0450);
        memcpy(v140, v141, *(void *)(*(void *)(v143 - 8) + 64));
      }
      else
      {
        *uint64_t v140 = *v141;
        v140[1] = v141[1];
        v140[2] = v141[2];
        v140[3] = v141[3];
        v140[4] = v141[4];
        v140[5] = v141[5];
        uint64_t v168 = *(int *)(v142 + 28);
        long long v338 = (char *)v141 + v168;
        uint64_t v345 = (char *)v140 + v168;
        uint64_t v169 = sub_253B07160();
        uint64_t v334 = *(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v334(v345, v338, v169);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v140, 0, 1, v142);
      }
      uint64_t v170 = v16[9];
      uint64_t v171 = (void *)(a1 + v170);
      uint64_t v172 = (void *)(a2 + v170);
      uint64_t v173 = type metadata accessor for TranscriptProtoFollowUpAction(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v172, 1, v173))
      {
        uint64_t v174 = sub_253462A5C(&qword_269CE0468);
        memcpy(v171, v172, *(void *)(*(void *)(v174 - 8) + 64));
      }
      else
      {
        uint64_t v175 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v172, 1, v175))
        {
          uint64_t v176 = sub_253462A5C(&qword_269CE0460);
          memcpy(v171, v172, *(void *)(*(void *)(v176 - 8) + 64));
        }
        else
        {
          uint64_t v360 = v16;
          uint64_t v230 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v172, 1, v230))
          {
            uint64_t v231 = sub_253462A5C(&qword_269CE0458);
            memcpy(v171, v172, *(void *)(*(void *)(v231 - 8) + 64));
          }
          else
          {
            *uint64_t v171 = *v172;
            v171[1] = v172[1];
            uint64_t v351 = v230;
            uint64_t v263 = v172[2];
            unint64_t v264 = v172[3];
            swift_bridgeObjectRetain();
            sub_25348A9C8(v263, v264);
            v171[2] = v263;
            v171[3] = v264;
            v171[4] = v172[4];
            uint64_t v265 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
            uint64_t v266 = (char *)v171 + v265;
            uint64_t v267 = (char *)v172 + v265;
            uint64_t v268 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v268 - 8) + 16))(v266, v267, v268);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v171, 0, 1, v351);
          }
          uint64_t v269 = *(int *)(v175 + 20);
          uint64_t v270 = (char *)v171 + v269;
          uint64_t v271 = (char *)v172 + v269;
          uint64_t v272 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v272 - 8) + 16))(v270, v271, v272);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v171, 0, 1, v175);
          uint64_t v16 = v360;
        }
        uint64_t v273 = *(int *)(v173 + 20);
        uint64_t v274 = (char *)v171 + v273;
        uint64_t v275 = (char *)v172 + v273;
        uint64_t v276 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v276 - 8) + 16))(v274, v275, v276);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v171, 0, 1, v173);
      }
      uint64_t v277 = v16[10];
      uint64_t v278 = (void *)(a1 + v277);
      uint64_t v279 = (void *)(a2 + v277);
      *uint64_t v278 = *v279;
      v278[1] = v279[1];
      uint64_t v280 = v16[11];
      uint64_t v281 = a1 + v280;
      uint64_t v282 = a2 + v280;
      uint64_t v283 = sub_253B07160();
      uint64_t v284 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v283 - 8) + 16);
      swift_bridgeObjectRetain();
      v284(v281, v282, v283);
      goto LABEL_158;
  }
}

void *initializeWithTake for TranscriptProtoStatementOutcome(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_253462A5C(&qword_269CE04B0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    goto LABEL_79;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *a1 = *a2;
      uint64_t v14 = type metadata accessor for TranscriptProtoActionConfirmation(0);
      uint64_t v15 = *(int *)(v14 + 20);
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v18))
      {
        uint64_t v19 = sub_253462A5C(&qword_269CE0480);
        memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        uint64_t v58 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v17, 1, v58))
        {
          uint64_t v59 = sub_253462A5C(&qword_269CE0478);
          memcpy(v16, v17, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
          v16[16] = v17[16];
          uint64_t v88 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
          uint64_t v89 = *(int *)(v88 + 24);
          __dst = &v16[v89];
          uint64_t v169 = v88;
          uint64_t v90 = &v17[v89];
          uint64_t v167 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
          uint64_t v171 = v58;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v90, 1, v167))
          {
            uint64_t v91 = sub_253462A5C(&qword_269CE0470);
            memcpy(__dst, v90, *(void *)(*(void *)(v91 - 8) + 64));
          }
          else
          {
            unsigned char *__dst = *v90;
            uint64_t v113 = *(int *)(v167 + 20);
            uint64_t v166 = &__dst[v113];
            uint64_t v114 = &v90[v113];
            uint64_t v115 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v115 - 8) + 32))(v166, v114, v115);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v167);
          }
          uint64_t v116 = *(int *)(v169 + 28);
          uint64_t v117 = &v16[v116];
          uint64_t v118 = &v17[v116];
          uint64_t v119 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v119 - 8) + 32))(v117, v118, v119);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v171);
        }
        uint64_t v120 = *(int *)(v18 + 20);
        uint64_t v121 = &v16[v120];
        uint64_t v122 = &v17[v120];
        uint64_t v123 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v123 - 8) + 32))(v121, v122, v123);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v16, 0, 1, v18);
      }
      goto LABEL_31;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
      goto LABEL_78;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
      uint64_t v24 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
      uint64_t v25 = *(int *)(v24 + 24);
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      uint64_t v28 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v28)) {
        goto LABEL_10;
      }
      goto LABEL_27;
    case 4u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v30 = a2[3];
      a1[2] = a2[2];
      a1[3] = v30;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v31 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      uint64_t v34 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
      goto LABEL_78;
    case 5u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v24 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
      uint64_t v35 = *(int *)(v24 + 24);
      uint64_t v26 = (char *)a1 + v35;
      uint64_t v27 = (char *)a2 + v35;
      uint64_t v28 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v27, 1, v28))
      {
LABEL_10:
        uint64_t v29 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
LABEL_27:
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v26, 0, 1, v28);
      }
      uint64_t v60 = *(int *)(v24 + 28);
      uint64_t v61 = (char *)a1 + v60;
      uint64_t v62 = (char *)a2 + v60;
      uint64_t v63 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
      goto LABEL_78;
    case 6u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v14 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
      uint64_t v36 = *(int *)(v14 + 20);
      uint64_t v37 = (char *)a1 + v36;
      uint64_t v38 = (char *)a2 + v36;
      uint64_t v39 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v38, 1, v39))
      {
        uint64_t v40 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v37, 0, 1, v39);
      }
LABEL_31:
      uint64_t v64 = *(int *)(v14 + 24);
      uint64_t v65 = (char *)a1 + v64;
      uint64_t v66 = (char *)a2 + v64;
      uint64_t v67 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v65, v66, v67);
      goto LABEL_78;
    case 7u:
      uint64_t v41 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v41))
      {
        uint64_t v42 = sub_253462A5C(&qword_269CE0498);
        memcpy(a1, a2, *(void *)(*(void *)(v42 - 8) + 64));
        goto LABEL_77;
      }
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v94 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v94))
        {
          uint64_t v95 = sub_253462A5C(&qword_269CE0490);
          memcpy(a1, a2, *(void *)(*(void *)(v95 - 8) + 64));
LABEL_74:
          uint64_t v153 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          int v154 = (char *)a1 + v153;
          uint64_t v155 = (char *)a2 + v153;
          uint64_t v156 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 32))(v154, v155, v156);
          goto LABEL_75;
        }
        int v138 = swift_getEnumCaseMultiPayload();
        if (v138 == 1)
        {
          uint64_t v143 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v143))
          {
            uint64_t v144 = sub_253462A5C(&qword_269CE0488);
            memcpy(a1, a2, *(void *)(*(void *)(v144 - 8) + 64));
          }
          else
          {
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v145 = *(int *)(v143 + 20);
            uint64_t v146 = (char *)a1 + v145;
            uint64_t v147 = (char *)a2 + v145;
            uint64_t v148 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 32))(v146, v147, v148);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v143);
          }
          uint64_t v149 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v150 = (char *)a1 + v149;
          uint64_t v151 = (char *)a2 + v149;
          uint64_t v152 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 32))(v150, v151, v152);
        }
        else
        {
          if (v138)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v94 - 8) + 64));
LABEL_73:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v94);
            goto LABEL_74;
          }
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v139 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v140 = (char *)a1 + v139;
          uint64_t v141 = (char *)a2 + v139;
          uint64_t v142 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v140, v141, v142);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_73;
      }
      if (EnumCaseMultiPayload == 1)
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v96 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
        uint64_t v97 = (char *)a1 + v96;
        uint64_t v98 = (char *)a2 + v96;
        uint64_t v99 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(v97, v98, v99);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v41 - 8) + 64));
          goto LABEL_76;
        }
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v69 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
        uint64_t v70 = (char *)a1 + v69;
        uint64_t v71 = (char *)a2 + v69;
        uint64_t v72 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v70, v71, v72);
      }
LABEL_75:
      swift_storeEnumTagMultiPayload();
LABEL_76:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v41);
LABEL_77:
      uint64_t v157 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
      uint64_t v158 = (char *)a1 + v157;
      uint64_t v159 = (char *)a2 + v157;
      uint64_t v160 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 32))(v158, v159, v160);
LABEL_78:
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_79:
      uint64_t v161 = *(int *)(a3 + 20);
      uint64_t v162 = (char *)a1 + v161;
      uint64_t v163 = (char *)a2 + v161;
      uint64_t v164 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 32))(v162, v163, v164);
      return a1;
    case 8u:
      *a1 = *a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      uint64_t v43 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
      uint64_t v44 = (char *)a1 + v43;
      uint64_t v45 = (char *)a2 + v43;
      uint64_t v46 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
      goto LABEL_78;
    case 9u:
      uint64_t v47 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v47))
      {
        uint64_t v48 = sub_253462A5C(&qword_269CE04A8);
        memcpy(a1, a2, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        uint64_t v73 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 1, v73))
        {
          uint64_t v74 = sub_253462A5C(&qword_269CE04A0);
          memcpy(a1, a2, *(void *)(*(void *)(v74 - 8) + 64));
        }
        else
        {
          uint64_t v87 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)a2, 16, v87))
          {
            memcpy(a1, a2, *(void *)(*(void *)(v73 - 8) + 64));
          }
          else
          {
            long long v100 = *((_OWORD *)a2 + 1);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *((_OWORD *)a1 + 1) = v100;
            a1[4] = a2[4];
            uint64_t v101 = *(int *)(v87 + 28);
            uint64_t v102 = (char *)a1 + v101;
            uint64_t v103 = (char *)a2 + v101;
            uint64_t v104 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 32))(v102, v103, v104);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 16, v87);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v73);
        }
        uint64_t v105 = *(int *)(v47 + 20);
        uint64_t v106 = (char *)a1 + v105;
        uint64_t v107 = (char *)a2 + v105;
        uint64_t v108 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 32))(v106, v107, v108);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)a1, 0, 1, v47);
      }
      uint64_t v109 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
      uint64_t v110 = (char *)a1 + v109;
      uint64_t v111 = (char *)a2 + v109;
      uint64_t v112 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 32))(v110, v111, v112);
      goto LABEL_78;
    case 0xAu:
      *a1 = *a2;
      uint64_t v49 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
      uint64_t v50 = (char *)a1 + v49;
      uint64_t v51 = (char *)a2 + v49;
      uint64_t v52 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
      goto LABEL_78;
    default:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(_WORD *)((char *)a1 + 1) = *(_WORD *)((char *)a2 + 1);
      int v8 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
      uint64_t v9 = v8[7];
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v11, 1, v12))
      {
        uint64_t v13 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v10, 0, 1, v12);
      }
      uint64_t v53 = v8[8];
      uint64_t v54 = (_OWORD *)((char *)a1 + v53);
      uint64_t v55 = (_OWORD *)((char *)a2 + v53);
      uint64_t v56 = type metadata accessor for TranscriptProtoUndoContext(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v55, 1, v56))
      {
        uint64_t v57 = sub_253462A5C(&qword_269CE0450);
        memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        long long v75 = v55[1];
        *uint64_t v54 = *v55;
        v54[1] = v75;
        v54[2] = v55[2];
        uint64_t v76 = *(int *)(v56 + 28);
        uint64_t v77 = (char *)v54 + v76;
        uint64_t v78 = (char *)v55 + v76;
        uint64_t v79 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v54, 0, 1, v56);
      }
      uint64_t v80 = v8[9];
      uint64_t v81 = (_OWORD *)((char *)a1 + v80);
      uint64_t v82 = (_OWORD *)((char *)a2 + v80);
      uint64_t v83 = type metadata accessor for TranscriptProtoFollowUpAction(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v82, 1, v83))
      {
        uint64_t v84 = sub_253462A5C(&qword_269CE0468);
        memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
      }
      else
      {
        uint64_t v85 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v82, 1, v85))
        {
          uint64_t v86 = sub_253462A5C(&qword_269CE0460);
          memcpy(v81, v82, *(void *)(*(void *)(v86 - 8) + 64));
        }
        else
        {
          uint64_t v92 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v82, 1, v92))
          {
            uint64_t v93 = sub_253462A5C(&qword_269CE0458);
            memcpy(v81, v82, *(void *)(*(void *)(v93 - 8) + 64));
          }
          else
          {
            long long v124 = v82[1];
            _OWORD *v81 = *v82;
            v81[1] = v124;
            *((void *)v81 + 4) = *((void *)v82 + 4);
            uint64_t v125 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
            uint64_t v170 = (char *)v82 + v125;
            uint64_t v172 = (char *)v81 + v125;
            uint64_t v126 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 32))(v172, v170, v126);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v81, 0, 1, v92);
          }
          uint64_t v127 = *(int *)(v85 + 20);
          uint64_t v128 = (char *)v81 + v127;
          uint64_t v173 = (char *)v82 + v127;
          uint64_t v129 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 32))(v128, v173, v129);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v81, 0, 1, v85);
        }
        uint64_t v130 = *(int *)(v83 + 20);
        uint64_t v131 = (char *)v81 + v130;
        uint64_t v132 = (char *)v82 + v130;
        uint64_t v133 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 32))(v131, v132, v133);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v81, 0, 1, v83);
      }
      *(_OWORD *)((char *)a1 + v8[10]) = *(_OWORD *)((char *)a2 + v8[10]);
      uint64_t v134 = v8[11];
      uint64_t v135 = (char *)a1 + v134;
      uint64_t v136 = (char *)a2 + v134;
      uint64_t v137 = sub_253B07160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v135, v136, v137);
      goto LABEL_78;
  }
}

uint64_t assignWithTake for TranscriptProtoStatementOutcome(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  int v7 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a1, 1, v6);
  int v8 = _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)a1 = *(void *)a2;
          uint64_t v22 = type metadata accessor for TranscriptProtoActionConfirmation(0);
          uint64_t v23 = *(int *)(v22 + 20);
          uint64_t v24 = (unsigned char *)(a1 + v23);
          uint64_t v25 = (unsigned char *)(a2 + v23);
          uint64_t v26 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v26))
          {
            uint64_t v27 = sub_253462A5C(&qword_269CE0480);
            memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
          }
          else
          {
            uint64_t v105 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v25, 1, v105))
            {
              uint64_t v106 = sub_253462A5C(&qword_269CE0478);
              memcpy(v24, v25, *(void *)(*(void *)(v106 - 8) + 64));
            }
            else
            {
              *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
              v24[16] = v25[16];
              uint64_t v156 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
              uint64_t v157 = *(int *)(v156 + 24);
              __dst = &v24[v157];
              uint64_t v327 = v156;
              uint64_t v158 = &v25[v157];
              uint64_t v323 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
              uint64_t v331 = v105;
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v158, 1, v323))
              {
                uint64_t v159 = sub_253462A5C(&qword_269CE0470);
                memcpy(__dst, v158, *(void *)(*(void *)(v159 - 8) + 64));
              }
              else
              {
                unsigned char *__dst = *v158;
                uint64_t v199 = *(int *)(v323 + 20);
                uint64_t v321 = &__dst[v199];
                uint64_t v200 = &v158[v199];
                uint64_t v201 = sub_253B07160();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v201 - 8) + 32))(v321, v200, v201);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v323);
              }
              uint64_t v202 = *(int *)(v327 + 28);
              uint64_t v203 = &v24[v202];
              uint64_t v204 = &v25[v202];
              uint64_t v205 = sub_253B07160();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v205 - 8) + 32))(v203, v204, v205);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v331);
            }
            uint64_t v206 = *(int *)(v26 + 20);
            uint64_t v207 = &v24[v206];
            uint64_t v208 = &v25[v206];
            uint64_t v209 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v209 - 8) + 32))(v207, v208, v209);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v24, 0, 1, v26);
          }
          goto LABEL_54;
        case 2u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v28 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
          uint64_t v29 = a1 + v28;
          uint64_t v30 = a2 + v28;
          uint64_t v31 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
          goto LABEL_149;
        case 3u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
          uint64_t v32 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
          uint64_t v33 = *(int *)(v32 + 24);
          uint64_t v34 = (void *)(a1 + v33);
          uint64_t v35 = (const void *)(a2 + v33);
          uint64_t v36 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v35, 1, v36)) {
            goto LABEL_17;
          }
          goto LABEL_50;
        case 4u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v38 = *(void *)(a2 + 24);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = v38;
          *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
          uint64_t v39 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
          uint64_t v40 = a1 + v39;
          uint64_t v41 = a2 + v39;
          uint64_t v42 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
          goto LABEL_149;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          uint64_t v32 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
          uint64_t v43 = *(int *)(v32 + 24);
          uint64_t v34 = (void *)(a1 + v43);
          uint64_t v35 = (const void *)(a2 + v43);
          uint64_t v36 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v35, 1, v36))
          {
LABEL_17:
            uint64_t v37 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
          }
          else
          {
LABEL_50:
            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v34, 0, 1, v36);
          }
          uint64_t v107 = *(int *)(v32 + 28);
          uint64_t v108 = a1 + v107;
          uint64_t v109 = a2 + v107;
          uint64_t v110 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v110 - 8) + 32))(v108, v109, v110);
          goto LABEL_149;
        case 6u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v22 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
          uint64_t v44 = *(int *)(v22 + 20);
          uint64_t v45 = (void *)(a1 + v44);
          uint64_t v46 = (const void *)(a2 + v44);
          uint64_t v47 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v46, 1, v47))
          {
            uint64_t v48 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v45, 0, 1, v47);
          }
LABEL_54:
          uint64_t v111 = *(int *)(v22 + 24);
          uint64_t v112 = a1 + v111;
          uint64_t v113 = a2 + v111;
          uint64_t v114 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 32))(v112, v113, v114);
          goto LABEL_149;
        case 7u:
          uint64_t v49 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v49))
          {
            uint64_t v50 = sub_253462A5C(&qword_269CE0498);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v50 - 8) + 64));
            goto LABEL_148;
          }
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload != 2)
          {
            if (EnumCaseMultiPayload == 1)
            {
              *(unsigned char *)a1 = *(unsigned char *)a2;
              uint64_t v177 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
              uint64_t v178 = a1 + v177;
              uint64_t v179 = a2 + v177;
              uint64_t v180 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v180 - 8) + 32))(v178, v179, v180);
            }
            else
            {
              if (EnumCaseMultiPayload)
              {
                memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v49 - 8) + 64));
                goto LABEL_147;
              }
              *(unsigned char *)a1 = *(unsigned char *)a2;
              uint64_t v116 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
              uint64_t v117 = a1 + v116;
              uint64_t v118 = a2 + v116;
              uint64_t v119 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v119 - 8) + 32))(v117, v118, v119);
            }
LABEL_146:
            swift_storeEnumTagMultiPayload();
LABEL_147:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v49);
LABEL_148:
            uint64_t v296 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
            uint64_t v297 = a1 + v296;
            uint64_t v298 = a2 + v296;
            uint64_t v299 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v299 - 8) + 32))(v297, v298, v299);
LABEL_149:
            swift_storeEnumTagMultiPayload();
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v6);
            goto LABEL_159;
          }
          uint64_t v175 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v175))
          {
            uint64_t v176 = sub_253462A5C(&qword_269CE0490);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v176 - 8) + 64));
LABEL_145:
            uint64_t v292 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
            uint64_t v293 = a1 + v292;
            uint64_t v294 = a2 + v292;
            uint64_t v295 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v295 - 8) + 32))(v293, v294, v295);
            goto LABEL_146;
          }
          int v232 = swift_getEnumCaseMultiPayload();
          if (v232 == 1)
          {
            uint64_t v280 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v280))
            {
              uint64_t v281 = sub_253462A5C(&qword_269CE0488);
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v281 - 8) + 64));
            }
            else
            {
              *(unsigned char *)a1 = *(unsigned char *)a2;
              uint64_t v284 = *(int *)(v280 + 20);
              uint64_t v285 = a1 + v284;
              uint64_t v286 = a2 + v284;
              uint64_t v287 = sub_253B07160();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v287 - 8) + 32))(v285, v286, v287);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v280);
            }
            uint64_t v288 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
            uint64_t v289 = a1 + v288;
            uint64_t v290 = a2 + v288;
            uint64_t v291 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v291 - 8) + 32))(v289, v290, v291);
          }
          else
          {
            if (v232)
            {
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v175 - 8) + 64));
LABEL_144:
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v175);
              goto LABEL_145;
            }
            *(_OWORD *)a1 = *(_OWORD *)a2;
            uint64_t v233 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
            uint64_t v234 = a1 + v233;
            uint64_t v235 = a2 + v233;
            uint64_t v236 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v236 - 8) + 32))(v234, v235, v236);
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_144;
        case 8u:
          *(void *)a1 = *(void *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          uint64_t v51 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
          uint64_t v52 = a1 + v51;
          uint64_t v53 = a2 + v51;
          uint64_t v54 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
          goto LABEL_149;
        case 9u:
          uint64_t v55 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v55))
          {
            uint64_t v56 = sub_253462A5C(&qword_269CE04A8);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v56 - 8) + 64));
          }
          else
          {
            uint64_t v120 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v120))
            {
              uint64_t v121 = sub_253462A5C(&qword_269CE04A0);
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v121 - 8) + 64));
            }
            else
            {
              uint64_t v160 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 16, v160))
              {
                memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v120 - 8) + 64));
              }
              else
              {
                long long v182 = *(_OWORD *)(a2 + 16);
                *(_OWORD *)a1 = *(_OWORD *)a2;
                *(_OWORD *)(a1 + 16) = v182;
                *(void *)(a1 + 32) = *(void *)(a2 + 32);
                uint64_t v183 = *(int *)(v160 + 28);
                uint64_t v184 = a1 + v183;
                uint64_t v185 = a2 + v183;
                uint64_t v186 = sub_253B07160();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v186 - 8) + 32))(v184, v185, v186);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 16, v160);
              }
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v120);
            }
            uint64_t v187 = *(int *)(v55 + 20);
            uint64_t v188 = a1 + v187;
            uint64_t v189 = a2 + v187;
            uint64_t v190 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v190 - 8) + 32))(v188, v189, v190);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v55);
          }
          uint64_t v191 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
          uint64_t v192 = a1 + v191;
          uint64_t v193 = a2 + v191;
          uint64_t v194 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v194 - 8) + 32))(v192, v193, v194);
          goto LABEL_149;
        case 0xAu:
          *(void *)a1 = *(void *)a2;
          uint64_t v57 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
          uint64_t v58 = a1 + v57;
          uint64_t v59 = a2 + v57;
          uint64_t v60 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 32))(v58, v59, v60);
          goto LABEL_149;
        default:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
          uint64_t v9 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
          uint64_t v10 = v9[7];
          uint64_t v11 = (void *)(a1 + v10);
          uint64_t v12 = (const void *)(a2 + v10);
          uint64_t v13 = sub_253B08E50();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v12, 1, v13))
          {
            uint64_t v14 = sub_253462A5C(&qword_269CDCBC8);
            memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v11, 0, 1, v13);
          }
          uint64_t v61 = v9[8];
          uint64_t v62 = (_OWORD *)(a1 + v61);
          uint64_t v63 = (_OWORD *)(a2 + v61);
          uint64_t v64 = type metadata accessor for TranscriptProtoUndoContext(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v63, 1, v64))
          {
            uint64_t v65 = sub_253462A5C(&qword_269CE0450);
            memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
          }
          else
          {
            long long v122 = v63[1];
            *uint64_t v62 = *v63;
            v62[1] = v122;
            v62[2] = v63[2];
            uint64_t v123 = *(int *)(v64 + 28);
            long long v124 = (char *)v62 + v123;
            uint64_t v125 = (char *)v63 + v123;
            uint64_t v126 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 32))(v124, v125, v126);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v62, 0, 1, v64);
          }
          uint64_t v127 = v9[9];
          uint64_t v128 = (_OWORD *)(a1 + v127);
          uint64_t v129 = (_OWORD *)(a2 + v127);
          uint64_t v130 = type metadata accessor for TranscriptProtoFollowUpAction(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v129, 1, v130))
          {
            uint64_t v131 = sub_253462A5C(&qword_269CE0468);
            memcpy(v128, v129, *(void *)(*(void *)(v131 - 8) + 64));
          }
          else
          {
            uint64_t v132 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
            if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v129, 1, v132))
            {
              uint64_t v133 = sub_253462A5C(&qword_269CE0460);
              memcpy(v128, v129, *(void *)(*(void *)(v133 - 8) + 64));
            }
            else
            {
              uint64_t v161 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
              if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v129, 1, v161))
              {
                uint64_t v162 = sub_253462A5C(&qword_269CE0458);
                memcpy(v128, v129, *(void *)(*(void *)(v162 - 8) + 64));
              }
              else
              {
                long long v210 = v129[1];
                *uint64_t v128 = *v129;
                v128[1] = v210;
                *((void *)v128 + 4) = *((void *)v129 + 4);
                uint64_t v211 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0)
                              + 28);
                uint64_t v329 = (char *)v129 + v211;
                uint64_t v333 = (char *)v128 + v211;
                uint64_t v212 = sub_253B07160();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v212 - 8) + 32))(v333, v329, v212);
                _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v128, 0, 1, v161);
              }
              uint64_t v213 = *(int *)(v132 + 20);
              uint64_t v214 = (char *)v128 + v213;
              uint64_t v334 = (char *)v129 + v213;
              uint64_t v215 = sub_253B07160();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v215 - 8) + 32))(v214, v334, v215);
              _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v128, 0, 1, v132);
            }
            uint64_t v216 = *(int *)(v130 + 20);
            uint64_t v217 = (char *)v128 + v216;
            uint64_t v218 = (char *)v129 + v216;
            uint64_t v219 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 32))(v217, v218, v219);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v128, 0, 1, v130);
          }
          *(_OWORD *)(a1 + v9[10]) = *(_OWORD *)(a2 + v9[10]);
          uint64_t v220 = v9[11];
          uint64_t v221 = a1 + v220;
          uint64_t v222 = a2 + v220;
          uint64_t v223 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v223 - 8) + 32))(v221, v222, v223);
          goto LABEL_149;
      }
    }
LABEL_8:
    uint64_t v15 = sub_253462A5C(&qword_269CE04B0);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_159;
  }
  if (v8)
  {
    sub_2536FA73C();
    goto LABEL_8;
  }
  if (a1 == a2) {
    goto LABEL_159;
  }
  sub_2536FA73C();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(void *)a1 = *(void *)a2;
      uint64_t v66 = type metadata accessor for TranscriptProtoActionConfirmation(0);
      uint64_t v67 = *(int *)(v66 + 20);
      uint64_t v68 = (unsigned char *)(a1 + v67);
      uint64_t v69 = (unsigned char *)(a2 + v67);
      uint64_t v70 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v69, 1, v70))
      {
        uint64_t v71 = sub_253462A5C(&qword_269CE0480);
        memcpy(v68, v69, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        uint64_t v139 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v69, 1, v139))
        {
          uint64_t v140 = sub_253462A5C(&qword_269CE0478);
          memcpy(v68, v69, *(void *)(*(void *)(v140 - 8) + 64));
        }
        else
        {
          *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
          v68[16] = v69[16];
          uint64_t v195 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
          uint64_t v196 = *(int *)(v195 + 24);
          __dsta = &v68[v196];
          uint64_t v328 = v195;
          uint64_t v197 = &v69[v196];
          uint64_t v324 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
          uint64_t v332 = v139;
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v197, 1, v324))
          {
            uint64_t v198 = sub_253462A5C(&qword_269CE0470);
            memcpy(__dsta, v197, *(void *)(*(void *)(v198 - 8) + 64));
          }
          else
          {
            unsigned char *__dsta = *v197;
            uint64_t v250 = *(int *)(v324 + 20);
            uint64_t v322 = &__dsta[v250];
            uint64_t v251 = &v197[v250];
            uint64_t v252 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v252 - 8) + 32))(v322, v251, v252);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dsta, 0, 1, v324);
          }
          uint64_t v253 = *(int *)(v328 + 28);
          uint64_t v254 = &v68[v253];
          uint64_t v255 = &v69[v253];
          uint64_t v256 = sub_253B07160();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v256 - 8) + 32))(v254, v255, v256);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v68, 0, 1, v332);
        }
        uint64_t v257 = *(int *)(v70 + 20);
        uint64_t v258 = &v68[v257];
        uint64_t v259 = &v69[v257];
        uint64_t v260 = sub_253B07160();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v260 - 8) + 32))(v258, v259, v260);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v68, 0, 1, v70);
      }
      goto LABEL_75;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v72 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
      uint64_t v73 = a1 + v72;
      uint64_t v74 = a2 + v72;
      uint64_t v75 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
      goto LABEL_158;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v76 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
      uint64_t v77 = *(int *)(v76 + 24);
      uint64_t v78 = (void *)(a1 + v77);
      uint64_t v79 = (const void *)(a2 + v77);
      uint64_t v80 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v79, 1, v80)) {
        goto LABEL_36;
      }
      goto LABEL_71;
    case 4u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v82 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v82;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v83 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
      uint64_t v84 = a1 + v83;
      uint64_t v85 = a2 + v83;
      uint64_t v86 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 32))(v84, v85, v86);
      goto LABEL_158;
    case 5u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v76 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
      uint64_t v87 = *(int *)(v76 + 24);
      uint64_t v78 = (void *)(a1 + v87);
      uint64_t v79 = (const void *)(a2 + v87);
      uint64_t v80 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v79, 1, v80))
      {
LABEL_36:
        uint64_t v81 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v78, v79, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
LABEL_71:
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v80 - 8) + 32))(v78, v79, v80);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v78, 0, 1, v80);
      }
      uint64_t v141 = *(int *)(v76 + 28);
      uint64_t v142 = a1 + v141;
      uint64_t v143 = a2 + v141;
      uint64_t v144 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v144 - 8) + 32))(v142, v143, v144);
      goto LABEL_158;
    case 6u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v66 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
      uint64_t v88 = *(int *)(v66 + 20);
      uint64_t v89 = (void *)(a1 + v88);
      uint64_t v90 = (const void *)(a2 + v88);
      uint64_t v91 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v90, 1, v91))
      {
        uint64_t v92 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v89, v90, *(void *)(*(void *)(v92 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v91 - 8) + 32))(v89, v90, v91);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v89, 0, 1, v91);
      }
LABEL_75:
      uint64_t v145 = *(int *)(v66 + 24);
      uint64_t v146 = a1 + v145;
      uint64_t v147 = a2 + v145;
      uint64_t v148 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v148 - 8) + 32))(v146, v147, v148);
      goto LABEL_158;
    case 7u:
      uint64_t v93 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v93))
      {
        uint64_t v94 = sub_253462A5C(&qword_269CE0498);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v94 - 8) + 64));
        goto LABEL_157;
      }
      int v149 = swift_getEnumCaseMultiPayload();
      if (v149 == 2)
      {
        uint64_t v226 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v226))
        {
          uint64_t v227 = sub_253462A5C(&qword_269CE0490);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v227 - 8) + 64));
LABEL_154:
          uint64_t v308 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v309 = a1 + v308;
          uint64_t v310 = a2 + v308;
          uint64_t v311 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v311 - 8) + 32))(v309, v310, v311);
          goto LABEL_155;
        }
        int v275 = swift_getEnumCaseMultiPayload();
        if (v275 == 1)
        {
          uint64_t v282 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v282))
          {
            uint64_t v283 = sub_253462A5C(&qword_269CE0488);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v283 - 8) + 64));
          }
          else
          {
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v300 = *(int *)(v282 + 20);
            uint64_t v301 = a1 + v300;
            uint64_t v302 = a2 + v300;
            uint64_t v303 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v303 - 8) + 32))(v301, v302, v303);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v282);
          }
          uint64_t v304 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v305 = a1 + v304;
          uint64_t v306 = a2 + v304;
          uint64_t v307 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v307 - 8) + 32))(v305, v306, v307);
        }
        else
        {
          if (v275)
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v226 - 8) + 64));
LABEL_153:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v226);
            goto LABEL_154;
          }
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v276 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v277 = a1 + v276;
          uint64_t v278 = a2 + v276;
          uint64_t v279 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v279 - 8) + 32))(v277, v278, v279);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_153;
      }
      if (v149 == 1)
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v228 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
        uint64_t v229 = a1 + v228;
        uint64_t v230 = a2 + v228;
        uint64_t v231 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v231 - 8) + 32))(v229, v230, v231);
      }
      else
      {
        if (v149)
        {
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v93 - 8) + 64));
          goto LABEL_156;
        }
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v150 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
        uint64_t v151 = a1 + v150;
        uint64_t v152 = a2 + v150;
        uint64_t v153 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v153 - 8) + 32))(v151, v152, v153);
      }
LABEL_155:
      swift_storeEnumTagMultiPayload();
LABEL_156:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v93);
LABEL_157:
      uint64_t v312 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
      uint64_t v313 = a1 + v312;
      uint64_t v314 = a2 + v312;
      uint64_t v315 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v315 - 8) + 32))(v313, v314, v315);
LABEL_158:
      swift_storeEnumTagMultiPayload();
LABEL_159:
      uint64_t v316 = *(int *)(a3 + 20);
      uint64_t v317 = a1 + v316;
      uint64_t v318 = a2 + v316;
      uint64_t v319 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v319 - 8) + 40))(v317, v318, v319);
      return a1;
    case 8u:
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      uint64_t v95 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
      uint64_t v96 = a1 + v95;
      uint64_t v97 = a2 + v95;
      uint64_t v98 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 32))(v96, v97, v98);
      goto LABEL_158;
    case 9u:
      uint64_t v99 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v99))
      {
        uint64_t v100 = sub_253462A5C(&qword_269CE04A8);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v100 - 8) + 64));
      }
      else
      {
        uint64_t v154 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v154))
        {
          uint64_t v155 = sub_253462A5C(&qword_269CE04A0);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v155 - 8) + 64));
        }
        else
        {
          uint64_t v181 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 16, v181))
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v154 - 8) + 64));
          }
          else
          {
            long long v237 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v237;
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            uint64_t v238 = *(int *)(v181 + 28);
            uint64_t v239 = a1 + v238;
            uint64_t v240 = a2 + v238;
            uint64_t v241 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v241 - 8) + 32))(v239, v240, v241);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 16, v181);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v154);
        }
        uint64_t v242 = *(int *)(v99 + 20);
        uint64_t v243 = a1 + v242;
        uint64_t v244 = a2 + v242;
        uint64_t v245 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v245 - 8) + 32))(v243, v244, v245);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v99);
      }
      uint64_t v246 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
      uint64_t v247 = a1 + v246;
      uint64_t v248 = a2 + v246;
      uint64_t v249 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v249 - 8) + 32))(v247, v248, v249);
      goto LABEL_158;
    case 0xAu:
      *(void *)a1 = *(void *)a2;
      uint64_t v101 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
      uint64_t v102 = a1 + v101;
      uint64_t v103 = a2 + v101;
      uint64_t v104 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 32))(v102, v103, v104);
      goto LABEL_158;
    default:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
      uint64_t v16 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
      uint64_t v17 = v16[7];
      uint64_t v18 = (void *)(a1 + v17);
      uint64_t v19 = (const void *)(a2 + v17);
      uint64_t v20 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v19, 1, v20))
      {
        uint64_t v21 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v18, 0, 1, v20);
      }
      uint64_t v134 = v16[8];
      uint64_t v135 = (_OWORD *)(a1 + v134);
      uint64_t v136 = (_OWORD *)(a2 + v134);
      uint64_t v137 = type metadata accessor for TranscriptProtoUndoContext(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v136, 1, v137))
      {
        uint64_t v138 = sub_253462A5C(&qword_269CE0450);
        memcpy(v135, v136, *(void *)(*(void *)(v138 - 8) + 64));
      }
      else
      {
        long long v163 = v136[1];
        _OWORD *v135 = *v136;
        v135[1] = v163;
        v135[2] = v136[2];
        uint64_t v164 = *(int *)(v137 + 28);
        uint64_t v165 = (char *)v135 + v164;
        uint64_t v166 = (char *)v136 + v164;
        uint64_t v167 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 32))(v165, v166, v167);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v135, 0, 1, v137);
      }
      uint64_t v168 = v16[9];
      uint64_t v169 = (_OWORD *)(a1 + v168);
      uint64_t v170 = (_OWORD *)(a2 + v168);
      uint64_t v171 = type metadata accessor for TranscriptProtoFollowUpAction(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v170, 1, v171))
      {
        uint64_t v172 = sub_253462A5C(&qword_269CE0468);
        memcpy(v169, v170, *(void *)(*(void *)(v172 - 8) + 64));
      }
      else
      {
        uint64_t v173 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v170, 1, v173))
        {
          uint64_t v174 = sub_253462A5C(&qword_269CE0460);
          memcpy(v169, v170, *(void *)(*(void *)(v174 - 8) + 64));
        }
        else
        {
          uint64_t v224 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v170, 1, v224))
          {
            uint64_t v225 = sub_253462A5C(&qword_269CE0458);
            memcpy(v169, v170, *(void *)(*(void *)(v225 - 8) + 64));
          }
          else
          {
            long long v261 = v170[1];
            *uint64_t v169 = *v170;
            v169[1] = v261;
            *((void *)v169 + 4) = *((void *)v170 + 4);
            uint64_t v262 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
            uint64_t v330 = (char *)v170 + v262;
            int v335 = (char *)v169 + v262;
            uint64_t v263 = sub_253B07160();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v263 - 8) + 32))(v335, v330, v263);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v169, 0, 1, v224);
          }
          uint64_t v264 = *(int *)(v173 + 20);
          uint64_t v265 = (char *)v169 + v264;
          uint64_t v336 = (char *)v170 + v264;
          uint64_t v266 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v266 - 8) + 32))(v265, v336, v266);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v169, 0, 1, v173);
        }
        uint64_t v267 = *(int *)(v171 + 20);
        uint64_t v268 = (char *)v169 + v267;
        uint64_t v269 = (char *)v170 + v267;
        uint64_t v270 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v270 - 8) + 32))(v268, v269, v270);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v169, 0, 1, v171);
      }
      *(_OWORD *)(a1 + v16[10]) = *(_OWORD *)(a2 + v16[10]);
      uint64_t v271 = v16[11];
      uint64_t v272 = a1 + v271;
      uint64_t v273 = a2 + v271;
      uint64_t v274 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v274 - 8) + 32))(v272, v273, v274);
      goto LABEL_158;
  }
}

uint64_t getEnumTagSinglePayload for TranscriptProtoStatementOutcome(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25386B814);
}

uint64_t sub_25386B814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25393FF10(a1, a2, a3, &qword_269CE04B0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoStatementOutcome(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25386B834);
}

uint64_t sub_25386B834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25393FF9C(a1, a2, a3, a4, &qword_269CE04B0);
}

void sub_25386B840(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoStatementOutcomeEnum(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
    return a1;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(void *)a1 = *(void *)a2;
      uint64_t v13 = type metadata accessor for TranscriptProtoActionConfirmation(0);
      uint64_t v14 = *(int *)(v13 + 20);
      uint64_t v15 = (void *)(a1 + v14);
      uint64_t v16 = (void *)(a2 + v14);
      uint64_t v17 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyle(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v17))
      {
        uint64_t v18 = sub_253462A5C(&qword_269CE0480);
        memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        uint64_t v67 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v16, 1, v67))
        {
          uint64_t v68 = sub_253462A5C(&qword_269CE0478);
          memcpy(v15, v16, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          uint64_t v189 = v67;
          uint64_t v97 = v16[1];
          void *v15 = *v16;
          v15[1] = v97;
          *((unsigned char *)v15 + 16) = *((unsigned char *)v16 + 16);
          uint64_t v192 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablement(0);
          uint64_t v98 = *(int *)(v192 + 24);
          __dst = (char *)v15 + v98;
          uint64_t v99 = (char *)v16 + v98;
          uint64_t v100 = type metadata accessor for TranscriptProtoActionConfirmationSystemStyleMontaraEnablementSource(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v99, 1, v100))
          {
            uint64_t v101 = sub_253462A5C(&qword_269CE0470);
            memcpy(__dst, v99, *(void *)(*(void *)(v101 - 8) + 64));
          }
          else
          {
            unsigned char *__dst = *v99;
            uint64_t v122 = *(int *)(v100 + 20);
            uint64_t v184 = &__dst[v122];
            uint64_t v123 = &v99[v122];
            uint64_t v124 = sub_253B07160();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v124 - 8) + 16))(v184, v123, v124);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)__dst, 0, 1, v100);
          }
          uint64_t v125 = *(int *)(v192 + 28);
          uint64_t v126 = (char *)v15 + v125;
          uint64_t v127 = (char *)v16 + v125;
          uint64_t v128 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 16))(v126, v127, v128);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v189);
        }
        uint64_t v129 = *(int *)(v17 + 20);
        uint64_t v130 = (char *)v15 + v129;
        uint64_t v131 = (char *)v16 + v129;
        uint64_t v132 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 16))(v130, v131, v132);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v15, 0, 1, v17);
      }
      goto LABEL_31;
    case 2u:
      uint64_t v19 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v19;
      uint64_t v20 = *(int *)(type metadata accessor for TranscriptProtoParameterNeedsValue(0) + 20);
      uint64_t v21 = a1 + v20;
      uint64_t v22 = a2 + v20;
      uint64_t v23 = sub_253B07160();
      uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v24(v21, v22, v23);
      goto LABEL_78;
    case 3u:
      uint64_t v25 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v25;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v26 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
      uint64_t v27 = *(int *)(v26 + 24);
      uint64_t v28 = (void *)(a1 + v27);
      uint64_t v29 = (const void *)(a2 + v27);
      uint64_t v30 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v30)) {
        goto LABEL_10;
      }
      goto LABEL_27;
    case 4u:
      uint64_t v32 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v32;
      uint64_t v33 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v33;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v34 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
      uint64_t v35 = a1 + v34;
      uint64_t v36 = a2 + v34;
      uint64_t v37 = sub_253B07160();
      uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38(v35, v36, v37);
      goto LABEL_78;
    case 5u:
      uint64_t v39 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v39;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v26 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
      uint64_t v40 = *(int *)(v26 + 24);
      uint64_t v28 = (void *)(a1 + v40);
      uint64_t v29 = (const void *)(a2 + v40);
      uint64_t v30 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v29, 1, v30))
      {
LABEL_10:
        uint64_t v31 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
LABEL_27:
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v28, 0, 1, v30);
      }
      uint64_t v69 = *(int *)(v26 + 28);
      uint64_t v70 = a1 + v69;
      uint64_t v71 = a2 + v69;
      uint64_t v72 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
      goto LABEL_78;
    case 6u:
      uint64_t v41 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v41;
      uint64_t v13 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
      uint64_t v42 = *(int *)(v13 + 20);
      uint64_t v43 = (void *)(a1 + v42);
      uint64_t v44 = (const void *)(a2 + v42);
      uint64_t v45 = sub_253B08E50();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v44, 1, v45))
      {
        uint64_t v46 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v43, 0, 1, v45);
      }
LABEL_31:
      uint64_t v73 = *(int *)(v13 + 24);
      uint64_t v74 = a1 + v73;
      uint64_t v75 = a2 + v73;
      uint64_t v76 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
      goto LABEL_78;
    case 7u:
      uint64_t v47 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v47))
      {
        uint64_t v48 = sub_253462A5C(&qword_269CE0498);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v48 - 8) + 64));
        goto LABEL_77;
      }
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v104 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v104))
        {
          uint64_t v105 = sub_253462A5C(&qword_269CE0490);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v105 - 8) + 64));
LABEL_74:
          uint64_t v174 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
          uint64_t v175 = a1 + v174;
          uint64_t v176 = a2 + v174;
          uint64_t v177 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v177 - 8) + 16))(v175, v176, v177);
          goto LABEL_75;
        }
        int v158 = swift_getEnumCaseMultiPayload();
        if (v158 == 1)
        {
          uint64_t v164 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v164))
          {
            uint64_t v165 = sub_253462A5C(&qword_269CE0488);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v165 - 8) + 64));
          }
          else
          {
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v166 = *(int *)(v164 + 20);
            uint64_t v167 = a1 + v166;
            uint64_t v168 = a2 + v166;
            uint64_t v169 = sub_253B07160();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v169 - 8) + 16))(v167, v168, v169);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v164);
          }
          uint64_t v170 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
          uint64_t v171 = a1 + v170;
          uint64_t v172 = a2 + v170;
          uint64_t v173 = sub_253B07160();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v173 - 8) + 16))(v171, v172, v173);
        }
        else
        {
          if (v158)
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v104 - 8) + 64));
LABEL_73:
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v104);
            goto LABEL_74;
          }
          uint64_t v159 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v159;
          uint64_t v160 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
          uint64_t v195 = a1 + v160;
          uint64_t v161 = a2 + v160;
          uint64_t v162 = sub_253B07160();
          long long v163 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v162 - 8) + 16);
          swift_bridgeObjectRetain();
          v163(v195, v161, v162);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_73;
      }
      if (EnumCaseMultiPayload == 1)
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v106 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
        uint64_t v107 = a1 + v106;
        uint64_t v108 = a2 + v106;
        uint64_t v109 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 16))(v107, v108, v109);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v47 - 8) + 64));
          goto LABEL_76;
        }
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v78 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
        uint64_t v79 = a1 + v78;
        uint64_t v80 = a2 + v78;
        uint64_t v81 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 16))(v79, v80, v81);
      }
LABEL_75:
      swift_storeEnumTagMultiPayload();
LABEL_76:
      _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v47);
LABEL_77:
      uint64_t v178 = *(int *)(type metadata accessor for TranscriptProtoActionRequirement(0) + 20);
      uint64_t v179 = a1 + v178;
      uint64_t v180 = a2 + v178;
      uint64_t v181 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v181 - 8) + 16))(v179, v180, v181);
LABEL_78:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 8u:
      uint64_t v49 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v49;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      uint64_t v50 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
      uint64_t v51 = a1 + v50;
      uint64_t v52 = a2 + v50;
      uint64_t v53 = sub_253B07160();
      uint64_t v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v54(v51, v52, v53);
      goto LABEL_78;
    case 9u:
      uint64_t v55 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v55))
      {
        uint64_t v56 = sub_253462A5C(&qword_269CE04A8);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        uint64_t v82 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 1, v82))
        {
          uint64_t v83 = sub_253462A5C(&qword_269CE04A0);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v83 - 8) + 64));
        }
        else
        {
          uint64_t v96 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0(a2, 16, v96))
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v82 - 8) + 64));
          }
          else
          {
            uint64_t v110 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v110;
            uint64_t v111 = *(void *)(a2 + 24);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(void *)(a1 + 24) = v111;
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            uint64_t v112 = *(int *)(v96 + 28);
            uint64_t v190 = a2 + v112;
            uint64_t v193 = a1 + v112;
            uint64_t v113 = sub_253B07160();
            __dstb = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __dstb(v193, v190, v113);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 16, v96);
          }
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v82);
        }
        uint64_t v114 = *(int *)(v55 + 20);
        uint64_t v115 = a1 + v114;
        uint64_t v116 = a2 + v114;
        uint64_t v117 = sub_253B07160();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 16))(v115, v116, v117);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0(a1, 0, 1, v55);
      }
      uint64_t v118 = *(int *)(type metadata accessor for TranscriptProtoActionFailure(0) + 20);
      uint64_t v119 = a1 + v118;
      uint64_t v120 = a2 + v118;
      uint64_t v121 = sub_253B07160();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 16))(v119, v120, v121);
      goto LABEL_78;
    case 0xAu:
      *(void *)a1 = *(void *)a2;
      uint64_t v57 = *(int *)(type metadata accessor for TranscriptProtoValueDisambiguation(0) + 20);
      uint64_t v58 = a1 + v57;
      uint64_t v59 = a2 + v57;
      uint64_t v60 = sub_253B07160();
      uint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 16);
      swift_bridgeObjectRetain();
      v61(v58, v59, v60);
      goto LABEL_78;
    default:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
      uint64_t v6 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
      uint64_t v7 = v6[7];
      int v8 = (void *)(a1 + v7);
      uint64_t v9 = (const void *)(a2 + v7);
      uint64_t v10 = sub_253B08E50();
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v9, 1, v10))
      {
        uint64_t v11 = sub_253462A5C(&qword_269CDCBC8);
        memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v8, 0, 1, v10);
      }
      uint64_t v62 = v6[8];
      uint64_t v63 = (void *)(a1 + v62);
      uint64_t v64 = (void *)(a2 + v62);
      uint64_t v65 = type metadata accessor for TranscriptProtoUndoContext(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v64, 1, v65))
      {
        uint64_t v66 = sub_253462A5C(&qword_269CE0450);
        memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        uint64_t v84 = v64[1];
        *uint64_t v63 = *v64;
        v63[1] = v84;
        uint64_t v85 = v64[3];
        v63[2] = v64[2];
        v63[3] = v85;
        uint64_t v191 = v6;
        uint64_t v86 = v64[5];
        v63[4] = v64[4];
        v63[5] = v86;
        uint64_t v87 = *(int *)(v65 + 28);
        __dsta = (char *)v64 + v87;
        uint64_t v188 = (char *)v63 + v87;
        uint64_t v88 = sub_253B07160();
        uint64_t v183 = *(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v6 = v191;
        swift_bridgeObjectRetain();
        v183(v188, __dsta, v88);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v63, 0, 1, v65);
      }
      uint64_t v89 = v6[9];
      uint64_t v90 = (void *)(a1 + v89);
      uint64_t v91 = (void *)(a2 + v89);
      uint64_t v92 = type metadata accessor for TranscriptProtoFollowUpAction(0);
      if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v91, 1, v92))
      {
        uint64_t v93 = sub_253462A5C(&qword_269CE0468);
        memcpy(v90, v91, *(void *)(*(void *)(v93 - 8) + 64));
      }
      else
      {
        uint64_t v94 = type metadata accessor for TranscriptProtoFollowUpActionExecutableAction(0);
        if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v91, 1, v94))
        {
          uint64_t v95 = sub_253462A5C(&qword_269CE0460);
          memcpy(v90, v91, *(void *)(*(void *)(v95 - 8) + 64));
        }
        else
        {
          uint64_t v102 = type metadata accessor for TranscriptProtoFollowUpActionExecutableActionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwet_0((uint64_t)v91, 1, v102))
          {
            uint64_t v103 = sub_253462A5C(&qword_269CE0458);
            memcpy(v90, v91, *(void *)(*(void *)(v103 - 8) + 64));
          }
          else
          {
            uint64_t v133 = v91[1];
            *uint64_t v90 = *v91;
            v90[1] = v133;
            uint64_t v194 = v6;
            uint64_t v134 = v91[2];
            unint64_t v135 = v91[3];
            swift_bridgeObjectRetain();
            sub_25348A9C8(v134, v135);
            v90[2] = v134;
            v90[3] = v135;
            v90[4] = v91[4];
            uint64_t v136 = *(int *)(type metadata accessor for TranscriptProtoFollowUpActionExecutableActionLinkAction(0) + 28);
            uint64_t v137 = (char *)v90 + v136;
            uint64_t v138 = (char *)v91 + v136;
            uint64_t v139 = sub_253B07160();
            uint64_t v140 = v138;
            uint64_t v6 = v194;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 16))(v137, v140, v139);
            _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v90, 0, 1, v102);
          }
          uint64_t v141 = *(int *)(v94 + 20);
          uint64_t v142 = (char *)v90 + v141;
          uint64_t v143 = (char *)v91 + v141;
          uint64_t v144 = sub_253B07160();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 16))(v142, v143, v144);
          _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v90, 0, 1, v94);
        }
        uint64_t v145 = *(int *)(v92 + 20);
        uint64_t v146 = (char *)v90 + v145;
        uint64_t v147 = (char *)v91 + v145;
        uint64_t v148 = sub_253B07160();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16))(v146, v147, v148);
        _s30IntelligenceFlowPlannerSupport23SessionCoordinatorErrorOwst_0((uint64_t)v90, 0, 1, v92);
      }
      uint64_t v149 = v6[10];
      uint64_t v150 = (void *)(a1 + v149);
      uint64_t v151 = (void *)(a2 + v149);
      uint64_t v152 = v151[1];
      void *v150 = *v151;
      v150[1] = v152;
      uint64_t v153 = v6[11];
      uint64_t v154 = a1 + v153;
      uint64_t v155 = a2 + v153;
      uint64_t v156 = sub_253B07160();
      uint64_t v157 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v156 - 8) + 16);
      swift_bridgeObjectRetain();
      v157(v154, v155, v156);
      goto LABEL_78;
  }
}